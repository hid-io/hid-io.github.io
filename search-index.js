var searchIndex = {};
searchIndex["aho_corasick"] = {"doc":"An implementation of the Aho-Corasick string search algorithm.","items":[[3,"Match","aho_corasick","Records a match in the search text.",null,null],[12,"pati","","The pattern index.",0,null],[12,"start","","The starting byte offset of the match in the search text.",0,null],[12,"end","","The ending byte offset of the match in the search text.",0,null],[3,"Matches","","An iterator of non-overlapping matches for in-memory text.",null,null],[3,"MatchesOverlapping","","An iterator of overlapping matches for in-memory text.",null,null],[3,"StreamMatches","","An iterator of non-overlapping matches for streaming text.",null,null],[3,"StreamMatchesOverlapping","","An iterator of overlapping matches for streaming text.",null,null],[3,"FullAcAutomaton","","A complete Aho-Corasick automaton.",null,null],[3,"AcAutomaton","","An Aho-Corasick finite automaton.",null,null],[3,"Dense","","State transitions that can be stored either sparsely or densely.",null,null],[3,"Sparse","","State transitions that are always sparse.",null,null],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"match"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",0,null],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"match"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"match"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",2,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",3,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"fullacautomaton"}}],[11,"new","","Build a new expanded Aho-Corasick automaton from an existing Aho-Corasick automaton.",5,{"inputs":[{"name":"acautomaton"}],"output":{"name":"fullacautomaton"}}],[11,"next_state","","",5,{"inputs":[{"name":"self"},{"name":"stateidx"},{"name":"u8"}],"output":{"name":"stateidx"}}],[11,"get_match","","",5,{"inputs":[{"name":"self"},{"name":"stateidx"},{"name":"usize"},{"name":"usize"}],"output":{"name":"match"}}],[11,"has_match","","",5,{"inputs":[{"name":"self"},{"name":"stateidx"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"start_bytes","","",5,null],[11,"patterns","","",5,null],[11,"pattern","","",5,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"p"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"StateIdx","","The integer type used for the state index.",null,null],[8,"Automaton","","An abstraction over automatons and their corresponding iterators. The type parameter `P` is the type of the pattern that was used to construct this Automaton.",null,null],[10,"next_state","","Return the next state given the current state and next character.",6,{"inputs":[{"name":"self"},{"name":"stateidx"},{"name":"u8"}],"output":{"name":"stateidx"}}],[10,"has_match","","Return true if and only if the given state and current pattern index indicate a match.",6,{"inputs":[{"name":"self"},{"name":"stateidx"},{"name":"usize"}],"output":{"name":"bool"}}],[10,"get_match","","Build a match given the current state, pattern index and input index.",6,{"inputs":[{"name":"self"},{"name":"stateidx"},{"name":"usize"},{"name":"usize"}],"output":{"name":"match"}}],[10,"start_bytes","","Return the set of bytes that have transitions in the root state.",6,null],[10,"patterns","","Returns all of the patterns matched by this automaton.",6,null],[10,"pattern","","Returns the pattern indexed at `i`.",6,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"p"}}],[11,"len","","Return the number of patterns in the automaton.",6,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the automaton has no patterns.",6,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"find","","Returns an iterator of non-overlapping matches in `s`.",6,{"inputs":[{"name":"self"},{"name":"q"}],"output":{"name":"matches"}}],[11,"find_overlapping","","Returns an iterator of overlapping matches in `s`.",6,{"inputs":[{"name":"self"},{"name":"q"}],"output":{"name":"matchesoverlapping"}}],[11,"stream_find","","Returns an iterator of non-overlapping matches in the given reader.",6,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"streammatches"}}],[11,"stream_find_overlapping","","Returns an iterator of overlapping matches in the given reader.",6,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"streammatchesoverlapping"}}],[8,"Transitions","","An abstraction over state transition strategies.",null,null],[10,"new","","Return a new state at the given depth.",7,{"inputs":[{"name":"u32"}],"output":{"name":"self"}}],[10,"goto","","Return the next state index given the next character.",7,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"stateidx"}}],[10,"set_goto","","Set the next state index for the character given.",7,{"inputs":[{"name":"self"},{"name":"u8"},{"name":"stateidx"}],"output":null}],[10,"heap_bytes","","The memory use in bytes (on the heap) of this set of transitions.",7,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"acautomaton"}}],[11,"new","","Create a new automaton from an iterator of patterns.",8,{"inputs":[{"name":"i"}],"output":{"name":"acautomaton"}}],[11,"with_transitions","","Create a new automaton from an iterator of patterns.",8,{"inputs":[{"name":"i"}],"output":{"name":"acautomaton"}}],[11,"into_full","","Build out the entire automaton into a single matrix.",8,{"inputs":[{"name":"self"}],"output":{"name":"fullacautomaton"}}],[11,"next_state","","",8,{"inputs":[{"name":"self"},{"name":"stateidx"},{"name":"u8"}],"output":{"name":"stateidx"}}],[11,"get_match","","",8,{"inputs":[{"name":"self"},{"name":"stateidx"},{"name":"usize"},{"name":"usize"}],"output":{"name":"match"}}],[11,"has_match","","",8,{"inputs":[{"name":"self"},{"name":"stateidx"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"start_bytes","","",8,null],[11,"patterns","","",8,null],[11,"pattern","","",8,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"p"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"dense"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",9,{"inputs":[{"name":"u32"}],"output":{"name":"dense"}}],[11,"goto","","",9,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"stateidx"}}],[11,"set_goto","","",9,{"inputs":[{"name":"self"},{"name":"u8"},{"name":"stateidx"}],"output":null}],[11,"heap_bytes","","",9,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"sparse"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",10,{"inputs":[{"name":"u32"}],"output":{"name":"sparse"}}],[11,"goto","","",10,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"stateidx"}}],[11,"set_goto","","",10,{"inputs":[{"name":"self"},{"name":"u8"},{"name":"stateidx"}],"output":null}],[11,"heap_bytes","","",10,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"from_iter","","Create an automaton from an iterator of strings.",8,{"inputs":[{"name":"t"}],"output":{"name":"acautomaton"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"len","","Return the number of patterns in the automaton.",6,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the automaton has no patterns.",6,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"find","","Returns an iterator of non-overlapping matches in `s`.",6,{"inputs":[{"name":"self"},{"name":"q"}],"output":{"name":"matches"}}],[11,"find_overlapping","","Returns an iterator of overlapping matches in `s`.",6,{"inputs":[{"name":"self"},{"name":"q"}],"output":{"name":"matchesoverlapping"}}],[11,"stream_find","","Returns an iterator of non-overlapping matches in the given reader.",6,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"streammatches"}}],[11,"stream_find_overlapping","","Returns an iterator of overlapping matches in the given reader.",6,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"streammatchesoverlapping"}}]],"paths":[[3,"Match"],[3,"Matches"],[3,"StreamMatches"],[3,"MatchesOverlapping"],[3,"StreamMatchesOverlapping"],[3,"FullAcAutomaton"],[8,"Automaton"],[8,"Transitions"],[3,"AcAutomaton"],[3,"Dense"],[3,"Sparse"]]};
searchIndex["ansi_term"] = {"doc":"This is a library for controlling colours and formatting, such as red bold text or blue underlined text, on ANSI terminals.","items":[[3,"ANSIGenericString","ansi_term","An ANSIGenericString includes a generic string type and a Style to display that string.  ANSIString and ANSIByteString are aliases for this type on str and [u8], respectively.",null,null],[3,"Prefix","","Like `ANSIString`, but only displays the style prefix.",null,null],[3,"Suffix","","Like `ANSIString`, but only displays the style suffix.",null,null],[3,"Infix","","Like `ANSIString`, but only displays the difference between two styles.",null,null],[3,"Style","","A style is a collection of properties that can format a string using ANSI escape codes.",null,null],[3,"ANSIGenericStrings","","A set of `ANSIGenericString`s collected together, in order to be written with a minimum of control characters.",null,null],[12,"0","","",0,null],[4,"Colour","","A colour is one specific type of ANSI escape code, and can refer to either the foreground or background colour.",null,null],[13,"Black","","Colour #0 (foreground code `30`, background code `40`).",1,null],[13,"Red","","Colour #1 (foreground code `31`, background code `41`).",1,null],[13,"Green","","Colour #2 (foreground code `32`, background code `42`).",1,null],[13,"Yellow","","Colour #3 (foreground code `33`, background code `43`).",1,null],[13,"Blue","","Colour #4 (foreground code `34`, background code `44`).",1,null],[13,"Purple","","Colour #5 (foreground code `35`, background code `45`).",1,null],[13,"Cyan","","Colour #6 (foreground code `36`, background code `46`).",1,null],[13,"White","","Colour #7 (foreground code `37`, background code `47`).",1,null],[13,"Fixed","","A colour number from 0 to 255, for use in 256-colour terminal environments.",1,null],[13,"RGB","","A 24-bit RGB color, as specified by ISO-8613-3.",1,null],[5,"ANSIStrings","","A function to construct an ANSIStrings instance.",null,null],[5,"ANSIByteStrings","","A function to construct an ANSIByteStrings instance.",null,null],[6,"ANSIString","","An ANSI String is a string coupled with the Style to display it in a terminal.",null,null],[6,"ANSIByteString","","An ANSIByteString represents a formatted series of bytes.  Use ANSIByteString when styling text with an unknown encoding.",null,null],[6,"ANSIStrings","","A set of `ANSIString`s collected together, in order to be written with a minimum of control characters.",null,null],[6,"ANSIByteStrings","","A set of `ANSIByteString`s collected together, in order to be written with a minimum of control characters.",null,null],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"ansigenericstring"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"ansigenericstring"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"ansigenericstring"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"prefix"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"suffix"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"infix"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"write_to","","Write an ANSIByteString to an io::Write.  This writes the escape sequences for the associated Style around the bytes.",7,{"inputs":[{"name":"self"},{"name":"w"}],"output":{"name":"result"}}],[11,"from","","",2,{"inputs":[{"name":"i"}],"output":{"name":"ansigenericstring"}}],[11,"deref","","",2,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"colour"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"colour"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"colour"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"normal","","Return a Style with the foreground colour set to this colour.",1,{"inputs":[{"name":"self"}],"output":{"name":"style"}}],[11,"paint","","Paints the given text with this colour, returning an ANSI string. This is a short-cut so you don't have to use Blue.normal() just to get blue text.",1,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"ansigenericstring"}}],[11,"prefix","","The prefix for this colour.",1,{"inputs":[{"name":"self"}],"output":{"name":"prefix"}}],[11,"suffix","","The suffix for this colour.",1,{"inputs":[{"name":"self"}],"output":{"name":"suffix"}}],[11,"infix","","The infix between this colour and another.",1,{"inputs":[{"name":"self"},{"name":"colour"}],"output":{"name":"infix"}}],[11,"bold","","Returns a Style with the bold property set.",1,{"inputs":[{"name":"self"}],"output":{"name":"style"}}],[11,"dimmed","","Returns a Style with the dimmed property set.",1,{"inputs":[{"name":"self"}],"output":{"name":"style"}}],[11,"italic","","Returns a Style with the italic property set.",1,{"inputs":[{"name":"self"}],"output":{"name":"style"}}],[11,"underline","","Returns a Style with the underline property set.",1,{"inputs":[{"name":"self"}],"output":{"name":"style"}}],[11,"blink","","Returns a Style with the blink property set.",1,{"inputs":[{"name":"self"}],"output":{"name":"style"}}],[11,"reverse","","Returns a Style with the reverse property set.",1,{"inputs":[{"name":"self"}],"output":{"name":"style"}}],[11,"hidden","","Returns a Style with the hidden property set.",1,{"inputs":[{"name":"self"}],"output":{"name":"style"}}],[11,"strikethrough","","Returns a Style with the strikethrough property set.",1,{"inputs":[{"name":"self"}],"output":{"name":"style"}}],[11,"on","","Returns a Style with the background colour property set.",1,{"inputs":[{"name":"self"},{"name":"colour"}],"output":{"name":"style"}}],[11,"eq","","",8,{"inputs":[{"name":"self"},{"name":"style"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"self"},{"name":"style"}],"output":{"name":"bool"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"style"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new Style with no differences.",8,{"inputs":[],"output":{"name":"style"}}],[11,"paint","","Paints the given text with this colour, returning an ANSI string.",8,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"ansigenericstring"}}],[11,"prefix","","The prefix for this style.",8,{"inputs":[{"name":"self"}],"output":{"name":"prefix"}}],[11,"suffix","","The suffix for this style.",8,{"inputs":[{"name":"self"}],"output":{"name":"suffix"}}],[11,"infix","","The infix between this style and another.",8,{"inputs":[{"name":"self"},{"name":"style"}],"output":{"name":"infix"}}],[11,"bold","","Returns a Style with the bold property set.",8,{"inputs":[{"name":"self"}],"output":{"name":"style"}}],[11,"dimmed","","Returns a Style with the dimmed property set.",8,{"inputs":[{"name":"self"}],"output":{"name":"style"}}],[11,"italic","","Returns a Style with the italic property set.",8,{"inputs":[{"name":"self"}],"output":{"name":"style"}}],[11,"underline","","Returns a Style with the underline property set.",8,{"inputs":[{"name":"self"}],"output":{"name":"style"}}],[11,"blink","","Returns a Style with the blink property set.",8,{"inputs":[{"name":"self"}],"output":{"name":"style"}}],[11,"reverse","","Returns a Style with the reverse property set.",8,{"inputs":[{"name":"self"}],"output":{"name":"style"}}],[11,"hidden","","Returns a Style with the hidden property set.",8,{"inputs":[{"name":"self"}],"output":{"name":"style"}}],[11,"strikethrough","","Returns a Style with the hidden property set.",8,{"inputs":[{"name":"self"}],"output":{"name":"style"}}],[11,"fg","","Returns a Style with the foreground colour property set.",8,{"inputs":[{"name":"self"},{"name":"colour"}],"output":{"name":"style"}}],[11,"on","","Returns a Style with the background colour property set.",8,{"inputs":[{"name":"self"},{"name":"colour"}],"output":{"name":"style"}}],[11,"default","","",8,{"inputs":[],"output":{"name":"style"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"write_to","","Write ANSIByteStrings to an io::Write.  This writes the minimal escape sequences for the associated Styles around each set of bytes.",10,{"inputs":[{"name":"self"},{"name":"w"}],"output":{"name":"result"}}]],"paths":[[3,"ANSIGenericStrings"],[4,"Colour"],[3,"ANSIGenericString"],[3,"Prefix"],[3,"Suffix"],[3,"Infix"],[6,"ANSIString"],[6,"ANSIByteString"],[3,"Style"],[6,"ANSIStrings"],[6,"ANSIByteStrings"]]};
searchIndex["atty"] = {"doc":"atty is a simple utility that answers one question > is this a tty?","items":[[4,"Stream","atty","possible stream sources",null,null],[13,"Stdout","","",0,null],[13,"Stderr","","",0,null],[13,"Stdin","","",0,null],[5,"is","","returns true if this is a tty",null,{"inputs":[{"name":"stream"}],"output":{"name":"bool"}}],[5,"isnt","","returns true if this is not a tty",null,{"inputs":[{"name":"stream"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"stream"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[4,"Stream"]]};
searchIndex["bincode"] = {"doc":"`bincode` is a crate for encoding and decoding using a tiny binary serialization strategy.","items":[[3,"Bounded","bincode","A SizeLimit that restricts serialized or deserialized messages from exceeding a certain byte length.",null,null],[12,"0","","",0,null],[3,"Infinite","","A SizeLimit without a limit! Use this if you don't care about the size of encoded or decoded messages.",null,null],[5,"deserialize","","Deserializes a slice of bytes into an object.",null,null],[5,"deserialize_from","","Deserializes an object directly from a `Buffer`ed Reader.",null,{"inputs":[{"name":"r"},{"name":"s"}],"output":{"name":"result"}}],[5,"serialize_into","","Serializes an object directly into a `Writer`.",null,{"inputs":[{"name":"w"},{"name":"t"},{"name":"s"}],"output":{"name":"result"}}],[5,"serialize","","Serializes a serializable object into a `Vec` of bytes.",null,{"inputs":[{"name":"t"},{"name":"s"}],"output":{"name":"result"}}],[0,"internal","","A collection of serialization and deserialization functions that use the `serde` crate for the serializable and deserializable implementation.",null,null],[3,"Deserializer","bincode::internal","A Deserializer that reads bytes from a buffer.",null,null],[3,"Serializer","","An Serializer that encodes values directly into a Writer.",null,null],[4,"ErrorKind","","The kind of error that can be produced during a serialization or deserialization.",null,null],[13,"IoError","","If the error stems from the reader/writer that is being used during (de)serialization, that error will be stored and returned here.",1,null],[13,"InvalidEncoding","","If the bytes in the reader are not decodable because of an invalid encoding, this error will be returned.  This error is only possible if a stream is corrupted.  A stream produced from `encode` or `encode_into` should never produce an InvalidEncoding error.",1,null],[12,"desc","bincode::internal::ErrorKind","",1,null],[12,"detail","","",1,null],[13,"SizeLimit","bincode::internal","If (de)serializing a message takes more than the provided size limit, this error is returned.",1,null],[13,"SequenceMustHaveLength","","Bincode can not encode sequences of unknown length (like iterators).",1,null],[13,"Custom","","A custom error message from Serde.",1,null],[5,"serialize_into","","Serializes an object directly into a `Writer`.",null,{"inputs":[{"name":"w"},{"name":"t"},{"name":"s"}],"output":{"name":"result"}}],[5,"serialize","","Serializes a serializable object into a `Vec` of bytes.",null,{"inputs":[{"name":"t"},{"name":"s"}],"output":{"name":"result"}}],[5,"serialized_size","","Returns the size that an object would be if serialized using bincode.",null,{"inputs":[{"name":"t"}],"output":{"name":"u64"}}],[5,"serialized_size_bounded","","Given a maximum size limit, check how large an object would be if it were to be serialized.",null,{"inputs":[{"name":"t"},{"name":"u64"}],"output":{"name":"option"}}],[5,"deserialize_from","","Deserializes an object directly from a `Buffer`ed Reader.",null,{"inputs":[{"name":"r"},{"name":"s"}],"output":{"name":"result"}}],[5,"deserialize","","Deserializes a slice of bytes into an object.",null,null],[6,"Result","","The result of a serialization or deserialization operation.",null,null],[6,"Error","","An error that can be produced during (de)serializing.",null,null],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",1,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"from","","",2,{"inputs":[{"name":"ioerror"}],"output":{"name":"error"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"custom","","",2,{"inputs":[{"name":"t"}],"output":{"name":"error"}}],[11,"custom","","",2,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[0,"read_types","bincode","The types that the deserializer uses for optimizations",null,null],[3,"SliceReader","bincode::read_types","A BincodeRead implementation for byte slices",null,null],[3,"IoReadReader","","A BincodeRead implementation for io::Readers",null,null],[8,"BincodeRead","","A byte-oriented reading trait that is specialized for slices and generic readers.",null,null],[6,"Deserializer","bincode","A Deserializer that uses LittleEndian byteorder",null,null],[6,"Serializer","","A Serializer that uses LittleEndian byteorder",null,null],[8,"SizeLimit","","A limit on the amount of bytes that can be read or written.",null,null],[10,"add","","Tells the SizeLimit that a certain number of bytes has been read or written.  Returns Err if the limit has been exceeded.",3,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"result"}}],[10,"limit","","Returns the hard limit (if one exists)",3,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"bounded"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"infinite"}}],[11,"add","","",0,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"result"}}],[11,"limit","","",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"add","","",4,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"result"}}],[11,"limit","","",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"new","bincode::internal","Creates a new Serializer with the given `Write`r.",5,{"inputs":[{"name":"w"}],"output":{"name":"serializer"}}],[11,"new","bincode::read_types","Constructs a slice reader",6,null],[11,"new","","Constructs an IoReadReader",7,{"inputs":[{"name":"r"}],"output":{"name":"ioreadreader"}}],[11,"read","","",6,null],[11,"read","","",7,null],[11,"forward_read_str","","",6,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"get_byte_buffer","","",6,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"result"}}],[11,"forward_read_bytes","","",6,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"forward_read_str","","",7,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"get_byte_buffer","","",7,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"result"}}],[11,"forward_read_bytes","","",7,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"new","bincode::internal","Creates a new Deserializer with a given `Read`er and a size_limit.",8,{"inputs":[{"name":"r"},{"name":"s"}],"output":{"name":"deserializer"}}]],"paths":[[3,"Bounded"],[4,"ErrorKind"],[6,"Error"],[8,"SizeLimit"],[3,"Infinite"],[3,"Serializer"],[3,"SliceReader"],[3,"IoReadReader"],[3,"Deserializer"]]};
searchIndex["bitflags"] = {"doc":"A typesafe bitmask flag generator useful for sets of C-style bitmask flags. It can be used for creating typesafe wrappers around C APIs.","items":[[0,"example_generated","bitflags","This module shows an example of code generated by the macro. IT MUST NOT BE USED OUTSIDE THIS CRATE.",null,null],[3,"Flags","bitflags::example_generated","This is the same `Flags` struct defined in the crate level example. Note that this struct is just for documentation purposes only, it must not be used outside this crate.",null,null],[17,"FLAG_A","","",null,null],[17,"FLAG_B","","",null,null],[17,"FLAG_C","","",null,null],[17,"FLAG_ABC","","",null,null],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"flags"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"bool"}}],[11,"cmp","","",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"ordering"}}],[11,"hash","","",0,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",0,{"inputs":[],"output":{"name":"flags"}}],[11,"all","","Returns the set containing all flags.",0,{"inputs":[],"output":{"name":"flags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",0,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",0,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",0,{"inputs":[{"name":"u32"}],"output":{"name":"flags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",0,{"inputs":[{"name":"self"},{"name":"flags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"flags"}}],[11,"bitor_assign","","Adds the set of flags.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"flags"}}],[11,"bitxor_assign","","Toggles the set of flags.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"flags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"flags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",0,{"inputs":[{"name":"self"}],"output":{"name":"flags"}}],[11,"extend","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",0,{"inputs":[{"name":"t"}],"output":{"name":"flags"}}],[14,"bitflags","bitflags","The macro used to generate the flag structure.",null,null]],"paths":[[3,"Flags"]]};
searchIndex["byteorder"] = {"doc":"This crate provides convenience methods for encoding and decoding numbers in either big-endian or little-endian order.","items":[[4,"BigEndian","byteorder","Defines big-endian serialization.",null,null],[4,"LittleEndian","","Defines little-endian serialization.",null,null],[6,"BE","","A type alias for `BigEndian`.",null,null],[6,"LE","","A type alias for `LittleEndian`.",null,null],[6,"NetworkEndian","","Defines network byte order serialization.",null,null],[6,"NativeEndian","","Defines system native-endian serialization.",null,null],[8,"ReadBytesExt","","Extends `Read` with methods for reading numbers. (For `std::io`.)",null,null],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying reader.",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"result"}}],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"result"}}],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the underlying reader.",0,null],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the underlying reader.",0,null],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the underlying reader.",0,null],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the underlying reader.",0,null],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the underlying reader.",0,null],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the underlying reader.",0,null],[11,"read_f32_into_unchecked","","Reads a sequence of IEEE754 single-precision (4 bytes) floating point numbers from the underlying reader.",0,null],[11,"read_f64_into_unchecked","","Reads a sequence of IEEE754 double-precision (8 bytes) floating point numbers from the underlying reader.",0,null],[8,"WriteBytesExt","","Extends `Write` with methods for writing numbers. (For `std::io`.)",null,null],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"result"}}],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i8"}],"output":{"name":"result"}}],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"result"}}],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i16"}],"output":{"name":"result"}}],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"result"}}],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"result"}}],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"result"}}],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"result"}}],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u64"},{"name":"usize"}],"output":{"name":"result"}}],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i64"},{"name":"usize"}],"output":{"name":"result"}}],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"f32"}],"output":{"name":"result"}}],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"f64"}],"output":{"name":"result"}}],[8,"ByteOrder","","ByteOrder describes types that can serialize integers as bytes.",null,null],[10,"read_u16","","Reads an unsigned 16 bit integer from `buf`.",2,null],[11,"read_u24","","Reads an unsigned 24 bit integer from `buf`, stored in u32.",2,null],[10,"read_u32","","Reads an unsigned 32 bit integer from `buf`.",2,null],[10,"read_u64","","Reads an unsigned 64 bit integer from `buf`.",2,null],[10,"read_uint","","Reads an unsigned n-bytes integer from `buf`.",2,null],[10,"write_u16","","Writes an unsigned 16 bit integer `n` to `buf`.",2,null],[11,"write_u24","","Writes an unsigned 24 bit integer `n` to `buf`, stored in u32.",2,null],[10,"write_u32","","Writes an unsigned 32 bit integer `n` to `buf`.",2,null],[10,"write_u64","","Writes an unsigned 64 bit integer `n` to `buf`.",2,null],[10,"write_uint","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",2,null],[11,"read_i16","","Reads a signed 16 bit integer from `buf`.",2,null],[11,"read_i24","","Reads a signed 24 bit integer from `buf`, stored in i32.",2,null],[11,"read_i32","","Reads a signed 32 bit integer from `buf`.",2,null],[11,"read_i64","","Reads a signed 64 bit integer from `buf`.",2,null],[11,"read_int","","Reads a signed n-bytes integer from `buf`.",2,null],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number.",2,null],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number.",2,null],[11,"write_i16","","Writes a signed 16 bit integer `n` to `buf`.",2,null],[11,"write_i24","","Writes a signed 24 bit integer `n` to `buf`, stored in i32.",2,null],[11,"write_i32","","Writes a signed 32 bit integer `n` to `buf`.",2,null],[11,"write_i64","","Writes a signed 64 bit integer `n` to `buf`.",2,null],[11,"write_int","","Writes a signed integer `n` to `buf` using only `nbytes`.",2,null],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number.",2,null],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number.",2,null],[10,"read_u16_into","","Reads unsigned 16 bit integers from `src` into `dst`.",2,null],[10,"read_u32_into","","Reads unsigned 32 bit integers from `src` into `dst`.",2,null],[10,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.",2,null],[11,"read_i16_into","","Reads signed 16 bit integers from `src` to `dst`.",2,null],[11,"read_i32_into","","Reads signed 32 bit integers from `src` into `dst`.",2,null],[11,"read_i64_into","","Reads signed 64 bit integers from `src` into `dst`.",2,null],[11,"read_f32_into_unchecked","","Reads IEEE754 single-precision (4 bytes) floating point numbers from `src` into `dst`.",2,null],[11,"read_f64_into_unchecked","","Reads IEEE754 single-precision (4 bytes) floating point numbers from `src` into `dst`.",2,null],[10,"write_u16_into","","Writes unsigned 16 bit integers from `src` into `dst`.",2,null],[10,"write_u32_into","","Writes unsigned 32 bit integers from `src` into `dst`.",2,null],[10,"write_u64_into","","Writes unsigned 64 bit integers from `src` into `dst`.",2,null],[11,"write_i16_into","","Writes signed 16 bit integers from `src` into `dst`.",2,null],[11,"write_i32_into","","Writes signed 32 bit integers from `src` into `dst`.",2,null],[11,"write_i64_into","","Writes signed 64 bit integers from `src` into `dst`.",2,null],[11,"write_f32_into","","Writes IEEE754 single-precision (4 bytes) floating point numbers from `src` into `dst`.",2,null],[11,"write_f64_into","","Writes IEEE754 double-precision (8 bytes) floating point numbers from `src` into `dst`.",2,null],[10,"from_slice_u16","","Converts the given slice of unsigned 16 bit integers to a particular endianness.",2,null],[10,"from_slice_u32","","Converts the given slice of unsigned 32 bit integers to a particular endianness.",2,null],[10,"from_slice_u64","","Converts the given slice of unsigned 64 bit integers to a particular endianness.",2,null],[11,"from_slice_i16","","Converts the given slice of signed 16 bit integers to a particular endianness.",2,null],[11,"from_slice_i32","","Converts the given slice of signed 32 bit integers to a particular endianness.",2,null],[11,"from_slice_i64","","Converts the given slice of signed 64 bit integers to a particular endianness.",2,null],[10,"from_slice_f32","","Converts the given slice of IEEE754 single-precision (4 bytes) floating point numbers to a particular endianness.",2,null],[10,"from_slice_f64","","Converts the given slice of IEEE754 double-precision (8 bytes) floating point numbers to a particular endianness.",2,null],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"bigendian"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",3,null],[11,"cmp","","",3,{"inputs":[{"name":"self"},{"name":"bigendian"}],"output":{"name":"ordering"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"bigendian"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",3,{"inputs":[{"name":"self"},{"name":"bigendian"}],"output":{"name":"option"}}],[11,"default","","",3,{"inputs":[],"output":{"name":"bigendian"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"littleendian"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",4,null],[11,"cmp","","",4,{"inputs":[{"name":"self"},{"name":"littleendian"}],"output":{"name":"ordering"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"littleendian"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",4,{"inputs":[{"name":"self"},{"name":"littleendian"}],"output":{"name":"option"}}],[11,"default","","",4,{"inputs":[],"output":{"name":"littleendian"}}],[11,"read_u16","","",3,null],[11,"read_u32","","",3,null],[11,"read_u64","","",3,null],[11,"read_uint","","",3,null],[11,"write_u16","","",3,null],[11,"write_u32","","",3,null],[11,"write_u64","","",3,null],[11,"write_uint","","",3,null],[11,"read_u16_into","","",3,null],[11,"read_u32_into","","",3,null],[11,"read_u64_into","","",3,null],[11,"write_u16_into","","",3,null],[11,"write_u32_into","","",3,null],[11,"write_u64_into","","",3,null],[11,"from_slice_u16","","",3,null],[11,"from_slice_u32","","",3,null],[11,"from_slice_u64","","",3,null],[11,"from_slice_f32","","",3,null],[11,"from_slice_f64","","",3,null],[11,"read_u16","","",4,null],[11,"read_u32","","",4,null],[11,"read_u64","","",4,null],[11,"read_uint","","",4,null],[11,"write_u16","","",4,null],[11,"write_u32","","",4,null],[11,"write_u64","","",4,null],[11,"write_uint","","",4,null],[11,"read_u16_into","","",4,null],[11,"read_u32_into","","",4,null],[11,"read_u64_into","","",4,null],[11,"write_u16_into","","",4,null],[11,"write_u32_into","","",4,null],[11,"write_u64_into","","",4,null],[11,"from_slice_u16","","",4,null],[11,"from_slice_u32","","",4,null],[11,"from_slice_u64","","",4,null],[11,"from_slice_f32","","",4,null],[11,"from_slice_f64","","",4,null],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying reader.",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"result"}}],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"result"}}],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the underlying reader.",0,null],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the underlying reader.",0,null],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the underlying reader.",0,null],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the underlying reader.",0,null],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the underlying reader.",0,null],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the underlying reader.",0,null],[11,"read_f32_into_unchecked","","Reads a sequence of IEEE754 single-precision (4 bytes) floating point numbers from the underlying reader.",0,null],[11,"read_f64_into_unchecked","","Reads a sequence of IEEE754 double-precision (8 bytes) floating point numbers from the underlying reader.",0,null],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"result"}}],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i8"}],"output":{"name":"result"}}],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"result"}}],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i16"}],"output":{"name":"result"}}],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"result"}}],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"result"}}],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"result"}}],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"result"}}],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u64"},{"name":"usize"}],"output":{"name":"result"}}],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i64"},{"name":"usize"}],"output":{"name":"result"}}],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"f32"}],"output":{"name":"result"}}],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"f64"}],"output":{"name":"result"}}]],"paths":[[8,"ReadBytesExt"],[8,"WriteBytesExt"],[8,"ByteOrder"],[4,"BigEndian"],[4,"LittleEndian"]]};
searchIndex["capnp"] = {"doc":"Cap'n Proto Runtime Library","items":[[3,"Word","capnp","Eight bytes of memory with opaque interior. Use `capnp_word!()` to construct one of these.",null,null],[3,"MessageSize","","Size of a message. Every generated struct has a method `.total_size()` that returns this.",null,null],[12,"word_count","","",0,null],[12,"cap_count","","Size of the capability table.",0,null],[3,"NotInSchema","","An enum value or union discriminant that was not found among those defined in a schema.",null,null],[12,"0","","",1,null],[3,"Error","","Describes an arbitrary error that prevented an operation from completing.",null,null],[12,"kind","","The general kind of the error. Code that decides how to respond to an error should read only this field in making its decision.",2,null],[12,"description","","Human-readable failure description.",2,null],[4,"ErrorKind","","The general nature of an error. The purpose of this enum is not to describe the error itself, but rather to describe how the client might want to respond to the error.",null,null],[13,"Failed","","Something went wrong. This is the usual error kind. It includes decoding errors.",3,null],[13,"Overloaded","","The call failed because of a temporary lack of resources. This could be space resources (out of memory, out of disk space) or time resources (request queue overflow, operation timed out). The operation might work if tried again, but it should NOT be repeated immediately as this may simply exacerbate the problem.",3,null],[13,"Disconnected","","The call required communication over a connection that has been lost. The callee will need to re-establish connections and try again.",3,null],[13,"Unimplemented","","The requested method is not implemented. The caller may wish to revert to a fallback approach based on other methods.",3,null],[4,"OutputSegments","","Helper struct that allows `MessageBuilder::get_segments_for_output()` to avoid heap allocations in the single-segment case.",null,null],[13,"SingleSegment","","",4,null],[13,"MultiSegment","","",4,null],[0,"any_pointer","","Dynamically typed value.",null,null],[3,"Owned","capnp::any_pointer","",null,null],[3,"Reader","","",null,null],[3,"Builder","","",null,null],[3,"Pipeline","","",null,null],[12,"hook","","",5,null],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"owned"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"reader"}}],[11,"new","","",7,{"inputs":[{"name":"pointerreader"}],"output":{"name":"reader"}}],[11,"is_null","","",7,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"target_size","","Gets the total size of the target and all of its children. Does not count far pointer overhead.",7,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"total_size","","",7,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"get_as","","",7,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"get_as_capability","","",7,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"get_pipelined_cap","","",7,null],[11,"get_from_pointer","","",7,{"inputs":[{"name":"pointerreader"}],"output":{"name":"result"}}],[11,"set_pointer_builder","","",7,{"inputs":[{"name":"pointerbuilder"},{"name":"reader"}],"output":{"name":"result"}}],[11,"set_pointer_canonical","","",7,{"inputs":[{"name":"pointerbuilder"},{"name":"reader"}],"output":{"name":"result"}}],[11,"imbue","","",7,{"inputs":[{"name":"self"},{"name":"captable"}],"output":null}],[11,"new","","",8,{"inputs":[{"name":"pointerbuilder"}],"output":{"name":"builder"}}],[11,"borrow","","",8,{"inputs":[{"name":"self"}],"output":{"name":"builder"}}],[11,"is_null","","",8,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"target_size","","Gets the total size of the target and all of its children. Does not count far pointer overhead.",8,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"total_size","","",8,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"get_as","","",8,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"init_as","","",8,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"initn_as","","",8,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"t"}}],[11,"set_as","","",8,{"inputs":[{"name":"self"},{"name":"from"}],"output":{"name":"result"}}],[11,"set_as_capability","","",8,{"inputs":[{"name":"self"},{"name":"box"}],"output":null}],[11,"clear","","",8,{"inputs":[{"name":"self"}],"output":null}],[11,"as_reader","","",8,{"inputs":[{"name":"self"}],"output":{"name":"reader"}}],[11,"init_pointer","","",8,{"inputs":[{"name":"pointerbuilder"},{"name":"u32"}],"output":{"name":"builder"}}],[11,"get_from_pointer","","",8,{"inputs":[{"name":"pointerbuilder"}],"output":{"name":"result"}}],[11,"imbue_mut","","",8,{"inputs":[{"name":"self"},{"name":"captable"}],"output":null}],[11,"new","","",5,{"inputs":[{"name":"box"}],"output":{"name":"pipeline"}}],[11,"noop","","",5,{"inputs":[{"name":"self"}],"output":{"name":"pipeline"}}],[11,"get_pointer_field","","",5,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"pipeline"}}],[11,"as_cap","","",5,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"new","","",5,{"inputs":[{"name":"pipeline"}],"output":{"name":"pipeline"}}],[0,"capability","capnp","Hooks for for the RPC system.",null,null],[3,"Promise","capnp::capability","A computation that might eventually resolve to a value of type `T` or to an error of type `E`. Dropping the promise cancels the computation.",null,null],[3,"RemotePromise","","A promise for a result from a method call.",null,null],[12,"promise","","",9,null],[12,"pipeline","","",9,null],[3,"Response","","A response from a method call, as seen by the client.",null,null],[12,"marker","","",10,null],[12,"hook","","",10,null],[3,"Request","","A method call that has not been sent yet.",null,null],[12,"marker","","",11,null],[12,"hook","","",11,null],[3,"Params","","The values of the parameters passed to a method call, as seen by the server.",null,null],[12,"marker","","",12,null],[12,"hook","","",12,null],[3,"Results","","The return values of a method, written in-place by the method body.",null,null],[12,"marker","","",13,null],[12,"hook","","",13,null],[3,"Client","","An untyped client.",null,null],[12,"hook","","",14,null],[8,"FromTypelessPipeline","","",null,null],[10,"new","","",15,{"inputs":[{"name":"pipeline"}],"output":{"name":"self"}}],[8,"FromClientHook","","",null,null],[10,"new","","",16,{"inputs":[{"name":"box"}],"output":{"name":"self"}}],[8,"Server","","An untyped server.",null,null],[10,"dispatch_call","","",17,{"inputs":[{"name":"self"},{"name":"u64"},{"name":"u16"},{"name":"params"},{"name":"results"}],"output":{"name":"promise"}}],[11,"ok","","",18,{"inputs":[{"name":"t"}],"output":{"name":"promise"}}],[11,"err","","",18,{"inputs":[{"name":"e"}],"output":{"name":"promise"}}],[11,"new","","",10,{"inputs":[{"name":"box"}],"output":{"name":"response"}}],[11,"get","","",10,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"new","","",11,{"inputs":[{"name":"box"}],"output":{"name":"request"}}],[11,"get","","",11,null],[11,"set","","",11,null],[11,"new","","",12,{"inputs":[{"name":"box"}],"output":{"name":"params"}}],[11,"get","","",12,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"new","","",13,{"inputs":[{"name":"box"}],"output":{"name":"results"}}],[11,"get","","",13,null],[11,"set","","",13,null],[11,"new","","",14,{"inputs":[{"name":"box"}],"output":{"name":"client"}}],[11,"new_call","","",14,{"inputs":[{"name":"self"},{"name":"u64"},{"name":"u16"},{"name":"option"}],"output":{"name":"request"}}],[0,"constant","capnp","Helper type for generated Struct and List constants.",null,null],[3,"Reader","capnp::constant","",null,null],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"reader"}}],[11,"get","","Retrieve the value.",19,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[0,"data","capnp","Sequence of bytes.",null,null],[3,"Owned","capnp::data","",null,null],[5,"new_reader","","",null,null],[5,"new_builder","","",null,null],[6,"Reader","","",null,null],[6,"Builder","","",null,null],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"owned"}}],[11,"get_from_pointer","","",21,{"inputs":[{"name":"pointerreader"}],"output":{"name":"result"}}],[11,"init_pointer","","",22,{"inputs":[{"name":"pointerbuilder"},{"name":"u32"}],"output":{"name":"builder"}}],[11,"get_from_pointer","","",22,{"inputs":[{"name":"pointerbuilder"}],"output":{"name":"result"}}],[11,"set_pointer_builder","","",21,{"inputs":[{"name":"pointerbuilder"},{"name":"reader"}],"output":{"name":"result"}}],[0,"data_list","capnp","List of sequences of bytes.",null,null],[3,"Owned","capnp::data_list","",null,null],[3,"Reader","","",null,null],[12,"reader","","",23,null],[3,"Builder","","",null,null],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"owned"}}],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"reader"}}],[11,"new","","",23,{"inputs":[{"name":"listreader"}],"output":{"name":"reader"}}],[11,"len","","",23,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"iter","","",23,{"inputs":[{"name":"self"}],"output":{"name":"listiter"}}],[11,"get_from_pointer","","",23,{"inputs":[{"name":"pointerreader"}],"output":{"name":"result"}}],[11,"index_move","","",23,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"get","","",23,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"new","","",25,{"inputs":[{"name":"listbuilder"}],"output":{"name":"builder"}}],[11,"len","","",25,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"as_reader","","",25,{"inputs":[{"name":"self"}],"output":{"name":"reader"}}],[11,"set","","",25,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"reader"}],"output":null}],[11,"borrow","","",25,{"inputs":[{"name":"self"}],"output":{"name":"builder"}}],[11,"init_pointer","","",25,{"inputs":[{"name":"pointerbuilder"},{"name":"u32"}],"output":{"name":"builder"}}],[11,"get_from_pointer","","",25,{"inputs":[{"name":"pointerbuilder"}],"output":{"name":"result"}}],[11,"get","","",25,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"set_pointer_builder","","",23,{"inputs":[{"name":"pointerbuilder"},{"name":"reader"}],"output":{"name":"result"}}],[0,"enum_list","capnp","List of enums.",null,null],[3,"Owned","capnp::enum_list","",null,null],[3,"Reader","","",null,null],[3,"Builder","","",null,null],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"owned"}}],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"reader"}}],[11,"new","","",27,{"inputs":[{"name":"listreader"}],"output":{"name":"reader"}}],[11,"len","","",27,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"iter","","",27,{"inputs":[{"name":"self"}],"output":{"name":"listiter"}}],[11,"get_from_pointer","","",27,{"inputs":[{"name":"pointerreader"}],"output":{"name":"result"}}],[11,"index_move","","",27,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"get","","",27,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"new","","",28,{"inputs":[{"name":"listbuilder"}],"output":{"name":"builder"}}],[11,"len","","",28,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"as_reader","","",28,{"inputs":[{"name":"self"}],"output":{"name":"reader"}}],[11,"set","","",28,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"t"}],"output":null}],[11,"init_pointer","","",28,{"inputs":[{"name":"pointerbuilder"},{"name":"u32"}],"output":{"name":"builder"}}],[11,"get_from_pointer","","",28,{"inputs":[{"name":"pointerbuilder"}],"output":{"name":"result"}}],[11,"get","","",28,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"set_pointer_builder","","",27,{"inputs":[{"name":"pointerbuilder"},{"name":"reader"}],"output":{"name":"result"}}],[0,"list_list","capnp","List of lists.",null,null],[3,"Owned","capnp::list_list","",null,null],[3,"Reader","","",null,null],[3,"Builder","","",null,null],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"owned"}}],[11,"new","","",30,{"inputs":[{"name":"listreader"}],"output":{"name":"reader"}}],[11,"len","","",30,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"iter","","",30,{"inputs":[{"name":"self"}],"output":{"name":"listiter"}}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"reader"}}],[11,"index_move","","",30,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"get_from_pointer","","",30,{"inputs":[{"name":"pointerreader"}],"output":{"name":"result"}}],[11,"get","","",30,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"new","","",31,{"inputs":[{"name":"listbuilder"}],"output":{"name":"builder"}}],[11,"len","","",31,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"as_reader","","",31,{"inputs":[{"name":"self"}],"output":{"name":"reader"}}],[11,"init","","",31,null],[11,"borrow","","",31,{"inputs":[{"name":"self"}],"output":{"name":"builder"}}],[11,"init_pointer","","",31,{"inputs":[{"name":"pointerbuilder"},{"name":"u32"}],"output":{"name":"builder"}}],[11,"get_from_pointer","","",31,{"inputs":[{"name":"pointerbuilder"}],"output":{"name":"result"}}],[11,"get","","",31,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"set_pointer_builder","","",30,{"inputs":[{"name":"pointerbuilder"},{"name":"reader"}],"output":{"name":"result"}}],[0,"message","capnp","Untyped root container for a Cap'n Proto value.",null,null],[3,"ReaderOptions","capnp::message","Options controlling how data is read.",null,null],[12,"traversal_limit_in_words","","Limits how many total words of data are allowed to be traversed. Traversal is counted when a new struct or list builder is obtained, e.g. from a get() accessor. This means that calling the getter for the same sub-struct multiple times will cause it to be double-counted. Once the traversal limit is reached, an error will be reported.",32,null],[12,"nesting_limit","","Limits how deeply nested a message structure can be, e.g. structs containing other structs or lists of structs.",32,null],[3,"SegmentArray","","An array of segments.",null,null],[3,"Reader","","A container used to read a message.",null,null],[3,"Builder","","A container used to build a message.",null,null],[3,"HeapAllocator","","",null,null],[3,"ScratchSpace","","",null,null],[3,"ScratchSpaceHeapAllocator","","",null,null],[4,"AllocationStrategy","","",null,null],[13,"FixedSize","","",33,null],[13,"GrowHeuristically","","",33,null],[17,"DEFAULT_READER_OPTIONS","","",null,null],[17,"SUGGESTED_FIRST_SEGMENT_WORDS","","",null,null],[17,"SUGGESTED_ALLOCATION_STRATEGY","","",null,null],[8,"ReaderSegments","","An object that manages the buffers underlying a Cap'n Proto message reader.",null,null],[10,"get_segment","","",34,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[8,"Allocator","","An object that allocates memory for a Cap'n Proto message as it is being built.",null,null],[10,"allocate_segment","","Allocates memory for a new segment, returning a pointer to the start of the segment and a u32 indicating the length of the segment.",35,null],[11,"pre_drop","","",35,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"readeroptions"}}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",32,{"inputs":[],"output":{"name":"readeroptions"}}],[11,"new","","",32,{"inputs":[],"output":{"name":"readeroptions"}}],[11,"nesting_limit","","",32,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"readeroptions"}}],[11,"traversal_limit_in_words","","",32,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"readeroptions"}}],[11,"new","","",36,null],[11,"get_segment","","",36,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[11,"new","","",37,{"inputs":[{"name":"s"},{"name":"readeroptions"}],"output":{"name":"self"}}],[11,"get_root","","Gets the root of the message, interpreting it as the given type.",37,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"into_segments","","",37,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"is_canonical","","Checks whether the message is canonical.",37,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"canonicalize","","Gets the canonical form of this message.",37,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"new","","",38,{"inputs":[{"name":"a"}],"output":{"name":"self"}}],[11,"init_root","","Initializes the root as a value of the given type.",38,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"get_root","","Gets the root, interpreting it as the given type.",38,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"get_root_as_reader","","",38,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"set_root","","Sets the root to a deep copy of the given value.",38,{"inputs":[{"name":"self"},{"name":"from"}],"output":{"name":"result"}}],[11,"get_segments_for_output","","",38,{"inputs":[{"name":"self"}],"output":{"name":"outputsegments"}}],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"allocationstrategy"}}],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",39,{"inputs":[],"output":{"name":"heapallocator"}}],[11,"first_segment_words","","",39,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"heapallocator"}}],[11,"allocation_strategy","","",39,{"inputs":[{"name":"self"},{"name":"allocationstrategy"}],"output":{"name":"heapallocator"}}],[11,"allocate_segment","","",39,null],[11,"new_default","","",38,{"inputs":[],"output":{"name":"builder"}}],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",40,null],[11,"new","","",41,{"inputs":[{"name":"scratchspace"}],"output":{"name":"scratchspaceheapallocator"}}],[11,"second_segment_words","","",41,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"scratchspaceheapallocator"}}],[11,"allocation_strategy","","",41,{"inputs":[{"name":"self"},{"name":"allocationstrategy"}],"output":{"name":"scratchspaceheapallocator"}}],[11,"allocate_segment","","",41,null],[11,"pre_drop","","",41,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[0,"primitive_list","capnp","List of primitives.",null,null],[3,"Owned","capnp::primitive_list","",null,null],[3,"Reader","","",null,null],[3,"Builder","","",null,null],[11,"clone","","",42,{"inputs":[{"name":"self"}],"output":{"name":"owned"}}],[11,"clone","","",43,{"inputs":[{"name":"self"}],"output":{"name":"reader"}}],[11,"new","","",43,{"inputs":[{"name":"listreader"}],"output":{"name":"reader"}}],[11,"len","","",43,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"iter","","",43,{"inputs":[{"name":"self"}],"output":{"name":"listiter"}}],[11,"get_from_pointer","","",43,{"inputs":[{"name":"pointerreader"}],"output":{"name":"result"}}],[11,"index_move","","",43,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"t"}}],[11,"get","","",43,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"t"}}],[11,"new","","",44,{"inputs":[{"name":"listbuilder"}],"output":{"name":"builder"}}],[11,"len","","",44,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"as_reader","","",44,{"inputs":[{"name":"self"}],"output":{"name":"reader"}}],[11,"set","","",44,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"t"}],"output":null}],[11,"init_pointer","","",44,{"inputs":[{"name":"pointerbuilder"},{"name":"u32"}],"output":{"name":"builder"}}],[11,"get_from_pointer","","",44,{"inputs":[{"name":"pointerbuilder"}],"output":{"name":"result"}}],[11,"get","","",44,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"t"}}],[11,"set_pointer_builder","","",43,{"inputs":[{"name":"pointerbuilder"},{"name":"reader"}],"output":{"name":"result"}}],[0,"private","capnp","Implementation details that should never be directly used by clients.",null,null],[3,"RawSchema","capnp::private","",null,null],[12,"blob","","",45,null],[0,"arena","","",null,null],[3,"ReadLimiter","capnp::private::arena","",null,null],[12,"limit","","",46,null],[3,"ReaderArenaImpl","","",null,null],[3,"BuilderArenaImplInner","","",null,null],[3,"BuilderArenaImpl","","",null,null],[3,"NullArena","","",null,null],[6,"SegmentId","","",null,null],[8,"ReaderArena","","",null,null],[10,"get_segment","","",47,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[10,"contains_interval","","",47,null],[10,"amplified_read","","",47,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"result"}}],[8,"BuilderArena","","",null,null],[10,"allocate","","",48,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"wordcount32"}],"output":{"name":"option"}}],[10,"allocate_anywhere","","",48,null],[10,"get_segment_mut","","",48,null],[10,"as_reader","","",48,{"inputs":[{"name":"self"}],"output":{"name":"readerarena"}}],[11,"new","","",46,{"inputs":[{"name":"u64"}],"output":{"name":"readlimiter"}}],[11,"can_read","","",46,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"result"}}],[11,"new","","",49,{"inputs":[{"name":"s"},{"name":"readeroptions"}],"output":{"name":"self"}}],[11,"into_segments","","",49,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_segment","","",49,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"contains_interval","","",49,null],[11,"amplified_read","","",49,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"result"}}],[11,"new","","",50,{"inputs":[{"name":"a"}],"output":{"name":"self"}}],[11,"allocate_segment","","",50,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"get_segments_for_output","","",50,{"inputs":[{"name":"self"}],"output":{"name":"outputsegments"}}],[11,"len","","",50,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"get_segment","","",50,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"contains_interval","","",50,null],[11,"amplified_read","","",50,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"result"}}],[11,"allocate","","",50,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"wordcount32"}],"output":{"name":"option"}}],[11,"allocate_anywhere","","",50,null],[11,"get_segment_mut","","",50,null],[11,"as_reader","","",50,{"inputs":[{"name":"self"}],"output":{"name":"readerarena"}}],[11,"drop","","",51,{"inputs":[{"name":"self"}],"output":null}],[11,"get_segment","","",52,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"contains_interval","","",52,null],[11,"amplified_read","","",52,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"result"}}],[11,"allocate","","",52,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"wordcount32"}],"output":{"name":"option"}}],[11,"allocate_anywhere","","",52,null],[11,"get_segment_mut","","",52,null],[11,"as_reader","","",52,{"inputs":[{"name":"self"}],"output":{"name":"readerarena"}}],[0,"capability","capnp::private","",null,null],[4,"PipelineOp","capnp::private::capability","",null,null],[13,"Noop","","",53,null],[13,"GetPointerField","","",53,null],[5,"internal_get_typed_params","","",null,{"inputs":[{"name":"params"}],"output":{"name":"params"}}],[5,"internal_get_typed_results","","",null,{"inputs":[{"name":"results"}],"output":{"name":"results"}}],[5,"internal_get_untyped_results","","",null,{"inputs":[{"name":"results"}],"output":{"name":"results"}}],[8,"ResponseHook","","",null,null],[10,"get","","",54,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[8,"RequestHook","","",null,null],[10,"get","","",55,{"inputs":[{"name":"self"}],"output":{"name":"builder"}}],[10,"get_brand","","",55,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[10,"send","","",55,{"inputs":[{"name":"box"}],"output":{"name":"remotepromise"}}],[10,"tail_send","","",55,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[8,"ClientHook","","",null,null],[10,"add_ref","","",56,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[10,"new_call","","",56,{"inputs":[{"name":"self"},{"name":"u64"},{"name":"u16"},{"name":"option"}],"output":{"name":"request"}}],[10,"call","","",56,{"inputs":[{"name":"self"},{"name":"u64"},{"name":"u16"},{"name":"box"},{"name":"box"}],"output":{"name":"promise"}}],[10,"get_brand","","",56,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[10,"get_ptr","","",56,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[10,"get_resolved","","If this ClientHook is a promise that has already resolved, returns the inner, resolved version of the capability.  The caller may permanently replace this client with the resolved one if desired.  Returns null if the client isn't a promise or hasn't resolved yet -- use `whenMoreResolved()` to distinguish between them.",56,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"when_more_resolved","","If this client is a settled reference (not a promise), return nullptr.  Otherwise, return a promise that eventually resolves to a new client that is closer to being the final, settled client (i.e. the value eventually returned by `getResolved()`).  Calling this repeatedly should eventually produce a settled client.",56,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[8,"ServerHook","","",null,null],[10,"new_client","","",57,{"inputs":[{"name":"box"}],"output":{"name":"client"}}],[8,"ResultsHook","","",null,null],[10,"get","","",58,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"allow_cancellation","","",58,{"inputs":[{"name":"self"}],"output":null}],[10,"tail_call","","",58,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"promise"}}],[10,"direct_tail_call","","",58,null],[8,"ParamsHook","","",null,null],[10,"get","","",59,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[8,"PipelineHook","","",null,null],[10,"add_ref","","",60,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[10,"get_pipelined_cap","","",60,null],[11,"get_pipelined_cap_move","","Version of get_pipelined_cap() passing the array by move. May avoid a copy in some cases. Default implementation just calls the other version.",60,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"name":"box"}}],[11,"clone","","",53,{"inputs":[{"name":"self"}],"output":{"name":"pipelineop"}}],[0,"endian","capnp::private","",null,null],[3,"WireValue","capnp::private::endian","",null,null],[8,"Endian","","",null,null],[10,"get","","",61,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"set","","",61,{"inputs":[{"name":"self"},{"name":"self"}],"output":null}],[11,"get","","",62,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"set","","",62,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[0,"layout","capnp::private","",null,null],[3,"StructSize","capnp::private::layout","",null,null],[12,"data","","",63,null],[12,"pointers","","",63,null],[3,"WirePointer","","",null,null],[3,"StructRef","","",null,null],[3,"ListRef","","",null,null],[3,"FarRef","","",null,null],[3,"CapRef","","",null,null],[3,"PointerReader","","",null,null],[3,"PointerBuilder","","",null,null],[3,"StructReader","","",null,null],[3,"StructBuilder","","",null,null],[3,"ListReader","","",null,null],[3,"ListBuilder","","",null,null],[4,"ElementSize","","",null,null],[13,"Void","","",64,null],[13,"Bit","","",64,null],[13,"Byte","","",64,null],[13,"TwoBytes","","",64,null],[13,"FourBytes","","",64,null],[13,"EightBytes","","",64,null],[13,"Pointer","","",64,null],[13,"InlineComposite","","",64,null],[4,"WirePointerKind","","",null,null],[13,"Struct","","",65,null],[13,"List","","",65,null],[13,"Far","","",65,null],[13,"Other","","",65,null],[4,"PointerType","","",null,null],[13,"Null","","",66,null],[13,"Struct","","",66,null],[13,"List","","",66,null],[13,"Capability","","",66,null],[4,"CapTableReader","","",null,null],[13,"Plain","","",67,null],[4,"CapTableBuilder","","",null,null],[13,"Plain","","",68,null],[5,"data_bits_per_element","","",null,{"inputs":[{"name":"elementsize"}],"output":{"name":"bitcount32"}}],[5,"pointers_per_element","","",null,{"inputs":[{"name":"elementsize"}],"output":{"name":"wirepointercount32"}}],[6,"CapTable","","",null,null],[8,"PrimitiveElement","","",null,null],[11,"get","","",69,{"inputs":[{"name":"listreader"},{"name":"elementcount32"}],"output":{"name":"self"}}],[11,"get_from_builder","","",69,{"inputs":[{"name":"listbuilder"},{"name":"elementcount32"}],"output":{"name":"self"}}],[11,"set","","",69,{"inputs":[{"name":"listbuilder"},{"name":"elementcount32"},{"name":"self"}],"output":null}],[11,"element_size","","",69,{"inputs":[],"output":{"name":"elementsize"}}],[11,"clone","","",64,{"inputs":[{"name":"self"}],"output":{"name":"elementsize"}}],[11,"eq","","",64,{"inputs":[{"name":"self"},{"name":"elementsize"}],"output":{"name":"bool"}}],[11,"clone","","",63,{"inputs":[{"name":"self"}],"output":{"name":"structsize"}}],[11,"total","","",63,{"inputs":[{"name":"self"}],"output":{"name":"wordcount32"}}],[11,"clone","","",65,{"inputs":[{"name":"self"}],"output":{"name":"wirepointerkind"}}],[11,"eq","","",65,{"inputs":[{"name":"self"},{"name":"wirepointerkind"}],"output":{"name":"bool"}}],[11,"word_size","","",70,{"inputs":[{"name":"self"}],"output":{"name":"wordcount32"}}],[11,"set_from_struct_size","","",70,{"inputs":[{"name":"self"},{"name":"structsize"}],"output":null}],[11,"set","","",70,{"inputs":[{"name":"self"},{"name":"wordcount16"},{"name":"wirepointercount16"}],"output":null}],[11,"element_size","","",71,{"inputs":[{"name":"self"}],"output":{"name":"elementsize"}}],[11,"element_count","","",71,{"inputs":[{"name":"self"}],"output":{"name":"elementcount32"}}],[11,"inline_composite_word_count","","",71,{"inputs":[{"name":"self"}],"output":{"name":"wordcount32"}}],[11,"set","","",71,{"inputs":[{"name":"self"},{"name":"elementsize"},{"name":"elementcount32"}],"output":null}],[11,"set_inline_composite","","",71,{"inputs":[{"name":"self"},{"name":"wordcount32"}],"output":null}],[11,"set","","",72,{"inputs":[{"name":"self"},{"name":"segmentid"}],"output":null}],[11,"set","","",73,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"kind","","",74,{"inputs":[{"name":"self"}],"output":{"name":"wirepointerkind"}}],[11,"is_positional","","",74,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_capability","","",74,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"target","","",74,null],[11,"mut_target","","",74,null],[11,"set_kind_and_target","","",74,null],[11,"set_kind_with_zero_offset","","",74,{"inputs":[{"name":"self"},{"name":"wirepointerkind"}],"output":null}],[11,"set_kind_and_target_for_empty_struct","","",74,{"inputs":[{"name":"self"}],"output":null}],[11,"inline_composite_list_element_count","","",74,{"inputs":[{"name":"self"}],"output":{"name":"elementcount32"}}],[11,"set_kind_and_inline_composite_list_element_count","","",74,{"inputs":[{"name":"self"},{"name":"wirepointerkind"},{"name":"elementcount32"}],"output":null}],[11,"far_position_in_segment","","",74,{"inputs":[{"name":"self"}],"output":{"name":"wordcount32"}}],[11,"is_double_far","","",74,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_far","","",74,{"inputs":[{"name":"self"},{"name":"bool"},{"name":"wordcount32"}],"output":null}],[11,"set_cap","","",74,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"struct_ref","","",74,{"inputs":[{"name":"self"}],"output":{"name":"structref"}}],[11,"mut_struct_ref","","",74,{"inputs":[{"name":"self"}],"output":{"name":"structref"}}],[11,"list_ref","","",74,{"inputs":[{"name":"self"}],"output":{"name":"listref"}}],[11,"mut_list_ref","","",74,{"inputs":[{"name":"self"}],"output":{"name":"listref"}}],[11,"far_ref","","",74,{"inputs":[{"name":"self"}],"output":{"name":"farref"}}],[11,"mut_far_ref","","",74,{"inputs":[{"name":"self"}],"output":{"name":"farref"}}],[11,"cap_ref","","",74,{"inputs":[{"name":"self"}],"output":{"name":"capref"}}],[11,"mut_cap_ref","","",74,{"inputs":[{"name":"self"}],"output":{"name":"capref"}}],[11,"is_null","","",74,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clone","","",67,{"inputs":[{"name":"self"}],"output":{"name":"captablereader"}}],[11,"extract_cap","","",67,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",68,{"inputs":[{"name":"self"}],"output":{"name":"captablebuilder"}}],[11,"as_reader","","",68,{"inputs":[{"name":"self"}],"output":{"name":"captablereader"}}],[11,"extract_cap","","",68,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"option"}}],[11,"inject_cap","","",68,{"inputs":[{"name":"self"},{"name":"box"}],"output":{"name":"usize"}}],[11,"drop_cap","","",68,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"clone","","",75,{"inputs":[{"name":"self"}],"output":{"name":"pointerreader"}}],[11,"new_default","","",75,{"inputs":[],"output":{"name":"pointerreader"}}],[11,"get_root","","",75,null],[11,"borrow","","",75,{"inputs":[{"name":"self"}],"output":{"name":"pointerreader"}}],[11,"get_root_unchecked","","",75,null],[11,"imbue","","",75,{"inputs":[{"name":"self"},{"name":"captablereader"}],"output":null}],[11,"is_null","","",75,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"total_size","","",75,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"get_struct","","",75,null],[11,"get_list","","",75,null],[11,"get_text","","",75,null],[11,"get_data","","",75,null],[11,"get_capability","","",75,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"get_pointer_type","","",75,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"is_canonical","","",75,{"inputs":[{"name":"self"},{"name":"rc"}],"output":{"name":"result"}}],[11,"clone","","",76,{"inputs":[{"name":"self"}],"output":{"name":"pointerbuilder"}}],[11,"get_root","","",76,null],[11,"borrow","","",76,{"inputs":[{"name":"self"}],"output":{"name":"pointerbuilder"}}],[11,"imbue","","",76,{"inputs":[{"name":"self"},{"name":"captablebuilder"}],"output":null}],[11,"is_null","","",76,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"get_struct","","",76,null],[11,"get_list","","",76,null],[11,"get_struct_list","","",76,null],[11,"get_text","","",76,null],[11,"get_data","","",76,null],[11,"get_capability","","",76,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"init_struct","","",76,{"inputs":[{"name":"self"},{"name":"structsize"}],"output":{"name":"structbuilder"}}],[11,"init_list","","",76,{"inputs":[{"name":"self"},{"name":"elementsize"},{"name":"elementcount32"}],"output":{"name":"listbuilder"}}],[11,"init_struct_list","","",76,{"inputs":[{"name":"self"},{"name":"elementcount32"},{"name":"structsize"}],"output":{"name":"listbuilder"}}],[11,"init_text","","",76,{"inputs":[{"name":"self"},{"name":"bytecount32"}],"output":{"name":"builder"}}],[11,"init_data","","",76,{"inputs":[{"name":"self"},{"name":"bytecount32"}],"output":{"name":"builder"}}],[11,"set_struct","","",76,{"inputs":[{"name":"self"},{"name":"structreader"}],"output":{"name":"result"}}],[11,"set_list","","",76,{"inputs":[{"name":"self"},{"name":"listreader"}],"output":{"name":"result"}}],[11,"set_text","","",76,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[11,"set_data","","",76,null],[11,"set_capability","","",76,{"inputs":[{"name":"self"},{"name":"box"}],"output":null}],[11,"copy_from","","",76,{"inputs":[{"name":"self"},{"name":"pointerreader"},{"name":"bool"}],"output":{"name":"result"}}],[11,"clear","","",76,{"inputs":[{"name":"self"}],"output":null}],[11,"as_reader","","",76,{"inputs":[{"name":"self"}],"output":{"name":"pointerreader"}}],[11,"clone","","",77,{"inputs":[{"name":"self"}],"output":{"name":"structreader"}}],[11,"new_default","","",77,{"inputs":[],"output":{"name":"structreader"}}],[11,"imbue","","",77,{"inputs":[{"name":"self"},{"name":"captablereader"}],"output":null}],[11,"get_data_section_size","","",77,{"inputs":[{"name":"self"}],"output":{"name":"bitcount32"}}],[11,"get_pointer_section_size","","",77,{"inputs":[{"name":"self"}],"output":{"name":"wirepointercount16"}}],[11,"get_data_section_as_blob","","",77,null],[11,"get_data_field","","",77,{"inputs":[{"name":"self"},{"name":"elementcount"}],"output":{"name":"t"}}],[11,"get_bool_field","","",77,{"inputs":[{"name":"self"},{"name":"elementcount"}],"output":{"name":"bool"}}],[11,"get_data_field_mask","","",77,null],[11,"get_bool_field_mask","","",77,{"inputs":[{"name":"self"},{"name":"elementcount"},{"name":"bool"}],"output":{"name":"bool"}}],[11,"get_pointer_field","","",77,{"inputs":[{"name":"self"},{"name":"wirepointercount"}],"output":{"name":"pointerreader"}}],[11,"total_size","","",77,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"is_canonical","","",77,{"inputs":[{"name":"self"},{"name":"rc"},{"name":"rc"},{"name":"bool"},{"name":"bool"}],"output":{"name":"result"}}],[11,"clone","","",78,{"inputs":[{"name":"self"}],"output":{"name":"structbuilder"}}],[11,"as_reader","","",78,{"inputs":[{"name":"self"}],"output":{"name":"structreader"}}],[11,"imbue","","",78,{"inputs":[{"name":"self"},{"name":"captablebuilder"}],"output":null}],[11,"set_data_field","","",78,{"inputs":[{"name":"self"},{"name":"elementcount"},{"name":"t"}],"output":null}],[11,"set_data_field_mask","","",78,null],[11,"get_data_field","","",78,{"inputs":[{"name":"self"},{"name":"elementcount"}],"output":{"name":"t"}}],[11,"get_data_field_mask","","",78,null],[11,"set_bool_field","","",78,{"inputs":[{"name":"self"},{"name":"elementcount"},{"name":"bool"}],"output":null}],[11,"set_bool_field_mask","","",78,{"inputs":[{"name":"self"},{"name":"elementcount"},{"name":"bool"},{"name":"bool"}],"output":null}],[11,"get_bool_field","","",78,{"inputs":[{"name":"self"},{"name":"elementcount"}],"output":{"name":"bool"}}],[11,"get_bool_field_mask","","",78,{"inputs":[{"name":"self"},{"name":"elementcount"},{"name":"bool"}],"output":{"name":"bool"}}],[11,"get_pointer_field","","",78,{"inputs":[{"name":"self"},{"name":"wirepointercount"}],"output":{"name":"pointerbuilder"}}],[11,"clone","","",79,{"inputs":[{"name":"self"}],"output":{"name":"listreader"}}],[11,"new_default","","",79,{"inputs":[],"output":{"name":"listreader"}}],[11,"imbue","","",79,{"inputs":[{"name":"self"},{"name":"captablereader"}],"output":null}],[11,"len","","",79,{"inputs":[{"name":"self"}],"output":{"name":"elementcount32"}}],[11,"get_struct_element","","",79,{"inputs":[{"name":"self"},{"name":"elementcount32"}],"output":{"name":"structreader"}}],[11,"get_pointer_element","","",79,{"inputs":[{"name":"self"},{"name":"elementcount32"}],"output":{"name":"pointerreader"}}],[11,"is_canonical","","",79,null],[11,"clone","","",80,{"inputs":[{"name":"self"}],"output":{"name":"listbuilder"}}],[11,"new_default","","",80,{"inputs":[],"output":{"name":"listbuilder"}}],[11,"as_reader","","",80,{"inputs":[{"name":"self"}],"output":{"name":"listreader"}}],[11,"borrow","","",80,{"inputs":[{"name":"self"}],"output":{"name":"listbuilder"}}],[11,"imbue","","",80,{"inputs":[{"name":"self"},{"name":"captablebuilder"}],"output":null}],[11,"len","","",80,{"inputs":[{"name":"self"}],"output":{"name":"elementcount32"}}],[11,"get_struct_element","","",80,{"inputs":[{"name":"self"},{"name":"elementcount32"}],"output":{"name":"structbuilder"}}],[11,"get_pointer_element","","",80,{"inputs":[{"name":"self"},{"name":"elementcount32"}],"output":{"name":"pointerbuilder"}}],[0,"units","capnp::private","",null,null],[5,"_bytes_per_element","capnp::private::units","",null,{"inputs":[],"output":{"name":"bytecount"}}],[5,"bits_per_element","","",null,{"inputs":[],"output":{"name":"bitcount0"}}],[6,"BitCount0","","",null,null],[6,"BitCount8","","",null,null],[6,"BitCount16","","",null,null],[6,"BitCount32","","",null,null],[6,"BitCount64","","",null,null],[6,"ByteCount","","",null,null],[6,"ByteCount8","","",null,null],[6,"ByteCount16","","",null,null],[6,"ByteCount32","","",null,null],[6,"ByteCount64","","",null,null],[6,"WordCount","","",null,null],[6,"WordCount8","","",null,null],[6,"WordCount16","","",null,null],[6,"WordCount32","","",null,null],[6,"WordCount64","","",null,null],[6,"ElementCount","","",null,null],[6,"ElementCount8","","",null,null],[6,"ElementCount16","","",null,null],[6,"ElementCount32","","",null,null],[6,"ElementCount64","","",null,null],[6,"WirePointerCount","","",null,null],[6,"WirePointerCount8","","",null,null],[6,"WirePointerCount16","","",null,null],[6,"WirePointerCount32","","",null,null],[6,"WirePointerCount64","","",null,null],[17,"BITS_PER_BYTE","","",null,null],[17,"BITS_PER_WORD","","",null,null],[17,"BYTES_PER_WORD","","",null,null],[17,"BITS_PER_POINTER","","",null,null],[17,"_BYTES_PER_POINTER","","",null,null],[17,"WORDS_PER_POINTER","","",null,null],[17,"POINTER_SIZE_IN_WORDS","","",null,null],[0,"serialize","capnp","Reading and writing of messages using the standard stream framing.",null,null],[3,"SliceSegments","capnp::serialize","Segments read from a single flat slice of words.",null,null],[3,"OwnedSegments","","",null,null],[5,"read_message_from_words","","Reads a serialized message from a slice of words.",null,null],[5,"read_message","","Reads a serialized message from a stream with the provided options.",null,{"inputs":[{"name":"r"},{"name":"readeroptions"}],"output":{"name":"result"}}],[5,"write_message_to_words","","Constructs a flat vector containing the entire message.",null,{"inputs":[{"name":"builder"}],"output":{"name":"vec"}}],[5,"write_message","","Writes the provided message to `write`.",null,{"inputs":[{"name":"w"},{"name":"builder"}],"output":{"name":"result"}}],[5,"compute_serialized_size_in_words","","Returns the number of words required to serialize the message.",null,{"inputs":[{"name":"builder"}],"output":{"name":"usize"}}],[11,"get_segment","","",81,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[11,"get_segment","","",82,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[0,"serialize_packed","capnp","Reading and writing of messages using the packed stream encoding.",null,null],[5,"read_message","capnp::serialize_packed","Reads a packed message from a stream using the provided options.",null,{"inputs":[{"name":"r"},{"name":"readeroptions"}],"output":{"name":"result"}}],[5,"write_message","","Writes a packed message to a stream.",null,{"inputs":[{"name":"w"},{"name":"builder"}],"output":{"name":"result"}}],[0,"struct_list","capnp","List of structs.",null,null],[3,"Owned","capnp::struct_list","",null,null],[3,"Reader","","",null,null],[3,"Builder","","",null,null],[11,"clone","","",83,{"inputs":[{"name":"self"}],"output":{"name":"owned"}}],[11,"clone","","",84,{"inputs":[{"name":"self"}],"output":{"name":"reader"}}],[11,"new","","",84,{"inputs":[{"name":"listreader"}],"output":{"name":"reader"}}],[11,"len","","",84,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"iter","","",84,{"inputs":[{"name":"self"}],"output":{"name":"listiter"}}],[11,"borrow","","",84,{"inputs":[{"name":"self"}],"output":{"name":"reader"}}],[11,"get_from_pointer","","",84,{"inputs":[{"name":"pointerreader"}],"output":{"name":"result"}}],[11,"index_move","","",84,null],[11,"get","","",84,null],[11,"new","","",85,{"inputs":[{"name":"listbuilder"}],"output":{"name":"builder"}}],[11,"len","","",85,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"as_reader","","",85,{"inputs":[{"name":"self"}],"output":{"name":"reader"}}],[11,"borrow","","",85,{"inputs":[{"name":"self"}],"output":{"name":"builder"}}],[11,"init_pointer","","",85,{"inputs":[{"name":"pointerbuilder"},{"name":"u32"}],"output":{"name":"builder"}}],[11,"get_from_pointer","","",85,{"inputs":[{"name":"pointerbuilder"}],"output":{"name":"result"}}],[11,"get","","",85,null],[11,"set_pointer_builder","","",84,{"inputs":[{"name":"pointerbuilder"},{"name":"reader"}],"output":{"name":"result"}}],[0,"text","capnp","UTF-8 encoded text.",null,null],[3,"Owned","capnp::text","",null,null],[3,"Builder","","",null,null],[5,"new_reader","","",null,null],[6,"Reader","","",null,null],[11,"clone","","",86,{"inputs":[{"name":"self"}],"output":{"name":"owned"}}],[11,"get_from_pointer","","",87,{"inputs":[{"name":"pointerreader"}],"output":{"name":"result"}}],[11,"new","","",88,null],[11,"push_ascii","","",88,{"inputs":[{"name":"self"},{"name":"u8"}],"output":null}],[11,"push_str","","",88,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[11,"clear","","",88,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",88,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"as_ref","","",88,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"init_pointer","","",88,{"inputs":[{"name":"pointerbuilder"},{"name":"u32"}],"output":{"name":"builder"}}],[11,"get_from_pointer","","",88,{"inputs":[{"name":"pointerbuilder"}],"output":{"name":"result"}}],[11,"set_pointer_builder","","",87,{"inputs":[{"name":"pointerbuilder"},{"name":"reader"}],"output":{"name":"result"}}],[0,"text_list","capnp","List of strings containing UTF-8 encoded text.",null,null],[3,"Owned","capnp::text_list","",null,null],[3,"Reader","","",null,null],[3,"Builder","","",null,null],[11,"clone","","",89,{"inputs":[{"name":"self"}],"output":{"name":"owned"}}],[11,"clone","","",90,{"inputs":[{"name":"self"}],"output":{"name":"reader"}}],[11,"new","","",90,{"inputs":[{"name":"listreader"}],"output":{"name":"reader"}}],[11,"len","","",90,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"iter","","",90,{"inputs":[{"name":"self"}],"output":{"name":"listiter"}}],[11,"get_from_pointer","","",90,{"inputs":[{"name":"pointerreader"}],"output":{"name":"result"}}],[11,"index_move","","",90,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"get","","",90,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"new","","",91,{"inputs":[{"name":"listbuilder"}],"output":{"name":"builder"}}],[11,"len","","",91,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"set","","",91,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"reader"}],"output":null}],[11,"as_reader","","",91,{"inputs":[{"name":"self"}],"output":{"name":"reader"}}],[11,"borrow","","",91,{"inputs":[{"name":"self"}],"output":{"name":"builder"}}],[11,"init_pointer","","",91,{"inputs":[{"name":"pointerbuilder"},{"name":"u32"}],"output":{"name":"builder"}}],[11,"get_from_pointer","","",91,{"inputs":[{"name":"pointerbuilder"}],"output":{"name":"result"}}],[11,"get","","",91,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"set_pointer_builder","","",90,{"inputs":[{"name":"pointerbuilder"},{"name":"reader"}],"output":{"name":"result"}}],[0,"traits","capnp","",null,null],[3,"ListIter","capnp::traits","",null,null],[8,"FromStructReader","","",null,null],[10,"new","","",92,{"inputs":[{"name":"structreader"}],"output":{"name":"self"}}],[8,"HasStructSize","","",null,null],[10,"struct_size","","",93,{"inputs":[],"output":{"name":"structsize"}}],[8,"FromStructBuilder","","",null,null],[10,"new","","",94,{"inputs":[{"name":"structbuilder"}],"output":{"name":"self"}}],[8,"FromPointerReader","","",null,null],[10,"get_from_pointer","","",95,{"inputs":[{"name":"pointerreader"}],"output":{"name":"result"}}],[8,"Owned","","Associated types hackery that allows us to reason about Cap'n Proto types without needing to give them a lifetime `'a`.",null,null],[16,"Reader","","",96,null],[16,"Builder","","",96,null],[8,"OwnedStruct","","",null,null],[16,"Reader","","",97,null],[16,"Builder","","",97,null],[8,"Pipelined","","",null,null],[16,"Pipeline","","",98,null],[8,"FromPointerReaderRefDefault","","",null,null],[10,"get_from_pointer","","",99,null],[8,"FromPointerBuilder","","",null,null],[10,"init_pointer","","",100,{"inputs":[{"name":"pointerbuilder"},{"name":"u32"}],"output":{"name":"self"}}],[10,"get_from_pointer","","",100,{"inputs":[{"name":"pointerbuilder"}],"output":{"name":"result"}}],[8,"FromPointerBuilderRefDefault","","",null,null],[10,"get_from_pointer","","",101,null],[8,"SetPointerBuilder","","",null,null],[10,"set_pointer_builder","","",102,{"inputs":[{"name":"pointerbuilder"},{"name":"self"}],"output":{"name":"result"}}],[11,"set_pointer_canonical","","",102,{"inputs":[{"name":"pointerbuilder"},{"name":"self"}],"output":{"name":"result"}}],[8,"Imbue","","",null,null],[10,"imbue","","",103,{"inputs":[{"name":"self"},{"name":"captable"}],"output":null}],[8,"ImbueMut","","",null,null],[10,"imbue_mut","","",104,{"inputs":[{"name":"self"},{"name":"captable"}],"output":null}],[8,"HasTypeId","","",null,null],[10,"type_id","","",105,{"inputs":[],"output":{"name":"u64"}}],[8,"ToU16","","",null,null],[10,"to_u16","","",106,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[8,"FromU16","","",null,null],[10,"from_u16","","",107,{"inputs":[{"name":"u16"}],"output":{"name":"result"}}],[8,"IndexMove","","",null,null],[10,"index_move","","",108,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"t"}}],[11,"new","","",109,{"inputs":[{"name":"t"},{"name":"u32"}],"output":{"name":"listiter"}}],[11,"next","","",109,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",109,null],[11,"nth","","",109,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"option"}}],[11,"len","","",109,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"next_back","","",109,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[6,"Result","capnp","Because messages are lazily validated, the return type of any method that reads a pointer field must be wrapped in a Result.",null,null],[11,"clone","","",110,{"inputs":[{"name":"self"}],"output":{"name":"word"}}],[11,"fmt","","",110,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",110,{"inputs":[{"name":"self"},{"name":"word"}],"output":{"name":"bool"}}],[11,"ne","","",110,{"inputs":[{"name":"self"},{"name":"word"}],"output":{"name":"bool"}}],[11,"allocate_zeroed_vec","","Does this, but faster: `::std::iter::repeat(Word(0)).take(length).collect()`",110,{"inputs":[{"name":"usize"}],"output":{"name":"vec"}}],[11,"bytes_to_words","","",110,null],[11,"bytes_to_words_mut","","",110,null],[11,"words_to_bytes","","",110,null],[11,"words_to_bytes_mut","","",110,null],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"messagesize"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"messagesize"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"messagesize"}],"output":{"name":"bool"}}],[11,"plus_eq","","",0,{"inputs":[{"name":"self"},{"name":"messagesize"}],"output":null}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"notinschema"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"notinschema"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"notinschema"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",1,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"errorkind"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"failed","","",2,{"inputs":[{"name":"string"}],"output":{"name":"error"}}],[11,"overloaded","","",2,{"inputs":[{"name":"string"}],"output":{"name":"error"}}],[11,"disconnected","","",2,{"inputs":[{"name":"string"}],"output":{"name":"error"}}],[11,"unimplemented","","",2,{"inputs":[{"name":"string"}],"output":{"name":"error"}}],[11,"from","","",2,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from","","",2,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"error"}}],[11,"from","","",2,{"inputs":[{"name":"utf8error"}],"output":{"name":"error"}}],[11,"from","","",2,{"inputs":[{"name":"notinschema"}],"output":{"name":"error"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",2,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",2,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"deref","","",4,null],[14,"capnp_word","","Constructs a `Word` from its constituent bytes, accounting for endianness. This macro can be used to construct constants. In the future, once Rust supports constant functions, this macro will be replaced by such a function.",null,null]],"paths":[[3,"MessageSize"],[3,"NotInSchema"],[3,"Error"],[4,"ErrorKind"],[4,"OutputSegments"],[3,"Pipeline"],[3,"Owned"],[3,"Reader"],[3,"Builder"],[3,"RemotePromise"],[3,"Response"],[3,"Request"],[3,"Params"],[3,"Results"],[3,"Client"],[8,"FromTypelessPipeline"],[8,"FromClientHook"],[8,"Server"],[3,"Promise"],[3,"Reader"],[3,"Owned"],[6,"Reader"],[6,"Builder"],[3,"Reader"],[3,"Owned"],[3,"Builder"],[3,"Owned"],[3,"Reader"],[3,"Builder"],[3,"Owned"],[3,"Reader"],[3,"Builder"],[3,"ReaderOptions"],[4,"AllocationStrategy"],[8,"ReaderSegments"],[8,"Allocator"],[3,"SegmentArray"],[3,"Reader"],[3,"Builder"],[3,"HeapAllocator"],[3,"ScratchSpace"],[3,"ScratchSpaceHeapAllocator"],[3,"Owned"],[3,"Reader"],[3,"Builder"],[3,"RawSchema"],[3,"ReadLimiter"],[8,"ReaderArena"],[8,"BuilderArena"],[3,"ReaderArenaImpl"],[3,"BuilderArenaImpl"],[3,"BuilderArenaImplInner"],[3,"NullArena"],[4,"PipelineOp"],[8,"ResponseHook"],[8,"RequestHook"],[8,"ClientHook"],[8,"ServerHook"],[8,"ResultsHook"],[8,"ParamsHook"],[8,"PipelineHook"],[8,"Endian"],[3,"WireValue"],[3,"StructSize"],[4,"ElementSize"],[4,"WirePointerKind"],[4,"PointerType"],[4,"CapTableReader"],[4,"CapTableBuilder"],[8,"PrimitiveElement"],[3,"StructRef"],[3,"ListRef"],[3,"FarRef"],[3,"CapRef"],[3,"WirePointer"],[3,"PointerReader"],[3,"PointerBuilder"],[3,"StructReader"],[3,"StructBuilder"],[3,"ListReader"],[3,"ListBuilder"],[3,"SliceSegments"],[3,"OwnedSegments"],[3,"Owned"],[3,"Reader"],[3,"Builder"],[3,"Owned"],[6,"Reader"],[3,"Builder"],[3,"Owned"],[3,"Reader"],[3,"Builder"],[8,"FromStructReader"],[8,"HasStructSize"],[8,"FromStructBuilder"],[8,"FromPointerReader"],[8,"Owned"],[8,"OwnedStruct"],[8,"Pipelined"],[8,"FromPointerReaderRefDefault"],[8,"FromPointerBuilder"],[8,"FromPointerBuilderRefDefault"],[8,"SetPointerBuilder"],[8,"Imbue"],[8,"ImbueMut"],[8,"HasTypeId"],[8,"ToU16"],[8,"FromU16"],[8,"IndexMove"],[3,"ListIter"],[3,"Word"]]};
searchIndex["clap"] = {"doc":"`clap` is a simple-to-use, efficient, and full-featured library for parsing command line arguments and subcommands when writing console/terminal applications.","items":[[3,"Arg","clap","The abstract representation of a command line argument. Used to set all the options and relationships that define a valid argument for the program.",null,null],[3,"ArgGroup","","`ArgGroup`s are a family of related [arguments] and way for you to express, \"Any of these arguments\". By placing arguments in a logical group, you can create easier requirement and exclusion rules instead of having to list each argument individually, or when you want a rule to apply \"any but not all\" arguments.",null,null],[3,"ArgMatches","","Used to get information about the arguments that where supplied to the program at runtime by the user. New instances of this struct are obtained by using the [`App::get_matches`] family of methods.",null,null],[3,"SubCommand","","The abstract representation of a command line subcommand.",null,null],[3,"Values","","An iterator for getting multiple values out of an argument via the [`ArgMatches::values_of`] method.",null,null],[3,"OsValues","","An iterator for getting multiple values out of an argument via the [`ArgMatches::values_of_os`] method. Usage of this iterator allows values which contain invalid UTF-8 code points unlike [`Values`].",null,null],[3,"App","","Used to create a representation of a command line program and all possible command line arguments. Application settings are set using the \"builder pattern\" with the [`App::get_matches`] family of methods being the terminal methods that starts the runtime-parsing process. These methods then return information about the user supplied arguments (or lack there of).",null,null],[3,"Error","","Command Line Argument Parser Error",null,null],[12,"message","","Formated error message",0,null],[12,"kind","","The type of error",0,null],[12,"info","","Any additional information passed along, such as the argument name that caused the error",0,null],[4,"ArgSettings","","Various settings that apply to arguments and may be set, unset, and checked via getter/setter methods [`Arg::set`], [`Arg::unset`], and [`Arg::is_set`] [`Arg::set`]: ./struct.Arg.html#method.set [`Arg::unset`]: ./struct.Arg.html#method.unset [`Arg::is_set`]: ./struct.Arg.html#method.is_set",null,null],[13,"Required","","The argument must be used",1,null],[13,"Multiple","","The argument may be used multiple times such as `--flag --flag`",1,null],[13,"EmptyValues","","The argument allows empty values such as `--option \"\"`",1,null],[13,"Global","","The argument should be propagated down through all child [`SubCommands`] [`SubCommand`]: ./struct.SubCommand.html",1,null],[13,"Hidden","","The argument should not be shown in help text",1,null],[13,"TakesValue","","The argument accepts a value, such as `--option <value>`",1,null],[13,"UseValueDelimiter","","Determines if the argument allows values to be grouped via a delimter",1,null],[13,"NextLineHelp","","Prints the help text on the line after the argument",1,null],[13,"RequireDelimiter","","Requires the use of a value delimiter for all multiple values",1,null],[13,"HidePossibleValues","","Hides the possible values from the help string",1,null],[13,"AllowLeadingHyphen","","Allows vals that start with a '-'",1,null],[13,"RequireEquals","","Require options use `--option=val` syntax",1,null],[13,"Last","","Specifies that the arg is the last positional argument and may be accessed early via `--` syntax",1,null],[13,"HideDefaultValue","","Hides the default value from the help string",1,null],[4,"AppSettings","","Application level settings, which affect how [`App`] operates",null,null],[13,"AllowInvalidUtf8","","Specifies that any invalid UTF-8 code points should not be treated as an error. This is the default behavior of `clap`.",2,null],[13,"AllowLeadingHyphen","","Specifies that leading hyphens are allowed in argument values, such as negative numbers like `-10`. (which would otherwise be parsed as another flag or option)",2,null],[13,"AllowNegativeNumbers","","Allows negative numbers to pass as values. This is similar to `AllowLeadingHyphen` except that it only allows numbers, all other undefined leading hyphens will fail to parse.",2,null],[13,"AllowMissingPositional","","Allows one to implement a CLI where the second to last positional argument is optional, but the final positional argument is required. Such as `$ prog [optional] <required>` where one of the two following usages is allowed:",2,null],[13,"AllowExternalSubcommands","","Specifies that an unexpected positional argument, which would otherwise cause a [`ErrorKind::UnknownArgument`] error, should instead be treated as a [`SubCommand`] within the [`ArgMatches`] struct.",2,null],[13,"ArgsNegateSubcommands","","Specifies that use of a valid [argument] negates [subcomands] being used after. By default `clap` allows arguments between subcommands such as `<cmd> [cmd_args] <cmd2> [cmd2_args] <cmd3> [cmd3_args]`. This setting disables that functionality and says that arguments can only follow the final subcommand. For instance using this setting makes only the following invocations possible:",2,null],[13,"ArgRequiredElseHelp","","Specifies that the help text should be displayed (and then exit gracefully), if no arguments are present at runtime (i.e. an empty run such as, `$ myprog`.",2,null],[13,"ColoredHelp","","Uses colorized help messages.",2,null],[13,"ColorAuto","","Enables colored output only when the output is going to a terminal or TTY.",2,null],[13,"ColorAlways","","Enables colored output regardless of whether or not the output is going to a terminal/TTY.",2,null],[13,"ColorNever","","Disables colored output no matter if the output is going to a terminal/TTY, or not.",2,null],[13,"DontCollapseArgsInUsage","","Disables the automatic collapsing of positional args into `[ARGS]` inside the usage string",2,null],[13,"DontDelimitTrailingValues","","Disables the automatic delimiting of values when `--` or [`AppSettings::TrailingVarArg`] was used.",2,null],[13,"DisableHelpSubcommand","","Disables the `help` subcommand",2,null],[13,"DisableVersion","","Disables `-V` and `--version` [`App`] without affecting any of the [`SubCommand`]s (Defaults to `false`; application does have a version flag)",2,null],[13,"DeriveDisplayOrder","","Displays the arguments and [`SubCommand`]s in the help message in the order that they were declared in, and not alphabetically which is the default.",2,null],[13,"GlobalVersion","","Specifies to use the version of the current command for all child [`SubCommand`]s. (Defaults to `false`; subcommands have independant version strings from their parents.)",2,null],[13,"Hidden","","Specifies that this [`SubCommand`] should be hidden from help messages",2,null],[13,"HidePossibleValuesInHelp","","Tells `clap` not to print possible values when displaying help information. This can be useful if there are many values, or they are explained elsewhere.",2,null],[13,"InferSubcommands","","Tries to match unknown args to partial [`subcommands`] or their [aliases]. For example to match a subcommand named `test`, one could use `t`, `te`, `tes`, and `test`.",2,null],[13,"NoBinaryName","","Specifies that the parser should not assume the first argument passed is the binary name. This is normally the case when using a \"daemon\" style mode, or an interactive CLI where one one would not normally type the binary or program name for each command.",2,null],[13,"NextLineHelp","","Places the help string for all arguments on the line after the argument.",2,null],[13,"PropagateGlobalValuesDown","","Specifies that the parser should propagate global arg's values down through any used child subcommands. Meaning, if a subcommand wasn't used, the values won't be propagated down to said subcommand.",2,null],[13,"SubcommandsNegateReqs","","Allows [`SubCommand`]s to override all requirements of the parent command. For example if you had a subcommand or top level application with a required argument that is only required as long as there is no subcommand present, using this setting would allow you to set those arguments to [`Arg::required(true)`] and yet receive no error so long as the user uses a valid subcommand instead.",2,null],[13,"SubcommandRequiredElseHelp","","Specifies that the help text should be displayed (before exiting gracefully) if no [`SubCommand`]s are present at runtime (i.e. an empty run such as `$ myprog`).",2,null],[13,"StrictUtf8","","Specifies that any invalid UTF-8 code points should be treated as an error and fail with a [`ErrorKind::InvalidUtf8`] error.",2,null],[13,"SubcommandRequired","","Allows specifying that if no [`SubCommand`] is present at runtime, error and exit gracefully.",2,null],[13,"TrailingVarArg","","Specifies that the final positional argument is a \"VarArg\" and that `clap` should not attempt to parse any further args.",2,null],[13,"UnifiedHelpMessage","","Groups flags and options together, presenting a more unified help message (a la `getopts` or `docopt` style).",2,null],[13,"VersionlessSubcommands","","Disables `-V` and `--version` for all [`SubCommand`]s (Defaults to `false`; subcommands do have version flags.)",2,null],[13,"WaitOnError","","Will display a message \"Press [ENTER]/[RETURN] to continue...\" and wait for user before exiting",2,null],[4,"ErrorKind","","Command line argument parser kind of error",null,null],[13,"InvalidValue","","Occurs when an [`Arg`] has a set of possible values, and the user provides a value which isn't in that set.",3,null],[13,"UnknownArgument","","Occurs when a user provides a flag, option, argument or subcommand which isn't defined.",3,null],[13,"InvalidSubcommand","","Occurs when the user provides an unrecognized [`SubCommand`] which meets the threshold for being similar enough to an existing subcommand. If it doesn't meet the threshold, or the 'suggestions' feature is disabled, the more general [`UnknownArgument`] error is returned.",3,null],[13,"UnrecognizedSubcommand","","Occurs when the user provides an unrecognized [`SubCommand`] which either doesn't meet the threshold for being similar enough to an existing subcommand, or the 'sggestions' feature is disabled. Otherwise the more detailed [`InvalidSubcommand`] error is returned.",3,null],[13,"EmptyValue","","Occurs when the user provides an empty value for an option that does not allow empty values.",3,null],[13,"ValueValidation","","Occurs when the user provides a value for an argument with a custom validation and the value fails that validation.",3,null],[13,"TooManyValues","","Occurs when a user provides more values for an argument than were defined by setting [`Arg::max_values`].",3,null],[13,"TooFewValues","","Occurs when the user provides fewer values for an argument than were defined by setting [`Arg::min_values`].",3,null],[13,"WrongNumberOfValues","","Occurs when the user provides a different number of values for an argument than what's been defined by setting [`Arg::number_of_values`] or than was implicitly set by [`Arg::value_names`].",3,null],[13,"ArgumentConflict","","Occurs when the user provides two values which conflict with each other and can't be used together.",3,null],[13,"MissingRequiredArgument","","Occurs when the user does not provide one or more required arguments.",3,null],[13,"MissingSubcommand","","Occurs when a subcommand is required (as defined by [`AppSettings::SubcommandRequired`]), but the user does not provide one.",3,null],[13,"MissingArgumentOrSubcommand","","Occurs when either an argument or [`SubCommand`] is required, as defined by [`AppSettings::ArgRequiredElseHelp`], but the user did not provide one.",3,null],[13,"UnexpectedMultipleUsage","","Occurs when the user provides multiple values to an argument which doesn't allow that.",3,null],[13,"InvalidUtf8","","Occurs when the user provides a value containing invalid UTF-8 for an argument and [`AppSettings::StrictUtf8`] is set.",3,null],[13,"HelpDisplayed","","Not a true \"error\" as it means `--help` or similar was used. The help message will be sent to `stdout`.",3,null],[13,"VersionDisplayed","","Not a true \"error\" as it means `--version` or similar was used. The message will be sent to `stdout`.",3,null],[13,"ArgumentNotFound","","Occurs when using the [`value_t!`] and [`values_t!`] macros to convert an argument value into type `T`, but the argument you requested wasn't used. I.e. you asked for an argument with name `config` to be converted, but `config` wasn't used by the user. [`value_t!`]: ./macro.value_t!.html [`values_t!`]: ./macro.values_t!.html",3,null],[13,"Io","","Represents an [I/O error]. Can occur when writing to `stderr` or `stdout` or reading a configuration file. [I/O error]: https://doc.rust-lang.org/std/io/struct.Error.html",3,null],[13,"Format","","Represents a [Format error] (which is a part of [`Display`]). Typically caused by writing to `stderr` or `stdout`. [`Display`]: https://doc.rust-lang.org/std/fmt/trait.Display.html [Format error]: https://doc.rust-lang.org/std/fmt/struct.Error.html",3,null],[4,"Shell","","Describes which shell to produce a completions file for",null,null],[13,"Bash","","Generates a .bash-completion completion file for the Bourne Again SHell (BASH)",4,null],[13,"Fish","","Generates a .fish completion file for the Friendly Interactive SHell (fish)",4,null],[13,"Zsh","","Generates a completion file for the Z SHell (ZSH)",4,null],[13,"PowerShell","","Generates a completion file for PowerShell",4,null],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"appsettings"}],"output":{"name":"bool"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"appsettings"}}],[11,"from_str","","",2,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"new","","Creates a new instance of an application requiring a name. The name may be, but doesn't have to be same as the binary. The name will be displayed to the user when they request to print version or help and usage information.",5,{"inputs":[{"name":"s"}],"output":{"name":"self"}}],[11,"get_name","","Get the name of the app",5,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"get_bin_name","","Get the name of the binary",5,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"with_defaults","","Creates a new instance of an application requiring a name, but uses the [`crate_authors!`] and [`crate_version!`] macros to fill in the [`App::author`] and [`App::version`] fields.",5,{"inputs":[{"name":"s"}],"output":{"name":"self"}}],[11,"author","","Sets a string of author(s) that will be displayed to the user when they request the help information with `--help` or `-h`.",5,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"self"}}],[11,"bin_name","","Overrides the system-determined binary name. This should only be used when absolutely necessary, such as when the binary name for your application is misleading, or perhaps not how the user should invoke your program.",5,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"self"}}],[11,"about","","Sets a string describing what the program does. This will be displayed when displaying help information with `-h`.",5,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"self"}}],[11,"long_about","","Sets a string describing what the program does. This will be displayed when displaying help information.",5,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"self"}}],[11,"name","","Sets the program's name. This will be displayed when displaying help information.",5,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"self"}}],[11,"after_help","","Adds additional help information to be displayed in addition to auto-generated help. This information is displayed after the auto-generated help information. This is often used to describe how to use the arguments, or caveats to be noted.",5,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"self"}}],[11,"before_help","","Adds additional help information to be displayed in addition to auto-generated help. This information is displayed before the auto-generated help information. This is often used for header information.",5,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"self"}}],[11,"version","","Sets a string of the version number to be displayed when displaying version or help information with `-V`. ",5,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"self"}}],[11,"long_version","","Sets a string of the version number to be displayed when displaying version or help information with `--version`.",5,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"self"}}],[11,"usage","","Sets a custom usage string to override the auto-generated usage string.",5,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"self"}}],[11,"help","","Sets a custom help message and overrides the auto-generated one. This should only be used when the auto-generated message does not suffice.",5,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"self"}}],[11,"help_short","","Sets the [`short`] for the auto-generated `help` argument.",5,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"self"}}],[11,"version_short","","Sets the [`short`] for the auto-generated `version` argument.",5,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"self"}}],[11,"help_message","","Sets the help text for the auto-generated `help` argument.",5,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"self"}}],[11,"version_message","","Sets the help text for the auto-generated `version` argument.",5,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"self"}}],[11,"template","","Sets the help template to be used, overriding the default format.",5,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"self"}}],[11,"setting","","Enables a single command, or [`SubCommand`], level settings.",5,{"inputs":[{"name":"self"},{"name":"appsettings"}],"output":{"name":"self"}}],[11,"settings","","Enables multiple command, or [`SubCommand`], level settings",5,null],[11,"global_setting","","Enables a single setting that is propogated down through all child [`SubCommand`]s.",5,{"inputs":[{"name":"self"},{"name":"appsettings"}],"output":{"name":"self"}}],[11,"global_settings","","Enables multiple settings which are propogated down through all child [`SubCommand`]s.",5,null],[11,"unset_setting","","Disables a single command, or [`SubCommand`], level setting.",5,{"inputs":[{"name":"self"},{"name":"appsettings"}],"output":{"name":"self"}}],[11,"unset_settings","","Disables multiple command, or [`SubCommand`], level settings.",5,null],[11,"set_term_width","","Sets the terminal width at which to wrap help messages. Defaults to `120`. Using `0` will ignore terminal widths and use source formatting.",5,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"max_term_width","","Sets the max terminal width at which to wrap help messages. Using `0` will ignore terminal widths and use source formatting.",5,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"arg","","Adds an [argument] to the list of valid possibilities.",5,{"inputs":[{"name":"self"},{"name":"a"}],"output":{"name":"self"}}],[11,"args","","Adds multiple [arguments] to the list of valid possibilties",5,null],[11,"arg_from_usage","","A convenience method for adding a single [argument] from a usage type string. The string used follows the same rules and syntax as [`Arg::from_usage`]",5,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"self"}}],[11,"args_from_usage","","Adds multiple [arguments] at once from a usage string, one per line. See [`Arg::from_usage`] for details on the syntax and rules supported.",5,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"self"}}],[11,"alias","","Allows adding a [`SubCommand`] alias, which function as \"hidden\" subcommands that automatically dispatch as if this subcommand was used. This is more efficient, and easier than creating multiple hidden subcommands as one only needs to check for the existence of this command, and not all variants.",5,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"self"}}],[11,"aliases","","Allows adding [`SubCommand`] aliases, which function as \"hidden\" subcommands that automatically dispatch as if this subcommand was used. This is more efficient, and easier than creating multiple hidden subcommands as one only needs to check for the existence of this command, and not all variants.",5,null],[11,"visible_alias","","Allows adding a [`SubCommand`] alias that functions exactly like those defined with [`App::alias`], except that they are visible inside the help message.",5,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"self"}}],[11,"visible_aliases","","Allows adding multiple [`SubCommand`] aliases that functions exactly like those defined with [`App::aliases`], except that they are visible inside the help message.",5,null],[11,"group","","Adds an [`ArgGroup`] to the application. [`ArgGroup`]s are a family of related arguments. By placing them in a logical group, you can build easier requirement and exclusion rules. For instance, you can make an entire [`ArgGroup`] required, meaning that one (and only one) argument from that group must be present at runtime.",5,{"inputs":[{"name":"self"},{"name":"arggroup"}],"output":{"name":"self"}}],[11,"groups","","Adds multiple [`ArgGroup`]s to the [`App`] at once.",5,null],[11,"subcommand","","Adds a [`SubCommand`] to the list of valid possibilities. Subcommands are effectively sub-[`App`]s, because they can contain their own arguments, subcommands, version, usage, etc. They also function just like [`App`]s, in that they get their own auto generated help, version, and usage.",5,{"inputs":[{"name":"self"},{"name":"app"}],"output":{"name":"self"}}],[11,"subcommands","","Adds multiple subcommands to the list of valid possibilities by iterating over an [`IntoIterator`] of [`SubCommand`]s",5,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"self"}}],[11,"display_order","","Allows custom ordering of [`SubCommand`]s within the help message. Subcommands with a lower value will be displayed first in the help message. This is helpful when one would like to emphasise frequently used subcommands, or prioritize those towards the top of the list. Duplicate values are allowed. Subcommands with duplicate display orders will be displayed in alphabetical order.",5,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"print_help","","Prints the full help message to [`io::stdout()`] using a [`BufWriter`] using the same method as if someone ran `-h` to request the help message",5,{"inputs":[{"name":"self"}],"output":{"name":"clapresult"}}],[11,"print_long_help","","Prints the full help message to [`io::stdout()`] using a [`BufWriter`] using the same method as if someone ran `-h` to request the help message",5,{"inputs":[{"name":"self"}],"output":{"name":"clapresult"}}],[11,"write_help","","Writes the full help message to the user to a [`io::Write`] object in the same method as if the user ran `-h`",5,{"inputs":[{"name":"self"},{"name":"w"}],"output":{"name":"clapresult"}}],[11,"write_long_help","","Writes the full help message to the user to a [`io::Write`] object in the same method as if the user ran `--help`",5,{"inputs":[{"name":"self"},{"name":"w"}],"output":{"name":"clapresult"}}],[11,"write_version","","Writes the version message to the user to a [`io::Write`] object as if the user ran `-V`.",5,{"inputs":[{"name":"self"},{"name":"w"}],"output":{"name":"clapresult"}}],[11,"write_long_version","","Writes the version message to the user to a [`io::Write`] object",5,{"inputs":[{"name":"self"},{"name":"w"}],"output":{"name":"clapresult"}}],[11,"gen_completions","","Generate a completions file for a specified shell at compile time.",5,{"inputs":[{"name":"self"},{"name":"s"},{"name":"shell"},{"name":"t"}],"output":null}],[11,"gen_completions_to","","Generate a completions file for a specified shell at runtime.  Until `cargo install` can install extra files like a completion script, this may be used e.g. in a command that outputs the contents of the completion script, to be redirected into a file by the user.",5,{"inputs":[{"name":"self"},{"name":"s"},{"name":"shell"},{"name":"w"}],"output":null}],[11,"get_matches","","Starts the parsing process, upon a failed parse an error will be displayed to the user and the process will exit with the appropriate error code. By default this method gets all user provided arguments from [`env::args_os`] in order to allow for invalid UTF-8 code points, which are legal on many platforms.",5,{"inputs":[{"name":"self"}],"output":{"name":"argmatches"}}],[11,"get_matches_safe","","Starts the parsing process. This method will return a [`clap::Result`] type instead of exiting the process on failed parse. By default this method gets matches from [`env::args_os`]",5,{"inputs":[{"name":"self"}],"output":{"name":"clapresult"}}],[11,"get_matches_from","","Starts the parsing process. Like [`App::get_matches`] this method does not return a [`clap::Result`] and will automatically exit with an error message. This method, however, lets you specify what iterator to use when performing matches, such as a [`Vec`] of your making.",5,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"argmatches"}}],[11,"get_matches_from_safe","","Starts the parsing process. A combination of [`App::get_matches_from`], and [`App::get_matches_safe`]",5,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"clapresult"}}],[11,"get_matches_from_safe_borrow","","Starts the parsing process without consuming the [`App`] struct `self`. This is normally not the desired functionality, instead prefer [`App::get_matches_from_safe`] which does consume `self`.",5,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"clapresult"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",6,{"inputs":[],"output":{"name":"arg"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"arg"}}],[11,"with_name","","Creates a new instance of [`Arg`] using a unique string name. The name will be used to get information about whether or not the argument was used at runtime, get values, set relationships with other args, etc..",6,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from_usage","","Creates a new instance of [`Arg`] from a usage string. Allows creation of basic settings for the [`Arg`]. The syntax is flexible, but there are some rules to follow.",6,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"short","","Sets the short version of the argument without the preceding `-`.",6,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"self"}}],[11,"long","","Sets the long version of the argument without the preceding `--`.",6,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"self"}}],[11,"alias","","Allows adding a [`Arg`] alias, which function as \"hidden\" arguments that automatically dispatch as if this argument was used. This is more efficient, and easier than creating multiple hidden arguments as one only needs to check for the existence of this command, and not all variants.",6,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"self"}}],[11,"aliases","","Allows adding [`Arg`] aliases, which function as \"hidden\" arguments that automatically dispatch as if this argument was used. This is more efficient, and easier than creating multiple hidden subcommands as one only needs to check for the existence of this command, and not all variants.",6,null],[11,"visible_alias","","Allows adding a [`Arg`] alias that functions exactly like those defined with [`Arg::alias`], except that they are visible inside the help message.",6,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"self"}}],[11,"visible_aliases","","Allows adding multiple [`Arg`] aliases that functions exactly like those defined with [`Arg::aliases`], except that they are visible inside the help message.",6,null],[11,"help","","Sets the short help text of the argument that will be displayed to the user when they print the help information with `-h`. Typically, this is a short (one line) description of the arg.",6,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"self"}}],[11,"long_help","","Sets the long help text of the argument that will be displayed to the user when they print the help information with `--help`. Typically this a more detailed (multi-line) message that describes the arg.",6,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"self"}}],[11,"last","","Specifies that this arg is the last, or final, positional argument (i.e. has the highest index) and is only able to be accessed via the `--` syntax (i.e. `$ prog args -- last_arg`). Even, if no other arguments are left to parse, if the user omits the `--` syntax they will receive an [`UnknownArgument`] error. Setting an argument to `.last(true)` also allows one to access this arg early using the `--` syntax. Accessing an arg early, even with the `--` syntax is otherwise not possible.",6,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"self"}}],[11,"required","","Sets whether or not the argument is required by default. Required by default means it is required, when no other conflicting rules have been evaluated. Conflicting rules take precedence over being required. Default: `false`",6,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"self"}}],[11,"require_equals","","Requires that options use the `--option=val` syntax (i.e. an equals between the option and associated value) Default: `false`",6,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"self"}}],[11,"allow_hyphen_values","","Allows values which start with a leading hyphen (`-`)",6,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"self"}}],[11,"required_unless","","Sets an arg that override this arg's required setting. (i.e. this arg will be required unless this other argument is present).",6,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"self"}}],[11,"required_unless_all","","Sets args that override this arg's required setting. (i.e. this arg will be required unless all these other arguments are present).",6,null],[11,"required_unless_one","","Sets args that override this arg's [required] setting. (i.e. this arg will be required unless at least one of these other arguments are present).",6,null],[11,"conflicts_with","","Sets a conflicting argument by name. I.e. when using this argument, the following argument can't be present and vice versa.",6,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"self"}}],[11,"conflicts_with_all","","The same as [`Arg::conflicts_with`] but allows specifying multiple two-way conlicts per argument.",6,null],[11,"overrides_with","","Sets a overridable argument by name. I.e. this argument and the following argument will override each other in POSIX style (whichever argument was specified at runtime last \"wins\")",6,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"self"}}],[11,"overrides_with_all","","Sets multiple mutually overridable arguments by name. I.e. this argument and the following argument will override each other in POSIX style (whichever argument was specified at runtime last \"wins\")",6,null],[11,"requires","","Sets an argument by name that is required when this one is present I.e. when using this argument, the following argument must be present.",6,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"self"}}],[11,"requires_if","","Allows a conditional requirement. The requirement will only become valid if this arg's value equals `val`.",6,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"}],"output":{"name":"self"}}],[11,"requires_ifs","","Allows multiple conditional requirements. The requirement will only become valid if this arg's value equals `val`.",6,null],[11,"required_if","","Allows specifying that an argument is [required] conditionally. The requirement will only become valid if the specified `arg`'s value equals `val`.",6,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"}],"output":{"name":"self"}}],[11,"required_ifs","","Allows specifying that an argument is [required] based on multiple conditions. The conditions are set up in a `(arg, val)` style tuple. The requirement will only become valid if one of the specified `arg`'s value equals it's corresponding `val`.",6,null],[11,"requires_all","","Sets multiple arguments by names that are required when this one is present I.e. when using this argument, the following arguments must be present.",6,null],[11,"takes_value","","Specifies that the argument takes a value at run time.",6,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"self"}}],[11,"hide_possible_values","","Specifies if the possible values of an argument should be displayed in the help text or not. Defaults to `false` (i.e. show possible values)",6,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"self"}}],[11,"hide_default_value","","Specifies if the default value of an argument should be displayed in the help text or not. Defaults to `false` (i.e. show default value)",6,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"self"}}],[11,"index","","Specifies the index of a positional argument starting at 1.",6,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"self"}}],[11,"multiple","","Specifies that the argument may appear more than once. For flags, this results in the number of occurrences of the flag being recorded. For example `-ddd` or `-d -d -d` would count as three occurrences. For options there is a distinct difference in multiple occurrences vs multiple values.",6,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"self"}}],[11,"value_terminator","","Specifies a value that stops parsing multiple values of a give argument. By default when one sets [`multiple(true)`] on an argument, clap will continue parsing values for that argument until it reaches another valid argument, or one of the other more specific settings for multiple values is used (such as [`min_values`], [`max_values`] or [`number_of_values`]).",6,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"self"}}],[11,"global","","Specifies that an argument can be matched to all child [`SubCommand`]s.",6,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"self"}}],[11,"empty_values","","Allows an argument to accept explicitly empty values. An empty value must be specified at the command line with an explicit `\"\"`, or `''`",6,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"self"}}],[11,"hidden","","Hides an argument from help message output.",6,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"self"}}],[11,"possible_values","","Specifies a list of possible values for this argument. At runtime, `clap` verifies that only one of the specified values was used, or fails with an error message.",6,null],[11,"possible_value","","Specifies a possible value for this argument, one at a time. At runtime, `clap` verifies that only one of the specified values was used, or fails with error message.",6,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"self"}}],[11,"group","","Specifies the name of the [`ArgGroup`] the argument belongs to.",6,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"self"}}],[11,"groups","","Specifies the names of multiple [`ArgGroup`]'s the argument belongs to.",6,null],[11,"number_of_values","","Specifies how many values are required to satisfy this argument. For example, if you had a `-f <file>` argument where you wanted exactly 3 'files' you would set `.number_of_values(3)`, and this argument wouldn't be satisfied unless the user provided 3 and only 3 values.",6,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"self"}}],[11,"validator","","Allows one to perform a custom validation on the argument value. You provide a closure which accepts a [`String`] value, and return a [`Result`] where the [`Err(String)`] is a message displayed to the user.",6,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"validator_os","","Works identically to Validator but is intended to be used with values that could  contain non UTF-8 formatted strings.",6,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"max_values","","Specifies the maximum number of values are for this argument. For example, if you had a `-f <file>` argument where you wanted up to 3 'files' you would set `.max_values(3)`, and this argument would be satisfied if the user provided, 1, 2, or 3 values.",6,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"self"}}],[11,"min_values","","Specifies the minimum number of values for this argument. For example, if you had a `-f <file>` argument where you wanted at least 2 'files' you would set `.min_values(2)`, and this argument would be satisfied if the user provided, 2 or more values.",6,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"self"}}],[11,"use_delimiter","","Specifies whether or not an argument should allow grouping of multiple values via a delimiter. I.e. should `--option=val1,val2,val3` be parsed as three values (`val1`, `val2`, and `val3`) or as a single value (`val1,val2,val3`). Defaults to using `,` (comma) as the value delimiter for all arguments that accept values (options and positional arguments)",6,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"self"}}],[11,"require_delimiter","","Specifies that multiple values may only be set using the delimiter. This means if an if an option is encountered, and no delimiter is found, it automatically assumed that no additional values for that option follow. This is unlike the default, where it is generally assumed that more values will follow regardless of whether or not a delimiter is used.",6,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"self"}}],[11,"value_delimiter","","Specifies the separator to use when values are clumped together, defaults to `,` (comma).",6,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"self"}}],[11,"value_names","","Specify multiple names for values of option arguments. These names are cosmetic only, used for help and usage strings only. The names are not used to access arguments. The values of the arguments are accessed in numeric order (i.e. if you specify two names `one` and `two` `one` will be the first matched value, `two` will be the second).",6,null],[11,"value_name","","Specifies the name for value of [option] or [positional] arguments inside of help documentation. This name is cosmetic only, the name is not used to access arguments. This setting can be very helpful when describing the type of input the user should be using, such as `FILE`, `INTERFACE`, etc. Although not required, it's somewhat convention to use all capital letters for the value name.",6,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"self"}}],[11,"default_value","","Specifies the value of the argument when not specified at runtime.",6,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"self"}}],[11,"default_value_os","","Provides a default value in the exact same manner as [`Arg::default_value`] only using [`OsStr`]s instead. [`Arg::default_value`]: ./struct.Arg.html#method.default_value [`OsStr`]: https://doc.rust-lang.org/std/ffi/struct.OsStr.html",6,{"inputs":[{"name":"self"},{"name":"osstr"}],"output":{"name":"self"}}],[11,"default_value_if","","Specifies the value of the argument if `arg` has been used at runtime. If `val` is set to `None`, `arg` only needs to be present. If `val` is set to `\"some-val\"` then `arg` must be present at runtime and have the value `val`.",6,{"inputs":[{"name":"self"},{"name":"str"},{"name":"option"},{"name":"str"}],"output":{"name":"self"}}],[11,"default_value_if_os","","Provides a conditional default value in the exact same manner as [`Arg::default_value_if`] only using [`OsStr`]s instead. [`Arg::default_value_if`]: ./struct.Arg.html#method.default_value_if [`OsStr`]: https://doc.rust-lang.org/std/ffi/struct.OsStr.html",6,{"inputs":[{"name":"self"},{"name":"str"},{"name":"option"},{"name":"osstr"}],"output":{"name":"self"}}],[11,"default_value_ifs","","Specifies multiple values and conditions in the same manner as [`Arg::default_value_if`]. The method takes a slice of tuples in the `(arg, Option<val>, default)` format.",6,null],[11,"default_value_ifs_os","","Provides multiple conditional default values in the exact same manner as [`Arg::default_value_ifs`] only using [`OsStr`]s instead. [`Arg::default_value_ifs`]: ./struct.Arg.html#method.default_value_ifs [`OsStr`]: https://doc.rust-lang.org/std/ffi/struct.OsStr.html",6,null],[11,"next_line_help","","When set to `true` the help string will be displayed on the line after the argument and indented once. This can be helpful for arguments with very long or complex help messages. This can also be helpful for arguments with very long flag names, or many/long value names.",6,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"self"}}],[11,"display_order","","Allows custom ordering of args within the help message. Args with a lower value will be displayed first in the help message. This is helpful when one would like to emphasise frequently used args, or prioritize those towards the top of the list. Duplicate values are allowed. Args with duplicate display orders will be displayed in alphabetical order.",6,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"is_set","","Checks if one of the [`ArgSettings`] settings is set for the argument [`ArgSettings`]: ./enum.ArgSettings.html",6,{"inputs":[{"name":"self"},{"name":"argsettings"}],"output":{"name":"bool"}}],[11,"set","","Sets one of the [`ArgSettings`] settings for the argument [`ArgSettings`]: ./enum.ArgSettings.html",6,{"inputs":[{"name":"self"},{"name":"argsettings"}],"output":{"name":"self"}}],[11,"unset","","Unsets one of the [`ArgSettings`] settings for the argument [`ArgSettings`]: ./enum.ArgSettings.html",6,{"inputs":[{"name":"self"},{"name":"argsettings"}],"output":{"name":"self"}}],[11,"from","","",6,{"inputs":[{"name":"arg"}],"output":{"name":"self"}}],[11,"eq","","",6,{"inputs":[{"name":"self"},{"name":"arg"}],"output":{"name":"bool"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"argmatches"}}],[11,"default","","",7,{"inputs":[],"output":{"name":"self"}}],[11,"value_of","","Gets the value of a specific [option] or [positional] argument (i.e. an argument that takes an additional value at runtime). If the option wasn't present at runtime it returns `None`.",7,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"option"}}],[11,"value_of_lossy","","Gets the lossy value of a specific argument. If the argument wasn't present at runtime it returns `None`. A lossy value is one which contains invalid UTF-8 code points, those invalid points will be replaced with `\\u{FFFD}`",7,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"option"}}],[11,"value_of_os","","Gets the OS version of a string value of a specific argument. If the option wasn't present at runtime it returns `None`. An OS value on Unix-like systems is any series of bytes, regardless of whether or not they contain valid UTF-8 code points. Since [`String`]s in Rust are guaranteed to be valid UTF-8, a valid filename on a Unix system as an argument value may contain invalid UTF-8 code points.",7,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"option"}}],[11,"values_of","","Gets a [`Values`] struct which implements [`Iterator`] for values of a specific argument (i.e. an argument that takes multiple values at runtime). If the option wasn't present at runtime it returns `None`",7,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"option"}}],[11,"values_of_lossy","","Gets the lossy values of a specific argument. If the option wasn't present at runtime it returns `None`. A lossy value is one where if it contains invalid UTF-8 code points, those invalid points will be replaced with `\\u{FFFD}`",7,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"option"}}],[11,"values_of_os","","Gets a [`OsValues`] struct which is implements [`Iterator`] for [`OsString`] values of a specific argument. If the option wasn't present at runtime it returns `None`. An OS value on Unix-like systems is any series of bytes, regardless of whether or not they contain valid UTF-8 code points. Since [`String`]s in Rust are guaranteed to be valid UTF-8, a valid filename as an argument value on Linux (for example) may contain invalid UTF-8 code points.",7,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"option"}}],[11,"is_present","","Returns `true` if an argument was present at runtime, otherwise `false`.",7,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"bool"}}],[11,"occurrences_of","","Returns the number of times an argument was used at runtime. If an argument isn't present it will return `0`.",7,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"u64"}}],[11,"subcommand_matches","","Because [`Subcommand`]s are essentially \"sub-[`App`]s\" they have their own [`ArgMatches`] as well. This method returns the [`ArgMatches`] for a particular subcommand or `None` if the subcommand wasn't present at runtime.",7,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"option"}}],[11,"subcommand_name","","Because [`Subcommand`]s are essentially \"sub-[`App`]s\" they have their own [`ArgMatches`] as well.But simply getting the sub-[`ArgMatches`] doesn't help much if we don't also know which subcommand was actually used. This method returns the name of the subcommand that was used at runtime, or `None` if one wasn't.",7,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"subcommand","","This brings together [`ArgMatches::subcommand_matches`] and [`ArgMatches::subcommand_name`] by returning a tuple with both pieces of information.",7,null],[11,"usage","","Returns a string slice of the usage statement for the [`App`] or [`SubCommand`]",7,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"values"}}],[11,"next","","",8,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",8,null],[11,"next_back","","",8,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"default","","",8,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"osvalues"}}],[11,"next","","",9,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",9,null],[11,"next_back","","",9,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"default","","",9,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"subcommand"}}],[11,"with_name","","Creates a new instance of a subcommand requiring a name. The name will be displayed to the user when they print version or help and usage information.",10,{"inputs":[{"name":"str"}],"output":{"name":"app"}}],[11,"default","","",11,{"inputs":[],"output":{"name":"arggroup"}}],[11,"with_name","","Creates a new instance of `ArgGroup` using a unique string name. The name will be used to get values from the group or refer to the group inside of conflict and requirement rules.",11,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"arg","","Adds an [argument] to this group by name",11,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"self"}}],[11,"args","","Adds multiple [arguments] to this group by name",11,null],[11,"multiple","","Allows more than one of the ['Arg']s in this group to be used. (Default: `false`)",11,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"self"}}],[11,"required","","Sets the group as required or not. A required group will be displayed in the usage string of the application in the format `<arg|arg2|arg3>`. A required `ArgGroup` simply states that one argument from this group must be present at runtime (unless conflicting with another argument).",11,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"self"}}],[11,"requires","","Sets the requirement rules of this group. This is not to be confused with a [required group]. Requirement rules function just like [argument requirement rules], you can name other arguments or groups that must be present when any one of the arguments from this group is used.",11,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"self"}}],[11,"requires_all","","Sets the requirement rules of this group. This is not to be confused with a [required group]. Requirement rules function just like [argument requirement rules], you can name other arguments or groups that must be present when one of the arguments from this group is used.",11,null],[11,"conflicts_with","","Sets the exclusion rules of this group. Exclusion (aka conflict) rules function just like [argument exclusion rules], you can name other arguments or groups that must not be present when one of the arguments from this group are used.",11,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"self"}}],[11,"conflicts_with_all","","Sets the exclusion rules of this group. Exclusion rules function just like [argument exclusion rules], you can name other arguments or groups that must not be present when one of the arguments from this group are used.",11,null],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",11,{"inputs":[{"name":"arggroup"}],"output":{"name":"self"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"argsettings"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"argsettings"}}],[11,"from_str","","",1,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"errorkind"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"use_stderr","","Should the message be written to `stdout` or not",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"exit","","Prints the error to `stderr` and exits with a status of `1`",0,null],[11,"with_description","","Create an error with a custom description.",0,{"inputs":[{"name":"str"},{"name":"errorkind"}],"output":{"name":"self"}}],[11,"description","","",0,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",0,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from","","",0,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"shell"}}],[11,"variants","","A list of possible variants in `&'static str` form",4,null],[11,"from_str","","",4,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Result","","Short hand for [`Result`] type [`Result`]: https://doc.rust-lang.org/std/result/enum.Result.html",null,null],[14,"value_t","","Convenience macro getting a typed value `T` where `T` implements [`std::str::FromStr`] from an argument value. This macro returns a `Result<T,String>` which allows you as the developer to decide what you'd like to do on a failed parse. There are two types of errors, parse failures and those where the argument wasn't present (such as a non-required argument). You can use it to get a single value, or a iterator as with the [`ArgMatches::values_of`]",null,null],[14,"value_t_or_exit","","Convenience macro getting a typed value `T` where `T` implements [`std::str::FromStr`] or exiting upon error, instead of returning a [`Result`] type.",null,null],[14,"values_t","","Convenience macro getting a typed value [`Vec<T>`] where `T` implements [`std::str::FromStr`] This macro returns a [`clap::Result<Vec<T>>`] which allows you as the developer to decide what you'd like to do on a failed parse.",null,null],[14,"values_t_or_exit","","Convenience macro getting a typed value [`Vec<T>`] where `T` implements [`std::str::FromStr`] or exiting upon error.",null,null],[14,"_clap_count_exprs","","Counts the number of comma-delimited expressions passed to it.  The result is a compile-time evaluable expression, suitable for use as a static array size, or the value of a `const`.",null,null],[14,"arg_enum","","Convenience macro to generate more complete enums with variants to be used as a type when parsing arguments. This enum also provides a `variants()` function which can be used to retrieve a `Vec<&'static str>` of the variant names, as well as implementing [`FromStr`] and [`Display`] automatically.",null,null],[14,"crate_version","","Allows you to pull the version from your Cargo.toml at compile time as `MAJOR.MINOR.PATCH_PKGVERSION_PRE`",null,null],[14,"crate_authors","","Allows you to pull the authors for the app from your Cargo.toml at compile time in the form: `\"author1 lastname <author1@example.com>:author2 lastname <author2@example.com>\"`",null,null],[14,"crate_description","","Allows you to pull the description from your Cargo.toml at compile time.",null,null],[14,"crate_name","","Allows you to pull the name from your Cargo.toml at compile time.",null,null],[14,"app_from_crate","","Allows you to build the `App` instance from your Cargo.toml at compile time.",null,null],[14,"clap_app","","Build `App`, `Arg`s, `SubCommand`s and `Group`s with Usage-string like input but without the associated parsing runtime cost.",null,null]],"paths":[[3,"Error"],[4,"ArgSettings"],[4,"AppSettings"],[4,"ErrorKind"],[4,"Shell"],[3,"App"],[3,"Arg"],[3,"ArgMatches"],[3,"Values"],[3,"OsValues"],[3,"SubCommand"],[3,"ArgGroup"]]};
searchIndex["env_logger"] = {"doc":"A logger configured via an environment variable which writes to standard error.","items":[[3,"Logger","env_logger","The logger.",null,null],[3,"LogBuilder","","LogBuilder acts as builder for initializing the Logger. It can be used to customize the log format, change the enviromental variable used to provide the logging directives and also set the default log level filter.",null,null],[4,"LogTarget","","Log target, either stdout or stderr.",null,null],[13,"Stdout","","",0,null],[13,"Stderr","","",0,null],[5,"init","","Initializes the global logger with an env logger.",null,{"inputs":[],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Initializes the log builder with defaults",1,{"inputs":[],"output":{"name":"logbuilder"}}],[11,"filter","","Adds filters to the logger",1,{"inputs":[{"name":"self"},{"name":"option"},{"name":"loglevelfilter"}],"output":{"name":"self"}}],[11,"format","","Sets the format function for formatting the log output.",1,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"target","","Sets the target for the log output.",1,{"inputs":[{"name":"self"},{"name":"logtarget"}],"output":{"name":"self"}}],[11,"parse","","Parses the directives string in the same form as the RUST_LOG environment variable.",1,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"self"}}],[11,"init","","Initializes the global logger with an env logger.",1,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"build","","Build an env logger.",1,{"inputs":[{"name":"self"}],"output":{"name":"logger"}}],[11,"new","","",2,{"inputs":[],"output":{"name":"logger"}}],[11,"filter","","",2,{"inputs":[{"name":"self"}],"output":{"name":"loglevelfilter"}}],[11,"enabled","","",2,{"inputs":[{"name":"self"},{"name":"logmetadata"}],"output":{"name":"bool"}}],[11,"log","","",2,{"inputs":[{"name":"self"},{"name":"logrecord"}],"output":null}]],"paths":[[4,"LogTarget"],[3,"LogBuilder"],[3,"Logger"]]};
searchIndex["hid_io"] = {"doc":"","items":[[0,"device","hid_io","",null,null],[5,"initialize","hid_io::device","Module initialization",null,{"inputs":[],"output":null}],[0,"hidusb","","",null,null],[5,"initialize","hid_io::device::hidusb","hidusb initialization",null,{"inputs":[],"output":null}],[0,"debug","hid_io::device","",null,null],[5,"initialize","hid_io::device::debug","device debug module initialization",null,{"inputs":[],"output":null}],[0,"module","hid_io","",null,null],[5,"initialize","hid_io::module","DeviceInfo struct Device initialization Sets up a scanning thread per Device type. Each scanning thread will create a new thread per device found. The scanning thread is required in case devices are plugged/unplugged while running. If a device is unplugged, the Device thread will exit.",null,{"inputs":[],"output":null}],[0,"protocol","hid_io","",null,null],[0,"hidio","hid_io::protocol","",null,null],[3,"HIDIOPacketBuffer","hid_io::protocol::hidio","HID-IO Packet Buffer Struct",null,null],[12,"ptype","","Type of packet (Continued is automatically set if needed)",0,null],[12,"id","","Packet Id",0,null],[12,"max_len","","Packet length for serialization (in bytes)",0,null],[12,"data","","Payload data, chunking is done automatically by serializer",0,null],[12,"done","","Set False if buffer is not complete, True if it is",0,null],[3,"HIDIOParseError","","HID-IO Parse Error",null,null],[4,"HIDIOPacketType","","HID-IO Packet Types",null,null],[13,"Data","","Data packet",1,null],[13,"ACK","","ACK packet",1,null],[13,"NAK","","NAK packet",1,null],[13,"Sync","","Sync packet",1,null],[13,"Continued","","Continued packet",1,null],[5,"packet_type","","Determines the packet type from a byte stream",null,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[5,"payload_len","","Determines payload of packet from a byte stream",null,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[5,"packet_id_width","","Determines id_width from a byte stream",null,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[5,"packet_id","","Determines packet id from a byte stream",null,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[5,"continued_packet","","Determines whether there are following continued packets",null,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[5,"payload_start","","Determines the starting position of the payload data",null,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"hidiopackettype"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"hidiopackettype"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"hidiopacketbuffer"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"hidiopacketbuffer"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"hidiopacketbuffer"}}],[11,"new","","Constructor for HIDIOPacketBuffer",0,{"inputs":[],"output":{"name":"hidiopacketbuffer"}}],[11,"append_payload","","Append payload data",0,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"decode_packet","","Append packet stream Returns the number of bytes used.",0,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"name":"result"}}],[11,"serialize_buffer","","Serialize HIDIOPacketBuffer",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"serialize","","Serializer for HIDIOPacketBuffer",0,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[11,"fmt","","Display formatter for HIDIOPacketType",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","Display formatter for HIDIOPacketBuffer",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"built_info","hid_io","",null,null],[17,"CI_PLATFORM","hid_io::built_info","The Continuous Integration platform detected during compilation.",null,null],[17,"PKG_VERSION","","The full version.",null,null],[17,"PKG_VERSION_MAJOR","","The major version.",null,null],[17,"PKG_VERSION_MINOR","","The minor version.",null,null],[17,"PKG_VERSION_PATCH","","The patch version.",null,null],[17,"PKG_VERSION_PRE","","The pre-release version.",null,null],[17,"PKG_AUTHORS","","A colon-separated list of authors.",null,null],[17,"PKG_NAME","","The name of the package.",null,null],[17,"PKG_DESCRIPTION","","The description.",null,null],[17,"PKG_HOMEPAGE","","The homepage.",null,null],[17,"TARGET","","The target triple that was being compiled for.",null,null],[17,"HOST","","The host triple of the rust compiler.",null,null],[17,"PROFILE","","`release` for release builds, `debug` for other builds.",null,null],[17,"RUSTC","","The compiler that cargo resolved to use.",null,null],[17,"RUSTDOC","","The documentation generator that cargo resolved to use.",null,null],[17,"OPT_LEVEL","","Value of OPT_LEVEL for the profile used during compilation.",null,null],[17,"NUM_JOBS","","The parallelism that was specified during compilation.",null,null],[17,"DEBUG","","Value of DEBUG for the profile used during compilation.",null,null],[17,"FEATURES","","The features that were enabled during compilation.",null,null],[17,"FEATURES_STR","","The features as a comma-separated string.",null,null],[17,"RUSTC_VERSION","","The output of `rustc -V`",null,null],[17,"RUSTDOC_VERSION","","The output of `rustdoc -V`",null,null],[17,"GIT_VERSION","","If the crate was compiled from within a git-repository, `GIT_VERSION` contains HEAD's tag. The short commit id is used if HEAD is not tagged.",null,null],[17,"BUILT_TIME_UTC","","The built-time in RFC822, UTC",null,null]],"paths":[[3,"HIDIOPacketBuffer"],[4,"HIDIOPacketType"]]};
searchIndex["hidapi"] = {"doc":"This crate provides a rust abstraction over the features of the C library hidapi by signal11.","items":[[3,"HidApi","hidapi","Object for handling hidapi context and implementing RAII for it. Only one instance can exist at a time.",null,null],[3,"HidDeviceInfo","","Storage for device related information",null,null],[12,"path","","",0,null],[12,"vendor_id","","",0,null],[12,"product_id","","",0,null],[12,"serial_number","","",0,null],[12,"release_number","","",0,null],[12,"manufacturer_string","","",0,null],[12,"product_string","","",0,null],[12,"usage_page","","",0,null],[12,"usage","","",0,null],[12,"interface_number","","",0,null],[3,"HidDevice","","Object for accessing HID device",null,null],[6,"HidError","","",null,null],[6,"HidResult","","",null,null],[11,"new","","Initializes the HID",1,{"inputs":[],"output":{"name":"hidresult"}}],[11,"refresh_devices","","Refresh devices list and information about them (to access them use `devices()` method)",1,{"inputs":[{"name":"self"}],"output":null}],[11,"devices","","Returns list of objects containing information about connected devices",1,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"open","","Open a HID device using a Vendor ID (VID) and Product ID (PID)",1,{"inputs":[{"name":"self"},{"name":"u16"},{"name":"u16"}],"output":{"name":"hidresult"}}],[11,"open_serial","","Open a HID device using a Vendor ID (VID), Product ID (PID) and a serial number.",1,{"inputs":[{"name":"self"},{"name":"u16"},{"name":"u16"},{"name":"str"}],"output":{"name":"hidresult"}}],[11,"open_path","","The path name be determined by calling hid_enumerate(), or a platform-specific path name can be used (eg: /dev/hidraw0 on Linux).",1,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"hidresult"}}],[11,"drop","","",1,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"hiddeviceinfo"}}],[11,"drop","","",2,{"inputs":[{"name":"self"}],"output":null}],[11,"check_error","","Get a string describing the last error which occurred.",2,{"inputs":[{"name":"self"}],"output":{"name":"hidresult"}}],[11,"write","","The first byte of `data` must contain the Report ID. For devices which only support a single report, this must be set to 0x0. The remaining bytes contain the report data. Since the Report ID is mandatory, calls to `write()` will always contain one more byte than the report contains. For example, if a hid report is 16 bytes long, 17 bytes must be passed to `write()`, the Report ID (or 0x0, for devices with a single report), followed by the report data (16 bytes). In this example, the length passed in would be 17. `write()` will send the data on the first OUT endpoint, if one exists. If it does not, it will send the data through the Control Endpoint (Endpoint 0).",2,null],[11,"read","","Input reports are returned to the host through the 'INTERRUPT IN' endpoint. The first byte will contain the Report number if the device uses numbered reports.",2,null],[11,"read_timeout","","Input reports are returned to the host through the 'INTERRUPT IN' endpoint. The first byte will contain the Report number if the device uses numbered reports. Timeout measured in milliseconds, set -1 for blocking wait.",2,null],[11,"send_feature_report","","Send a Feature report to the device. Feature reports are sent over the Control endpoint as a Set_Report transfer.  The first byte of `data` must contain the 'Report ID'. For devices which only support a single report, this must be set to 0x0. The remaining bytes contain the report data. Since the 'Report ID' is mandatory, calls to `send_feature_report()` will always contain one more byte than the report contains. For example, if a hid report is 16 bytes long, 17 bytes must be passed to `send_feature_report()`: 'the Report ID' (or 0x0, for devices which do not use numbered reports), followed by the report data (16 bytes). In this example, the length passed in would be 17.",2,null],[11,"get_feature_report","","Set the first byte of `data` to the 'Report ID' of the report to be read. Upon return, the first byte will still contain the Report ID, and the report data will start in data[1].",2,null],[11,"set_blocking_mode","","Set the device handle to be in blocking or in non-blocking mode. In non-blocking mode calls to `read()` will return immediately with an empty slice if there is no data to be read. In blocking mode, `read()` will wait (block) until there is data to read before returning. Modes can be changed at any time.",2,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"hidresult"}}],[11,"get_manufacturer_string","","Get The Manufacturer String from a HID device.",2,{"inputs":[{"name":"self"}],"output":{"name":"hidresult"}}],[11,"get_product_string","","Get The Manufacturer String from a HID device.",2,{"inputs":[{"name":"self"}],"output":{"name":"hidresult"}}],[11,"get_serial_number_string","","Get The Serial Number String from a HID device.",2,{"inputs":[{"name":"self"}],"output":{"name":"hidresult"}}],[11,"get_indexed_string","","Get a string from a HID device, based on its string index.",2,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"hidresult"}}]],"paths":[[3,"HidDeviceInfo"],[3,"HidApi"],[3,"HidDevice"]]};
searchIndex["lazy_static"] = {"doc":"A macro for declaring lazily evaluated statics.","items":[[5,"initialize","lazy_static","Takes a shared reference to a lazy static and initializes it if it has not been already.",null,{"inputs":[{"name":"t"}],"output":null}],[8,"LazyStatic","","Support trait for enabling a few common operation on lazy static values.",null,null],[14,"lazy_static","","",null,null]],"paths":[]};
searchIndex["libc"] = {"doc":"Crate docs","items":[[3,"group","libc","",null,null],[12,"gr_name","","",0,null],[12,"gr_passwd","","",0,null],[12,"gr_gid","","",0,null],[12,"gr_mem","","",0,null],[3,"utimbuf","","",null,null],[12,"actime","","",1,null],[12,"modtime","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[3,"rusage","","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[3,"in_addr","","",null,null],[12,"s_addr","","",6,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",7,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",8,null],[12,"imr_interface","","",8,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",9,null],[12,"ipv6mr_interface","","",9,null],[3,"hostent","","",null,null],[12,"h_name","","",10,null],[12,"h_aliases","","",10,null],[12,"h_addrtype","","",10,null],[12,"h_length","","",10,null],[12,"h_addr_list","","",10,null],[3,"iovec","","",null,null],[12,"iov_base","","",11,null],[12,"iov_len","","",11,null],[3,"pollfd","","",null,null],[12,"fd","","",12,null],[12,"events","","",12,null],[12,"revents","","",12,null],[3,"winsize","","",null,null],[12,"ws_row","","",13,null],[12,"ws_col","","",13,null],[12,"ws_xpixel","","",13,null],[12,"ws_ypixel","","",13,null],[3,"linger","","",null,null],[12,"l_onoff","","",14,null],[12,"l_linger","","",14,null],[3,"sigval","","",null,null],[12,"sival_ptr","","",15,null],[3,"itimerval","","",null,null],[12,"it_interval","","",16,null],[12,"it_value","","",16,null],[3,"tms","","",null,null],[12,"tms_utime","","",17,null],[12,"tms_stime","","",17,null],[12,"tms_cutime","","",17,null],[12,"tms_cstime","","",17,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",18,null],[12,"sa_data","","",18,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",19,null],[12,"sin_port","","",19,null],[12,"sin_addr","","",19,null],[12,"sin_zero","","",19,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",20,null],[12,"sin6_port","","",20,null],[12,"sin6_flowinfo","","",20,null],[12,"sin6_addr","","",20,null],[12,"sin6_scope_id","","",20,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",21,null],[12,"sun_path","","",21,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",22,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",23,null],[12,"ai_family","","",23,null],[12,"ai_socktype","","",23,null],[12,"ai_protocol","","",23,null],[12,"ai_addrlen","","",23,null],[12,"ai_addr","","",23,null],[12,"ai_canonname","","",23,null],[12,"ai_next","","",23,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",24,null],[12,"nl_pid","","",24,null],[12,"nl_groups","","",24,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",25,null],[12,"sll_protocol","","",25,null],[12,"sll_ifindex","","",25,null],[12,"sll_hatype","","",25,null],[12,"sll_pkttype","","",25,null],[12,"sll_halen","","",25,null],[12,"sll_addr","","",25,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",26,null],[12,"tm_min","","",26,null],[12,"tm_hour","","",26,null],[12,"tm_mday","","",26,null],[12,"tm_mon","","",26,null],[12,"tm_year","","",26,null],[12,"tm_wday","","",26,null],[12,"tm_yday","","",26,null],[12,"tm_isdst","","",26,null],[12,"tm_gmtoff","","",26,null],[12,"tm_zone","","",26,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",27,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",28,null],[12,"dli_fbase","","",28,null],[12,"dli_sname","","",28,null],[12,"dli_saddr","","",28,null],[3,"epoll_event","","",null,null],[12,"events","","",29,null],[12,"u64","","",29,null],[3,"utsname","","",null,null],[12,"sysname","","",30,null],[12,"nodename","","",30,null],[12,"release","","",30,null],[12,"version","","",30,null],[12,"machine","","",30,null],[12,"domainname","","",30,null],[3,"lconv","","",null,null],[12,"decimal_point","","",31,null],[12,"thousands_sep","","",31,null],[12,"grouping","","",31,null],[12,"int_curr_symbol","","",31,null],[12,"currency_symbol","","",31,null],[12,"mon_decimal_point","","",31,null],[12,"mon_thousands_sep","","",31,null],[12,"mon_grouping","","",31,null],[12,"positive_sign","","",31,null],[12,"negative_sign","","",31,null],[12,"int_frac_digits","","",31,null],[12,"frac_digits","","",31,null],[12,"p_cs_precedes","","",31,null],[12,"p_sep_by_space","","",31,null],[12,"n_cs_precedes","","",31,null],[12,"n_sep_by_space","","",31,null],[12,"p_sign_posn","","",31,null],[12,"n_sign_posn","","",31,null],[12,"int_p_cs_precedes","","",31,null],[12,"int_p_sep_by_space","","",31,null],[12,"int_n_cs_precedes","","",31,null],[12,"int_n_sep_by_space","","",31,null],[12,"int_p_sign_posn","","",31,null],[12,"int_n_sign_posn","","",31,null],[3,"sigevent","","",null,null],[12,"sigev_value","","",32,null],[12,"sigev_signo","","",32,null],[12,"sigev_notify","","",32,null],[12,"sigev_notify_thread_id","","",32,null],[3,"dirent","","",null,null],[12,"d_ino","","",33,null],[12,"d_off","","",33,null],[12,"d_reclen","","",33,null],[12,"d_type","","",33,null],[12,"d_name","","",33,null],[3,"dirent64","","",null,null],[12,"d_ino","","",34,null],[12,"d_off","","",34,null],[12,"d_reclen","","",34,null],[12,"d_type","","",34,null],[12,"d_name","","",34,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",35,null],[12,"rlim_max","","",35,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",36,null],[12,"gl_pathv","","",36,null],[12,"gl_offs","","",36,null],[12,"gl_flags","","",36,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",37,null],[12,"ifa_name","","",37,null],[12,"ifa_flags","","",37,null],[12,"ifa_addr","","",37,null],[12,"ifa_netmask","","",37,null],[12,"ifa_ifu","","",37,null],[12,"ifa_data","","",37,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_rwlockattr_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"pthread_condattr_t","","",null,null],[3,"passwd","","",null,null],[12,"pw_name","","",38,null],[12,"pw_passwd","","",38,null],[12,"pw_uid","","",38,null],[12,"pw_gid","","",38,null],[12,"pw_gecos","","",38,null],[12,"pw_dir","","",38,null],[12,"pw_shell","","",38,null],[3,"spwd","","",null,null],[12,"sp_namp","","",39,null],[12,"sp_pwdp","","",39,null],[12,"sp_lstchg","","",39,null],[12,"sp_min","","",39,null],[12,"sp_max","","",39,null],[12,"sp_warn","","",39,null],[12,"sp_inact","","",39,null],[12,"sp_expire","","",39,null],[12,"sp_flag","","",39,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",40,null],[12,"f_frsize","","",40,null],[12,"f_blocks","","",40,null],[12,"f_bfree","","",40,null],[12,"f_bavail","","",40,null],[12,"f_files","","",40,null],[12,"f_ffree","","",40,null],[12,"f_favail","","",40,null],[12,"f_fsid","","",40,null],[12,"f_flag","","",40,null],[12,"f_namemax","","",40,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",41,null],[12,"dqb_bsoftlimit","","",41,null],[12,"dqb_curspace","","",41,null],[12,"dqb_ihardlimit","","",41,null],[12,"dqb_isoftlimit","","",41,null],[12,"dqb_curinodes","","",41,null],[12,"dqb_btime","","",41,null],[12,"dqb_itime","","",41,null],[12,"dqb_valid","","",41,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",42,null],[12,"ssi_errno","","",42,null],[12,"ssi_code","","",42,null],[12,"ssi_pid","","",42,null],[12,"ssi_uid","","",42,null],[12,"ssi_fd","","",42,null],[12,"ssi_tid","","",42,null],[12,"ssi_band","","",42,null],[12,"ssi_overrun","","",42,null],[12,"ssi_trapno","","",42,null],[12,"ssi_status","","",42,null],[12,"ssi_int","","",42,null],[12,"ssi_ptr","","",42,null],[12,"ssi_utime","","",42,null],[12,"ssi_stime","","",42,null],[12,"ssi_addr","","",42,null],[3,"fsid_t","","",null,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",43,null],[12,"mq_maxmsg","","",43,null],[12,"mq_msgsize","","",43,null],[12,"mq_curmsgs","","",43,null],[3,"cpu_set_t","","",null,null],[3,"if_nameindex","","",null,null],[12,"if_index","","",44,null],[12,"if_name","","",44,null],[3,"msginfo","","",null,null],[12,"msgpool","","",45,null],[12,"msgmap","","",45,null],[12,"msgmax","","",45,null],[12,"msgmnb","","",45,null],[12,"msgmni","","",45,null],[12,"msgssz","","",45,null],[12,"msgtql","","",45,null],[12,"msgseg","","",45,null],[3,"mmsghdr","","",null,null],[12,"msg_hdr","","",46,null],[12,"msg_len","","",46,null],[3,"sembuf","","",null,null],[12,"sem_num","","",47,null],[12,"sem_op","","",47,null],[12,"sem_flg","","",47,null],[3,"input_event","","",null,null],[12,"time","","",48,null],[12,"type_","","",48,null],[12,"code","","",48,null],[12,"value","","",48,null],[3,"input_id","","",null,null],[12,"bustype","","",49,null],[12,"vendor","","",49,null],[12,"product","","",49,null],[12,"version","","",49,null],[3,"input_absinfo","","",null,null],[12,"value","","",50,null],[12,"minimum","","",50,null],[12,"maximum","","",50,null],[12,"fuzz","","",50,null],[12,"flat","","",50,null],[12,"resolution","","",50,null],[3,"input_keymap_entry","","",null,null],[12,"flags","","",51,null],[12,"len","","",51,null],[12,"index","","",51,null],[12,"keycode","","",51,null],[12,"scancode","","",51,null],[3,"input_mask","","",null,null],[12,"type_","","",52,null],[12,"codes_size","","",52,null],[12,"codes_ptr","","",52,null],[3,"ff_replay","","",null,null],[12,"length","","",53,null],[12,"delay","","",53,null],[3,"ff_trigger","","",null,null],[12,"button","","",54,null],[12,"interval","","",54,null],[3,"ff_envelope","","",null,null],[12,"attack_length","","",55,null],[12,"attack_level","","",55,null],[12,"fade_length","","",55,null],[12,"fade_level","","",55,null],[3,"ff_constant_effect","","",null,null],[12,"level","","",56,null],[12,"envelope","","",56,null],[3,"ff_ramp_effect","","",null,null],[12,"start_level","","",57,null],[12,"end_level","","",57,null],[12,"envelope","","",57,null],[3,"ff_condition_effect","","",null,null],[12,"right_saturation","","",58,null],[12,"left_saturation","","",58,null],[12,"right_coeff","","",58,null],[12,"left_coeff","","",58,null],[12,"deadband","","",58,null],[12,"center","","",58,null],[3,"ff_periodic_effect","","",null,null],[12,"waveform","","",59,null],[12,"period","","",59,null],[12,"magnitude","","",59,null],[12,"offset","","",59,null],[12,"phase","","",59,null],[12,"envelope","","",59,null],[12,"custom_len","","",59,null],[12,"custom_data","","",59,null],[3,"ff_rumble_effect","","",null,null],[12,"strong_magnitude","","",60,null],[12,"weak_magnitude","","",60,null],[3,"ff_effect","","",null,null],[12,"type_","","",61,null],[12,"id","","",61,null],[12,"direction","","",61,null],[12,"trigger","","",61,null],[12,"replay","","",61,null],[12,"u","","",61,null],[3,"aiocb","","",null,null],[12,"aio_fildes","","",62,null],[12,"aio_lio_opcode","","",62,null],[12,"aio_reqprio","","",62,null],[12,"aio_buf","","",62,null],[12,"aio_nbytes","","",62,null],[12,"aio_sigevent","","",62,null],[12,"aio_offset","","",62,null],[3,"__exit_status","","",null,null],[12,"e_termination","","",63,null],[12,"e_exit","","",63,null],[3,"__timeval","","",null,null],[12,"tv_sec","","",64,null],[12,"tv_usec","","",64,null],[3,"utmpx","","",null,null],[12,"ut_type","","",65,null],[12,"ut_pid","","",65,null],[12,"ut_line","","",65,null],[12,"ut_id","","",65,null],[12,"ut_user","","",65,null],[12,"ut_host","","",65,null],[12,"ut_exit","","",65,null],[12,"ut_session","","",65,null],[12,"ut_tv","","",65,null],[12,"ut_addr_v6","","",65,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",66,null],[12,"sa_mask","","",66,null],[12,"sa_flags","","",66,null],[12,"sa_restorer","","",66,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",67,null],[12,"ss_flags","","",67,null],[12,"ss_size","","",67,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",68,null],[12,"si_errno","","",68,null],[12,"si_code","","",68,null],[12,"_pad","","",68,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",69,null],[12,"gl_pathv","","",69,null],[12,"gl_offs","","",69,null],[12,"gl_flags","","",69,null],[3,"ucred","","",null,null],[12,"pid","","",70,null],[12,"uid","","",70,null],[12,"gid","","",70,null],[3,"statfs","","",null,null],[12,"f_type","","",71,null],[12,"f_bsize","","",71,null],[12,"f_blocks","","",71,null],[12,"f_bfree","","",71,null],[12,"f_bavail","","",71,null],[12,"f_files","","",71,null],[12,"f_ffree","","",71,null],[12,"f_fsid","","",71,null],[12,"f_namelen","","",71,null],[12,"f_frsize","","",71,null],[3,"msghdr","","",null,null],[12,"msg_name","","",72,null],[12,"msg_namelen","","",72,null],[12,"msg_iov","","",72,null],[12,"msg_iovlen","","",72,null],[12,"msg_control","","",72,null],[12,"msg_controllen","","",72,null],[12,"msg_flags","","",72,null],[3,"cmsghdr","","",null,null],[12,"cmsg_len","","",73,null],[12,"cmsg_level","","",73,null],[12,"cmsg_type","","",73,null],[3,"termios","","",null,null],[12,"c_iflag","","",74,null],[12,"c_oflag","","",74,null],[12,"c_cflag","","",74,null],[12,"c_lflag","","",74,null],[12,"c_line","","",74,null],[12,"c_cc","","",74,null],[12,"c_ispeed","","",74,null],[12,"c_ospeed","","",74,null],[3,"flock","","",null,null],[12,"l_type","","",75,null],[12,"l_whence","","",75,null],[12,"l_start","","",75,null],[12,"l_len","","",75,null],[12,"l_pid","","",75,null],[3,"sem_t","","",null,null],[3,"sigset_t","","",null,null],[3,"sysinfo","","",null,null],[12,"uptime","","",76,null],[12,"loads","","",76,null],[12,"totalram","","",76,null],[12,"freeram","","",76,null],[12,"sharedram","","",76,null],[12,"bufferram","","",76,null],[12,"totalswap","","",76,null],[12,"freeswap","","",76,null],[12,"procs","","",76,null],[12,"pad","","",76,null],[12,"totalhigh","","",76,null],[12,"freehigh","","",76,null],[12,"mem_unit","","",76,null],[12,"_f","","",76,null],[3,"msqid_ds","","",null,null],[12,"msg_perm","","",77,null],[12,"msg_stime","","",77,null],[12,"msg_rtime","","",77,null],[12,"msg_ctime","","",77,null],[12,"msg_qnum","","",77,null],[12,"msg_qbytes","","",77,null],[12,"msg_lspid","","",77,null],[12,"msg_lrpid","","",77,null],[3,"stat","","",null,null],[12,"st_dev","","",78,null],[12,"st_ino","","",78,null],[12,"st_nlink","","",78,null],[12,"st_mode","","",78,null],[12,"st_uid","","",78,null],[12,"st_gid","","",78,null],[12,"st_rdev","","",78,null],[12,"st_size","","",78,null],[12,"st_blksize","","",78,null],[12,"st_blocks","","",78,null],[12,"st_atime","","",78,null],[12,"st_atime_nsec","","",78,null],[12,"st_mtime","","",78,null],[12,"st_mtime_nsec","","",78,null],[12,"st_ctime","","",78,null],[12,"st_ctime_nsec","","",78,null],[3,"stat64","","",null,null],[12,"st_dev","","",79,null],[12,"st_ino","","",79,null],[12,"st_nlink","","",79,null],[12,"st_mode","","",79,null],[12,"st_uid","","",79,null],[12,"st_gid","","",79,null],[12,"st_rdev","","",79,null],[12,"st_size","","",79,null],[12,"st_blksize","","",79,null],[12,"st_blocks","","",79,null],[12,"st_atime","","",79,null],[12,"st_atime_nsec","","",79,null],[12,"st_mtime","","",79,null],[12,"st_mtime_nsec","","",79,null],[12,"st_ctime","","",79,null],[12,"st_ctime_nsec","","",79,null],[3,"pthread_attr_t","","",null,null],[3,"_libc_fpxreg","","",null,null],[12,"significand","","",80,null],[12,"exponent","","",80,null],[3,"_libc_xmmreg","","",null,null],[12,"element","","",81,null],[3,"_libc_fpstate","","",null,null],[12,"cwd","","",82,null],[12,"swd","","",82,null],[12,"ftw","","",82,null],[12,"fop","","",82,null],[12,"rip","","",82,null],[12,"rdp","","",82,null],[12,"mxcsr","","",82,null],[12,"mxcr_mask","","",82,null],[12,"_st","","",82,null],[12,"_xmm","","",82,null],[3,"user_fpregs_struct","","",null,null],[12,"cwd","","",83,null],[12,"swd","","",83,null],[12,"ftw","","",83,null],[12,"fop","","",83,null],[12,"rip","","",83,null],[12,"rdp","","",83,null],[12,"mxcsr","","",83,null],[12,"mxcr_mask","","",83,null],[12,"st_space","","",83,null],[12,"xmm_space","","",83,null],[3,"user_regs_struct","","",null,null],[12,"r15","","",84,null],[12,"r14","","",84,null],[12,"r13","","",84,null],[12,"r12","","",84,null],[12,"rbp","","",84,null],[12,"rbx","","",84,null],[12,"r11","","",84,null],[12,"r10","","",84,null],[12,"r9","","",84,null],[12,"r8","","",84,null],[12,"rax","","",84,null],[12,"rcx","","",84,null],[12,"rdx","","",84,null],[12,"rsi","","",84,null],[12,"rdi","","",84,null],[12,"orig_rax","","",84,null],[12,"rip","","",84,null],[12,"cs","","",84,null],[12,"eflags","","",84,null],[12,"rsp","","",84,null],[12,"ss","","",84,null],[12,"fs_base","","",84,null],[12,"gs_base","","",84,null],[12,"ds","","",84,null],[12,"es","","",84,null],[12,"fs","","",84,null],[12,"gs","","",84,null],[3,"user","","",null,null],[12,"regs","","",85,null],[12,"u_fpvalid","","",85,null],[12,"i387","","",85,null],[12,"u_tsize","","",85,null],[12,"u_dsize","","",85,null],[12,"u_ssize","","",85,null],[12,"start_code","","",85,null],[12,"start_stack","","",85,null],[12,"signal","","",85,null],[12,"u_ar0","","",85,null],[12,"u_fpstate","","",85,null],[12,"magic","","",85,null],[12,"u_comm","","",85,null],[12,"u_debugreg","","",85,null],[3,"mcontext_t","","",null,null],[12,"gregs","","",86,null],[12,"fpregs","","",86,null],[3,"ucontext_t","","",null,null],[12,"uc_flags","","",87,null],[12,"uc_link","","",87,null],[12,"uc_stack","","",87,null],[12,"uc_mcontext","","",87,null],[12,"uc_sigmask","","",87,null],[3,"ipc_perm","","",null,null],[12,"__key","","",88,null],[12,"uid","","",88,null],[12,"gid","","",88,null],[12,"cuid","","",88,null],[12,"cgid","","",88,null],[12,"mode","","",88,null],[12,"__seq","","",88,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",89,null],[12,"shm_segsz","","",89,null],[12,"shm_atime","","",89,null],[12,"shm_dtime","","",89,null],[12,"shm_ctime","","",89,null],[12,"shm_cpid","","",89,null],[12,"shm_lpid","","",89,null],[12,"shm_nattch","","",89,null],[4,"c_void","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"DIR","","",null,null],[4,"locale_t","","",null,null],[4,"timezone","","",null,null],[4,"fpos64_t","","",null,null],[5,"FD_CLR","","",null,null],[5,"FD_ISSET","","",null,null],[5,"FD_SET","","",null,null],[5,"FD_ZERO","","",null,null],[5,"WIFSTOPPED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WSTOPSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFCONTINUED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WIFSIGNALED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WTERMSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFEXITED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WEXITSTATUS","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WCOREDUMP","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"CPU_ZERO","","",null,null],[5,"CPU_SET","","",null,null],[5,"CPU_CLR","","",null,null],[5,"CPU_ISSET","","",null,{"inputs":[{"name":"usize"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"CPU_EQUAL","","",null,{"inputs":[{"name":"cpu_set_t"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"major","","",null,{"inputs":[{"name":"dev_t"}],"output":{"name":"c_uint"}}],[5,"minor","","",null,{"inputs":[{"name":"dev_t"}],"output":{"name":"c_uint"}}],[5,"makedev","","",null,{"inputs":[{"name":"c_uint"},{"name":"c_uint"}],"output":{"name":"dev_t"}}],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"getchar","","",null,null],[5,"putchar","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"wcstombs","","",null,null],[5,"memchr","","",null,null],[5,"memcmp","","",null,null],[5,"memcpy","","",null,null],[5,"memmove","","",null,null],[5,"memset","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"getgrnam","","",null,null],[5,"getgrgid","","",null,null],[5,"endpwent","","",null,null],[5,"getpwnam","","",null,null],[5,"getpwuid","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"getchar_unlocked","","",null,null],[5,"putchar_unlocked","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"popen","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir","","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"openat","","",null,null],[5,"faccessat","","",null,null],[5,"fchmodat","","",null,null],[5,"fchown","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"mkdirat","","",null,null],[5,"readlinkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"fchdir","","",null,null],[5,"chown","","",null,null],[5,"lchown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execl","","",null,null],[5,"execle","","",null,null],[5,"execlp","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgid","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"seteuid","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"tcsetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[5,"getdtablesize","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"gettimeofday","","",null,null],[5,"times","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_create","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_atfork","","",null,null],[5,"pthread_exit","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_init","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_condattr_init","","",null,null],[5,"pthread_condattr_destroy","","",null,null],[5,"pthread_rwlock_init","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_rwlockattr_init","","",null,null],[5,"pthread_rwlockattr_destroy","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"pthread_kill","","",null,null],[5,"strerror_r","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"sigaltstack","","",null,null],[5,"sigwait","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"res_init","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"time","","",null,null],[5,"gmtime","","",null,null],[5,"localtime","","",null,null],[5,"mknod","","",null,null],[5,"uname","","",null,null],[5,"daemon","","",null,null],[5,"gethostname","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_destroy","","",null,null],[5,"sem_open","","",null,null],[5,"sem_close","","",null,null],[5,"sem_unlink","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"sem_init","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"readlink","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"sigprocmask","","",null,null],[5,"sigpending","","",null,null],[5,"timegm","","",null,null],[5,"getsid","","",null,null],[5,"sysconf","","",null,null],[5,"mkfifo","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfmakeraw","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"cfsetspeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcgetsid","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkdtemp","","",null,null],[5,"tmpnam","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"grantpt","","",null,null],[5,"posix_openpt","","",null,null],[5,"ptsname","","",null,null],[5,"unlockpt","","",null,null],[5,"getpwnam_r","","",null,null],[5,"getpwuid_r","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"clock_nanosleep","","",null,null],[5,"clock_settime","","",null,null],[5,"dirfd","","",null,null],[5,"settimeofday","","",null,null],[5,"prctl","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"initgroups","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"sched_setparam","","",null,null],[5,"sched_getparam","","",null,null],[5,"sched_rr_get_interval","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_create1","","",null,null],[5,"epoll_ctl","","",null,null],[5,"epoll_wait","","",null,null],[5,"pipe2","","",null,null],[5,"mount","","",null,null],[5,"umount","","",null,null],[5,"umount2","","",null,null],[5,"clone","","",null,null],[5,"statfs","","",null,null],[5,"fstatfs","","",null,null],[5,"memrchr","","",null,null],[5,"syscall","","",null,null],[5,"sendfile","","",null,null],[5,"splice","","",null,null],[5,"tee","","",null,null],[5,"vmsplice","","",null,null],[5,"posix_fadvise","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"creat64","","",null,null],[5,"fstat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"getrlimit64","","",null,null],[5,"lseek64","","",null,null],[5,"lstat64","","",null,null],[5,"mmap64","","",null,null],[5,"open64","","",null,null],[5,"openat64","","",null,null],[5,"pread64","","",null,null],[5,"pwrite64","","",null,null],[5,"readdir64","","",null,null],[5,"readdir64_r","","",null,null],[5,"setrlimit64","","",null,null],[5,"stat64","","",null,null],[5,"truncate64","","",null,null],[5,"eventfd","","",null,null],[5,"sysinfo","","",null,null],[5,"fdopendir","","",null,null],[5,"mknodat","","",null,null],[5,"ppoll","","",null,null],[5,"pthread_condattr_getclock","","",null,null],[5,"pthread_condattr_setclock","","",null,null],[5,"pthread_condattr_setpshared","","",null,null],[5,"pthread_condattr_getpshared","","",null,null],[5,"pthread_getschedparam","","",null,null],[5,"pthread_setschedparam","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"unshare","","",null,null],[5,"setns","","",null,null],[5,"sem_timedwait","","",null,null],[5,"accept4","","",null,null],[5,"pthread_mutex_timedlock","","",null,null],[5,"pthread_mutexattr_setpshared","","",null,null],[5,"pthread_mutexattr_getpshared","","",null,null],[5,"pthread_rwlockattr_getpshared","","",null,null],[5,"pthread_rwlockattr_setpshared","","",null,null],[5,"ptsname_r","","",null,null],[5,"clearenv","","",null,null],[5,"waitid","","",null,null],[5,"sigsuspend","","",null,null],[5,"setreuid","","",null,null],[5,"setregid","","",null,null],[5,"getresuid","","",null,null],[5,"getresgid","","",null,null],[5,"personality","","",null,null],[5,"swapon","","",null,null],[5,"swapoff","","",null,null],[5,"acct","","",null,null],[5,"brk","","",null,null],[5,"sbrk","","",null,null],[5,"vfork","","",null,null],[5,"sethostname","","",null,null],[5,"setresgid","","",null,null],[5,"setresuid","","",null,null],[5,"wait4","","",null,null],[5,"openpty","","",null,null],[5,"forkpty","","",null,null],[5,"aio_read","","",null,null],[5,"aio_write","","",null,null],[5,"aio_fsync","","",null,null],[5,"aio_error","","",null,null],[5,"aio_return","","",null,null],[5,"aio_suspend","","",null,null],[5,"aio_cancel","","",null,null],[5,"lio_listio","","",null,null],[5,"lutimes","","",null,null],[5,"setpwent","","",null,null],[5,"getpwent","","",null,null],[5,"setspent","","",null,null],[5,"endspent","","",null,null],[5,"getspent","","",null,null],[5,"getspnam","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"ftok","","",null,null],[5,"semget","","",null,null],[5,"semop","","",null,null],[5,"semctl","","",null,null],[5,"msgctl","","",null,null],[5,"msgget","","",null,null],[5,"msgrcv","","",null,null],[5,"msgsnd","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"posix_fallocate","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"mkostemp","","",null,null],[5,"mkostemps","","",null,null],[5,"sigtimedwait","","",null,null],[5,"sigwaitinfo","","",null,null],[5,"nl_langinfo_l","","",null,null],[5,"getnameinfo","","",null,null],[5,"pthread_setschedprio","","",null,null],[5,"prlimit","","",null,null],[5,"prlimit64","","",null,null],[5,"getloadavg","","",null,null],[5,"process_vm_readv","","",null,null],[5,"process_vm_writev","","",null,null],[5,"reboot","","",null,null],[5,"setfsgid","","",null,null],[5,"setfsuid","","",null,null],[5,"mkfifoat","","",null,null],[5,"if_nameindex","","",null,null],[5,"if_freenameindex","","",null,null],[5,"sync_file_range","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"mremap","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"madvise","","",null,null],[5,"msync","","",null,null],[5,"recvfrom","","",null,null],[5,"mkstemps","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"bind","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"getdomainname","","",null,null],[5,"setdomainname","","",null,null],[5,"vhangup","","",null,null],[5,"sendmmsg","","",null,null],[5,"recvmmsg","","",null,null],[5,"sync","","",null,null],[5,"utmpxname","","",null,null],[5,"getutxent","","",null,null],[5,"getutxid","","",null,null],[5,"getutxline","","",null,null],[5,"pututxline","","",null,null],[5,"setutxent","","",null,null],[5,"endutxent","","",null,null],[5,"getpt","","",null,null],[5,"sysctl","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"ptrace","","",null,null],[5,"pthread_attr_getaffinity_np","","",null,null],[5,"pthread_attr_setaffinity_np","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"pthread_getaffinity_np","","",null,null],[5,"pthread_setaffinity_np","","",null,null],[5,"pthread_rwlockattr_getkind_np","","",null,null],[5,"pthread_rwlockattr_setkind_np","","",null,null],[5,"sched_getcpu","","",null,null],[5,"getcontext","","",null,null],[5,"setcontext","","",null,null],[5,"makecontext","","",null,null],[5,"swapcontext","","",null,null],[5,"iopl","","",null,null],[5,"ioperm","","",null,null],[11,"clone","","",78,{"inputs":[{"name":"self"}],"output":{"name":"stat"}}],[11,"clone","","",79,{"inputs":[{"name":"self"}],"output":{"name":"stat64"}}],[11,"clone","","",90,{"inputs":[{"name":"self"}],"output":{"name":"pthread_attr_t"}}],[11,"clone","","",80,{"inputs":[{"name":"self"}],"output":{"name":"_libc_fpxreg"}}],[11,"clone","","",81,{"inputs":[{"name":"self"}],"output":{"name":"_libc_xmmreg"}}],[11,"clone","","",82,{"inputs":[{"name":"self"}],"output":{"name":"_libc_fpstate"}}],[11,"clone","","",83,{"inputs":[{"name":"self"}],"output":{"name":"user_fpregs_struct"}}],[11,"clone","","",84,{"inputs":[{"name":"self"}],"output":{"name":"user_regs_struct"}}],[11,"clone","","",85,{"inputs":[{"name":"self"}],"output":{"name":"user"}}],[11,"clone","","",86,{"inputs":[{"name":"self"}],"output":{"name":"mcontext_t"}}],[11,"clone","","",87,{"inputs":[{"name":"self"}],"output":{"name":"ucontext_t"}}],[11,"clone","","",88,{"inputs":[{"name":"self"}],"output":{"name":"ipc_perm"}}],[11,"clone","","",89,{"inputs":[{"name":"self"}],"output":{"name":"shmid_ds"}}],[11,"clone","","",91,{"inputs":[{"name":"self"}],"output":{"name":"sigset_t"}}],[11,"clone","","",76,{"inputs":[{"name":"self"}],"output":{"name":"sysinfo"}}],[11,"clone","","",77,{"inputs":[{"name":"self"}],"output":{"name":"msqid_ds"}}],[11,"clone","","",62,{"inputs":[{"name":"self"}],"output":{"name":"aiocb"}}],[11,"clone","","",63,{"inputs":[{"name":"self"}],"output":{"name":"__exit_status"}}],[11,"clone","","",64,{"inputs":[{"name":"self"}],"output":{"name":"__timeval"}}],[11,"clone","","",65,{"inputs":[{"name":"self"}],"output":{"name":"utmpx"}}],[11,"clone","","",66,{"inputs":[{"name":"self"}],"output":{"name":"sigaction"}}],[11,"clone","","",67,{"inputs":[{"name":"self"}],"output":{"name":"stack_t"}}],[11,"clone","","",68,{"inputs":[{"name":"self"}],"output":{"name":"siginfo_t"}}],[11,"clone","","",69,{"inputs":[{"name":"self"}],"output":{"name":"glob64_t"}}],[11,"clone","","",70,{"inputs":[{"name":"self"}],"output":{"name":"ucred"}}],[11,"clone","","",71,{"inputs":[{"name":"self"}],"output":{"name":"statfs"}}],[11,"clone","","",72,{"inputs":[{"name":"self"}],"output":{"name":"msghdr"}}],[11,"clone","","",73,{"inputs":[{"name":"self"}],"output":{"name":"cmsghdr"}}],[11,"clone","","",74,{"inputs":[{"name":"self"}],"output":{"name":"termios"}}],[11,"clone","","",75,{"inputs":[{"name":"self"}],"output":{"name":"flock"}}],[11,"clone","","",92,{"inputs":[{"name":"self"}],"output":{"name":"sem_t"}}],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"dirent"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"dirent64"}}],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"rlimit64"}}],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"glob_t"}}],[11,"clone","","",37,{"inputs":[{"name":"self"}],"output":{"name":"ifaddrs"}}],[11,"clone","","",93,{"inputs":[{"name":"self"}],"output":{"name":"pthread_mutex_t"}}],[11,"clone","","",94,{"inputs":[{"name":"self"}],"output":{"name":"pthread_rwlock_t"}}],[11,"clone","","",95,{"inputs":[{"name":"self"}],"output":{"name":"pthread_mutexattr_t"}}],[11,"clone","","",96,{"inputs":[{"name":"self"}],"output":{"name":"pthread_rwlockattr_t"}}],[11,"clone","","",97,{"inputs":[{"name":"self"}],"output":{"name":"pthread_cond_t"}}],[11,"clone","","",98,{"inputs":[{"name":"self"}],"output":{"name":"pthread_condattr_t"}}],[11,"clone","","",38,{"inputs":[{"name":"self"}],"output":{"name":"passwd"}}],[11,"clone","","",39,{"inputs":[{"name":"self"}],"output":{"name":"spwd"}}],[11,"clone","","",40,{"inputs":[{"name":"self"}],"output":{"name":"statvfs"}}],[11,"clone","","",41,{"inputs":[{"name":"self"}],"output":{"name":"dqblk"}}],[11,"clone","","",42,{"inputs":[{"name":"self"}],"output":{"name":"signalfd_siginfo"}}],[11,"clone","","",99,{"inputs":[{"name":"self"}],"output":{"name":"fsid_t"}}],[11,"clone","","",43,{"inputs":[{"name":"self"}],"output":{"name":"mq_attr"}}],[11,"clone","","",100,{"inputs":[{"name":"self"}],"output":{"name":"cpu_set_t"}}],[11,"clone","","",44,{"inputs":[{"name":"self"}],"output":{"name":"if_nameindex"}}],[11,"clone","","",45,{"inputs":[{"name":"self"}],"output":{"name":"msginfo"}}],[11,"clone","","",46,{"inputs":[{"name":"self"}],"output":{"name":"mmsghdr"}}],[11,"clone","","",47,{"inputs":[{"name":"self"}],"output":{"name":"sembuf"}}],[11,"clone","","",48,{"inputs":[{"name":"self"}],"output":{"name":"input_event"}}],[11,"clone","","",49,{"inputs":[{"name":"self"}],"output":{"name":"input_id"}}],[11,"clone","","",50,{"inputs":[{"name":"self"}],"output":{"name":"input_absinfo"}}],[11,"clone","","",51,{"inputs":[{"name":"self"}],"output":{"name":"input_keymap_entry"}}],[11,"clone","","",52,{"inputs":[{"name":"self"}],"output":{"name":"input_mask"}}],[11,"clone","","",53,{"inputs":[{"name":"self"}],"output":{"name":"ff_replay"}}],[11,"clone","","",54,{"inputs":[{"name":"self"}],"output":{"name":"ff_trigger"}}],[11,"clone","","",55,{"inputs":[{"name":"self"}],"output":{"name":"ff_envelope"}}],[11,"clone","","",56,{"inputs":[{"name":"self"}],"output":{"name":"ff_constant_effect"}}],[11,"clone","","",57,{"inputs":[{"name":"self"}],"output":{"name":"ff_ramp_effect"}}],[11,"clone","","",58,{"inputs":[{"name":"self"}],"output":{"name":"ff_condition_effect"}}],[11,"clone","","",59,{"inputs":[{"name":"self"}],"output":{"name":"ff_periodic_effect"}}],[11,"clone","","",60,{"inputs":[{"name":"self"}],"output":{"name":"ff_rumble_effect"}}],[11,"clone","","",61,{"inputs":[{"name":"self"}],"output":{"name":"ff_effect"}}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_in"}}],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_in6"}}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_un"}}],[11,"clone","","",22,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_storage"}}],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"addrinfo"}}],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_nl"}}],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_ll"}}],[11,"clone","","",101,{"inputs":[{"name":"self"}],"output":{"name":"fd_set"}}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"tm"}}],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"sched_param"}}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"dl_info"}}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"epoll_event"}}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"utsname"}}],[11,"clone","","",31,{"inputs":[{"name":"self"}],"output":{"name":"lconv"}}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"sigevent"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"group"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"utimbuf"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"timeval"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"timespec"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"rlimit"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"rusage"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"in_addr"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"in6_addr"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"ip_mreq"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"ipv6_mreq"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"hostent"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"iovec"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"pollfd"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"winsize"}}],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"linger"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"sigval"}}],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"itimerval"}}],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"tms"}}],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"loff_t","","",null,null],[6,"clockid_t","","",null,null],[6,"key_t","","",null,null],[6,"id_t","","",null,null],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"pthread_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"mqd_t","","",null,null],[6,"msgqnum_t","","",null,null],[6,"msglen_t","","",null,null],[6,"nfds_t","","",null,null],[6,"nl_item","","",null,null],[6,"idtype_t","","",null,null],[6,"__u8","","",null,null],[6,"__u16","","",null,null],[6,"__s16","","",null,null],[6,"__u32","","",null,null],[6,"__s32","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"rlim_t","","",null,null],[6,"__priority_which_t","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"greg_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"__u64","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_SETLEASE","","",null,null],[17,"F_GETLEASE","","",null,null],[17,"F_NOTIFY","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_SETPIPE_SZ","","",null,null],[17,"F_GETPIPE_SZ","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"CLOCK_MONOTONIC_RAW","","",null,null],[17,"CLOCK_REALTIME_COARSE","","",null,null],[17,"CLOCK_MONOTONIC_COARSE","","",null,null],[17,"CLOCK_BOOTTIME","","",null,null],[17,"CLOCK_REALTIME_ALARM","","",null,null],[17,"CLOCK_BOOTTIME_ALARM","","",null,null],[17,"TIMER_ABSTIME","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_TMPFILE","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"SCM_RIGHTS","","",null,null],[17,"SCM_CREDENTIALS","","",null,null],[17,"IPPROTO_RAW","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_UP","","",null,null],[17,"IFF_BROADCAST","","",null,null],[17,"IFF_DEBUG","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"IFF_POINTOPOINT","","",null,null],[17,"IFF_NOTRAILERS","","",null,null],[17,"IFF_RUNNING","","",null,null],[17,"IFF_NOARP","","",null,null],[17,"IFF_PROMISC","","",null,null],[17,"IFF_ALLMULTI","","",null,null],[17,"IFF_MASTER","","",null,null],[17,"IFF_SLAVE","","",null,null],[17,"IFF_MULTICAST","","",null,null],[17,"IFF_PORTSEL","","",null,null],[17,"IFF_AUTOMEDIA","","",null,null],[17,"IFF_DYNAMIC","","",null,null],[17,"SOL_IP","","",null,null],[17,"SOL_TCP","","",null,null],[17,"SOL_IPV6","","",null,null],[17,"SOL_ICMPV6","","",null,null],[17,"SOL_RAW","","",null,null],[17,"SOL_DECNET","","",null,null],[17,"SOL_X25","","",null,null],[17,"SOL_PACKET","","",null,null],[17,"SOL_ATM","","",null,null],[17,"SOL_AAL","","",null,null],[17,"SOL_IRDA","","",null,null],[17,"SOL_NETBEUI","","",null,null],[17,"SOL_LLC","","",null,null],[17,"SOL_DCCP","","",null,null],[17,"SOL_NETLINK","","",null,null],[17,"SOL_TIPC","","",null,null],[17,"AF_UNSPEC","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_LOCAL","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_AX25","","",null,null],[17,"AF_IPX","","",null,null],[17,"AF_APPLETALK","","",null,null],[17,"AF_NETROM","","",null,null],[17,"AF_BRIDGE","","",null,null],[17,"AF_ATMPVC","","",null,null],[17,"AF_X25","","",null,null],[17,"AF_INET6","","",null,null],[17,"AF_ROSE","","",null,null],[17,"AF_DECnet","","",null,null],[17,"AF_NETBEUI","","",null,null],[17,"AF_SECURITY","","",null,null],[17,"AF_KEY","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"AF_ROUTE","","",null,null],[17,"AF_PACKET","","",null,null],[17,"AF_ASH","","",null,null],[17,"AF_ECONET","","",null,null],[17,"AF_ATMSVC","","",null,null],[17,"AF_RDS","","",null,null],[17,"AF_SNA","","",null,null],[17,"AF_IRDA","","",null,null],[17,"AF_PPPOX","","",null,null],[17,"AF_WANPIPE","","",null,null],[17,"AF_LLC","","",null,null],[17,"AF_CAN","","",null,null],[17,"AF_TIPC","","",null,null],[17,"AF_BLUETOOTH","","",null,null],[17,"AF_IUCV","","",null,null],[17,"AF_RXRPC","","",null,null],[17,"AF_ISDN","","",null,null],[17,"AF_PHONET","","",null,null],[17,"AF_IEEE802154","","",null,null],[17,"AF_CAIF","","",null,null],[17,"AF_ALG","","",null,null],[17,"PF_UNSPEC","","",null,null],[17,"PF_UNIX","","",null,null],[17,"PF_LOCAL","","",null,null],[17,"PF_INET","","",null,null],[17,"PF_AX25","","",null,null],[17,"PF_IPX","","",null,null],[17,"PF_APPLETALK","","",null,null],[17,"PF_NETROM","","",null,null],[17,"PF_BRIDGE","","",null,null],[17,"PF_ATMPVC","","",null,null],[17,"PF_X25","","",null,null],[17,"PF_INET6","","",null,null],[17,"PF_ROSE","","",null,null],[17,"PF_DECnet","","",null,null],[17,"PF_NETBEUI","","",null,null],[17,"PF_SECURITY","","",null,null],[17,"PF_KEY","","",null,null],[17,"PF_NETLINK","","",null,null],[17,"PF_ROUTE","","",null,null],[17,"PF_PACKET","","",null,null],[17,"PF_ASH","","",null,null],[17,"PF_ECONET","","",null,null],[17,"PF_ATMSVC","","",null,null],[17,"PF_RDS","","",null,null],[17,"PF_SNA","","",null,null],[17,"PF_IRDA","","",null,null],[17,"PF_PPPOX","","",null,null],[17,"PF_WANPIPE","","",null,null],[17,"PF_LLC","","",null,null],[17,"PF_CAN","","",null,null],[17,"PF_TIPC","","",null,null],[17,"PF_BLUETOOTH","","",null,null],[17,"PF_IUCV","","",null,null],[17,"PF_RXRPC","","",null,null],[17,"PF_ISDN","","",null,null],[17,"PF_PHONET","","",null,null],[17,"PF_IEEE802154","","",null,null],[17,"PF_CAIF","","",null,null],[17,"PF_ALG","","",null,null],[17,"SOMAXCONN","","",null,null],[17,"MSG_OOB","","",null,null],[17,"MSG_PEEK","","",null,null],[17,"MSG_DONTROUTE","","",null,null],[17,"MSG_CTRUNC","","",null,null],[17,"MSG_TRUNC","","",null,null],[17,"MSG_DONTWAIT","","",null,null],[17,"MSG_EOR","","",null,null],[17,"MSG_WAITALL","","",null,null],[17,"MSG_FIN","","",null,null],[17,"MSG_SYN","","",null,null],[17,"MSG_CONFIRM","","",null,null],[17,"MSG_RST","","",null,null],[17,"MSG_ERRQUEUE","","",null,null],[17,"MSG_NOSIGNAL","","",null,null],[17,"MSG_MORE","","",null,null],[17,"MSG_WAITFORONE","","",null,null],[17,"MSG_FASTOPEN","","",null,null],[17,"MSG_CMSG_CLOEXEC","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"IPPROTO_ICMP","","",null,null],[17,"IPPROTO_ICMPV6","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"PATH_MAX","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"CR0","","",null,null],[17,"FF0","","",null,null],[17,"BS0","","",null,null],[17,"VT0","","",null,null],[17,"VERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VLNEXT","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"IUTF8","","",null,null],[17,"OPOST","","",null,null],[17,"CS5","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHO","","",null,null],[17,"OCRNL","","",null,null],[17,"ONOCR","","",null,null],[17,"ONLRET","","",null,null],[17,"OFILL","","",null,null],[17,"OFDEL","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"CLONE_NEWCGROUP","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"WSTOPPED","","",null,null],[17,"WEXITED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"__WNOTHREAD","","",null,null],[17,"__WALL","","",null,null],[17,"__WCLONE","","",null,null],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"POSIX_FADV_NORMAL","","",null,null],[17,"POSIX_FADV_RANDOM","","",null,null],[17,"POSIX_FADV_SEQUENTIAL","","",null,null],[17,"POSIX_FADV_WILLNEED","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"AT_REMOVEDIR","","",null,null],[17,"AT_SYMLINK_FOLLOW","","",null,null],[17,"AT_NO_AUTOMOUNT","","",null,null],[17,"AT_EMPTY_PATH","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"SI_LOAD_SHIFT","","",null,null],[17,"SIGEV_SIGNAL","","",null,null],[17,"SIGEV_NONE","","",null,null],[17,"SIGEV_THREAD","","",null,null],[17,"P_ALL","","",null,null],[17,"P_PID","","",null,null],[17,"P_PGID","","",null,null],[17,"UTIME_OMIT","","",null,null],[17,"UTIME_NOW","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"CODESET","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_LINK_MAX","","",null,null],[17,"_PC_MAX_CANON","","",null,null],[17,"_PC_MAX_INPUT","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[17,"_PC_PIPE_BUF","","",null,null],[17,"_PC_CHOWN_RESTRICTED","","",null,null],[17,"_PC_NO_TRUNC","","",null,null],[17,"_PC_VDISABLE","","",null,null],[17,"_PC_SYNC_IO","","",null,null],[17,"_PC_ASYNC_IO","","",null,null],[17,"_PC_PRIO_IO","","",null,null],[17,"_PC_SOCK_MAXBUF","","",null,null],[17,"_PC_FILESIZEBITS","","",null,null],[17,"_PC_REC_INCR_XFER_SIZE","","",null,null],[17,"_PC_REC_MAX_XFER_SIZE","","",null,null],[17,"_PC_REC_MIN_XFER_SIZE","","",null,null],[17,"_PC_REC_XFER_ALIGN","","",null,null],[17,"_PC_ALLOC_SIZE_MIN","","",null,null],[17,"_PC_SYMLINK_MAX","","",null,null],[17,"_PC_2_SYMLINKS","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_UIO_MAXIOV","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_NPROCESSORS_CONF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_PHYS_PAGES","","",null,null],[17,"_SC_AVPHYS_PAGES","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_PASS_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XOPEN_XPG2","","",null,null],[17,"_SC_XOPEN_XPG3","","",null,null],[17,"_SC_XOPEN_XPG4","","",null,null],[17,"_SC_NZERO","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LP64_OFF64","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_ADVISORY_INFO","","",null,null],[17,"_SC_BARRIERS","","",null,null],[17,"_SC_CLOCK_SELECTION","","",null,null],[17,"_SC_CPUTIME","","",null,null],[17,"_SC_THREAD_CPUTIME","","",null,null],[17,"_SC_MONOTONIC_CLOCK","","",null,null],[17,"_SC_READER_WRITER_LOCKS","","",null,null],[17,"_SC_SPIN_LOCKS","","",null,null],[17,"_SC_REGEXP","","",null,null],[17,"_SC_SHELL","","",null,null],[17,"_SC_SPAWN","","",null,null],[17,"_SC_SPORADIC_SERVER","","",null,null],[17,"_SC_THREAD_SPORADIC_SERVER","","",null,null],[17,"_SC_TIMEOUTS","","",null,null],[17,"_SC_TYPED_MEMORY_OBJECTS","","",null,null],[17,"_SC_2_PBS","","",null,null],[17,"_SC_2_PBS_ACCOUNTING","","",null,null],[17,"_SC_2_PBS_LOCATE","","",null,null],[17,"_SC_2_PBS_MESSAGE","","",null,null],[17,"_SC_2_PBS_TRACK","","",null,null],[17,"_SC_SYMLOOP_MAX","","",null,null],[17,"_SC_STREAMS","","",null,null],[17,"_SC_2_PBS_CHECKPOINT","","",null,null],[17,"_SC_V6_ILP32_OFF32","","",null,null],[17,"_SC_V6_ILP32_OFFBIG","","",null,null],[17,"_SC_V6_LP64_OFF64","","",null,null],[17,"_SC_V6_LPBIG_OFFBIG","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"_SC_TRACE","","",null,null],[17,"_SC_TRACE_EVENT_FILTER","","",null,null],[17,"_SC_TRACE_INHERIT","","",null,null],[17,"_SC_TRACE_LOG","","",null,null],[17,"_SC_IPV6","","",null,null],[17,"_SC_RAW_SOCKETS","","",null,null],[17,"_SC_V7_ILP32_OFF32","","",null,null],[17,"_SC_V7_ILP32_OFFBIG","","",null,null],[17,"_SC_V7_LP64_OFF64","","",null,null],[17,"_SC_V7_LPBIG_OFFBIG","","",null,null],[17,"_SC_SS_REPL_MAX","","",null,null],[17,"_SC_TRACE_EVENT_NAME_MAX","","",null,null],[17,"_SC_TRACE_NAME_MAX","","",null,null],[17,"_SC_TRACE_SYS_MAX","","",null,null],[17,"_SC_TRACE_USER_EVENT_MAX","","",null,null],[17,"_SC_XOPEN_STREAMS","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_PROTECT","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"PTHREAD_PROCESS_PRIVATE","","",null,null],[17,"PTHREAD_PROCESS_SHARED","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"AF_IB","","",null,null],[17,"AF_MPLS","","",null,null],[17,"AF_NFC","","",null,null],[17,"AF_VSOCK","","",null,null],[17,"PF_IB","","",null,null],[17,"PF_MPLS","","",null,null],[17,"PF_NFC","","",null,null],[17,"PF_VSOCK","","",null,null],[17,"IPC_PRIVATE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"MSG_STAT","","",null,null],[17,"MSG_INFO","","",null,null],[17,"MSG_NOERROR","","",null,null],[17,"MSG_EXCEPT","","",null,null],[17,"MSG_COPY","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLEXCLUSIVE","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"RB_AUTOBOOT","","",null,null],[17,"RB_HALT_SYSTEM","","",null,null],[17,"RB_ENABLE_CAD","","",null,null],[17,"RB_DISABLE_CAD","","",null,null],[17,"RB_POWER_OFF","","",null,null],[17,"RB_SW_SUSPEND","","",null,null],[17,"RB_KEXEC","","",null,null],[17,"AI_PASSIVE","","",null,null],[17,"AI_CANONNAME","","",null,null],[17,"AI_NUMERICHOST","","",null,null],[17,"AI_V4MAPPED","","",null,null],[17,"AI_ALL","","",null,null],[17,"AI_ADDRCONFIG","","",null,null],[17,"AI_NUMERICSERV","","",null,null],[17,"EAI_BADFLAGS","","",null,null],[17,"EAI_NONAME","","",null,null],[17,"EAI_AGAIN","","",null,null],[17,"EAI_FAIL","","",null,null],[17,"EAI_FAMILY","","",null,null],[17,"EAI_SOCKTYPE","","",null,null],[17,"EAI_SERVICE","","",null,null],[17,"EAI_MEMORY","","",null,null],[17,"EAI_OVERFLOW","","",null,null],[17,"NI_NUMERICHOST","","",null,null],[17,"NI_NUMERICSERV","","",null,null],[17,"NI_NOFQDN","","",null,null],[17,"NI_NAMEREQD","","",null,null],[17,"NI_DGRAM","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_BEFORE","","",null,null],[17,"SYNC_FILE_RANGE_WRITE","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_AFTER","","",null,null],[17,"EAI_SYSTEM","","",null,null],[17,"AIO_CANCELED","","",null,null],[17,"AIO_NOTCANCELED","","",null,null],[17,"AIO_ALLDONE","","",null,null],[17,"LIO_READ","","",null,null],[17,"LIO_WRITE","","",null,null],[17,"LIO_NOP","","",null,null],[17,"LIO_WAIT","","",null,null],[17,"LIO_NOWAIT","","",null,null],[17,"MREMAP_MAYMOVE","","",null,null],[17,"MREMAP_FIXED","","",null,null],[17,"PR_SET_PDEATHSIG","","",null,null],[17,"PR_GET_PDEATHSIG","","",null,null],[17,"PR_GET_DUMPABLE","","",null,null],[17,"PR_SET_DUMPABLE","","",null,null],[17,"PR_GET_UNALIGN","","",null,null],[17,"PR_SET_UNALIGN","","",null,null],[17,"PR_UNALIGN_NOPRINT","","",null,null],[17,"PR_UNALIGN_SIGBUS","","",null,null],[17,"PR_GET_KEEPCAPS","","",null,null],[17,"PR_SET_KEEPCAPS","","",null,null],[17,"PR_GET_FPEMU","","",null,null],[17,"PR_SET_FPEMU","","",null,null],[17,"PR_FPEMU_NOPRINT","","",null,null],[17,"PR_FPEMU_SIGFPE","","",null,null],[17,"PR_GET_FPEXC","","",null,null],[17,"PR_SET_FPEXC","","",null,null],[17,"PR_FP_EXC_SW_ENABLE","","",null,null],[17,"PR_FP_EXC_DIV","","",null,null],[17,"PR_FP_EXC_OVF","","",null,null],[17,"PR_FP_EXC_UND","","",null,null],[17,"PR_FP_EXC_RES","","",null,null],[17,"PR_FP_EXC_INV","","",null,null],[17,"PR_FP_EXC_DISABLED","","",null,null],[17,"PR_FP_EXC_NONRECOV","","",null,null],[17,"PR_FP_EXC_ASYNC","","",null,null],[17,"PR_FP_EXC_PRECISE","","",null,null],[17,"PR_GET_TIMING","","",null,null],[17,"PR_SET_TIMING","","",null,null],[17,"PR_TIMING_STATISTICAL","","",null,null],[17,"PR_TIMING_TIMESTAMP","","",null,null],[17,"PR_SET_NAME","","",null,null],[17,"PR_GET_NAME","","",null,null],[17,"PR_GET_ENDIAN","","",null,null],[17,"PR_SET_ENDIAN","","",null,null],[17,"PR_ENDIAN_BIG","","",null,null],[17,"PR_ENDIAN_LITTLE","","",null,null],[17,"PR_ENDIAN_PPC_LITTLE","","",null,null],[17,"PR_GET_SECCOMP","","",null,null],[17,"PR_SET_SECCOMP","","",null,null],[17,"PR_CAPBSET_READ","","",null,null],[17,"PR_CAPBSET_DROP","","",null,null],[17,"PR_GET_TSC","","",null,null],[17,"PR_SET_TSC","","",null,null],[17,"PR_TSC_ENABLE","","",null,null],[17,"PR_TSC_SIGSEGV","","",null,null],[17,"PR_GET_SECUREBITS","","",null,null],[17,"PR_SET_SECUREBITS","","",null,null],[17,"PR_SET_TIMERSLACK","","",null,null],[17,"PR_GET_TIMERSLACK","","",null,null],[17,"PR_TASK_PERF_EVENTS_DISABLE","","",null,null],[17,"PR_TASK_PERF_EVENTS_ENABLE","","",null,null],[17,"PR_MCE_KILL","","",null,null],[17,"PR_MCE_KILL_CLEAR","","",null,null],[17,"PR_MCE_KILL_SET","","",null,null],[17,"PR_MCE_KILL_LATE","","",null,null],[17,"PR_MCE_KILL_EARLY","","",null,null],[17,"PR_MCE_KILL_DEFAULT","","",null,null],[17,"PR_MCE_KILL_GET","","",null,null],[17,"PR_SET_MM","","",null,null],[17,"PR_SET_MM_START_CODE","","",null,null],[17,"PR_SET_MM_END_CODE","","",null,null],[17,"PR_SET_MM_START_DATA","","",null,null],[17,"PR_SET_MM_END_DATA","","",null,null],[17,"PR_SET_MM_START_STACK","","",null,null],[17,"PR_SET_MM_START_BRK","","",null,null],[17,"PR_SET_MM_BRK","","",null,null],[17,"PR_SET_MM_ARG_START","","",null,null],[17,"PR_SET_MM_ARG_END","","",null,null],[17,"PR_SET_MM_ENV_START","","",null,null],[17,"PR_SET_MM_ENV_END","","",null,null],[17,"PR_SET_MM_AUXV","","",null,null],[17,"PR_SET_MM_EXE_FILE","","",null,null],[17,"PR_SET_MM_MAP","","",null,null],[17,"PR_SET_MM_MAP_SIZE","","",null,null],[17,"PR_SET_PTRACER","","",null,null],[17,"PR_SET_CHILD_SUBREAPER","","",null,null],[17,"PR_GET_CHILD_SUBREAPER","","",null,null],[17,"PR_SET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_TID_ADDRESS","","",null,null],[17,"PR_SET_THP_DISABLE","","",null,null],[17,"PR_GET_THP_DISABLE","","",null,null],[17,"PR_MPX_ENABLE_MANAGEMENT","","",null,null],[17,"PR_MPX_DISABLE_MANAGEMENT","","",null,null],[17,"PR_SET_FP_MODE","","",null,null],[17,"PR_GET_FP_MODE","","",null,null],[17,"PR_FP_MODE_FR","","",null,null],[17,"PR_FP_MODE_FRE","","",null,null],[17,"PR_CAP_AMBIENT","","",null,null],[17,"PR_CAP_AMBIENT_IS_SET","","",null,null],[17,"PR_CAP_AMBIENT_RAISE","","",null,null],[17,"PR_CAP_AMBIENT_LOWER","","",null,null],[17,"PR_CAP_AMBIENT_CLEAR_ALL","","",null,null],[17,"ITIMER_REAL","","",null,null],[17,"ITIMER_VIRTUAL","","",null,null],[17,"ITIMER_PROF","","",null,null],[17,"XATTR_CREATE","","",null,null],[17,"XATTR_REPLACE","","",null,null],[17,"_POSIX_VDISABLE","","",null,null],[17,"ENOATTR","","",null,null],[17,"__UT_LINESIZE","","",null,null],[17,"__UT_NAMESIZE","","",null,null],[17,"__UT_HOSTSIZE","","",null,null],[17,"EMPTY","","",null,null],[17,"RUN_LVL","","",null,null],[17,"BOOT_TIME","","",null,null],[17,"NEW_TIME","","",null,null],[17,"OLD_TIME","","",null,null],[17,"INIT_PROCESS","","",null,null],[17,"LOGIN_PROCESS","","",null,null],[17,"USER_PROCESS","","",null,null],[17,"DEAD_PROCESS","","",null,null],[17,"ACCOUNTING","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"SOL_RXRPC","","",null,null],[17,"SOL_PPPOL2TP","","",null,null],[17,"SOL_BLUETOOTH","","",null,null],[17,"SOL_PNPIPE","","",null,null],[17,"SOL_RDS","","",null,null],[17,"SOL_IUCV","","",null,null],[17,"SOL_CAIF","","",null,null],[17,"SOL_ALG","","",null,null],[17,"SOL_NFC","","",null,null],[17,"MSG_TRYHARD","","",null,null],[17,"LC_PAPER","","",null,null],[17,"LC_NAME","","",null,null],[17,"LC_ADDRESS","","",null,null],[17,"LC_TELEPHONE","","",null,null],[17,"LC_MEASUREMENT","","",null,null],[17,"LC_IDENTIFICATION","","",null,null],[17,"LC_PAPER_MASK","","",null,null],[17,"LC_NAME_MASK","","",null,null],[17,"LC_ADDRESS_MASK","","",null,null],[17,"LC_TELEPHONE_MASK","","",null,null],[17,"LC_MEASUREMENT_MASK","","",null,null],[17,"LC_IDENTIFICATION_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"ENOTSUP","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGEV_THREAD_ID","","",null,null],[17,"POLLRDNORM","","",null,null],[17,"POLLRDBAND","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"POSIX_FADV_DONTNEED","","",null,null],[17,"POSIX_FADV_NOREUSE","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_EQUIV_CLASS_MAX","","",null,null],[17,"_SC_CHARCLASS_NAME_MAX","","",null,null],[17,"_SC_PII","","",null,null],[17,"_SC_PII_XTI","","",null,null],[17,"_SC_PII_SOCKET","","",null,null],[17,"_SC_PII_INTERNET","","",null,null],[17,"_SC_PII_OSI","","",null,null],[17,"_SC_POLL","","",null,null],[17,"_SC_SELECT","","",null,null],[17,"_SC_PII_INTERNET_STREAM","","",null,null],[17,"_SC_PII_INTERNET_DGRAM","","",null,null],[17,"_SC_PII_OSI_COTS","","",null,null],[17,"_SC_PII_OSI_CLTS","","",null,null],[17,"_SC_PII_OSI_M","","",null,null],[17,"_SC_T_IOV_MAX","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"_SC_CHAR_BIT","","",null,null],[17,"_SC_CHAR_MAX","","",null,null],[17,"_SC_CHAR_MIN","","",null,null],[17,"_SC_INT_MAX","","",null,null],[17,"_SC_INT_MIN","","",null,null],[17,"_SC_LONG_BIT","","",null,null],[17,"_SC_WORD_BIT","","",null,null],[17,"_SC_MB_LEN_MAX","","",null,null],[17,"_SC_SSIZE_MAX","","",null,null],[17,"_SC_SCHAR_MAX","","",null,null],[17,"_SC_SCHAR_MIN","","",null,null],[17,"_SC_SHRT_MAX","","",null,null],[17,"_SC_SHRT_MIN","","",null,null],[17,"_SC_UCHAR_MAX","","",null,null],[17,"_SC_UINT_MAX","","",null,null],[17,"_SC_ULONG_MAX","","",null,null],[17,"_SC_USHRT_MAX","","",null,null],[17,"_SC_NL_ARGMAX","","",null,null],[17,"_SC_NL_LANGMAX","","",null,null],[17,"_SC_NL_MSGMAX","","",null,null],[17,"_SC_NL_NMAX","","",null,null],[17,"_SC_NL_SETMAX","","",null,null],[17,"_SC_NL_TEXTMAX","","",null,null],[17,"_SC_BASE","","",null,null],[17,"_SC_C_LANG_SUPPORT","","",null,null],[17,"_SC_C_LANG_SUPPORT_R","","",null,null],[17,"_SC_DEVICE_IO","","",null,null],[17,"_SC_DEVICE_SPECIFIC","","",null,null],[17,"_SC_DEVICE_SPECIFIC_R","","",null,null],[17,"_SC_FD_MGMT","","",null,null],[17,"_SC_FIFO","","",null,null],[17,"_SC_PIPE","","",null,null],[17,"_SC_FILE_ATTRIBUTES","","",null,null],[17,"_SC_FILE_LOCKING","","",null,null],[17,"_SC_FILE_SYSTEM","","",null,null],[17,"_SC_MULTI_PROCESS","","",null,null],[17,"_SC_SINGLE_PROCESS","","",null,null],[17,"_SC_NETWORKING","","",null,null],[17,"_SC_REGEX_VERSION","","",null,null],[17,"_SC_SIGNALS","","",null,null],[17,"_SC_SYSTEM_DATABASE","","",null,null],[17,"_SC_SYSTEM_DATABASE_R","","",null,null],[17,"_SC_USER_GROUPS","","",null,null],[17,"_SC_USER_GROUPS_R","","",null,null],[17,"_SC_LEVEL1_ICACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_ICACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_ICACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_DCACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL2_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL3_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL4_CACHE_LINESIZE","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"VEOF","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"SEEK_DATA","","",null,null],[17,"SEEK_HOLE","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"TIOCLINUX","","",null,null],[17,"TIOCGSERIAL","","",null,null],[17,"RTLD_DEEPBIND","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"LINUX_REBOOT_MAGIC1","","",null,null],[17,"LINUX_REBOOT_MAGIC2","","",null,null],[17,"LINUX_REBOOT_MAGIC2A","","",null,null],[17,"LINUX_REBOOT_MAGIC2B","","",null,null],[17,"LINUX_REBOOT_MAGIC2C","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART","","",null,null],[17,"LINUX_REBOOT_CMD_HALT","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_ON","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_POWER_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART2","","",null,null],[17,"LINUX_REBOOT_CMD_SW_SUSPEND","","",null,null],[17,"LINUX_REBOOT_CMD_KEXEC","","",null,null],[17,"NETLINK_ROUTE","","",null,null],[17,"NETLINK_UNUSED","","",null,null],[17,"NETLINK_USERSOCK","","",null,null],[17,"NETLINK_FIREWALL","","",null,null],[17,"NETLINK_SOCK_DIAG","","",null,null],[17,"NETLINK_NFLOG","","",null,null],[17,"NETLINK_XFRM","","",null,null],[17,"NETLINK_SELINUX","","",null,null],[17,"NETLINK_ISCSI","","",null,null],[17,"NETLINK_AUDIT","","",null,null],[17,"NETLINK_FIB_LOOKUP","","",null,null],[17,"NETLINK_CONNECTOR","","",null,null],[17,"NETLINK_NETFILTER","","",null,null],[17,"NETLINK_IP6_FW","","",null,null],[17,"NETLINK_DNRTMSG","","",null,null],[17,"NETLINK_KOBJECT_UEVENT","","",null,null],[17,"NETLINK_GENERIC","","",null,null],[17,"NETLINK_SCSITRANSPORT","","",null,null],[17,"NETLINK_ECRYPTFS","","",null,null],[17,"NETLINK_RDMA","","",null,null],[17,"NETLINK_CRYPTO","","",null,null],[17,"NETLINK_INET_DIAG","","",null,null],[17,"MAX_LINKS","","",null,null],[17,"NLM_F_REQUEST","","",null,null],[17,"NLM_F_MULTI","","",null,null],[17,"NLM_F_ACK","","",null,null],[17,"NLM_F_ECHO","","",null,null],[17,"NLM_F_DUMP_INTR","","",null,null],[17,"NLM_F_DUMP_FILTERED","","",null,null],[17,"NLM_F_ROOT","","",null,null],[17,"NLM_F_MATCH","","",null,null],[17,"NLM_F_ATOMIC","","",null,null],[17,"NLM_F_DUMP","","",null,null],[17,"NLM_F_REPLACE","","",null,null],[17,"NLM_F_EXCL","","",null,null],[17,"NLM_F_CREATE","","",null,null],[17,"NLM_F_APPEND","","",null,null],[17,"NLMSG_NOOP","","",null,null],[17,"NLMSG_ERROR","","",null,null],[17,"NLMSG_DONE","","",null,null],[17,"NLMSG_OVERRUN","","",null,null],[17,"NLMSG_MIN_TYPE","","",null,null],[17,"NETLINK_ADD_MEMBERSHIP","","",null,null],[17,"NETLINK_DROP_MEMBERSHIP","","",null,null],[17,"NETLINK_PKTINFO","","",null,null],[17,"NETLINK_BROADCAST_ERROR","","",null,null],[17,"NETLINK_NO_ENOBUFS","","",null,null],[17,"NETLINK_RX_RING","","",null,null],[17,"NETLINK_TX_RING","","",null,null],[17,"NETLINK_LISTEN_ALL_NSID","","",null,null],[17,"NETLINK_LIST_MEMBERSHIPS","","",null,null],[17,"NETLINK_CAP_ACK","","",null,null],[17,"NLA_F_NESTED","","",null,null],[17,"NLA_F_NET_BYTEORDER","","",null,null],[17,"NLA_TYPE_MASK","","",null,null],[17,"CMSPAR","","",null,null],[17,"TIOCM_LE","","",null,null],[17,"TIOCM_DTR","","",null,null],[17,"TIOCM_RTS","","",null,null],[17,"TIOCM_ST","","",null,null],[17,"TIOCM_SR","","",null,null],[17,"TIOCM_CTS","","",null,null],[17,"TIOCM_CAR","","",null,null],[17,"TIOCM_RNG","","",null,null],[17,"TIOCM_DSR","","",null,null],[17,"TIOCM_CD","","",null,null],[17,"TIOCM_RI","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCKATTR_T","","",null,null],[17,"TIOCGSOFTCAR","","",null,null],[17,"TIOCSSOFTCAR","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_SNDBUFFORCE","","",null,null],[17,"SO_RCVBUFFORCE","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_NO_CHECK","","",null,null],[17,"SO_PRIORITY","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_BSDCOMPAT","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_PASSCRED","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_SECURITY_AUTHENTICATION","","",null,null],[17,"SO_SECURITY_ENCRYPTION_TRANSPORT","","",null,null],[17,"SO_SECURITY_ENCRYPTION_NETWORK","","",null,null],[17,"SO_BINDTODEVICE","","",null,null],[17,"SO_ATTACH_FILTER","","",null,null],[17,"SO_DETACH_FILTER","","",null,null],[17,"SO_GET_FILTER","","",null,null],[17,"SO_PEERNAME","","",null,null],[17,"SO_TIMESTAMP","","",null,null],[17,"SCM_TIMESTAMP","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SO_PEERSEC","","",null,null],[17,"SO_PASSSEC","","",null,null],[17,"SO_TIMESTAMPNS","","",null,null],[17,"SCM_TIMESTAMPNS","","",null,null],[17,"SO_MARK","","",null,null],[17,"SO_TIMESTAMPING","","",null,null],[17,"SCM_TIMESTAMPING","","",null,null],[17,"SO_PROTOCOL","","",null,null],[17,"SO_DOMAIN","","",null,null],[17,"SO_RXQ_OVFL","","",null,null],[17,"SO_WIFI_STATUS","","",null,null],[17,"SCM_WIFI_STATUS","","",null,null],[17,"SO_PEEK_OFF","","",null,null],[17,"SO_NOFCS","","",null,null],[17,"SO_LOCK_FILTER","","",null,null],[17,"SO_SELECT_ERR_QUEUE","","",null,null],[17,"SO_BUSY_POLL","","",null,null],[17,"SO_MAX_PACING_RATE","","",null,null],[17,"SO_BPF_EXTENSIONS","","",null,null],[17,"SO_INCOMING_CPU","","",null,null],[17,"SO_ATTACH_BPF","","",null,null],[17,"SO_DETACH_BPF","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"POLLWRNORM","","",null,null],[17,"POLLWRBAND","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMSET","","",null,null],[17,"TIOCCONS","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"NCCS","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"EPOLL_CLOEXEC","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"PTRACE_O_EXITKILL","","",null,null],[17,"PTRACE_O_TRACECLONE","","",null,null],[17,"PTRACE_O_TRACEEXEC","","",null,null],[17,"PTRACE_O_TRACEEXIT","","",null,null],[17,"PTRACE_O_TRACEFORK","","",null,null],[17,"PTRACE_O_TRACESYSGOOD","","",null,null],[17,"PTRACE_O_TRACEVFORK","","",null,null],[17,"PTRACE_O_TRACEVFORKDONE","","",null,null],[17,"PTRACE_O_TRACESECCOMP","","",null,null],[17,"PTRACE_O_SUSPEND_SECCOMP","","",null,null],[17,"PTRACE_PEEKSIGINFO_SHARED","","",null,null],[17,"SYS_gettid","","",null,null],[17,"SYS_perf_event_open","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"MINSIGSTKSZ","","",null,null],[17,"CBAUD","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF1","","",null,null],[17,"BS1","","",null,null],[17,"VT1","","",null,null],[17,"VWERASE","","",null,null],[17,"VREPRINT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"CIBAUD","","",null,null],[17,"CBAUDEX","","",null,null],[17,"VSWTC","","",null,null],[17,"OLCUC","","",null,null],[17,"NLDLY","","",null,null],[17,"CRDLY","","",null,null],[17,"TABDLY","","",null,null],[17,"BSDLY","","",null,null],[17,"FFDLY","","",null,null],[17,"VTDLY","","",null,null],[17,"XTABS","","",null,null],[17,"B0","","",null,null],[17,"B50","","",null,null],[17,"B75","","",null,null],[17,"B110","","",null,null],[17,"B134","","",null,null],[17,"B150","","",null,null],[17,"B200","","",null,null],[17,"B300","","",null,null],[17,"B600","","",null,null],[17,"B1200","","",null,null],[17,"B1800","","",null,null],[17,"B2400","","",null,null],[17,"B4800","","",null,null],[17,"B9600","","",null,null],[17,"B19200","","",null,null],[17,"B38400","","",null,null],[17,"EXTA","","",null,null],[17,"EXTB","","",null,null],[17,"B57600","","",null,null],[17,"B115200","","",null,null],[17,"B230400","","",null,null],[17,"B460800","","",null,null],[17,"B500000","","",null,null],[17,"B576000","","",null,null],[17,"B921600","","",null,null],[17,"B1000000","","",null,null],[17,"B1152000","","",null,null],[17,"B1500000","","",null,null],[17,"B2000000","","",null,null],[17,"B2500000","","",null,null],[17,"B3000000","","",null,null],[17,"B3500000","","",null,null],[17,"B4000000","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"EXTPROC","","",null,null],[17,"TCGETS","","",null,null],[17,"TCSETS","","",null,null],[17,"TCSETSW","","",null,null],[17,"TCSETSF","","",null,null],[17,"TCGETA","","",null,null],[17,"TCSETA","","",null,null],[17,"TCSETAW","","",null,null],[17,"TCSETAF","","",null,null],[17,"TCSBRK","","",null,null],[17,"TCXONC","","",null,null],[17,"TCFLSH","","",null,null],[17,"TIOCINQ","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"FIONREAD","","",null,null]],"paths":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"sigevent"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"passwd"],[3,"spwd"],[3,"statvfs"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"mq_attr"],[3,"if_nameindex"],[3,"msginfo"],[3,"mmsghdr"],[3,"sembuf"],[3,"input_event"],[3,"input_id"],[3,"input_absinfo"],[3,"input_keymap_entry"],[3,"input_mask"],[3,"ff_replay"],[3,"ff_trigger"],[3,"ff_envelope"],[3,"ff_constant_effect"],[3,"ff_ramp_effect"],[3,"ff_condition_effect"],[3,"ff_periodic_effect"],[3,"ff_rumble_effect"],[3,"ff_effect"],[3,"aiocb"],[3,"__exit_status"],[3,"__timeval"],[3,"utmpx"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,"flock"],[3,"sysinfo"],[3,"msqid_ds"],[3,"stat"],[3,"stat64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"user_fpregs_struct"],[3,"user_regs_struct"],[3,"user"],[3,"mcontext_t"],[3,"ucontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"pthread_attr_t"],[3,"sigset_t"],[3,"sem_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_cond_t"],[3,"pthread_condattr_t"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"fd_set"]]};
searchIndex["log"] = {"doc":"A lightweight logging facade.","items":[[3,"LogRecord","log","The \"payload\" of a log message. This structure is primarily used as a parameter in the [`log`] method of the [`Log`] trait.",null,null],[3,"LogMetadata","","Metadata about a log message.",null,null],[3,"LogLocation","","The location of a log message.",null,null],[3,"MaxLogLevelFilter","","A token providing read and write access to the global maximum log level filter.",null,null],[3,"SetLoggerError","","The type returned by `set_logger` if `set_logger` has already been called.",null,null],[3,"ShutdownLoggerError","","The type returned by `shutdown_logger_raw` if `shutdown_logger_raw` has already been called or if `set_logger_raw` has not been called yet.",null,null],[4,"LogLevel","","An enum representing the available verbosity levels of the logging framework.",null,null],[13,"Error","","The \"error\" level.",0,null],[13,"Warn","","The \"warn\" level.",0,null],[13,"Info","","The \"info\" level.",0,null],[13,"Debug","","The \"debug\" level.",0,null],[13,"Trace","","The \"trace\" level.",0,null],[4,"LogLevelFilter","","An enum representing the available verbosity level filters of the logging framework.",null,null],[13,"Off","","A level lower than all log levels.",1,null],[13,"Error","","Corresponds to the `Error` log level.",1,null],[13,"Warn","","Corresponds to the `Warn` log level.",1,null],[13,"Info","","Corresponds to the `Info` log level.",1,null],[13,"Debug","","Corresponds to the `Debug` log level.",1,null],[13,"Trace","","Corresponds to the `Trace` log level.",1,null],[5,"max_log_level","","Returns the current maximum log level.",null,{"inputs":[],"output":{"name":"loglevelfilter"}}],[5,"set_logger","","Sets the global logger.",null,{"inputs":[{"name":"m"}],"output":{"name":"result"}}],[5,"set_logger_raw","","Sets the global logger from a raw pointer.",null,{"inputs":[{"name":"m"}],"output":{"name":"result"}}],[5,"shutdown_logger","","Shuts down the global logger.",null,{"inputs":[],"output":{"name":"result"}}],[5,"shutdown_logger_raw","","Shuts down the global logger.",null,{"inputs":[],"output":{"name":"result"}}],[8,"Log","","A trait encapsulating the operations required of a logger",null,null],[10,"enabled","","Determines if a log message with the specified metadata would be logged.",2,{"inputs":[{"name":"self"},{"name":"logmetadata"}],"output":{"name":"bool"}}],[10,"log","","Logs the `LogRecord`.",2,{"inputs":[{"name":"self"},{"name":"logrecord"}],"output":null}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",0,null],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"loglevel"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"loglevel"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"loglevelfilter"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"loglevel"}],"output":{"name":"option"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"loglevelfilter"}],"output":{"name":"option"}}],[11,"cmp","","",0,{"inputs":[{"name":"self"},{"name":"loglevel"}],"output":{"name":"ordering"}}],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"max","","Returns the most verbose logging level.",0,{"inputs":[],"output":{"name":"loglevel"}}],[11,"to_log_level_filter","","Converts the `LogLevel` to the equivalent `LogLevelFilter`.",0,{"inputs":[{"name":"self"}],"output":{"name":"loglevelfilter"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",1,null],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"loglevelfilter"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"loglevelfilter"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"loglevel"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"loglevelfilter"}],"output":{"name":"option"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"loglevel"}],"output":{"name":"option"}}],[11,"cmp","","",1,{"inputs":[{"name":"self"},{"name":"loglevelfilter"}],"output":{"name":"ordering"}}],[11,"from_str","","",1,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"max","","Returns the most verbose logging level filter.",1,{"inputs":[],"output":{"name":"loglevelfilter"}}],[11,"to_log_level","","Converts `self` to the equivalent `LogLevel`.",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"args","","The message body.",3,{"inputs":[{"name":"self"}],"output":{"name":"arguments"}}],[11,"metadata","","Metadata about the log directive.",3,{"inputs":[{"name":"self"}],"output":{"name":"logmetadata"}}],[11,"location","","The location of the log directive.",3,{"inputs":[{"name":"self"}],"output":{"name":"loglocation"}}],[11,"level","","The verbosity level of the message.",3,{"inputs":[{"name":"self"}],"output":{"name":"loglevel"}}],[11,"target","","The name of the target of the directive.",3,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"logmetadata"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"self"},{"name":"logmetadata"}],"output":{"name":"bool"}}],[11,"cmp","","",4,{"inputs":[{"name":"self"},{"name":"logmetadata"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",4,{"inputs":[{"name":"self"},{"name":"logmetadata"}],"output":{"name":"option"}}],[11,"lt","","",4,{"inputs":[{"name":"self"},{"name":"logmetadata"}],"output":{"name":"bool"}}],[11,"le","","",4,{"inputs":[{"name":"self"},{"name":"logmetadata"}],"output":{"name":"bool"}}],[11,"gt","","",4,{"inputs":[{"name":"self"},{"name":"logmetadata"}],"output":{"name":"bool"}}],[11,"ge","","",4,{"inputs":[{"name":"self"},{"name":"logmetadata"}],"output":{"name":"bool"}}],[11,"hash","","",4,null],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"level","","The verbosity level of the message.",4,{"inputs":[{"name":"self"}],"output":{"name":"loglevel"}}],[11,"target","","The name of the target of the directive.",4,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"loglocation"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"loglocation"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"self"},{"name":"loglocation"}],"output":{"name":"bool"}}],[11,"cmp","","",5,{"inputs":[{"name":"self"},{"name":"loglocation"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",5,{"inputs":[{"name":"self"},{"name":"loglocation"}],"output":{"name":"option"}}],[11,"lt","","",5,{"inputs":[{"name":"self"},{"name":"loglocation"}],"output":{"name":"bool"}}],[11,"le","","",5,{"inputs":[{"name":"self"},{"name":"loglocation"}],"output":{"name":"bool"}}],[11,"gt","","",5,{"inputs":[{"name":"self"},{"name":"loglocation"}],"output":{"name":"bool"}}],[11,"ge","","",5,{"inputs":[{"name":"self"},{"name":"loglocation"}],"output":{"name":"bool"}}],[11,"hash","","",5,null],[11,"module_path","","The module path of the message.",5,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"file","","The source file containing the message.",5,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"line","","The line containing the message.",5,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get","","Gets the current maximum log level filter.",6,{"inputs":[{"name":"self"}],"output":{"name":"loglevelfilter"}}],[11,"set","","Sets the maximum log level.",6,{"inputs":[{"name":"self"},{"name":"loglevelfilter"}],"output":null}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",7,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",8,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[14,"log","","The standard logging macro.",null,null],[14,"error","","Logs a message at the error level.",null,null],[14,"warn","","Logs a message at the warn level.",null,null],[14,"info","","Logs a message at the info level.",null,null],[14,"debug","","Logs a message at the debug level.",null,null],[14,"trace","","Logs a message at the trace level.",null,null],[14,"log_enabled","","Determines if a message logged at the specified level in that module will be logged.",null,null]],"paths":[[4,"LogLevel"],[4,"LogLevelFilter"],[8,"Log"],[3,"LogRecord"],[3,"LogMetadata"],[3,"LogLocation"],[3,"MaxLogLevelFilter"],[3,"SetLoggerError"],[3,"ShutdownLoggerError"]]};
searchIndex["memchr"] = {"doc":"This crate defines two functions, `memchr` and `memrchr`, which expose a safe interface to the corresponding functions in `libc`.","items":[[3,"Memchr","memchr","An iterator for memchr",null,null],[3,"Memchr2","","An iterator for Memchr2",null,null],[3,"Memchr3","","An iterator for Memchr3",null,null],[5,"memchr","","A safe interface to `memchr`.",null,null],[5,"memrchr","","A safe interface to `memrchr`.",null,null],[5,"memchr2","","Like `memchr`, but searches for two bytes instead of one.",null,null],[5,"memchr3","","Like `memchr`, but searches for three bytes instead of one.",null,null],[11,"new","","Creates a new iterator that yields all positions of needle in haystack.",0,null],[11,"next","","",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next_back","","",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"new","","Creates a new iterator that yields all positions of needle in haystack.",1,null],[11,"next","","",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"new","","Create a new Memchr2 that's initalized to zero with a haystack",2,null],[11,"next","","",2,{"inputs":[{"name":"self"}],"output":{"name":"option"}}]],"paths":[[3,"Memchr"],[3,"Memchr2"],[3,"Memchr3"]]};
searchIndex["num_traits"] = {"doc":"Numeric traits for generic mathematics","items":[[3,"ParseFloatError","num_traits","",null,null],[12,"kind","","",0,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",1,null],[13,"Invalid","","",1,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,{"inputs":[{"name":"t"},{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[0,"identities","","",null,null],[5,"zero","num_traits::identities","Returns the additive identity, `0`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"one","","Returns the multiplicative identity, `1`.",null,{"inputs":[],"output":{"name":"t"}}],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",2,{"inputs":[],"output":{"name":"self"}}],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",3,{"inputs":[],"output":{"name":"self"}}],[0,"sign","num_traits","",null,null],[5,"abs","num_traits::sign","Computes the absolute value.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"abs_sub","","The positive difference of two numbers.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"signum","","Returns the sign of the number.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can be negative).",null,null],[10,"abs","","Computes the absolute value.",4,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"abs_sub","","The positive difference of two numbers.",4,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"signum","","Returns the sign of the number.",4,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",4,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",4,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[0,"ops","num_traits","",null,null],[0,"saturating","num_traits::ops","",null,null],[8,"Saturating","num_traits::ops::saturating","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at the numeric bounds instead of overflowing.",5,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating at the numeric bounds instead of overflowing.",5,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[0,"checked","num_traits::ops","",null,null],[8,"CheckedAdd","num_traits::ops::checked","Performs addition that returns `None` instead of wrapping around on overflow.",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is returned.",6,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens, `None` is returned.",7,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or overflow.",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow or overflow happens, `None` is returned.",8,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of wrapping around on underflow and overflow.",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by zero. If any of that happens, `None` is returned.",9,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[0,"wrapping","num_traits::ops","",null,null],[8,"WrappingAdd","num_traits::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`, wrapping around at the boundary of the type.",10,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`, wrapping around at the boundary of the type.",11,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self * other`, wrapping around at the boundary of the type.",12,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[0,"bounds","num_traits","",null,null],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",13,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","returns the largest finite number this type can represent",13,{"inputs":[],"output":{"name":"self"}}],[0,"float","num_traits","",null,null],[8,"Float","num_traits::float","",null,null],[10,"nan","","Returns the `NaN` value.",14,{"inputs":[],"output":{"name":"self"}}],[10,"infinity","","Returns the infinite value.",14,{"inputs":[],"output":{"name":"self"}}],[10,"neg_infinity","","Returns the negative infinite value.",14,{"inputs":[],"output":{"name":"self"}}],[10,"neg_zero","","Returns `-0.0`.",14,{"inputs":[],"output":{"name":"self"}}],[10,"min_value","","Returns the smallest finite value that this type can represent.",14,{"inputs":[],"output":{"name":"self"}}],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",14,{"inputs":[],"output":{"name":"self"}}],[11,"epsilon","","Returns epsilon, a small positive value.",14,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","Returns the largest finite value that this type can represent.",14,{"inputs":[],"output":{"name":"self"}}],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and false otherwise.",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_normal","","Returns `true` if the number is neither zero, infinite, [subnormal][subnormal], or `NaN`.",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"classify","","Returns the floating point category of the number. If only one property is going to be tested, it is generally faster to use the specific predicate instead.",14,{"inputs":[{"name":"self"}],"output":{"name":"fpcategory"}}],[10,"floor","","Returns the largest integer less than or equal to a number.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from `0.0`.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"trunc","","Return the integer part of a number.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"fract","","Returns the fractional part of a number.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the number is `Float::nan()`.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"signum","","Returns a number that represents the sign of `self`.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`, `Float::infinity()`, and with newer versions of Rust `f64::NAN`.",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`, `Float::neg_infinity()`, and with newer versions of Rust `-f64::NAN`.",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding error. This produces a more accurate result with better performance than a separate multiplication operation followed by an add.",14,{"inputs":[{"name":"self"},{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"powi","","Raise a number to an integer power.",14,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"self"}}],[10,"powf","","Raise a number to a floating point power.",14,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"sqrt","","Take the square root of a number.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"exp","","Returns `e^(self)`, (the exponential function).",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"exp2","","Returns `2^(self)`.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"ln","","Returns the natural logarithm of the number.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",14,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"log2","","Returns the base 2 logarithm of the number.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"log10","","Returns the base 10 logarithm of the number.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"to_degrees","","Converts radians to degrees.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"to_radians","","Converts degrees to radians.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"max","","Returns the maximum of the two numbers.",14,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"min","","Returns the minimum of the two numbers.",14,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"abs_sub","","The positive difference of two numbers.",14,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"cbrt","","Take the cubic root of a number.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given legs of length `x` and `y`.",14,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"sin","","Computes the sine of a number (in radians).",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"cos","","Computes the cosine of a number (in radians).",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"tan","","Computes the tangent of a number (in radians).",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"asin","","Computes the arcsine of a number. Return value is in radians in the range [-pi/2, pi/2] or NaN if the number is outside the range [-1, 1].",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"acos","","Computes the arccosine of a number. Return value is in radians in the range [0, pi] or NaN if the number is outside the range [-1, 1].",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the range [-pi/2, pi/2];",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",14,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns `(sin(x), cos(x))`.",14,null],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the number is close to zero.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if the operations were performed separately.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"sinh","","Hyperbolic sine function.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"cosh","","Hyperbolic cosine function.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"tanh","","Hyperbolic tangent function.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"asinh","","Inverse hyperbolic sine function.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"acosh","","Inverse hyperbolic cosine function.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"atanh","","Inverse hyperbolic tangent function.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively. The original number can be recovered by `sign * mantissa * 2 ^ exponent`. The floating point encoding is documented in the [Reference][floating-point].",14,null],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",15,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_1_PI","","Return `1.0 / π`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_2_PI","","Return `2.0 / π`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_2","","Return `π / 2.0`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_3","","Return `π / 3.0`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_4","","Return `π / 4.0`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_6","","Return `π / 6.0`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_8","","Return `π / 8.0`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"LN_10","","Return `ln(10.0)`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"LN_2","","Return `ln(2.0)`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"LOG10_E","","Return `log10(e)`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"LOG2_E","","Return `log2(e)`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"PI","","Return Archimedes’ constant.",15,{"inputs":[],"output":{"name":"self"}}],[10,"SQRT_2","","Return `sqrt(2.0)`.",15,{"inputs":[],"output":{"name":"self"}}],[0,"cast","num_traits","",null,null],[5,"cast","num_traits::cast","Cast from one machine scalar to another.",null,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",16,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_i8","","Converts the value of `self` to an `i8`.",16,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_i16","","Converts the value of `self` to an `i16`.",16,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_i32","","Converts the value of `self` to an `i32`.",16,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"to_i64","","Converts the value of `self` to an `i64`.",16,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_usize","","Converts the value of `self` to a `usize`.",16,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_u8","","Converts the value of `self` to an `u8`.",16,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_u16","","Converts the value of `self` to an `u16`.",16,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_u32","","Converts the value of `self` to an `u32`.",16,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"to_u64","","Converts the value of `self` to an `u64`.",16,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_f32","","Converts the value of `self` to an `f32`.",16,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_f64","","Converts the value of `self` to an `f64`.",16,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the value cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into a primitive via the `ToPrimitive` trait.",18,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[0,"int","num_traits","",null,null],[8,"PrimInt","num_traits::int","",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",19,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",19,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation of `self`.",19,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation of `self`.",19,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping the truncated bits to the end of the resulting integer.",19,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping the truncated bits to the beginning of the resulting integer.",19,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",19,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount, `n`, copying the \"sign bit\" in the most significant bits even for unsigned types.",19,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",19,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount, `n`, filling zeros in the most significant bits.",19,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"swap_bytes","","Reverses the byte order of the integer.",19,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"from_be","","Convert an integer from big endian to the target's endianness.",19,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"from_le","","Convert an integer from little endian to the target's endianness.",19,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"to_be","","Convert `self` to big endian from the target's endianness.",19,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"to_le","","Convert `self` to little endian from the target's endianness.",19,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",19,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[0,"pow","num_traits","",null,null],[5,"pow","num_traits::pow","Raises a value to the power of exp, using exponentiation by squaring.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"t"}}],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an overflow occurred.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"option"}}],[8,"Num","num_traits","The base trait for numeric types, covering `0` and `1` values, comparisons, basic numeric operations, and string conversion.",null,null],[16,"FromStrRadixErr","","",20,null],[10,"from_str_radix","","Convert from a string and radix <= 36.",20,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[8,"NumOps","","The trait for types implementing basic numeric operations",null,null],[8,"NumRef","","The trait for `Num` types which also implement numeric operations taking the second operand by reference.",null,null],[8,"RefNum","","The trait for references which implement numeric operations, taking the second operand either by value or by reference.",null,null],[8,"NumAssignOps","","The trait for types implementing numeric assignment operators (like `+=`).",null,null],[8,"NumAssign","","The trait for `Num` types which also implement assignment operators.",null,null],[8,"NumAssignRef","","The trait for `NumAssign` types which also implement assignment operations taking the second operand by reference.",null,null],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"ParseFloatError"],[4,"FloatErrorKind"],[8,"Zero"],[8,"One"],[8,"Signed"],[8,"Saturating"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"Bounded"],[8,"Float"],[8,"FloatConst"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"PrimInt"],[8,"Num"]]};
searchIndex["regex"] = {"doc":"This crate provides a library for parsing, compiling, and executing regular expressions. Its syntax is similar to Perl-style regular expressions, but lacks a few features like look around and backreferences. In exchange, all searches execute in linear time with respect to the size of the regular expression and search text.","items":[[3,"RegexBuilder","regex","A configurable builder for a regular expression.",null,null],[3,"RegexSetBuilder","","A configurable builder for a set of regular expressions.",null,null],[3,"RegexSet","","Match multiple (possibly overlapping) regular expressions in a single scan.",null,null],[3,"SetMatches","","A set of matches returned by a regex set.",null,null],[3,"SetMatchesIntoIter","","An owned iterator over the set of matches from a regex set.",null,null],[3,"SetMatchesIter","","A borrowed iterator over the set of matches from a regex set.",null,null],[3,"Regex","","A compiled regular expression for matching Unicode strings.",null,null],[3,"Match","","Match represents a single match of a regex in a haystack.",null,null],[3,"Captures","","Captures represents a group of captured strings for a single match.",null,null],[3,"CaptureNames","","An iterator over the names of all possible captures.",null,null],[3,"Matches","","An iterator over all non-overlapping matches for a particular string.",null,null],[3,"CaptureMatches","","An iterator that yields all non-overlapping capture groups matching a particular regular expression.",null,null],[3,"SubCaptureMatches","","An iterator that yields all capturing matches in the order in which they appear in the regex.",null,null],[3,"NoExpand","","NoExpand indicates literal string replacement.",null,null],[12,"0","","",0,null],[3,"Split","","Yields all substrings delimited by a regular expression match.",null,null],[3,"SplitN","","Yields at most `N` substrings delimited by a regular expression match.",null,null],[4,"Error","","An error that occurred during parsing or compiling a regular expression.",null,null],[13,"Syntax","","A syntax error.",1,null],[13,"CompiledTooBig","","The compiled program exceeded the set size limit. The argument is the size limit imposed.",1,null],[5,"escape","","Escapes all regular expression meta characters in `text`.",null,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[0,"bytes","","Match regular expressions on arbitrary bytes.",null,null],[3,"RegexBuilder","regex::bytes","A configurable builder for a regular expression.",null,null],[3,"RegexSetBuilder","","A configurable builder for a set of regular expressions.",null,null],[3,"Match","","Match represents a single match of a regex in a haystack.",null,null],[3,"Regex","","A compiled regular expression for matching arbitrary bytes.",null,null],[3,"Matches","","An iterator over all non-overlapping matches for a particular string.",null,null],[3,"CaptureMatches","","An iterator that yields all non-overlapping capture groups matching a particular regular expression.",null,null],[3,"Split","","Yields all substrings delimited by a regular expression match.",null,null],[3,"SplitN","","Yields at most `N` substrings delimited by a regular expression match.",null,null],[3,"CaptureNames","","An iterator over the names of all possible captures.",null,null],[3,"Captures","","Captures represents a group of captured byte strings for a single match.",null,null],[3,"SubCaptureMatches","","An iterator that yields all capturing matches in the order in which they appear in the regex.",null,null],[3,"NoExpand","","NoExpand indicates literal byte string replacement.",null,null],[12,"0","","",2,null],[3,"RegexSet","","Match multiple (possibly overlapping) regular expressions in a single scan.",null,null],[3,"SetMatches","","A set of matches returned by a regex set.",null,null],[3,"SetMatchesIntoIter","","An owned iterator over the set of matches from a regex set.",null,null],[3,"SetMatchesIter","","A borrowed iterator over the set of matches from a regex set.",null,null],[8,"Replacer","","Replacer describes types that can be used to replace matches in a byte string.",null,null],[10,"replace_append","","Appends text to `dst` to replace the current match.",3,{"inputs":[{"name":"self"},{"name":"captures"},{"name":"vec"}],"output":null}],[11,"no_expansion","","Return a fixed unchanging replacement byte string.",3,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","regex","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",1,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",1,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"new","regex::bytes","Create a new regular expression builder with the given pattern.",4,{"inputs":[{"name":"str"}],"output":{"name":"regexbuilder"}}],[11,"build","","Consume the builder and compile the regular expression.",4,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",4,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexbuilder"}}],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",4,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexbuilder"}}],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in `.` matches anything when `s` is set and matches anything except for new line when it is not set (the default).",4,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexbuilder"}}],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",4,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexbuilder"}}],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",4,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexbuilder"}}],[11,"unicode","","Set the value for the Unicode (`u`) flag.",4,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexbuilder"}}],[11,"size_limit","","Set the approximate size limit of the compiled regular expression.",4,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"regexbuilder"}}],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",4,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"regexbuilder"}}],[11,"new","regex","Create a new regular expression builder with the given pattern.",5,{"inputs":[{"name":"str"}],"output":{"name":"regexbuilder"}}],[11,"build","","Consume the builder and compile the regular expression.",5,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",5,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexbuilder"}}],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",5,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexbuilder"}}],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in `.` matches anything when `s` is set and matches anything except for new line when it is not set (the default).",5,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexbuilder"}}],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",5,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexbuilder"}}],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",5,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexbuilder"}}],[11,"unicode","","Set the value for the Unicode (`u`) flag.",5,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexbuilder"}}],[11,"size_limit","","Set the approximate size limit of the compiled regular expression.",5,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"regexbuilder"}}],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",5,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"regexbuilder"}}],[11,"new","regex::bytes","Create a new regular expression builder with the given pattern.",6,{"inputs":[{"name":"i"}],"output":{"name":"regexsetbuilder"}}],[11,"build","","Consume the builder and compile the regular expressions into a set.",6,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",6,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexsetbuilder"}}],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",6,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexsetbuilder"}}],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in `.` matches anything when `s` is set and matches anything except for new line when it is not set (the default).",6,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexsetbuilder"}}],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",6,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexsetbuilder"}}],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",6,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexsetbuilder"}}],[11,"unicode","","Set the value for the Unicode (`u`) flag.",6,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexsetbuilder"}}],[11,"size_limit","","Set the approximate size limit of the compiled regular expression.",6,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"regexsetbuilder"}}],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",6,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"regexsetbuilder"}}],[11,"new","regex","Create a new regular expression builder with the given pattern.",7,{"inputs":[{"name":"i"}],"output":{"name":"regexsetbuilder"}}],[11,"build","","Consume the builder and compile the regular expressions into a set.",7,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",7,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexsetbuilder"}}],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",7,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexsetbuilder"}}],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in `.` matches anything when `s` is set and matches anything except for new line when it is not set (the default).",7,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexsetbuilder"}}],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",7,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexsetbuilder"}}],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",7,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexsetbuilder"}}],[11,"unicode","","Set the value for the Unicode (`u`) flag.",7,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexsetbuilder"}}],[11,"size_limit","","Set the approximate size limit of the compiled regular expression.",7,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"regexsetbuilder"}}],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",7,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"regexsetbuilder"}}],[11,"no_expansion","regex::bytes","Return a fixed unchanging replacement byte string.",3,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"match"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",8,{"inputs":[{"name":"self"},{"name":"match"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"self"},{"name":"match"}],"output":{"name":"bool"}}],[11,"start","","Returns the starting byte offset of the match in the haystack.",8,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"end","","Returns the ending byte offset of the match in the haystack.",8,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"as_bytes","","Returns the matched text.",8,null],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"regex"}}],[11,"fmt","","Shows the original regular expression.",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","Shows the original regular expression.",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","Attempts to parse a string into a regular expression",9,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"new","","Compiles a regular expression. Once compiled, it can be used repeatedly to search, split or replace text in a string.",9,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"is_match","","Returns true if and only if the regex matches the string given.",9,null],[11,"find","","Returns the start and end byte range of the leftmost-first match in `text`. If no match exists, then `None` is returned.",9,null],[11,"find_iter","","Returns an iterator for each successive non-overlapping match in `text`, returning the start and end byte indices with respect to `text`.",9,null],[11,"captures","","Returns the capture groups corresponding to the leftmost-first match in `text`. Capture group `0` always corresponds to the entire match. If no match is found, then `None` is returned.",9,null],[11,"captures_iter","","Returns an iterator over all the non-overlapping capture groups matched in `text`. This is operationally the same as `find_iter`, except it yields information about capturing group matches.",9,null],[11,"split","","Returns an iterator of substrings of `text` delimited by a match of the regular expression. Namely, each element of the iterator corresponds to text that isn't matched by the regular expression.",9,null],[11,"splitn","","Returns an iterator of at most `limit` substrings of `text` delimited by a match of the regular expression. (A `limit` of `0` will return no substrings.) Namely, each element of the iterator corresponds to text that isn't matched by the regular expression. The remainder of the string that is not split will be the last element in the iterator.",9,null],[11,"replace","","Replaces the leftmost-first match with the replacement provided. The replacement can be a regular byte string (where `$N` and `$name` are expanded to match capture groups) or a function that takes the matches' `Captures` and returns the replaced byte string.",9,null],[11,"replace_all","","Replaces all non-overlapping matches in `text` with the replacement provided. This is the same as calling `replacen` with `limit` set to `0`.",9,null],[11,"replacen","","Replaces at most `limit` non-overlapping matches in `text` with the replacement provided. If `limit` is 0, then all non-overlapping matches are replaced.",9,null],[11,"shortest_match","","Returns the end location of a match in the text given.",9,null],[11,"as_str","","Returns the original string of this regex.",9,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"capture_names","","Returns an iterator over the capture names.",9,{"inputs":[{"name":"self"}],"output":{"name":"capturenames"}}],[11,"captures_len","","Returns the number of captures.",9,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"next","","",10,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",11,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",12,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",14,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",14,null],[11,"get","","Returns the match associated with the capture group at index `i`. If `i` does not correspond to a capture group, or if the capture group did not participate in the match, then `None` is returned.",15,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"option"}}],[11,"name","","Returns the match for the capture group named `name`. If `name` isn't a valid capture group or didn't match anything, then `None` is returned.",15,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[11,"iter","","An iterator that yields all capturing matches in the order in which they appear in the regex. If a particular capture group didn't participate in the match, then `None` is yielded for that capture.",15,{"inputs":[{"name":"self"}],"output":{"name":"subcapturematches"}}],[11,"expand","","Expands all instances of `$name` in `text` to the corresponding capture group `name`, and writes them to the `dst` buffer given.",15,null],[11,"len","","Returns the number of captured groups.",15,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"index","","",15,null],[11,"index","","",15,null],[11,"next","","",16,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"replace_append","","",2,{"inputs":[{"name":"self"},{"name":"captures"},{"name":"vec"}],"output":null}],[11,"no_expansion","","",2,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","regex","",17,{"inputs":[{"name":"self"}],"output":{"name":"regexset"}}],[11,"new","","Create a new regex set with the given regular expressions.",17,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[11,"is_match","","Returns true if and only if one of the regexes in this set matches the text given.",17,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[11,"matches","","Returns the set of regular expressions that match in the given text.",17,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"setmatches"}}],[11,"len","","Returns the total number of regular expressions in this set.",17,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"setmatches"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"matched_any","","Whether this set contains any matches.",18,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"matched","","Whether the regex at the given index matched.",18,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"len","","The total number of regexes in the set that created these matches.",18,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"iter","","Returns an iterator over indexes in the regex that matched.",18,{"inputs":[{"name":"self"}],"output":{"name":"setmatchesiter"}}],[11,"into_iter","","",18,null],[11,"next","","",19,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next_back","","",19,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"setmatchesiter"}}],[11,"next","","",20,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next_back","","",20,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","regex::bytes","",21,{"inputs":[{"name":"self"}],"output":{"name":"regexset"}}],[11,"new","","Create a new regex set with the given regular expressions.",21,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[11,"is_match","","Returns true if and only if one of the regexes in this set matches the text given.",21,null],[11,"matches","","Returns the set of regular expressions that match in the given text.",21,null],[11,"len","","Returns the total number of regular expressions in this set.",21,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"clone","","",22,{"inputs":[{"name":"self"}],"output":{"name":"setmatches"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"matched_any","","Whether this set contains any matches.",22,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"matched","","Whether the regex at the given index matched.",22,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"len","","The total number of regexes in the set that created these matches.",22,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"iter","","Returns an iterator over indexes in the regex that matched.",22,{"inputs":[{"name":"self"}],"output":{"name":"setmatchesiter"}}],[11,"into_iter","","",22,null],[11,"next","","",23,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next_back","","",23,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"setmatchesiter"}}],[11,"next","","",24,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next_back","","",24,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","regex","",25,{"inputs":[{"name":"self"}],"output":{"name":"match"}}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",25,{"inputs":[{"name":"self"},{"name":"match"}],"output":{"name":"bool"}}],[11,"ne","","",25,{"inputs":[{"name":"self"},{"name":"match"}],"output":{"name":"bool"}}],[11,"start","","Returns the starting byte offset of the match in the haystack.",25,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"end","","Returns the ending byte offset of the match in the haystack.",25,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"as_str","","Returns the matched text.",25,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"regex"}}],[11,"fmt","","Shows the original regular expression.",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","Shows the original regular expression.",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","Attempts to parse a string into a regular expression",26,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"new","","Compiles a regular expression. Once compiled, it can be used repeatedly to search, split or replace text in a string.",26,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"is_match","","Returns true if and only if the regex matches the string given.",26,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[11,"find","","Returns the start and end byte range of the leftmost-first match in `text`. If no match exists, then `None` is returned.",26,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[11,"find_iter","","Returns an iterator for each successive non-overlapping match in `text`, returning the start and end byte indices with respect to `text`.",26,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"matches"}}],[11,"captures","","Returns the capture groups corresponding to the leftmost-first match in `text`. Capture group `0` always corresponds to the entire match. If no match is found, then `None` is returned.",26,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[11,"captures_iter","","Returns an iterator over all the non-overlapping capture groups matched in `text`. This is operationally the same as `find_iter`, except it yields information about capturing group matches.",26,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"capturematches"}}],[11,"split","","Returns an iterator of substrings of `text` delimited by a match of the regular expression. Namely, each element of the iterator corresponds to text that isn't matched by the regular expression.",26,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"split"}}],[11,"splitn","","Returns an iterator of at most `limit` substrings of `text` delimited by a match of the regular expression. (A `limit` of `0` will return no substrings.) Namely, each element of the iterator corresponds to text that isn't matched by the regular expression. The remainder of the string that is not split will be the last element in the iterator.",26,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"}],"output":{"name":"splitn"}}],[11,"replace","","Replaces the leftmost-first match with the replacement provided. The replacement can be a regular string (where `$N` and `$name` are expanded to match capture groups) or a function that takes the matches' `Captures` and returns the replaced string.",26,{"inputs":[{"name":"self"},{"name":"str"},{"name":"r"}],"output":{"name":"cow"}}],[11,"replace_all","","Replaces all non-overlapping matches in `text` with the replacement provided. This is the same as calling `replacen` with `limit` set to `0`.",26,{"inputs":[{"name":"self"},{"name":"str"},{"name":"r"}],"output":{"name":"cow"}}],[11,"replacen","","Replaces at most `limit` non-overlapping matches in `text` with the replacement provided. If `limit` is 0, then all non-overlapping matches are replaced.",26,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"r"}],"output":{"name":"cow"}}],[11,"shortest_match","","Returns the end location of a match in the text given.",26,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[11,"as_str","","Returns the original string of this regex.",26,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"capture_names","","Returns an iterator over the capture names.",26,{"inputs":[{"name":"self"}],"output":{"name":"capturenames"}}],[11,"captures_len","","Returns the number of captures.",26,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"next","","",27,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",27,null],[11,"next","","",28,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",29,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get","","Returns the match associated with the capture group at index `i`. If `i` does not correspond to a capture group, or if the capture group did not participate in the match, then `None` is returned.",30,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"option"}}],[11,"name","","Returns the match for the capture group named `name`. If `name` isn't a valid capture group or didn't match anything, then `None` is returned.",30,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[11,"iter","","An iterator that yields all capturing matches in the order in which they appear in the regex. If a particular capture group didn't participate in the match, then `None` is yielded for that capture.",30,{"inputs":[{"name":"self"}],"output":{"name":"subcapturematches"}}],[11,"expand","","Expands all instances of `$name` in `text` to the corresponding capture group `name`, and writes them to the `dst` buffer given.",30,{"inputs":[{"name":"self"},{"name":"str"},{"name":"string"}],"output":null}],[11,"len","","Returns the number of captured groups.",30,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"index","","",30,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"str"}}],[11,"index","","",30,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"str"}}],[11,"next","","",31,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",32,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",33,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"replace_append","","",0,{"inputs":[{"name":"self"},{"name":"captures"},{"name":"string"}],"output":null}],[11,"no_expansion","","",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[8,"Replacer","","Replacer describes types that can be used to replace matches in a string.",null,null],[10,"replace_append","","Appends text to `dst` to replace the current match.",34,{"inputs":[{"name":"self"},{"name":"captures"},{"name":"string"}],"output":null}],[11,"no_expansion","","Return a fixed unchanging replacement string.",34,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"no_expansion","","Return a fixed unchanging replacement string.",34,{"inputs":[{"name":"self"}],"output":{"name":"option"}}]],"paths":[[3,"NoExpand"],[4,"Error"],[3,"NoExpand"],[8,"Replacer"],[3,"RegexBuilder"],[3,"RegexBuilder"],[3,"RegexSetBuilder"],[3,"RegexSetBuilder"],[3,"Match"],[3,"Regex"],[3,"Matches"],[3,"CaptureMatches"],[3,"Split"],[3,"SplitN"],[3,"CaptureNames"],[3,"Captures"],[3,"SubCaptureMatches"],[3,"RegexSet"],[3,"SetMatches"],[3,"SetMatchesIntoIter"],[3,"SetMatchesIter"],[3,"RegexSet"],[3,"SetMatches"],[3,"SetMatchesIntoIter"],[3,"SetMatchesIter"],[3,"Match"],[3,"Regex"],[3,"CaptureNames"],[3,"Split"],[3,"SplitN"],[3,"Captures"],[3,"SubCaptureMatches"],[3,"CaptureMatches"],[3,"Matches"],[8,"Replacer"]]};
searchIndex["regex_syntax"] = {"doc":"This crate provides a regular expression parser and an abstract syntax for regular expressions. The abstract syntax is defined by the `Expr` type. The concrete syntax is enumerated in the `regex` crate documentation.","items":[[3,"Literals","regex_syntax","A set of literal byte strings extracted from a regular expression.",null,null],[3,"Lit","","A single member of a set of literals extracted from a regular expression.",null,null],[3,"CharClass","","A character class.",null,null],[3,"ClassRange","","A single inclusive range in a character class.",null,null],[12,"start","","The start character of the range.",0,null],[12,"end","","The end character of the range.",0,null],[3,"ByteClass","","A byte class for byte ranges only.",null,null],[3,"ByteRange","","A single inclusive range in a byte class.",null,null],[12,"start","","The start byte of the range.",1,null],[12,"end","","The end byte of the range.",1,null],[3,"ExprBuilder","","A builder for configuring regular expression parsing.",null,null],[3,"Error","","A parse error.",null,null],[4,"Expr","","A regular expression abstract syntax tree.",null,null],[13,"Empty","","An empty regex (which never matches any text).",2,null],[13,"Literal","","A sequence of one or more literal characters to be matched.",2,null],[12,"chars","regex_syntax::Expr","The characters.",2,null],[12,"casei","","Whether to match case insensitively.",2,null],[13,"LiteralBytes","regex_syntax","A sequence of one or more literal bytes to be matched.",2,null],[12,"bytes","regex_syntax::Expr","The bytes.",2,null],[12,"casei","","Whether to match case insensitively.",2,null],[13,"AnyChar","regex_syntax","Match any character.",2,null],[13,"AnyCharNoNL","","Match any character, excluding new line (`0xA`).",2,null],[13,"AnyByte","","Match any byte.",2,null],[13,"AnyByteNoNL","","Match any byte, excluding new line (`0xA`).",2,null],[13,"Class","","A character class.",2,null],[13,"ClassBytes","","A character class with byte ranges only.",2,null],[13,"StartLine","","Match the start of a line or beginning of input.",2,null],[13,"EndLine","","Match the end of a line or end of input.",2,null],[13,"StartText","","Match the beginning of input.",2,null],[13,"EndText","","Match the end of input.",2,null],[13,"WordBoundary","","Match a word boundary (word character on one side and a non-word character on the other).",2,null],[13,"NotWordBoundary","","Match a position that is not a word boundary (word or non-word characters on both sides).",2,null],[13,"WordBoundaryAscii","","Match an ASCII word boundary.",2,null],[13,"NotWordBoundaryAscii","","Match a position that is not an ASCII word boundary.",2,null],[13,"Group","","A group, possibly non-capturing.",2,null],[12,"e","regex_syntax::Expr","The expression inside the group.",2,null],[12,"i","","The capture index (starting at `1`) only for capturing groups.",2,null],[12,"name","","The capture name, only for capturing named groups.",2,null],[13,"Repeat","regex_syntax","A repeat operator (`?`, `*`, `+` or `{m,n}`).",2,null],[12,"e","regex_syntax::Expr","The expression to be repeated. Limited to literals, `.`, classes or grouped expressions.",2,null],[12,"r","","The type of repeat operator used.",2,null],[12,"greedy","","Whether the repeat is greedy (match the most) or not (match the least).",2,null],[13,"Concat","regex_syntax","A concatenation of expressions. Must be matched one after the other.",2,null],[13,"Alternate","","An alternation of expressions. Only one must match.",2,null],[4,"Repeater","","The type of a repeat operator expression.",null,null],[13,"ZeroOrOne","","Match zero or one (`?`).",3,null],[13,"ZeroOrMore","","Match zero or more (`*`).",3,null],[13,"OneOrMore","","Match one or more (`+`).",3,null],[13,"Range","","Match for at least `min` and at most `max` (`{m,n}`).",3,null],[12,"min","regex_syntax::Repeater","Lower bound on the number of matches.",3,null],[12,"max","","Optional upper bound on the number of matches.",3,null],[4,"ErrorKind","regex_syntax","The specific type of parse error that can occur.",null,null],[13,"DoubleFlagNegation","","A negation symbol is used twice in flag settings. e.g., `(?-i-s)`.",4,null],[13,"DuplicateCaptureName","","The same capture name was used more than once. e.g., `(?P<a>.)(?P<a>.)`.",4,null],[13,"EmptyAlternate","","An alternate is empty. e.g., `(|a)`.",4,null],[13,"EmptyCaptureName","","A capture group name is empty. e.g., `(?P<>a)`.",4,null],[13,"EmptyFlagNegation","","A negation symbol was not proceded by any flags. e.g., `(?i-)`.",4,null],[13,"EmptyGroup","","A group is empty. e.g., `()`.",4,null],[13,"InvalidBase10","","An invalid number was used in a counted repetition. e.g., `a{b}`.",4,null],[13,"InvalidBase16","","An invalid hexadecimal number was used in an escape sequence. e.g., `\\xAG`.",4,null],[13,"InvalidCaptureName","","An invalid capture name was used. e.g., `(?P<0a>b)`.",4,null],[13,"InvalidClassRange","","An invalid class range was givien. Specifically, when the start of the range is greater than the end. e.g., `[z-a]`.",4,null],[12,"start","regex_syntax::ErrorKind","The first character specified in the range.",4,null],[12,"end","","The second character specified in the range.",4,null],[13,"InvalidClassEscape","regex_syntax","An escape sequence was used in a character class where it is not allowed. e.g., `[a-\\pN]` or `[\\A]`.",4,null],[13,"InvalidRepeatRange","","An invalid counted repetition min/max was given. e.g., `a{2,1}`.",4,null],[12,"min","regex_syntax::ErrorKind","The first number specified in the repetition.",4,null],[12,"max","","The second number specified in the repetition.",4,null],[13,"InvalidScalarValue","regex_syntax","An invalid Unicode scalar value was used in a long hexadecimal sequence. e.g., `\\x{D800}`.",4,null],[13,"MissingBase10","","An empty counted repetition operator. e.g., `a{}`.",4,null],[13,"RepeaterExpectsExpr","","A repetition operator was not applied to an expression. e.g., `*`.",4,null],[13,"RepeaterUnexpectedExpr","","A repetition operator was applied to an expression that cannot be repeated. e.g., `a+*` or `a|*`.",4,null],[13,"UnclosedCaptureName","","A capture group name that is never closed. e.g., `(?P<a`.",4,null],[13,"UnclosedHex","","An unclosed hexadecimal literal. e.g., `\\x{a`.",4,null],[13,"UnclosedParen","","An unclosed parenthesis. e.g., `(a`.",4,null],[13,"UnclosedRepeat","","An unclosed counted repetition operator. e.g., `a{2`.",4,null],[13,"UnclosedUnicodeName","","An unclosed named Unicode class. e.g., `\\p{Yi`.",4,null],[13,"UnexpectedClassEof","","Saw end of regex before class was closed. e.g., `[a`.",4,null],[13,"UnexpectedEscapeEof","","Saw end of regex before escape sequence was closed. e.g., `\\`.",4,null],[13,"UnexpectedFlagEof","","Saw end of regex before flags were closed. e.g., `(?i`.",4,null],[13,"UnexpectedTwoDigitHexEof","","Saw end of regex before two hexadecimal digits were seen. e.g., `\\xA`.",4,null],[13,"UnopenedParen","","Unopened parenthesis. e.g., `)`.",4,null],[13,"UnrecognizedEscape","","Unrecognized escape sequence. e.g., `\\q`.",4,null],[13,"UnrecognizedFlag","","Unrecognized flag. e.g., `(?a)`.",4,null],[13,"UnrecognizedUnicodeClass","","Unrecognized named Unicode class. e.g., `\\p{Foo}`.",4,null],[13,"StackExhausted","","Indicates that the regex uses too much nesting.",4,null],[13,"FlagNotAllowed","","A disallowed flag was found (e.g., `u`).",4,null],[13,"UnicodeNotAllowed","","A Unicode class was used when the Unicode (`u`) flag was disabled.",4,null],[13,"InvalidUtf8","","InvalidUtf8 indicates that the expression may match non-UTF-8 bytes. This never returned if the parser is permitted to allow expressions that match arbitrary bytes.",4,null],[13,"EmptyClass","","A character class was constructed such that it is empty. e.g., `[^\\d\\D]`.",4,null],[13,"UnsupportedClassChar","","Indicates that unsupported notation was used in a character class.",4,null],[5,"escape","","Escapes all regular expression meta characters in `text`.",null,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"literals"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"literals"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"self"},{"name":"literals"}],"output":{"name":"bool"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"lit"}}],[11,"cmp","","",6,{"inputs":[{"name":"self"},{"name":"lit"}],"output":{"name":"ordering"}}],[11,"empty","","Returns a new empty set of literals using default limits.",5,{"inputs":[],"output":{"name":"literals"}}],[11,"limit_size","","Get the approximate size limit (in bytes) of this set.",5,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"set_limit_size","","Set the approximate size limit (in bytes) of this set.",5,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"literals"}}],[11,"limit_class","","Get the character class size limit for this set.",5,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"set_limit_class","","Limits the size of character(or byte) classes considered.",5,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"literals"}}],[11,"literals","","Returns the set of literals as a slice. Its order is unspecified.",5,null],[11,"min_len","","Returns the length of the smallest literal.",5,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"all_complete","","Returns true if all members in this set are complete.",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"any_complete","","Returns true if any member in this set is complete.",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"contains_empty","","Returns true if this set contains an empty literal.",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_empty","","Returns true if this set is empty or if all of its members is empty.",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"to_empty","","Returns a new empty set of literals using this set's limits.",5,{"inputs":[{"name":"self"}],"output":{"name":"literals"}}],[11,"longest_common_prefix","","Returns the longest common prefix of all members in this set.",5,null],[11,"longest_common_suffix","","Returns the longest common suffix of all members in this set.",5,null],[11,"trim_suffix","","Returns a new set of literals with the given number of bytes trimmed from the suffix of each literal.",5,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"option"}}],[11,"unambiguous_prefixes","","Returns a new set of prefixes of this set of literals that are guaranteed to be unambiguous.",5,{"inputs":[{"name":"self"}],"output":{"name":"literals"}}],[11,"unambiguous_suffixes","","Returns a new set of suffixes of this set of literals that are guaranteed to be unambiguous.",5,{"inputs":[{"name":"self"}],"output":{"name":"literals"}}],[11,"union_prefixes","","Unions the prefixes from the given expression to this set.",5,{"inputs":[{"name":"self"},{"name":"expr"}],"output":{"name":"bool"}}],[11,"union_suffixes","","Unions the suffixes from the given expression to this set.",5,{"inputs":[{"name":"self"},{"name":"expr"}],"output":{"name":"bool"}}],[11,"union","","Unions this set with another set.",5,{"inputs":[{"name":"self"},{"name":"literals"}],"output":{"name":"bool"}}],[11,"cross_product","","Extends this set with another set.",5,{"inputs":[{"name":"self"},{"name":"literals"}],"output":{"name":"bool"}}],[11,"cross_add","","Extends each literal in this set with the bytes given.",5,null],[11,"add","","Adds the given literal to this set.",5,{"inputs":[{"name":"self"},{"name":"lit"}],"output":{"name":"bool"}}],[11,"add_char_class","","Extends each literal in this set with the character class given.",5,{"inputs":[{"name":"self"},{"name":"charclass"}],"output":{"name":"bool"}}],[11,"add_byte_class","","Extends each literal in this set with the byte class given.",5,{"inputs":[{"name":"self"},{"name":"byteclass"}],"output":{"name":"bool"}}],[11,"cut","","Cuts every member of this set. When a member is cut, it can never be extended.",5,{"inputs":[{"name":"self"}],"output":null}],[11,"reverse","","Reverses all members in place.",5,{"inputs":[{"name":"self"}],"output":null}],[11,"clear","","Clears this set of all members.",5,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Returns a new complete literal with the bytes given.",6,{"inputs":[{"name":"vec"}],"output":{"name":"lit"}}],[11,"empty","","Returns a new complete empty literal.",6,{"inputs":[],"output":{"name":"lit"}}],[11,"is_cut","","Returns true if this literal was \"cut.\"",6,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"cut","","Cuts this literal.",6,{"inputs":[{"name":"self"}],"output":null}],[11,"eq","","",6,{"inputs":[{"name":"self"},{"name":"lit"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",6,{"inputs":[{"name":"self"},{"name":"lit"}],"output":{"name":"option"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",6,null],[11,"deref","","",6,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"deref_mut","","",6,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[6,"Result","","An alias for computations that can return a `Error`.",null,null],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"expr"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"expr"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"expr"}],"output":{"name":"bool"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"repeater"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"repeater"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"self"},{"name":"repeater"}],"output":{"name":"bool"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"charclass"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",7,{"inputs":[{"name":"self"},{"name":"charclass"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"self"},{"name":"charclass"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"classrange"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"classrange"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"classrange"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"classrange"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"self"},{"name":"classrange"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"self"},{"name":"classrange"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"self"},{"name":"classrange"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"self"},{"name":"classrange"}],"output":{"name":"bool"}}],[11,"cmp","","",0,{"inputs":[{"name":"self"},{"name":"classrange"}],"output":{"name":"ordering"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"byteclass"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",8,{"inputs":[{"name":"self"},{"name":"byteclass"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"self"},{"name":"byteclass"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"byterange"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"byterange"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"byterange"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"byterange"}],"output":{"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"self"},{"name":"byterange"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"self"},{"name":"byterange"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"self"},{"name":"byterange"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"self"},{"name":"byterange"}],"output":{"name":"bool"}}],[11,"cmp","","",1,{"inputs":[{"name":"self"},{"name":"byterange"}],"output":{"name":"ordering"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"exprbuilder"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new builder for configuring expression parsing.",9,{"inputs":[],"output":{"name":"exprbuilder"}}],[11,"case_insensitive","","Set the default value for the case insensitive (`i`) flag.",9,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"exprbuilder"}}],[11,"multi_line","","Set the default value for the multi-line matching (`m`) flag.",9,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"exprbuilder"}}],[11,"dot_matches_new_line","","Set the default value for the any character (`s`) flag.",9,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"exprbuilder"}}],[11,"swap_greed","","Set the default value for the greedy swap (`U`) flag.",9,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"exprbuilder"}}],[11,"ignore_whitespace","","Set the default value for the ignore whitespace (`x`) flag.",9,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"exprbuilder"}}],[11,"unicode","","Set the default value for the Unicode (`u`) flag.",9,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"exprbuilder"}}],[11,"allow_bytes","","Whether the parser allows matching arbitrary bytes or not.",9,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"exprbuilder"}}],[11,"nest_limit","","Set the nesting limit for regular expression parsing.",9,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"exprbuilder"}}],[11,"parse","","Parse a string as a regular expression using the current configuraiton.",9,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[11,"parse","","Parses a string in a regular expression syntax tree.",2,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"prefixes","","Returns a set of literal prefixes extracted from this expression.",2,{"inputs":[{"name":"self"}],"output":{"name":"literals"}}],[11,"suffixes","","Returns a set of literal suffixes extracted from this expression.",2,{"inputs":[{"name":"self"}],"output":{"name":"literals"}}],[11,"is_anchored_start","","Returns true if and only if the expression is required to match from the beginning of text.",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"has_anchored_start","","Returns true if and only if the expression has at least one matchable sub-expression that must match the beginning of text.",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_anchored_end","","Returns true if and only if the expression is required to match at the end of the text.",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"has_anchored_end","","Returns true if and only if the expression has at least one matchable sub-expression that must match the beginning of text.",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"has_bytes","","Returns true if and only if the expression contains sub-expressions that can match arbitrary bytes.",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"deref","","",7,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"into_iter","","",7,{"inputs":[{"name":"self"}],"output":{"name":"intoiter"}}],[11,"new","","Create a new class from an existing set of ranges.",7,{"inputs":[{"name":"vec"}],"output":{"name":"charclass"}}],[11,"matches","","Returns true if `c` is matched by this character class.",7,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"bool"}}],[11,"remove","","Removes the given character from the class if it exists.",7,{"inputs":[{"name":"self"},{"name":"char"}],"output":null}],[11,"negate","","Negates the character class.",7,{"inputs":[{"name":"self"}],"output":{"name":"charclass"}}],[11,"case_fold","","Apply case folding to this character class.",7,{"inputs":[{"name":"self"}],"output":{"name":"charclass"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"option"}}],[11,"new","","Create a new class from an existing set of ranges.",8,{"inputs":[{"name":"vec"}],"output":{"name":"byteclass"}}],[11,"matches","","Returns true if `b` is matched by this byte class.",8,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"bool"}}],[11,"remove","","Removes the given byte from the class if it exists.",8,{"inputs":[{"name":"self"},{"name":"u8"}],"output":null}],[11,"negate","","Negates the byte class.",8,{"inputs":[{"name":"self"}],"output":{"name":"byteclass"}}],[11,"case_fold","","Apply case folding to this byte class.",8,{"inputs":[{"name":"self"}],"output":{"name":"byteclass"}}],[11,"deref","","",8,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"into_iter","","",8,{"inputs":[{"name":"self"}],"output":{"name":"intoiter"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"option"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",10,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"errorkind"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"self"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"position","","Returns an approximate character offset at which the error occurred.",10,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"kind","","Returns the type of the regex parse error.",10,{"inputs":[{"name":"self"}],"output":{"name":"errorkind"}}],[11,"description","","",10,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"ClassRange"],[3,"ByteRange"],[4,"Expr"],[4,"Repeater"],[4,"ErrorKind"],[3,"Literals"],[3,"Lit"],[3,"CharClass"],[3,"ByteClass"],[3,"ExprBuilder"],[3,"Error"]]};
searchIndex["serde"] = {"doc":"Serde","items":[[0,"ser","serde","Generic data structure serialization framework.",null,null],[3,"Impossible","serde::ser","Helper type for implementing a `Serializer` that does not support serializing one of the compound types.",null,null],[11,"serialize_element","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"end","","",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"serialize_element","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"end","","",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"serialize_field","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"end","","",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"serialize_field","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"end","","",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"serialize_key","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"serialize_value","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"end","","",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"serialize_field","","",0,{"inputs":[{"name":"self"},{"name":"str"},{"name":"t"}],"output":{"name":"result"}}],[11,"end","","",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"serialize_field","","",0,{"inputs":[{"name":"self"},{"name":"str"},{"name":"t"}],"output":{"name":"result"}}],[11,"end","","",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[8,"Error","","Trait used by `Serialize` implementations to generically construct errors belonging to the `Serializer` against which they are currently running.",null,null],[10,"custom","","Used when a [`Serialize`] implementation encounters any error while serializing a type.",1,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[8,"Serialize","","A data structure that can be serialized into any data format supported by Serde.",null,null],[10,"serialize","","Serialize this value into the given Serde serializer.",2,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[8,"Serializer","","A data format that can serialize any data structure supported by Serde.",null,null],[16,"Ok","","The output type produced by this `Serializer` during successful serialization. Most serializers that produce text or binary output should set `Ok = ()` and serialize into an [`io::Write`] or buffer contained within the `Serializer` instance. Serializers that build in-memory data structures may be simplified by using `Ok` to propagate the data structure around.",3,null],[16,"Error","","The error type when some error occurs during serialization.",3,null],[16,"SerializeSeq","","Type returned from [`serialize_seq`] for serializing the content of the sequence.",3,null],[16,"SerializeTuple","","Type returned from [`serialize_tuple`] for serializing the content of the tuple.",3,null],[16,"SerializeTupleStruct","","Type returned from [`serialize_tuple_struct`] for serializing the content of the tuple struct.",3,null],[16,"SerializeTupleVariant","","Type returned from [`serialize_tuple_variant`] for serializing the content of the tuple variant.",3,null],[16,"SerializeMap","","Type returned from [`serialize_map`] for serializing the content of the map.",3,null],[16,"SerializeStruct","","Type returned from [`serialize_struct`] for serializing the content of the struct.",3,null],[16,"SerializeStructVariant","","Type returned from [`serialize_struct_variant`] for serializing the content of the struct variant.",3,null],[10,"serialize_bool","","Serialize a `bool` value.",3,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[10,"serialize_i8","","Serialize an `i8` value.",3,{"inputs":[{"name":"self"},{"name":"i8"}],"output":{"name":"result"}}],[10,"serialize_i16","","Serialize an `i16` value.",3,{"inputs":[{"name":"self"},{"name":"i16"}],"output":{"name":"result"}}],[10,"serialize_i32","","Serialize an `i32` value.",3,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"result"}}],[10,"serialize_i64","","Serialize an `i64` value.",3,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"result"}}],[10,"serialize_u8","","Serialize a `u8` value.",3,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"result"}}],[10,"serialize_u16","","Serialize a `u16` value.",3,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"result"}}],[10,"serialize_u32","","Serialize a `u32` value.",3,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[10,"serialize_u64","","Serialize a `u64` value.",3,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"result"}}],[10,"serialize_f32","","Serialize an `f32` value.",3,{"inputs":[{"name":"self"},{"name":"f32"}],"output":{"name":"result"}}],[10,"serialize_f64","","Serialize an `f64` value.",3,{"inputs":[{"name":"self"},{"name":"f64"}],"output":{"name":"result"}}],[10,"serialize_char","","Serialize a character.",3,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"result"}}],[10,"serialize_str","","Serialize a `&str`.",3,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",3,null],[10,"serialize_none","","Serialize a [`None`] value.",3,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"serialize_some","","Serialize a [`Some(T)`] value.",3,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[10,"serialize_unit","","Serialize a `()` value.",3,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or `PhantomData<T>`.",3,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",3,{"inputs":[{"name":"self"},{"name":"str"},{"name":"u32"},{"name":"str"}],"output":{"name":"result"}}],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",3,{"inputs":[{"name":"self"},{"name":"str"},{"name":"t"}],"output":{"name":"result"}}],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8) }`.",3,{"inputs":[{"name":"self"},{"name":"str"},{"name":"u32"},{"name":"str"},{"name":"t"}],"output":{"name":"result"}}],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call must be followed by zero or more calls to `serialize_element`, then a call to `end`.",3,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"result"}}],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose length will be known at deserialization time without looking at the serialized data. This call must be followed by zero or more calls to `serialize_element`, then a call to `end`.",3,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"result"}}],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8, u8)`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",3,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"}],"output":{"name":"result"}}],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E { T(u8, u8) }`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",3,{"inputs":[{"name":"self"},{"name":"str"},{"name":"u32"},{"name":"str"},{"name":"usize"}],"output":{"name":"result"}}],[10,"serialize_map","","Begin to serialize a map. This call must be followed by zero or more calls to `serialize_key` and `serialize_value`, then a call to `end`.",3,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"result"}}],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g: u8, b: u8 }`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",3,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"}],"output":{"name":"result"}}],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E { S { r: u8, g: u8, b: u8 } }`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",3,{"inputs":[{"name":"self"},{"name":"str"},{"name":"u32"},{"name":"str"},{"name":"usize"}],"output":{"name":"result"}}],[11,"collect_seq","","Collect an iterator as a sequence.",3,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"result"}}],[11,"collect_map","","Collect an iterator as a map.",3,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"result"}}],[11,"collect_str","","Serialize a string produced by an implementation of `Display`.",3,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[8,"SerializeSeq","","Returned from `Serializer::serialize_seq`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",4,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",4,null],[10,"serialize_element","","Serialize a sequence element.",4,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[10,"end","","Finish serializing a sequence.",4,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[8,"SerializeTuple","","Returned from `Serializer::serialize_tuple`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",5,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",5,null],[10,"serialize_element","","Serialize a tuple element.",5,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[10,"end","","Finish serializing a tuple.",5,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[8,"SerializeTupleStruct","","Returned from `Serializer::serialize_tuple_struct`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",6,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",6,null],[10,"serialize_field","","Serialize a tuple struct field.",6,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[10,"end","","Finish serializing a tuple struct.",6,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[8,"SerializeTupleVariant","","Returned from `Serializer::serialize_tuple_variant`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",7,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",7,null],[10,"serialize_field","","Serialize a tuple variant field.",7,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[10,"end","","Finish serializing a tuple variant.",7,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[8,"SerializeMap","","Returned from `Serializer::serialize_map`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",8,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",8,null],[10,"serialize_key","","Serialize a map key.",8,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[10,"serialize_value","","Serialize a map value.",8,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"serialize_entry","","Serialize a map entry consisting of a key and a value.",8,{"inputs":[{"name":"self"},{"name":"k"},{"name":"v"}],"output":{"name":"result"}}],[10,"end","","Finish serializing a map.",8,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[8,"SerializeStruct","","Returned from `Serializer::serialize_struct`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",9,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",9,null],[10,"serialize_field","","Serialize a struct field.",9,{"inputs":[{"name":"self"},{"name":"str"},{"name":"t"}],"output":{"name":"result"}}],[10,"end","","Finish serializing a struct.",9,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[8,"SerializeStructVariant","","Returned from `Serializer::serialize_struct_variant`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",10,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",10,null],[10,"serialize_field","","Serialize a struct variant field.",10,{"inputs":[{"name":"self"},{"name":"str"},{"name":"t"}],"output":{"name":"result"}}],[10,"end","","Finish serializing a struct variant.",10,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[0,"de","serde","Generic data structure deserialization framework.",null,null],[3,"IgnoredAny","serde::de","An efficient way of discarding data from a deserializer.",null,null],[4,"Unexpected","","`Unexpected` represents an unexpected invocation of any one of the `Visitor` trait methods.",null,null],[13,"Bool","","The input contained a boolean value that was not expected.",11,null],[13,"Unsigned","","The input contained an unsigned integer `u8`, `u16`, `u32` or `u64` that was not expected.",11,null],[13,"Signed","","The input contained a signed integer `i8`, `i16`, `i32` or `i64` that was not expected.",11,null],[13,"Float","","The input contained a floating point `f32` or `f64` that was not expected.",11,null],[13,"Char","","The input contained a `char` that was not expected.",11,null],[13,"Str","","The input contained a `&str` or `String` that was not expected.",11,null],[13,"Bytes","","The input contained a `&[u8]` or `Vec<u8>` that was not expected.",11,null],[13,"Unit","","The input contained a unit `()` that was not expected.",11,null],[13,"Option","","The input contained an `Option<T>` that was not expected.",11,null],[13,"NewtypeStruct","","The input contained a newtype struct that was not expected.",11,null],[13,"Seq","","The input contained a sequence that was not expected.",11,null],[13,"Map","","The input contained a map that was not expected.",11,null],[13,"Enum","","The input contained an enum that was not expected.",11,null],[13,"UnitVariant","","The input contained a unit variant that was not expected.",11,null],[13,"NewtypeVariant","","The input contained a newtype variant that was not expected.",11,null],[13,"TupleVariant","","The input contained a tuple variant that was not expected.",11,null],[13,"StructVariant","","The input contained a struct variant that was not expected.",11,null],[13,"Other","","A message stating what uncategorized thing the input contained that was not expected.",11,null],[0,"value","","Building blocks for deserializing basic values using the `IntoDeserializer` trait.",null,null],[3,"Error","serde::de::value","A minimal representation of all possible errors that can occur using the `IntoDeserializer` trait.",null,null],[3,"UnitDeserializer","","A deserializer holding a `()`.",null,null],[3,"BoolDeserializer","","A deserializer holding a `bool`.",null,null],[3,"I8Deserializer","","A deserializer holding an `i8`.",null,null],[3,"I16Deserializer","","A deserializer holding an `i16`.",null,null],[3,"I32Deserializer","","A deserializer holding an `i32`.",null,null],[3,"I64Deserializer","","A deserializer holding an `i64`.",null,null],[3,"IsizeDeserializer","","A deserializer holding an `isize`.",null,null],[3,"U8Deserializer","","A deserializer holding a `u8`.",null,null],[3,"U16Deserializer","","A deserializer holding a `u16`.",null,null],[3,"U64Deserializer","","A deserializer holding a `u64`.",null,null],[3,"UsizeDeserializer","","A deserializer holding a `usize`.",null,null],[3,"F32Deserializer","","A deserializer holding an `f32`.",null,null],[3,"F64Deserializer","","A deserializer holding an `f64`.",null,null],[3,"CharDeserializer","","A deserializer holding a `char`.",null,null],[3,"U32Deserializer","","A deserializer holding a `u32`.",null,null],[3,"StrDeserializer","","A deserializer holding a `&str`.",null,null],[3,"BorrowedStrDeserializer","","A deserializer holding a `&str` with a lifetime tied to another deserializer.",null,null],[3,"StringDeserializer","","A deserializer holding a `String`.",null,null],[3,"CowStrDeserializer","","A deserializer holding a `Cow<str>`.",null,null],[3,"BorrowedBytesDeserializer","","A deserializer holding a `&[u8]` with a lifetime tied to another deserializer.",null,null],[3,"SeqDeserializer","","A deserializer that iterates over a sequence.",null,null],[3,"SeqAccessDeserializer","","A deserializer holding a `SeqAccess`.",null,null],[3,"MapDeserializer","","A deserializer that iterates over a map.",null,null],[3,"MapAccessDeserializer","","A deserializer holding a `MapAccess`.",null,null],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",12,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"custom","","",12,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"custom","","",12,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",12,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"unitdeserializer"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",13,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",13,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",13,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",13,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",13,null],[11,"deserialize_enum","","",13,null],[11,"deserialize_identifier","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_any","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"booldeserializer"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",14,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",14,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",14,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",14,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",14,null],[11,"deserialize_enum","","",14,null],[11,"deserialize_identifier","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_any","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"i8deserializer"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",15,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",15,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",15,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",15,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",15,null],[11,"deserialize_enum","","",15,null],[11,"deserialize_identifier","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_any","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"i16deserializer"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",16,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",16,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",16,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",16,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",16,null],[11,"deserialize_enum","","",16,null],[11,"deserialize_identifier","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_any","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"i32deserializer"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",17,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",17,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",17,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",17,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",17,null],[11,"deserialize_enum","","",17,null],[11,"deserialize_identifier","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_any","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"i64deserializer"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",18,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",18,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",18,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",18,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",18,null],[11,"deserialize_enum","","",18,null],[11,"deserialize_identifier","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_any","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"isizedeserializer"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",19,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",19,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",19,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",19,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",19,null],[11,"deserialize_enum","","",19,null],[11,"deserialize_identifier","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_any","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"u8deserializer"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",20,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",20,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",20,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",20,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",20,null],[11,"deserialize_enum","","",20,null],[11,"deserialize_identifier","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_any","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"u16deserializer"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",21,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",21,null],[11,"deserialize_enum","","",21,null],[11,"deserialize_identifier","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_any","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"clone","","",22,{"inputs":[{"name":"self"}],"output":{"name":"u64deserializer"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",22,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",22,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",22,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",22,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",22,null],[11,"deserialize_enum","","",22,null],[11,"deserialize_identifier","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_any","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"usizedeserializer"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",23,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",23,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",23,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",23,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",23,null],[11,"deserialize_enum","","",23,null],[11,"deserialize_identifier","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_any","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"f32deserializer"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",24,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",24,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",24,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",24,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",24,null],[11,"deserialize_enum","","",24,null],[11,"deserialize_identifier","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_any","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"f64deserializer"}}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",25,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",25,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",25,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",25,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",25,null],[11,"deserialize_enum","","",25,null],[11,"deserialize_identifier","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_any","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"chardeserializer"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",26,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",26,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",26,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",26,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",26,null],[11,"deserialize_enum","","",26,null],[11,"deserialize_identifier","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_any","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"u32deserializer"}}],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",27,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",27,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",27,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",27,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",27,null],[11,"deserialize_identifier","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_any","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_enum","","",27,null],[11,"variant_seed","","",27,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"strdeserializer"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize_any","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_enum","","",28,null],[11,"deserialize_bool","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",28,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",28,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",28,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",28,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",28,null],[11,"deserialize_identifier","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"variant_seed","","",28,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"borrowedstrdeserializer"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new borrowed deserializer from the given string.",29,{"inputs":[{"name":"str"}],"output":{"name":"borrowedstrdeserializer"}}],[11,"deserialize_any","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_enum","","",29,null],[11,"deserialize_bool","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",29,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",29,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",29,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",29,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",29,null],[11,"deserialize_identifier","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"variant_seed","","",29,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"stringdeserializer"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize_any","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_enum","","",30,null],[11,"deserialize_bool","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",30,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",30,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",30,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",30,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",30,null],[11,"deserialize_identifier","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"variant_seed","","",30,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",31,{"inputs":[{"name":"self"}],"output":{"name":"cowstrdeserializer"}}],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize_any","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_enum","","",31,null],[11,"deserialize_bool","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",31,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",31,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",31,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",31,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",31,null],[11,"deserialize_identifier","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"variant_seed","","",31,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"borrowedbytesdeserializer"}}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new borrowed deserializer from the given byte slice.",32,null],[11,"deserialize_any","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",32,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",32,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",32,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",32,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",32,null],[11,"deserialize_identifier","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_enum","","",32,null],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"seqdeserializer"}}],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Construct a new `SeqDeserializer<I, E>`.",33,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"end","","Check for remaining elements after passing a `SeqDeserializer` to `Visitor::visit_seq`.",33,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"deserialize_any","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",33,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",33,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",33,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",33,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",33,null],[11,"deserialize_enum","","",33,null],[11,"deserialize_identifier","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"next_element_seed","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"size_hint","","",33,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"seqaccessdeserializer"}}],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Construct a new `SeqAccessDeserializer<A>`.",34,{"inputs":[{"name":"a"}],"output":{"name":"self"}}],[11,"deserialize_any","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",34,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",34,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",34,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",34,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",34,null],[11,"deserialize_enum","","",34,null],[11,"deserialize_identifier","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"new","","Construct a new `MapDeserializer<I, E>`.",35,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"end","","Check for remaining elements after passing a `MapDeserializer` to `Visitor::visit_map`.",35,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"deserialize_any","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",35,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",35,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",35,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",35,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",35,null],[11,"deserialize_enum","","",35,null],[11,"deserialize_identifier","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"next_key_seed","","",35,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"next_value_seed","","",35,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"next_entry_seed","","",35,{"inputs":[{"name":"self"},{"name":"tk"},{"name":"tv"}],"output":{"name":"result"}}],[11,"size_hint","","",35,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next_element_seed","","",35,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"size_hint","","",35,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"mapaccessdeserializer"}}],[11,"fmt","","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Construct a new `MapAccessDeserializer<A>`.",36,{"inputs":[{"name":"a"}],"output":{"name":"self"}}],[11,"deserialize_any","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",36,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",36,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",36,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",36,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",36,null],[11,"deserialize_enum","","",36,null],[11,"deserialize_identifier","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"clone","serde::de","",37,{"inputs":[{"name":"self"}],"output":{"name":"ignoredany"}}],[11,"fmt","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",37,{"inputs":[],"output":{"name":"ignoredany"}}],[11,"expecting","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"visit_bool","","",37,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[11,"visit_i64","","",37,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"result"}}],[11,"visit_u64","","",37,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"result"}}],[11,"visit_f64","","",37,{"inputs":[{"name":"self"},{"name":"f64"}],"output":{"name":"result"}}],[11,"visit_str","","",37,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[11,"visit_none","","",37,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"visit_some","","",37,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"name":"result"}}],[11,"visit_newtype_struct","","",37,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"name":"result"}}],[11,"visit_unit","","",37,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"visit_seq","","",37,{"inputs":[{"name":"self"},{"name":"a"}],"output":{"name":"result"}}],[11,"visit_map","","",37,{"inputs":[{"name":"self"},{"name":"a"}],"output":{"name":"result"}}],[11,"visit_bytes","","",37,null],[11,"deserialize","","",37,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[8,"Error","","The `Error` trait allows `Deserialize` implementations to create descriptive error messages belonging to the `Deserializer` against which they are currently running.",null,null],[10,"custom","","Raised when there is general error when deserializing a type.",38,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"invalid_type","","Raised when a `Deserialize` receives a type different from what it was expecting.",38,{"inputs":[{"name":"unexpected"},{"name":"expected"}],"output":{"name":"self"}}],[11,"invalid_value","","Raised when a `Deserialize` receives a value of the right type but that is wrong for some other reason.",38,{"inputs":[{"name":"unexpected"},{"name":"expected"}],"output":{"name":"self"}}],[11,"invalid_length","","Raised when deserializing a sequence or map and the input data contains too many or too few elements.",38,{"inputs":[{"name":"usize"},{"name":"expected"}],"output":{"name":"self"}}],[11,"unknown_variant","","Raised when a `Deserialize` enum type received a variant with an unrecognized name.",38,null],[11,"unknown_field","","Raised when a `Deserialize` struct type received a field with an unrecognized name.",38,null],[11,"missing_field","","Raised when a `Deserialize` struct type expected to receive a required field with a particular name but that field was not present in the input.",38,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"duplicate_field","","Raised when a `Deserialize` struct type received more than one of the same field.",38,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[8,"Expected","","`Expected` represents an explanation of what data a `Visitor` was expecting to receive.",null,null],[10,"fmt","","Format an explanation of what data was being expected. Same signature as the `Display` and `Debug` traits.",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[8,"Deserialize","","A data structure that can be deserialized from any data format supported by Serde.",null,null],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",40,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[8,"DeserializeOwned","","A data structure that can be deserialized without borrowing any data from the deserializer.",null,null],[8,"DeserializeSeed","","`DeserializeSeed` is the stateful form of the `Deserialize` trait. If you ever find yourself looking for a way to pass data into a `Deserialize` impl, this trait is the way to do it.",null,null],[16,"Value","","The type produced by using this seed.",41,null],[10,"deserialize","","Equivalent to the more common `Deserialize::deserialize` method, except with some initial piece of data (the seed) passed in.",41,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"name":"result"}}],[8,"Deserializer","","A data format that can deserialize any data structure supported by Serde.",null,null],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",42,null],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the visitor based on what data type is in the input.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string value and does not benefit from taking ownership of buffered data owned by the `Deserializer`.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string value and would benefit from taking ownership of buffered data owned by the `Deserializer`.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array and does not benefit from taking ownership of buffered data owned by the `Deserializer`.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array and would benefit from taking ownership of buffered data owned by the `Deserializer`.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit struct with a particular name.",42,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype struct with a particular name.",42,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence of values.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence of values and knows how many values there are without looking at the serialized data.",42,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple struct with a particular name and number of fields.",42,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of key-value pairs.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct with a particular name and fields.",42,null],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum value with a particular name and possible variants.",42,null],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of a struct field or the discriminant of an enum variant.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a value whose type doesn't matter because it is ignored.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[8,"Visitor","","This trait represents a visitor that walks through a deserializer.",null,null],[16,"Value","","The value produced by this visitor.",43,null],[10,"expecting","","Format a message stating what data this Visitor expects to receive.",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"visit_bool","","The input contains a boolean.",43,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[11,"visit_i8","","The input contains an `i8`.",43,{"inputs":[{"name":"self"},{"name":"i8"}],"output":{"name":"result"}}],[11,"visit_i16","","The input contains an `i16`.",43,{"inputs":[{"name":"self"},{"name":"i16"}],"output":{"name":"result"}}],[11,"visit_i32","","The input contains an `i32`.",43,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"result"}}],[11,"visit_i64","","The input contains an `i32`.",43,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"result"}}],[11,"visit_u8","","The input contains a `u8`.",43,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"result"}}],[11,"visit_u16","","The input contains a `u16`.",43,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"result"}}],[11,"visit_u32","","The input contains a `u32`.",43,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"visit_u64","","The input contains a `u64`.",43,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"result"}}],[11,"visit_f32","","The input contains an `f32`.",43,{"inputs":[{"name":"self"},{"name":"f32"}],"output":{"name":"result"}}],[11,"visit_f64","","The input contains an `f64`.",43,{"inputs":[{"name":"self"},{"name":"f64"}],"output":{"name":"result"}}],[11,"visit_char","","The input contains a `char`.",43,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"result"}}],[11,"visit_str","","The input contains a string. The lifetime of the string is ephemeral and it may be destroyed after this method returns.",43,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[11,"visit_borrowed_str","","The input contains a string that lives at least as long as the `Deserializer`.",43,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[11,"visit_string","","The input contains a string and ownership of the string is being given to the `Visitor`.",43,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"result"}}],[11,"visit_bytes","","The input contains a byte array. The lifetime of the byte array is ephemeral and it may be destroyed after this method returns.",43,null],[11,"visit_borrowed_bytes","","The input contains a byte array that lives at least as long as the `Deserializer`.",43,null],[11,"visit_byte_buf","","The input contains a byte array and ownership of the byte array is being given to the `Visitor`.",43,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"name":"result"}}],[11,"visit_none","","The input contains an optional that is absent.",43,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"visit_some","","The input contains an optional that is present.",43,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"name":"result"}}],[11,"visit_unit","","The input contains a unit `()`.",43,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"visit_newtype_struct","","The input contains a newtype struct.",43,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"name":"result"}}],[11,"visit_seq","","The input contains a sequence of elements.",43,{"inputs":[{"name":"self"},{"name":"a"}],"output":{"name":"result"}}],[11,"visit_map","","The input contains a key-value map.",43,{"inputs":[{"name":"self"},{"name":"a"}],"output":{"name":"result"}}],[11,"visit_enum","","The input contains an enum.",43,{"inputs":[{"name":"self"},{"name":"a"}],"output":{"name":"result"}}],[8,"SeqAccess","","Provides a `Visitor` access to each element of a sequence in the input.",null,null],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",44,null],[10,"next_element_seed","","This returns `Ok(Some(value))` for the next value in the sequence, or `Ok(None)` if there are no more remaining items.",44,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"next_element","","This returns `Ok(Some(value))` for the next value in the sequence, or `Ok(None)` if there are no more remaining items.",44,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"size_hint","","Returns the number of elements remaining in the sequence, if known.",44,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[8,"MapAccess","","Provides a `Visitor` access to each entry of a map in the input.",null,null],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",45,null],[10,"next_key_seed","","This returns `Ok(Some(key))` for the next key in the map, or `Ok(None)` if there are no more remaining entries.",45,{"inputs":[{"name":"self"},{"name":"k"}],"output":{"name":"result"}}],[10,"next_value_seed","","This returns a `Ok(value)` for the next value in the map.",45,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"next_entry_seed","","This returns `Ok(Some((key, value)))` for the next (key-value) pair in the map, or `Ok(None)` if there are no more remaining items.",45,{"inputs":[{"name":"self"},{"name":"k"},{"name":"v"}],"output":{"name":"result"}}],[11,"next_key","","This returns `Ok(Some(key))` for the next key in the map, or `Ok(None)` if there are no more remaining entries.",45,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"next_value","","This returns a `Ok(value)` for the next value in the map.",45,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"next_entry","","This returns `Ok(Some((key, value)))` for the next (key-value) pair in the map, or `Ok(None)` if there are no more remaining items.",45,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"size_hint","","Returns the number of entries remaining in the map, if known.",45,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[8,"EnumAccess","","Provides a `Visitor` access to the data of an enum in the input.",null,null],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",46,null],[16,"Variant","","The `Visitor` that will be used to deserialize the content of the enum variant.",46,null],[10,"variant_seed","","`variant` is called to identify which variant to deserialize.",46,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"variant","","`variant` is called to identify which variant to deserialize.",46,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[8,"VariantAccess","","`VariantAccess` is a visitor that is created by the `Deserializer` and passed to the `Deserialize` to deserialize the content of a particular enum variant.",null,null],[16,"Error","","The error type that can be returned if some error occurs during deserialization. Must match the error type of our `EnumAccess`.",47,null],[10,"unit_variant","","Called when deserializing a variant with no values.",47,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"newtype_variant_seed","","Called when deserializing a variant with a single value.",47,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"newtype_variant","","Called when deserializing a variant with a single value.",47,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"tuple_variant","","Called when deserializing a tuple-like variant.",47,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[10,"struct_variant","","Called when deserializing a struct-like variant.",47,null],[8,"IntoDeserializer","","Converts an existing value into a `Deserializer` from which other values can be deserialized.",null,null],[16,"Deserializer","","The type of the deserializer being converted into.",48,null],[10,"into_deserializer","","Convert this value into a deserializer.",48,null],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"unexpected"}}],[11,"eq","","",11,{"inputs":[{"name":"self"},{"name":"unexpected"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"self"},{"name":"unexpected"}],"output":{"name":"bool"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[8,"Serialize","serde","A data structure that can be serialized into any data format supported by Serde.",null,null],[10,"serialize","","Serialize this value into the given Serde serializer.",2,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[8,"Serializer","","A data format that can serialize any data structure supported by Serde.",null,null],[16,"Ok","","The output type produced by this `Serializer` during successful serialization. Most serializers that produce text or binary output should set `Ok = ()` and serialize into an [`io::Write`] or buffer contained within the `Serializer` instance. Serializers that build in-memory data structures may be simplified by using `Ok` to propagate the data structure around.",3,null],[16,"Error","","The error type when some error occurs during serialization.",3,null],[16,"SerializeSeq","","Type returned from [`serialize_seq`] for serializing the content of the sequence.",3,null],[16,"SerializeTuple","","Type returned from [`serialize_tuple`] for serializing the content of the tuple.",3,null],[16,"SerializeTupleStruct","","Type returned from [`serialize_tuple_struct`] for serializing the content of the tuple struct.",3,null],[16,"SerializeTupleVariant","","Type returned from [`serialize_tuple_variant`] for serializing the content of the tuple variant.",3,null],[16,"SerializeMap","","Type returned from [`serialize_map`] for serializing the content of the map.",3,null],[16,"SerializeStruct","","Type returned from [`serialize_struct`] for serializing the content of the struct.",3,null],[16,"SerializeStructVariant","","Type returned from [`serialize_struct_variant`] for serializing the content of the struct variant.",3,null],[10,"serialize_bool","","Serialize a `bool` value.",3,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[10,"serialize_i8","","Serialize an `i8` value.",3,{"inputs":[{"name":"self"},{"name":"i8"}],"output":{"name":"result"}}],[10,"serialize_i16","","Serialize an `i16` value.",3,{"inputs":[{"name":"self"},{"name":"i16"}],"output":{"name":"result"}}],[10,"serialize_i32","","Serialize an `i32` value.",3,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"result"}}],[10,"serialize_i64","","Serialize an `i64` value.",3,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"result"}}],[10,"serialize_u8","","Serialize a `u8` value.",3,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"result"}}],[10,"serialize_u16","","Serialize a `u16` value.",3,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"result"}}],[10,"serialize_u32","","Serialize a `u32` value.",3,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[10,"serialize_u64","","Serialize a `u64` value.",3,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"result"}}],[10,"serialize_f32","","Serialize an `f32` value.",3,{"inputs":[{"name":"self"},{"name":"f32"}],"output":{"name":"result"}}],[10,"serialize_f64","","Serialize an `f64` value.",3,{"inputs":[{"name":"self"},{"name":"f64"}],"output":{"name":"result"}}],[10,"serialize_char","","Serialize a character.",3,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"result"}}],[10,"serialize_str","","Serialize a `&str`.",3,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",3,null],[10,"serialize_none","","Serialize a [`None`] value.",3,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"serialize_some","","Serialize a [`Some(T)`] value.",3,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[10,"serialize_unit","","Serialize a `()` value.",3,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or `PhantomData<T>`.",3,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",3,{"inputs":[{"name":"self"},{"name":"str"},{"name":"u32"},{"name":"str"}],"output":{"name":"result"}}],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",3,{"inputs":[{"name":"self"},{"name":"str"},{"name":"t"}],"output":{"name":"result"}}],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8) }`.",3,{"inputs":[{"name":"self"},{"name":"str"},{"name":"u32"},{"name":"str"},{"name":"t"}],"output":{"name":"result"}}],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call must be followed by zero or more calls to `serialize_element`, then a call to `end`.",3,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"result"}}],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose length will be known at deserialization time without looking at the serialized data. This call must be followed by zero or more calls to `serialize_element`, then a call to `end`.",3,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"result"}}],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8, u8)`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",3,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"}],"output":{"name":"result"}}],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E { T(u8, u8) }`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",3,{"inputs":[{"name":"self"},{"name":"str"},{"name":"u32"},{"name":"str"},{"name":"usize"}],"output":{"name":"result"}}],[10,"serialize_map","","Begin to serialize a map. This call must be followed by zero or more calls to `serialize_key` and `serialize_value`, then a call to `end`.",3,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"result"}}],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g: u8, b: u8 }`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",3,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"}],"output":{"name":"result"}}],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E { S { r: u8, g: u8, b: u8 } }`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",3,{"inputs":[{"name":"self"},{"name":"str"},{"name":"u32"},{"name":"str"},{"name":"usize"}],"output":{"name":"result"}}],[11,"collect_seq","","Collect an iterator as a sequence.",3,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"result"}}],[11,"collect_map","","Collect an iterator as a map.",3,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"result"}}],[11,"collect_str","","Serialize a string produced by an implementation of `Display`.",3,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[8,"Deserialize","","A data structure that can be deserialized from any data format supported by Serde.",null,null],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",40,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[8,"Deserializer","","A data format that can deserialize any data structure supported by Serde.",null,null],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",42,null],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the visitor based on what data type is in the input.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string value and does not benefit from taking ownership of buffered data owned by the `Deserializer`.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string value and would benefit from taking ownership of buffered data owned by the `Deserializer`.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array and does not benefit from taking ownership of buffered data owned by the `Deserializer`.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array and would benefit from taking ownership of buffered data owned by the `Deserializer`.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit struct with a particular name.",42,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype struct with a particular name.",42,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence of values.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence of values and knows how many values there are without looking at the serialized data.",42,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple struct with a particular name and number of fields.",42,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of key-value pairs.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct with a particular name and fields.",42,null],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum value with a particular name and possible variants.",42,null],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of a struct field or the discriminant of an enum variant.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a value whose type doesn't matter because it is ignored.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[14,"forward_to_deserialize_any","","Helper macro when implementing the `Deserializer` part of a new data format for Serde.",null,null]],"paths":[[3,"Impossible"],[8,"Error"],[8,"Serialize"],[8,"Serializer"],[8,"SerializeSeq"],[8,"SerializeTuple"],[8,"SerializeTupleStruct"],[8,"SerializeTupleVariant"],[8,"SerializeMap"],[8,"SerializeStruct"],[8,"SerializeStructVariant"],[4,"Unexpected"],[3,"Error"],[3,"UnitDeserializer"],[3,"BoolDeserializer"],[3,"I8Deserializer"],[3,"I16Deserializer"],[3,"I32Deserializer"],[3,"I64Deserializer"],[3,"IsizeDeserializer"],[3,"U8Deserializer"],[3,"U16Deserializer"],[3,"U64Deserializer"],[3,"UsizeDeserializer"],[3,"F32Deserializer"],[3,"F64Deserializer"],[3,"CharDeserializer"],[3,"U32Deserializer"],[3,"StrDeserializer"],[3,"BorrowedStrDeserializer"],[3,"StringDeserializer"],[3,"CowStrDeserializer"],[3,"BorrowedBytesDeserializer"],[3,"SeqDeserializer"],[3,"SeqAccessDeserializer"],[3,"MapDeserializer"],[3,"MapAccessDeserializer"],[3,"IgnoredAny"],[8,"Error"],[8,"Expected"],[8,"Deserialize"],[8,"DeserializeSeed"],[8,"Deserializer"],[8,"Visitor"],[8,"SeqAccess"],[8,"MapAccess"],[8,"EnumAccess"],[8,"VariantAccess"],[8,"IntoDeserializer"]]};
searchIndex["strsim"] = {"doc":"This library implements string similarity metrics.","items":[[4,"StrSimError","strsim","",null,null],[13,"DifferentLengthArgs","","",0,null],[5,"hamming","","Calculates the number of positions in the two strings where the characters differ. Returns an error if the strings have different lengths.",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"hammingresult"}}],[5,"jaro","","Calculates the Jaro similarity between two strings. The returned value is between 0.0 and 1.0 (higher value means more similar).",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"f64"}}],[5,"jaro_against_vec","","Calculates the Jaro distance between a string and each string in a vector. Returns a vector of corresponding values between 0.0 and 1.0 (higher value means more similar).",null,null],[5,"jaro_winkler","","Like Jaro but gives a boost to strings that have a common prefix.",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"f64"}}],[5,"jaro_winkler_against_vec","","Calculates the Jaro-Winkler distances between a string and each string in a vector. Returns a vector of corresponding values.",null,null],[5,"levenshtein","","Calculates the minimum number of insertions, deletions, and substitutions required to change one string into the other.",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"usize"}}],[5,"levenshtein_against_vec","","Calculates the Levenshtein distance between a string and each string in a vector. Returns a vector of corresponding values.",null,null],[5,"osa_distance","","Like Levenshtein but allows for adjacent transpositions. Each substring can only be edited once.",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"usize"}}],[5,"osa_distance_against_vec","","Calculates the optimal string alignment distance between a string and each string in a vector. Returns a vector of corresponding values.",null,null],[5,"damerau_levenshtein","","Like optimal string alignment, but substrings can be edited an unlimited number of times, and the triangle inequality holds.",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"usize"}}],[5,"damerau_levenshtein_against_vec","","Calculates the Damerau-Levenshtein distance between a string and each string in a vector. Returns a vector of corresponding values.",null,null],[6,"HammingResult","","",null,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"strsimerror"}],"output":{"name":"bool"}}]],"paths":[[4,"StrSimError"]]};
searchIndex["term_size"] = {"doc":"System calls for getting the terminal size.","items":[[5,"dimensions","term_size","Query the current processes's output (`stdout`), input (`stdin`), and error (`stderr`) in that order, in the attempt to dtermine terminal width. If one of those streams is actually a tty, this function returns its width and height as a number of characters.",null,{"inputs":[],"output":{"name":"option"}}],[5,"dimensions_stdout","","Query the current processes's output (`stdout`) only, in the attempt to dtermine terminal width. If that streams is actually a tty, this function returns its width and height as a number of characters.",null,{"inputs":[],"output":{"name":"option"}}],[5,"dimensions_stdin","","Query the current processes's input (`stdin`) only, in the attempt to dtermine terminal width. If that streams is actually a tty, this function returns its width and height as a number of characters.",null,{"inputs":[],"output":{"name":"option"}}],[5,"dimensions_stderr","","Query the current processes's error output (`stderr`) only, in the attempt to dtermine terminal width. If that streams is actually a tty, this function returns its width and height as a number of characters.",null,{"inputs":[],"output":{"name":"option"}}]],"paths":[]};
searchIndex["textwrap"] = {"doc":"`textwrap` provides functions for word wrapping and filling text.","items":[[3,"NoHyphenation","textwrap","Use this as a [`Wrapper.splitter`] to avoid any kind of hyphenation: ``` use textwrap::{Wrapper, NoHyphenation};",null,null],[3,"HyphenSplitter","","Simple and default way to split words: splitting on existing hyphens only.",null,null],[3,"Wrapper","","A Wrapper holds settings for wrapping and filling text. Use it when the convenience [`wrap`] and [`fill`] functions are not flexible enough.",null,null],[12,"width","","The width in columns at which the text will be wrapped.",0,null],[12,"initial_indent","","Indentation used for the first line of output.",0,null],[12,"subsequent_indent","","Indentation used for subsequent lines of output.",0,null],[12,"break_words","","Allow long words to be broken if they cannot fit on a line. When set to `false`, some lines be being longer than `self.width`.",0,null],[12,"squeeze_whitespace","","This crate treats every whitespace character (space, newline, TAB, ...) as a space character. When this option is set to `true`, the whitespace between words will be squeezed into a single space character. Otherwise, the whitespace is significant and will be kept in the output. Whitespace characters such as TAB will still be turned into a single space -- consider expanding TABs manually if this is a concern.",0,null],[12,"splitter","","The method for splitting words. If the `hyphenation` feature is enabled, you can use a `hyphenation::language::Corpus` here to get language-aware hyphenation.",0,null],[5,"fill","","Fill a line of text at `width` characters. Strings are wrapped based on their displayed width, not their size in bytes.",null,{"inputs":[{"name":"str"},{"name":"usize"}],"output":{"name":"string"}}],[5,"wrap","","Wrap a line of text at `width` characters. Strings are wrapped based on their displayed width, not their size in bytes.",null,{"inputs":[{"name":"str"},{"name":"usize"}],"output":{"name":"vec"}}],[5,"indent","","Add prefix to each non-empty line.",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"string"}}],[5,"dedent","","Removes common leading whitespace from each line.",null,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[8,"WordSplitter","","An interface for splitting words.",null,null],[10,"split","","Return all possible splits of word. Each split is a triple with a head, a hyphen, and a tail where `head + &hyphen + &tail == word`. The hyphen can be empty if there is already a hyphen in the head.",1,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"vec"}}],[11,"split","","",2,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"vec"}}],[11,"split","","",3,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"vec"}}],[11,"new","","Create a new Wrapper for wrapping at the specified width. By default, we allow words longer than `width` to be broken. A [`HyphenSplitter`] will be used by default for splitting words. See the [`WordSplitter`] trait for other options.",0,{"inputs":[{"name":"usize"}],"output":{"name":"wrapper"}}],[11,"with_termwidth","","Crate a new Wrapper for wrapping text at the current terminal width. If the terminal width cannot be determined (typically because the standard input and output is not connected to a terminal), a width of 80 characters will be used. Other settings use the same defaults as `Wrapper::new`.",0,{"inputs":[],"output":{"name":"wrapper"}}],[11,"initial_indent","","Change [`self.initial_indent`]. The initial indentation is used on the very first line of output. Setting it to something like `\"* \"` can be useful if you are formatting an item in a bulleted list. You will then probably want to set `self.subsequent_indent` to `\" \"`.",0,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"wrapper"}}],[11,"subsequent_indent","","Change [`self.subsequent_indent`]. The subsequent indentation is used on lines following the first line of output. Setting it to something like `\" \"` can be useful if you are formatting an item in a bulleted list.",0,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"wrapper"}}],[11,"break_words","","Change [`self.break_words`]. This controls if words longer than `self.width` can be broken, or if they will be left sticking out into the right margin.",0,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"wrapper"}}],[11,"squeeze_whitespace","","Change [`self.squeeze_whitespace`]. This controls if whitespace betweee words is squeezed together to a single space. Regardless of this setting, all whitespace characters are converted to space (`' '`) characters.",0,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"wrapper"}}],[11,"word_splitter","","Change [`self.splitter`]. The word splitter is consulted when a word is too wide to fit the current line. By changing this, you can decide if such words should be hyphenated or left alone. Hyphenation can be done using existing hyphens (see [`HyphenSplitter`]) or it can be based on TeX hyphenation patterns, if the `hyphenation` feature is enabled.",0,{"inputs":[{"name":"self"},{"name":"box"}],"output":{"name":"wrapper"}}],[11,"fill","","Fill a line of text at `self.width` characters. Strings are wrapped based on their displayed width, not their size in bytes.",0,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"string"}}],[11,"wrap","","Wrap a line of text at `self.width` characters. Strings are wrapped based on their displayed width, not their size in bytes.",0,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"vec"}}]],"paths":[[3,"Wrapper"],[8,"WordSplitter"],[3,"NoHyphenation"],[3,"HyphenSplitter"]]};
searchIndex["thread_local"] = {"doc":"Per-object thread-local storage","items":[[3,"ThreadLocal","thread_local","Thread-local variable wrapper",null,null],[3,"IterMut","","Mutable iterator over the contents of a `ThreadLocal`.",null,null],[3,"IntoIter","","An iterator that moves out of a `ThreadLocal`.",null,null],[3,"CachedThreadLocal","","Wrapper around `ThreadLocal` which adds a fast path for a single thread.",null,null],[6,"CachedIterMut","","Mutable iterator over the contents of a `CachedThreadLocal`.",null,null],[6,"CachedIntoIter","","An iterator that moves out of a `CachedThreadLocal`.",null,null],[11,"default","","",0,{"inputs":[],"output":{"name":"threadlocal"}}],[11,"drop","","",0,{"inputs":[{"name":"self"}],"output":null}],[11,"new","","Creates a new empty `ThreadLocal`.",0,{"inputs":[],"output":{"name":"threadlocal"}}],[11,"get","","Returns the element for the current thread, if it exists.",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_or","","Returns the element for the current thread, or creates it if it doesn't exist.",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"get_or_try","","Returns the element for the current thread, or creates it if it doesn't exist. If `create` fails, that error is returned and no element is added.",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter_mut","","Returns a mutable iterator over the local values of all threads.",0,{"inputs":[{"name":"self"}],"output":{"name":"itermut"}}],[11,"clear","","Removes all thread-specific values from the `ThreadLocal`, effectively reseting it to its original state.",0,{"inputs":[{"name":"self"}],"output":null}],[11,"into_iter","","",0,{"inputs":[{"name":"self"}],"output":{"name":"intoiter"}}],[11,"get_default","","Returns the element for the current thread, or creates a default one if it doesn't exist.",0,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",1,null],[11,"next","","",2,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",2,null],[11,"default","","",3,{"inputs":[],"output":{"name":"cachedthreadlocal"}}],[11,"new","","Creates a new empty `CachedThreadLocal`.",3,{"inputs":[],"output":{"name":"cachedthreadlocal"}}],[11,"get","","Returns the element for the current thread, if it exists.",3,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_or","","Returns the element for the current thread, or creates it if it doesn't exist.",3,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"get_or_try","","Returns the element for the current thread, or creates it if it doesn't exist. If `create` fails, that error is returned and no element is added.",3,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter_mut","","Returns a mutable iterator over the local values of all threads.",3,{"inputs":[{"name":"self"}],"output":{"name":"cacheditermut"}}],[11,"clear","","Removes all thread-specific values from the `ThreadLocal`, effectively reseting it to its original state.",3,{"inputs":[{"name":"self"}],"output":null}],[11,"into_iter","","",3,{"inputs":[{"name":"self"}],"output":{"name":"cachedintoiter"}}],[11,"get_default","","Returns the element for the current thread, or creates a default one if it doesn't exist.",3,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"ThreadLocal"],[3,"IterMut"],[3,"IntoIter"],[3,"CachedThreadLocal"]]};
searchIndex["unicode_segmentation"] = {"doc":"Iterators which split strings on Grapheme Cluster or Word boundaries, according to the Unicode Standard Annex #29 rules.","items":[[3,"Graphemes","unicode_segmentation","External iterator for a string's grapheme clusters.",null,null],[3,"GraphemeIndices","","External iterator for grapheme clusters and byte offsets.",null,null],[3,"UWordBounds","","External iterator for a string's word boundaries.",null,null],[3,"UWordBoundIndices","","External iterator for word boundaries and byte offsets.",null,null],[3,"UnicodeWords","","An iterator over the substrings of a string which, after splitting the string on word boundaries, contain any characters with the Alphabetic property, or with General_Category=Number.",null,null],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"graphemeindices"}}],[11,"as_str","","View the underlying data (the part yet to be iterated) as a slice of the original string.",0,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"next","","",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",0,null],[11,"next_back","","",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"graphemes"}}],[11,"as_str","","View the underlying data (the part yet to be iterated) as a slice of the original string.",1,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"size_hint","","",1,null],[11,"next","","",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next_back","","",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",2,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next_back","","",2,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"uwordbounds"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"uwordboundindices"}}],[11,"as_str","","View the underlying data (the part yet to be iterated) as a slice of the original string.",4,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"next","","",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",4,null],[11,"next_back","","",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",3,null],[11,"next","","",3,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next_back","","",3,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"as_str","","View the underlying data (the part yet to be iterated) as a slice of the original string.",3,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[17,"UNICODE_VERSION","","The version of Unicode that this version of unicode-segmentation is based on.",null,null],[8,"UnicodeSegmentation","","Methods for segmenting strings according to Unicode Standard Annex #29.",null,null],[10,"graphemes","","Returns an iterator over the [grapheme clusters][graphemes] of `self`.",5,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"graphemes"}}],[10,"grapheme_indices","","Returns an iterator over the grapheme clusters of `self` and their byte offsets. See `graphemes()` for more information.",5,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"graphemeindices"}}],[10,"unicode_words","","Returns an iterator over the words of `self`, separated on UAX#29 word boundaries.",5,{"inputs":[{"name":"self"}],"output":{"name":"unicodewords"}}],[10,"split_word_bounds","","Returns an iterator over substrings of `self` separated on UAX#29 word boundaries.",5,{"inputs":[{"name":"self"}],"output":{"name":"uwordbounds"}}],[10,"split_word_bound_indices","","Returns an iterator over substrings of `self`, split on UAX#29 word boundaries, and their offsets. See `split_word_bounds()` for more information.",5,{"inputs":[{"name":"self"}],"output":{"name":"uwordboundindices"}}]],"paths":[[3,"GraphemeIndices"],[3,"Graphemes"],[3,"UnicodeWords"],[3,"UWordBounds"],[3,"UWordBoundIndices"],[8,"UnicodeSegmentation"]]};
searchIndex["unicode_width"] = {"doc":"Determine displayed width of `char` and `str` types according to Unicode Standard Annex #11 rules.","items":[[17,"UNICODE_VERSION","unicode_width","The version of Unicode that this version of unicode-width is based on.",null,null],[8,"UnicodeWidthChar","","Methods for determining displayed width of Unicode characters.",null,null],[10,"width","","Returns the character's displayed width in columns, or `None` if the character is a control character other than `'\\x00'`.",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"width_cjk","","Returns the character's displayed width in columns, or `None` if the character is a control character other than `'\\x00'`.",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[8,"UnicodeWidthStr","","Methods for determining displayed width of Unicode strings.",null,null],[10,"width","","Returns the string's displayed width in columns.",1,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[10,"width_cjk","","Returns the string's displayed width in columns.",1,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}]],"paths":[[8,"UnicodeWidthChar"],[8,"UnicodeWidthStr"]]};
searchIndex["unreachable"] = {"doc":"unreachable","items":[[5,"unreachable","unreachable","Hint to the optimizer that any code path which calls this function is statically unreachable and can be removed.",null,null],[8,"UncheckedOptionExt","","An extension trait for `Option<T>` providing unchecked unwrapping methods.",null,null],[10,"unchecked_unwrap","","Get the value out of this Option without checking for None.",0,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[10,"unchecked_unwrap_none","","Assert that this Option is a None to the optimizer.",0,{"inputs":[{"name":"self"}],"output":null}],[8,"UncheckedResultExt","","An extension trait for `Result<T, E>` providing unchecked unwrapping methods.",null,null],[10,"unchecked_unwrap_ok","","Get the value out of this Result without checking for Err.",1,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[10,"unchecked_unwrap_err","","Get the error out of this Result without checking for Ok.",1,{"inputs":[{"name":"self"}],"output":{"name":"e"}}]],"paths":[[8,"UncheckedOptionExt"],[8,"UncheckedResultExt"]]};
searchIndex["utf8_ranges"] = {"doc":"Crate `utf8-ranges` converts ranges of Unicode scalar values to equivalent ranges of UTF-8 bytes. This is useful for constructing byte based automatons that need to embed UTF-8 decoding.","items":[[3,"Utf8Range","utf8_ranges","A single inclusive range of UTF-8 bytes.",null,null],[12,"start","","Start of byte range (inclusive).",0,null],[12,"end","","End of byte range (inclusive).",0,null],[3,"Utf8Sequences","","An iterator over ranges of matching UTF-8 byte sequences.",null,null],[4,"Utf8Sequence","","Utf8Sequence represents a sequence of byte ranges.",null,null],[13,"One","","One byte range.",1,null],[13,"Two","","Two successive byte ranges.",1,null],[13,"Three","","Three successive byte ranges.",1,null],[13,"Four","","Four successive byte ranges.",1,null],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"utf8sequence"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"utf8sequence"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"utf8sequence"}],"output":{"name":"bool"}}],[11,"as_slice","","Returns the underlying sequence of byte ranges as a slice.",1,null],[11,"len","","Returns the number of byte ranges in this sequence.",1,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"matches","","Returns true if and only if a prefix of `bytes` matches this sequence of byte ranges.",1,null],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"utf8range"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"utf8range"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"utf8range"}],"output":{"name":"bool"}}],[11,"matches","","Returns true if and only if the given byte is in this range.",0,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new iterator over UTF-8 byte ranges for the scalar value range given.",2,{"inputs":[{"name":"char"},{"name":"char"}],"output":{"name":"self"}}],[11,"next","","",2,{"inputs":[{"name":"self"}],"output":{"name":"option"}}]],"paths":[[3,"Utf8Range"],[4,"Utf8Sequence"],[3,"Utf8Sequences"]]};
searchIndex["vec_map"] = {"doc":"A simple map based on a vector for small integer keys. Space requirements are O(highest integer key).","items":[[3,"VecMap","vec_map","A map optimized for small integer keys.",null,null],[3,"VacantEntry","","A vacant Entry.",null,null],[3,"OccupiedEntry","","An occupied Entry.",null,null],[3,"Iter","","An iterator over the key-value pairs of a map.",null,null],[3,"IterMut","","An iterator over the key-value pairs of a map, with the values being mutable.",null,null],[3,"Keys","","An iterator over the keys of a map.",null,null],[3,"Values","","An iterator over the values of a map.",null,null],[3,"IntoIter","","A consuming iterator over the key-value pairs of a map.",null,null],[3,"Drain","","A draining iterator over the key-value pairs of a map.",null,null],[4,"Entry","","A view into a single entry in a map, which may either be vacant or occupied.",null,null],[13,"Vacant","","A vacant Entry",0,null],[13,"Occupied","","An occupied Entry",0,null],[11,"default","","",1,{"inputs":[],"output":{"name":"self"}}],[11,"hash","","",1,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"new","","Creates an empty `VecMap`.",1,{"inputs":[],"output":{"name":"self"}}],[11,"with_capacity","","Creates an empty `VecMap` with space for at least `capacity` elements before resizing.",1,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"capacity","","Returns the number of elements the `VecMap` can hold without reallocating.",1,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"reserve_len","","Reserves capacity for the given `VecMap` to contain `len` distinct keys. In the case of `VecMap` this means reallocations will not occur as long as all inserted keys are less than `len`.",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"reserve_len_exact","","Reserves the minimum capacity for the given `VecMap` to contain `len` distinct keys. In the case of `VecMap` this means reallocations will not occur as long as all inserted keys are less than `len`.",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"keys","","Returns an iterator visiting all keys in ascending order of the keys. The iterator's element type is `usize`.",1,{"inputs":[{"name":"self"}],"output":{"name":"keys"}}],[11,"values","","Returns an iterator visiting all values in ascending order of the keys. The iterator's element type is `&'r V`.",1,{"inputs":[{"name":"self"}],"output":{"name":"values"}}],[11,"iter","","Returns an iterator visiting all key-value pairs in ascending order of the keys. The iterator's element type is `(usize, &'r V)`.",1,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns an iterator visiting all key-value pairs in ascending order of the keys, with mutable references to the values. The iterator's element type is `(usize, &'r mut V)`.",1,{"inputs":[{"name":"self"}],"output":{"name":"itermut"}}],[11,"append","","Moves all elements from `other` into the map while overwriting existing keys.",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":null}],[11,"split_off","","Splits the collection into two at the given key.",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"drain","","Returns an iterator visiting all key-value pairs in ascending order of the keys, emptying (but not consuming) the original `VecMap`. The iterator's element type is `(usize, &'r V)`. Keeps the allocated memory for reuse.",1,{"inputs":[{"name":"self"}],"output":{"name":"drain"}}],[11,"len","","Returns the number of elements in the map.",1,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the map contains no elements.",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clear","","Clears the map, removing all key-value pairs.",1,{"inputs":[{"name":"self"}],"output":null}],[11,"get","","Returns a reference to the value corresponding to the key.",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"option"}}],[11,"contains_key","","Returns true if the map contains a value for the specified key.",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"option"}}],[11,"insert","","Inserts a key-value pair into the map. If the key already had a value present in the map, that value is returned. Otherwise, `None` is returned.",1,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"option"}}],[11,"remove","","Removes a key from the map, returning the value at the key if the key was previously in the map.",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"option"}}],[11,"entry","","Gets the given key's corresponding entry in the map for in-place manipulation.",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"entry"}}],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns a mutable reference to the value in the entry.",0,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"v"}}],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty, and returns a mutable reference to the value in the entry.",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry with the VacantEntry's key, and returns a mutable reference to it.",2,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"v"}}],[11,"get","","Gets a reference to the value in the entry.",3,{"inputs":[{"name":"self"}],"output":{"name":"v"}}],[11,"get_mut","","Gets a mutable reference to the value in the entry.",3,{"inputs":[{"name":"self"}],"output":{"name":"v"}}],[11,"into_mut","","Converts the entry into a mutable reference to its value.",3,{"inputs":[{"name":"self"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry with the OccupiedEntry's key, and returns the entry's old value.",3,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"v"}}],[11,"remove","","Takes the value of the entry out of the map, and returns it.",3,{"inputs":[{"name":"self"}],"output":{"name":"v"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"clone_from","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":null}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[11,"cmp","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"ordering"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_iter","","",1,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"into_iter","","Returns an iterator visiting all key-value pairs in ascending order of the keys, consuming the original `VecMap`. The iterator's element type is `(usize, &'r V)`.",1,{"inputs":[{"name":"self"}],"output":{"name":"intoiter"}}],[11,"extend","","",1,{"inputs":[{"name":"self"},{"name":"i"}],"output":null}],[11,"extend","","",1,{"inputs":[{"name":"self"},{"name":"i"}],"output":null}],[11,"index","","",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"v"}}],[11,"index","","",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"v"}}],[11,"index_mut","","",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"v"}}],[11,"index_mut","","",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"v"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"next","","",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",4,null],[11,"next_back","","",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",5,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",5,null],[11,"next_back","","",5,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"keys"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"values"}}],[11,"next","","",8,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",8,null],[11,"next_back","","",8,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",6,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",6,null],[11,"next_back","","",6,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",7,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",7,null],[11,"next_back","","",7,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",9,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",9,null],[11,"next_back","","",9,{"inputs":[{"name":"self"}],"output":{"name":"option"}}]],"paths":[[4,"Entry"],[3,"VecMap"],[3,"VacantEntry"],[3,"OccupiedEntry"],[3,"Iter"],[3,"IterMut"],[3,"Keys"],[3,"Values"],[3,"Drain"],[3,"IntoIter"]]};
searchIndex["void"] = {"doc":"Void","items":[[4,"Void","void","The empty type for cases which can't occur.",null,null],[5,"unreachable","","A safe version of `intrinsincs::unreachable`.",null,null],[8,"ResultVoidExt","","Extensions to `Result<T, Void>`",null,null],[10,"void_unwrap","","Get the value out of a wrapper.",0,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[8,"ResultVoidErrExt","","Extensions to `Result<Void, E>`",null,null],[10,"void_unwrap_err","","Get the error out of a wrapper.",1,{"inputs":[{"name":"self"}],"output":{"name":"e"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"void"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"option"}}]],"paths":[[8,"ResultVoidExt"],[8,"ResultVoidErrExt"],[4,"Void"]]};
searchIndex["xcb"] = {"doc":"Rust bindings to the XCB library.","items":[[0,"base","xcb","",null,null],[3,"StructPtr","xcb::base","`StructPtr` is a wrapper for pointer to struct owned by XCB that must not be freed it is instead bound to the lifetime of its parent that it borrows immutably",null,null],[12,"ptr","","",0,null],[3,"Event","","`Event` wraps a pointer to `xcb_*_event_t` this pointer will be freed when the `Event` goes out of scope",null,null],[12,"ptr","","",1,null],[3,"Error","","`Error` wraps a pointer to `xcb_*_error_t` this pointer will be freed when the `Error` goes out of scope",null,null],[12,"ptr","","",2,null],[3,"Cookie","","wraps a cookie as returned by a request function. Instantiations of `Cookie` that are not `VoidCookie` should provide a `get_reply` method to return a `Reply`",null,null],[12,"cookie","","",3,null],[12,"conn","","",3,null],[12,"checked","","",3,null],[3,"Reply","","Wraps a pointer to a `xcb_*_reply_t` the pointer is freed when the `Reply` goes out of scope",null,null],[12,"ptr","","",4,null],[3,"Connection","","xcb::Connection handles communication with the X server. It wraps an `xcb_connection_t` object and will call `xcb_disconnect` when the `Connection` goes out of scope",null,null],[3,"QueryExtensionData","","",null,null],[4,"ConnError","","Error type that is returned by `Connection::has_error`",null,null],[13,"Connection","","xcb connection errors because of socket, pipe and other stream errors.",5,null],[13,"ClosedExtNotSupported","","xcb connection shutdown because of extension not supported",5,null],[13,"ClosedMemInsufficient","","malloc(), calloc() and realloc() error upon failure, for eg ENOMEM",5,null],[13,"ClosedReqLenExceed","","Connection closed, exceeding request length that server accepts.",5,null],[13,"ClosedParseErr","","Connection closed, error during parsing display string.",5,null],[13,"ClosedInvalidScreen","","Connection closed because the server does not have a screen matching the display.",5,null],[13,"ClosedFdPassingFailed","","Connection closed because some FD passing operation failed",5,null],[5,"cast_event","","Casts the generic event to the right event. Assumes that the given event is really the correct type.",null,{"inputs":[{"name":"genericevent"}],"output":{"name":"t"}}],[5,"cast_error","","Casts the generic error to the right error. Assumes that the given error is really the correct type.",null,{"inputs":[{"name":"genericerror"}],"output":{"name":"t"}}],[5,"pack_bitfield","","pack bitfields tuples into vector usable for FFI requests `let values = [ (xcb::CW_EVENT_MASK, xcb::EVENT_MASK_EXPOSURE | xcb::EVENT_MASK_KEY_PRESS), (xcb::CW_BACK_PIXEL, 0xffffffff), ]; let ffi_values = ( xcb::CW_BACK_PIXEL | xcb::CW_EVENT_MASK, [ Oxffffffff, xcb::EVENT_MASK_EXPOSURE | xcb::EVENT_MASK_KEY_PRESS, 0 ] ); assert_eq!(pack_bitfield(&mut values), ffi_values);`",null,null],[6,"Extension","","Opaque type used as key for `Connection::get_extension_data`",null,null],[6,"VoidCookie","","",null,null],[6,"GenericEvent","","",null,null],[6,"GenericError","","",null,null],[6,"GenericReply","","",null,null],[6,"AuthInfo","","",null,null],[6,"ConnResult","","",null,null],[17,"X_PROTOCOL","","Current protocol version",null,null],[17,"X_PROTOCOL_REVISION","","Current minor version",null,null],[17,"X_TCP_PORT","","X_TCP_PORT + display number = server port for TCP transport",null,null],[17,"NONE","","`xcb::NONE` is the universal null resource or null atom parameter value for many core X requests",null,null],[17,"COPY_FROM_PARENT","","`xcb::COPY_FROM_PARENT` can be used for many `xcb::create_window` parameters",null,null],[17,"CURRENT_TIME","","`xcb::CURRENT_TIME` can be used in most requests that take an `xcb::Timestamp`",null,null],[17,"NO_SYMBOL","","`xcb::NO_SYMBOL` fills in unused entries in `xcb::Keysym` tables",null,null],[8,"Zero","","",null,null],[10,"zero","","",6,{"inputs":[],"output":{"name":"self"}}],[11,"response_type","","",1,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"drop","","",1,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"response_type","","",2,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"error_code","","",2,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"drop","","",2,{"inputs":[{"name":"self"}],"output":null}],[11,"request_check","","",7,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"drop","","",4,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"flush","","Forces any buffered output to be written to the server. Blocks until the write is complete.",8,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"get_maximum_request_length","","Returns the maximum request length that this server accepts.",8,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"prefetch_maximum_request_length","","Prefetch the maximum request length without blocking.",8,{"inputs":[{"name":"self"}],"output":null}],[11,"wait_for_event","","Returns the next event or error from the server.",8,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"poll_for_event","","Returns the next event or error from the server.",8,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"poll_for_queued_event","","Returns the next event without reading from the connection.",8,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_setup","","Access the data returned by the server.",8,{"inputs":[{"name":"self"}],"output":{"name":"setup"}}],[11,"has_error","","Test whether the connection has shut down due to a fatal error.",8,{"inputs":[{"name":"self"}],"output":{"name":"connresult"}}],[11,"generate_id","","Allocates an XID for a new object.",8,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_raw_conn","","Returns the inner ffi `xcb_connection_t` pointer",8,null],[11,"prefetch_extension_data","","Prefetch of extension data into the extension cache",8,{"inputs":[{"name":"self"},{"name":"extension"}],"output":null}],[11,"get_extension_data","","Caches reply information from QueryExtension requests.",8,{"inputs":[{"name":"self"},{"name":"extension"}],"output":{"name":"option"}}],[11,"connect","","Connects to the X server. `displayname:` The name of the display.",8,{"inputs":[{"name":"option"}],"output":{"name":"connresult"}}],[11,"connect_with_auth_info","","Connects to the X server, using an authorization information. display: The name of the display. auth_info: The authorization information. screen: A pointer to a preferred screen number. Returns A newly allocated `Connection` structure.",8,{"inputs":[{"name":"option"},{"name":"authinfo"}],"output":{"name":"connresult"}}],[11,"from_raw_conn","","builds a new Connection object from an available connection",8,null],[11,"drop","","",8,{"inputs":[{"name":"self"}],"output":null}],[11,"present","","",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"major_opcode","","",9,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"first_event","","",9,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"first_error","","",9,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[0,"xproto","xcb","",null,null],[3,"RequestError","xcb::xproto","",null,null],[12,"base","","",10,null],[3,"ValueError","","",null,null],[12,"base","","",11,null],[3,"WindowError","","",null,null],[12,"base","","",12,null],[3,"PixmapError","","",null,null],[12,"base","","",13,null],[3,"AtomError","","",null,null],[12,"base","","",14,null],[3,"CursorError","","",null,null],[12,"base","","",15,null],[3,"FontError","","",null,null],[12,"base","","",16,null],[3,"MatchError","","",null,null],[12,"base","","",17,null],[3,"DrawableError","","",null,null],[12,"base","","",18,null],[3,"AccessError","","",null,null],[12,"base","","",19,null],[3,"AllocError","","",null,null],[12,"base","","",20,null],[3,"ColormapError","","",null,null],[12,"base","","",21,null],[3,"GContextError","","",null,null],[12,"base","","",22,null],[3,"IdChoiceError","","",null,null],[12,"base","","",23,null],[3,"NameError","","",null,null],[12,"base","","",24,null],[3,"LengthError","","",null,null],[12,"base","","",25,null],[3,"ImplementationError","","",null,null],[12,"base","","",26,null],[3,"Char2b","","",null,null],[12,"base","","",27,null],[3,"Point","","",null,null],[12,"base","","",28,null],[3,"Rectangle","","",null,null],[12,"base","","",29,null],[3,"Arc","","",null,null],[12,"base","","",30,null],[3,"Format","","",null,null],[12,"base","","",31,null],[3,"Visualtype","","",null,null],[12,"base","","",32,null],[3,"Timecoord","","",null,null],[12,"base","","",33,null],[3,"Fontprop","","",null,null],[12,"base","","",34,null],[3,"Charinfo","","",null,null],[12,"base","","",35,null],[3,"Segment","","",null,null],[12,"base","","",36,null],[3,"Coloritem","","",null,null],[12,"base","","",37,null],[3,"Rgb","","",null,null],[12,"base","","",38,null],[5,"create_window","","Creates a window",null,null],[5,"create_window_checked","","Creates a window",null,null],[5,"change_window_attributes","","change window attributes",null,null],[5,"change_window_attributes_checked","","change window attributes",null,null],[5,"get_window_attributes","","Gets window attributes",null,{"inputs":[{"name":"connection"},{"name":"window"}],"output":{"name":"getwindowattributescookie"}}],[5,"get_window_attributes_unchecked","","Gets window attributes",null,{"inputs":[{"name":"connection"},{"name":"window"}],"output":{"name":"getwindowattributescookie"}}],[5,"destroy_window","","Destroys a window",null,{"inputs":[{"name":"connection"},{"name":"window"}],"output":{"name":"voidcookie"}}],[5,"destroy_window_checked","","Destroys a window",null,{"inputs":[{"name":"connection"},{"name":"window"}],"output":{"name":"voidcookie"}}],[5,"destroy_subwindows","","",null,{"inputs":[{"name":"connection"},{"name":"window"}],"output":{"name":"voidcookie"}}],[5,"destroy_subwindows_checked","","",null,{"inputs":[{"name":"connection"},{"name":"window"}],"output":{"name":"voidcookie"}}],[5,"change_save_set","","Changes a client's save set",null,{"inputs":[{"name":"connection"},{"name":"u8"},{"name":"window"}],"output":{"name":"voidcookie"}}],[5,"change_save_set_checked","","Changes a client's save set",null,{"inputs":[{"name":"connection"},{"name":"u8"},{"name":"window"}],"output":{"name":"voidcookie"}}],[5,"reparent_window","","Reparents a window",null,{"inputs":[{"name":"connection"},{"name":"window"},{"name":"window"},{"name":"i16"},{"name":"i16"}],"output":{"name":"voidcookie"}}],[5,"reparent_window_checked","","Reparents a window",null,{"inputs":[{"name":"connection"},{"name":"window"},{"name":"window"},{"name":"i16"},{"name":"i16"}],"output":{"name":"voidcookie"}}],[5,"map_window","","Makes a window visible",null,{"inputs":[{"name":"connection"},{"name":"window"}],"output":{"name":"voidcookie"}}],[5,"map_window_checked","","Makes a window visible",null,{"inputs":[{"name":"connection"},{"name":"window"}],"output":{"name":"voidcookie"}}],[5,"map_subwindows","","",null,{"inputs":[{"name":"connection"},{"name":"window"}],"output":{"name":"voidcookie"}}],[5,"map_subwindows_checked","","",null,{"inputs":[{"name":"connection"},{"name":"window"}],"output":{"name":"voidcookie"}}],[5,"unmap_window","","Makes a window invisible",null,{"inputs":[{"name":"connection"},{"name":"window"}],"output":{"name":"voidcookie"}}],[5,"unmap_window_checked","","Makes a window invisible",null,{"inputs":[{"name":"connection"},{"name":"window"}],"output":{"name":"voidcookie"}}],[5,"unmap_subwindows","","",null,{"inputs":[{"name":"connection"},{"name":"window"}],"output":{"name":"voidcookie"}}],[5,"unmap_subwindows_checked","","",null,{"inputs":[{"name":"connection"},{"name":"window"}],"output":{"name":"voidcookie"}}],[5,"configure_window","","Configures window attributes",null,null],[5,"configure_window_checked","","Configures window attributes",null,null],[5,"circulate_window","","Change window stacking order",null,{"inputs":[{"name":"connection"},{"name":"u8"},{"name":"window"}],"output":{"name":"voidcookie"}}],[5,"circulate_window_checked","","Change window stacking order",null,{"inputs":[{"name":"connection"},{"name":"u8"},{"name":"window"}],"output":{"name":"voidcookie"}}],[5,"get_geometry","","Get current window geometry",null,{"inputs":[{"name":"connection"},{"name":"drawable"}],"output":{"name":"getgeometrycookie"}}],[5,"get_geometry_unchecked","","Get current window geometry",null,{"inputs":[{"name":"connection"},{"name":"drawable"}],"output":{"name":"getgeometrycookie"}}],[5,"query_tree","","query the window tree",null,{"inputs":[{"name":"connection"},{"name":"window"}],"output":{"name":"querytreecookie"}}],[5,"query_tree_unchecked","","query the window tree",null,{"inputs":[{"name":"connection"},{"name":"window"}],"output":{"name":"querytreecookie"}}],[5,"intern_atom","","Get atom identifier by name",null,{"inputs":[{"name":"connection"},{"name":"bool"},{"name":"str"}],"output":{"name":"internatomcookie"}}],[5,"intern_atom_unchecked","","Get atom identifier by name",null,{"inputs":[{"name":"connection"},{"name":"bool"},{"name":"str"}],"output":{"name":"internatomcookie"}}],[5,"get_atom_name","","",null,{"inputs":[{"name":"connection"},{"name":"atom"}],"output":{"name":"getatomnamecookie"}}],[5,"get_atom_name_unchecked","","",null,{"inputs":[{"name":"connection"},{"name":"atom"}],"output":{"name":"getatomnamecookie"}}],[5,"change_property","","Changes a window property",null,null],[5,"change_property_checked","","Changes a window property",null,null],[5,"delete_property","","",null,{"inputs":[{"name":"connection"},{"name":"window"},{"name":"atom"}],"output":{"name":"voidcookie"}}],[5,"delete_property_checked","","",null,{"inputs":[{"name":"connection"},{"name":"window"},{"name":"atom"}],"output":{"name":"voidcookie"}}],[5,"get_property","","Gets a window property",null,{"inputs":[{"name":"connection"},{"name":"bool"},{"name":"window"},{"name":"atom"},{"name":"atom"},{"name":"u32"},{"name":"u32"}],"output":{"name":"getpropertycookie"}}],[5,"get_property_unchecked","","Gets a window property",null,{"inputs":[{"name":"connection"},{"name":"bool"},{"name":"window"},{"name":"atom"},{"name":"atom"},{"name":"u32"},{"name":"u32"}],"output":{"name":"getpropertycookie"}}],[5,"list_properties","","",null,{"inputs":[{"name":"connection"},{"name":"window"}],"output":{"name":"listpropertiescookie"}}],[5,"list_properties_unchecked","","",null,{"inputs":[{"name":"connection"},{"name":"window"}],"output":{"name":"listpropertiescookie"}}],[5,"set_selection_owner","","Sets the owner of a selection",null,{"inputs":[{"name":"connection"},{"name":"window"},{"name":"atom"},{"name":"timestamp"}],"output":{"name":"voidcookie"}}],[5,"set_selection_owner_checked","","Sets the owner of a selection",null,{"inputs":[{"name":"connection"},{"name":"window"},{"name":"atom"},{"name":"timestamp"}],"output":{"name":"voidcookie"}}],[5,"get_selection_owner","","Gets the owner of a selection",null,{"inputs":[{"name":"connection"},{"name":"atom"}],"output":{"name":"getselectionownercookie"}}],[5,"get_selection_owner_unchecked","","Gets the owner of a selection",null,{"inputs":[{"name":"connection"},{"name":"atom"}],"output":{"name":"getselectionownercookie"}}],[5,"convert_selection","","",null,{"inputs":[{"name":"connection"},{"name":"window"},{"name":"atom"},{"name":"atom"},{"name":"atom"},{"name":"timestamp"}],"output":{"name":"voidcookie"}}],[5,"convert_selection_checked","","",null,{"inputs":[{"name":"connection"},{"name":"window"},{"name":"atom"},{"name":"atom"},{"name":"atom"},{"name":"timestamp"}],"output":{"name":"voidcookie"}}],[5,"send_event","","send an event",null,{"inputs":[{"name":"connection"},{"name":"bool"},{"name":"window"},{"name":"u32"},{"name":"event"}],"output":{"name":"voidcookie"}}],[5,"send_event_checked","","send an event",null,{"inputs":[{"name":"connection"},{"name":"bool"},{"name":"window"},{"name":"u32"},{"name":"event"}],"output":{"name":"voidcookie"}}],[5,"grab_pointer","","Grab the pointer",null,{"inputs":[{"name":"connection"},{"name":"bool"},{"name":"window"},{"name":"u16"},{"name":"u8"},{"name":"u8"},{"name":"window"},{"name":"cursor"},{"name":"timestamp"}],"output":{"name":"grabpointercookie"}}],[5,"grab_pointer_unchecked","","Grab the pointer",null,{"inputs":[{"name":"connection"},{"name":"bool"},{"name":"window"},{"name":"u16"},{"name":"u8"},{"name":"u8"},{"name":"window"},{"name":"cursor"},{"name":"timestamp"}],"output":{"name":"grabpointercookie"}}],[5,"ungrab_pointer","","release the pointer",null,{"inputs":[{"name":"connection"},{"name":"timestamp"}],"output":{"name":"voidcookie"}}],[5,"ungrab_pointer_checked","","release the pointer",null,{"inputs":[{"name":"connection"},{"name":"timestamp"}],"output":{"name":"voidcookie"}}],[5,"grab_button","","Grab pointer button(s)",null,{"inputs":[{"name":"connection"},{"name":"bool"},{"name":"window"},{"name":"u16"},{"name":"u8"},{"name":"u8"},{"name":"window"},{"name":"cursor"},{"name":"u8"},{"name":"u16"}],"output":{"name":"voidcookie"}}],[5,"grab_button_checked","","Grab pointer button(s)",null,{"inputs":[{"name":"connection"},{"name":"bool"},{"name":"window"},{"name":"u16"},{"name":"u8"},{"name":"u8"},{"name":"window"},{"name":"cursor"},{"name":"u8"},{"name":"u16"}],"output":{"name":"voidcookie"}}],[5,"ungrab_button","","",null,{"inputs":[{"name":"connection"},{"name":"u8"},{"name":"window"},{"name":"u16"}],"output":{"name":"voidcookie"}}],[5,"ungrab_button_checked","","",null,{"inputs":[{"name":"connection"},{"name":"u8"},{"name":"window"},{"name":"u16"}],"output":{"name":"voidcookie"}}],[5,"change_active_pointer_grab","","",null,{"inputs":[{"name":"connection"},{"name":"cursor"},{"name":"timestamp"},{"name":"u16"}],"output":{"name":"voidcookie"}}],[5,"change_active_pointer_grab_checked","","",null,{"inputs":[{"name":"connection"},{"name":"cursor"},{"name":"timestamp"},{"name":"u16"}],"output":{"name":"voidcookie"}}],[5,"grab_keyboard","","Grab the keyboard",null,{"inputs":[{"name":"connection"},{"name":"bool"},{"name":"window"},{"name":"timestamp"},{"name":"u8"},{"name":"u8"}],"output":{"name":"grabkeyboardcookie"}}],[5,"grab_keyboard_unchecked","","Grab the keyboard",null,{"inputs":[{"name":"connection"},{"name":"bool"},{"name":"window"},{"name":"timestamp"},{"name":"u8"},{"name":"u8"}],"output":{"name":"grabkeyboardcookie"}}],[5,"ungrab_keyboard","","",null,{"inputs":[{"name":"connection"},{"name":"timestamp"}],"output":{"name":"voidcookie"}}],[5,"ungrab_keyboard_checked","","",null,{"inputs":[{"name":"connection"},{"name":"timestamp"}],"output":{"name":"voidcookie"}}],[5,"grab_key","","Grab keyboard key(s)",null,{"inputs":[{"name":"connection"},{"name":"bool"},{"name":"window"},{"name":"u16"},{"name":"keycode"},{"name":"u8"},{"name":"u8"}],"output":{"name":"voidcookie"}}],[5,"grab_key_checked","","Grab keyboard key(s)",null,{"inputs":[{"name":"connection"},{"name":"bool"},{"name":"window"},{"name":"u16"},{"name":"keycode"},{"name":"u8"},{"name":"u8"}],"output":{"name":"voidcookie"}}],[5,"ungrab_key","","release a key combination",null,{"inputs":[{"name":"connection"},{"name":"keycode"},{"name":"window"},{"name":"u16"}],"output":{"name":"voidcookie"}}],[5,"ungrab_key_checked","","release a key combination",null,{"inputs":[{"name":"connection"},{"name":"keycode"},{"name":"window"},{"name":"u16"}],"output":{"name":"voidcookie"}}],[5,"allow_events","","release queued events",null,{"inputs":[{"name":"connection"},{"name":"u8"},{"name":"timestamp"}],"output":{"name":"voidcookie"}}],[5,"allow_events_checked","","release queued events",null,{"inputs":[{"name":"connection"},{"name":"u8"},{"name":"timestamp"}],"output":{"name":"voidcookie"}}],[5,"grab_server","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"voidcookie"}}],[5,"grab_server_checked","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"voidcookie"}}],[5,"ungrab_server","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"voidcookie"}}],[5,"ungrab_server_checked","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"voidcookie"}}],[5,"query_pointer","","get pointer coordinates",null,{"inputs":[{"name":"connection"},{"name":"window"}],"output":{"name":"querypointercookie"}}],[5,"query_pointer_unchecked","","get pointer coordinates",null,{"inputs":[{"name":"connection"},{"name":"window"}],"output":{"name":"querypointercookie"}}],[5,"get_motion_events","","",null,{"inputs":[{"name":"connection"},{"name":"window"},{"name":"timestamp"},{"name":"timestamp"}],"output":{"name":"getmotioneventscookie"}}],[5,"get_motion_events_unchecked","","",null,{"inputs":[{"name":"connection"},{"name":"window"},{"name":"timestamp"},{"name":"timestamp"}],"output":{"name":"getmotioneventscookie"}}],[5,"translate_coordinates","","",null,{"inputs":[{"name":"connection"},{"name":"window"},{"name":"window"},{"name":"i16"},{"name":"i16"}],"output":{"name":"translatecoordinatescookie"}}],[5,"translate_coordinates_unchecked","","",null,{"inputs":[{"name":"connection"},{"name":"window"},{"name":"window"},{"name":"i16"},{"name":"i16"}],"output":{"name":"translatecoordinatescookie"}}],[5,"warp_pointer","","move mouse pointer",null,{"inputs":[{"name":"connection"},{"name":"window"},{"name":"window"},{"name":"i16"},{"name":"i16"},{"name":"u16"},{"name":"u16"},{"name":"i16"},{"name":"i16"}],"output":{"name":"voidcookie"}}],[5,"warp_pointer_checked","","move mouse pointer",null,{"inputs":[{"name":"connection"},{"name":"window"},{"name":"window"},{"name":"i16"},{"name":"i16"},{"name":"u16"},{"name":"u16"},{"name":"i16"},{"name":"i16"}],"output":{"name":"voidcookie"}}],[5,"set_input_focus","","Sets input focus",null,{"inputs":[{"name":"connection"},{"name":"u8"},{"name":"window"},{"name":"timestamp"}],"output":{"name":"voidcookie"}}],[5,"set_input_focus_checked","","Sets input focus",null,{"inputs":[{"name":"connection"},{"name":"u8"},{"name":"window"},{"name":"timestamp"}],"output":{"name":"voidcookie"}}],[5,"get_input_focus","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"getinputfocuscookie"}}],[5,"get_input_focus_unchecked","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"getinputfocuscookie"}}],[5,"query_keymap","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"querykeymapcookie"}}],[5,"query_keymap_unchecked","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"querykeymapcookie"}}],[5,"open_font","","opens a font",null,{"inputs":[{"name":"connection"},{"name":"font"},{"name":"str"}],"output":{"name":"voidcookie"}}],[5,"open_font_checked","","opens a font",null,{"inputs":[{"name":"connection"},{"name":"font"},{"name":"str"}],"output":{"name":"voidcookie"}}],[5,"close_font","","",null,{"inputs":[{"name":"connection"},{"name":"font"}],"output":{"name":"voidcookie"}}],[5,"close_font_checked","","",null,{"inputs":[{"name":"connection"},{"name":"font"}],"output":{"name":"voidcookie"}}],[5,"query_font","","query font metrics",null,{"inputs":[{"name":"connection"},{"name":"fontable"}],"output":{"name":"queryfontcookie"}}],[5,"query_font_unchecked","","query font metrics",null,{"inputs":[{"name":"connection"},{"name":"fontable"}],"output":{"name":"queryfontcookie"}}],[5,"query_text_extents","","get text extents",null,null],[5,"query_text_extents_unchecked","","get text extents",null,null],[5,"list_fonts","","get matching font names",null,{"inputs":[{"name":"connection"},{"name":"u16"},{"name":"str"}],"output":{"name":"listfontscookie"}}],[5,"list_fonts_unchecked","","get matching font names",null,{"inputs":[{"name":"connection"},{"name":"u16"},{"name":"str"}],"output":{"name":"listfontscookie"}}],[5,"list_fonts_with_info","","get matching font names and information",null,{"inputs":[{"name":"connection"},{"name":"u16"},{"name":"str"}],"output":{"name":"listfontswithinfocookie"}}],[5,"list_fonts_with_info_unchecked","","get matching font names and information",null,{"inputs":[{"name":"connection"},{"name":"u16"},{"name":"str"}],"output":{"name":"listfontswithinfocookie"}}],[5,"set_font_path","","",null,null],[5,"set_font_path_checked","","",null,null],[5,"get_font_path","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"getfontpathcookie"}}],[5,"get_font_path_unchecked","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"getfontpathcookie"}}],[5,"create_pixmap","","Creates a pixmap",null,{"inputs":[{"name":"connection"},{"name":"u8"},{"name":"pixmap"},{"name":"drawable"},{"name":"u16"},{"name":"u16"}],"output":{"name":"voidcookie"}}],[5,"create_pixmap_checked","","Creates a pixmap",null,{"inputs":[{"name":"connection"},{"name":"u8"},{"name":"pixmap"},{"name":"drawable"},{"name":"u16"},{"name":"u16"}],"output":{"name":"voidcookie"}}],[5,"free_pixmap","","Destroys a pixmap",null,{"inputs":[{"name":"connection"},{"name":"pixmap"}],"output":{"name":"voidcookie"}}],[5,"free_pixmap_checked","","Destroys a pixmap",null,{"inputs":[{"name":"connection"},{"name":"pixmap"}],"output":{"name":"voidcookie"}}],[5,"create_gc","","Creates a graphics context",null,null],[5,"create_gc_checked","","Creates a graphics context",null,null],[5,"change_gc","","change graphics context components",null,null],[5,"change_gc_checked","","change graphics context components",null,null],[5,"copy_gc","","",null,{"inputs":[{"name":"connection"},{"name":"gcontext"},{"name":"gcontext"},{"name":"u32"}],"output":{"name":"voidcookie"}}],[5,"copy_gc_checked","","",null,{"inputs":[{"name":"connection"},{"name":"gcontext"},{"name":"gcontext"},{"name":"u32"}],"output":{"name":"voidcookie"}}],[5,"set_dashes","","",null,null],[5,"set_dashes_checked","","",null,null],[5,"set_clip_rectangles","","",null,null],[5,"set_clip_rectangles_checked","","",null,null],[5,"free_gc","","Destroys a graphics context",null,{"inputs":[{"name":"connection"},{"name":"gcontext"}],"output":{"name":"voidcookie"}}],[5,"free_gc_checked","","Destroys a graphics context",null,{"inputs":[{"name":"connection"},{"name":"gcontext"}],"output":{"name":"voidcookie"}}],[5,"clear_area","","",null,{"inputs":[{"name":"connection"},{"name":"bool"},{"name":"window"},{"name":"i16"},{"name":"i16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"voidcookie"}}],[5,"clear_area_checked","","",null,{"inputs":[{"name":"connection"},{"name":"bool"},{"name":"window"},{"name":"i16"},{"name":"i16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"voidcookie"}}],[5,"copy_area","","copy areas",null,{"inputs":[{"name":"connection"},{"name":"drawable"},{"name":"drawable"},{"name":"gcontext"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"voidcookie"}}],[5,"copy_area_checked","","copy areas",null,{"inputs":[{"name":"connection"},{"name":"drawable"},{"name":"drawable"},{"name":"gcontext"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"voidcookie"}}],[5,"copy_plane","","",null,{"inputs":[{"name":"connection"},{"name":"drawable"},{"name":"drawable"},{"name":"gcontext"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"u16"},{"name":"u16"},{"name":"u32"}],"output":{"name":"voidcookie"}}],[5,"copy_plane_checked","","",null,{"inputs":[{"name":"connection"},{"name":"drawable"},{"name":"drawable"},{"name":"gcontext"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"u16"},{"name":"u16"},{"name":"u32"}],"output":{"name":"voidcookie"}}],[5,"poly_point","","",null,null],[5,"poly_point_checked","","",null,null],[5,"poly_line","","draw lines",null,null],[5,"poly_line_checked","","draw lines",null,null],[5,"poly_segment","","draw lines",null,null],[5,"poly_segment_checked","","draw lines",null,null],[5,"poly_rectangle","","",null,null],[5,"poly_rectangle_checked","","",null,null],[5,"poly_arc","","",null,null],[5,"poly_arc_checked","","",null,null],[5,"fill_poly","","",null,null],[5,"fill_poly_checked","","",null,null],[5,"poly_fill_rectangle","","Fills rectangles",null,null],[5,"poly_fill_rectangle_checked","","Fills rectangles",null,null],[5,"poly_fill_arc","","",null,null],[5,"poly_fill_arc_checked","","",null,null],[5,"put_image","","",null,null],[5,"put_image_checked","","",null,null],[5,"get_image","","",null,{"inputs":[{"name":"connection"},{"name":"u8"},{"name":"drawable"},{"name":"i16"},{"name":"i16"},{"name":"u16"},{"name":"u16"},{"name":"u32"}],"output":{"name":"getimagecookie"}}],[5,"get_image_unchecked","","",null,{"inputs":[{"name":"connection"},{"name":"u8"},{"name":"drawable"},{"name":"i16"},{"name":"i16"},{"name":"u16"},{"name":"u16"},{"name":"u32"}],"output":{"name":"getimagecookie"}}],[5,"poly_text_8","","",null,null],[5,"poly_text_8_checked","","",null,null],[5,"poly_text_16","","",null,null],[5,"poly_text_16_checked","","",null,null],[5,"image_text_8","","Draws text",null,{"inputs":[{"name":"connection"},{"name":"drawable"},{"name":"gcontext"},{"name":"i16"},{"name":"i16"},{"name":"str"}],"output":{"name":"voidcookie"}}],[5,"image_text_8_checked","","Draws text",null,{"inputs":[{"name":"connection"},{"name":"drawable"},{"name":"gcontext"},{"name":"i16"},{"name":"i16"},{"name":"str"}],"output":{"name":"voidcookie"}}],[5,"image_text_16","","Draws text",null,null],[5,"image_text_16_checked","","Draws text",null,null],[5,"create_colormap","","",null,{"inputs":[{"name":"connection"},{"name":"u8"},{"name":"colormap"},{"name":"window"},{"name":"visualid"}],"output":{"name":"voidcookie"}}],[5,"create_colormap_checked","","",null,{"inputs":[{"name":"connection"},{"name":"u8"},{"name":"colormap"},{"name":"window"},{"name":"visualid"}],"output":{"name":"voidcookie"}}],[5,"free_colormap","","",null,{"inputs":[{"name":"connection"},{"name":"colormap"}],"output":{"name":"voidcookie"}}],[5,"free_colormap_checked","","",null,{"inputs":[{"name":"connection"},{"name":"colormap"}],"output":{"name":"voidcookie"}}],[5,"copy_colormap_and_free","","",null,{"inputs":[{"name":"connection"},{"name":"colormap"},{"name":"colormap"}],"output":{"name":"voidcookie"}}],[5,"copy_colormap_and_free_checked","","",null,{"inputs":[{"name":"connection"},{"name":"colormap"},{"name":"colormap"}],"output":{"name":"voidcookie"}}],[5,"install_colormap","","",null,{"inputs":[{"name":"connection"},{"name":"colormap"}],"output":{"name":"voidcookie"}}],[5,"install_colormap_checked","","",null,{"inputs":[{"name":"connection"},{"name":"colormap"}],"output":{"name":"voidcookie"}}],[5,"uninstall_colormap","","",null,{"inputs":[{"name":"connection"},{"name":"colormap"}],"output":{"name":"voidcookie"}}],[5,"uninstall_colormap_checked","","",null,{"inputs":[{"name":"connection"},{"name":"colormap"}],"output":{"name":"voidcookie"}}],[5,"list_installed_colormaps","","",null,{"inputs":[{"name":"connection"},{"name":"window"}],"output":{"name":"listinstalledcolormapscookie"}}],[5,"list_installed_colormaps_unchecked","","",null,{"inputs":[{"name":"connection"},{"name":"window"}],"output":{"name":"listinstalledcolormapscookie"}}],[5,"alloc_color","","Allocate a color",null,{"inputs":[{"name":"connection"},{"name":"colormap"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"alloccolorcookie"}}],[5,"alloc_color_unchecked","","Allocate a color",null,{"inputs":[{"name":"connection"},{"name":"colormap"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"alloccolorcookie"}}],[5,"alloc_named_color","","",null,{"inputs":[{"name":"connection"},{"name":"colormap"},{"name":"str"}],"output":{"name":"allocnamedcolorcookie"}}],[5,"alloc_named_color_unchecked","","",null,{"inputs":[{"name":"connection"},{"name":"colormap"},{"name":"str"}],"output":{"name":"allocnamedcolorcookie"}}],[5,"alloc_color_cells","","",null,{"inputs":[{"name":"connection"},{"name":"bool"},{"name":"colormap"},{"name":"u16"},{"name":"u16"}],"output":{"name":"alloccolorcellscookie"}}],[5,"alloc_color_cells_unchecked","","",null,{"inputs":[{"name":"connection"},{"name":"bool"},{"name":"colormap"},{"name":"u16"},{"name":"u16"}],"output":{"name":"alloccolorcellscookie"}}],[5,"alloc_color_planes","","",null,{"inputs":[{"name":"connection"},{"name":"bool"},{"name":"colormap"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"alloccolorplanescookie"}}],[5,"alloc_color_planes_unchecked","","",null,{"inputs":[{"name":"connection"},{"name":"bool"},{"name":"colormap"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"alloccolorplanescookie"}}],[5,"free_colors","","",null,null],[5,"free_colors_checked","","",null,null],[5,"store_colors","","",null,null],[5,"store_colors_checked","","",null,null],[5,"store_named_color","","",null,{"inputs":[{"name":"connection"},{"name":"u8"},{"name":"colormap"},{"name":"u32"},{"name":"str"}],"output":{"name":"voidcookie"}}],[5,"store_named_color_checked","","",null,{"inputs":[{"name":"connection"},{"name":"u8"},{"name":"colormap"},{"name":"u32"},{"name":"str"}],"output":{"name":"voidcookie"}}],[5,"query_colors","","",null,null],[5,"query_colors_unchecked","","",null,null],[5,"lookup_color","","",null,{"inputs":[{"name":"connection"},{"name":"colormap"},{"name":"str"}],"output":{"name":"lookupcolorcookie"}}],[5,"lookup_color_unchecked","","",null,{"inputs":[{"name":"connection"},{"name":"colormap"},{"name":"str"}],"output":{"name":"lookupcolorcookie"}}],[5,"create_cursor","","",null,{"inputs":[{"name":"connection"},{"name":"cursor"},{"name":"pixmap"},{"name":"pixmap"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"voidcookie"}}],[5,"create_cursor_checked","","",null,{"inputs":[{"name":"connection"},{"name":"cursor"},{"name":"pixmap"},{"name":"pixmap"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"voidcookie"}}],[5,"create_glyph_cursor","","create cursor",null,{"inputs":[{"name":"connection"},{"name":"cursor"},{"name":"font"},{"name":"font"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"voidcookie"}}],[5,"create_glyph_cursor_checked","","create cursor",null,{"inputs":[{"name":"connection"},{"name":"cursor"},{"name":"font"},{"name":"font"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"voidcookie"}}],[5,"free_cursor","","Deletes a cursor",null,{"inputs":[{"name":"connection"},{"name":"cursor"}],"output":{"name":"voidcookie"}}],[5,"free_cursor_checked","","Deletes a cursor",null,{"inputs":[{"name":"connection"},{"name":"cursor"}],"output":{"name":"voidcookie"}}],[5,"recolor_cursor","","",null,{"inputs":[{"name":"connection"},{"name":"cursor"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"voidcookie"}}],[5,"recolor_cursor_checked","","",null,{"inputs":[{"name":"connection"},{"name":"cursor"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"voidcookie"}}],[5,"query_best_size","","",null,{"inputs":[{"name":"connection"},{"name":"u8"},{"name":"drawable"},{"name":"u16"},{"name":"u16"}],"output":{"name":"querybestsizecookie"}}],[5,"query_best_size_unchecked","","",null,{"inputs":[{"name":"connection"},{"name":"u8"},{"name":"drawable"},{"name":"u16"},{"name":"u16"}],"output":{"name":"querybestsizecookie"}}],[5,"query_extension","","check if extension is present",null,{"inputs":[{"name":"connection"},{"name":"str"}],"output":{"name":"queryextensioncookie"}}],[5,"query_extension_unchecked","","check if extension is present",null,{"inputs":[{"name":"connection"},{"name":"str"}],"output":{"name":"queryextensioncookie"}}],[5,"list_extensions","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"listextensionscookie"}}],[5,"list_extensions_unchecked","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"listextensionscookie"}}],[5,"change_keyboard_mapping","","",null,null],[5,"change_keyboard_mapping_checked","","",null,null],[5,"get_keyboard_mapping","","",null,{"inputs":[{"name":"connection"},{"name":"keycode"},{"name":"u8"}],"output":{"name":"getkeyboardmappingcookie"}}],[5,"get_keyboard_mapping_unchecked","","",null,{"inputs":[{"name":"connection"},{"name":"keycode"},{"name":"u8"}],"output":{"name":"getkeyboardmappingcookie"}}],[5,"change_keyboard_control","","",null,null],[5,"change_keyboard_control_checked","","",null,null],[5,"get_keyboard_control","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"getkeyboardcontrolcookie"}}],[5,"get_keyboard_control_unchecked","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"getkeyboardcontrolcookie"}}],[5,"bell","","",null,{"inputs":[{"name":"connection"},{"name":"i8"}],"output":{"name":"voidcookie"}}],[5,"bell_checked","","",null,{"inputs":[{"name":"connection"},{"name":"i8"}],"output":{"name":"voidcookie"}}],[5,"change_pointer_control","","",null,{"inputs":[{"name":"connection"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"bool"},{"name":"bool"}],"output":{"name":"voidcookie"}}],[5,"change_pointer_control_checked","","",null,{"inputs":[{"name":"connection"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"bool"},{"name":"bool"}],"output":{"name":"voidcookie"}}],[5,"get_pointer_control","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"getpointercontrolcookie"}}],[5,"get_pointer_control_unchecked","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"getpointercontrolcookie"}}],[5,"set_screen_saver","","",null,{"inputs":[{"name":"connection"},{"name":"i16"},{"name":"i16"},{"name":"u8"},{"name":"u8"}],"output":{"name":"voidcookie"}}],[5,"set_screen_saver_checked","","",null,{"inputs":[{"name":"connection"},{"name":"i16"},{"name":"i16"},{"name":"u8"},{"name":"u8"}],"output":{"name":"voidcookie"}}],[5,"get_screen_saver","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"getscreensavercookie"}}],[5,"get_screen_saver_unchecked","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"getscreensavercookie"}}],[5,"change_hosts","","",null,null],[5,"change_hosts_checked","","",null,null],[5,"list_hosts","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"listhostscookie"}}],[5,"list_hosts_unchecked","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"listhostscookie"}}],[5,"set_access_control","","",null,{"inputs":[{"name":"connection"},{"name":"u8"}],"output":{"name":"voidcookie"}}],[5,"set_access_control_checked","","",null,{"inputs":[{"name":"connection"},{"name":"u8"}],"output":{"name":"voidcookie"}}],[5,"set_close_down_mode","","",null,{"inputs":[{"name":"connection"},{"name":"u8"}],"output":{"name":"voidcookie"}}],[5,"set_close_down_mode_checked","","",null,{"inputs":[{"name":"connection"},{"name":"u8"}],"output":{"name":"voidcookie"}}],[5,"kill_client","","kills a client",null,{"inputs":[{"name":"connection"},{"name":"u32"}],"output":{"name":"voidcookie"}}],[5,"kill_client_checked","","kills a client",null,{"inputs":[{"name":"connection"},{"name":"u32"}],"output":{"name":"voidcookie"}}],[5,"rotate_properties","","",null,null],[5,"rotate_properties_checked","","",null,null],[5,"force_screen_saver","","",null,{"inputs":[{"name":"connection"},{"name":"u8"}],"output":{"name":"voidcookie"}}],[5,"force_screen_saver_checked","","",null,{"inputs":[{"name":"connection"},{"name":"u8"}],"output":{"name":"voidcookie"}}],[5,"set_pointer_mapping","","",null,null],[5,"set_pointer_mapping_unchecked","","",null,null],[5,"get_pointer_mapping","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"getpointermappingcookie"}}],[5,"get_pointer_mapping_unchecked","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"getpointermappingcookie"}}],[5,"set_modifier_mapping","","",null,null],[5,"set_modifier_mapping_unchecked","","",null,null],[5,"get_modifier_mapping","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"getmodifiermappingcookie"}}],[5,"get_modifier_mapping_unchecked","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"getmodifiermappingcookie"}}],[5,"no_operation","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"voidcookie"}}],[5,"no_operation_checked","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"voidcookie"}}],[6,"Window","","",null,null],[6,"Pixmap","","",null,null],[6,"Cursor","","",null,null],[6,"Font","","",null,null],[6,"Gcontext","","",null,null],[6,"Colormap","","",null,null],[6,"Atom","","",null,null],[6,"Drawable","","",null,null],[6,"Fontable","","",null,null],[6,"Visualid","","",null,null],[6,"Timestamp","","",null,null],[6,"Keysym","","",null,null],[6,"Keycode","","",null,null],[6,"Button","","",null,null],[6,"VisualClass","","",null,null],[6,"EventMask","","",null,null],[6,"BackingStore","","",null,null],[6,"ImageOrder","","",null,null],[6,"ModMask","","",null,null],[6,"KeyButMask","","",null,null],[6,"WindowEnum","","",null,null],[6,"ButtonMask","","",null,null],[6,"Motion","","",null,null],[6,"NotifyDetail","","",null,null],[6,"NotifyMode","","",null,null],[6,"Visibility","","",null,null],[6,"Place","","",null,null],[6,"Property","","",null,null],[6,"Time","","",null,null],[6,"AtomEnum","","",null,null],[6,"ColormapState","","",null,null],[6,"ColormapEnum","","",null,null],[6,"Mapping","","",null,null],[6,"WindowClass","","",null,null],[6,"Cw","","",null,null],[6,"BackPixmap","","",null,null],[6,"Gravity","","",null,null],[6,"MapState","","",null,null],[6,"SetMode","","",null,null],[6,"ConfigWindow","","",null,null],[6,"StackMode","","",null,null],[6,"Circulate","","",null,null],[6,"PropMode","","",null,null],[6,"GetPropertyType","","",null,null],[6,"SendEventDest","","",null,null],[6,"GrabMode","","",null,null],[6,"GrabStatus","","",null,null],[6,"CursorEnum","","",null,null],[6,"ButtonIndex","","",null,null],[6,"Grab","","",null,null],[6,"Allow","","",null,null],[6,"InputFocus","","",null,null],[6,"FontDraw","","",null,null],[6,"Gc","","",null,null],[6,"Gx","","",null,null],[6,"LineStyle","","",null,null],[6,"CapStyle","","",null,null],[6,"JoinStyle","","",null,null],[6,"FillStyle","","",null,null],[6,"FillRule","","",null,null],[6,"SubwindowMode","","",null,null],[6,"ArcMode","","",null,null],[6,"ClipOrdering","","",null,null],[6,"CoordMode","","",null,null],[6,"PolyShape","","",null,null],[6,"ImageFormat","","",null,null],[6,"ColormapAlloc","","",null,null],[6,"ColorFlag","","",null,null],[6,"PixmapEnum","","",null,null],[6,"FontEnum","","",null,null],[6,"QueryShapeOf","","",null,null],[6,"Kb","","",null,null],[6,"LedMode","","",null,null],[6,"AutoRepeatMode","","",null,null],[6,"Blanking","","",null,null],[6,"Exposures","","",null,null],[6,"HostMode","","",null,null],[6,"Family","","",null,null],[6,"AccessControl","","",null,null],[6,"CloseDown","","",null,null],[6,"Kill","","",null,null],[6,"ScreenSaver","","",null,null],[6,"MappingStatus","","",null,null],[6,"MapIndex","","",null,null],[6,"Char2bIterator","","",null,null],[6,"PointIterator","","",null,null],[6,"RectangleIterator","","",null,null],[6,"ArcIterator","","",null,null],[6,"FormatIterator","","",null,null],[6,"VisualtypeIterator","","",null,null],[6,"Depth","","",null,null],[6,"DepthIterator","","",null,null],[6,"Screen","","",null,null],[6,"ScreenIterator","","",null,null],[6,"SetupRequest","","",null,null],[6,"SetupRequestIterator","","",null,null],[6,"SetupFailed","","",null,null],[6,"SetupFailedIterator","","",null,null],[6,"SetupAuthenticate","","",null,null],[6,"SetupAuthenticateIterator","","",null,null],[6,"Setup","","",null,null],[6,"SetupIterator","","",null,null],[6,"KeyPressEvent","","a key was pressed/released",null,null],[6,"KeyReleaseEvent","","a key was pressed/released",null,null],[6,"ButtonPressEvent","","a mouse button was pressed/released",null,null],[6,"ButtonReleaseEvent","","a mouse button was pressed/released",null,null],[6,"MotionNotifyEvent","","a key was pressed",null,null],[6,"EnterNotifyEvent","","the pointer is in a different window",null,null],[6,"LeaveNotifyEvent","","the pointer is in a different window",null,null],[6,"FocusInEvent","","NOT YET DOCUMENTED",null,null],[6,"FocusOutEvent","","NOT YET DOCUMENTED",null,null],[6,"KeymapNotifyEvent","","",null,null],[6,"ExposeEvent","","NOT YET DOCUMENTED",null,null],[6,"GraphicsExposureEvent","","",null,null],[6,"NoExposureEvent","","",null,null],[6,"VisibilityNotifyEvent","","",null,null],[6,"CreateNotifyEvent","","",null,null],[6,"DestroyNotifyEvent","","a window is destroyed",null,null],[6,"UnmapNotifyEvent","","a window is unmapped",null,null],[6,"MapNotifyEvent","","a window was mapped",null,null],[6,"MapRequestEvent","","window wants to be mapped",null,null],[6,"ReparentNotifyEvent","","",null,null],[6,"ConfigureNotifyEvent","","NOT YET DOCUMENTED",null,null],[6,"ConfigureRequestEvent","","",null,null],[6,"GravityNotifyEvent","","",null,null],[6,"ResizeRequestEvent","","",null,null],[6,"CirculateNotifyEvent","","NOT YET DOCUMENTED",null,null],[6,"CirculateRequestEvent","","NOT YET DOCUMENTED",null,null],[6,"PropertyNotifyEvent","","a window property changed",null,null],[6,"SelectionClearEvent","","",null,null],[6,"SelectionRequestEvent","","",null,null],[6,"SelectionNotifyEvent","","",null,null],[6,"ColormapNotifyEvent","","the colormap for some window changed",null,null],[6,"ClientMessageData","","",null,null],[6,"ClientMessageDataIterator","","",null,null],[6,"ClientMessageEvent","","NOT YET DOCUMENTED",null,null],[6,"MappingNotifyEvent","","keyboard mapping changed",null,null],[6,"GeGenericEvent","","generic event (with length)",null,null],[6,"GetWindowAttributesCookie","","",null,null],[6,"GetWindowAttributesReply","","",null,null],[6,"GetGeometryCookie","","",null,null],[6,"GetGeometryReply","","",null,null],[6,"QueryTreeCookie","","",null,null],[6,"QueryTreeReply","","",null,null],[6,"InternAtomCookie","","",null,null],[6,"InternAtomReply","","",null,null],[6,"GetAtomNameCookie","","",null,null],[6,"GetAtomNameReply","","",null,null],[6,"GetPropertyCookie","","",null,null],[6,"GetPropertyReply","","",null,null],[6,"ListPropertiesCookie","","",null,null],[6,"ListPropertiesReply","","",null,null],[6,"GetSelectionOwnerCookie","","",null,null],[6,"GetSelectionOwnerReply","","",null,null],[6,"GrabPointerCookie","","",null,null],[6,"GrabPointerReply","","",null,null],[6,"GrabKeyboardCookie","","",null,null],[6,"GrabKeyboardReply","","",null,null],[6,"QueryPointerCookie","","",null,null],[6,"QueryPointerReply","","",null,null],[6,"TimecoordIterator","","",null,null],[6,"GetMotionEventsCookie","","",null,null],[6,"GetMotionEventsReply","","",null,null],[6,"TranslateCoordinatesCookie","","",null,null],[6,"TranslateCoordinatesReply","","",null,null],[6,"GetInputFocusCookie","","",null,null],[6,"GetInputFocusReply","","",null,null],[6,"QueryKeymapCookie","","",null,null],[6,"QueryKeymapReply","","",null,null],[6,"FontpropIterator","","",null,null],[6,"CharinfoIterator","","",null,null],[6,"QueryFontCookie","","",null,null],[6,"QueryFontReply","","",null,null],[6,"QueryTextExtentsCookie","","",null,null],[6,"QueryTextExtentsReply","","",null,null],[6,"Str","","",null,null],[6,"StrIterator","","",null,null],[6,"ListFontsCookie","","",null,null],[6,"ListFontsReply","","",null,null],[6,"ListFontsWithInfoCookie","","",null,null],[6,"ListFontsWithInfoReply","","",null,null],[6,"GetFontPathCookie","","",null,null],[6,"GetFontPathReply","","",null,null],[6,"SegmentIterator","","",null,null],[6,"GetImageCookie","","",null,null],[6,"GetImageReply","","",null,null],[6,"ListInstalledColormapsCookie","","",null,null],[6,"ListInstalledColormapsReply","","",null,null],[6,"AllocColorCookie","","",null,null],[6,"AllocColorReply","","",null,null],[6,"AllocNamedColorCookie","","",null,null],[6,"AllocNamedColorReply","","",null,null],[6,"AllocColorCellsCookie","","",null,null],[6,"AllocColorCellsReply","","",null,null],[6,"AllocColorPlanesCookie","","",null,null],[6,"AllocColorPlanesReply","","",null,null],[6,"ColoritemIterator","","",null,null],[6,"RgbIterator","","",null,null],[6,"QueryColorsCookie","","",null,null],[6,"QueryColorsReply","","",null,null],[6,"LookupColorCookie","","",null,null],[6,"LookupColorReply","","",null,null],[6,"QueryBestSizeCookie","","",null,null],[6,"QueryBestSizeReply","","",null,null],[6,"QueryExtensionCookie","","",null,null],[6,"QueryExtensionReply","","",null,null],[6,"ListExtensionsCookie","","",null,null],[6,"ListExtensionsReply","","",null,null],[6,"GetKeyboardMappingCookie","","",null,null],[6,"GetKeyboardMappingReply","","",null,null],[6,"GetKeyboardControlCookie","","",null,null],[6,"GetKeyboardControlReply","","",null,null],[6,"GetPointerControlCookie","","",null,null],[6,"GetPointerControlReply","","",null,null],[6,"GetScreenSaverCookie","","",null,null],[6,"GetScreenSaverReply","","",null,null],[6,"Host","","",null,null],[6,"HostIterator","","",null,null],[6,"ListHostsCookie","","",null,null],[6,"ListHostsReply","","",null,null],[6,"SetPointerMappingCookie","","",null,null],[6,"SetPointerMappingReply","","",null,null],[6,"GetPointerMappingCookie","","",null,null],[6,"GetPointerMappingReply","","",null,null],[6,"SetModifierMappingCookie","","",null,null],[6,"SetModifierMappingReply","","",null,null],[6,"GetModifierMappingCookie","","",null,null],[6,"GetModifierMappingReply","","",null,null],[17,"VISUAL_CLASS_STATIC_GRAY","","",null,null],[17,"VISUAL_CLASS_GRAY_SCALE","","",null,null],[17,"VISUAL_CLASS_STATIC_COLOR","","",null,null],[17,"VISUAL_CLASS_PSEUDO_COLOR","","",null,null],[17,"VISUAL_CLASS_TRUE_COLOR","","",null,null],[17,"VISUAL_CLASS_DIRECT_COLOR","","",null,null],[17,"EVENT_MASK_NO_EVENT","","",null,null],[17,"EVENT_MASK_KEY_PRESS","","",null,null],[17,"EVENT_MASK_KEY_RELEASE","","",null,null],[17,"EVENT_MASK_BUTTON_PRESS","","",null,null],[17,"EVENT_MASK_BUTTON_RELEASE","","",null,null],[17,"EVENT_MASK_ENTER_WINDOW","","",null,null],[17,"EVENT_MASK_LEAVE_WINDOW","","",null,null],[17,"EVENT_MASK_POINTER_MOTION","","",null,null],[17,"EVENT_MASK_POINTER_MOTION_HINT","","",null,null],[17,"EVENT_MASK_BUTTON_1_MOTION","","",null,null],[17,"EVENT_MASK_BUTTON_2_MOTION","","",null,null],[17,"EVENT_MASK_BUTTON_3_MOTION","","",null,null],[17,"EVENT_MASK_BUTTON_4_MOTION","","",null,null],[17,"EVENT_MASK_BUTTON_5_MOTION","","",null,null],[17,"EVENT_MASK_BUTTON_MOTION","","",null,null],[17,"EVENT_MASK_KEYMAP_STATE","","",null,null],[17,"EVENT_MASK_EXPOSURE","","",null,null],[17,"EVENT_MASK_VISIBILITY_CHANGE","","",null,null],[17,"EVENT_MASK_STRUCTURE_NOTIFY","","",null,null],[17,"EVENT_MASK_RESIZE_REDIRECT","","",null,null],[17,"EVENT_MASK_SUBSTRUCTURE_NOTIFY","","",null,null],[17,"EVENT_MASK_SUBSTRUCTURE_REDIRECT","","",null,null],[17,"EVENT_MASK_FOCUS_CHANGE","","",null,null],[17,"EVENT_MASK_PROPERTY_CHANGE","","",null,null],[17,"EVENT_MASK_COLOR_MAP_CHANGE","","",null,null],[17,"EVENT_MASK_OWNER_GRAB_BUTTON","","",null,null],[17,"BACKING_STORE_NOT_USEFUL","","",null,null],[17,"BACKING_STORE_WHEN_MAPPED","","",null,null],[17,"BACKING_STORE_ALWAYS","","",null,null],[17,"IMAGE_ORDER_LSB_FIRST","","",null,null],[17,"IMAGE_ORDER_MSB_FIRST","","",null,null],[17,"MOD_MASK_SHIFT","","",null,null],[17,"MOD_MASK_LOCK","","",null,null],[17,"MOD_MASK_CONTROL","","",null,null],[17,"MOD_MASK_1","","",null,null],[17,"MOD_MASK_2","","",null,null],[17,"MOD_MASK_3","","",null,null],[17,"MOD_MASK_4","","",null,null],[17,"MOD_MASK_5","","",null,null],[17,"MOD_MASK_ANY","","",null,null],[17,"KEY_BUT_MASK_SHIFT","","",null,null],[17,"KEY_BUT_MASK_LOCK","","",null,null],[17,"KEY_BUT_MASK_CONTROL","","",null,null],[17,"KEY_BUT_MASK_MOD_1","","",null,null],[17,"KEY_BUT_MASK_MOD_2","","",null,null],[17,"KEY_BUT_MASK_MOD_3","","",null,null],[17,"KEY_BUT_MASK_MOD_4","","",null,null],[17,"KEY_BUT_MASK_MOD_5","","",null,null],[17,"KEY_BUT_MASK_BUTTON_1","","",null,null],[17,"KEY_BUT_MASK_BUTTON_2","","",null,null],[17,"KEY_BUT_MASK_BUTTON_3","","",null,null],[17,"KEY_BUT_MASK_BUTTON_4","","",null,null],[17,"KEY_BUT_MASK_BUTTON_5","","",null,null],[17,"WINDOW_NONE","","",null,null],[17,"BUTTON_MASK_1","","",null,null],[17,"BUTTON_MASK_2","","",null,null],[17,"BUTTON_MASK_3","","",null,null],[17,"BUTTON_MASK_4","","",null,null],[17,"BUTTON_MASK_5","","",null,null],[17,"BUTTON_MASK_ANY","","",null,null],[17,"MOTION_NORMAL","","",null,null],[17,"MOTION_HINT","","",null,null],[17,"NOTIFY_DETAIL_ANCESTOR","","",null,null],[17,"NOTIFY_DETAIL_VIRTUAL","","",null,null],[17,"NOTIFY_DETAIL_INFERIOR","","",null,null],[17,"NOTIFY_DETAIL_NONLINEAR","","",null,null],[17,"NOTIFY_DETAIL_NONLINEAR_VIRTUAL","","",null,null],[17,"NOTIFY_DETAIL_POINTER","","",null,null],[17,"NOTIFY_DETAIL_POINTER_ROOT","","",null,null],[17,"NOTIFY_DETAIL_NONE","","",null,null],[17,"NOTIFY_MODE_NORMAL","","",null,null],[17,"NOTIFY_MODE_GRAB","","",null,null],[17,"NOTIFY_MODE_UNGRAB","","",null,null],[17,"NOTIFY_MODE_WHILE_GRABBED","","",null,null],[17,"VISIBILITY_UNOBSCURED","","",null,null],[17,"VISIBILITY_PARTIALLY_OBSCURED","","",null,null],[17,"VISIBILITY_FULLY_OBSCURED","","",null,null],[17,"PLACE_ON_TOP","","The window is now on top of all siblings.",null,null],[17,"PLACE_ON_BOTTOM","","The window is now below all siblings.",null,null],[17,"PROPERTY_NEW_VALUE","","",null,null],[17,"PROPERTY_DELETE","","",null,null],[17,"TIME_CURRENT_TIME","","",null,null],[17,"ATOM_NONE","","",null,null],[17,"ATOM_ANY","","",null,null],[17,"ATOM_PRIMARY","","",null,null],[17,"ATOM_SECONDARY","","",null,null],[17,"ATOM_ARC","","",null,null],[17,"ATOM_ATOM","","",null,null],[17,"ATOM_BITMAP","","",null,null],[17,"ATOM_CARDINAL","","",null,null],[17,"ATOM_COLORMAP","","",null,null],[17,"ATOM_CURSOR","","",null,null],[17,"ATOM_CUT_BUFFER0","","",null,null],[17,"ATOM_CUT_BUFFER1","","",null,null],[17,"ATOM_CUT_BUFFER2","","",null,null],[17,"ATOM_CUT_BUFFER3","","",null,null],[17,"ATOM_CUT_BUFFER4","","",null,null],[17,"ATOM_CUT_BUFFER5","","",null,null],[17,"ATOM_CUT_BUFFER6","","",null,null],[17,"ATOM_CUT_BUFFER7","","",null,null],[17,"ATOM_DRAWABLE","","",null,null],[17,"ATOM_FONT","","",null,null],[17,"ATOM_INTEGER","","",null,null],[17,"ATOM_PIXMAP","","",null,null],[17,"ATOM_POINT","","",null,null],[17,"ATOM_RECTANGLE","","",null,null],[17,"ATOM_RESOURCE_MANAGER","","",null,null],[17,"ATOM_RGB_COLOR_MAP","","",null,null],[17,"ATOM_RGB_BEST_MAP","","",null,null],[17,"ATOM_RGB_BLUE_MAP","","",null,null],[17,"ATOM_RGB_DEFAULT_MAP","","",null,null],[17,"ATOM_RGB_GRAY_MAP","","",null,null],[17,"ATOM_RGB_GREEN_MAP","","",null,null],[17,"ATOM_RGB_RED_MAP","","",null,null],[17,"ATOM_STRING","","",null,null],[17,"ATOM_VISUALID","","",null,null],[17,"ATOM_WINDOW","","",null,null],[17,"ATOM_WM_COMMAND","","",null,null],[17,"ATOM_WM_HINTS","","",null,null],[17,"ATOM_WM_CLIENT_MACHINE","","",null,null],[17,"ATOM_WM_ICON_NAME","","",null,null],[17,"ATOM_WM_ICON_SIZE","","",null,null],[17,"ATOM_WM_NAME","","",null,null],[17,"ATOM_WM_NORMAL_HINTS","","",null,null],[17,"ATOM_WM_SIZE_HINTS","","",null,null],[17,"ATOM_WM_ZOOM_HINTS","","",null,null],[17,"ATOM_MIN_SPACE","","",null,null],[17,"ATOM_NORM_SPACE","","",null,null],[17,"ATOM_MAX_SPACE","","",null,null],[17,"ATOM_END_SPACE","","",null,null],[17,"ATOM_SUPERSCRIPT_X","","",null,null],[17,"ATOM_SUPERSCRIPT_Y","","",null,null],[17,"ATOM_SUBSCRIPT_X","","",null,null],[17,"ATOM_SUBSCRIPT_Y","","",null,null],[17,"ATOM_UNDERLINE_POSITION","","",null,null],[17,"ATOM_UNDERLINE_THICKNESS","","",null,null],[17,"ATOM_STRIKEOUT_ASCENT","","",null,null],[17,"ATOM_STRIKEOUT_DESCENT","","",null,null],[17,"ATOM_ITALIC_ANGLE","","",null,null],[17,"ATOM_X_HEIGHT","","",null,null],[17,"ATOM_QUAD_WIDTH","","",null,null],[17,"ATOM_WEIGHT","","",null,null],[17,"ATOM_POINT_SIZE","","",null,null],[17,"ATOM_RESOLUTION","","",null,null],[17,"ATOM_COPYRIGHT","","",null,null],[17,"ATOM_NOTICE","","",null,null],[17,"ATOM_FONT_NAME","","",null,null],[17,"ATOM_FAMILY_NAME","","",null,null],[17,"ATOM_FULL_NAME","","",null,null],[17,"ATOM_CAP_HEIGHT","","",null,null],[17,"ATOM_WM_CLASS","","",null,null],[17,"ATOM_WM_TRANSIENT_FOR","","",null,null],[17,"COLORMAP_STATE_UNINSTALLED","","The colormap was uninstalled.",null,null],[17,"COLORMAP_STATE_INSTALLED","","The colormap was installed.",null,null],[17,"COLORMAP_NONE","","",null,null],[17,"MAPPING_MODIFIER","","",null,null],[17,"MAPPING_KEYBOARD","","",null,null],[17,"MAPPING_POINTER","","",null,null],[17,"WINDOW_CLASS_COPY_FROM_PARENT","","",null,null],[17,"WINDOW_CLASS_INPUT_OUTPUT","","",null,null],[17,"WINDOW_CLASS_INPUT_ONLY","","",null,null],[17,"CW_BACK_PIXMAP","","Overrides the default background-pixmap. The background pixmap and window must have the same root and same depth. Any size pixmap can be used, although some sizes may be faster than others.",null,null],[17,"CW_BACK_PIXEL","","Overrides `BackPixmap`. A pixmap of undefined size filled with the specified background pixel is used for the background. Range-checking is not performed, the background pixel is truncated to the appropriate number of bits.",null,null],[17,"CW_BORDER_PIXMAP","","Overrides the default border-pixmap. The border pixmap and window must have the same root and the same depth. Any size pixmap can be used, although some sizes may be faster than others.",null,null],[17,"CW_BORDER_PIXEL","","Overrides `BorderPixmap`. A pixmap of undefined size filled with the specified border pixel is used for the border. Range checking is not performed on the border-pixel value, it is truncated to the appropriate number of bits.",null,null],[17,"CW_BIT_GRAVITY","","Defines which region of the window should be retained if the window is resized.",null,null],[17,"CW_WIN_GRAVITY","","Defines how the window should be repositioned if the parent is resized (see `ConfigureWindow`).",null,null],[17,"CW_BACKING_STORE","","A backing-store of `WhenMapped` advises the server that maintaining contents of obscured regions when the window is mapped would be beneficial. A backing-store of `Always` advises the server that maintaining contents even when the window is unmapped would be beneficial. In this case, the server may generate an exposure event when the window is created. A value of `NotUseful` advises the server that maintaining contents is unnecessary, although a server may still choose to maintain contents while the window is mapped. Note that if the server maintains contents, then the server should maintain complete contents not just the region within the parent boundaries, even if the window is larger than its parent. While the server maintains contents, exposure events will not normally be generated, but the server may stop maintaining contents at any time.",null,null],[17,"CW_BACKING_PLANES","","The backing-planes indicates (with bits set to 1) which bit planes of the window hold dynamic data that must be preserved in backing-stores and during save-unders.",null,null],[17,"CW_BACKING_PIXEL","","The backing-pixel specifies what value to use in planes not covered by backing-planes. The server is free to save only the specified bit planes in the backing-store or save-under and regenerate the remaining planes with the specified pixel value. Any bits beyond the specified depth of the window in these values are simply ignored.",null,null],[17,"CW_OVERRIDE_REDIRECT","","The override-redirect specifies whether map and configure requests on this window should override a SubstructureRedirect on the parent, typically to inform a window manager not to tamper with the window.",null,null],[17,"CW_SAVE_UNDER","","If 1, the server is advised that when this window is mapped, saving the contents of windows it obscures would be beneficial.",null,null],[17,"CW_EVENT_MASK","","The event-mask defines which events the client is interested in for this window (or for some event types, inferiors of the window).",null,null],[17,"CW_DONT_PROPAGATE","","The do-not-propagate-mask defines which events should not be propagated to ancestor windows when no client has the event type selected in this window.",null,null],[17,"CW_COLORMAP","","The colormap specifies the colormap that best reflects the true colors of the window. Servers capable of supporting multiple hardware colormaps may use this information, and window man- agers may use it for InstallColormap requests. The colormap must have the same visual type and root as the window (or a Match error results). If CopyFromParent is specified, the parent's colormap is copied (subsequent changes to the parent's colormap attribute do not affect the child). However, the window must have the same visual type as the parent (or a Match error results), and the parent must not have a colormap of None (or a Match error results). For an explanation of None, see FreeColormap request. The colormap is copied by sharing the colormap object between the child and the parent, not by making a complete copy of the colormap contents.",null,null],[17,"CW_CURSOR","","If a cursor is specified, it will be used whenever the pointer is in the window. If None is speci- fied, the parent's cursor will be used when the pointer is in the window, and any change in the parent's cursor will cause an immediate change in the displayed cursor.",null,null],[17,"BACK_PIXMAP_NONE","","",null,null],[17,"BACK_PIXMAP_PARENT_RELATIVE","","",null,null],[17,"GRAVITY_BIT_FORGET","","",null,null],[17,"GRAVITY_WIN_UNMAP","","",null,null],[17,"GRAVITY_NORTH_WEST","","",null,null],[17,"GRAVITY_NORTH","","",null,null],[17,"GRAVITY_NORTH_EAST","","",null,null],[17,"GRAVITY_WEST","","",null,null],[17,"GRAVITY_CENTER","","",null,null],[17,"GRAVITY_EAST","","",null,null],[17,"GRAVITY_SOUTH_WEST","","",null,null],[17,"GRAVITY_SOUTH","","",null,null],[17,"GRAVITY_SOUTH_EAST","","",null,null],[17,"GRAVITY_STATIC","","",null,null],[17,"MAP_STATE_UNMAPPED","","",null,null],[17,"MAP_STATE_UNVIEWABLE","","",null,null],[17,"MAP_STATE_VIEWABLE","","",null,null],[17,"SET_MODE_INSERT","","",null,null],[17,"SET_MODE_DELETE","","",null,null],[17,"CONFIG_WINDOW_X","","",null,null],[17,"CONFIG_WINDOW_Y","","",null,null],[17,"CONFIG_WINDOW_WIDTH","","",null,null],[17,"CONFIG_WINDOW_HEIGHT","","",null,null],[17,"CONFIG_WINDOW_BORDER_WIDTH","","",null,null],[17,"CONFIG_WINDOW_SIBLING","","",null,null],[17,"CONFIG_WINDOW_STACK_MODE","","",null,null],[17,"STACK_MODE_ABOVE","","",null,null],[17,"STACK_MODE_BELOW","","",null,null],[17,"STACK_MODE_TOP_IF","","",null,null],[17,"STACK_MODE_BOTTOM_IF","","",null,null],[17,"STACK_MODE_OPPOSITE","","",null,null],[17,"CIRCULATE_RAISE_LOWEST","","",null,null],[17,"CIRCULATE_LOWER_HIGHEST","","",null,null],[17,"PROP_MODE_REPLACE","","Discard the previous property value and store the new data.",null,null],[17,"PROP_MODE_PREPEND","","Insert the new data before the beginning of existing data. The `format` must match existing property value. If the property is undefined, it is treated as defined with the correct type and format with zero-length data.",null,null],[17,"PROP_MODE_APPEND","","Insert the new data after the beginning of existing data. The `format` must match existing property value. If the property is undefined, it is treated as defined with the correct type and format with zero-length data.",null,null],[17,"GET_PROPERTY_TYPE_ANY","","",null,null],[17,"SEND_EVENT_DEST_POINTER_WINDOW","","",null,null],[17,"SEND_EVENT_DEST_ITEM_FOCUS","","",null,null],[17,"GRAB_MODE_SYNC","","The state of the keyboard appears to freeze: No further keyboard events are generated by the server until the grabbing client issues a releasing `AllowEvents` request or until the keyboard grab is released.",null,null],[17,"GRAB_MODE_ASYNC","","Keyboard event processing continues normally.",null,null],[17,"GRAB_STATUS_SUCCESS","","",null,null],[17,"GRAB_STATUS_ALREADY_GRABBED","","",null,null],[17,"GRAB_STATUS_INVALID_TIME","","",null,null],[17,"GRAB_STATUS_NOT_VIEWABLE","","",null,null],[17,"GRAB_STATUS_FROZEN","","",null,null],[17,"CURSOR_NONE","","",null,null],[17,"BUTTON_INDEX_ANY","","Any of the following (or none):",null,null],[17,"BUTTON_INDEX_1","","The left mouse button.",null,null],[17,"BUTTON_INDEX_2","","The right mouse button.",null,null],[17,"BUTTON_INDEX_3","","The middle mouse button.",null,null],[17,"BUTTON_INDEX_4","","Scroll wheel. TODO: direction?",null,null],[17,"BUTTON_INDEX_5","","Scroll wheel. TODO: direction?",null,null],[17,"GRAB_ANY","","",null,null],[17,"ALLOW_ASYNC_POINTER","","For AsyncPointer, if the pointer is frozen by the client, pointer event processing continues normally. If the pointer is frozen twice by the client on behalf of two separate grabs, AsyncPointer thaws for both. AsyncPointer has no effect if the pointer is not frozen by the client, but the pointer need not be grabbed by the client.",null,null],[17,"ALLOW_SYNC_POINTER","","For SyncPointer, if the pointer is frozen and actively grabbed by the client, pointer event processing continues normally until the next ButtonPress or ButtonRelease event is reported to the client, at which time the pointer again appears to freeze. However, if the reported event causes the pointer grab to be released, then the pointer does not freeze. SyncPointer has no effect if the pointer is not frozen by the client or if the pointer is not grabbed by the client.",null,null],[17,"ALLOW_REPLAY_POINTER","","For ReplayPointer, if the pointer is actively grabbed by the client and is frozen as the result of an event having been sent to the client (either from the activation of a GrabButton or from a previous AllowEvents with mode SyncPointer but not from a GrabPointer), then the pointer grab is released and that event is completely reprocessed, this time ignoring any passive grabs at or above (towards the root) the grab-window of the grab just released. The request has no effect if the pointer is not grabbed by the client or if the pointer is not frozen as the result of an event.",null,null],[17,"ALLOW_ASYNC_KEYBOARD","","For AsyncKeyboard, if the keyboard is frozen by the client, keyboard event processing continues normally. If the keyboard is frozen twice by the client on behalf of two separate grabs, AsyncKeyboard thaws for both. AsyncKeyboard has no effect if the keyboard is not frozen by the client, but the keyboard need not be grabbed by the client.",null,null],[17,"ALLOW_SYNC_KEYBOARD","","For SyncKeyboard, if the keyboard is frozen and actively grabbed by the client, keyboard event processing continues normally until the next KeyPress or KeyRelease event is reported to the client, at which time the keyboard again appears to freeze. However, if the reported event causes the keyboard grab to be released, then the keyboard does not freeze. SyncKeyboard has no effect if the keyboard is not frozen by the client or if the keyboard is not grabbed by the client.",null,null],[17,"ALLOW_REPLAY_KEYBOARD","","For ReplayKeyboard, if the keyboard is actively grabbed by the client and is frozen as the result of an event having been sent to the client (either from the activation of a GrabKey or from a previous AllowEvents with mode SyncKeyboard but not from a GrabKeyboard), then the keyboard grab is released and that event is completely reprocessed, this time ignoring any passive grabs at or above (towards the root) the grab-window of the grab just released. The request has no effect if the keyboard is not grabbed by the client or if the keyboard is not frozen as the result of an event.",null,null],[17,"ALLOW_ASYNC_BOTH","","For AsyncBoth, if the pointer and the keyboard are frozen by the client, event processing for both devices continues normally. If a device is frozen twice by the client on behalf of two separate grabs, AsyncBoth thaws for both. AsyncBoth has no effect unless both pointer and keyboard are frozen by the client.",null,null],[17,"ALLOW_SYNC_BOTH","","For SyncBoth, if both pointer and keyboard are frozen by the client, event processing (for both devices) continues normally until the next ButtonPress, ButtonRelease, KeyPress, or KeyRelease event is reported to the client for a grabbed device (button event for the pointer, key event for the keyboard), at which time the devices again appear to freeze. However, if the reported event causes the grab to be released, then the devices do not freeze (but if the other device is still grabbed, then a subsequent event for it will still cause both devices to freeze). SyncBoth has no effect unless both pointer and keyboard are frozen by the client. If the pointer or keyboard is frozen twice by the client on behalf of two separate grabs, SyncBoth thaws for both (but a subsequent freeze for SyncBoth will only freeze each device once).",null,null],[17,"INPUT_FOCUS_NONE","","The focus reverts to `XCB_NONE`, so no window will have the input focus.",null,null],[17,"INPUT_FOCUS_POINTER_ROOT","","The focus reverts to `XCB_POINTER_ROOT` respectively. When the focus reverts, FocusIn and FocusOut events are generated, but the last-focus-change time is not changed.",null,null],[17,"INPUT_FOCUS_PARENT","","The focus reverts to the parent (or closest viewable ancestor) and the new revert_to value is `XCB_INPUT_FOCUS_NONE`.",null,null],[17,"INPUT_FOCUS_FOLLOW_KEYBOARD","","NOT YET DOCUMENTED. Only relevant for the xinput extension.",null,null],[17,"FONT_DRAW_LEFT_TO_RIGHT","","",null,null],[17,"FONT_DRAW_RIGHT_TO_LEFT","","",null,null],[17,"GC_FUNCTION","","TODO: Refer to GX",null,null],[17,"GC_PLANE_MASK","","In graphics operations, given a source and destination pixel, the result is computed bitwise on corresponding bits of the pixels; that is, a Boolean operation is performed in each bit plane. The plane-mask restricts the operation to a subset of planes, so the result is:",null,null],[17,"GC_FOREGROUND","","Foreground colorpixel.",null,null],[17,"GC_BACKGROUND","","Background colorpixel.",null,null],[17,"GC_LINE_WIDTH","","The line-width is measured in pixels and can be greater than or equal to one, a wide line, or the special value zero, a thin line.",null,null],[17,"GC_LINE_STYLE","","The line-style defines which sections of a line are drawn: Solid                The full path of the line is drawn. DoubleDash           The full path of the line is drawn, but the even dashes are filled differently                      than the odd dashes (see fill-style), with Butt cap-style used where even and                      odd dashes meet. OnOffDash            Only the even dashes are drawn, and cap-style applies to all internal ends of                      the individual dashes (except NotLast is treated as Butt).",null,null],[17,"GC_CAP_STYLE","","The cap-style defines how the endpoints of a path are drawn: NotLast    The result is equivalent to Butt, except that for a line-width of zero the final            endpoint is not drawn. Butt       The result is square at the endpoint (perpendicular to the slope of the line)            with no projection beyond. Round      The result is a circular arc with its diameter equal to the line-width, centered            on the endpoint; it is equivalent to Butt for line-width zero. Projecting The result is square at the end, but the path continues beyond the endpoint for            a distance equal to half the line-width; it is equivalent to Butt for line-width            zero.",null,null],[17,"GC_JOIN_STYLE","","The join-style defines how corners are drawn for wide lines: Miter               The outer edges of the two lines extend to meet at an angle. However, if the                     angle is less than 11 degrees, a Bevel join-style is used instead. Round               The result is a circular arc with a diameter equal to the line-width, centered                     on the joinpoint. Bevel               The result is Butt endpoint styles, and then the triangular notch is filled.",null,null],[17,"GC_FILL_STYLE","","The fill-style defines the contents of the source for line, text, and fill requests. For all text and fill requests (for example, PolyText8, PolyText16, PolyFillRectangle, FillPoly, and PolyFillArc) as well as for line requests with line-style Solid, (for example, PolyLine, PolySegment, PolyRectangle, PolyArc) and for the even dashes for line requests with line-style OnOffDash or DoubleDash: Solid                     Foreground Tiled                     Tile OpaqueStippled            A tile with the same width and height as stipple but with background                           everywhere stipple has a zero and with foreground everywhere stipple                           has a one Stippled                  Foreground masked by stipple For the odd dashes for line requests with line-style DoubleDash: Solid                     Background Tiled                     Same as for even dashes OpaqueStippled            Same as for even dashes Stippled                  Background masked by stipple",null,null],[17,"GC_FILL_RULE","","",null,null],[17,"GC_TILE","","The tile/stipple represents an infinite two-dimensional plane with the tile/stipple replicated in all dimensions. When that plane is superimposed on the drawable for use in a graphics operation, the upper-left corner of some instance of the tile/stipple is at the coordinates within the drawable specified by the tile/stipple origin. The tile/stipple and clip origins are interpreted relative to the origin of whatever destination drawable is specified in a graphics request. The tile pixmap must have the same root and depth as the gcontext (or a Match error results). The stipple pixmap must have depth one and must have the same root as the gcontext (or a Match error results). For fill-style Stippled (but not fill-style OpaqueStippled), the stipple pattern is tiled in a single plane and acts as an additional clip mask to be ANDed with the clip-mask. Any size pixmap can be used for tiling or stippling, although some sizes may be faster to use than others.",null,null],[17,"GC_STIPPLE","","The tile/stipple represents an infinite two-dimensional plane with the tile/stipple replicated in all dimensions. When that plane is superimposed on the drawable for use in a graphics operation, the upper-left corner of some instance of the tile/stipple is at the coordinates within the drawable specified by the tile/stipple origin. The tile/stipple and clip origins are interpreted relative to the origin of whatever destination drawable is specified in a graphics request. The tile pixmap must have the same root and depth as the gcontext (or a Match error results). The stipple pixmap must have depth one and must have the same root as the gcontext (or a Match error results). For fill-style Stippled (but not fill-style OpaqueStippled), the stipple pattern is tiled in a single plane and acts as an additional clip mask to be ANDed with the clip-mask. Any size pixmap can be used for tiling or stippling, although some sizes may be faster to use than others.",null,null],[17,"GC_TILE_STIPPLE_ORIGIN_X","","TODO",null,null],[17,"GC_TILE_STIPPLE_ORIGIN_Y","","TODO",null,null],[17,"GC_FONT","","Which font to use for the `ImageText8` and `ImageText16` requests.",null,null],[17,"GC_SUBWINDOW_MODE","","For ClipByChildren, both source and destination windows are additionally clipped by all viewable InputOutput children. For IncludeInferiors, neither source nor destination window is clipped by inferiors. This will result in including subwindow contents in the source and drawing through subwindow boundaries of the destination. The use of IncludeInferiors with a source or destination window of one depth with mapped inferiors of differing depth is not illegal, but the semantics is undefined by the core protocol.",null,null],[17,"GC_GRAPHICS_EXPOSURES","","Whether ExposureEvents should be generated (1) or not (0).",null,null],[17,"GC_CLIP_ORIGIN_X","","TODO",null,null],[17,"GC_CLIP_ORIGIN_Y","","TODO",null,null],[17,"GC_CLIP_MASK","","The clip-mask restricts writes to the destination drawable. Only pixels where the clip-mask has bits set to 1 are drawn. Pixels are not drawn outside the area covered by the clip-mask or where the clip-mask has bits set to 0. The clip-mask affects all graphics requests, but it does not clip sources. The clip-mask origin is interpreted relative to the origin of whatever destination drawable is specified in a graphics request. If a pixmap is specified as the clip-mask, it must have depth 1 and have the same root as the gcontext (or a Match error results). If clip-mask is None, then pixels are always drawn, regardless of the clip origin. The clip-mask can also be set with the SetClipRectangles request.",null,null],[17,"GC_DASH_OFFSET","","TODO",null,null],[17,"GC_DASH_LIST","","TODO",null,null],[17,"GC_ARC_MODE","","TODO",null,null],[17,"GX_CLEAR","","",null,null],[17,"GX_AND","","",null,null],[17,"GX_AND_REVERSE","","",null,null],[17,"GX_COPY","","",null,null],[17,"GX_AND_INVERTED","","",null,null],[17,"GX_NOOP","","",null,null],[17,"GX_XOR","","",null,null],[17,"GX_OR","","",null,null],[17,"GX_NOR","","",null,null],[17,"GX_EQUIV","","",null,null],[17,"GX_INVERT","","",null,null],[17,"GX_OR_REVERSE","","",null,null],[17,"GX_COPY_INVERTED","","",null,null],[17,"GX_OR_INVERTED","","",null,null],[17,"GX_NAND","","",null,null],[17,"GX_SET","","",null,null],[17,"LINE_STYLE_SOLID","","",null,null],[17,"LINE_STYLE_ON_OFF_DASH","","",null,null],[17,"LINE_STYLE_DOUBLE_DASH","","",null,null],[17,"CAP_STYLE_NOT_LAST","","",null,null],[17,"CAP_STYLE_BUTT","","",null,null],[17,"CAP_STYLE_ROUND","","",null,null],[17,"CAP_STYLE_PROJECTING","","",null,null],[17,"JOIN_STYLE_MITER","","",null,null],[17,"JOIN_STYLE_ROUND","","",null,null],[17,"JOIN_STYLE_BEVEL","","",null,null],[17,"FILL_STYLE_SOLID","","",null,null],[17,"FILL_STYLE_TILED","","",null,null],[17,"FILL_STYLE_STIPPLED","","",null,null],[17,"FILL_STYLE_OPAQUE_STIPPLED","","",null,null],[17,"FILL_RULE_EVEN_ODD","","",null,null],[17,"FILL_RULE_WINDING","","",null,null],[17,"SUBWINDOW_MODE_CLIP_BY_CHILDREN","","",null,null],[17,"SUBWINDOW_MODE_INCLUDE_INFERIORS","","",null,null],[17,"ARC_MODE_CHORD","","",null,null],[17,"ARC_MODE_PIE_SLICE","","",null,null],[17,"CLIP_ORDERING_UNSORTED","","",null,null],[17,"CLIP_ORDERING_Y_SORTED","","",null,null],[17,"CLIP_ORDERING_YX_SORTED","","",null,null],[17,"CLIP_ORDERING_YX_BANDED","","",null,null],[17,"COORD_MODE_ORIGIN","","Treats all coordinates as relative to the origin.",null,null],[17,"COORD_MODE_PREVIOUS","","Treats all coordinates after the first as relative to the previous coordinate.",null,null],[17,"POLY_SHAPE_COMPLEX","","",null,null],[17,"POLY_SHAPE_NONCONVEX","","",null,null],[17,"POLY_SHAPE_CONVEX","","",null,null],[17,"IMAGE_FORMAT_XY_BITMAP","","",null,null],[17,"IMAGE_FORMAT_XY_PIXMAP","","",null,null],[17,"IMAGE_FORMAT_Z_PIXMAP","","",null,null],[17,"COLORMAP_ALLOC_NONE","","",null,null],[17,"COLORMAP_ALLOC_ALL","","",null,null],[17,"COLOR_FLAG_RED","","",null,null],[17,"COLOR_FLAG_GREEN","","",null,null],[17,"COLOR_FLAG_BLUE","","",null,null],[17,"PIXMAP_NONE","","",null,null],[17,"FONT_NONE","","",null,null],[17,"QUERY_SHAPE_OF_LARGEST_CURSOR","","",null,null],[17,"QUERY_SHAPE_OF_FASTEST_TILE","","",null,null],[17,"QUERY_SHAPE_OF_FASTEST_STIPPLE","","",null,null],[17,"KB_KEY_CLICK_PERCENT","","",null,null],[17,"KB_BELL_PERCENT","","",null,null],[17,"KB_BELL_PITCH","","",null,null],[17,"KB_BELL_DURATION","","",null,null],[17,"KB_LED","","",null,null],[17,"KB_LED_MODE","","",null,null],[17,"KB_KEY","","",null,null],[17,"KB_AUTO_REPEAT_MODE","","",null,null],[17,"LED_MODE_OFF","","",null,null],[17,"LED_MODE_ON","","",null,null],[17,"AUTO_REPEAT_MODE_OFF","","",null,null],[17,"AUTO_REPEAT_MODE_ON","","",null,null],[17,"AUTO_REPEAT_MODE_DEFAULT","","",null,null],[17,"BLANKING_NOT_PREFERRED","","",null,null],[17,"BLANKING_PREFERRED","","",null,null],[17,"BLANKING_DEFAULT","","",null,null],[17,"EXPOSURES_NOT_ALLOWED","","",null,null],[17,"EXPOSURES_ALLOWED","","",null,null],[17,"EXPOSURES_DEFAULT","","",null,null],[17,"HOST_MODE_INSERT","","",null,null],[17,"HOST_MODE_DELETE","","",null,null],[17,"FAMILY_INTERNET","","",null,null],[17,"FAMILY_DE_CNET","","",null,null],[17,"FAMILY_CHAOS","","",null,null],[17,"FAMILY_SERVER_INTERPRETED","","",null,null],[17,"FAMILY_INTERNET_6","","",null,null],[17,"ACCESS_CONTROL_DISABLE","","",null,null],[17,"ACCESS_CONTROL_ENABLE","","",null,null],[17,"CLOSE_DOWN_DESTROY_ALL","","",null,null],[17,"CLOSE_DOWN_RETAIN_PERMANENT","","",null,null],[17,"CLOSE_DOWN_RETAIN_TEMPORARY","","",null,null],[17,"KILL_ALL_TEMPORARY","","",null,null],[17,"SCREEN_SAVER_RESET","","",null,null],[17,"SCREEN_SAVER_ACTIVE","","",null,null],[17,"MAPPING_STATUS_SUCCESS","","",null,null],[17,"MAPPING_STATUS_BUSY","","",null,null],[17,"MAPPING_STATUS_FAILURE","","",null,null],[17,"MAP_INDEX_SHIFT","","",null,null],[17,"MAP_INDEX_LOCK","","",null,null],[17,"MAP_INDEX_CONTROL","","",null,null],[17,"MAP_INDEX_1","","",null,null],[17,"MAP_INDEX_2","","",null,null],[17,"MAP_INDEX_3","","",null,null],[17,"MAP_INDEX_4","","",null,null],[17,"MAP_INDEX_5","","",null,null],[17,"KEY_PRESS","","",null,null],[17,"KEY_RELEASE","","",null,null],[17,"BUTTON_PRESS","","",null,null],[17,"BUTTON_RELEASE","","",null,null],[17,"MOTION_NOTIFY","","",null,null],[17,"ENTER_NOTIFY","","",null,null],[17,"LEAVE_NOTIFY","","",null,null],[17,"FOCUS_IN","","",null,null],[17,"FOCUS_OUT","","",null,null],[17,"KEYMAP_NOTIFY","","",null,null],[17,"EXPOSE","","",null,null],[17,"GRAPHICS_EXPOSURE","","",null,null],[17,"NO_EXPOSURE","","",null,null],[17,"VISIBILITY_NOTIFY","","",null,null],[17,"CREATE_NOTIFY","","",null,null],[17,"DESTROY_NOTIFY","","",null,null],[17,"UNMAP_NOTIFY","","",null,null],[17,"MAP_NOTIFY","","",null,null],[17,"MAP_REQUEST","","",null,null],[17,"REPARENT_NOTIFY","","",null,null],[17,"CONFIGURE_NOTIFY","","",null,null],[17,"CONFIGURE_REQUEST","","",null,null],[17,"GRAVITY_NOTIFY","","",null,null],[17,"RESIZE_REQUEST","","",null,null],[17,"CIRCULATE_NOTIFY","","",null,null],[17,"CIRCULATE_REQUEST","","",null,null],[17,"PROPERTY_NOTIFY","","",null,null],[17,"SELECTION_CLEAR","","",null,null],[17,"SELECTION_REQUEST","","",null,null],[17,"SELECTION_NOTIFY","","",null,null],[17,"COLORMAP_NOTIFY","","",null,null],[17,"CLIENT_MESSAGE","","",null,null],[17,"MAPPING_NOTIFY","","",null,null],[17,"GE_GENERIC","","",null,null],[17,"REQUEST","","",null,null],[17,"VALUE","","",null,null],[17,"WINDOW","","",null,null],[17,"PIXMAP","","",null,null],[17,"ATOM","","",null,null],[17,"CURSOR","","",null,null],[17,"FONT","","",null,null],[17,"MATCH","","",null,null],[17,"DRAWABLE","","",null,null],[17,"ACCESS","","",null,null],[17,"ALLOC","","",null,null],[17,"COLORMAP","","",null,null],[17,"G_CONTEXT","","",null,null],[17,"ID_CHOICE","","",null,null],[17,"NAME","","",null,null],[17,"LENGTH","","",null,null],[17,"IMPLEMENTATION","","",null,null],[17,"CREATE_WINDOW","","",null,null],[17,"CHANGE_WINDOW_ATTRIBUTES","","",null,null],[17,"GET_WINDOW_ATTRIBUTES","","",null,null],[17,"DESTROY_WINDOW","","",null,null],[17,"DESTROY_SUBWINDOWS","","",null,null],[17,"CHANGE_SAVE_SET","","",null,null],[17,"REPARENT_WINDOW","","",null,null],[17,"MAP_WINDOW","","",null,null],[17,"MAP_SUBWINDOWS","","",null,null],[17,"UNMAP_WINDOW","","",null,null],[17,"UNMAP_SUBWINDOWS","","",null,null],[17,"CONFIGURE_WINDOW","","",null,null],[17,"CIRCULATE_WINDOW","","",null,null],[17,"GET_GEOMETRY","","",null,null],[17,"QUERY_TREE","","",null,null],[17,"INTERN_ATOM","","",null,null],[17,"GET_ATOM_NAME","","",null,null],[17,"CHANGE_PROPERTY","","",null,null],[17,"DELETE_PROPERTY","","",null,null],[17,"GET_PROPERTY","","",null,null],[17,"LIST_PROPERTIES","","",null,null],[17,"SET_SELECTION_OWNER","","",null,null],[17,"GET_SELECTION_OWNER","","",null,null],[17,"CONVERT_SELECTION","","",null,null],[17,"SEND_EVENT","","",null,null],[17,"GRAB_POINTER","","",null,null],[17,"UNGRAB_POINTER","","",null,null],[17,"GRAB_BUTTON","","",null,null],[17,"UNGRAB_BUTTON","","",null,null],[17,"CHANGE_ACTIVE_POINTER_GRAB","","",null,null],[17,"GRAB_KEYBOARD","","",null,null],[17,"UNGRAB_KEYBOARD","","",null,null],[17,"GRAB_KEY","","",null,null],[17,"UNGRAB_KEY","","",null,null],[17,"ALLOW_EVENTS","","",null,null],[17,"GRAB_SERVER","","",null,null],[17,"UNGRAB_SERVER","","",null,null],[17,"QUERY_POINTER","","",null,null],[17,"GET_MOTION_EVENTS","","",null,null],[17,"TRANSLATE_COORDINATES","","",null,null],[17,"WARP_POINTER","","",null,null],[17,"SET_INPUT_FOCUS","","",null,null],[17,"GET_INPUT_FOCUS","","",null,null],[17,"QUERY_KEYMAP","","",null,null],[17,"OPEN_FONT","","",null,null],[17,"CLOSE_FONT","","",null,null],[17,"QUERY_FONT","","",null,null],[17,"QUERY_TEXT_EXTENTS","","",null,null],[17,"LIST_FONTS","","",null,null],[17,"LIST_FONTS_WITH_INFO","","",null,null],[17,"SET_FONT_PATH","","",null,null],[17,"GET_FONT_PATH","","",null,null],[17,"CREATE_PIXMAP","","",null,null],[17,"FREE_PIXMAP","","",null,null],[17,"CREATE_GC","","",null,null],[17,"CHANGE_GC","","",null,null],[17,"COPY_GC","","",null,null],[17,"SET_DASHES","","",null,null],[17,"SET_CLIP_RECTANGLES","","",null,null],[17,"FREE_GC","","",null,null],[17,"CLEAR_AREA","","",null,null],[17,"COPY_AREA","","",null,null],[17,"COPY_PLANE","","",null,null],[17,"POLY_POINT","","",null,null],[17,"POLY_LINE","","",null,null],[17,"POLY_SEGMENT","","",null,null],[17,"POLY_RECTANGLE","","",null,null],[17,"POLY_ARC","","",null,null],[17,"FILL_POLY","","",null,null],[17,"POLY_FILL_RECTANGLE","","",null,null],[17,"POLY_FILL_ARC","","",null,null],[17,"PUT_IMAGE","","",null,null],[17,"GET_IMAGE","","",null,null],[17,"POLY_TEXT_8","","",null,null],[17,"POLY_TEXT_16","","",null,null],[17,"IMAGE_TEXT_8","","",null,null],[17,"IMAGE_TEXT_16","","",null,null],[17,"CREATE_COLORMAP","","",null,null],[17,"FREE_COLORMAP","","",null,null],[17,"COPY_COLORMAP_AND_FREE","","",null,null],[17,"INSTALL_COLORMAP","","",null,null],[17,"UNINSTALL_COLORMAP","","",null,null],[17,"LIST_INSTALLED_COLORMAPS","","",null,null],[17,"ALLOC_COLOR","","",null,null],[17,"ALLOC_NAMED_COLOR","","",null,null],[17,"ALLOC_COLOR_CELLS","","",null,null],[17,"ALLOC_COLOR_PLANES","","",null,null],[17,"FREE_COLORS","","",null,null],[17,"STORE_COLORS","","",null,null],[17,"STORE_NAMED_COLOR","","",null,null],[17,"QUERY_COLORS","","",null,null],[17,"LOOKUP_COLOR","","",null,null],[17,"CREATE_CURSOR","","",null,null],[17,"CREATE_GLYPH_CURSOR","","",null,null],[17,"FREE_CURSOR","","",null,null],[17,"RECOLOR_CURSOR","","",null,null],[17,"QUERY_BEST_SIZE","","",null,null],[17,"QUERY_EXTENSION","","",null,null],[17,"LIST_EXTENSIONS","","",null,null],[17,"CHANGE_KEYBOARD_MAPPING","","",null,null],[17,"GET_KEYBOARD_MAPPING","","",null,null],[17,"CHANGE_KEYBOARD_CONTROL","","",null,null],[17,"GET_KEYBOARD_CONTROL","","",null,null],[17,"BELL","","",null,null],[17,"CHANGE_POINTER_CONTROL","","",null,null],[17,"GET_POINTER_CONTROL","","",null,null],[17,"SET_SCREEN_SAVER","","",null,null],[17,"GET_SCREEN_SAVER","","",null,null],[17,"CHANGE_HOSTS","","",null,null],[17,"LIST_HOSTS","","",null,null],[17,"SET_ACCESS_CONTROL","","",null,null],[17,"SET_CLOSE_DOWN_MODE","","",null,null],[17,"KILL_CLIENT","","",null,null],[17,"ROTATE_PROPERTIES","","",null,null],[17,"FORCE_SCREEN_SAVER","","",null,null],[17,"SET_POINTER_MAPPING","","",null,null],[17,"GET_POINTER_MAPPING","","",null,null],[17,"SET_MODIFIER_MAPPING","","",null,null],[17,"GET_MODIFIER_MAPPING","","",null,null],[17,"NO_OPERATION","","",null,null],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"char2b"}}],[11,"new","","",27,{"inputs":[{"name":"u8"},{"name":"u8"}],"output":{"name":"char2b"}}],[11,"byte1","","",27,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"byte2","","",27,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"next","","",39,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"new","","",28,{"inputs":[{"name":"i16"},{"name":"i16"}],"output":{"name":"point"}}],[11,"x","","",28,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"y","","",28,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"next","","",40,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"rectangle"}}],[11,"new","","",29,{"inputs":[{"name":"i16"},{"name":"i16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"rectangle"}}],[11,"x","","",29,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"y","","",29,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"width","","",29,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"height","","",29,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"next","","",41,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"arc"}}],[11,"new","","",30,{"inputs":[{"name":"i16"},{"name":"i16"},{"name":"u16"},{"name":"u16"},{"name":"i16"},{"name":"i16"}],"output":{"name":"arc"}}],[11,"x","","",30,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"y","","",30,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"width","","",30,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"height","","",30,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"angle1","","",30,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"angle2","","",30,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"next","","",42,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",31,{"inputs":[{"name":"self"}],"output":{"name":"format"}}],[11,"new","","",31,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"format"}}],[11,"depth","","",31,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"bits_per_pixel","","",31,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"scanline_pad","","",31,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"next","","",43,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"visualtype"}}],[11,"new","","",32,{"inputs":[{"name":"visualid"},{"name":"u8"},{"name":"u8"},{"name":"u16"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"visualtype"}}],[11,"visual_id","","",32,{"inputs":[{"name":"self"}],"output":{"name":"visualid"}}],[11,"class","","",32,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"bits_per_rgb_value","","",32,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"colormap_entries","","",32,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"red_mask","","",32,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"green_mask","","",32,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"blue_mask","","",32,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"next","","",44,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"depth","","",45,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"visuals_len","","",45,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"visuals","","",45,{"inputs":[{"name":"self"}],"output":{"name":"visualtypeiterator"}}],[11,"next","","",46,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"root","","",47,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"default_colormap","","",47,{"inputs":[{"name":"self"}],"output":{"name":"colormap"}}],[11,"white_pixel","","",47,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"black_pixel","","",47,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"current_input_masks","","",47,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"width_in_pixels","","",47,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"height_in_pixels","","",47,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"width_in_millimeters","","",47,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"height_in_millimeters","","",47,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"min_installed_maps","","",47,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"max_installed_maps","","",47,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"root_visual","","",47,{"inputs":[{"name":"self"}],"output":{"name":"visualid"}}],[11,"backing_stores","","",47,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"save_unders","","",47,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"root_depth","","",47,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"allowed_depths_len","","",47,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"allowed_depths","","",47,{"inputs":[{"name":"self"}],"output":{"name":"depthiterator"}}],[11,"next","","",48,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"byte_order","","",49,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"protocol_major_version","","",49,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"protocol_minor_version","","",49,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"authorization_protocol_name_len","","",49,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"authorization_protocol_data_len","","",49,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"authorization_protocol_name","","",49,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"authorization_protocol_data","","",49,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"next","","",50,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"status","","",51,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"reason_len","","",51,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"protocol_major_version","","",51,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"protocol_minor_version","","",51,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"length","","",51,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"reason","","",51,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"next","","",52,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"status","","",53,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"length","","",53,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"reason","","",53,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"next","","",54,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"status","","",55,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"protocol_major_version","","",55,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"protocol_minor_version","","",55,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"length","","",55,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"release_number","","",55,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"resource_id_base","","",55,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"resource_id_mask","","",55,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"motion_buffer_size","","",55,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"vendor_len","","",55,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"maximum_request_length","","",55,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"roots_len","","",55,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"pixmap_formats_len","","",55,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"image_byte_order","","",55,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"bitmap_format_bit_order","","",55,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"bitmap_format_scanline_unit","","",55,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"bitmap_format_scanline_pad","","",55,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"min_keycode","","",55,{"inputs":[{"name":"self"}],"output":{"name":"keycode"}}],[11,"max_keycode","","",55,{"inputs":[{"name":"self"}],"output":{"name":"keycode"}}],[11,"vendor","","",55,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"pixmap_formats","","",55,{"inputs":[{"name":"self"}],"output":{"name":"formatiterator"}}],[11,"roots","","",55,{"inputs":[{"name":"self"}],"output":{"name":"screeniterator"}}],[11,"next","","",56,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"detail","","The keycode (a number representing a physical key on the keyboard) of the key which was pressed.",57,{"inputs":[{"name":"self"}],"output":{"name":"keycode"}}],[11,"time","","Time when the event was generated (in milliseconds).",57,{"inputs":[{"name":"self"}],"output":{"name":"timestamp"}}],[11,"root","","The root window of `child`.",57,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"event","","",57,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"child","","",57,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"root_x","","The X coordinate of the pointer relative to the `root` window at the time of the event.",57,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"root_y","","The Y coordinate of the pointer relative to the `root` window at the time of the event.",57,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"event_x","","If `same_screen` is true, this is the X coordinate relative to the `event` window's origin. Otherwise, `event_x` will be set to zero.",57,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"event_y","","If `same_screen` is true, this is the Y coordinate relative to the `event` window's origin. Otherwise, `event_y` will be set to zero.",57,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"state","","The logical state of the pointer buttons and modifier keys just prior to the event.",57,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"same_screen","","Whether the `event` window is on the same screen as the `root` window.",57,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"new","","Constructs a new KeyPressEvent `response_type` must be set to one of:     - `KEY_PRESS`     - `KEY_RELEASE`",57,{"inputs":[{"name":"u8"},{"name":"keycode"},{"name":"timestamp"},{"name":"window"},{"name":"window"},{"name":"window"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"u16"},{"name":"bool"}],"output":{"name":"keypressevent"}}],[11,"detail","","The keycode (a number representing a physical key on the keyboard) of the key which was pressed.",58,{"inputs":[{"name":"self"}],"output":{"name":"button"}}],[11,"time","","Time when the event was generated (in milliseconds).",58,{"inputs":[{"name":"self"}],"output":{"name":"timestamp"}}],[11,"root","","The root window of `child`.",58,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"event","","",58,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"child","","",58,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"root_x","","The X coordinate of the pointer relative to the `root` window at the time of the event.",58,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"root_y","","The Y coordinate of the pointer relative to the `root` window at the time of the event.",58,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"event_x","","If `same_screen` is true, this is the X coordinate relative to the `event` window's origin. Otherwise, `event_x` will be set to zero.",58,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"event_y","","If `same_screen` is true, this is the Y coordinate relative to the `event` window's origin. Otherwise, `event_y` will be set to zero.",58,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"state","","The logical state of the pointer buttons and modifier keys just prior to the event.",58,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"same_screen","","Whether the `event` window is on the same screen as the `root` window.",58,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"new","","Constructs a new ButtonPressEvent `response_type` must be set to one of:     - `BUTTON_RELEASE`     - `BUTTON_PRESS`",58,{"inputs":[{"name":"u8"},{"name":"button"},{"name":"timestamp"},{"name":"window"},{"name":"window"},{"name":"window"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"u16"},{"name":"bool"}],"output":{"name":"buttonpressevent"}}],[11,"detail","","The keycode (a number representing a physical key on the keyboard) of the key which was pressed.",59,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"time","","Time when the event was generated (in milliseconds).",59,{"inputs":[{"name":"self"}],"output":{"name":"timestamp"}}],[11,"root","","The root window of `child`.",59,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"event","","",59,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"child","","",59,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"root_x","","The X coordinate of the pointer relative to the `root` window at the time of the event.",59,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"root_y","","The Y coordinate of the pointer relative to the `root` window at the time of the event.",59,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"event_x","","If `same_screen` is true, this is the X coordinate relative to the `event` window's origin. Otherwise, `event_x` will be set to zero.",59,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"event_y","","If `same_screen` is true, this is the Y coordinate relative to the `event` window's origin. Otherwise, `event_y` will be set to zero.",59,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"state","","The logical state of the pointer buttons and modifier keys just prior to the event.",59,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"same_screen","","Whether the `event` window is on the same screen as the `root` window.",59,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"new","","Constructs a new MotionNotifyEvent `response_type` will be set automatically to MOTION_NOTIFY",59,{"inputs":[{"name":"u8"},{"name":"timestamp"},{"name":"window"},{"name":"window"},{"name":"window"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"u16"},{"name":"bool"}],"output":{"name":"motionnotifyevent"}}],[11,"detail","","",60,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"time","","",60,{"inputs":[{"name":"self"}],"output":{"name":"timestamp"}}],[11,"root","","The root window for the final cursor position.",60,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"event","","The window on which the event was generated.",60,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"child","","If the `event` window has subwindows and the final pointer position is in one of them, then `child` is set to that subwindow, `XCB_WINDOW_NONE` otherwise.",60,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"root_x","","The pointer X coordinate relative to `root`'s origin at the time of the event.",60,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"root_y","","The pointer Y coordinate relative to `root`'s origin at the time of the event.",60,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"event_x","","If `event` is on the same screen as `root`, this is the pointer X coordinate relative to the event window's origin.",60,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"event_y","","If `event` is on the same screen as `root`, this is the pointer Y coordinate relative to the event window's origin.",60,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"state","","",60,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"mode","","",60,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"same_screen_focus","","",60,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"new","","Constructs a new EnterNotifyEvent `response_type` must be set to one of:     - `ENTER_NOTIFY`     - `LEAVE_NOTIFY`",60,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"timestamp"},{"name":"window"},{"name":"window"},{"name":"window"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"u16"},{"name":"u8"},{"name":"u8"}],"output":{"name":"enternotifyevent"}}],[11,"detail","","",61,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"event","","The window on which the focus event was generated. This is the window used by the X server to report the event.",61,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"mode","","",61,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"new","","Constructs a new FocusInEvent `response_type` must be set to one of:     - `FOCUS_IN`     - `FOCUS_OUT`",61,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"window"},{"name":"u8"}],"output":{"name":"focusinevent"}}],[11,"keys","","",62,null],[11,"new","","Constructs a new KeymapNotifyEvent `response_type` will be set automatically to KEYMAP_NOTIFY",62,null],[11,"window","","The exposed (damaged) window.",63,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"x","","The X coordinate of the left-upper corner of the exposed rectangle, relative to the `window`'s origin.",63,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"y","","The Y coordinate of the left-upper corner of the exposed rectangle, relative to the `window`'s origin.",63,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"width","","The width of the exposed rectangle.",63,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"height","","The height of the exposed rectangle.",63,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"count","","The amount of `Expose` events following this one. Simple applications that do not want to optimize redisplay by distinguishing between subareas of its window can just ignore all Expose events with nonzero counts and perform full redisplays on events with zero counts.",63,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"new","","Constructs a new ExposeEvent `response_type` will be set automatically to EXPOSE",63,{"inputs":[{"name":"window"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"exposeevent"}}],[11,"drawable","","",64,{"inputs":[{"name":"self"}],"output":{"name":"drawable"}}],[11,"x","","",64,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"y","","",64,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"width","","",64,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"height","","",64,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"minor_opcode","","",64,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"count","","",64,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"major_opcode","","",64,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"new","","Constructs a new GraphicsExposureEvent `response_type` will be set automatically to GRAPHICS_EXPOSURE",64,{"inputs":[{"name":"drawable"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u8"}],"output":{"name":"graphicsexposureevent"}}],[11,"drawable","","",65,{"inputs":[{"name":"self"}],"output":{"name":"drawable"}}],[11,"minor_opcode","","",65,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"major_opcode","","",65,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"new","","Constructs a new NoExposureEvent `response_type` will be set automatically to NO_EXPOSURE",65,{"inputs":[{"name":"drawable"},{"name":"u16"},{"name":"u8"}],"output":{"name":"noexposureevent"}}],[11,"window","","",66,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"state","","",66,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"new","","Constructs a new VisibilityNotifyEvent `response_type` will be set automatically to VISIBILITY_NOTIFY",66,{"inputs":[{"name":"window"},{"name":"u8"}],"output":{"name":"visibilitynotifyevent"}}],[11,"parent","","",67,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"window","","",67,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"x","","",67,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"y","","",67,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"width","","",67,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"height","","",67,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"border_width","","",67,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"override_redirect","","",67,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"new","","Constructs a new CreateNotifyEvent `response_type` will be set automatically to CREATE_NOTIFY",67,{"inputs":[{"name":"window"},{"name":"window"},{"name":"i16"},{"name":"i16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"bool"}],"output":{"name":"createnotifyevent"}}],[11,"event","","The reconfigured window or its parent, depending on whether `StructureNotify` or `SubstructureNotify` was selected.",68,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"window","","The window that is destroyed.",68,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"new","","Constructs a new DestroyNotifyEvent `response_type` will be set automatically to DESTROY_NOTIFY",68,{"inputs":[{"name":"window"},{"name":"window"}],"output":{"name":"destroynotifyevent"}}],[11,"event","","The reconfigured window or its parent, depending on whether `StructureNotify` or `SubstructureNotify` was selected.",69,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"window","","The window that was unmapped.",69,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"from_configure","","Set to 1 if the event was generated as a result of a resizing of the window's parent when `window` had a win_gravity of `UnmapGravity`.",69,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"new","","Constructs a new UnmapNotifyEvent `response_type` will be set automatically to UNMAP_NOTIFY",69,{"inputs":[{"name":"window"},{"name":"window"},{"name":"bool"}],"output":{"name":"unmapnotifyevent"}}],[11,"event","","The window which was mapped or its parent, depending on whether `StructureNotify` or `SubstructureNotify` was selected.",70,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"window","","The window that was mapped.",70,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"override_redirect","","Window managers should ignore this window if `override_redirect` is 1.",70,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"new","","Constructs a new MapNotifyEvent `response_type` will be set automatically to MAP_NOTIFY",70,{"inputs":[{"name":"window"},{"name":"window"},{"name":"bool"}],"output":{"name":"mapnotifyevent"}}],[11,"parent","","The parent of `window`.",71,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"window","","The window to be mapped.",71,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"new","","Constructs a new MapRequestEvent `response_type` will be set automatically to MAP_REQUEST",71,{"inputs":[{"name":"window"},{"name":"window"}],"output":{"name":"maprequestevent"}}],[11,"event","","",72,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"window","","",72,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"parent","","",72,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"x","","",72,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"y","","",72,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"override_redirect","","",72,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"new","","Constructs a new ReparentNotifyEvent `response_type` will be set automatically to REPARENT_NOTIFY",72,{"inputs":[{"name":"window"},{"name":"window"},{"name":"window"},{"name":"i16"},{"name":"i16"},{"name":"bool"}],"output":{"name":"reparentnotifyevent"}}],[11,"event","","The reconfigured window or its parent, depending on whether `StructureNotify` or `SubstructureNotify` was selected.",73,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"window","","The window whose size, position, border, and/or stacking order was changed.",73,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"above_sibling","","If `XCB_NONE`, the `window` is on the bottom of the stack with respect to sibling windows. However, if set to a sibling window, the `window` is placed on top of this sibling window.",73,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"x","","The X coordinate of the upper-left outside corner of `window`, relative to the parent window's origin.",73,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"y","","The Y coordinate of the upper-left outside corner of `window`, relative to the parent window's origin.",73,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"width","","The inside width of `window`, not including the border.",73,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"height","","The inside height of `window`, not including the border.",73,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"border_width","","The border width of `window`.",73,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"override_redirect","","Window managers should ignore this window if `override_redirect` is 1.",73,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"new","","Constructs a new ConfigureNotifyEvent `response_type` will be set automatically to CONFIGURE_NOTIFY",73,{"inputs":[{"name":"window"},{"name":"window"},{"name":"window"},{"name":"i16"},{"name":"i16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"bool"}],"output":{"name":"configurenotifyevent"}}],[11,"stack_mode","","",74,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"parent","","",74,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"window","","",74,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"sibling","","",74,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"x","","",74,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"y","","",74,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"width","","",74,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"height","","",74,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"border_width","","",74,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"value_mask","","",74,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"new","","Constructs a new ConfigureRequestEvent `response_type` will be set automatically to CONFIGURE_REQUEST",74,{"inputs":[{"name":"u8"},{"name":"window"},{"name":"window"},{"name":"window"},{"name":"i16"},{"name":"i16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"configurerequestevent"}}],[11,"event","","",75,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"window","","",75,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"x","","",75,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"y","","",75,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"new","","Constructs a new GravityNotifyEvent `response_type` will be set automatically to GRAVITY_NOTIFY",75,{"inputs":[{"name":"window"},{"name":"window"},{"name":"i16"},{"name":"i16"}],"output":{"name":"gravitynotifyevent"}}],[11,"window","","",76,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"width","","",76,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"height","","",76,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"new","","Constructs a new ResizeRequestEvent `response_type` will be set automatically to RESIZE_REQUEST",76,{"inputs":[{"name":"window"},{"name":"u16"},{"name":"u16"}],"output":{"name":"resizerequestevent"}}],[11,"event","","Either the restacked window or its parent, depending on whether `StructureNotify` or `SubstructureNotify` was selected.",77,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"window","","The restacked window.",77,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"place","","",77,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"new","","Constructs a new CirculateNotifyEvent `response_type` must be set to one of:     - `CIRCULATE_NOTIFY`     - `CIRCULATE_REQUEST`",77,{"inputs":[{"name":"u8"},{"name":"window"},{"name":"window"},{"name":"u8"}],"output":{"name":"circulatenotifyevent"}}],[11,"window","","The window whose associated property was changed.",78,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"atom","","The property's atom, to indicate which property was changed.",78,{"inputs":[{"name":"self"}],"output":{"name":"atom"}}],[11,"time","","A timestamp of the server time when the property was changed.",78,{"inputs":[{"name":"self"}],"output":{"name":"timestamp"}}],[11,"state","","",78,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"new","","Constructs a new PropertyNotifyEvent `response_type` will be set automatically to PROPERTY_NOTIFY",78,{"inputs":[{"name":"window"},{"name":"atom"},{"name":"timestamp"},{"name":"u8"}],"output":{"name":"propertynotifyevent"}}],[11,"time","","",79,{"inputs":[{"name":"self"}],"output":{"name":"timestamp"}}],[11,"owner","","",79,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"selection","","",79,{"inputs":[{"name":"self"}],"output":{"name":"atom"}}],[11,"new","","Constructs a new SelectionClearEvent `response_type` will be set automatically to SELECTION_CLEAR",79,{"inputs":[{"name":"timestamp"},{"name":"window"},{"name":"atom"}],"output":{"name":"selectionclearevent"}}],[11,"time","","",80,{"inputs":[{"name":"self"}],"output":{"name":"timestamp"}}],[11,"owner","","",80,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"requestor","","",80,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"selection","","",80,{"inputs":[{"name":"self"}],"output":{"name":"atom"}}],[11,"target","","",80,{"inputs":[{"name":"self"}],"output":{"name":"atom"}}],[11,"property","","",80,{"inputs":[{"name":"self"}],"output":{"name":"atom"}}],[11,"new","","Constructs a new SelectionRequestEvent `response_type` will be set automatically to SELECTION_REQUEST",80,{"inputs":[{"name":"timestamp"},{"name":"window"},{"name":"window"},{"name":"atom"},{"name":"atom"},{"name":"atom"}],"output":{"name":"selectionrequestevent"}}],[11,"time","","",81,{"inputs":[{"name":"self"}],"output":{"name":"timestamp"}}],[11,"requestor","","",81,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"selection","","",81,{"inputs":[{"name":"self"}],"output":{"name":"atom"}}],[11,"target","","",81,{"inputs":[{"name":"self"}],"output":{"name":"atom"}}],[11,"property","","",81,{"inputs":[{"name":"self"}],"output":{"name":"atom"}}],[11,"new","","Constructs a new SelectionNotifyEvent `response_type` will be set automatically to SELECTION_NOTIFY",81,{"inputs":[{"name":"timestamp"},{"name":"window"},{"name":"atom"},{"name":"atom"},{"name":"atom"}],"output":{"name":"selectionnotifyevent"}}],[11,"window","","The window whose associated colormap is changed, installed or uninstalled.",82,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"colormap","","The colormap which is changed, installed or uninstalled. This is `XCB_NONE` when the colormap is changed by a call to `FreeColormap`.",82,{"inputs":[{"name":"self"}],"output":{"name":"colormap"}}],[11,"new_","","",82,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"state","","",82,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"new","","Constructs a new ColormapNotifyEvent `response_type` will be set automatically to COLORMAP_NOTIFY",82,{"inputs":[{"name":"window"},{"name":"colormap"},{"name":"bool"},{"name":"u8"}],"output":{"name":"colormapnotifyevent"}}],[11,"data8","","",83,null],[11,"from_data8","","",83,null],[11,"data16","","",83,null],[11,"from_data16","","",83,null],[11,"data32","","",83,null],[11,"from_data32","","",83,null],[11,"next","","",84,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"format","","Specifies how to interpret `data`. Can be either 8, 16 or 32.",85,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"window","","",85,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"type_","","An atom which indicates how the data should be interpreted by the receiving client.",85,{"inputs":[{"name":"self"}],"output":{"name":"atom"}}],[11,"data","","The data itself (20 bytes max).",85,{"inputs":[{"name":"self"}],"output":{"name":"clientmessagedata"}}],[11,"new","","Constructs a new ClientMessageEvent `response_type` will be set automatically to CLIENT_MESSAGE",85,{"inputs":[{"name":"u8"},{"name":"window"},{"name":"atom"},{"name":"clientmessagedata"}],"output":{"name":"clientmessageevent"}}],[11,"request","","",86,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"first_keycode","","The first number in the range of the altered mapping.",86,{"inputs":[{"name":"self"}],"output":{"name":"keycode"}}],[11,"count","","The number of keycodes altered.",86,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"new","","Constructs a new MappingNotifyEvent `response_type` will be set automatically to MAPPING_NOTIFY",86,{"inputs":[{"name":"u8"},{"name":"keycode"},{"name":"u8"}],"output":{"name":"mappingnotifyevent"}}],[11,"new","","Constructs a new GeGenericEvent `response_type` will be set automatically to GE_GENERIC",87,{"inputs":[],"output":{"name":"gegenericevent"}}],[11,"get_reply","","",88,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"backing_store","","",89,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"visual","","",89,{"inputs":[{"name":"self"}],"output":{"name":"visualid"}}],[11,"class","","",89,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"bit_gravity","","",89,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"win_gravity","","",89,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"backing_planes","","",89,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"backing_pixel","","",89,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"save_under","","",89,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"map_is_installed","","",89,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"map_state","","",89,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"override_redirect","","",89,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"colormap","","",89,{"inputs":[{"name":"self"}],"output":{"name":"colormap"}}],[11,"all_event_masks","","",89,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"your_event_mask","","",89,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"do_not_propagate_mask","","",89,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"get_reply","","",90,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"depth","","",91,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"root","","",91,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"x","","",91,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"y","","",91,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"width","","",91,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"height","","",91,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"border_width","","",91,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"get_reply","","",92,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"root","","",93,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"parent","","",93,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"children_len","","",93,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"children","","",93,null],[11,"get_reply","","",94,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"atom","","",95,{"inputs":[{"name":"self"}],"output":{"name":"atom"}}],[11,"get_reply","","",96,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"name_len","","",97,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"name","","",97,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"get_reply","","",98,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"format","","",99,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"type_","","",99,{"inputs":[{"name":"self"}],"output":{"name":"atom"}}],[11,"bytes_after","","",99,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"value_len","","",99,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"value","","",99,null],[11,"get_reply","","",100,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"atoms_len","","",101,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"atoms","","",101,null],[11,"get_reply","","",102,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"owner","","",103,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"get_reply","","",104,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"status","","",105,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"get_reply","","",106,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"status","","",107,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"get_reply","","",108,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"same_screen","","",109,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"root","","",109,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"child","","",109,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"root_x","","",109,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"root_y","","",109,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"win_x","","",109,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"win_y","","",109,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"mask","","",109,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"timecoord"}}],[11,"new","","",33,{"inputs":[{"name":"timestamp"},{"name":"i16"},{"name":"i16"}],"output":{"name":"timecoord"}}],[11,"time","","",33,{"inputs":[{"name":"self"}],"output":{"name":"timestamp"}}],[11,"x","","",33,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"y","","",33,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"next","","",110,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_reply","","",111,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"events_len","","",112,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"events","","",112,{"inputs":[{"name":"self"}],"output":{"name":"timecoorditerator"}}],[11,"get_reply","","",113,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"same_screen","","",114,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"child","","",114,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"dst_x","","",114,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"dst_y","","",114,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"get_reply","","",115,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"revert_to","","",116,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"focus","","",116,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"get_reply","","",117,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"keys","","",118,null],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"fontprop"}}],[11,"new","","",34,{"inputs":[{"name":"atom"},{"name":"u32"}],"output":{"name":"fontprop"}}],[11,"name","","",34,{"inputs":[{"name":"self"}],"output":{"name":"atom"}}],[11,"value","","",34,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"next","","",119,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"charinfo"}}],[11,"new","","",35,{"inputs":[{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"u16"}],"output":{"name":"charinfo"}}],[11,"left_side_bearing","","",35,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"right_side_bearing","","",35,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"character_width","","",35,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"ascent","","",35,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"descent","","",35,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"attributes","","",35,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"next","","",120,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_reply","","",121,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"min_bounds","","",122,{"inputs":[{"name":"self"}],"output":{"name":"charinfo"}}],[11,"max_bounds","","",122,{"inputs":[{"name":"self"}],"output":{"name":"charinfo"}}],[11,"min_char_or_byte2","","",122,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"max_char_or_byte2","","",122,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"default_char","","",122,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"properties_len","","",122,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"draw_direction","","",122,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"min_byte1","","",122,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"max_byte1","","",122,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"all_chars_exist","","",122,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"font_ascent","","",122,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"font_descent","","",122,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"char_infos_len","","",122,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"properties","","",122,{"inputs":[{"name":"self"}],"output":{"name":"fontpropiterator"}}],[11,"char_infos","","",122,{"inputs":[{"name":"self"}],"output":{"name":"charinfoiterator"}}],[11,"get_reply","","",123,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"draw_direction","","",124,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"font_ascent","","",124,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"font_descent","","",124,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"overall_ascent","","",124,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"overall_descent","","",124,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"overall_width","","",124,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"overall_left","","",124,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"overall_right","","",124,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"name_len","","",125,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"name","","",125,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"next","","",126,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_reply","","",127,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"names_len","","",128,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"names","","",128,{"inputs":[{"name":"self"}],"output":{"name":"striterator"}}],[11,"get_reply","","",129,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"name_len","","",130,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"min_bounds","","",130,{"inputs":[{"name":"self"}],"output":{"name":"charinfo"}}],[11,"max_bounds","","",130,{"inputs":[{"name":"self"}],"output":{"name":"charinfo"}}],[11,"min_char_or_byte2","","",130,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"max_char_or_byte2","","",130,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"default_char","","",130,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"properties_len","","",130,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"draw_direction","","",130,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"min_byte1","","",130,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"max_byte1","","",130,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"all_chars_exist","","",130,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"font_ascent","","",130,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"font_descent","","",130,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"replies_hint","","",130,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"properties","","",130,{"inputs":[{"name":"self"}],"output":{"name":"fontpropiterator"}}],[11,"name","","",130,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"get_reply","","",131,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"path_len","","",132,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"path","","",132,{"inputs":[{"name":"self"}],"output":{"name":"striterator"}}],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"segment"}}],[11,"new","","",36,{"inputs":[{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"}],"output":{"name":"segment"}}],[11,"x1","","",36,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"y1","","",36,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"x2","","",36,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"y2","","",36,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"next","","",133,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_reply","","",134,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"depth","","",135,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"visual","","",135,{"inputs":[{"name":"self"}],"output":{"name":"visualid"}}],[11,"data","","",135,null],[11,"get_reply","","",136,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"cmaps_len","","",137,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"cmaps","","",137,null],[11,"get_reply","","",138,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"red","","",139,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"green","","",139,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"blue","","",139,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"pixel","","",139,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_reply","","",140,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"pixel","","",141,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"exact_red","","",141,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"exact_green","","",141,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"exact_blue","","",141,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"visual_red","","",141,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"visual_green","","",141,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"visual_blue","","",141,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"get_reply","","",142,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"pixels_len","","",143,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"masks_len","","",143,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"pixels","","",143,null],[11,"masks","","",143,null],[11,"get_reply","","",144,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"pixels_len","","",145,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"red_mask","","",145,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"green_mask","","",145,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"blue_mask","","",145,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"pixels","","",145,null],[11,"clone","","",37,{"inputs":[{"name":"self"}],"output":{"name":"coloritem"}}],[11,"new","","",37,{"inputs":[{"name":"u32"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u8"}],"output":{"name":"coloritem"}}],[11,"pixel","","",37,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"red","","",37,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"green","","",37,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"blue","","",37,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"flags","","",37,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"next","","",146,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",38,{"inputs":[{"name":"self"}],"output":{"name":"rgb"}}],[11,"new","","",38,{"inputs":[{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"rgb"}}],[11,"red","","",38,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"green","","",38,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"blue","","",38,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"next","","",147,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_reply","","",148,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"colors_len","","",149,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"colors","","",149,{"inputs":[{"name":"self"}],"output":{"name":"rgbiterator"}}],[11,"get_reply","","",150,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"exact_red","","",151,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"exact_green","","",151,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"exact_blue","","",151,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"visual_red","","",151,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"visual_green","","",151,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"visual_blue","","",151,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"get_reply","","",152,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"width","","",153,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"height","","",153,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"get_reply","","",154,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"present","","",155,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"major_opcode","","",155,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"first_event","","",155,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"first_error","","",155,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"get_reply","","",156,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"names_len","","",157,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"names","","",157,{"inputs":[{"name":"self"}],"output":{"name":"striterator"}}],[11,"get_reply","","",158,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"keysyms_per_keycode","","",159,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"keysyms","","",159,null],[11,"get_reply","","",160,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"global_auto_repeat","","",161,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"led_mask","","",161,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"key_click_percent","","",161,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"bell_percent","","",161,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"bell_pitch","","",161,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"bell_duration","","",161,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"auto_repeats","","",161,null],[11,"get_reply","","",162,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"acceleration_numerator","","",163,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"acceleration_denominator","","",163,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"threshold","","",163,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"get_reply","","",164,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"timeout","","",165,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"interval","","",165,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"prefer_blanking","","",165,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"allow_exposures","","",165,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"family","","",166,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"address_len","","",166,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"address","","",166,null],[11,"next","","",167,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_reply","","",168,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"mode","","",169,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"hosts_len","","",169,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"hosts","","",169,{"inputs":[{"name":"self"}],"output":{"name":"hostiterator"}}],[11,"get_reply","","",170,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"status","","",171,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"get_reply","","",172,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"map_len","","",173,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"map","","",173,null],[11,"get_reply","","",174,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"status","","",175,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"get_reply","","",176,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"keycodes_per_modifier","","",177,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"keycodes","","",177,null],[0,"big_requests","xcb","",null,null],[5,"id","xcb::big_requests","",null,{"inputs":[],"output":{"name":"extension"}}],[5,"enable","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"enablecookie"}}],[5,"enable_unchecked","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"enablecookie"}}],[6,"EnableCookie","","",null,null],[6,"EnableReply","","",null,null],[17,"MAJOR_VERSION","","",null,null],[17,"MINOR_VERSION","","",null,null],[17,"ENABLE","","",null,null],[11,"get_reply","","",178,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"maximum_request_length","","",179,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[0,"xc_misc","xcb","",null,null],[5,"id","xcb::xc_misc","",null,{"inputs":[],"output":{"name":"extension"}}],[5,"get_version","","",null,{"inputs":[{"name":"connection"},{"name":"u16"},{"name":"u16"}],"output":{"name":"getversioncookie"}}],[5,"get_version_unchecked","","",null,{"inputs":[{"name":"connection"},{"name":"u16"},{"name":"u16"}],"output":{"name":"getversioncookie"}}],[5,"get_xid_range","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"getxidrangecookie"}}],[5,"get_xid_range_unchecked","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"getxidrangecookie"}}],[5,"get_xid_list","","",null,{"inputs":[{"name":"connection"},{"name":"u32"}],"output":{"name":"getxidlistcookie"}}],[5,"get_xid_list_unchecked","","",null,{"inputs":[{"name":"connection"},{"name":"u32"}],"output":{"name":"getxidlistcookie"}}],[6,"GetVersionCookie","","",null,null],[6,"GetVersionReply","","",null,null],[6,"GetXidRangeCookie","","",null,null],[6,"GetXidRangeReply","","",null,null],[6,"GetXidListCookie","","",null,null],[6,"GetXidListReply","","",null,null],[17,"MAJOR_VERSION","","",null,null],[17,"MINOR_VERSION","","",null,null],[17,"GET_VERSION","","",null,null],[17,"GET_XID_RANGE","","",null,null],[17,"GET_XID_LIST","","",null,null],[11,"get_reply","","",180,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"server_major_version","","",181,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"server_minor_version","","",181,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"get_reply","","",182,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"start_id","","",183,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"count","","",183,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_reply","","",184,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"ids_len","","",185,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"ids","","",185,null],[0,"xkb","xcb","",null,null],[3,"KeyboardError","xcb::xkb","",null,null],[12,"base","","",186,null],[3,"IndicatorMap","","",null,null],[12,"base","","",187,null],[3,"ModDef","","",null,null],[12,"base","","",188,null],[3,"KtMapEntry","","",null,null],[12,"base","","",189,null],[3,"CommonBehavior","","",null,null],[12,"base","","",190,null],[3,"DefaultBehavior","","",null,null],[12,"base","","",191,null],[3,"LockBehavior","","",null,null],[12,"base","","",192,null],[3,"RadioGroupBehavior","","",null,null],[12,"base","","",193,null],[3,"OverlayBehavior","","",null,null],[12,"base","","",194,null],[3,"PermamentLockBehavior","","",null,null],[12,"base","","",195,null],[3,"PermamentRadioGroupBehavior","","",null,null],[12,"base","","",196,null],[3,"PermamentOverlayBehavior","","",null,null],[12,"base","","",197,null],[3,"SetExplicit","","",null,null],[12,"base","","",198,null],[3,"KeyModMap","","",null,null],[12,"base","","",199,null],[3,"KeyVModMap","","",null,null],[12,"base","","",200,null],[3,"KtSetMapEntry","","",null,null],[12,"base","","",201,null],[3,"SaNoAction","","",null,null],[12,"base","","",202,null],[3,"SaSetMods","","",null,null],[12,"base","","",203,null],[3,"SaLatchMods","","",null,null],[12,"base","","",204,null],[3,"SaLockMods","","",null,null],[12,"base","","",205,null],[3,"SaSetGroup","","",null,null],[12,"base","","",206,null],[3,"SaLatchGroup","","",null,null],[12,"base","","",207,null],[3,"SaLockGroup","","",null,null],[12,"base","","",208,null],[3,"SaMovePtr","","",null,null],[12,"base","","",209,null],[3,"SaPtrBtn","","",null,null],[12,"base","","",210,null],[3,"SaLockPtrBtn","","",null,null],[12,"base","","",211,null],[3,"SaSetPtrDflt","","",null,null],[12,"base","","",212,null],[3,"SaIsoLock","","",null,null],[12,"base","","",213,null],[3,"SaTerminate","","",null,null],[12,"base","","",214,null],[3,"SaSwitchScreen","","",null,null],[12,"base","","",215,null],[3,"SaSetControls","","",null,null],[12,"base","","",216,null],[3,"SaLockControls","","",null,null],[12,"base","","",217,null],[3,"SaRedirectKey","","",null,null],[12,"base","","",218,null],[3,"SaDeviceBtn","","",null,null],[12,"base","","",219,null],[3,"SaLockDeviceBtn","","",null,null],[12,"base","","",220,null],[3,"SaDeviceValuator","","",null,null],[12,"base","","",221,null],[5,"id","","",null,{"inputs":[],"output":{"name":"extension"}}],[5,"use_extension","","",null,{"inputs":[{"name":"connection"},{"name":"u16"},{"name":"u16"}],"output":{"name":"useextensioncookie"}}],[5,"use_extension_unchecked","","",null,{"inputs":[{"name":"connection"},{"name":"u16"},{"name":"u16"}],"output":{"name":"useextensioncookie"}}],[5,"select_events","","",null,{"inputs":[{"name":"connection"},{"name":"devicespec"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"option"}],"output":{"name":"voidcookie"}}],[5,"select_events_checked","","",null,{"inputs":[{"name":"connection"},{"name":"devicespec"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"option"}],"output":{"name":"voidcookie"}}],[5,"bell","","",null,{"inputs":[{"name":"connection"},{"name":"devicespec"},{"name":"bellclassspec"},{"name":"idspec"},{"name":"i8"},{"name":"bool"},{"name":"bool"},{"name":"i16"},{"name":"i16"},{"name":"atom"},{"name":"window"}],"output":{"name":"voidcookie"}}],[5,"bell_checked","","",null,{"inputs":[{"name":"connection"},{"name":"devicespec"},{"name":"bellclassspec"},{"name":"idspec"},{"name":"i8"},{"name":"bool"},{"name":"bool"},{"name":"i16"},{"name":"i16"},{"name":"atom"},{"name":"window"}],"output":{"name":"voidcookie"}}],[5,"get_state","","",null,{"inputs":[{"name":"connection"},{"name":"devicespec"}],"output":{"name":"getstatecookie"}}],[5,"get_state_unchecked","","",null,{"inputs":[{"name":"connection"},{"name":"devicespec"}],"output":{"name":"getstatecookie"}}],[5,"latch_lock_state","","",null,{"inputs":[{"name":"connection"},{"name":"devicespec"},{"name":"u8"},{"name":"u8"},{"name":"bool"},{"name":"u8"},{"name":"u8"},{"name":"bool"},{"name":"u16"}],"output":{"name":"voidcookie"}}],[5,"latch_lock_state_checked","","",null,{"inputs":[{"name":"connection"},{"name":"devicespec"},{"name":"u8"},{"name":"u8"},{"name":"bool"},{"name":"u8"},{"name":"u8"},{"name":"bool"},{"name":"u16"}],"output":{"name":"voidcookie"}}],[5,"get_controls","","",null,{"inputs":[{"name":"connection"},{"name":"devicespec"}],"output":{"name":"getcontrolscookie"}}],[5,"get_controls_unchecked","","",null,{"inputs":[{"name":"connection"},{"name":"devicespec"}],"output":{"name":"getcontrolscookie"}}],[5,"set_controls","","",null,null],[5,"set_controls_checked","","",null,null],[5,"get_map","","",null,{"inputs":[{"name":"connection"},{"name":"devicespec"},{"name":"u16"},{"name":"u16"},{"name":"u8"},{"name":"u8"},{"name":"keycode"},{"name":"u8"},{"name":"keycode"},{"name":"u8"},{"name":"keycode"},{"name":"u8"},{"name":"u16"},{"name":"keycode"},{"name":"u8"},{"name":"keycode"},{"name":"u8"},{"name":"keycode"},{"name":"u8"}],"output":{"name":"getmapcookie"}}],[5,"get_map_unchecked","","",null,{"inputs":[{"name":"connection"},{"name":"devicespec"},{"name":"u16"},{"name":"u16"},{"name":"u8"},{"name":"u8"},{"name":"keycode"},{"name":"u8"},{"name":"keycode"},{"name":"u8"},{"name":"keycode"},{"name":"u8"},{"name":"u16"},{"name":"keycode"},{"name":"u8"},{"name":"keycode"},{"name":"u8"},{"name":"keycode"},{"name":"u8"}],"output":{"name":"getmapcookie"}}],[5,"set_map","","",null,{"inputs":[{"name":"connection"},{"name":"devicespec"},{"name":"u16"},{"name":"u16"},{"name":"keycode"},{"name":"keycode"},{"name":"u8"},{"name":"u8"},{"name":"keycode"},{"name":"u8"},{"name":"u16"},{"name":"keycode"},{"name":"u8"},{"name":"u16"},{"name":"keycode"},{"name":"u8"},{"name":"u8"},{"name":"keycode"},{"name":"u8"},{"name":"u8"},{"name":"keycode"},{"name":"u8"},{"name":"u8"},{"name":"keycode"},{"name":"u8"},{"name":"u8"},{"name":"u16"},{"name":"option"}],"output":{"name":"voidcookie"}}],[5,"set_map_checked","","",null,{"inputs":[{"name":"connection"},{"name":"devicespec"},{"name":"u16"},{"name":"u16"},{"name":"keycode"},{"name":"keycode"},{"name":"u8"},{"name":"u8"},{"name":"keycode"},{"name":"u8"},{"name":"u16"},{"name":"keycode"},{"name":"u8"},{"name":"u16"},{"name":"keycode"},{"name":"u8"},{"name":"u8"},{"name":"keycode"},{"name":"u8"},{"name":"u8"},{"name":"keycode"},{"name":"u8"},{"name":"u8"},{"name":"keycode"},{"name":"u8"},{"name":"u8"},{"name":"u16"},{"name":"option"}],"output":{"name":"voidcookie"}}],[5,"get_compat_map","","",null,{"inputs":[{"name":"connection"},{"name":"devicespec"},{"name":"u8"},{"name":"bool"},{"name":"u16"},{"name":"u16"}],"output":{"name":"getcompatmapcookie"}}],[5,"get_compat_map_unchecked","","",null,{"inputs":[{"name":"connection"},{"name":"devicespec"},{"name":"u8"},{"name":"bool"},{"name":"u16"},{"name":"u16"}],"output":{"name":"getcompatmapcookie"}}],[5,"set_compat_map","","",null,null],[5,"set_compat_map_checked","","",null,null],[5,"get_indicator_state","","",null,{"inputs":[{"name":"connection"},{"name":"devicespec"}],"output":{"name":"getindicatorstatecookie"}}],[5,"get_indicator_state_unchecked","","",null,{"inputs":[{"name":"connection"},{"name":"devicespec"}],"output":{"name":"getindicatorstatecookie"}}],[5,"get_indicator_map","","",null,{"inputs":[{"name":"connection"},{"name":"devicespec"},{"name":"u32"}],"output":{"name":"getindicatormapcookie"}}],[5,"get_indicator_map_unchecked","","",null,{"inputs":[{"name":"connection"},{"name":"devicespec"},{"name":"u32"}],"output":{"name":"getindicatormapcookie"}}],[5,"set_indicator_map","","",null,null],[5,"set_indicator_map_checked","","",null,null],[5,"get_named_indicator","","",null,{"inputs":[{"name":"connection"},{"name":"devicespec"},{"name":"ledclassspec"},{"name":"idspec"},{"name":"atom"}],"output":{"name":"getnamedindicatorcookie"}}],[5,"get_named_indicator_unchecked","","",null,{"inputs":[{"name":"connection"},{"name":"devicespec"},{"name":"ledclassspec"},{"name":"idspec"},{"name":"atom"}],"output":{"name":"getnamedindicatorcookie"}}],[5,"set_named_indicator","","",null,{"inputs":[{"name":"connection"},{"name":"devicespec"},{"name":"ledclassspec"},{"name":"idspec"},{"name":"atom"},{"name":"bool"},{"name":"bool"},{"name":"bool"},{"name":"bool"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u16"},{"name":"u32"}],"output":{"name":"voidcookie"}}],[5,"set_named_indicator_checked","","",null,{"inputs":[{"name":"connection"},{"name":"devicespec"},{"name":"ledclassspec"},{"name":"idspec"},{"name":"atom"},{"name":"bool"},{"name":"bool"},{"name":"bool"},{"name":"bool"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u16"},{"name":"u32"}],"output":{"name":"voidcookie"}}],[5,"get_names","","",null,{"inputs":[{"name":"connection"},{"name":"devicespec"},{"name":"u32"}],"output":{"name":"getnamescookie"}}],[5,"get_names_unchecked","","",null,{"inputs":[{"name":"connection"},{"name":"devicespec"},{"name":"u32"}],"output":{"name":"getnamescookie"}}],[5,"set_names","","",null,{"inputs":[{"name":"connection"},{"name":"devicespec"},{"name":"u16"},{"name":"u32"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u32"},{"name":"u8"},{"name":"u8"},{"name":"keycode"},{"name":"u8"},{"name":"u8"},{"name":"u16"},{"name":"option"}],"output":{"name":"voidcookie"}}],[5,"set_names_checked","","",null,{"inputs":[{"name":"connection"},{"name":"devicespec"},{"name":"u16"},{"name":"u32"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u32"},{"name":"u8"},{"name":"u8"},{"name":"keycode"},{"name":"u8"},{"name":"u8"},{"name":"u16"},{"name":"option"}],"output":{"name":"voidcookie"}}],[5,"per_client_flags","","",null,{"inputs":[{"name":"connection"},{"name":"devicespec"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"perclientflagscookie"}}],[5,"per_client_flags_unchecked","","",null,{"inputs":[{"name":"connection"},{"name":"devicespec"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"perclientflagscookie"}}],[5,"list_components","","",null,{"inputs":[{"name":"connection"},{"name":"devicespec"},{"name":"u16"}],"output":{"name":"listcomponentscookie"}}],[5,"list_components_unchecked","","",null,{"inputs":[{"name":"connection"},{"name":"devicespec"},{"name":"u16"}],"output":{"name":"listcomponentscookie"}}],[5,"get_kbd_by_name","","",null,{"inputs":[{"name":"connection"},{"name":"devicespec"},{"name":"u16"},{"name":"u16"},{"name":"bool"}],"output":{"name":"getkbdbynamecookie"}}],[5,"get_kbd_by_name_unchecked","","",null,{"inputs":[{"name":"connection"},{"name":"devicespec"},{"name":"u16"},{"name":"u16"},{"name":"bool"}],"output":{"name":"getkbdbynamecookie"}}],[5,"get_device_info","","",null,{"inputs":[{"name":"connection"},{"name":"devicespec"},{"name":"u16"},{"name":"bool"},{"name":"u8"},{"name":"u8"},{"name":"ledclassspec"},{"name":"idspec"}],"output":{"name":"getdeviceinfocookie"}}],[5,"get_device_info_unchecked","","",null,{"inputs":[{"name":"connection"},{"name":"devicespec"},{"name":"u16"},{"name":"bool"},{"name":"u8"},{"name":"u8"},{"name":"ledclassspec"},{"name":"idspec"}],"output":{"name":"getdeviceinfocookie"}}],[5,"set_device_info","","",null,null],[5,"set_device_info_checked","","",null,null],[5,"set_debugging_flags","","",null,null],[5,"set_debugging_flags_unchecked","","",null,null],[6,"Const","","",null,null],[6,"EventType","","",null,null],[6,"NknDetail","","",null,null],[6,"AxnDetail","","",null,null],[6,"MapPart","","",null,null],[6,"SetMapFlags","","",null,null],[6,"StatePart","","",null,null],[6,"BoolCtrl","","",null,null],[6,"Control","","",null,null],[6,"AxOption","","",null,null],[6,"DeviceSpec","","",null,null],[6,"LedClassResult","","",null,null],[6,"LedClass","","",null,null],[6,"LedClassSpec","","",null,null],[6,"BellClassResult","","",null,null],[6,"BellClass","","",null,null],[6,"BellClassSpec","","",null,null],[6,"Id","","",null,null],[6,"IdSpec","","",null,null],[6,"Group","","",null,null],[6,"Groups","","",null,null],[6,"SetOfGroup","","",null,null],[6,"SetOfGroups","","",null,null],[6,"GroupsWrap","","",null,null],[6,"VModsHigh","","",null,null],[6,"VModsLow","","",null,null],[6,"VMod","","",null,null],[6,"Explicit","","",null,null],[6,"SymInterpretMatch","","",null,null],[6,"SymInterpMatch","","",null,null],[6,"ImFlag","","",null,null],[6,"ImModsWhich","","",null,null],[6,"ImGroupsWhich","","",null,null],[6,"CmDetail","","",null,null],[6,"NameDetail","","",null,null],[6,"GbnDetail","","",null,null],[6,"XiFeature","","",null,null],[6,"PerClientFlag","","",null,null],[6,"BehaviorType","","",null,null],[6,"String8","","",null,null],[6,"DoodadType","","",null,null],[6,"Error","","",null,null],[6,"Sa","","",null,null],[6,"SaType","","",null,null],[6,"SaMovePtrFlag","","",null,null],[6,"SaSetPtrDfltFlag","","",null,null],[6,"SaIsoLockFlag","","",null,null],[6,"SaIsoLockNoAffect","","",null,null],[6,"SwitchScreenFlag","","",null,null],[6,"BoolCtrlsHigh","","",null,null],[6,"BoolCtrlsLow","","",null,null],[6,"ActionMessageFlag","","",null,null],[6,"LockDeviceFlags","","",null,null],[6,"SaValWhat","","",null,null],[6,"IndicatorMapIterator","","",null,null],[6,"ModDefIterator","","",null,null],[6,"KeyName","","",null,null],[6,"KeyNameIterator","","",null,null],[6,"KeyAlias","","",null,null],[6,"KeyAliasIterator","","",null,null],[6,"CountedString16","","",null,null],[6,"CountedString16Iterator","","",null,null],[6,"KtMapEntryIterator","","",null,null],[6,"KeyType","","",null,null],[6,"KeyTypeIterator","","",null,null],[6,"KeySymMap","","",null,null],[6,"KeySymMapIterator","","",null,null],[6,"CommonBehaviorIterator","","",null,null],[6,"DefaultBehaviorIterator","","",null,null],[6,"LockBehaviorIterator","","",null,null],[6,"RadioGroupBehaviorIterator","","",null,null],[6,"OverlayBehaviorIterator","","",null,null],[6,"PermamentLockBehaviorIterator","","",null,null],[6,"PermamentRadioGroupBehaviorIterator","","",null,null],[6,"PermamentOverlayBehaviorIterator","","",null,null],[6,"Behavior","","",null,null],[6,"BehaviorIterator","","",null,null],[6,"SetBehavior","","",null,null],[6,"SetBehaviorIterator","","",null,null],[6,"SetExplicitIterator","","",null,null],[6,"KeyModMapIterator","","",null,null],[6,"KeyVModMapIterator","","",null,null],[6,"KtSetMapEntryIterator","","",null,null],[6,"SetKeyType","","",null,null],[6,"SetKeyTypeIterator","","",null,null],[6,"Outline","","",null,null],[6,"OutlineIterator","","",null,null],[6,"Shape","","",null,null],[6,"ShapeIterator","","",null,null],[6,"Key","","",null,null],[6,"KeyIterator","","",null,null],[6,"OverlayKey","","",null,null],[6,"OverlayKeyIterator","","",null,null],[6,"OverlayRow","","",null,null],[6,"OverlayRowIterator","","",null,null],[6,"Overlay","","",null,null],[6,"OverlayIterator","","",null,null],[6,"Row","","",null,null],[6,"RowIterator","","",null,null],[6,"Listing","","",null,null],[6,"ListingIterator","","",null,null],[6,"DeviceLedInfo","","",null,null],[6,"DeviceLedInfoIterator","","",null,null],[6,"SaNoActionIterator","","",null,null],[6,"SaSetModsIterator","","",null,null],[6,"SaLatchModsIterator","","",null,null],[6,"SaLockModsIterator","","",null,null],[6,"SaSetGroupIterator","","",null,null],[6,"SaLatchGroupIterator","","",null,null],[6,"SaLockGroupIterator","","",null,null],[6,"SaMovePtrIterator","","",null,null],[6,"SaPtrBtnIterator","","",null,null],[6,"SaLockPtrBtnIterator","","",null,null],[6,"SaSetPtrDfltIterator","","",null,null],[6,"SaIsoLockIterator","","",null,null],[6,"SaTerminateIterator","","",null,null],[6,"SaSwitchScreenIterator","","",null,null],[6,"SaSetControlsIterator","","",null,null],[6,"SaLockControlsIterator","","",null,null],[6,"SaActionMessage","","",null,null],[6,"SaActionMessageIterator","","",null,null],[6,"SaRedirectKeyIterator","","",null,null],[6,"SaDeviceBtnIterator","","",null,null],[6,"SaLockDeviceBtnIterator","","",null,null],[6,"SaDeviceValuatorIterator","","",null,null],[6,"SiAction","","",null,null],[6,"SiActionIterator","","",null,null],[6,"SymInterpret","","",null,null],[6,"SymInterpretIterator","","",null,null],[6,"Action","","",null,null],[6,"ActionIterator","","",null,null],[6,"UseExtensionCookie","","",null,null],[6,"UseExtensionReply","","",null,null],[6,"SelectEventsDetails","","",null,null],[6,"GetStateCookie","","",null,null],[6,"GetStateReply","","",null,null],[6,"GetControlsCookie","","",null,null],[6,"GetControlsReply","","",null,null],[6,"GetMapCookie","","",null,null],[6,"GetMapMap","","",null,null],[6,"GetMapReply","","",null,null],[6,"SetMapValues","","",null,null],[6,"GetCompatMapCookie","","",null,null],[6,"GetCompatMapReply","","",null,null],[6,"GetIndicatorStateCookie","","",null,null],[6,"GetIndicatorStateReply","","",null,null],[6,"GetIndicatorMapCookie","","",null,null],[6,"GetIndicatorMapReply","","",null,null],[6,"GetNamedIndicatorCookie","","",null,null],[6,"GetNamedIndicatorReply","","",null,null],[6,"GetNamesCookie","","",null,null],[6,"GetNamesValueList","","",null,null],[6,"GetNamesReply","","",null,null],[6,"SetNamesValues","","",null,null],[6,"PerClientFlagsCookie","","",null,null],[6,"PerClientFlagsReply","","",null,null],[6,"ListComponentsCookie","","",null,null],[6,"ListComponentsReply","","",null,null],[6,"GetKbdByNameCookie","","",null,null],[6,"GetKbdByNameReplies","","",null,null],[6,"GetKbdByNameRepliesTypesMap","","",null,null],[6,"GetKbdByNameRepliesKeyNamesValueList","","",null,null],[6,"GetKbdByNameReply","","",null,null],[6,"GetDeviceInfoCookie","","",null,null],[6,"GetDeviceInfoReply","","",null,null],[6,"SetDebuggingFlagsCookie","","",null,null],[6,"SetDebuggingFlagsReply","","",null,null],[6,"NewKeyboardNotifyEvent","","",null,null],[6,"MapNotifyEvent","","",null,null],[6,"StateNotifyEvent","","",null,null],[6,"ControlsNotifyEvent","","",null,null],[6,"IndicatorStateNotifyEvent","","",null,null],[6,"IndicatorMapNotifyEvent","","",null,null],[6,"NamesNotifyEvent","","",null,null],[6,"CompatMapNotifyEvent","","",null,null],[6,"BellNotifyEvent","","",null,null],[6,"ActionMessageEvent","","",null,null],[6,"AccessXNotifyEvent","","",null,null],[6,"ExtensionDeviceNotifyEvent","","",null,null],[17,"MAJOR_VERSION","","",null,null],[17,"MINOR_VERSION","","",null,null],[17,"CONST_MAX_LEGAL_KEY_CODE","","",null,null],[17,"CONST_PER_KEY_BIT_ARRAY_SIZE","","",null,null],[17,"CONST_KEY_NAME_LENGTH","","",null,null],[17,"EVENT_TYPE_NEW_KEYBOARD_NOTIFY","","",null,null],[17,"EVENT_TYPE_MAP_NOTIFY","","",null,null],[17,"EVENT_TYPE_STATE_NOTIFY","","",null,null],[17,"EVENT_TYPE_CONTROLS_NOTIFY","","",null,null],[17,"EVENT_TYPE_INDICATOR_STATE_NOTIFY","","",null,null],[17,"EVENT_TYPE_INDICATOR_MAP_NOTIFY","","",null,null],[17,"EVENT_TYPE_NAMES_NOTIFY","","",null,null],[17,"EVENT_TYPE_COMPAT_MAP_NOTIFY","","",null,null],[17,"EVENT_TYPE_BELL_NOTIFY","","",null,null],[17,"EVENT_TYPE_ACTION_MESSAGE","","",null,null],[17,"EVENT_TYPE_ACCESS_X_NOTIFY","","",null,null],[17,"EVENT_TYPE_EXTENSION_DEVICE_NOTIFY","","",null,null],[17,"NKN_DETAIL_KEYCODES","","",null,null],[17,"NKN_DETAIL_GEOMETRY","","",null,null],[17,"NKN_DETAIL_DEVICE_ID","","",null,null],[17,"AXN_DETAIL_SK_PRESS","","",null,null],[17,"AXN_DETAIL_SK_ACCEPT","","",null,null],[17,"AXN_DETAIL_SK_REJECT","","",null,null],[17,"AXN_DETAIL_SK_RELEASE","","",null,null],[17,"AXN_DETAIL_BK_ACCEPT","","",null,null],[17,"AXN_DETAIL_BK_REJECT","","",null,null],[17,"AXN_DETAIL_AXK_WARNING","","",null,null],[17,"MAP_PART_KEY_TYPES","","",null,null],[17,"MAP_PART_KEY_SYMS","","",null,null],[17,"MAP_PART_MODIFIER_MAP","","",null,null],[17,"MAP_PART_EXPLICIT_COMPONENTS","","",null,null],[17,"MAP_PART_KEY_ACTIONS","","",null,null],[17,"MAP_PART_KEY_BEHAVIORS","","",null,null],[17,"MAP_PART_VIRTUAL_MODS","","",null,null],[17,"MAP_PART_VIRTUAL_MOD_MAP","","",null,null],[17,"SET_MAP_FLAGS_RESIZE_TYPES","","",null,null],[17,"SET_MAP_FLAGS_RECOMPUTE_ACTIONS","","",null,null],[17,"STATE_PART_MODIFIER_STATE","","",null,null],[17,"STATE_PART_MODIFIER_BASE","","",null,null],[17,"STATE_PART_MODIFIER_LATCH","","",null,null],[17,"STATE_PART_MODIFIER_LOCK","","",null,null],[17,"STATE_PART_GROUP_STATE","","",null,null],[17,"STATE_PART_GROUP_BASE","","",null,null],[17,"STATE_PART_GROUP_LATCH","","",null,null],[17,"STATE_PART_GROUP_LOCK","","",null,null],[17,"STATE_PART_COMPAT_STATE","","",null,null],[17,"STATE_PART_GRAB_MODS","","",null,null],[17,"STATE_PART_COMPAT_GRAB_MODS","","",null,null],[17,"STATE_PART_LOOKUP_MODS","","",null,null],[17,"STATE_PART_COMPAT_LOOKUP_MODS","","",null,null],[17,"STATE_PART_POINTER_BUTTONS","","",null,null],[17,"BOOL_CTRL_REPEAT_KEYS","","",null,null],[17,"BOOL_CTRL_SLOW_KEYS","","",null,null],[17,"BOOL_CTRL_BOUNCE_KEYS","","",null,null],[17,"BOOL_CTRL_STICKY_KEYS","","",null,null],[17,"BOOL_CTRL_MOUSE_KEYS","","",null,null],[17,"BOOL_CTRL_MOUSE_KEYS_ACCEL","","",null,null],[17,"BOOL_CTRL_ACCESS_X_KEYS","","",null,null],[17,"BOOL_CTRL_ACCESS_X_TIMEOUT_MASK","","",null,null],[17,"BOOL_CTRL_ACCESS_X_FEEDBACK_MASK","","",null,null],[17,"BOOL_CTRL_AUDIBLE_BELL_MASK","","",null,null],[17,"BOOL_CTRL_OVERLAY_1_MASK","","",null,null],[17,"BOOL_CTRL_OVERLAY_2_MASK","","",null,null],[17,"BOOL_CTRL_IGNORE_GROUP_LOCK_MASK","","",null,null],[17,"CONTROL_GROUPS_WRAP","","",null,null],[17,"CONTROL_INTERNAL_MODS","","",null,null],[17,"CONTROL_IGNORE_LOCK_MODS","","",null,null],[17,"CONTROL_PER_KEY_REPEAT","","",null,null],[17,"CONTROL_CONTROLS_ENABLED","","",null,null],[17,"AX_OPTION_SK_PRESS_FB","","",null,null],[17,"AX_OPTION_SK_ACCEPT_FB","","",null,null],[17,"AX_OPTION_FEATURE_FB","","",null,null],[17,"AX_OPTION_SLOW_WARN_FB","","",null,null],[17,"AX_OPTION_INDICATOR_FB","","",null,null],[17,"AX_OPTION_STICKY_KEYS_FB","","",null,null],[17,"AX_OPTION_TWO_KEYS","","",null,null],[17,"AX_OPTION_LATCH_TO_LOCK","","",null,null],[17,"AX_OPTION_SK_RELEASE_FB","","",null,null],[17,"AX_OPTION_SK_REJECT_FB","","",null,null],[17,"AX_OPTION_BK_REJECT_FB","","",null,null],[17,"AX_OPTION_DUMB_BELL","","",null,null],[17,"LED_CLASS_RESULT_KBD_FEEDBACK_CLASS","","",null,null],[17,"LED_CLASS_RESULT_LED_FEEDBACK_CLASS","","",null,null],[17,"LED_CLASS_KBD_FEEDBACK_CLASS","","",null,null],[17,"LED_CLASS_LED_FEEDBACK_CLASS","","",null,null],[17,"LED_CLASS_DFLT_XI_CLASS","","",null,null],[17,"LED_CLASS_ALL_XI_CLASSES","","",null,null],[17,"BELL_CLASS_RESULT_KBD_FEEDBACK_CLASS","","",null,null],[17,"BELL_CLASS_RESULT_BELL_FEEDBACK_CLASS","","",null,null],[17,"BELL_CLASS_KBD_FEEDBACK_CLASS","","",null,null],[17,"BELL_CLASS_BELL_FEEDBACK_CLASS","","",null,null],[17,"BELL_CLASS_DFLT_XI_CLASS","","",null,null],[17,"ID_USE_CORE_KBD","","",null,null],[17,"ID_USE_CORE_PTR","","",null,null],[17,"ID_DFLT_XI_CLASS","","",null,null],[17,"ID_DFLT_XI_ID","","",null,null],[17,"ID_ALL_XI_CLASS","","",null,null],[17,"ID_ALL_XI_ID","","",null,null],[17,"ID_XI_NONE","","",null,null],[17,"GROUP_1","","",null,null],[17,"GROUP_2","","",null,null],[17,"GROUP_3","","",null,null],[17,"GROUP_4","","",null,null],[17,"GROUPS_ANY","","",null,null],[17,"GROUPS_ALL","","",null,null],[17,"SET_OF_GROUP_GROUP_1","","",null,null],[17,"SET_OF_GROUP_GROUP_2","","",null,null],[17,"SET_OF_GROUP_GROUP_3","","",null,null],[17,"SET_OF_GROUP_GROUP_4","","",null,null],[17,"SET_OF_GROUPS_ANY","","",null,null],[17,"GROUPS_WRAP_WRAP_INTO_RANGE","","",null,null],[17,"GROUPS_WRAP_CLAMP_INTO_RANGE","","",null,null],[17,"GROUPS_WRAP_REDIRECT_INTO_RANGE","","",null,null],[17,"V_MODS_HIGH_15","","",null,null],[17,"V_MODS_HIGH_14","","",null,null],[17,"V_MODS_HIGH_13","","",null,null],[17,"V_MODS_HIGH_12","","",null,null],[17,"V_MODS_HIGH_11","","",null,null],[17,"V_MODS_HIGH_10","","",null,null],[17,"V_MODS_HIGH_9","","",null,null],[17,"V_MODS_HIGH_8","","",null,null],[17,"V_MODS_LOW_7","","",null,null],[17,"V_MODS_LOW_6","","",null,null],[17,"V_MODS_LOW_5","","",null,null],[17,"V_MODS_LOW_4","","",null,null],[17,"V_MODS_LOW_3","","",null,null],[17,"V_MODS_LOW_2","","",null,null],[17,"V_MODS_LOW_1","","",null,null],[17,"V_MODS_LOW_0","","",null,null],[17,"V_MOD_15","","",null,null],[17,"V_MOD_14","","",null,null],[17,"V_MOD_13","","",null,null],[17,"V_MOD_12","","",null,null],[17,"V_MOD_11","","",null,null],[17,"V_MOD_10","","",null,null],[17,"V_MOD_9","","",null,null],[17,"V_MOD_8","","",null,null],[17,"V_MOD_7","","",null,null],[17,"V_MOD_6","","",null,null],[17,"V_MOD_5","","",null,null],[17,"V_MOD_4","","",null,null],[17,"V_MOD_3","","",null,null],[17,"V_MOD_2","","",null,null],[17,"V_MOD_1","","",null,null],[17,"V_MOD_0","","",null,null],[17,"EXPLICIT_V_MOD_MAP","","",null,null],[17,"EXPLICIT_BEHAVIOR","","",null,null],[17,"EXPLICIT_AUTO_REPEAT","","",null,null],[17,"EXPLICIT_INTERPRET","","",null,null],[17,"EXPLICIT_KEY_TYPE_4","","",null,null],[17,"EXPLICIT_KEY_TYPE_3","","",null,null],[17,"EXPLICIT_KEY_TYPE_2","","",null,null],[17,"EXPLICIT_KEY_TYPE_1","","",null,null],[17,"SYM_INTERPRET_MATCH_NONE_OF","","",null,null],[17,"SYM_INTERPRET_MATCH_ANY_OF_OR_NONE","","",null,null],[17,"SYM_INTERPRET_MATCH_ANY_OF","","",null,null],[17,"SYM_INTERPRET_MATCH_ALL_OF","","",null,null],[17,"SYM_INTERPRET_MATCH_EXACTLY","","",null,null],[17,"SYM_INTERP_MATCH_LEVEL_ONE_ONLY","","",null,null],[17,"SYM_INTERP_MATCH_OP_MASK","","",null,null],[17,"IM_FLAG_NO_EXPLICIT","","",null,null],[17,"IM_FLAG_NO_AUTOMATIC","","",null,null],[17,"IM_FLAG_LED_DRIVES_KB","","",null,null],[17,"IM_MODS_WHICH_USE_COMPAT","","",null,null],[17,"IM_MODS_WHICH_USE_EFFECTIVE","","",null,null],[17,"IM_MODS_WHICH_USE_LOCKED","","",null,null],[17,"IM_MODS_WHICH_USE_LATCHED","","",null,null],[17,"IM_MODS_WHICH_USE_BASE","","",null,null],[17,"IM_GROUPS_WHICH_USE_COMPAT","","",null,null],[17,"IM_GROUPS_WHICH_USE_EFFECTIVE","","",null,null],[17,"IM_GROUPS_WHICH_USE_LOCKED","","",null,null],[17,"IM_GROUPS_WHICH_USE_LATCHED","","",null,null],[17,"IM_GROUPS_WHICH_USE_BASE","","",null,null],[17,"CM_DETAIL_SYM_INTERP","","",null,null],[17,"CM_DETAIL_GROUP_COMPAT","","",null,null],[17,"NAME_DETAIL_KEYCODES","","",null,null],[17,"NAME_DETAIL_GEOMETRY","","",null,null],[17,"NAME_DETAIL_SYMBOLS","","",null,null],[17,"NAME_DETAIL_PHYS_SYMBOLS","","",null,null],[17,"NAME_DETAIL_TYPES","","",null,null],[17,"NAME_DETAIL_COMPAT","","",null,null],[17,"NAME_DETAIL_KEY_TYPE_NAMES","","",null,null],[17,"NAME_DETAIL_KT_LEVEL_NAMES","","",null,null],[17,"NAME_DETAIL_INDICATOR_NAMES","","",null,null],[17,"NAME_DETAIL_KEY_NAMES","","",null,null],[17,"NAME_DETAIL_KEY_ALIASES","","",null,null],[17,"NAME_DETAIL_VIRTUAL_MOD_NAMES","","",null,null],[17,"NAME_DETAIL_GROUP_NAMES","","",null,null],[17,"NAME_DETAIL_RG_NAMES","","",null,null],[17,"GBN_DETAIL_TYPES","","",null,null],[17,"GBN_DETAIL_COMPAT_MAP","","",null,null],[17,"GBN_DETAIL_CLIENT_SYMBOLS","","",null,null],[17,"GBN_DETAIL_SERVER_SYMBOLS","","",null,null],[17,"GBN_DETAIL_INDICATOR_MAPS","","",null,null],[17,"GBN_DETAIL_KEY_NAMES","","",null,null],[17,"GBN_DETAIL_GEOMETRY","","",null,null],[17,"GBN_DETAIL_OTHER_NAMES","","",null,null],[17,"XI_FEATURE_KEYBOARDS","","",null,null],[17,"XI_FEATURE_BUTTON_ACTIONS","","",null,null],[17,"XI_FEATURE_INDICATOR_NAMES","","",null,null],[17,"XI_FEATURE_INDICATOR_MAPS","","",null,null],[17,"XI_FEATURE_INDICATOR_STATE","","",null,null],[17,"PER_CLIENT_FLAG_DETECTABLE_AUTO_REPEAT","","",null,null],[17,"PER_CLIENT_FLAG_GRABS_USE_XKB_STATE","","",null,null],[17,"PER_CLIENT_FLAG_AUTO_RESET_CONTROLS","","",null,null],[17,"PER_CLIENT_FLAG_LOOKUP_STATE_WHEN_GRABBED","","",null,null],[17,"PER_CLIENT_FLAG_SEND_EVENT_USES_XKB_STATE","","",null,null],[17,"BEHAVIOR_TYPE_DEFAULT","","",null,null],[17,"BEHAVIOR_TYPE_LOCK","","",null,null],[17,"BEHAVIOR_TYPE_RADIO_GROUP","","",null,null],[17,"BEHAVIOR_TYPE_OVERLAY_1","","",null,null],[17,"BEHAVIOR_TYPE_OVERLAY_2","","",null,null],[17,"BEHAVIOR_TYPE_PERMAMENT_LOCK","","",null,null],[17,"BEHAVIOR_TYPE_PERMAMENT_RADIO_GROUP","","",null,null],[17,"BEHAVIOR_TYPE_PERMAMENT_OVERLAY_1","","",null,null],[17,"BEHAVIOR_TYPE_PERMAMENT_OVERLAY_2","","",null,null],[17,"DOODAD_TYPE_OUTLINE","","",null,null],[17,"DOODAD_TYPE_SOLID","","",null,null],[17,"DOODAD_TYPE_TEXT","","",null,null],[17,"DOODAD_TYPE_INDICATOR","","",null,null],[17,"DOODAD_TYPE_LOGO","","",null,null],[17,"ERROR_BAD_DEVICE","","",null,null],[17,"ERROR_BAD_CLASS","","",null,null],[17,"ERROR_BAD_ID","","",null,null],[17,"SA_CLEAR_LOCKS","","",null,null],[17,"SA_LATCH_TO_LOCK","","",null,null],[17,"SA_USE_MOD_MAP_MODS","","",null,null],[17,"SA_GROUP_ABSOLUTE","","",null,null],[17,"SA_TYPE_NO_ACTION","","",null,null],[17,"SA_TYPE_SET_MODS","","",null,null],[17,"SA_TYPE_LATCH_MODS","","",null,null],[17,"SA_TYPE_LOCK_MODS","","",null,null],[17,"SA_TYPE_SET_GROUP","","",null,null],[17,"SA_TYPE_LATCH_GROUP","","",null,null],[17,"SA_TYPE_LOCK_GROUP","","",null,null],[17,"SA_TYPE_MOVE_PTR","","",null,null],[17,"SA_TYPE_PTR_BTN","","",null,null],[17,"SA_TYPE_LOCK_PTR_BTN","","",null,null],[17,"SA_TYPE_SET_PTR_DFLT","","",null,null],[17,"SA_TYPE_ISO_LOCK","","",null,null],[17,"SA_TYPE_TERMINATE","","",null,null],[17,"SA_TYPE_SWITCH_SCREEN","","",null,null],[17,"SA_TYPE_SET_CONTROLS","","",null,null],[17,"SA_TYPE_LOCK_CONTROLS","","",null,null],[17,"SA_TYPE_ACTION_MESSAGE","","",null,null],[17,"SA_TYPE_REDIRECT_KEY","","",null,null],[17,"SA_TYPE_DEVICE_BTN","","",null,null],[17,"SA_TYPE_LOCK_DEVICE_BTN","","",null,null],[17,"SA_TYPE_DEVICE_VALUATOR","","",null,null],[17,"SA_MOVE_PTR_FLAG_NO_ACCELERATION","","",null,null],[17,"SA_MOVE_PTR_FLAG_MOVE_ABSOLUTE_X","","",null,null],[17,"SA_MOVE_PTR_FLAG_MOVE_ABSOLUTE_Y","","",null,null],[17,"SA_SET_PTR_DFLT_FLAG_DFLT_BTN_ABSOLUTE","","",null,null],[17,"SA_SET_PTR_DFLT_FLAG_AFFECT_DFLT_BUTTON","","",null,null],[17,"SA_ISO_LOCK_FLAG_NO_LOCK","","",null,null],[17,"SA_ISO_LOCK_FLAG_NO_UNLOCK","","",null,null],[17,"SA_ISO_LOCK_FLAG_USE_MOD_MAP_MODS","","",null,null],[17,"SA_ISO_LOCK_FLAG_GROUP_ABSOLUTE","","",null,null],[17,"SA_ISO_LOCK_FLAG_ISO_DFLT_IS_GROUP","","",null,null],[17,"SA_ISO_LOCK_NO_AFFECT_CTRLS","","",null,null],[17,"SA_ISO_LOCK_NO_AFFECT_PTR","","",null,null],[17,"SA_ISO_LOCK_NO_AFFECT_GROUP","","",null,null],[17,"SA_ISO_LOCK_NO_AFFECT_MODS","","",null,null],[17,"SWITCH_SCREEN_FLAG_APPLICATION","","",null,null],[17,"SWITCH_SCREEN_FLAG_ABSOLUTE","","",null,null],[17,"BOOL_CTRLS_HIGH_ACCESS_X_FEEDBACK","","",null,null],[17,"BOOL_CTRLS_HIGH_AUDIBLE_BELL","","",null,null],[17,"BOOL_CTRLS_HIGH_OVERLAY_1","","",null,null],[17,"BOOL_CTRLS_HIGH_OVERLAY_2","","",null,null],[17,"BOOL_CTRLS_HIGH_IGNORE_GROUP_LOCK","","",null,null],[17,"BOOL_CTRLS_LOW_REPEAT_KEYS","","",null,null],[17,"BOOL_CTRLS_LOW_SLOW_KEYS","","",null,null],[17,"BOOL_CTRLS_LOW_BOUNCE_KEYS","","",null,null],[17,"BOOL_CTRLS_LOW_STICKY_KEYS","","",null,null],[17,"BOOL_CTRLS_LOW_MOUSE_KEYS","","",null,null],[17,"BOOL_CTRLS_LOW_MOUSE_KEYS_ACCEL","","",null,null],[17,"BOOL_CTRLS_LOW_ACCESS_X_KEYS","","",null,null],[17,"BOOL_CTRLS_LOW_ACCESS_X_TIMEOUT","","",null,null],[17,"ACTION_MESSAGE_FLAG_ON_PRESS","","",null,null],[17,"ACTION_MESSAGE_FLAG_ON_RELEASE","","",null,null],[17,"ACTION_MESSAGE_FLAG_GEN_KEY_EVENT","","",null,null],[17,"LOCK_DEVICE_FLAGS_NO_LOCK","","",null,null],[17,"LOCK_DEVICE_FLAGS_NO_UNLOCK","","",null,null],[17,"SA_VAL_WHAT_IGNORE_VAL","","",null,null],[17,"SA_VAL_WHAT_SET_VAL_MIN","","",null,null],[17,"SA_VAL_WHAT_SET_VAL_CENTER","","",null,null],[17,"SA_VAL_WHAT_SET_VAL_MAX","","",null,null],[17,"SA_VAL_WHAT_SET_VAL_RELATIVE","","",null,null],[17,"SA_VAL_WHAT_SET_VAL_ABSOLUTE","","",null,null],[17,"KEYBOARD","","",null,null],[17,"USE_EXTENSION","","",null,null],[17,"SELECT_EVENTS","","",null,null],[17,"BELL","","",null,null],[17,"GET_STATE","","",null,null],[17,"LATCH_LOCK_STATE","","",null,null],[17,"GET_CONTROLS","","",null,null],[17,"SET_CONTROLS","","",null,null],[17,"GET_MAP","","",null,null],[17,"SET_MAP","","",null,null],[17,"GET_COMPAT_MAP","","",null,null],[17,"SET_COMPAT_MAP","","",null,null],[17,"GET_INDICATOR_STATE","","",null,null],[17,"GET_INDICATOR_MAP","","",null,null],[17,"SET_INDICATOR_MAP","","",null,null],[17,"GET_NAMED_INDICATOR","","",null,null],[17,"SET_NAMED_INDICATOR","","",null,null],[17,"GET_NAMES","","",null,null],[17,"SET_NAMES","","",null,null],[17,"PER_CLIENT_FLAGS","","",null,null],[17,"LIST_COMPONENTS","","",null,null],[17,"GET_KBD_BY_NAME","","",null,null],[17,"GET_DEVICE_INFO","","",null,null],[17,"SET_DEVICE_INFO","","",null,null],[17,"SET_DEBUGGING_FLAGS","","",null,null],[17,"NEW_KEYBOARD_NOTIFY","","",null,null],[17,"MAP_NOTIFY","","",null,null],[17,"STATE_NOTIFY","","",null,null],[17,"CONTROLS_NOTIFY","","",null,null],[17,"INDICATOR_STATE_NOTIFY","","",null,null],[17,"INDICATOR_MAP_NOTIFY","","",null,null],[17,"NAMES_NOTIFY","","",null,null],[17,"COMPAT_MAP_NOTIFY","","",null,null],[17,"BELL_NOTIFY","","",null,null],[17,"ACTION_MESSAGE","","",null,null],[17,"ACCESS_X_NOTIFY","","",null,null],[17,"EXTENSION_DEVICE_NOTIFY","","",null,null],[11,"clone","","",187,{"inputs":[{"name":"self"}],"output":{"name":"indicatormap"}}],[11,"new","","",187,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u16"},{"name":"u32"}],"output":{"name":"indicatormap"}}],[11,"flags","","",187,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"which_groups","","",187,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"groups","","",187,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"which_mods","","",187,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"mods","","",187,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"real_mods","","",187,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"vmods","","",187,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"ctrls","","",187,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"next","","",222,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",188,{"inputs":[{"name":"self"}],"output":{"name":"moddef"}}],[11,"new","","",188,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u16"}],"output":{"name":"moddef"}}],[11,"mask","","",188,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"real_mods","","",188,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"vmods","","",188,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"next","","",223,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"name","","",224,null],[11,"next","","",225,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"real","","",226,null],[11,"alias","","",226,null],[11,"next","","",227,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"length","","",228,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"string","","",228,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"alignment_pad","","",228,null],[11,"next","","",229,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",189,{"inputs":[{"name":"self"}],"output":{"name":"ktmapentry"}}],[11,"new","","",189,{"inputs":[{"name":"bool"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u16"}],"output":{"name":"ktmapentry"}}],[11,"active","","",189,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"mods_mask","","",189,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"level","","",189,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"mods_mods","","",189,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"mods_vmods","","",189,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"next","","",230,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"mods_mask","","",231,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"mods_mods","","",231,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"mods_vmods","","",231,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"num_levels","","",231,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"n_map_entries","","",231,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"has_preserve","","",231,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"map","","",231,{"inputs":[{"name":"self"}],"output":{"name":"ktmapentryiterator"}}],[11,"preserve","","",231,{"inputs":[{"name":"self"}],"output":{"name":"moddefiterator"}}],[11,"next","","",232,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"kt_index","","",233,null],[11,"group_info","","",233,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"width","","",233,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"n_syms","","",233,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"syms","","",233,null],[11,"next","","",234,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",190,{"inputs":[{"name":"self"}],"output":{"name":"commonbehavior"}}],[11,"new","","",190,{"inputs":[{"name":"u8"},{"name":"u8"}],"output":{"name":"commonbehavior"}}],[11,"type_","","",190,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"data","","",190,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"next","","",235,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",191,{"inputs":[{"name":"self"}],"output":{"name":"defaultbehavior"}}],[11,"new","","",191,{"inputs":[{"name":"u8"}],"output":{"name":"defaultbehavior"}}],[11,"type_","","",191,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"next","","",236,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",192,{"inputs":[{"name":"self"}],"output":{"name":"lockbehavior"}}],[11,"new","","",192,{"inputs":[{"name":"u8"}],"output":{"name":"lockbehavior"}}],[11,"type_","","",192,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"next","","",237,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",193,{"inputs":[{"name":"self"}],"output":{"name":"radiogroupbehavior"}}],[11,"new","","",193,{"inputs":[{"name":"u8"},{"name":"u8"}],"output":{"name":"radiogroupbehavior"}}],[11,"type_","","",193,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"group","","",193,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"next","","",238,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",194,{"inputs":[{"name":"self"}],"output":{"name":"overlaybehavior"}}],[11,"new","","",194,{"inputs":[{"name":"u8"},{"name":"keycode"}],"output":{"name":"overlaybehavior"}}],[11,"type_","","",194,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"key","","",194,{"inputs":[{"name":"self"}],"output":{"name":"keycode"}}],[11,"next","","",239,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",195,{"inputs":[{"name":"self"}],"output":{"name":"permamentlockbehavior"}}],[11,"new","","",195,{"inputs":[{"name":"u8"}],"output":{"name":"permamentlockbehavior"}}],[11,"type_","","",195,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"next","","",240,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",196,{"inputs":[{"name":"self"}],"output":{"name":"permamentradiogroupbehavior"}}],[11,"new","","",196,{"inputs":[{"name":"u8"},{"name":"u8"}],"output":{"name":"permamentradiogroupbehavior"}}],[11,"type_","","",196,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"group","","",196,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"next","","",241,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",197,{"inputs":[{"name":"self"}],"output":{"name":"permamentoverlaybehavior"}}],[11,"new","","",197,{"inputs":[{"name":"u8"},{"name":"keycode"}],"output":{"name":"permamentoverlaybehavior"}}],[11,"type_","","",197,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"key","","",197,{"inputs":[{"name":"self"}],"output":{"name":"keycode"}}],[11,"next","","",242,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"common","","",243,{"inputs":[{"name":"self"}],"output":{"name":"commonbehavior"}}],[11,"from_common","","",243,{"inputs":[{"name":"commonbehavior"}],"output":{"name":"behavior"}}],[11,"default","","",243,{"inputs":[{"name":"self"}],"output":{"name":"defaultbehavior"}}],[11,"from_default","","",243,{"inputs":[{"name":"defaultbehavior"}],"output":{"name":"behavior"}}],[11,"lock","","",243,{"inputs":[{"name":"self"}],"output":{"name":"lockbehavior"}}],[11,"from_lock","","",243,{"inputs":[{"name":"lockbehavior"}],"output":{"name":"behavior"}}],[11,"radio_group","","",243,{"inputs":[{"name":"self"}],"output":{"name":"radiogroupbehavior"}}],[11,"from_radio_group","","",243,{"inputs":[{"name":"radiogroupbehavior"}],"output":{"name":"behavior"}}],[11,"overlay1","","",243,{"inputs":[{"name":"self"}],"output":{"name":"overlaybehavior"}}],[11,"from_overlay1","","",243,{"inputs":[{"name":"overlaybehavior"}],"output":{"name":"behavior"}}],[11,"overlay2","","",243,{"inputs":[{"name":"self"}],"output":{"name":"overlaybehavior"}}],[11,"from_overlay2","","",243,{"inputs":[{"name":"overlaybehavior"}],"output":{"name":"behavior"}}],[11,"permament_lock","","",243,{"inputs":[{"name":"self"}],"output":{"name":"permamentlockbehavior"}}],[11,"from_permament_lock","","",243,{"inputs":[{"name":"permamentlockbehavior"}],"output":{"name":"behavior"}}],[11,"permament_radio_group","","",243,{"inputs":[{"name":"self"}],"output":{"name":"permamentradiogroupbehavior"}}],[11,"from_permament_radio_group","","",243,{"inputs":[{"name":"permamentradiogroupbehavior"}],"output":{"name":"behavior"}}],[11,"permament_overlay1","","",243,{"inputs":[{"name":"self"}],"output":{"name":"permamentoverlaybehavior"}}],[11,"from_permament_overlay1","","",243,{"inputs":[{"name":"permamentoverlaybehavior"}],"output":{"name":"behavior"}}],[11,"permament_overlay2","","",243,{"inputs":[{"name":"self"}],"output":{"name":"permamentoverlaybehavior"}}],[11,"from_permament_overlay2","","",243,{"inputs":[{"name":"permamentoverlaybehavior"}],"output":{"name":"behavior"}}],[11,"type_","","",243,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"from_type_","","",243,{"inputs":[{"name":"u8"}],"output":{"name":"behavior"}}],[11,"next","","",244,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"keycode","","",245,{"inputs":[{"name":"self"}],"output":{"name":"keycode"}}],[11,"behavior","","",245,{"inputs":[{"name":"self"}],"output":{"name":"behavior"}}],[11,"next","","",246,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",198,{"inputs":[{"name":"self"}],"output":{"name":"setexplicit"}}],[11,"new","","",198,{"inputs":[{"name":"keycode"},{"name":"u8"}],"output":{"name":"setexplicit"}}],[11,"keycode","","",198,{"inputs":[{"name":"self"}],"output":{"name":"keycode"}}],[11,"explicit","","",198,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"next","","",247,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",199,{"inputs":[{"name":"self"}],"output":{"name":"keymodmap"}}],[11,"new","","",199,{"inputs":[{"name":"keycode"},{"name":"u8"}],"output":{"name":"keymodmap"}}],[11,"keycode","","",199,{"inputs":[{"name":"self"}],"output":{"name":"keycode"}}],[11,"mods","","",199,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"next","","",248,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",200,{"inputs":[{"name":"self"}],"output":{"name":"keyvmodmap"}}],[11,"new","","",200,{"inputs":[{"name":"keycode"},{"name":"u16"}],"output":{"name":"keyvmodmap"}}],[11,"keycode","","",200,{"inputs":[{"name":"self"}],"output":{"name":"keycode"}}],[11,"vmods","","",200,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"next","","",249,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",201,{"inputs":[{"name":"self"}],"output":{"name":"ktsetmapentry"}}],[11,"new","","",201,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u16"}],"output":{"name":"ktsetmapentry"}}],[11,"level","","",201,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"real_mods","","",201,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"virtual_mods","","",201,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"next","","",250,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"mask","","",251,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"real_mods","","",251,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"virtual_mods","","",251,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"num_levels","","",251,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"n_map_entries","","",251,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"preserve","","",251,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"entries","","",251,{"inputs":[{"name":"self"}],"output":{"name":"ktsetmapentryiterator"}}],[11,"preserve_entries","","",251,{"inputs":[{"name":"self"}],"output":{"name":"ktsetmapentryiterator"}}],[11,"next","","",252,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"n_points","","",253,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"corner_radius","","",253,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"points","","",253,{"inputs":[{"name":"self"}],"output":{"name":"pointiterator"}}],[11,"next","","",254,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"name","","",255,{"inputs":[{"name":"self"}],"output":{"name":"atom"}}],[11,"n_outlines","","",255,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"primary_ndx","","",255,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"approx_ndx","","",255,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"outlines","","",255,{"inputs":[{"name":"self"}],"output":{"name":"outlineiterator"}}],[11,"next","","",256,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"name","","",257,null],[11,"gap","","",257,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"shape_ndx","","",257,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"color_ndx","","",257,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"next","","",258,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"over","","",259,null],[11,"under","","",259,null],[11,"next","","",260,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"row_under","","",261,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"n_keys","","",261,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"keys","","",261,{"inputs":[{"name":"self"}],"output":{"name":"overlaykeyiterator"}}],[11,"next","","",262,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"name","","",263,{"inputs":[{"name":"self"}],"output":{"name":"atom"}}],[11,"n_rows","","",263,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"rows","","",263,{"inputs":[{"name":"self"}],"output":{"name":"overlayrowiterator"}}],[11,"next","","",264,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"top","","",265,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"left","","",265,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"n_keys","","",265,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"vertical","","",265,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"keys","","",265,{"inputs":[{"name":"self"}],"output":{"name":"keyiterator"}}],[11,"next","","",266,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"flags","","",267,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"length","","",267,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"string","","",267,null],[11,"next","","",268,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"led_class","","",269,{"inputs":[{"name":"self"}],"output":{"name":"ledclassspec"}}],[11,"led_i_d","","",269,{"inputs":[{"name":"self"}],"output":{"name":"idspec"}}],[11,"names_present","","",269,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"maps_present","","",269,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"phys_indicators","","",269,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"state","","",269,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"names","","",269,null],[11,"maps","","",269,{"inputs":[{"name":"self"}],"output":{"name":"indicatormapiterator"}}],[11,"next","","",270,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",202,{"inputs":[{"name":"self"}],"output":{"name":"sanoaction"}}],[11,"new","","",202,{"inputs":[{"name":"u8"}],"output":{"name":"sanoaction"}}],[11,"type_","","",202,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"next","","",271,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",203,{"inputs":[{"name":"self"}],"output":{"name":"sasetmods"}}],[11,"new","","",203,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"sasetmods"}}],[11,"type_","","",203,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"flags","","",203,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"mask","","",203,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"real_mods","","",203,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"vmods_high","","",203,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"vmods_low","","",203,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"next","","",272,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",204,{"inputs":[{"name":"self"}],"output":{"name":"salatchmods"}}],[11,"new","","",204,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"salatchmods"}}],[11,"type_","","",204,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"flags","","",204,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"mask","","",204,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"real_mods","","",204,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"vmods_high","","",204,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"vmods_low","","",204,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"next","","",273,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",205,{"inputs":[{"name":"self"}],"output":{"name":"salockmods"}}],[11,"new","","",205,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"salockmods"}}],[11,"type_","","",205,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"flags","","",205,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"mask","","",205,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"real_mods","","",205,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"vmods_high","","",205,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"vmods_low","","",205,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"next","","",274,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",206,{"inputs":[{"name":"self"}],"output":{"name":"sasetgroup"}}],[11,"new","","",206,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"i8"}],"output":{"name":"sasetgroup"}}],[11,"type_","","",206,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"flags","","",206,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"group","","",206,{"inputs":[{"name":"self"}],"output":{"name":"i8"}}],[11,"next","","",275,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",207,{"inputs":[{"name":"self"}],"output":{"name":"salatchgroup"}}],[11,"new","","",207,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"i8"}],"output":{"name":"salatchgroup"}}],[11,"type_","","",207,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"flags","","",207,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"group","","",207,{"inputs":[{"name":"self"}],"output":{"name":"i8"}}],[11,"next","","",276,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",208,{"inputs":[{"name":"self"}],"output":{"name":"salockgroup"}}],[11,"new","","",208,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"i8"}],"output":{"name":"salockgroup"}}],[11,"type_","","",208,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"flags","","",208,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"group","","",208,{"inputs":[{"name":"self"}],"output":{"name":"i8"}}],[11,"next","","",277,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",209,{"inputs":[{"name":"self"}],"output":{"name":"samoveptr"}}],[11,"new","","",209,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"i8"},{"name":"u8"},{"name":"i8"},{"name":"u8"}],"output":{"name":"samoveptr"}}],[11,"type_","","",209,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"flags","","",209,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"x_high","","",209,{"inputs":[{"name":"self"}],"output":{"name":"i8"}}],[11,"x_low","","",209,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"y_high","","",209,{"inputs":[{"name":"self"}],"output":{"name":"i8"}}],[11,"y_low","","",209,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"next","","",278,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",210,{"inputs":[{"name":"self"}],"output":{"name":"saptrbtn"}}],[11,"new","","",210,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"saptrbtn"}}],[11,"type_","","",210,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"flags","","",210,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"count","","",210,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"button","","",210,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"next","","",279,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",211,{"inputs":[{"name":"self"}],"output":{"name":"salockptrbtn"}}],[11,"new","","",211,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"salockptrbtn"}}],[11,"type_","","",211,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"flags","","",211,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"button","","",211,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"next","","",280,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",212,{"inputs":[{"name":"self"}],"output":{"name":"sasetptrdflt"}}],[11,"new","","",212,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"i8"}],"output":{"name":"sasetptrdflt"}}],[11,"type_","","",212,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"flags","","",212,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"affect","","",212,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"value","","",212,{"inputs":[{"name":"self"}],"output":{"name":"i8"}}],[11,"next","","",281,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",213,{"inputs":[{"name":"self"}],"output":{"name":"saisolock"}}],[11,"new","","",213,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"i8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"saisolock"}}],[11,"type_","","",213,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"flags","","",213,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"mask","","",213,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"real_mods","","",213,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"group","","",213,{"inputs":[{"name":"self"}],"output":{"name":"i8"}}],[11,"affect","","",213,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"vmods_high","","",213,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"vmods_low","","",213,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"next","","",282,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",214,{"inputs":[{"name":"self"}],"output":{"name":"saterminate"}}],[11,"new","","",214,{"inputs":[{"name":"u8"}],"output":{"name":"saterminate"}}],[11,"type_","","",214,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"next","","",283,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",215,{"inputs":[{"name":"self"}],"output":{"name":"saswitchscreen"}}],[11,"new","","",215,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"i8"}],"output":{"name":"saswitchscreen"}}],[11,"type_","","",215,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"flags","","",215,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"new_screen","","",215,{"inputs":[{"name":"self"}],"output":{"name":"i8"}}],[11,"next","","",284,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",216,{"inputs":[{"name":"self"}],"output":{"name":"sasetcontrols"}}],[11,"new","","",216,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"sasetcontrols"}}],[11,"type_","","",216,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"bool_ctrls_high","","",216,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"bool_ctrls_low","","",216,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"next","","",285,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",217,{"inputs":[{"name":"self"}],"output":{"name":"salockcontrols"}}],[11,"new","","",217,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"salockcontrols"}}],[11,"type_","","",217,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"bool_ctrls_high","","",217,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"bool_ctrls_low","","",217,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"next","","",286,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"type_","","",287,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"flags","","",287,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"message","","",287,null],[11,"next","","",288,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",218,{"inputs":[{"name":"self"}],"output":{"name":"saredirectkey"}}],[11,"new","","",218,{"inputs":[{"name":"u8"},{"name":"keycode"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"saredirectkey"}}],[11,"type_","","",218,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"newkey","","",218,{"inputs":[{"name":"self"}],"output":{"name":"keycode"}}],[11,"mask","","",218,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"real_modifiers","","",218,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"vmods_mask_high","","",218,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"vmods_mask_low","","",218,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"vmods_high","","",218,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"vmods_low","","",218,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"next","","",289,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",219,{"inputs":[{"name":"self"}],"output":{"name":"sadevicebtn"}}],[11,"new","","",219,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"sadevicebtn"}}],[11,"type_","","",219,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"flags","","",219,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"count","","",219,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"button","","",219,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"device","","",219,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"next","","",290,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",220,{"inputs":[{"name":"self"}],"output":{"name":"salockdevicebtn"}}],[11,"new","","",220,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"salockdevicebtn"}}],[11,"type_","","",220,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"flags","","",220,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"button","","",220,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"device","","",220,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"next","","",291,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",221,{"inputs":[{"name":"self"}],"output":{"name":"sadevicevaluator"}}],[11,"new","","",221,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"sadevicevaluator"}}],[11,"type_","","",221,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"device","","",221,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"val1what","","",221,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"val1index","","",221,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"val1value","","",221,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"val2what","","",221,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"val2index","","",221,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"val2value","","",221,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"next","","",292,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"type_","","",293,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"data","","",293,null],[11,"next","","",294,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"sym","","",295,{"inputs":[{"name":"self"}],"output":{"name":"keysym"}}],[11,"mods","","",295,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"match_","","",295,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"virtual_mod","","",295,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"flags","","",295,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"action","","",295,{"inputs":[{"name":"self"}],"output":{"name":"siaction"}}],[11,"next","","",296,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"noaction","","",297,{"inputs":[{"name":"self"}],"output":{"name":"sanoaction"}}],[11,"from_noaction","","",297,{"inputs":[{"name":"sanoaction"}],"output":{"name":"action"}}],[11,"setmods","","",297,{"inputs":[{"name":"self"}],"output":{"name":"sasetmods"}}],[11,"from_setmods","","",297,{"inputs":[{"name":"sasetmods"}],"output":{"name":"action"}}],[11,"latchmods","","",297,{"inputs":[{"name":"self"}],"output":{"name":"salatchmods"}}],[11,"from_latchmods","","",297,{"inputs":[{"name":"salatchmods"}],"output":{"name":"action"}}],[11,"lockmods","","",297,{"inputs":[{"name":"self"}],"output":{"name":"salockmods"}}],[11,"from_lockmods","","",297,{"inputs":[{"name":"salockmods"}],"output":{"name":"action"}}],[11,"setgroup","","",297,{"inputs":[{"name":"self"}],"output":{"name":"sasetgroup"}}],[11,"from_setgroup","","",297,{"inputs":[{"name":"sasetgroup"}],"output":{"name":"action"}}],[11,"latchgroup","","",297,{"inputs":[{"name":"self"}],"output":{"name":"salatchgroup"}}],[11,"from_latchgroup","","",297,{"inputs":[{"name":"salatchgroup"}],"output":{"name":"action"}}],[11,"lockgroup","","",297,{"inputs":[{"name":"self"}],"output":{"name":"salockgroup"}}],[11,"from_lockgroup","","",297,{"inputs":[{"name":"salockgroup"}],"output":{"name":"action"}}],[11,"moveptr","","",297,{"inputs":[{"name":"self"}],"output":{"name":"samoveptr"}}],[11,"from_moveptr","","",297,{"inputs":[{"name":"samoveptr"}],"output":{"name":"action"}}],[11,"ptrbtn","","",297,{"inputs":[{"name":"self"}],"output":{"name":"saptrbtn"}}],[11,"from_ptrbtn","","",297,{"inputs":[{"name":"saptrbtn"}],"output":{"name":"action"}}],[11,"lockptrbtn","","",297,{"inputs":[{"name":"self"}],"output":{"name":"salockptrbtn"}}],[11,"from_lockptrbtn","","",297,{"inputs":[{"name":"salockptrbtn"}],"output":{"name":"action"}}],[11,"setptrdflt","","",297,{"inputs":[{"name":"self"}],"output":{"name":"sasetptrdflt"}}],[11,"from_setptrdflt","","",297,{"inputs":[{"name":"sasetptrdflt"}],"output":{"name":"action"}}],[11,"isolock","","",297,{"inputs":[{"name":"self"}],"output":{"name":"saisolock"}}],[11,"from_isolock","","",297,{"inputs":[{"name":"saisolock"}],"output":{"name":"action"}}],[11,"terminate","","",297,{"inputs":[{"name":"self"}],"output":{"name":"saterminate"}}],[11,"from_terminate","","",297,{"inputs":[{"name":"saterminate"}],"output":{"name":"action"}}],[11,"switchscreen","","",297,{"inputs":[{"name":"self"}],"output":{"name":"saswitchscreen"}}],[11,"from_switchscreen","","",297,{"inputs":[{"name":"saswitchscreen"}],"output":{"name":"action"}}],[11,"setcontrols","","",297,{"inputs":[{"name":"self"}],"output":{"name":"sasetcontrols"}}],[11,"from_setcontrols","","",297,{"inputs":[{"name":"sasetcontrols"}],"output":{"name":"action"}}],[11,"lockcontrols","","",297,{"inputs":[{"name":"self"}],"output":{"name":"salockcontrols"}}],[11,"from_lockcontrols","","",297,{"inputs":[{"name":"salockcontrols"}],"output":{"name":"action"}}],[11,"message","","",297,{"inputs":[{"name":"self"}],"output":{"name":"saactionmessage"}}],[11,"redirect","","",297,{"inputs":[{"name":"self"}],"output":{"name":"saredirectkey"}}],[11,"from_redirect","","",297,{"inputs":[{"name":"saredirectkey"}],"output":{"name":"action"}}],[11,"devbtn","","",297,{"inputs":[{"name":"self"}],"output":{"name":"sadevicebtn"}}],[11,"from_devbtn","","",297,{"inputs":[{"name":"sadevicebtn"}],"output":{"name":"action"}}],[11,"lockdevbtn","","",297,{"inputs":[{"name":"self"}],"output":{"name":"salockdevicebtn"}}],[11,"from_lockdevbtn","","",297,{"inputs":[{"name":"salockdevicebtn"}],"output":{"name":"action"}}],[11,"devval","","",297,{"inputs":[{"name":"self"}],"output":{"name":"sadevicevaluator"}}],[11,"from_devval","","",297,{"inputs":[{"name":"sadevicevaluator"}],"output":{"name":"action"}}],[11,"type_","","",297,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"from_type_","","",297,{"inputs":[{"name":"u8"}],"output":{"name":"action"}}],[11,"next","","",298,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_reply","","",299,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"supported","","",300,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"server_major","","",300,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"server_minor","","",300,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"get_reply","","",301,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"device_i_d","","",302,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"mods","","",302,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"base_mods","","",302,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"latched_mods","","",302,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"locked_mods","","",302,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"group","","",302,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"locked_group","","",302,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"base_group","","",302,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"latched_group","","",302,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"compat_state","","",302,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"grab_mods","","",302,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"compat_grab_mods","","",302,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"lookup_mods","","",302,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"compat_lookup_mods","","",302,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"ptr_btn_state","","",302,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"get_reply","","",303,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"device_i_d","","",304,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"mouse_keys_dflt_btn","","",304,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"num_groups","","",304,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"groups_wrap","","",304,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"internal_mods_mask","","",304,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"ignore_lock_mods_mask","","",304,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"internal_mods_real_mods","","",304,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"ignore_lock_mods_real_mods","","",304,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"internal_mods_vmods","","",304,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"ignore_lock_mods_vmods","","",304,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"repeat_delay","","",304,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"repeat_interval","","",304,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"slow_keys_delay","","",304,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"debounce_delay","","",304,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"mouse_keys_delay","","",304,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"mouse_keys_interval","","",304,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"mouse_keys_time_to_max","","",304,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"mouse_keys_max_speed","","",304,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"mouse_keys_curve","","",304,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"access_x_option","","",304,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"access_x_timeout","","",304,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"access_x_timeout_options_mask","","",304,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"access_x_timeout_options_values","","",304,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"access_x_timeout_mask","","",304,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"access_x_timeout_values","","",304,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"enabled_controls","","",304,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"per_key_repeat","","",304,null],[11,"get_reply","","",305,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"device_i_d","","",306,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"min_key_code","","",306,{"inputs":[{"name":"self"}],"output":{"name":"keycode"}}],[11,"max_key_code","","",306,{"inputs":[{"name":"self"}],"output":{"name":"keycode"}}],[11,"present","","",306,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"first_type","","",306,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"n_types","","",306,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"total_types","","",306,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"first_key_sym","","",306,{"inputs":[{"name":"self"}],"output":{"name":"keycode"}}],[11,"total_syms","","",306,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"n_key_syms","","",306,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"first_key_action","","",306,{"inputs":[{"name":"self"}],"output":{"name":"keycode"}}],[11,"total_actions","","",306,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"n_key_actions","","",306,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"first_key_behavior","","",306,{"inputs":[{"name":"self"}],"output":{"name":"keycode"}}],[11,"n_key_behaviors","","",306,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"total_key_behaviors","","",306,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"first_key_explicit","","",306,{"inputs":[{"name":"self"}],"output":{"name":"keycode"}}],[11,"n_key_explicit","","",306,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"total_key_explicit","","",306,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"first_mod_map_key","","",306,{"inputs":[{"name":"self"}],"output":{"name":"keycode"}}],[11,"n_mod_map_keys","","",306,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"total_mod_map_keys","","",306,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"first_v_mod_map_key","","",306,{"inputs":[{"name":"self"}],"output":{"name":"keycode"}}],[11,"n_v_mod_map_keys","","",306,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"total_v_mod_map_keys","","",306,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"virtual_mods","","",306,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"get_reply","","",307,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"device_i_d","","",308,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"groups_rtrn","","",308,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"first_s_i_rtrn","","",308,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"n_s_i_rtrn","","",308,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"n_total_s_i","","",308,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"si_rtrn","","",308,{"inputs":[{"name":"self"}],"output":{"name":"syminterpretiterator"}}],[11,"group_rtrn","","",308,{"inputs":[{"name":"self"}],"output":{"name":"moddefiterator"}}],[11,"get_reply","","",309,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"device_i_d","","",310,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"state","","",310,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_reply","","",311,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"device_i_d","","",312,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"which","","",312,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"real_indicators","","",312,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"n_indicators","","",312,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"maps","","",312,{"inputs":[{"name":"self"}],"output":{"name":"indicatormapiterator"}}],[11,"get_reply","","",313,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"device_i_d","","",314,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"indicator","","",314,{"inputs":[{"name":"self"}],"output":{"name":"atom"}}],[11,"found","","",314,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"on","","",314,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"real_indicator","","",314,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"ndx","","",314,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"map_flags","","",314,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"map_which_groups","","",314,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"map_groups","","",314,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"map_which_mods","","",314,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"map_mods","","",314,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"map_real_mods","","",314,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"map_vmod","","",314,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"map_ctrls","","",314,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"supported","","",314,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"get_reply","","",315,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"device_i_d","","",316,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"which","","",316,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"min_key_code","","",316,{"inputs":[{"name":"self"}],"output":{"name":"keycode"}}],[11,"max_key_code","","",316,{"inputs":[{"name":"self"}],"output":{"name":"keycode"}}],[11,"n_types","","",316,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"group_names","","",316,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"virtual_mods","","",316,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"first_key","","",316,{"inputs":[{"name":"self"}],"output":{"name":"keycode"}}],[11,"n_keys","","",316,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"indicators","","",316,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"n_radio_groups","","",316,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"n_key_aliases","","",316,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"n_k_t_levels","","",316,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"get_reply","","",317,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"device_i_d","","",318,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"supported","","",318,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"value","","",318,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"auto_ctrls","","",318,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"auto_ctrls_values","","",318,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_reply","","",319,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"device_i_d","","",320,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"n_keymaps","","",320,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"n_keycodes","","",320,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"n_types","","",320,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"n_compat_maps","","",320,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"n_symbols","","",320,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"n_geometries","","",320,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"extra","","",320,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"keymaps","","",320,{"inputs":[{"name":"self"}],"output":{"name":"listingiterator"}}],[11,"keycodes","","",320,{"inputs":[{"name":"self"}],"output":{"name":"listingiterator"}}],[11,"types","","",320,{"inputs":[{"name":"self"}],"output":{"name":"listingiterator"}}],[11,"compat_maps","","",320,{"inputs":[{"name":"self"}],"output":{"name":"listingiterator"}}],[11,"symbols","","",320,{"inputs":[{"name":"self"}],"output":{"name":"listingiterator"}}],[11,"geometries","","",320,{"inputs":[{"name":"self"}],"output":{"name":"listingiterator"}}],[11,"get_reply","","",321,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"device_i_d","","",322,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"min_key_code","","",322,{"inputs":[{"name":"self"}],"output":{"name":"keycode"}}],[11,"max_key_code","","",322,{"inputs":[{"name":"self"}],"output":{"name":"keycode"}}],[11,"loaded","","",322,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"new_keyboard","","",322,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"found","","",322,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"reported","","",322,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"get_reply","","",323,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"device_i_d","","",324,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"present","","",324,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"supported","","",324,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"unsupported","","",324,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"n_device_led_f_bs","","",324,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"first_btn_wanted","","",324,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"n_btns_wanted","","",324,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"first_btn_rtrn","","",324,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"n_btns_rtrn","","",324,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"total_btns","","",324,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"has_own_state","","",324,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"dflt_kbd_f_b","","",324,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"dflt_led_f_b","","",324,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"dev_type","","",324,{"inputs":[{"name":"self"}],"output":{"name":"atom"}}],[11,"name_len","","",324,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"name","","",324,null],[11,"btn_actions","","",324,{"inputs":[{"name":"self"}],"output":{"name":"actioniterator"}}],[11,"leds","","",324,{"inputs":[{"name":"self"}],"output":{"name":"deviceledinfoiterator"}}],[11,"get_reply","","",325,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"current_flags","","",326,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"current_ctrls","","",326,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"supported_flags","","",326,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"supported_ctrls","","",326,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"xkb_type","","",327,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"time","","",327,{"inputs":[{"name":"self"}],"output":{"name":"timestamp"}}],[11,"device_i_d","","",327,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"old_device_i_d","","",327,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"min_key_code","","",327,{"inputs":[{"name":"self"}],"output":{"name":"keycode"}}],[11,"max_key_code","","",327,{"inputs":[{"name":"self"}],"output":{"name":"keycode"}}],[11,"old_min_key_code","","",327,{"inputs":[{"name":"self"}],"output":{"name":"keycode"}}],[11,"old_max_key_code","","",327,{"inputs":[{"name":"self"}],"output":{"name":"keycode"}}],[11,"request_major","","",327,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"request_minor","","",327,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"changed","","",327,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"new","","Constructs a new NewKeyboardNotifyEvent `response_type` will be set automatically to NEW_KEYBOARD_NOTIFY",327,{"inputs":[{"name":"u8"},{"name":"timestamp"},{"name":"u8"},{"name":"u8"},{"name":"keycode"},{"name":"keycode"},{"name":"keycode"},{"name":"keycode"},{"name":"u8"},{"name":"u8"},{"name":"u16"}],"output":{"name":"newkeyboardnotifyevent"}}],[11,"xkb_type","","",328,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"time","","",328,{"inputs":[{"name":"self"}],"output":{"name":"timestamp"}}],[11,"device_i_d","","",328,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"ptr_btn_actions","","",328,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"changed","","",328,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"min_key_code","","",328,{"inputs":[{"name":"self"}],"output":{"name":"keycode"}}],[11,"max_key_code","","",328,{"inputs":[{"name":"self"}],"output":{"name":"keycode"}}],[11,"first_type","","",328,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"n_types","","",328,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"first_key_sym","","",328,{"inputs":[{"name":"self"}],"output":{"name":"keycode"}}],[11,"n_key_syms","","",328,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"first_key_act","","",328,{"inputs":[{"name":"self"}],"output":{"name":"keycode"}}],[11,"n_key_acts","","",328,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"first_key_behavior","","",328,{"inputs":[{"name":"self"}],"output":{"name":"keycode"}}],[11,"n_key_behavior","","",328,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"first_key_explicit","","",328,{"inputs":[{"name":"self"}],"output":{"name":"keycode"}}],[11,"n_key_explicit","","",328,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"first_mod_map_key","","",328,{"inputs":[{"name":"self"}],"output":{"name":"keycode"}}],[11,"n_mod_map_keys","","",328,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"first_v_mod_map_key","","",328,{"inputs":[{"name":"self"}],"output":{"name":"keycode"}}],[11,"n_v_mod_map_keys","","",328,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"virtual_mods","","",328,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"new","","Constructs a new MapNotifyEvent `response_type` will be set automatically to MAP_NOTIFY",328,{"inputs":[{"name":"u8"},{"name":"timestamp"},{"name":"u8"},{"name":"u8"},{"name":"u16"},{"name":"keycode"},{"name":"keycode"},{"name":"u8"},{"name":"u8"},{"name":"keycode"},{"name":"u8"},{"name":"keycode"},{"name":"u8"},{"name":"keycode"},{"name":"u8"},{"name":"keycode"},{"name":"u8"},{"name":"keycode"},{"name":"u8"},{"name":"keycode"},{"name":"u8"},{"name":"u16"}],"output":{"name":"mapnotifyevent"}}],[11,"xkb_type","","",329,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"time","","",329,{"inputs":[{"name":"self"}],"output":{"name":"timestamp"}}],[11,"device_i_d","","",329,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"mods","","",329,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"base_mods","","",329,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"latched_mods","","",329,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"locked_mods","","",329,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"group","","",329,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"base_group","","",329,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"latched_group","","",329,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"locked_group","","",329,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"compat_state","","",329,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"grab_mods","","",329,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"compat_grab_mods","","",329,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"lookup_mods","","",329,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"compat_loockup_mods","","",329,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"ptr_btn_state","","",329,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"changed","","",329,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"keycode","","",329,{"inputs":[{"name":"self"}],"output":{"name":"keycode"}}],[11,"event_type","","",329,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"request_major","","",329,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"request_minor","","",329,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"new","","Constructs a new StateNotifyEvent `response_type` will be set automatically to STATE_NOTIFY",329,{"inputs":[{"name":"u8"},{"name":"timestamp"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"i16"},{"name":"i16"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u16"},{"name":"u16"},{"name":"keycode"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"statenotifyevent"}}],[11,"xkb_type","","",330,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"time","","",330,{"inputs":[{"name":"self"}],"output":{"name":"timestamp"}}],[11,"device_i_d","","",330,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"num_groups","","",330,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"changed_controls","","",330,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"enabled_controls","","",330,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"enabled_control_changes","","",330,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"keycode","","",330,{"inputs":[{"name":"self"}],"output":{"name":"keycode"}}],[11,"event_type","","",330,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"request_major","","",330,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"request_minor","","",330,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"new","","Constructs a new ControlsNotifyEvent `response_type` will be set automatically to CONTROLS_NOTIFY",330,{"inputs":[{"name":"u8"},{"name":"timestamp"},{"name":"u8"},{"name":"u8"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"keycode"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"controlsnotifyevent"}}],[11,"xkb_type","","",331,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"time","","",331,{"inputs":[{"name":"self"}],"output":{"name":"timestamp"}}],[11,"device_i_d","","",331,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"state","","",331,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"state_changed","","",331,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"new","","Constructs a new IndicatorStateNotifyEvent `response_type` will be set automatically to INDICATOR_STATE_NOTIFY",331,{"inputs":[{"name":"u8"},{"name":"timestamp"},{"name":"u8"},{"name":"u32"},{"name":"u32"}],"output":{"name":"indicatorstatenotifyevent"}}],[11,"xkb_type","","",332,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"time","","",332,{"inputs":[{"name":"self"}],"output":{"name":"timestamp"}}],[11,"device_i_d","","",332,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"state","","",332,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"map_changed","","",332,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"new","","Constructs a new IndicatorMapNotifyEvent `response_type` will be set automatically to INDICATOR_MAP_NOTIFY",332,{"inputs":[{"name":"u8"},{"name":"timestamp"},{"name":"u8"},{"name":"u32"},{"name":"u32"}],"output":{"name":"indicatormapnotifyevent"}}],[11,"xkb_type","","",333,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"time","","",333,{"inputs":[{"name":"self"}],"output":{"name":"timestamp"}}],[11,"device_i_d","","",333,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"changed","","",333,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"first_type","","",333,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"n_types","","",333,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"first_level_name","","",333,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"n_level_names","","",333,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"n_radio_groups","","",333,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"n_key_aliases","","",333,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"changed_group_names","","",333,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"changed_virtual_mods","","",333,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"first_key","","",333,{"inputs":[{"name":"self"}],"output":{"name":"keycode"}}],[11,"n_keys","","",333,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"changed_indicators","","",333,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"new","","Constructs a new NamesNotifyEvent `response_type` will be set automatically to NAMES_NOTIFY",333,{"inputs":[{"name":"u8"},{"name":"timestamp"},{"name":"u8"},{"name":"u16"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u16"},{"name":"keycode"},{"name":"u8"},{"name":"u32"}],"output":{"name":"namesnotifyevent"}}],[11,"xkb_type","","",334,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"time","","",334,{"inputs":[{"name":"self"}],"output":{"name":"timestamp"}}],[11,"device_i_d","","",334,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"changed_groups","","",334,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"first_s_i","","",334,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"n_s_i","","",334,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"n_total_s_i","","",334,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"new","","Constructs a new CompatMapNotifyEvent `response_type` will be set automatically to COMPAT_MAP_NOTIFY",334,{"inputs":[{"name":"u8"},{"name":"timestamp"},{"name":"u8"},{"name":"u8"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"compatmapnotifyevent"}}],[11,"xkb_type","","",335,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"time","","",335,{"inputs":[{"name":"self"}],"output":{"name":"timestamp"}}],[11,"device_i_d","","",335,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"bell_class","","",335,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"bell_i_d","","",335,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"percent","","",335,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"pitch","","",335,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"duration","","",335,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"name","","",335,{"inputs":[{"name":"self"}],"output":{"name":"atom"}}],[11,"window","","",335,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"event_only","","",335,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"new","","Constructs a new BellNotifyEvent `response_type` will be set automatically to BELL_NOTIFY",335,{"inputs":[{"name":"u8"},{"name":"timestamp"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u16"},{"name":"u16"},{"name":"atom"},{"name":"window"},{"name":"bool"}],"output":{"name":"bellnotifyevent"}}],[11,"xkb_type","","",336,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"time","","",336,{"inputs":[{"name":"self"}],"output":{"name":"timestamp"}}],[11,"device_i_d","","",336,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"keycode","","",336,{"inputs":[{"name":"self"}],"output":{"name":"keycode"}}],[11,"press","","",336,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"key_event_follows","","",336,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"mods","","",336,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"group","","",336,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"message","","",336,null],[11,"new","","Constructs a new ActionMessageEvent `response_type` will be set automatically to ACTION_MESSAGE",336,null],[11,"xkb_type","","",337,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"time","","",337,{"inputs":[{"name":"self"}],"output":{"name":"timestamp"}}],[11,"device_i_d","","",337,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"keycode","","",337,{"inputs":[{"name":"self"}],"output":{"name":"keycode"}}],[11,"detailt","","",337,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"slow_keys_delay","","",337,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"debounce_delay","","",337,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"new","","Constructs a new AccessXNotifyEvent `response_type` will be set automatically to ACCESS_X_NOTIFY",337,{"inputs":[{"name":"u8"},{"name":"timestamp"},{"name":"u8"},{"name":"keycode"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"accessxnotifyevent"}}],[11,"xkb_type","","",338,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"time","","",338,{"inputs":[{"name":"self"}],"output":{"name":"timestamp"}}],[11,"device_i_d","","",338,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"reason","","",338,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"led_class","","",338,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"led_i_d","","",338,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"leds_defined","","",338,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"led_state","","",338,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"first_button","","",338,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"n_buttons","","",338,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"supported","","",338,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"unsupported","","",338,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"new","","Constructs a new ExtensionDeviceNotifyEvent `response_type` will be set automatically to EXTENSION_DEVICE_NOTIFY",338,{"inputs":[{"name":"u8"},{"name":"timestamp"},{"name":"u8"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u32"},{"name":"u32"},{"name":"u8"},{"name":"u8"},{"name":"u16"},{"name":"u16"}],"output":{"name":"extensiondevicenotifyevent"}}],[0,"ffi","xcb","",null,null],[0,"base","xcb::ffi","",null,null],[3,"xcb_generic_iterator_t","xcb::ffi::base","Generic iterator",null,null],[12,"data","","",339,null],[12,"rem","","",339,null],[12,"index","","",339,null],[3,"xcb_generic_reply_t","","Generic reply",null,null],[12,"response_type","","",340,null],[12,"sequence","","",340,null],[12,"length","","",340,null],[3,"xcb_generic_event_t","","Generic event",null,null],[12,"response_type","","",341,null],[12,"pad0","","",341,null],[12,"sequence","","",341,null],[12,"pad","","",341,null],[12,"full_sequence","","",341,null],[3,"xcb_ge_event_t","","GE event",null,null],[12,"response_type","","",342,null],[12,"sequence","","",342,null],[12,"length","","",342,null],[12,"event_type","","",342,null],[12,"full_sequence","","",342,null],[3,"xcb_generic_error_t","","Generic error",null,null],[12,"response_type","","",343,null],[12,"error_code","","",343,null],[12,"sequence","","",343,null],[12,"resource_id","","",343,null],[12,"minor_code","","",343,null],[12,"major_code","","",343,null],[12,"full_sequence","","",343,null],[3,"xcb_void_cookie_t","","Generic cookie",null,null],[12,"sequence","","sequence number",344,null],[3,"xcb_auth_info_t","","Container for authorization information. A container for authorization information to be sent to the X server",null,null],[12,"namelen","","length of the string name (as returned by strlen)",345,null],[12,"name","","String containing the authentication protocol name, such as \"MIT-MAGIC-COOKIE-1\" or \"XDM-AUTHORIZATION-1\".",345,null],[12,"datalen","","length of the data member",345,null],[12,"data","","data interpreted in a protocol specific manner",345,null],[4,"xcb_connection_t","","XCB connection structure An opaque structure that contain all data that XCB needs to communicate with an X server.",null,null],[4,"xcb_extension_t","","Opaque structure used as key for xcb_get_extension_data_t",null,null],[4,"xcb_special_event_t","","",null,null],[5,"xcb_flush","","Forces any buffered output to be written to the server. Blocks until the write is complete.",null,null],[5,"xcb_get_maximum_request_length","","Returns the maximum request length that this server accepts.",null,null],[5,"xcb_prefetch_maximum_request_length","","Prefetch the maximum request length without blocking.",null,null],[5,"xcb_wait_for_event","","Returns the next event or error from the server.",null,null],[5,"xcb_poll_for_event","","Returns the next event or error from the server.",null,null],[5,"xcb_poll_for_queued_event","","Returns the next event without reading from the connection.",null,null],[5,"xcb_poll_for_special_event","","Returns the next event from a special queue",null,null],[5,"xcb_wait_for_special_event","","Returns the next event from a special queue, blocking until one arrives",null,null],[5,"xcb_register_for_special_xge","","Listen for a special event",null,null],[5,"xcb_unregister_for_special_event","","Stop listening for a special event",null,null],[5,"xcb_request_check","","Return the error for a request, or NULL if none can ever arrive.",null,null],[5,"xcb_discard_reply","","Discards the reply for a request.",null,null],[5,"xcb_discard_reply64","","Discards the reply for a request, given by a 64bit sequence number",null,null],[5,"xcb_get_extension_data","","Caches reply information from QueryExtension requests.",null,null],[5,"xcb_prefetch_extension_data","","Prefetch of extension data into the extension cache",null,null],[5,"xcb_get_setup","","Access the data returned by the server.",null,null],[5,"xcb_get_file_descriptor","","Access the file descriptor of the connection.",null,null],[5,"xcb_connection_has_error","","Test whether the connection has shut down due to a fatal error.",null,null],[5,"xcb_connect_to_fd","","Connects to the X server.",null,null],[5,"xcb_disconnect","","Closes the connection.",null,null],[5,"xcb_parse_display","","Parses a display string name in the form documented by X(7x). name: The name of the display. host: A pointer to a malloc'd copy of the hostname. display: A pointer to the display number. screen: A pointer to the screen number.",null,null],[5,"xcb_connect","","Connects to the X server. displayname: The name of the display. screenp: A pointer to a preferred screen number. Returns A newly allocated xcb_connection_t structure.",null,null],[5,"xcb_connect_to_display_with_auth_info","","Connects to the X server, using an authorization information. display: The name of the display. auth: The authorization information. screen: A pointer to a preferred screen number. Returns A newly allocated xcb_connection_t structure.",null,null],[5,"xcb_generate_id","","Allocates an XID for a new object. Returns A newly allocated XID.",null,null],[17,"XCB_CONN_ERROR","","xcb connection errors because of socket, pipe and other stream errors.",null,null],[17,"XCB_CONN_CLOSED_EXT_NOTSUPPORTED","","xcb connection shutdown because of extension not supported",null,null],[17,"XCB_CONN_CLOSED_MEM_INSUFFICIENT","","malloc(), calloc() and realloc() error upon failure, for eg ENOMEM",null,null],[17,"XCB_CONN_CLOSED_REQ_LEN_EXCEED","","Connection closed, exceeding request length that server accepts.",null,null],[17,"XCB_CONN_CLOSED_PARSE_ERR","","Connection closed, error during parsing display string.",null,null],[17,"XCB_CONN_CLOSED_INVALID_SCREEN","","Connection closed because the server does not have a screen matching the display.",null,null],[17,"XCB_CONN_CLOSED_FDPASSING_FAILED","","Connection closed because some FD passing operation failed",null,null],[17,"XCB_NONE","","XCB_NONE is the universal null resource or null atom parameter value for many core X requests",null,null],[17,"XCB_COPY_FROM_PARENT","","XCB_COPY_FROM_PARENT can be used for many xcb_create_window parameters",null,null],[17,"XCB_CURRENT_TIME","","XCB_CURRENT_TIME can be used in most requests that take an xcb_timestamp_t",null,null],[17,"XCB_NO_SYMBOL","","XCB_NO_SYMBOL fills in unused entries in xcb_keysym_t tables",null,null],[11,"clone","","",340,{"inputs":[{"name":"self"}],"output":{"name":"xcb_generic_reply_t"}}],[11,"clone","","",341,{"inputs":[{"name":"self"}],"output":{"name":"xcb_generic_event_t"}}],[11,"clone","","",342,{"inputs":[{"name":"self"}],"output":{"name":"xcb_ge_event_t"}}],[11,"fmt","","",343,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",343,{"inputs":[{"name":"self"}],"output":{"name":"xcb_generic_error_t"}}],[11,"clone","","",344,{"inputs":[{"name":"self"}],"output":{"name":"xcb_void_cookie_t"}}],[0,"xproto","xcb::ffi","",null,null],[3,"xcb_char2b_t","xcb::ffi::xproto","",null,null],[12,"byte1","","",346,null],[12,"byte2","","",346,null],[3,"xcb_char2b_iterator_t","","",null,null],[12,"data","","",347,null],[12,"rem","","",347,null],[12,"index","","",347,null],[3,"xcb_window_iterator_t","","",null,null],[12,"data","","",348,null],[12,"rem","","",348,null],[12,"index","","",348,null],[3,"xcb_pixmap_iterator_t","","",null,null],[12,"data","","",349,null],[12,"rem","","",349,null],[12,"index","","",349,null],[3,"xcb_cursor_iterator_t","","",null,null],[12,"data","","",350,null],[12,"rem","","",350,null],[12,"index","","",350,null],[3,"xcb_font_iterator_t","","",null,null],[12,"data","","",351,null],[12,"rem","","",351,null],[12,"index","","",351,null],[3,"xcb_gcontext_iterator_t","","",null,null],[12,"data","","",352,null],[12,"rem","","",352,null],[12,"index","","",352,null],[3,"xcb_colormap_iterator_t","","",null,null],[12,"data","","",353,null],[12,"rem","","",353,null],[12,"index","","",353,null],[3,"xcb_atom_iterator_t","","",null,null],[12,"data","","",354,null],[12,"rem","","",354,null],[12,"index","","",354,null],[3,"xcb_drawable_iterator_t","","",null,null],[12,"data","","",355,null],[12,"rem","","",355,null],[12,"index","","",355,null],[3,"xcb_fontable_iterator_t","","",null,null],[12,"data","","",356,null],[12,"rem","","",356,null],[12,"index","","",356,null],[3,"xcb_visualid_iterator_t","","",null,null],[12,"data","","",357,null],[12,"rem","","",357,null],[12,"index","","",357,null],[3,"xcb_timestamp_iterator_t","","",null,null],[12,"data","","",358,null],[12,"rem","","",358,null],[12,"index","","",358,null],[3,"xcb_keysym_iterator_t","","",null,null],[12,"data","","",359,null],[12,"rem","","",359,null],[12,"index","","",359,null],[3,"xcb_keycode_iterator_t","","",null,null],[12,"data","","",360,null],[12,"rem","","",360,null],[12,"index","","",360,null],[3,"xcb_button_iterator_t","","",null,null],[12,"data","","",361,null],[12,"rem","","",361,null],[12,"index","","",361,null],[3,"xcb_point_t","","",null,null],[12,"x","","",362,null],[12,"y","","",362,null],[3,"xcb_point_iterator_t","","",null,null],[12,"data","","",363,null],[12,"rem","","",363,null],[12,"index","","",363,null],[3,"xcb_rectangle_t","","",null,null],[12,"x","","",364,null],[12,"y","","",364,null],[12,"width","","",364,null],[12,"height","","",364,null],[3,"xcb_rectangle_iterator_t","","",null,null],[12,"data","","",365,null],[12,"rem","","",365,null],[12,"index","","",365,null],[3,"xcb_arc_t","","",null,null],[12,"x","","",366,null],[12,"y","","",366,null],[12,"width","","",366,null],[12,"height","","",366,null],[12,"angle1","","",366,null],[12,"angle2","","",366,null],[3,"xcb_arc_iterator_t","","",null,null],[12,"data","","",367,null],[12,"rem","","",367,null],[12,"index","","",367,null],[3,"xcb_format_t","","",null,null],[12,"depth","","",368,null],[12,"bits_per_pixel","","",368,null],[12,"scanline_pad","","",368,null],[12,"pad0","","",368,null],[3,"xcb_format_iterator_t","","",null,null],[12,"data","","",369,null],[12,"rem","","",369,null],[12,"index","","",369,null],[3,"xcb_visualtype_t","","",null,null],[12,"visual_id","","",370,null],[12,"class","","",370,null],[12,"bits_per_rgb_value","","",370,null],[12,"colormap_entries","","",370,null],[12,"red_mask","","",370,null],[12,"green_mask","","",370,null],[12,"blue_mask","","",370,null],[12,"pad0","","",370,null],[3,"xcb_visualtype_iterator_t","","",null,null],[12,"data","","",371,null],[12,"rem","","",371,null],[12,"index","","",371,null],[3,"xcb_depth_t","","",null,null],[12,"depth","","",372,null],[12,"pad0","","",372,null],[12,"visuals_len","","",372,null],[12,"pad1","","",372,null],[3,"xcb_depth_iterator_t","","",null,null],[12,"data","","",373,null],[12,"rem","","",373,null],[12,"index","","",373,null],[3,"xcb_screen_t","","",null,null],[12,"root","","",374,null],[12,"default_colormap","","",374,null],[12,"white_pixel","","",374,null],[12,"black_pixel","","",374,null],[12,"current_input_masks","","",374,null],[12,"width_in_pixels","","",374,null],[12,"height_in_pixels","","",374,null],[12,"width_in_millimeters","","",374,null],[12,"height_in_millimeters","","",374,null],[12,"min_installed_maps","","",374,null],[12,"max_installed_maps","","",374,null],[12,"root_visual","","",374,null],[12,"backing_stores","","",374,null],[12,"save_unders","","",374,null],[12,"root_depth","","",374,null],[12,"allowed_depths_len","","",374,null],[3,"xcb_screen_iterator_t","","",null,null],[12,"data","","",375,null],[12,"rem","","",375,null],[12,"index","","",375,null],[3,"xcb_setup_request_t","","",null,null],[12,"byte_order","","",376,null],[12,"pad0","","",376,null],[12,"protocol_major_version","","",376,null],[12,"protocol_minor_version","","",376,null],[12,"authorization_protocol_name_len","","",376,null],[12,"authorization_protocol_data_len","","",376,null],[12,"pad1","","",376,null],[3,"xcb_setup_request_iterator_t","","",null,null],[12,"data","","",377,null],[12,"rem","","",377,null],[12,"index","","",377,null],[3,"xcb_setup_failed_t","","",null,null],[12,"status","","",378,null],[12,"reason_len","","",378,null],[12,"protocol_major_version","","",378,null],[12,"protocol_minor_version","","",378,null],[12,"length","","",378,null],[3,"xcb_setup_failed_iterator_t","","",null,null],[12,"data","","",379,null],[12,"rem","","",379,null],[12,"index","","",379,null],[3,"xcb_setup_authenticate_t","","",null,null],[12,"status","","",380,null],[12,"pad0","","",380,null],[12,"length","","",380,null],[3,"xcb_setup_authenticate_iterator_t","","",null,null],[12,"data","","",381,null],[12,"rem","","",381,null],[12,"index","","",381,null],[3,"xcb_setup_t","","",null,null],[12,"status","","",382,null],[12,"pad0","","",382,null],[12,"protocol_major_version","","",382,null],[12,"protocol_minor_version","","",382,null],[12,"length","","",382,null],[12,"release_number","","",382,null],[12,"resource_id_base","","",382,null],[12,"resource_id_mask","","",382,null],[12,"motion_buffer_size","","",382,null],[12,"vendor_len","","",382,null],[12,"maximum_request_length","","",382,null],[12,"roots_len","","",382,null],[12,"pixmap_formats_len","","",382,null],[12,"image_byte_order","","",382,null],[12,"bitmap_format_bit_order","","",382,null],[12,"bitmap_format_scanline_unit","","",382,null],[12,"bitmap_format_scanline_pad","","",382,null],[12,"min_keycode","","",382,null],[12,"max_keycode","","",382,null],[12,"pad1","","",382,null],[3,"xcb_setup_iterator_t","","",null,null],[12,"data","","",383,null],[12,"rem","","",383,null],[12,"index","","",383,null],[3,"xcb_key_press_event_t","","a key was pressed/released",null,null],[12,"response_type","","",384,null],[12,"detail","","The keycode (a number representing a physical key on the keyboard) of the key which was pressed.",384,null],[12,"sequence","","",384,null],[12,"time","","Time when the event was generated (in milliseconds).",384,null],[12,"root","","The root window of `child`.",384,null],[12,"event","","",384,null],[12,"child","","",384,null],[12,"root_x","","The X coordinate of the pointer relative to the `root` window at the time of the event.",384,null],[12,"root_y","","The Y coordinate of the pointer relative to the `root` window at the time of the event.",384,null],[12,"event_x","","If `same_screen` is true, this is the X coordinate relative to the `event` window's origin. Otherwise, `event_x` will be set to zero.",384,null],[12,"event_y","","If `same_screen` is true, this is the Y coordinate relative to the `event` window's origin. Otherwise, `event_y` will be set to zero.",384,null],[12,"state","","The logical state of the pointer buttons and modifier keys just prior to the event.",384,null],[12,"same_screen","","Whether the `event` window is on the same screen as the `root` window.",384,null],[12,"pad0","","",384,null],[3,"xcb_button_press_event_t","","a mouse button was pressed/released",null,null],[12,"response_type","","",385,null],[12,"detail","","The keycode (a number representing a physical key on the keyboard) of the key which was pressed.",385,null],[12,"sequence","","",385,null],[12,"time","","Time when the event was generated (in milliseconds).",385,null],[12,"root","","The root window of `child`.",385,null],[12,"event","","",385,null],[12,"child","","",385,null],[12,"root_x","","The X coordinate of the pointer relative to the `root` window at the time of the event.",385,null],[12,"root_y","","The Y coordinate of the pointer relative to the `root` window at the time of the event.",385,null],[12,"event_x","","If `same_screen` is true, this is the X coordinate relative to the `event` window's origin. Otherwise, `event_x` will be set to zero.",385,null],[12,"event_y","","If `same_screen` is true, this is the Y coordinate relative to the `event` window's origin. Otherwise, `event_y` will be set to zero.",385,null],[12,"state","","The logical state of the pointer buttons and modifier keys just prior to the event.",385,null],[12,"same_screen","","Whether the `event` window is on the same screen as the `root` window.",385,null],[12,"pad0","","",385,null],[3,"xcb_motion_notify_event_t","","a key was pressed",null,null],[12,"response_type","","",386,null],[12,"detail","","The keycode (a number representing a physical key on the keyboard) of the key which was pressed.",386,null],[12,"sequence","","",386,null],[12,"time","","Time when the event was generated (in milliseconds).",386,null],[12,"root","","The root window of `child`.",386,null],[12,"event","","",386,null],[12,"child","","",386,null],[12,"root_x","","The X coordinate of the pointer relative to the `root` window at the time of the event.",386,null],[12,"root_y","","The Y coordinate of the pointer relative to the `root` window at the time of the event.",386,null],[12,"event_x","","If `same_screen` is true, this is the X coordinate relative to the `event` window's origin. Otherwise, `event_x` will be set to zero.",386,null],[12,"event_y","","If `same_screen` is true, this is the Y coordinate relative to the `event` window's origin. Otherwise, `event_y` will be set to zero.",386,null],[12,"state","","The logical state of the pointer buttons and modifier keys just prior to the event.",386,null],[12,"same_screen","","Whether the `event` window is on the same screen as the `root` window.",386,null],[12,"pad0","","",386,null],[3,"xcb_enter_notify_event_t","","the pointer is in a different window",null,null],[12,"response_type","","",387,null],[12,"detail","","",387,null],[12,"sequence","","",387,null],[12,"time","","",387,null],[12,"root","","The root window for the final cursor position.",387,null],[12,"event","","The window on which the event was generated.",387,null],[12,"child","","If the `event` window has subwindows and the final pointer position is in one of them, then `child` is set to that subwindow, `XCB_WINDOW_NONE` otherwise.",387,null],[12,"root_x","","The pointer X coordinate relative to `root`'s origin at the time of the event.",387,null],[12,"root_y","","The pointer Y coordinate relative to `root`'s origin at the time of the event.",387,null],[12,"event_x","","If `event` is on the same screen as `root`, this is the pointer X coordinate relative to the event window's origin.",387,null],[12,"event_y","","If `event` is on the same screen as `root`, this is the pointer Y coordinate relative to the event window's origin.",387,null],[12,"state","","",387,null],[12,"mode","","",387,null],[12,"same_screen_focus","","",387,null],[3,"xcb_focus_in_event_t","","NOT YET DOCUMENTED",null,null],[12,"response_type","","",388,null],[12,"detail","","",388,null],[12,"sequence","","",388,null],[12,"event","","The window on which the focus event was generated. This is the window used by the X server to report the event.",388,null],[12,"mode","","",388,null],[12,"pad0","","",388,null],[3,"xcb_keymap_notify_event_t","","",null,null],[12,"response_type","","",389,null],[12,"keys","","",389,null],[3,"xcb_expose_event_t","","NOT YET DOCUMENTED",null,null],[12,"response_type","","",390,null],[12,"pad0","","",390,null],[12,"sequence","","",390,null],[12,"window","","The exposed (damaged) window.",390,null],[12,"x","","The X coordinate of the left-upper corner of the exposed rectangle, relative to the `window`'s origin.",390,null],[12,"y","","The Y coordinate of the left-upper corner of the exposed rectangle, relative to the `window`'s origin.",390,null],[12,"width","","The width of the exposed rectangle.",390,null],[12,"height","","The height of the exposed rectangle.",390,null],[12,"count","","The amount of `Expose` events following this one. Simple applications that do not want to optimize redisplay by distinguishing between subareas of its window can just ignore all Expose events with nonzero counts and perform full redisplays on events with zero counts.",390,null],[12,"pad1","","",390,null],[3,"xcb_graphics_exposure_event_t","","",null,null],[12,"response_type","","",391,null],[12,"pad0","","",391,null],[12,"sequence","","",391,null],[12,"drawable","","",391,null],[12,"x","","",391,null],[12,"y","","",391,null],[12,"width","","",391,null],[12,"height","","",391,null],[12,"minor_opcode","","",391,null],[12,"count","","",391,null],[12,"major_opcode","","",391,null],[12,"pad1","","",391,null],[3,"xcb_no_exposure_event_t","","",null,null],[12,"response_type","","",392,null],[12,"pad0","","",392,null],[12,"sequence","","",392,null],[12,"drawable","","",392,null],[12,"minor_opcode","","",392,null],[12,"major_opcode","","",392,null],[12,"pad1","","",392,null],[3,"xcb_visibility_notify_event_t","","",null,null],[12,"response_type","","",393,null],[12,"pad0","","",393,null],[12,"sequence","","",393,null],[12,"window","","",393,null],[12,"state","","",393,null],[12,"pad1","","",393,null],[3,"xcb_create_notify_event_t","","",null,null],[12,"response_type","","",394,null],[12,"pad0","","",394,null],[12,"sequence","","",394,null],[12,"parent","","",394,null],[12,"window","","",394,null],[12,"x","","",394,null],[12,"y","","",394,null],[12,"width","","",394,null],[12,"height","","",394,null],[12,"border_width","","",394,null],[12,"override_redirect","","",394,null],[12,"pad1","","",394,null],[3,"xcb_destroy_notify_event_t","","a window is destroyed",null,null],[12,"response_type","","",395,null],[12,"pad0","","",395,null],[12,"sequence","","",395,null],[12,"event","","The reconfigured window or its parent, depending on whether `StructureNotify` or `SubstructureNotify` was selected.",395,null],[12,"window","","The window that is destroyed.",395,null],[3,"xcb_unmap_notify_event_t","","a window is unmapped",null,null],[12,"response_type","","",396,null],[12,"pad0","","",396,null],[12,"sequence","","",396,null],[12,"event","","The reconfigured window or its parent, depending on whether `StructureNotify` or `SubstructureNotify` was selected.",396,null],[12,"window","","The window that was unmapped.",396,null],[12,"from_configure","","Set to 1 if the event was generated as a result of a resizing of the window's parent when `window` had a win_gravity of `UnmapGravity`.",396,null],[12,"pad1","","",396,null],[3,"xcb_map_notify_event_t","","a window was mapped",null,null],[12,"response_type","","",397,null],[12,"pad0","","",397,null],[12,"sequence","","",397,null],[12,"event","","The window which was mapped or its parent, depending on whether `StructureNotify` or `SubstructureNotify` was selected.",397,null],[12,"window","","The window that was mapped.",397,null],[12,"override_redirect","","Window managers should ignore this window if `override_redirect` is 1.",397,null],[12,"pad1","","",397,null],[3,"xcb_map_request_event_t","","window wants to be mapped",null,null],[12,"response_type","","",398,null],[12,"pad0","","",398,null],[12,"sequence","","",398,null],[12,"parent","","The parent of `window`.",398,null],[12,"window","","The window to be mapped.",398,null],[3,"xcb_reparent_notify_event_t","","",null,null],[12,"response_type","","",399,null],[12,"pad0","","",399,null],[12,"sequence","","",399,null],[12,"event","","",399,null],[12,"window","","",399,null],[12,"parent","","",399,null],[12,"x","","",399,null],[12,"y","","",399,null],[12,"override_redirect","","",399,null],[12,"pad1","","",399,null],[3,"xcb_configure_notify_event_t","","NOT YET DOCUMENTED",null,null],[12,"response_type","","",400,null],[12,"pad0","","",400,null],[12,"sequence","","",400,null],[12,"event","","The reconfigured window or its parent, depending on whether `StructureNotify` or `SubstructureNotify` was selected.",400,null],[12,"window","","The window whose size, position, border, and/or stacking order was changed.",400,null],[12,"above_sibling","","If `XCB_NONE`, the `window` is on the bottom of the stack with respect to sibling windows. However, if set to a sibling window, the `window` is placed on top of this sibling window.",400,null],[12,"x","","The X coordinate of the upper-left outside corner of `window`, relative to the parent window's origin.",400,null],[12,"y","","The Y coordinate of the upper-left outside corner of `window`, relative to the parent window's origin.",400,null],[12,"width","","The inside width of `window`, not including the border.",400,null],[12,"height","","The inside height of `window`, not including the border.",400,null],[12,"border_width","","The border width of `window`.",400,null],[12,"override_redirect","","Window managers should ignore this window if `override_redirect` is 1.",400,null],[12,"pad1","","",400,null],[3,"xcb_configure_request_event_t","","",null,null],[12,"response_type","","",401,null],[12,"stack_mode","","",401,null],[12,"sequence","","",401,null],[12,"parent","","",401,null],[12,"window","","",401,null],[12,"sibling","","",401,null],[12,"x","","",401,null],[12,"y","","",401,null],[12,"width","","",401,null],[12,"height","","",401,null],[12,"border_width","","",401,null],[12,"value_mask","","",401,null],[3,"xcb_gravity_notify_event_t","","",null,null],[12,"response_type","","",402,null],[12,"pad0","","",402,null],[12,"sequence","","",402,null],[12,"event","","",402,null],[12,"window","","",402,null],[12,"x","","",402,null],[12,"y","","",402,null],[3,"xcb_resize_request_event_t","","",null,null],[12,"response_type","","",403,null],[12,"pad0","","",403,null],[12,"sequence","","",403,null],[12,"window","","",403,null],[12,"width","","",403,null],[12,"height","","",403,null],[3,"xcb_circulate_notify_event_t","","NOT YET DOCUMENTED",null,null],[12,"response_type","","",404,null],[12,"pad0","","",404,null],[12,"sequence","","",404,null],[12,"event","","Either the restacked window or its parent, depending on whether `StructureNotify` or `SubstructureNotify` was selected.",404,null],[12,"window","","The restacked window.",404,null],[12,"pad1","","",404,null],[12,"place","","",404,null],[12,"pad2","","",404,null],[3,"xcb_property_notify_event_t","","a window property changed",null,null],[12,"response_type","","",405,null],[12,"pad0","","",405,null],[12,"sequence","","",405,null],[12,"window","","The window whose associated property was changed.",405,null],[12,"atom","","The property's atom, to indicate which property was changed.",405,null],[12,"time","","A timestamp of the server time when the property was changed.",405,null],[12,"state","","",405,null],[12,"pad1","","",405,null],[3,"xcb_selection_clear_event_t","","",null,null],[12,"response_type","","",406,null],[12,"pad0","","",406,null],[12,"sequence","","",406,null],[12,"time","","",406,null],[12,"owner","","",406,null],[12,"selection","","",406,null],[3,"xcb_selection_request_event_t","","",null,null],[12,"response_type","","",407,null],[12,"pad0","","",407,null],[12,"sequence","","",407,null],[12,"time","","",407,null],[12,"owner","","",407,null],[12,"requestor","","",407,null],[12,"selection","","",407,null],[12,"target","","",407,null],[12,"property","","",407,null],[3,"xcb_selection_notify_event_t","","",null,null],[12,"response_type","","",408,null],[12,"pad0","","",408,null],[12,"sequence","","",408,null],[12,"time","","",408,null],[12,"requestor","","",408,null],[12,"selection","","",408,null],[12,"target","","",408,null],[12,"property","","",408,null],[3,"xcb_colormap_notify_event_t","","the colormap for some window changed",null,null],[12,"response_type","","",409,null],[12,"pad0","","",409,null],[12,"sequence","","",409,null],[12,"window","","The window whose associated colormap is changed, installed or uninstalled.",409,null],[12,"colormap","","The colormap which is changed, installed or uninstalled. This is `XCB_NONE` when the colormap is changed by a call to `FreeColormap`.",409,null],[12,"new_","","",409,null],[12,"state","","",409,null],[12,"pad1","","",409,null],[3,"xcb_client_message_data_t","","",null,null],[12,"data","","",410,null],[3,"xcb_client_message_data_iterator_t","","",null,null],[12,"data","","",411,null],[12,"rem","","",411,null],[12,"index","","",411,null],[3,"xcb_client_message_event_t","","NOT YET DOCUMENTED",null,null],[12,"response_type","","",412,null],[12,"format","","Specifies how to interpret `data`. Can be either 8, 16 or 32.",412,null],[12,"sequence","","",412,null],[12,"window","","",412,null],[12,"type_","","An atom which indicates how the data should be interpreted by the receiving client.",412,null],[12,"data","","The data itself (20 bytes max).",412,null],[3,"xcb_mapping_notify_event_t","","keyboard mapping changed",null,null],[12,"response_type","","",413,null],[12,"pad0","","",413,null],[12,"sequence","","",413,null],[12,"request","","",413,null],[12,"first_keycode","","The first number in the range of the altered mapping.",413,null],[12,"count","","The number of keycodes altered.",413,null],[12,"pad1","","",413,null],[3,"xcb_ge_generic_event_t","","generic event (with length)",null,null],[12,"response_type","","",414,null],[12,"extension","","The major opcode of the extension creating this event",414,null],[12,"sequence","","",414,null],[12,"length","","The amount (in 4-byte units) of data beyond 32 bytes",414,null],[12,"event_type","","",414,null],[12,"pad0","","",414,null],[12,"full_sequence","","",414,null],[3,"xcb_request_error_t","","",null,null],[12,"response_type","","",415,null],[12,"error_code","","",415,null],[12,"sequence","","",415,null],[12,"bad_value","","",415,null],[12,"minor_opcode","","",415,null],[12,"major_opcode","","",415,null],[12,"pad0","","",415,null],[3,"xcb_value_error_t","","",null,null],[12,"response_type","","",416,null],[12,"error_code","","",416,null],[12,"sequence","","",416,null],[12,"bad_value","","",416,null],[12,"minor_opcode","","",416,null],[12,"major_opcode","","",416,null],[12,"pad0","","",416,null],[3,"xcb_create_window_request_t","","Creates a window",null,null],[12,"major_opcode","","",417,null],[12,"depth","","Specifies the new window's depth (TODO: what unit?).",417,null],[12,"length","","",417,null],[12,"wid","","The ID with which you will refer to the new window, created by `xcb_generate_id`.",417,null],[12,"parent","","The parent window of the new window.",417,null],[12,"x","","The X coordinate of the new window.",417,null],[12,"y","","The Y coordinate of the new window.",417,null],[12,"width","","The width of the new window.",417,null],[12,"height","","The height of the new window.",417,null],[12,"border_width","","TODO:",417,null],[12,"class","","",417,null],[12,"visual","","Specifies the id for the new window's visual.",417,null],[12,"value_mask","","",417,null],[3,"xcb_change_window_attributes_request_t","","change window attributes",null,null],[12,"major_opcode","","",418,null],[12,"pad0","","",418,null],[12,"length","","",418,null],[12,"window","","The window to change.",418,null],[12,"value_mask","","",418,null],[3,"xcb_get_window_attributes_request_t","","Gets window attributes",null,null],[12,"major_opcode","","",419,null],[12,"pad0","","",419,null],[12,"length","","",419,null],[12,"window","","The window to get the attributes from.",419,null],[3,"xcb_get_window_attributes_cookie_t","","",null,null],[3,"xcb_get_window_attributes_reply_t","","",null,null],[12,"response_type","","",420,null],[12,"backing_store","","",420,null],[12,"sequence","","",420,null],[12,"length","","",420,null],[12,"visual","","The associated visual structure of `window`.",420,null],[12,"class","","",420,null],[12,"bit_gravity","","",420,null],[12,"win_gravity","","",420,null],[12,"backing_planes","","Planes to be preserved if possible.",420,null],[12,"backing_pixel","","Value to be used when restoring planes.",420,null],[12,"save_under","","Boolean, should bits under be saved?",420,null],[12,"map_is_installed","","",420,null],[12,"map_state","","",420,null],[12,"override_redirect","","Window managers should ignore this window if `override_redirect` is 1.",420,null],[12,"colormap","","Color map to be associated with window.",420,null],[12,"all_event_masks","","Set of events all people have interest in.",420,null],[12,"your_event_mask","","My event mask.",420,null],[12,"do_not_propagate_mask","","Set of events that should not propagate.",420,null],[12,"pad0","","",420,null],[3,"xcb_destroy_window_request_t","","Destroys a window",null,null],[12,"major_opcode","","",421,null],[12,"pad0","","",421,null],[12,"length","","",421,null],[12,"window","","The window to destroy.",421,null],[3,"xcb_destroy_subwindows_request_t","","",null,null],[12,"major_opcode","","",422,null],[12,"pad0","","",422,null],[12,"length","","",422,null],[12,"window","","",422,null],[3,"xcb_change_save_set_request_t","","Changes a client's save set",null,null],[12,"major_opcode","","",423,null],[12,"mode","","Insert to add the specified window to the save set or Delete to delete it from the save set.",423,null],[12,"length","","",423,null],[12,"window","","The window to add or delete to/from your save set.",423,null],[3,"xcb_reparent_window_request_t","","Reparents a window",null,null],[12,"major_opcode","","",424,null],[12,"pad0","","",424,null],[12,"length","","",424,null],[12,"window","","The window to reparent.",424,null],[12,"parent","","The new parent of the window.",424,null],[12,"x","","The X position of the window within its new parent.",424,null],[12,"y","","The Y position of the window within its new parent.",424,null],[3,"xcb_map_window_request_t","","Makes a window visible",null,null],[12,"major_opcode","","",425,null],[12,"pad0","","",425,null],[12,"length","","",425,null],[12,"window","","The window to make visible.",425,null],[3,"xcb_map_subwindows_request_t","","",null,null],[12,"major_opcode","","",426,null],[12,"pad0","","",426,null],[12,"length","","",426,null],[12,"window","","",426,null],[3,"xcb_unmap_window_request_t","","Makes a window invisible",null,null],[12,"major_opcode","","",427,null],[12,"pad0","","",427,null],[12,"length","","",427,null],[12,"window","","The window to make invisible.",427,null],[3,"xcb_unmap_subwindows_request_t","","",null,null],[12,"major_opcode","","",428,null],[12,"pad0","","",428,null],[12,"length","","",428,null],[12,"window","","",428,null],[3,"xcb_configure_window_request_t","","Configures window attributes",null,null],[12,"major_opcode","","",429,null],[12,"pad0","","",429,null],[12,"length","","",429,null],[12,"window","","The window to configure.",429,null],[12,"value_mask","","Bitmask of attributes to change.",429,null],[12,"pad1","","",429,null],[3,"xcb_circulate_window_request_t","","Change window stacking order",null,null],[12,"major_opcode","","",430,null],[12,"direction","","",430,null],[12,"length","","",430,null],[12,"window","","The window to raise/lower (depending on `direction`).",430,null],[3,"xcb_get_geometry_request_t","","Get current window geometry",null,null],[12,"major_opcode","","",431,null],[12,"pad0","","",431,null],[12,"length","","",431,null],[12,"drawable","","The drawable (`Window` or `Pixmap`) of which the geometry will be received.",431,null],[3,"xcb_get_geometry_cookie_t","","",null,null],[3,"xcb_get_geometry_reply_t","","",null,null],[12,"response_type","","",432,null],[12,"depth","","The depth of the drawable (bits per pixel for the object).",432,null],[12,"sequence","","",432,null],[12,"length","","",432,null],[12,"root","","Root window of the screen containing `drawable`.",432,null],[12,"x","","The X coordinate of `drawable`. If `drawable` is a window, the coordinate specifies the upper-left outer corner relative to its parent's origin. If `drawable` is a pixmap, the X coordinate is always 0.",432,null],[12,"y","","The Y coordinate of `drawable`. If `drawable` is a window, the coordinate specifies the upper-left outer corner relative to its parent's origin. If `drawable` is a pixmap, the Y coordinate is always 0.",432,null],[12,"width","","The width of `drawable`.",432,null],[12,"height","","The height of `drawable`.",432,null],[12,"border_width","","The border width (in pixels).",432,null],[12,"pad0","","",432,null],[3,"xcb_query_tree_request_t","","query the window tree",null,null],[12,"major_opcode","","",433,null],[12,"pad0","","",433,null],[12,"length","","",433,null],[12,"window","","The `window` to query.",433,null],[3,"xcb_query_tree_cookie_t","","",null,null],[3,"xcb_query_tree_reply_t","","",null,null],[12,"response_type","","",434,null],[12,"pad0","","",434,null],[12,"sequence","","",434,null],[12,"length","","",434,null],[12,"root","","The root window of `window`.",434,null],[12,"parent","","The parent window of `window`.",434,null],[12,"children_len","","The number of child windows.",434,null],[12,"pad1","","",434,null],[3,"xcb_intern_atom_request_t","","Get atom identifier by name",null,null],[12,"major_opcode","","",435,null],[12,"only_if_exists","","Return a valid atom id only if the atom already exists.",435,null],[12,"length","","",435,null],[12,"name_len","","The length of the following `name`.",435,null],[12,"pad0","","",435,null],[3,"xcb_intern_atom_cookie_t","","",null,null],[3,"xcb_intern_atom_reply_t","","",null,null],[12,"response_type","","",436,null],[12,"pad0","","",436,null],[12,"sequence","","",436,null],[12,"length","","",436,null],[12,"atom","","",436,null],[3,"xcb_get_atom_name_request_t","","",null,null],[12,"major_opcode","","",437,null],[12,"pad0","","",437,null],[12,"length","","",437,null],[12,"atom","","",437,null],[3,"xcb_get_atom_name_cookie_t","","",null,null],[3,"xcb_get_atom_name_reply_t","","",null,null],[12,"response_type","","",438,null],[12,"pad0","","",438,null],[12,"sequence","","",438,null],[12,"length","","",438,null],[12,"name_len","","",438,null],[12,"pad1","","",438,null],[3,"xcb_change_property_request_t","","Changes a window property",null,null],[12,"major_opcode","","",439,null],[12,"mode","","",439,null],[12,"length","","",439,null],[12,"window","","The window whose property you want to change.",439,null],[12,"property","","The property you want to change (an atom).",439,null],[12,"type_","","The type of the property you want to change (an atom).",439,null],[12,"format","","Specifies whether the data should be viewed as a list of 8-bit, 16-bit or 32-bit quantities. Possible values are 8, 16 and 32. This information allows the X server to correctly perform byte-swap operations as necessary.",439,null],[12,"pad0","","",439,null],[12,"data_len","","Specifies the number of elements (see `format`).",439,null],[3,"xcb_delete_property_request_t","","",null,null],[12,"major_opcode","","",440,null],[12,"pad0","","",440,null],[12,"length","","",440,null],[12,"window","","",440,null],[12,"property","","",440,null],[3,"xcb_get_property_request_t","","Gets a window property",null,null],[12,"major_opcode","","",441,null],[12,"delete","","Whether the property should actually be deleted. For deleting a property, the specified `type` has to match the actual property type.",441,null],[12,"length","","",441,null],[12,"window","","The window whose property you want to get.",441,null],[12,"property","","The property you want to get (an atom).",441,null],[12,"type_","","The type of the property you want to get (an atom).",441,null],[12,"long_offset","","Specifies the offset (in 32-bit multiples) in the specified property where the data is to be retrieved.",441,null],[12,"long_length","","Specifies how many 32-bit multiples of data should be retrieved (e.g. if you set `long_length` to 4, you will receive 16 bytes of data).",441,null],[3,"xcb_get_property_cookie_t","","",null,null],[3,"xcb_get_property_reply_t","","",null,null],[12,"response_type","","",442,null],[12,"format","","Specifies whether the data should be viewed as a list of 8-bit, 16-bit, or 32-bit quantities. Possible values are 8, 16, and 32. This information allows the X server to correctly perform byte-swap operations as necessary.",442,null],[12,"sequence","","",442,null],[12,"length","","",442,null],[12,"type_","","The actual type of the property (an atom).",442,null],[12,"bytes_after","","The number of bytes remaining to be read in the property if a partial read was performed.",442,null],[12,"value_len","","The length of value. You should use the corresponding accessor instead of this field.",442,null],[12,"pad0","","",442,null],[3,"xcb_list_properties_request_t","","",null,null],[12,"major_opcode","","",443,null],[12,"pad0","","",443,null],[12,"length","","",443,null],[12,"window","","",443,null],[3,"xcb_list_properties_cookie_t","","",null,null],[3,"xcb_list_properties_reply_t","","",null,null],[12,"response_type","","",444,null],[12,"pad0","","",444,null],[12,"sequence","","",444,null],[12,"length","","",444,null],[12,"atoms_len","","",444,null],[12,"pad1","","",444,null],[3,"xcb_set_selection_owner_request_t","","Sets the owner of a selection",null,null],[12,"major_opcode","","",445,null],[12,"pad0","","",445,null],[12,"length","","",445,null],[12,"owner","","The new owner of the selection.",445,null],[12,"selection","","The selection.",445,null],[12,"time","","Timestamp to avoid race conditions when running X over the network.",445,null],[3,"xcb_get_selection_owner_request_t","","Gets the owner of a selection",null,null],[12,"major_opcode","","",446,null],[12,"pad0","","",446,null],[12,"length","","",446,null],[12,"selection","","The selection.",446,null],[3,"xcb_get_selection_owner_cookie_t","","",null,null],[3,"xcb_get_selection_owner_reply_t","","",null,null],[12,"response_type","","",447,null],[12,"pad0","","",447,null],[12,"sequence","","",447,null],[12,"length","","",447,null],[12,"owner","","The current selection owner window.",447,null],[3,"xcb_convert_selection_request_t","","",null,null],[12,"major_opcode","","",448,null],[12,"pad0","","",448,null],[12,"length","","",448,null],[12,"requestor","","",448,null],[12,"selection","","",448,null],[12,"target","","",448,null],[12,"property","","",448,null],[12,"time","","",448,null],[3,"xcb_send_event_request_t","","send an event",null,null],[12,"major_opcode","","",449,null],[12,"propagate","","If `propagate` is true and no clients have selected any event on `destination`, the destination is replaced with the closest ancestor of `destination` for which some client has selected a type in `event_mask` and for which no intervening window has that type in its do-not-propagate-mask. If no such window exists or if the window is an ancestor of the focus window and `InputFocus` was originally specified as the destination, the event is not sent to any clients. Otherwise, the event is reported to every client selecting on the final destination any of the types specified in `event_mask`.",449,null],[12,"length","","",449,null],[12,"destination","","The window to send this event to. Every client which selects any event within `event_mask` on `destination` will get the event.",449,null],[12,"event_mask","","Event_mask for determining which clients should receive the specified event. See `destination` and `propagate`.",449,null],[12,"event","","The event to send to the specified `destination`.",449,null],[3,"xcb_grab_pointer_request_t","","Grab the pointer",null,null],[12,"major_opcode","","",450,null],[12,"owner_events","","If 1, the `grab_window` will still get the pointer events. If 0, events are not reported to the `grab_window`.",450,null],[12,"length","","",450,null],[12,"grab_window","","Specifies the window on which the pointer should be grabbed.",450,null],[12,"event_mask","","Specifies which pointer events are reported to the client.",450,null],[12,"pointer_mode","","",450,null],[12,"keyboard_mode","","",450,null],[12,"confine_to","","Specifies the window to confine the pointer in (the user will not be able to move the pointer out of that window).",450,null],[12,"cursor","","Specifies the cursor that should be displayed or `XCB_NONE` to not change the cursor.",450,null],[12,"time","","The time argument allows you to avoid certain circumstances that come up if applications take a long time to respond or if there are long network delays. Consider a situation where you have two applications, both of which normally grab the pointer when clicked on. If both applications specify the timestamp from the event, the second application may wake up faster and successfully grab the pointer before the first application. The first application then will get an indication that the other application grabbed the pointer before its request was processed.",450,null],[3,"xcb_grab_pointer_cookie_t","","",null,null],[3,"xcb_grab_pointer_reply_t","","",null,null],[12,"response_type","","",451,null],[12,"status","","",451,null],[12,"sequence","","",451,null],[12,"length","","",451,null],[3,"xcb_ungrab_pointer_request_t","","release the pointer",null,null],[12,"major_opcode","","",452,null],[12,"pad0","","",452,null],[12,"length","","",452,null],[12,"time","","Timestamp to avoid race conditions when running X over the network.",452,null],[3,"xcb_grab_button_request_t","","Grab pointer button(s)",null,null],[12,"major_opcode","","",453,null],[12,"owner_events","","If 1, the `grab_window` will still get the pointer events. If 0, events are not reported to the `grab_window`.",453,null],[12,"length","","",453,null],[12,"grab_window","","Specifies the window on which the pointer should be grabbed.",453,null],[12,"event_mask","","Specifies which pointer events are reported to the client.",453,null],[12,"pointer_mode","","",453,null],[12,"keyboard_mode","","",453,null],[12,"confine_to","","Specifies the window to confine the pointer in (the user will not be able to move the pointer out of that window).",453,null],[12,"cursor","","Specifies the cursor that should be displayed or `XCB_NONE` to not change the cursor.",453,null],[12,"button","","",453,null],[12,"pad0","","",453,null],[12,"modifiers","","The modifiers to grab.",453,null],[3,"xcb_ungrab_button_request_t","","",null,null],[12,"major_opcode","","",454,null],[12,"button","","",454,null],[12,"length","","",454,null],[12,"grab_window","","",454,null],[12,"modifiers","","",454,null],[12,"pad0","","",454,null],[3,"xcb_change_active_pointer_grab_request_t","","",null,null],[12,"major_opcode","","",455,null],[12,"pad0","","",455,null],[12,"length","","",455,null],[12,"cursor","","",455,null],[12,"time","","",455,null],[12,"event_mask","","",455,null],[12,"pad1","","",455,null],[3,"xcb_grab_keyboard_request_t","","Grab the keyboard",null,null],[12,"major_opcode","","",456,null],[12,"owner_events","","If 1, the `grab_window` will still get the pointer events. If 0, events are not reported to the `grab_window`.",456,null],[12,"length","","",456,null],[12,"grab_window","","Specifies the window on which the pointer should be grabbed.",456,null],[12,"time","","Timestamp to avoid race conditions when running X over the network.",456,null],[12,"pointer_mode","","",456,null],[12,"keyboard_mode","","",456,null],[12,"pad0","","",456,null],[3,"xcb_grab_keyboard_cookie_t","","",null,null],[3,"xcb_grab_keyboard_reply_t","","",null,null],[12,"response_type","","",457,null],[12,"status","","",457,null],[12,"sequence","","",457,null],[12,"length","","",457,null],[3,"xcb_ungrab_keyboard_request_t","","",null,null],[12,"major_opcode","","",458,null],[12,"pad0","","",458,null],[12,"length","","",458,null],[12,"time","","",458,null],[3,"xcb_grab_key_request_t","","Grab keyboard key(s)",null,null],[12,"major_opcode","","",459,null],[12,"owner_events","","If 1, the `grab_window` will still get the pointer events. If 0, events are not reported to the `grab_window`.",459,null],[12,"length","","",459,null],[12,"grab_window","","Specifies the window on which the pointer should be grabbed.",459,null],[12,"modifiers","","The modifiers to grab.",459,null],[12,"key","","The keycode of the key to grab.",459,null],[12,"pointer_mode","","",459,null],[12,"keyboard_mode","","",459,null],[12,"pad0","","",459,null],[3,"xcb_ungrab_key_request_t","","release a key combination",null,null],[12,"major_opcode","","",460,null],[12,"key","","The keycode of the specified key combination.",460,null],[12,"length","","",460,null],[12,"grab_window","","The window on which the grabbed key combination will be released.",460,null],[12,"modifiers","","The modifiers of the specified key combination.",460,null],[12,"pad0","","",460,null],[3,"xcb_allow_events_request_t","","release queued events",null,null],[12,"major_opcode","","",461,null],[12,"mode","","",461,null],[12,"length","","",461,null],[12,"time","","Timestamp to avoid race conditions when running X over the network.",461,null],[3,"xcb_grab_server_request_t","","",null,null],[12,"major_opcode","","",462,null],[12,"pad0","","",462,null],[12,"length","","",462,null],[3,"xcb_ungrab_server_request_t","","",null,null],[12,"major_opcode","","",463,null],[12,"pad0","","",463,null],[12,"length","","",463,null],[3,"xcb_query_pointer_request_t","","get pointer coordinates",null,null],[12,"major_opcode","","",464,null],[12,"pad0","","",464,null],[12,"length","","",464,null],[12,"window","","A window to check if the pointer is on the same screen as `window` (see the `same_screen` field in the reply).",464,null],[3,"xcb_query_pointer_cookie_t","","",null,null],[3,"xcb_query_pointer_reply_t","","",null,null],[12,"response_type","","",465,null],[12,"same_screen","","If `same_screen` is False, then the pointer is not on the same screen as the argument window, `child` is None, and `win_x` and `win_y` are zero. If `same_screen` is True, then `win_x` and `win_y` are the pointer coordinates relative to the argument window's origin, and child is the child containing the pointer, if any.",465,null],[12,"sequence","","",465,null],[12,"length","","",465,null],[12,"root","","The root window the pointer is logically on.",465,null],[12,"child","","The child window containing the pointer, if any, if `same_screen` is true. If `same_screen` is false, `XCB_NONE` is returned.",465,null],[12,"root_x","","The pointer X position, relative to `root`.",465,null],[12,"root_y","","The pointer Y position, relative to `root`.",465,null],[12,"win_x","","The pointer X coordinate, relative to `child`, if `same_screen` is true. Zero otherwise.",465,null],[12,"win_y","","The pointer Y coordinate, relative to `child`, if `same_screen` is true. Zero otherwise.",465,null],[12,"mask","","The current logical state of the modifier keys and the buttons. Note that the logical state of a device (as seen by means of the protocol) may lag the physical state if device event processing is frozen.",465,null],[12,"pad0","","",465,null],[3,"xcb_timecoord_t","","",null,null],[12,"time","","",466,null],[12,"x","","",466,null],[12,"y","","",466,null],[3,"xcb_timecoord_iterator_t","","",null,null],[12,"data","","",467,null],[12,"rem","","",467,null],[12,"index","","",467,null],[3,"xcb_get_motion_events_request_t","","",null,null],[12,"major_opcode","","",468,null],[12,"pad0","","",468,null],[12,"length","","",468,null],[12,"window","","",468,null],[12,"start","","",468,null],[12,"stop","","",468,null],[3,"xcb_get_motion_events_cookie_t","","",null,null],[3,"xcb_get_motion_events_reply_t","","",null,null],[12,"response_type","","",469,null],[12,"pad0","","",469,null],[12,"sequence","","",469,null],[12,"length","","",469,null],[12,"events_len","","",469,null],[12,"pad1","","",469,null],[3,"xcb_translate_coordinates_request_t","","",null,null],[12,"major_opcode","","",470,null],[12,"pad0","","",470,null],[12,"length","","",470,null],[12,"src_window","","",470,null],[12,"dst_window","","",470,null],[12,"src_x","","",470,null],[12,"src_y","","",470,null],[3,"xcb_translate_coordinates_cookie_t","","",null,null],[3,"xcb_translate_coordinates_reply_t","","",null,null],[12,"response_type","","",471,null],[12,"same_screen","","",471,null],[12,"sequence","","",471,null],[12,"length","","",471,null],[12,"child","","",471,null],[12,"dst_x","","",471,null],[12,"dst_y","","",471,null],[3,"xcb_warp_pointer_request_t","","move mouse pointer",null,null],[12,"major_opcode","","",472,null],[12,"pad0","","",472,null],[12,"length","","",472,null],[12,"src_window","","If `src_window` is not `XCB_NONE` (TODO), the move will only take place if the pointer is inside `src_window` and within the rectangle specified by (`src_x`, `src_y`, `src_width`, `src_height`). The rectangle coordinates are relative to `src_window`.",472,null],[12,"dst_window","","If `dst_window` is not `XCB_NONE` (TODO), the pointer will be moved to the offsets (`dst_x`, `dst_y`) relative to `dst_window`. If `dst_window` is `XCB_NONE` (TODO), the pointer will be moved by the offsets (`dst_x`, `dst_y`) relative to the current position of the pointer.",472,null],[12,"src_x","","",472,null],[12,"src_y","","",472,null],[12,"src_width","","",472,null],[12,"src_height","","",472,null],[12,"dst_x","","",472,null],[12,"dst_y","","",472,null],[3,"xcb_set_input_focus_request_t","","Sets input focus",null,null],[12,"major_opcode","","",473,null],[12,"revert_to","","Specifies what happens when the `focus` window becomes unviewable (if `focus` is neither `XCB_NONE` nor `XCB_POINTER_ROOT`).",473,null],[12,"length","","",473,null],[12,"focus","","The window to focus. All keyboard events will be reported to this window. The window must be viewable (TODO), or a `xcb_match_error_t` occurs (TODO).",473,null],[12,"time","","Timestamp to avoid race conditions when running X over the network.",473,null],[3,"xcb_get_input_focus_request_t","","",null,null],[12,"major_opcode","","",474,null],[12,"pad0","","",474,null],[12,"length","","",474,null],[3,"xcb_get_input_focus_cookie_t","","",null,null],[3,"xcb_get_input_focus_reply_t","","",null,null],[12,"response_type","","",475,null],[12,"revert_to","","",475,null],[12,"sequence","","",475,null],[12,"length","","",475,null],[12,"focus","","",475,null],[3,"xcb_query_keymap_request_t","","",null,null],[12,"major_opcode","","",476,null],[12,"pad0","","",476,null],[12,"length","","",476,null],[3,"xcb_query_keymap_cookie_t","","",null,null],[3,"xcb_query_keymap_reply_t","","",null,null],[12,"response_type","","",477,null],[12,"pad0","","",477,null],[12,"sequence","","",477,null],[12,"length","","",477,null],[12,"keys","","",477,null],[3,"xcb_open_font_request_t","","opens a font",null,null],[12,"major_opcode","","",478,null],[12,"pad0","","",478,null],[12,"length","","",478,null],[12,"fid","","The ID with which you will refer to the font, created by `xcb_generate_id`.",478,null],[12,"name_len","","Length (in bytes) of `name`.",478,null],[12,"pad1","","",478,null],[3,"xcb_close_font_request_t","","",null,null],[12,"major_opcode","","",479,null],[12,"pad0","","",479,null],[12,"length","","",479,null],[12,"font","","",479,null],[3,"xcb_fontprop_t","","",null,null],[12,"name","","",480,null],[12,"value","","",480,null],[3,"xcb_fontprop_iterator_t","","",null,null],[12,"data","","",481,null],[12,"rem","","",481,null],[12,"index","","",481,null],[3,"xcb_charinfo_t","","",null,null],[12,"left_side_bearing","","",482,null],[12,"right_side_bearing","","",482,null],[12,"character_width","","",482,null],[12,"ascent","","",482,null],[12,"descent","","",482,null],[12,"attributes","","",482,null],[3,"xcb_charinfo_iterator_t","","",null,null],[12,"data","","",483,null],[12,"rem","","",483,null],[12,"index","","",483,null],[3,"xcb_query_font_request_t","","query font metrics",null,null],[12,"major_opcode","","",484,null],[12,"pad0","","",484,null],[12,"length","","",484,null],[12,"font","","The fontable (Font or Graphics Context) to query.",484,null],[3,"xcb_query_font_cookie_t","","",null,null],[3,"xcb_query_font_reply_t","","",null,null],[12,"response_type","","",485,null],[12,"pad0","","",485,null],[12,"sequence","","",485,null],[12,"length","","",485,null],[12,"min_bounds","","minimum bounds over all existing char",485,null],[12,"pad1","","",485,null],[12,"max_bounds","","maximum bounds over all existing char",485,null],[12,"pad2","","",485,null],[12,"min_char_or_byte2","","first character",485,null],[12,"max_char_or_byte2","","last character",485,null],[12,"default_char","","char to print for undefined character",485,null],[12,"properties_len","","how many properties there are",485,null],[12,"draw_direction","","",485,null],[12,"min_byte1","","",485,null],[12,"max_byte1","","",485,null],[12,"all_chars_exist","","flag if all characters have nonzero size",485,null],[12,"font_ascent","","baseline to top edge of raster",485,null],[12,"font_descent","","baseline to bottom edge of raster",485,null],[12,"char_infos_len","","",485,null],[3,"xcb_query_text_extents_request_t","","get text extents",null,null],[12,"major_opcode","","",486,null],[12,"odd_length","","",486,null],[12,"length","","",486,null],[12,"font","","The `font` to calculate text extents in. You can also pass a graphics context.",486,null],[3,"xcb_query_text_extents_cookie_t","","",null,null],[3,"xcb_query_text_extents_reply_t","","",null,null],[12,"response_type","","",487,null],[12,"draw_direction","","",487,null],[12,"sequence","","",487,null],[12,"length","","",487,null],[12,"font_ascent","","",487,null],[12,"font_descent","","",487,null],[12,"overall_ascent","","",487,null],[12,"overall_descent","","",487,null],[12,"overall_width","","",487,null],[12,"overall_left","","",487,null],[12,"overall_right","","",487,null],[3,"xcb_str_t","","",null,null],[12,"name_len","","",488,null],[3,"xcb_str_iterator_t","","",null,null],[12,"data","","",489,null],[12,"rem","","",489,null],[12,"index","","",489,null],[3,"xcb_list_fonts_request_t","","get matching font names",null,null],[12,"major_opcode","","",490,null],[12,"pad0","","",490,null],[12,"length","","",490,null],[12,"max_names","","The maximum number of fonts to be returned.",490,null],[12,"pattern_len","","The length (in bytes) of `pattern`.",490,null],[3,"xcb_list_fonts_cookie_t","","",null,null],[3,"xcb_list_fonts_reply_t","","",null,null],[12,"response_type","","",491,null],[12,"pad0","","",491,null],[12,"sequence","","",491,null],[12,"length","","",491,null],[12,"names_len","","The number of font names.",491,null],[12,"pad1","","",491,null],[3,"xcb_list_fonts_with_info_request_t","","get matching font names and information",null,null],[12,"major_opcode","","",492,null],[12,"pad0","","",492,null],[12,"length","","",492,null],[12,"max_names","","The maximum number of fonts to be returned.",492,null],[12,"pattern_len","","The length (in bytes) of `pattern`.",492,null],[3,"xcb_list_fonts_with_info_cookie_t","","",null,null],[3,"xcb_list_fonts_with_info_reply_t","","",null,null],[12,"response_type","","",493,null],[12,"name_len","","The number of matched font names.",493,null],[12,"sequence","","",493,null],[12,"length","","",493,null],[12,"min_bounds","","minimum bounds over all existing char",493,null],[12,"pad0","","",493,null],[12,"max_bounds","","maximum bounds over all existing char",493,null],[12,"pad1","","",493,null],[12,"min_char_or_byte2","","first character",493,null],[12,"max_char_or_byte2","","last character",493,null],[12,"default_char","","char to print for undefined character",493,null],[12,"properties_len","","how many properties there are",493,null],[12,"draw_direction","","",493,null],[12,"min_byte1","","",493,null],[12,"max_byte1","","",493,null],[12,"all_chars_exist","","flag if all characters have nonzero size",493,null],[12,"font_ascent","","baseline to top edge of raster",493,null],[12,"font_descent","","baseline to bottom edge of raster",493,null],[12,"replies_hint","","An indication of how many more fonts will be returned. This is only a hint and may be larger or smaller than the number of fonts actually returned. A zero value does not guarantee that no more fonts will be returned.",493,null],[3,"xcb_set_font_path_request_t","","",null,null],[12,"major_opcode","","",494,null],[12,"pad0","","",494,null],[12,"length","","",494,null],[12,"font_qty","","",494,null],[12,"pad1","","",494,null],[3,"xcb_get_font_path_request_t","","",null,null],[12,"major_opcode","","",495,null],[12,"pad0","","",495,null],[12,"length","","",495,null],[3,"xcb_get_font_path_cookie_t","","",null,null],[3,"xcb_get_font_path_reply_t","","",null,null],[12,"response_type","","",496,null],[12,"pad0","","",496,null],[12,"sequence","","",496,null],[12,"length","","",496,null],[12,"path_len","","",496,null],[12,"pad1","","",496,null],[3,"xcb_create_pixmap_request_t","","Creates a pixmap",null,null],[12,"major_opcode","","",497,null],[12,"depth","","TODO",497,null],[12,"length","","",497,null],[12,"pid","","The ID with which you will refer to the new pixmap, created by `xcb_generate_id`.",497,null],[12,"drawable","","Drawable to get the screen from.",497,null],[12,"width","","The width of the new pixmap.",497,null],[12,"height","","The height of the new pixmap.",497,null],[3,"xcb_free_pixmap_request_t","","Destroys a pixmap",null,null],[12,"major_opcode","","",498,null],[12,"pad0","","",498,null],[12,"length","","",498,null],[12,"pixmap","","The pixmap to destroy.",498,null],[3,"xcb_create_gc_request_t","","Creates a graphics context",null,null],[12,"major_opcode","","",499,null],[12,"pad0","","",499,null],[12,"length","","",499,null],[12,"cid","","The ID with which you will refer to the graphics context, created by `xcb_generate_id`.",499,null],[12,"drawable","","Drawable to get the root/depth from.",499,null],[12,"value_mask","","",499,null],[3,"xcb_change_gc_request_t","","change graphics context components",null,null],[12,"major_opcode","","",500,null],[12,"pad0","","",500,null],[12,"length","","",500,null],[12,"gc","","The graphics context to change.",500,null],[12,"value_mask","","",500,null],[3,"xcb_copy_gc_request_t","","",null,null],[12,"major_opcode","","",501,null],[12,"pad0","","",501,null],[12,"length","","",501,null],[12,"src_gc","","",501,null],[12,"dst_gc","","",501,null],[12,"value_mask","","",501,null],[3,"xcb_set_dashes_request_t","","",null,null],[12,"major_opcode","","",502,null],[12,"pad0","","",502,null],[12,"length","","",502,null],[12,"gc","","",502,null],[12,"dash_offset","","",502,null],[12,"dashes_len","","",502,null],[3,"xcb_set_clip_rectangles_request_t","","",null,null],[12,"major_opcode","","",503,null],[12,"ordering","","",503,null],[12,"length","","",503,null],[12,"gc","","",503,null],[12,"clip_x_origin","","",503,null],[12,"clip_y_origin","","",503,null],[3,"xcb_free_gc_request_t","","Destroys a graphics context",null,null],[12,"major_opcode","","",504,null],[12,"pad0","","",504,null],[12,"length","","",504,null],[12,"gc","","The graphics context to destroy.",504,null],[3,"xcb_clear_area_request_t","","",null,null],[12,"major_opcode","","",505,null],[12,"exposures","","",505,null],[12,"length","","",505,null],[12,"window","","",505,null],[12,"x","","",505,null],[12,"y","","",505,null],[12,"width","","",505,null],[12,"height","","",505,null],[3,"xcb_copy_area_request_t","","copy areas",null,null],[12,"major_opcode","","",506,null],[12,"pad0","","",506,null],[12,"length","","",506,null],[12,"src_drawable","","The source drawable (Window or Pixmap).",506,null],[12,"dst_drawable","","The destination drawable (Window or Pixmap).",506,null],[12,"gc","","The graphics context to use.",506,null],[12,"src_x","","The source X coordinate.",506,null],[12,"src_y","","The source Y coordinate.",506,null],[12,"dst_x","","The destination X coordinate.",506,null],[12,"dst_y","","The destination Y coordinate.",506,null],[12,"width","","The width of the area to copy (in pixels).",506,null],[12,"height","","The height of the area to copy (in pixels).",506,null],[3,"xcb_copy_plane_request_t","","",null,null],[12,"major_opcode","","",507,null],[12,"pad0","","",507,null],[12,"length","","",507,null],[12,"src_drawable","","",507,null],[12,"dst_drawable","","",507,null],[12,"gc","","",507,null],[12,"src_x","","",507,null],[12,"src_y","","",507,null],[12,"dst_x","","",507,null],[12,"dst_y","","",507,null],[12,"width","","",507,null],[12,"height","","",507,null],[12,"bit_plane","","",507,null],[3,"xcb_poly_point_request_t","","",null,null],[12,"major_opcode","","",508,null],[12,"coordinate_mode","","",508,null],[12,"length","","",508,null],[12,"drawable","","",508,null],[12,"gc","","",508,null],[3,"xcb_poly_line_request_t","","draw lines",null,null],[12,"major_opcode","","",509,null],[12,"coordinate_mode","","",509,null],[12,"length","","",509,null],[12,"drawable","","The drawable to draw the line(s) on.",509,null],[12,"gc","","The graphics context to use.",509,null],[3,"xcb_segment_t","","",null,null],[12,"x1","","",510,null],[12,"y1","","",510,null],[12,"x2","","",510,null],[12,"y2","","",510,null],[3,"xcb_segment_iterator_t","","",null,null],[12,"data","","",511,null],[12,"rem","","",511,null],[12,"index","","",511,null],[3,"xcb_poly_segment_request_t","","draw lines",null,null],[12,"major_opcode","","",512,null],[12,"pad0","","",512,null],[12,"length","","",512,null],[12,"drawable","","A drawable (Window or Pixmap) to draw on.",512,null],[12,"gc","","The graphics context to use.",512,null],[3,"xcb_poly_rectangle_request_t","","",null,null],[12,"major_opcode","","",513,null],[12,"pad0","","",513,null],[12,"length","","",513,null],[12,"drawable","","",513,null],[12,"gc","","",513,null],[3,"xcb_poly_arc_request_t","","",null,null],[12,"major_opcode","","",514,null],[12,"pad0","","",514,null],[12,"length","","",514,null],[12,"drawable","","",514,null],[12,"gc","","",514,null],[3,"xcb_fill_poly_request_t","","",null,null],[12,"major_opcode","","",515,null],[12,"pad0","","",515,null],[12,"length","","",515,null],[12,"drawable","","",515,null],[12,"gc","","",515,null],[12,"shape","","",515,null],[12,"coordinate_mode","","",515,null],[12,"pad1","","",515,null],[3,"xcb_poly_fill_rectangle_request_t","","Fills rectangles",null,null],[12,"major_opcode","","",516,null],[12,"pad0","","",516,null],[12,"length","","",516,null],[12,"drawable","","The drawable (Window or Pixmap) to draw on.",516,null],[12,"gc","","The graphics context to use.",516,null],[3,"xcb_poly_fill_arc_request_t","","",null,null],[12,"major_opcode","","",517,null],[12,"pad0","","",517,null],[12,"length","","",517,null],[12,"drawable","","",517,null],[12,"gc","","",517,null],[3,"xcb_put_image_request_t","","",null,null],[12,"major_opcode","","",518,null],[12,"format","","",518,null],[12,"length","","",518,null],[12,"drawable","","",518,null],[12,"gc","","",518,null],[12,"width","","",518,null],[12,"height","","",518,null],[12,"dst_x","","",518,null],[12,"dst_y","","",518,null],[12,"left_pad","","",518,null],[12,"depth","","",518,null],[12,"pad0","","",518,null],[3,"xcb_get_image_request_t","","",null,null],[12,"major_opcode","","",519,null],[12,"format","","",519,null],[12,"length","","",519,null],[12,"drawable","","",519,null],[12,"x","","",519,null],[12,"y","","",519,null],[12,"width","","",519,null],[12,"height","","",519,null],[12,"plane_mask","","",519,null],[3,"xcb_get_image_cookie_t","","",null,null],[3,"xcb_get_image_reply_t","","",null,null],[12,"response_type","","",520,null],[12,"depth","","",520,null],[12,"sequence","","",520,null],[12,"length","","",520,null],[12,"visual","","",520,null],[12,"pad0","","",520,null],[3,"xcb_poly_text_8_request_t","","",null,null],[12,"major_opcode","","",521,null],[12,"pad0","","",521,null],[12,"length","","",521,null],[12,"drawable","","",521,null],[12,"gc","","",521,null],[12,"x","","",521,null],[12,"y","","",521,null],[3,"xcb_poly_text_16_request_t","","",null,null],[12,"major_opcode","","",522,null],[12,"pad0","","",522,null],[12,"length","","",522,null],[12,"drawable","","",522,null],[12,"gc","","",522,null],[12,"x","","",522,null],[12,"y","","",522,null],[3,"xcb_image_text_8_request_t","","Draws text",null,null],[12,"major_opcode","","",523,null],[12,"string_len","","The length of the `string`. Note that this parameter limited by 255 due to using 8 bits!",523,null],[12,"length","","",523,null],[12,"drawable","","The drawable (Window or Pixmap) to draw text on.",523,null],[12,"gc","","The graphics context to use.",523,null],[12,"x","","The x coordinate of the first character, relative to the origin of `drawable`.",523,null],[12,"y","","The y coordinate of the first character, relative to the origin of `drawable`.",523,null],[3,"xcb_image_text_16_request_t","","Draws text",null,null],[12,"major_opcode","","",524,null],[12,"string_len","","The length of the `string` in characters. Note that this parameter limited by 255 due to using 8 bits!",524,null],[12,"length","","",524,null],[12,"drawable","","The drawable (Window or Pixmap) to draw text on.",524,null],[12,"gc","","The graphics context to use.",524,null],[12,"x","","The x coordinate of the first character, relative to the origin of `drawable`.",524,null],[12,"y","","The y coordinate of the first character, relative to the origin of `drawable`.",524,null],[3,"xcb_create_colormap_request_t","","",null,null],[12,"major_opcode","","",525,null],[12,"alloc","","",525,null],[12,"length","","",525,null],[12,"mid","","",525,null],[12,"window","","",525,null],[12,"visual","","",525,null],[3,"xcb_free_colormap_request_t","","",null,null],[12,"major_opcode","","",526,null],[12,"pad0","","",526,null],[12,"length","","",526,null],[12,"cmap","","",526,null],[3,"xcb_copy_colormap_and_free_request_t","","",null,null],[12,"major_opcode","","",527,null],[12,"pad0","","",527,null],[12,"length","","",527,null],[12,"mid","","",527,null],[12,"src_cmap","","",527,null],[3,"xcb_install_colormap_request_t","","",null,null],[12,"major_opcode","","",528,null],[12,"pad0","","",528,null],[12,"length","","",528,null],[12,"cmap","","",528,null],[3,"xcb_uninstall_colormap_request_t","","",null,null],[12,"major_opcode","","",529,null],[12,"pad0","","",529,null],[12,"length","","",529,null],[12,"cmap","","",529,null],[3,"xcb_list_installed_colormaps_request_t","","",null,null],[12,"major_opcode","","",530,null],[12,"pad0","","",530,null],[12,"length","","",530,null],[12,"window","","",530,null],[3,"xcb_list_installed_colormaps_cookie_t","","",null,null],[3,"xcb_list_installed_colormaps_reply_t","","",null,null],[12,"response_type","","",531,null],[12,"pad0","","",531,null],[12,"sequence","","",531,null],[12,"length","","",531,null],[12,"cmaps_len","","",531,null],[12,"pad1","","",531,null],[3,"xcb_alloc_color_request_t","","Allocate a color",null,null],[12,"major_opcode","","",532,null],[12,"pad0","","",532,null],[12,"length","","",532,null],[12,"cmap","","TODO",532,null],[12,"red","","The red value of your color.",532,null],[12,"green","","The green value of your color.",532,null],[12,"blue","","The blue value of your color.",532,null],[12,"pad1","","",532,null],[3,"xcb_alloc_color_cookie_t","","",null,null],[3,"xcb_alloc_color_reply_t","","",null,null],[12,"response_type","","",533,null],[12,"pad0","","",533,null],[12,"sequence","","",533,null],[12,"length","","",533,null],[12,"red","","",533,null],[12,"green","","",533,null],[12,"blue","","",533,null],[12,"pad1","","",533,null],[12,"pixel","","",533,null],[3,"xcb_alloc_named_color_request_t","","",null,null],[12,"major_opcode","","",534,null],[12,"pad0","","",534,null],[12,"length","","",534,null],[12,"cmap","","",534,null],[12,"name_len","","",534,null],[12,"pad1","","",534,null],[3,"xcb_alloc_named_color_cookie_t","","",null,null],[3,"xcb_alloc_named_color_reply_t","","",null,null],[12,"response_type","","",535,null],[12,"pad0","","",535,null],[12,"sequence","","",535,null],[12,"length","","",535,null],[12,"pixel","","",535,null],[12,"exact_red","","",535,null],[12,"exact_green","","",535,null],[12,"exact_blue","","",535,null],[12,"visual_red","","",535,null],[12,"visual_green","","",535,null],[12,"visual_blue","","",535,null],[3,"xcb_alloc_color_cells_request_t","","",null,null],[12,"major_opcode","","",536,null],[12,"contiguous","","",536,null],[12,"length","","",536,null],[12,"cmap","","",536,null],[12,"colors","","",536,null],[12,"planes","","",536,null],[3,"xcb_alloc_color_cells_cookie_t","","",null,null],[3,"xcb_alloc_color_cells_reply_t","","",null,null],[12,"response_type","","",537,null],[12,"pad0","","",537,null],[12,"sequence","","",537,null],[12,"length","","",537,null],[12,"pixels_len","","",537,null],[12,"masks_len","","",537,null],[12,"pad1","","",537,null],[3,"xcb_alloc_color_planes_request_t","","",null,null],[12,"major_opcode","","",538,null],[12,"contiguous","","",538,null],[12,"length","","",538,null],[12,"cmap","","",538,null],[12,"colors","","",538,null],[12,"reds","","",538,null],[12,"greens","","",538,null],[12,"blues","","",538,null],[3,"xcb_alloc_color_planes_cookie_t","","",null,null],[3,"xcb_alloc_color_planes_reply_t","","",null,null],[12,"response_type","","",539,null],[12,"pad0","","",539,null],[12,"sequence","","",539,null],[12,"length","","",539,null],[12,"pixels_len","","",539,null],[12,"pad1","","",539,null],[12,"red_mask","","",539,null],[12,"green_mask","","",539,null],[12,"blue_mask","","",539,null],[12,"pad2","","",539,null],[3,"xcb_free_colors_request_t","","",null,null],[12,"major_opcode","","",540,null],[12,"pad0","","",540,null],[12,"length","","",540,null],[12,"cmap","","",540,null],[12,"plane_mask","","",540,null],[3,"xcb_coloritem_t","","",null,null],[12,"pixel","","",541,null],[12,"red","","",541,null],[12,"green","","",541,null],[12,"blue","","",541,null],[12,"flags","","",541,null],[12,"pad0","","",541,null],[3,"xcb_coloritem_iterator_t","","",null,null],[12,"data","","",542,null],[12,"rem","","",542,null],[12,"index","","",542,null],[3,"xcb_store_colors_request_t","","",null,null],[12,"major_opcode","","",543,null],[12,"pad0","","",543,null],[12,"length","","",543,null],[12,"cmap","","",543,null],[3,"xcb_store_named_color_request_t","","",null,null],[12,"major_opcode","","",544,null],[12,"flags","","",544,null],[12,"length","","",544,null],[12,"cmap","","",544,null],[12,"pixel","","",544,null],[12,"name_len","","",544,null],[12,"pad0","","",544,null],[3,"xcb_rgb_t","","",null,null],[12,"red","","",545,null],[12,"green","","",545,null],[12,"blue","","",545,null],[12,"pad0","","",545,null],[3,"xcb_rgb_iterator_t","","",null,null],[12,"data","","",546,null],[12,"rem","","",546,null],[12,"index","","",546,null],[3,"xcb_query_colors_request_t","","",null,null],[12,"major_opcode","","",547,null],[12,"pad0","","",547,null],[12,"length","","",547,null],[12,"cmap","","",547,null],[3,"xcb_query_colors_cookie_t","","",null,null],[3,"xcb_query_colors_reply_t","","",null,null],[12,"response_type","","",548,null],[12,"pad0","","",548,null],[12,"sequence","","",548,null],[12,"length","","",548,null],[12,"colors_len","","",548,null],[12,"pad1","","",548,null],[3,"xcb_lookup_color_request_t","","",null,null],[12,"major_opcode","","",549,null],[12,"pad0","","",549,null],[12,"length","","",549,null],[12,"cmap","","",549,null],[12,"name_len","","",549,null],[12,"pad1","","",549,null],[3,"xcb_lookup_color_cookie_t","","",null,null],[3,"xcb_lookup_color_reply_t","","",null,null],[12,"response_type","","",550,null],[12,"pad0","","",550,null],[12,"sequence","","",550,null],[12,"length","","",550,null],[12,"exact_red","","",550,null],[12,"exact_green","","",550,null],[12,"exact_blue","","",550,null],[12,"visual_red","","",550,null],[12,"visual_green","","",550,null],[12,"visual_blue","","",550,null],[3,"xcb_create_cursor_request_t","","",null,null],[12,"major_opcode","","",551,null],[12,"pad0","","",551,null],[12,"length","","",551,null],[12,"cid","","",551,null],[12,"source","","",551,null],[12,"mask","","",551,null],[12,"fore_red","","",551,null],[12,"fore_green","","",551,null],[12,"fore_blue","","",551,null],[12,"back_red","","",551,null],[12,"back_green","","",551,null],[12,"back_blue","","",551,null],[12,"x","","",551,null],[12,"y","","",551,null],[3,"xcb_create_glyph_cursor_request_t","","create cursor",null,null],[12,"major_opcode","","",552,null],[12,"pad0","","",552,null],[12,"length","","",552,null],[12,"cid","","The ID with which you will refer to the cursor, created by `xcb_generate_id`.",552,null],[12,"source_font","","In which font to look for the cursor glyph.",552,null],[12,"mask_font","","In which font to look for the mask glyph.",552,null],[12,"source_char","","The glyph of `source_font` to use.",552,null],[12,"mask_char","","The glyph of `mask_font` to use as a mask: Pixels which are set to 1 define which source pixels are displayed. All pixels which are set to 0 are not displayed.",552,null],[12,"fore_red","","The red value of the foreground color.",552,null],[12,"fore_green","","The green value of the foreground color.",552,null],[12,"fore_blue","","The blue value of the foreground color.",552,null],[12,"back_red","","The red value of the background color.",552,null],[12,"back_green","","The green value of the background color.",552,null],[12,"back_blue","","The blue value of the background color.",552,null],[3,"xcb_free_cursor_request_t","","Deletes a cursor",null,null],[12,"major_opcode","","",553,null],[12,"pad0","","",553,null],[12,"length","","",553,null],[12,"cursor","","The cursor to destroy.",553,null],[3,"xcb_recolor_cursor_request_t","","",null,null],[12,"major_opcode","","",554,null],[12,"pad0","","",554,null],[12,"length","","",554,null],[12,"cursor","","",554,null],[12,"fore_red","","",554,null],[12,"fore_green","","",554,null],[12,"fore_blue","","",554,null],[12,"back_red","","",554,null],[12,"back_green","","",554,null],[12,"back_blue","","",554,null],[3,"xcb_query_best_size_request_t","","",null,null],[12,"major_opcode","","",555,null],[12,"class","","",555,null],[12,"length","","",555,null],[12,"drawable","","",555,null],[12,"width","","",555,null],[12,"height","","",555,null],[3,"xcb_query_best_size_cookie_t","","",null,null],[3,"xcb_query_best_size_reply_t","","",null,null],[12,"response_type","","",556,null],[12,"pad0","","",556,null],[12,"sequence","","",556,null],[12,"length","","",556,null],[12,"width","","",556,null],[12,"height","","",556,null],[3,"xcb_query_extension_request_t","","check if extension is present",null,null],[12,"major_opcode","","",557,null],[12,"pad0","","",557,null],[12,"length","","",557,null],[12,"name_len","","The length of `name` in bytes.",557,null],[12,"pad1","","",557,null],[3,"xcb_query_extension_cookie_t","","",null,null],[3,"xcb_query_extension_reply_t","","",null,null],[12,"response_type","","",558,null],[12,"pad0","","",558,null],[12,"sequence","","",558,null],[12,"length","","",558,null],[12,"present","","Whether the extension is present on this X11 server.",558,null],[12,"major_opcode","","The major opcode for requests.",558,null],[12,"first_event","","The first event code, if any.",558,null],[12,"first_error","","The first error code, if any.",558,null],[3,"xcb_list_extensions_request_t","","",null,null],[12,"major_opcode","","",559,null],[12,"pad0","","",559,null],[12,"length","","",559,null],[3,"xcb_list_extensions_cookie_t","","",null,null],[3,"xcb_list_extensions_reply_t","","",null,null],[12,"response_type","","",560,null],[12,"names_len","","",560,null],[12,"sequence","","",560,null],[12,"length","","",560,null],[12,"pad0","","",560,null],[3,"xcb_change_keyboard_mapping_request_t","","",null,null],[12,"major_opcode","","",561,null],[12,"keycode_count","","",561,null],[12,"length","","",561,null],[12,"first_keycode","","",561,null],[12,"keysyms_per_keycode","","",561,null],[12,"pad0","","",561,null],[3,"xcb_get_keyboard_mapping_request_t","","",null,null],[12,"major_opcode","","",562,null],[12,"pad0","","",562,null],[12,"length","","",562,null],[12,"first_keycode","","",562,null],[12,"count","","",562,null],[3,"xcb_get_keyboard_mapping_cookie_t","","",null,null],[3,"xcb_get_keyboard_mapping_reply_t","","",null,null],[12,"response_type","","",563,null],[12,"keysyms_per_keycode","","",563,null],[12,"sequence","","",563,null],[12,"length","","",563,null],[12,"pad0","","",563,null],[3,"xcb_change_keyboard_control_request_t","","",null,null],[12,"major_opcode","","",564,null],[12,"pad0","","",564,null],[12,"length","","",564,null],[12,"value_mask","","",564,null],[3,"xcb_get_keyboard_control_request_t","","",null,null],[12,"major_opcode","","",565,null],[12,"pad0","","",565,null],[12,"length","","",565,null],[3,"xcb_get_keyboard_control_cookie_t","","",null,null],[3,"xcb_get_keyboard_control_reply_t","","",null,null],[12,"response_type","","",566,null],[12,"global_auto_repeat","","",566,null],[12,"sequence","","",566,null],[12,"length","","",566,null],[12,"led_mask","","",566,null],[12,"key_click_percent","","",566,null],[12,"bell_percent","","",566,null],[12,"bell_pitch","","",566,null],[12,"bell_duration","","",566,null],[12,"pad0","","",566,null],[12,"auto_repeats","","",566,null],[3,"xcb_bell_request_t","","",null,null],[12,"major_opcode","","",567,null],[12,"percent","","",567,null],[12,"length","","",567,null],[3,"xcb_change_pointer_control_request_t","","",null,null],[12,"major_opcode","","",568,null],[12,"pad0","","",568,null],[12,"length","","",568,null],[12,"acceleration_numerator","","",568,null],[12,"acceleration_denominator","","",568,null],[12,"threshold","","",568,null],[12,"do_acceleration","","",568,null],[12,"do_threshold","","",568,null],[3,"xcb_get_pointer_control_request_t","","",null,null],[12,"major_opcode","","",569,null],[12,"pad0","","",569,null],[12,"length","","",569,null],[3,"xcb_get_pointer_control_cookie_t","","",null,null],[3,"xcb_get_pointer_control_reply_t","","",null,null],[12,"response_type","","",570,null],[12,"pad0","","",570,null],[12,"sequence","","",570,null],[12,"length","","",570,null],[12,"acceleration_numerator","","",570,null],[12,"acceleration_denominator","","",570,null],[12,"threshold","","",570,null],[12,"pad1","","",570,null],[3,"xcb_set_screen_saver_request_t","","",null,null],[12,"major_opcode","","",571,null],[12,"pad0","","",571,null],[12,"length","","",571,null],[12,"timeout","","",571,null],[12,"interval","","",571,null],[12,"prefer_blanking","","",571,null],[12,"allow_exposures","","",571,null],[3,"xcb_get_screen_saver_request_t","","",null,null],[12,"major_opcode","","",572,null],[12,"pad0","","",572,null],[12,"length","","",572,null],[3,"xcb_get_screen_saver_cookie_t","","",null,null],[3,"xcb_get_screen_saver_reply_t","","",null,null],[12,"response_type","","",573,null],[12,"pad0","","",573,null],[12,"sequence","","",573,null],[12,"length","","",573,null],[12,"timeout","","",573,null],[12,"interval","","",573,null],[12,"prefer_blanking","","",573,null],[12,"allow_exposures","","",573,null],[12,"pad1","","",573,null],[3,"xcb_change_hosts_request_t","","",null,null],[12,"major_opcode","","",574,null],[12,"mode","","",574,null],[12,"length","","",574,null],[12,"family","","",574,null],[12,"pad0","","",574,null],[12,"address_len","","",574,null],[3,"xcb_host_t","","",null,null],[12,"family","","",575,null],[12,"pad0","","",575,null],[12,"address_len","","",575,null],[3,"xcb_host_iterator_t","","",null,null],[12,"data","","",576,null],[12,"rem","","",576,null],[12,"index","","",576,null],[3,"xcb_list_hosts_request_t","","",null,null],[12,"major_opcode","","",577,null],[12,"pad0","","",577,null],[12,"length","","",577,null],[3,"xcb_list_hosts_cookie_t","","",null,null],[3,"xcb_list_hosts_reply_t","","",null,null],[12,"response_type","","",578,null],[12,"mode","","",578,null],[12,"sequence","","",578,null],[12,"length","","",578,null],[12,"hosts_len","","",578,null],[12,"pad0","","",578,null],[3,"xcb_set_access_control_request_t","","",null,null],[12,"major_opcode","","",579,null],[12,"mode","","",579,null],[12,"length","","",579,null],[3,"xcb_set_close_down_mode_request_t","","",null,null],[12,"major_opcode","","",580,null],[12,"mode","","",580,null],[12,"length","","",580,null],[3,"xcb_kill_client_request_t","","kills a client",null,null],[12,"major_opcode","","",581,null],[12,"pad0","","",581,null],[12,"length","","",581,null],[12,"resource","","Any resource belonging to the client (for example a Window), used to identify the client connection.",581,null],[3,"xcb_rotate_properties_request_t","","",null,null],[12,"major_opcode","","",582,null],[12,"pad0","","",582,null],[12,"length","","",582,null],[12,"window","","",582,null],[12,"atoms_len","","",582,null],[12,"delta","","",582,null],[3,"xcb_force_screen_saver_request_t","","",null,null],[12,"major_opcode","","",583,null],[12,"mode","","",583,null],[12,"length","","",583,null],[3,"xcb_set_pointer_mapping_request_t","","",null,null],[12,"major_opcode","","",584,null],[12,"map_len","","",584,null],[12,"length","","",584,null],[3,"xcb_set_pointer_mapping_cookie_t","","",null,null],[3,"xcb_set_pointer_mapping_reply_t","","",null,null],[12,"response_type","","",585,null],[12,"status","","",585,null],[12,"sequence","","",585,null],[12,"length","","",585,null],[3,"xcb_get_pointer_mapping_request_t","","",null,null],[12,"major_opcode","","",586,null],[12,"pad0","","",586,null],[12,"length","","",586,null],[3,"xcb_get_pointer_mapping_cookie_t","","",null,null],[3,"xcb_get_pointer_mapping_reply_t","","",null,null],[12,"response_type","","",587,null],[12,"map_len","","",587,null],[12,"sequence","","",587,null],[12,"length","","",587,null],[12,"pad0","","",587,null],[3,"xcb_set_modifier_mapping_request_t","","",null,null],[12,"major_opcode","","",588,null],[12,"keycodes_per_modifier","","",588,null],[12,"length","","",588,null],[3,"xcb_set_modifier_mapping_cookie_t","","",null,null],[3,"xcb_set_modifier_mapping_reply_t","","",null,null],[12,"response_type","","",589,null],[12,"status","","",589,null],[12,"sequence","","",589,null],[12,"length","","",589,null],[3,"xcb_get_modifier_mapping_request_t","","",null,null],[12,"major_opcode","","",590,null],[12,"pad0","","",590,null],[12,"length","","",590,null],[3,"xcb_get_modifier_mapping_cookie_t","","",null,null],[3,"xcb_get_modifier_mapping_reply_t","","",null,null],[12,"response_type","","",591,null],[12,"keycodes_per_modifier","","",591,null],[12,"sequence","","",591,null],[12,"length","","",591,null],[12,"pad0","","",591,null],[3,"xcb_no_operation_request_t","","",null,null],[12,"major_opcode","","",592,null],[12,"pad0","","",592,null],[12,"length","","",592,null],[5,"xcb_char2b_next","","",null,null],[5,"xcb_char2b_end","","",null,null],[5,"xcb_window_next","","",null,null],[5,"xcb_window_end","","",null,null],[5,"xcb_pixmap_next","","",null,null],[5,"xcb_pixmap_end","","",null,null],[5,"xcb_cursor_next","","",null,null],[5,"xcb_cursor_end","","",null,null],[5,"xcb_font_next","","",null,null],[5,"xcb_font_end","","",null,null],[5,"xcb_gcontext_next","","",null,null],[5,"xcb_gcontext_end","","",null,null],[5,"xcb_colormap_next","","",null,null],[5,"xcb_colormap_end","","",null,null],[5,"xcb_atom_next","","",null,null],[5,"xcb_atom_end","","",null,null],[5,"xcb_drawable_next","","",null,null],[5,"xcb_drawable_end","","",null,null],[5,"xcb_fontable_next","","",null,null],[5,"xcb_fontable_end","","",null,null],[5,"xcb_visualid_next","","",null,null],[5,"xcb_visualid_end","","",null,null],[5,"xcb_timestamp_next","","",null,null],[5,"xcb_timestamp_end","","",null,null],[5,"xcb_keysym_next","","",null,null],[5,"xcb_keysym_end","","",null,null],[5,"xcb_keycode_next","","",null,null],[5,"xcb_keycode_end","","",null,null],[5,"xcb_button_next","","",null,null],[5,"xcb_button_end","","",null,null],[5,"xcb_point_next","","",null,null],[5,"xcb_point_end","","",null,null],[5,"xcb_rectangle_next","","",null,null],[5,"xcb_rectangle_end","","",null,null],[5,"xcb_arc_next","","",null,null],[5,"xcb_arc_end","","",null,null],[5,"xcb_format_next","","",null,null],[5,"xcb_format_end","","",null,null],[5,"xcb_visualtype_next","","",null,null],[5,"xcb_visualtype_end","","",null,null],[5,"xcb_depth_visuals","","",null,null],[5,"xcb_depth_visuals_length","","",null,null],[5,"xcb_depth_visuals_iterator","","",null,null],[5,"xcb_depth_next","","",null,null],[5,"xcb_depth_end","","",null,null],[5,"xcb_screen_allowed_depths_length","","",null,null],[5,"xcb_screen_allowed_depths_iterator","","",null,null],[5,"xcb_screen_next","","",null,null],[5,"xcb_screen_end","","",null,null],[5,"xcb_setup_request_authorization_protocol_name","","",null,null],[5,"xcb_setup_request_authorization_protocol_name_length","","",null,null],[5,"xcb_setup_request_authorization_protocol_name_end","","",null,null],[5,"xcb_setup_request_authorization_protocol_data","","",null,null],[5,"xcb_setup_request_authorization_protocol_data_length","","",null,null],[5,"xcb_setup_request_authorization_protocol_data_end","","",null,null],[5,"xcb_setup_request_next","","",null,null],[5,"xcb_setup_request_end","","",null,null],[5,"xcb_setup_failed_reason","","",null,null],[5,"xcb_setup_failed_reason_length","","",null,null],[5,"xcb_setup_failed_reason_end","","",null,null],[5,"xcb_setup_failed_next","","",null,null],[5,"xcb_setup_failed_end","","",null,null],[5,"xcb_setup_authenticate_reason","","",null,null],[5,"xcb_setup_authenticate_reason_length","","",null,null],[5,"xcb_setup_authenticate_reason_end","","",null,null],[5,"xcb_setup_authenticate_next","","",null,null],[5,"xcb_setup_authenticate_end","","",null,null],[5,"xcb_setup_vendor","","",null,null],[5,"xcb_setup_vendor_length","","",null,null],[5,"xcb_setup_vendor_end","","",null,null],[5,"xcb_setup_pixmap_formats","","",null,null],[5,"xcb_setup_pixmap_formats_length","","",null,null],[5,"xcb_setup_pixmap_formats_iterator","","",null,null],[5,"xcb_setup_roots_length","","",null,null],[5,"xcb_setup_roots_iterator","","",null,null],[5,"xcb_setup_next","","",null,null],[5,"xcb_setup_end","","",null,null],[5,"xcb_client_message_data_next","","",null,null],[5,"xcb_client_message_data_end","","",null,null],[5,"xcb_create_window","","Creates a window",null,null],[5,"xcb_create_window_checked","","Creates a window",null,null],[5,"xcb_change_window_attributes","","change window attributes",null,null],[5,"xcb_change_window_attributes_checked","","change window attributes",null,null],[5,"xcb_get_window_attributes_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_get_window_attributes","","Gets window attributes",null,null],[5,"xcb_get_window_attributes_unchecked","","Gets window attributes",null,null],[5,"xcb_destroy_window","","Destroys a window",null,null],[5,"xcb_destroy_window_checked","","Destroys a window",null,null],[5,"xcb_destroy_subwindows","","",null,null],[5,"xcb_destroy_subwindows_checked","","",null,null],[5,"xcb_change_save_set","","Changes a client's save set",null,null],[5,"xcb_change_save_set_checked","","Changes a client's save set",null,null],[5,"xcb_reparent_window","","Reparents a window",null,null],[5,"xcb_reparent_window_checked","","Reparents a window",null,null],[5,"xcb_map_window","","Makes a window visible",null,null],[5,"xcb_map_window_checked","","Makes a window visible",null,null],[5,"xcb_map_subwindows","","",null,null],[5,"xcb_map_subwindows_checked","","",null,null],[5,"xcb_unmap_window","","Makes a window invisible",null,null],[5,"xcb_unmap_window_checked","","Makes a window invisible",null,null],[5,"xcb_unmap_subwindows","","",null,null],[5,"xcb_unmap_subwindows_checked","","",null,null],[5,"xcb_configure_window","","Configures window attributes",null,null],[5,"xcb_configure_window_checked","","Configures window attributes",null,null],[5,"xcb_circulate_window","","Change window stacking order",null,null],[5,"xcb_circulate_window_checked","","Change window stacking order",null,null],[5,"xcb_get_geometry_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_get_geometry","","Get current window geometry",null,null],[5,"xcb_get_geometry_unchecked","","Get current window geometry",null,null],[5,"xcb_query_tree_children","","",null,null],[5,"xcb_query_tree_children_length","","",null,null],[5,"xcb_query_tree_children_end","","",null,null],[5,"xcb_query_tree_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_query_tree","","query the window tree",null,null],[5,"xcb_query_tree_unchecked","","query the window tree",null,null],[5,"xcb_intern_atom_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_intern_atom","","Get atom identifier by name",null,null],[5,"xcb_intern_atom_unchecked","","Get atom identifier by name",null,null],[5,"xcb_get_atom_name_name","","",null,null],[5,"xcb_get_atom_name_name_length","","",null,null],[5,"xcb_get_atom_name_name_end","","",null,null],[5,"xcb_get_atom_name_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_get_atom_name","","",null,null],[5,"xcb_get_atom_name_unchecked","","",null,null],[5,"xcb_change_property","","Changes a window property",null,null],[5,"xcb_change_property_checked","","Changes a window property",null,null],[5,"xcb_delete_property","","",null,null],[5,"xcb_delete_property_checked","","",null,null],[5,"xcb_get_property_value","","",null,null],[5,"xcb_get_property_value_length","","",null,null],[5,"xcb_get_property_value_end","","",null,null],[5,"xcb_get_property_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_get_property","","Gets a window property",null,null],[5,"xcb_get_property_unchecked","","Gets a window property",null,null],[5,"xcb_list_properties_atoms","","",null,null],[5,"xcb_list_properties_atoms_length","","",null,null],[5,"xcb_list_properties_atoms_end","","",null,null],[5,"xcb_list_properties_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_list_properties","","",null,null],[5,"xcb_list_properties_unchecked","","",null,null],[5,"xcb_set_selection_owner","","Sets the owner of a selection",null,null],[5,"xcb_set_selection_owner_checked","","Sets the owner of a selection",null,null],[5,"xcb_get_selection_owner_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_get_selection_owner","","Gets the owner of a selection",null,null],[5,"xcb_get_selection_owner_unchecked","","Gets the owner of a selection",null,null],[5,"xcb_convert_selection","","",null,null],[5,"xcb_convert_selection_checked","","",null,null],[5,"xcb_send_event","","send an event",null,null],[5,"xcb_send_event_checked","","send an event",null,null],[5,"xcb_grab_pointer_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_grab_pointer","","Grab the pointer",null,null],[5,"xcb_grab_pointer_unchecked","","Grab the pointer",null,null],[5,"xcb_ungrab_pointer","","release the pointer",null,null],[5,"xcb_ungrab_pointer_checked","","release the pointer",null,null],[5,"xcb_grab_button","","Grab pointer button(s)",null,null],[5,"xcb_grab_button_checked","","Grab pointer button(s)",null,null],[5,"xcb_ungrab_button","","",null,null],[5,"xcb_ungrab_button_checked","","",null,null],[5,"xcb_change_active_pointer_grab","","",null,null],[5,"xcb_change_active_pointer_grab_checked","","",null,null],[5,"xcb_grab_keyboard_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_grab_keyboard","","Grab the keyboard",null,null],[5,"xcb_grab_keyboard_unchecked","","Grab the keyboard",null,null],[5,"xcb_ungrab_keyboard","","",null,null],[5,"xcb_ungrab_keyboard_checked","","",null,null],[5,"xcb_grab_key","","Grab keyboard key(s)",null,null],[5,"xcb_grab_key_checked","","Grab keyboard key(s)",null,null],[5,"xcb_ungrab_key","","release a key combination",null,null],[5,"xcb_ungrab_key_checked","","release a key combination",null,null],[5,"xcb_allow_events","","release queued events",null,null],[5,"xcb_allow_events_checked","","release queued events",null,null],[5,"xcb_grab_server","","",null,null],[5,"xcb_grab_server_checked","","",null,null],[5,"xcb_ungrab_server","","",null,null],[5,"xcb_ungrab_server_checked","","",null,null],[5,"xcb_query_pointer_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_query_pointer","","get pointer coordinates",null,null],[5,"xcb_query_pointer_unchecked","","get pointer coordinates",null,null],[5,"xcb_timecoord_next","","",null,null],[5,"xcb_timecoord_end","","",null,null],[5,"xcb_get_motion_events_events","","",null,null],[5,"xcb_get_motion_events_events_length","","",null,null],[5,"xcb_get_motion_events_events_iterator","","",null,null],[5,"xcb_get_motion_events_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_get_motion_events","","",null,null],[5,"xcb_get_motion_events_unchecked","","",null,null],[5,"xcb_translate_coordinates_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_translate_coordinates","","",null,null],[5,"xcb_translate_coordinates_unchecked","","",null,null],[5,"xcb_warp_pointer","","move mouse pointer",null,null],[5,"xcb_warp_pointer_checked","","move mouse pointer",null,null],[5,"xcb_set_input_focus","","Sets input focus",null,null],[5,"xcb_set_input_focus_checked","","Sets input focus",null,null],[5,"xcb_get_input_focus_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_get_input_focus","","",null,null],[5,"xcb_get_input_focus_unchecked","","",null,null],[5,"xcb_query_keymap_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_query_keymap","","",null,null],[5,"xcb_query_keymap_unchecked","","",null,null],[5,"xcb_open_font","","opens a font",null,null],[5,"xcb_open_font_checked","","opens a font",null,null],[5,"xcb_close_font","","",null,null],[5,"xcb_close_font_checked","","",null,null],[5,"xcb_fontprop_next","","",null,null],[5,"xcb_fontprop_end","","",null,null],[5,"xcb_charinfo_next","","",null,null],[5,"xcb_charinfo_end","","",null,null],[5,"xcb_query_font_properties","","",null,null],[5,"xcb_query_font_properties_length","","",null,null],[5,"xcb_query_font_properties_iterator","","",null,null],[5,"xcb_query_font_char_infos","","",null,null],[5,"xcb_query_font_char_infos_length","","",null,null],[5,"xcb_query_font_char_infos_iterator","","",null,null],[5,"xcb_query_font_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_query_font","","query font metrics",null,null],[5,"xcb_query_font_unchecked","","query font metrics",null,null],[5,"xcb_query_text_extents_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_query_text_extents","","get text extents",null,null],[5,"xcb_query_text_extents_unchecked","","get text extents",null,null],[5,"xcb_str_name","","",null,null],[5,"xcb_str_name_length","","",null,null],[5,"xcb_str_name_end","","",null,null],[5,"xcb_str_next","","",null,null],[5,"xcb_str_end","","",null,null],[5,"xcb_list_fonts_names_length","","",null,null],[5,"xcb_list_fonts_names_iterator","","",null,null],[5,"xcb_list_fonts_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_list_fonts","","get matching font names",null,null],[5,"xcb_list_fonts_unchecked","","get matching font names",null,null],[5,"xcb_list_fonts_with_info_properties","","",null,null],[5,"xcb_list_fonts_with_info_properties_length","","",null,null],[5,"xcb_list_fonts_with_info_properties_iterator","","",null,null],[5,"xcb_list_fonts_with_info_name","","",null,null],[5,"xcb_list_fonts_with_info_name_length","","",null,null],[5,"xcb_list_fonts_with_info_name_end","","",null,null],[5,"xcb_list_fonts_with_info_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_list_fonts_with_info","","get matching font names and information",null,null],[5,"xcb_list_fonts_with_info_unchecked","","get matching font names and information",null,null],[5,"xcb_set_font_path","","",null,null],[5,"xcb_set_font_path_checked","","",null,null],[5,"xcb_get_font_path_path_length","","",null,null],[5,"xcb_get_font_path_path_iterator","","",null,null],[5,"xcb_get_font_path_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_get_font_path","","",null,null],[5,"xcb_get_font_path_unchecked","","",null,null],[5,"xcb_create_pixmap","","Creates a pixmap",null,null],[5,"xcb_create_pixmap_checked","","Creates a pixmap",null,null],[5,"xcb_free_pixmap","","Destroys a pixmap",null,null],[5,"xcb_free_pixmap_checked","","Destroys a pixmap",null,null],[5,"xcb_create_gc","","Creates a graphics context",null,null],[5,"xcb_create_gc_checked","","Creates a graphics context",null,null],[5,"xcb_change_gc","","change graphics context components",null,null],[5,"xcb_change_gc_checked","","change graphics context components",null,null],[5,"xcb_copy_gc","","",null,null],[5,"xcb_copy_gc_checked","","",null,null],[5,"xcb_set_dashes","","",null,null],[5,"xcb_set_dashes_checked","","",null,null],[5,"xcb_set_clip_rectangles","","",null,null],[5,"xcb_set_clip_rectangles_checked","","",null,null],[5,"xcb_free_gc","","Destroys a graphics context",null,null],[5,"xcb_free_gc_checked","","Destroys a graphics context",null,null],[5,"xcb_clear_area","","",null,null],[5,"xcb_clear_area_checked","","",null,null],[5,"xcb_copy_area","","copy areas",null,null],[5,"xcb_copy_area_checked","","copy areas",null,null],[5,"xcb_copy_plane","","",null,null],[5,"xcb_copy_plane_checked","","",null,null],[5,"xcb_poly_point","","",null,null],[5,"xcb_poly_point_checked","","",null,null],[5,"xcb_poly_line","","draw lines",null,null],[5,"xcb_poly_line_checked","","draw lines",null,null],[5,"xcb_segment_next","","",null,null],[5,"xcb_segment_end","","",null,null],[5,"xcb_poly_segment","","draw lines",null,null],[5,"xcb_poly_segment_checked","","draw lines",null,null],[5,"xcb_poly_rectangle","","",null,null],[5,"xcb_poly_rectangle_checked","","",null,null],[5,"xcb_poly_arc","","",null,null],[5,"xcb_poly_arc_checked","","",null,null],[5,"xcb_fill_poly","","",null,null],[5,"xcb_fill_poly_checked","","",null,null],[5,"xcb_poly_fill_rectangle","","Fills rectangles",null,null],[5,"xcb_poly_fill_rectangle_checked","","Fills rectangles",null,null],[5,"xcb_poly_fill_arc","","",null,null],[5,"xcb_poly_fill_arc_checked","","",null,null],[5,"xcb_put_image","","",null,null],[5,"xcb_put_image_checked","","",null,null],[5,"xcb_get_image_data","","",null,null],[5,"xcb_get_image_data_length","","",null,null],[5,"xcb_get_image_data_end","","",null,null],[5,"xcb_get_image_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_get_image","","",null,null],[5,"xcb_get_image_unchecked","","",null,null],[5,"xcb_poly_text_8","","",null,null],[5,"xcb_poly_text_8_checked","","",null,null],[5,"xcb_poly_text_16","","",null,null],[5,"xcb_poly_text_16_checked","","",null,null],[5,"xcb_image_text_8","","Draws text",null,null],[5,"xcb_image_text_8_checked","","Draws text",null,null],[5,"xcb_image_text_16","","Draws text",null,null],[5,"xcb_image_text_16_checked","","Draws text",null,null],[5,"xcb_create_colormap","","",null,null],[5,"xcb_create_colormap_checked","","",null,null],[5,"xcb_free_colormap","","",null,null],[5,"xcb_free_colormap_checked","","",null,null],[5,"xcb_copy_colormap_and_free","","",null,null],[5,"xcb_copy_colormap_and_free_checked","","",null,null],[5,"xcb_install_colormap","","",null,null],[5,"xcb_install_colormap_checked","","",null,null],[5,"xcb_uninstall_colormap","","",null,null],[5,"xcb_uninstall_colormap_checked","","",null,null],[5,"xcb_list_installed_colormaps_cmaps","","",null,null],[5,"xcb_list_installed_colormaps_cmaps_length","","",null,null],[5,"xcb_list_installed_colormaps_cmaps_end","","",null,null],[5,"xcb_list_installed_colormaps_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_list_installed_colormaps","","",null,null],[5,"xcb_list_installed_colormaps_unchecked","","",null,null],[5,"xcb_alloc_color_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_alloc_color","","Allocate a color",null,null],[5,"xcb_alloc_color_unchecked","","Allocate a color",null,null],[5,"xcb_alloc_named_color_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_alloc_named_color","","",null,null],[5,"xcb_alloc_named_color_unchecked","","",null,null],[5,"xcb_alloc_color_cells_pixels","","",null,null],[5,"xcb_alloc_color_cells_pixels_length","","",null,null],[5,"xcb_alloc_color_cells_pixels_end","","",null,null],[5,"xcb_alloc_color_cells_masks","","",null,null],[5,"xcb_alloc_color_cells_masks_length","","",null,null],[5,"xcb_alloc_color_cells_masks_end","","",null,null],[5,"xcb_alloc_color_cells_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_alloc_color_cells","","",null,null],[5,"xcb_alloc_color_cells_unchecked","","",null,null],[5,"xcb_alloc_color_planes_pixels","","",null,null],[5,"xcb_alloc_color_planes_pixels_length","","",null,null],[5,"xcb_alloc_color_planes_pixels_end","","",null,null],[5,"xcb_alloc_color_planes_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_alloc_color_planes","","",null,null],[5,"xcb_alloc_color_planes_unchecked","","",null,null],[5,"xcb_free_colors","","",null,null],[5,"xcb_free_colors_checked","","",null,null],[5,"xcb_coloritem_next","","",null,null],[5,"xcb_coloritem_end","","",null,null],[5,"xcb_store_colors","","",null,null],[5,"xcb_store_colors_checked","","",null,null],[5,"xcb_store_named_color","","",null,null],[5,"xcb_store_named_color_checked","","",null,null],[5,"xcb_rgb_next","","",null,null],[5,"xcb_rgb_end","","",null,null],[5,"xcb_query_colors_colors","","",null,null],[5,"xcb_query_colors_colors_length","","",null,null],[5,"xcb_query_colors_colors_iterator","","",null,null],[5,"xcb_query_colors_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_query_colors","","",null,null],[5,"xcb_query_colors_unchecked","","",null,null],[5,"xcb_lookup_color_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_lookup_color","","",null,null],[5,"xcb_lookup_color_unchecked","","",null,null],[5,"xcb_create_cursor","","",null,null],[5,"xcb_create_cursor_checked","","",null,null],[5,"xcb_create_glyph_cursor","","create cursor",null,null],[5,"xcb_create_glyph_cursor_checked","","create cursor",null,null],[5,"xcb_free_cursor","","Deletes a cursor",null,null],[5,"xcb_free_cursor_checked","","Deletes a cursor",null,null],[5,"xcb_recolor_cursor","","",null,null],[5,"xcb_recolor_cursor_checked","","",null,null],[5,"xcb_query_best_size_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_query_best_size","","",null,null],[5,"xcb_query_best_size_unchecked","","",null,null],[5,"xcb_query_extension_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_query_extension","","check if extension is present",null,null],[5,"xcb_query_extension_unchecked","","check if extension is present",null,null],[5,"xcb_list_extensions_names_length","","",null,null],[5,"xcb_list_extensions_names_iterator","","",null,null],[5,"xcb_list_extensions_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_list_extensions","","",null,null],[5,"xcb_list_extensions_unchecked","","",null,null],[5,"xcb_change_keyboard_mapping","","",null,null],[5,"xcb_change_keyboard_mapping_checked","","",null,null],[5,"xcb_get_keyboard_mapping_keysyms","","",null,null],[5,"xcb_get_keyboard_mapping_keysyms_length","","",null,null],[5,"xcb_get_keyboard_mapping_keysyms_end","","",null,null],[5,"xcb_get_keyboard_mapping_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_get_keyboard_mapping","","",null,null],[5,"xcb_get_keyboard_mapping_unchecked","","",null,null],[5,"xcb_change_keyboard_control","","",null,null],[5,"xcb_change_keyboard_control_checked","","",null,null],[5,"xcb_get_keyboard_control_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_get_keyboard_control","","",null,null],[5,"xcb_get_keyboard_control_unchecked","","",null,null],[5,"xcb_bell","","",null,null],[5,"xcb_bell_checked","","",null,null],[5,"xcb_change_pointer_control","","",null,null],[5,"xcb_change_pointer_control_checked","","",null,null],[5,"xcb_get_pointer_control_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_get_pointer_control","","",null,null],[5,"xcb_get_pointer_control_unchecked","","",null,null],[5,"xcb_set_screen_saver","","",null,null],[5,"xcb_set_screen_saver_checked","","",null,null],[5,"xcb_get_screen_saver_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_get_screen_saver","","",null,null],[5,"xcb_get_screen_saver_unchecked","","",null,null],[5,"xcb_change_hosts","","",null,null],[5,"xcb_change_hosts_checked","","",null,null],[5,"xcb_host_address","","",null,null],[5,"xcb_host_address_length","","",null,null],[5,"xcb_host_address_end","","",null,null],[5,"xcb_host_next","","",null,null],[5,"xcb_host_end","","",null,null],[5,"xcb_list_hosts_hosts_length","","",null,null],[5,"xcb_list_hosts_hosts_iterator","","",null,null],[5,"xcb_list_hosts_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_list_hosts","","",null,null],[5,"xcb_list_hosts_unchecked","","",null,null],[5,"xcb_set_access_control","","",null,null],[5,"xcb_set_access_control_checked","","",null,null],[5,"xcb_set_close_down_mode","","",null,null],[5,"xcb_set_close_down_mode_checked","","",null,null],[5,"xcb_kill_client","","kills a client",null,null],[5,"xcb_kill_client_checked","","kills a client",null,null],[5,"xcb_rotate_properties","","",null,null],[5,"xcb_rotate_properties_checked","","",null,null],[5,"xcb_force_screen_saver","","",null,null],[5,"xcb_force_screen_saver_checked","","",null,null],[5,"xcb_set_pointer_mapping_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_set_pointer_mapping","","",null,null],[5,"xcb_set_pointer_mapping_unchecked","","",null,null],[5,"xcb_get_pointer_mapping_map","","",null,null],[5,"xcb_get_pointer_mapping_map_length","","",null,null],[5,"xcb_get_pointer_mapping_map_end","","",null,null],[5,"xcb_get_pointer_mapping_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_get_pointer_mapping","","",null,null],[5,"xcb_get_pointer_mapping_unchecked","","",null,null],[5,"xcb_set_modifier_mapping_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_set_modifier_mapping","","",null,null],[5,"xcb_set_modifier_mapping_unchecked","","",null,null],[5,"xcb_get_modifier_mapping_keycodes","","",null,null],[5,"xcb_get_modifier_mapping_keycodes_length","","",null,null],[5,"xcb_get_modifier_mapping_keycodes_end","","",null,null],[5,"xcb_get_modifier_mapping_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_get_modifier_mapping","","",null,null],[5,"xcb_get_modifier_mapping_unchecked","","",null,null],[5,"xcb_no_operation","","",null,null],[5,"xcb_no_operation_checked","","",null,null],[6,"xcb_window_t","","",null,null],[6,"xcb_pixmap_t","","",null,null],[6,"xcb_cursor_t","","",null,null],[6,"xcb_font_t","","",null,null],[6,"xcb_gcontext_t","","",null,null],[6,"xcb_colormap_t","","",null,null],[6,"xcb_atom_t","","",null,null],[6,"xcb_drawable_t","","",null,null],[6,"xcb_fontable_t","","",null,null],[6,"xcb_visualid_t","","",null,null],[6,"xcb_timestamp_t","","",null,null],[6,"xcb_keysym_t","","",null,null],[6,"xcb_keycode_t","","",null,null],[6,"xcb_button_t","","",null,null],[6,"xcb_visual_class_t","","",null,null],[6,"xcb_event_mask_t","","",null,null],[6,"xcb_backing_store_t","","",null,null],[6,"xcb_image_order_t","","",null,null],[6,"xcb_mod_mask_t","","",null,null],[6,"xcb_key_but_mask_t","","",null,null],[6,"xcb_window_enum_t","","",null,null],[6,"xcb_key_release_event_t","","",null,null],[6,"xcb_button_mask_t","","",null,null],[6,"xcb_button_release_event_t","","",null,null],[6,"xcb_motion_t","","",null,null],[6,"xcb_notify_detail_t","","",null,null],[6,"xcb_notify_mode_t","","",null,null],[6,"xcb_leave_notify_event_t","","",null,null],[6,"xcb_focus_out_event_t","","",null,null],[6,"xcb_visibility_t","","",null,null],[6,"xcb_place_t","","",null,null],[6,"xcb_circulate_request_event_t","","",null,null],[6,"xcb_property_t","","",null,null],[6,"xcb_time_t","","",null,null],[6,"xcb_atom_enum_t","","",null,null],[6,"xcb_colormap_state_t","","",null,null],[6,"xcb_colormap_enum_t","","",null,null],[6,"xcb_mapping_t","","",null,null],[6,"xcb_window_error_t","","",null,null],[6,"xcb_pixmap_error_t","","",null,null],[6,"xcb_atom_error_t","","",null,null],[6,"xcb_cursor_error_t","","",null,null],[6,"xcb_font_error_t","","",null,null],[6,"xcb_match_error_t","","",null,null],[6,"xcb_drawable_error_t","","",null,null],[6,"xcb_access_error_t","","",null,null],[6,"xcb_alloc_error_t","","",null,null],[6,"xcb_colormap_error_t","","",null,null],[6,"xcb_g_context_error_t","","",null,null],[6,"xcb_id_choice_error_t","","",null,null],[6,"xcb_name_error_t","","",null,null],[6,"xcb_length_error_t","","",null,null],[6,"xcb_implementation_error_t","","",null,null],[6,"xcb_window_class_t","","",null,null],[6,"xcb_cw_t","","",null,null],[6,"xcb_back_pixmap_t","","",null,null],[6,"xcb_gravity_t","","",null,null],[6,"xcb_map_state_t","","",null,null],[6,"xcb_set_mode_t","","",null,null],[6,"xcb_config_window_t","","",null,null],[6,"xcb_stack_mode_t","","",null,null],[6,"xcb_circulate_t","","",null,null],[6,"xcb_prop_mode_t","","",null,null],[6,"xcb_get_property_type_t","","",null,null],[6,"xcb_send_event_dest_t","","",null,null],[6,"xcb_grab_mode_t","","",null,null],[6,"xcb_grab_status_t","","",null,null],[6,"xcb_cursor_enum_t","","",null,null],[6,"xcb_button_index_t","","",null,null],[6,"xcb_grab_t","","",null,null],[6,"xcb_allow_t","","",null,null],[6,"xcb_input_focus_t","","",null,null],[6,"xcb_font_draw_t","","",null,null],[6,"xcb_gc_t","","",null,null],[6,"xcb_gx_t","","",null,null],[6,"xcb_line_style_t","","",null,null],[6,"xcb_cap_style_t","","",null,null],[6,"xcb_join_style_t","","",null,null],[6,"xcb_fill_style_t","","",null,null],[6,"xcb_fill_rule_t","","",null,null],[6,"xcb_subwindow_mode_t","","",null,null],[6,"xcb_arc_mode_t","","",null,null],[6,"xcb_clip_ordering_t","","",null,null],[6,"xcb_coord_mode_t","","",null,null],[6,"xcb_poly_shape_t","","",null,null],[6,"xcb_image_format_t","","",null,null],[6,"xcb_colormap_alloc_t","","",null,null],[6,"xcb_color_flag_t","","",null,null],[6,"xcb_pixmap_enum_t","","",null,null],[6,"xcb_font_enum_t","","",null,null],[6,"xcb_query_shape_of_t","","",null,null],[6,"xcb_kb_t","","",null,null],[6,"xcb_led_mode_t","","",null,null],[6,"xcb_auto_repeat_mode_t","","",null,null],[6,"xcb_blanking_t","","",null,null],[6,"xcb_exposures_t","","",null,null],[6,"xcb_host_mode_t","","",null,null],[6,"xcb_family_t","","",null,null],[6,"xcb_access_control_t","","",null,null],[6,"xcb_close_down_t","","",null,null],[6,"xcb_kill_t","","",null,null],[6,"xcb_screen_saver_t","","",null,null],[6,"xcb_mapping_status_t","","",null,null],[6,"xcb_map_index_t","","",null,null],[17,"XCB_VISUAL_CLASS_STATIC_GRAY","","",null,null],[17,"XCB_VISUAL_CLASS_GRAY_SCALE","","",null,null],[17,"XCB_VISUAL_CLASS_STATIC_COLOR","","",null,null],[17,"XCB_VISUAL_CLASS_PSEUDO_COLOR","","",null,null],[17,"XCB_VISUAL_CLASS_TRUE_COLOR","","",null,null],[17,"XCB_VISUAL_CLASS_DIRECT_COLOR","","",null,null],[17,"XCB_EVENT_MASK_NO_EVENT","","",null,null],[17,"XCB_EVENT_MASK_KEY_PRESS","","",null,null],[17,"XCB_EVENT_MASK_KEY_RELEASE","","",null,null],[17,"XCB_EVENT_MASK_BUTTON_PRESS","","",null,null],[17,"XCB_EVENT_MASK_BUTTON_RELEASE","","",null,null],[17,"XCB_EVENT_MASK_ENTER_WINDOW","","",null,null],[17,"XCB_EVENT_MASK_LEAVE_WINDOW","","",null,null],[17,"XCB_EVENT_MASK_POINTER_MOTION","","",null,null],[17,"XCB_EVENT_MASK_POINTER_MOTION_HINT","","",null,null],[17,"XCB_EVENT_MASK_BUTTON_1_MOTION","","",null,null],[17,"XCB_EVENT_MASK_BUTTON_2_MOTION","","",null,null],[17,"XCB_EVENT_MASK_BUTTON_3_MOTION","","",null,null],[17,"XCB_EVENT_MASK_BUTTON_4_MOTION","","",null,null],[17,"XCB_EVENT_MASK_BUTTON_5_MOTION","","",null,null],[17,"XCB_EVENT_MASK_BUTTON_MOTION","","",null,null],[17,"XCB_EVENT_MASK_KEYMAP_STATE","","",null,null],[17,"XCB_EVENT_MASK_EXPOSURE","","",null,null],[17,"XCB_EVENT_MASK_VISIBILITY_CHANGE","","",null,null],[17,"XCB_EVENT_MASK_STRUCTURE_NOTIFY","","",null,null],[17,"XCB_EVENT_MASK_RESIZE_REDIRECT","","",null,null],[17,"XCB_EVENT_MASK_SUBSTRUCTURE_NOTIFY","","",null,null],[17,"XCB_EVENT_MASK_SUBSTRUCTURE_REDIRECT","","",null,null],[17,"XCB_EVENT_MASK_FOCUS_CHANGE","","",null,null],[17,"XCB_EVENT_MASK_PROPERTY_CHANGE","","",null,null],[17,"XCB_EVENT_MASK_COLOR_MAP_CHANGE","","",null,null],[17,"XCB_EVENT_MASK_OWNER_GRAB_BUTTON","","",null,null],[17,"XCB_BACKING_STORE_NOT_USEFUL","","",null,null],[17,"XCB_BACKING_STORE_WHEN_MAPPED","","",null,null],[17,"XCB_BACKING_STORE_ALWAYS","","",null,null],[17,"XCB_IMAGE_ORDER_LSB_FIRST","","",null,null],[17,"XCB_IMAGE_ORDER_MSB_FIRST","","",null,null],[17,"XCB_MOD_MASK_SHIFT","","",null,null],[17,"XCB_MOD_MASK_LOCK","","",null,null],[17,"XCB_MOD_MASK_CONTROL","","",null,null],[17,"XCB_MOD_MASK_1","","",null,null],[17,"XCB_MOD_MASK_2","","",null,null],[17,"XCB_MOD_MASK_3","","",null,null],[17,"XCB_MOD_MASK_4","","",null,null],[17,"XCB_MOD_MASK_5","","",null,null],[17,"XCB_MOD_MASK_ANY","","",null,null],[17,"XCB_KEY_BUT_MASK_SHIFT","","",null,null],[17,"XCB_KEY_BUT_MASK_LOCK","","",null,null],[17,"XCB_KEY_BUT_MASK_CONTROL","","",null,null],[17,"XCB_KEY_BUT_MASK_MOD_1","","",null,null],[17,"XCB_KEY_BUT_MASK_MOD_2","","",null,null],[17,"XCB_KEY_BUT_MASK_MOD_3","","",null,null],[17,"XCB_KEY_BUT_MASK_MOD_4","","",null,null],[17,"XCB_KEY_BUT_MASK_MOD_5","","",null,null],[17,"XCB_KEY_BUT_MASK_BUTTON_1","","",null,null],[17,"XCB_KEY_BUT_MASK_BUTTON_2","","",null,null],[17,"XCB_KEY_BUT_MASK_BUTTON_3","","",null,null],[17,"XCB_KEY_BUT_MASK_BUTTON_4","","",null,null],[17,"XCB_KEY_BUT_MASK_BUTTON_5","","",null,null],[17,"XCB_WINDOW_NONE","","",null,null],[17,"XCB_KEY_PRESS","","",null,null],[17,"XCB_KEY_RELEASE","","",null,null],[17,"XCB_BUTTON_MASK_1","","",null,null],[17,"XCB_BUTTON_MASK_2","","",null,null],[17,"XCB_BUTTON_MASK_3","","",null,null],[17,"XCB_BUTTON_MASK_4","","",null,null],[17,"XCB_BUTTON_MASK_5","","",null,null],[17,"XCB_BUTTON_MASK_ANY","","",null,null],[17,"XCB_BUTTON_PRESS","","",null,null],[17,"XCB_BUTTON_RELEASE","","",null,null],[17,"XCB_MOTION_NORMAL","","",null,null],[17,"XCB_MOTION_HINT","","",null,null],[17,"XCB_MOTION_NOTIFY","","",null,null],[17,"XCB_NOTIFY_DETAIL_ANCESTOR","","",null,null],[17,"XCB_NOTIFY_DETAIL_VIRTUAL","","",null,null],[17,"XCB_NOTIFY_DETAIL_INFERIOR","","",null,null],[17,"XCB_NOTIFY_DETAIL_NONLINEAR","","",null,null],[17,"XCB_NOTIFY_DETAIL_NONLINEAR_VIRTUAL","","",null,null],[17,"XCB_NOTIFY_DETAIL_POINTER","","",null,null],[17,"XCB_NOTIFY_DETAIL_POINTER_ROOT","","",null,null],[17,"XCB_NOTIFY_DETAIL_NONE","","",null,null],[17,"XCB_NOTIFY_MODE_NORMAL","","",null,null],[17,"XCB_NOTIFY_MODE_GRAB","","",null,null],[17,"XCB_NOTIFY_MODE_UNGRAB","","",null,null],[17,"XCB_NOTIFY_MODE_WHILE_GRABBED","","",null,null],[17,"XCB_ENTER_NOTIFY","","",null,null],[17,"XCB_LEAVE_NOTIFY","","",null,null],[17,"XCB_FOCUS_IN","","",null,null],[17,"XCB_FOCUS_OUT","","",null,null],[17,"XCB_KEYMAP_NOTIFY","","",null,null],[17,"XCB_EXPOSE","","",null,null],[17,"XCB_GRAPHICS_EXPOSURE","","",null,null],[17,"XCB_NO_EXPOSURE","","",null,null],[17,"XCB_VISIBILITY_UNOBSCURED","","",null,null],[17,"XCB_VISIBILITY_PARTIALLY_OBSCURED","","",null,null],[17,"XCB_VISIBILITY_FULLY_OBSCURED","","",null,null],[17,"XCB_VISIBILITY_NOTIFY","","",null,null],[17,"XCB_CREATE_NOTIFY","","",null,null],[17,"XCB_DESTROY_NOTIFY","","",null,null],[17,"XCB_UNMAP_NOTIFY","","",null,null],[17,"XCB_MAP_NOTIFY","","",null,null],[17,"XCB_MAP_REQUEST","","",null,null],[17,"XCB_REPARENT_NOTIFY","","",null,null],[17,"XCB_CONFIGURE_NOTIFY","","",null,null],[17,"XCB_CONFIGURE_REQUEST","","",null,null],[17,"XCB_GRAVITY_NOTIFY","","",null,null],[17,"XCB_RESIZE_REQUEST","","",null,null],[17,"XCB_PLACE_ON_TOP","","The window is now on top of all siblings.",null,null],[17,"XCB_PLACE_ON_BOTTOM","","The window is now below all siblings.",null,null],[17,"XCB_CIRCULATE_NOTIFY","","",null,null],[17,"XCB_CIRCULATE_REQUEST","","",null,null],[17,"XCB_PROPERTY_NEW_VALUE","","",null,null],[17,"XCB_PROPERTY_DELETE","","",null,null],[17,"XCB_PROPERTY_NOTIFY","","",null,null],[17,"XCB_SELECTION_CLEAR","","",null,null],[17,"XCB_TIME_CURRENT_TIME","","",null,null],[17,"XCB_ATOM_NONE","","",null,null],[17,"XCB_ATOM_ANY","","",null,null],[17,"XCB_ATOM_PRIMARY","","",null,null],[17,"XCB_ATOM_SECONDARY","","",null,null],[17,"XCB_ATOM_ARC","","",null,null],[17,"XCB_ATOM_ATOM","","",null,null],[17,"XCB_ATOM_BITMAP","","",null,null],[17,"XCB_ATOM_CARDINAL","","",null,null],[17,"XCB_ATOM_COLORMAP","","",null,null],[17,"XCB_ATOM_CURSOR","","",null,null],[17,"XCB_ATOM_CUT_BUFFER0","","",null,null],[17,"XCB_ATOM_CUT_BUFFER1","","",null,null],[17,"XCB_ATOM_CUT_BUFFER2","","",null,null],[17,"XCB_ATOM_CUT_BUFFER3","","",null,null],[17,"XCB_ATOM_CUT_BUFFER4","","",null,null],[17,"XCB_ATOM_CUT_BUFFER5","","",null,null],[17,"XCB_ATOM_CUT_BUFFER6","","",null,null],[17,"XCB_ATOM_CUT_BUFFER7","","",null,null],[17,"XCB_ATOM_DRAWABLE","","",null,null],[17,"XCB_ATOM_FONT","","",null,null],[17,"XCB_ATOM_INTEGER","","",null,null],[17,"XCB_ATOM_PIXMAP","","",null,null],[17,"XCB_ATOM_POINT","","",null,null],[17,"XCB_ATOM_RECTANGLE","","",null,null],[17,"XCB_ATOM_RESOURCE_MANAGER","","",null,null],[17,"XCB_ATOM_RGB_COLOR_MAP","","",null,null],[17,"XCB_ATOM_RGB_BEST_MAP","","",null,null],[17,"XCB_ATOM_RGB_BLUE_MAP","","",null,null],[17,"XCB_ATOM_RGB_DEFAULT_MAP","","",null,null],[17,"XCB_ATOM_RGB_GRAY_MAP","","",null,null],[17,"XCB_ATOM_RGB_GREEN_MAP","","",null,null],[17,"XCB_ATOM_RGB_RED_MAP","","",null,null],[17,"XCB_ATOM_STRING","","",null,null],[17,"XCB_ATOM_VISUALID","","",null,null],[17,"XCB_ATOM_WINDOW","","",null,null],[17,"XCB_ATOM_WM_COMMAND","","",null,null],[17,"XCB_ATOM_WM_HINTS","","",null,null],[17,"XCB_ATOM_WM_CLIENT_MACHINE","","",null,null],[17,"XCB_ATOM_WM_ICON_NAME","","",null,null],[17,"XCB_ATOM_WM_ICON_SIZE","","",null,null],[17,"XCB_ATOM_WM_NAME","","",null,null],[17,"XCB_ATOM_WM_NORMAL_HINTS","","",null,null],[17,"XCB_ATOM_WM_SIZE_HINTS","","",null,null],[17,"XCB_ATOM_WM_ZOOM_HINTS","","",null,null],[17,"XCB_ATOM_MIN_SPACE","","",null,null],[17,"XCB_ATOM_NORM_SPACE","","",null,null],[17,"XCB_ATOM_MAX_SPACE","","",null,null],[17,"XCB_ATOM_END_SPACE","","",null,null],[17,"XCB_ATOM_SUPERSCRIPT_X","","",null,null],[17,"XCB_ATOM_SUPERSCRIPT_Y","","",null,null],[17,"XCB_ATOM_SUBSCRIPT_X","","",null,null],[17,"XCB_ATOM_SUBSCRIPT_Y","","",null,null],[17,"XCB_ATOM_UNDERLINE_POSITION","","",null,null],[17,"XCB_ATOM_UNDERLINE_THICKNESS","","",null,null],[17,"XCB_ATOM_STRIKEOUT_ASCENT","","",null,null],[17,"XCB_ATOM_STRIKEOUT_DESCENT","","",null,null],[17,"XCB_ATOM_ITALIC_ANGLE","","",null,null],[17,"XCB_ATOM_X_HEIGHT","","",null,null],[17,"XCB_ATOM_QUAD_WIDTH","","",null,null],[17,"XCB_ATOM_WEIGHT","","",null,null],[17,"XCB_ATOM_POINT_SIZE","","",null,null],[17,"XCB_ATOM_RESOLUTION","","",null,null],[17,"XCB_ATOM_COPYRIGHT","","",null,null],[17,"XCB_ATOM_NOTICE","","",null,null],[17,"XCB_ATOM_FONT_NAME","","",null,null],[17,"XCB_ATOM_FAMILY_NAME","","",null,null],[17,"XCB_ATOM_FULL_NAME","","",null,null],[17,"XCB_ATOM_CAP_HEIGHT","","",null,null],[17,"XCB_ATOM_WM_CLASS","","",null,null],[17,"XCB_ATOM_WM_TRANSIENT_FOR","","",null,null],[17,"XCB_SELECTION_REQUEST","","",null,null],[17,"XCB_SELECTION_NOTIFY","","",null,null],[17,"XCB_COLORMAP_STATE_UNINSTALLED","","The colormap was uninstalled.",null,null],[17,"XCB_COLORMAP_STATE_INSTALLED","","The colormap was installed.",null,null],[17,"XCB_COLORMAP_NONE","","",null,null],[17,"XCB_COLORMAP_NOTIFY","","",null,null],[17,"XCB_CLIENT_MESSAGE","","",null,null],[17,"XCB_MAPPING_MODIFIER","","",null,null],[17,"XCB_MAPPING_KEYBOARD","","",null,null],[17,"XCB_MAPPING_POINTER","","",null,null],[17,"XCB_MAPPING_NOTIFY","","",null,null],[17,"XCB_GE_GENERIC","","",null,null],[17,"XCB_REQUEST","","",null,null],[17,"XCB_VALUE","","",null,null],[17,"XCB_WINDOW","","",null,null],[17,"XCB_PIXMAP","","",null,null],[17,"XCB_ATOM","","",null,null],[17,"XCB_CURSOR","","",null,null],[17,"XCB_FONT","","",null,null],[17,"XCB_MATCH","","",null,null],[17,"XCB_DRAWABLE","","",null,null],[17,"XCB_ACCESS","","",null,null],[17,"XCB_ALLOC","","",null,null],[17,"XCB_COLORMAP","","",null,null],[17,"XCB_G_CONTEXT","","",null,null],[17,"XCB_ID_CHOICE","","",null,null],[17,"XCB_NAME","","",null,null],[17,"XCB_LENGTH","","",null,null],[17,"XCB_IMPLEMENTATION","","",null,null],[17,"XCB_WINDOW_CLASS_COPY_FROM_PARENT","","",null,null],[17,"XCB_WINDOW_CLASS_INPUT_OUTPUT","","",null,null],[17,"XCB_WINDOW_CLASS_INPUT_ONLY","","",null,null],[17,"XCB_CW_BACK_PIXMAP","","Overrides the default background-pixmap. The background pixmap and window must have the same root and same depth. Any size pixmap can be used, although some sizes may be faster than others.",null,null],[17,"XCB_CW_BACK_PIXEL","","Overrides `BackPixmap`. A pixmap of undefined size filled with the specified background pixel is used for the background. Range-checking is not performed, the background pixel is truncated to the appropriate number of bits.",null,null],[17,"XCB_CW_BORDER_PIXMAP","","Overrides the default border-pixmap. The border pixmap and window must have the same root and the same depth. Any size pixmap can be used, although some sizes may be faster than others.",null,null],[17,"XCB_CW_BORDER_PIXEL","","Overrides `BorderPixmap`. A pixmap of undefined size filled with the specified border pixel is used for the border. Range checking is not performed on the border-pixel value, it is truncated to the appropriate number of bits.",null,null],[17,"XCB_CW_BIT_GRAVITY","","Defines which region of the window should be retained if the window is resized.",null,null],[17,"XCB_CW_WIN_GRAVITY","","Defines how the window should be repositioned if the parent is resized (see `ConfigureWindow`).",null,null],[17,"XCB_CW_BACKING_STORE","","A backing-store of `WhenMapped` advises the server that maintaining contents of obscured regions when the window is mapped would be beneficial. A backing-store of `Always` advises the server that maintaining contents even when the window is unmapped would be beneficial. In this case, the server may generate an exposure event when the window is created. A value of `NotUseful` advises the server that maintaining contents is unnecessary, although a server may still choose to maintain contents while the window is mapped. Note that if the server maintains contents, then the server should maintain complete contents not just the region within the parent boundaries, even if the window is larger than its parent. While the server maintains contents, exposure events will not normally be generated, but the server may stop maintaining contents at any time.",null,null],[17,"XCB_CW_BACKING_PLANES","","The backing-planes indicates (with bits set to 1) which bit planes of the window hold dynamic data that must be preserved in backing-stores and during save-unders.",null,null],[17,"XCB_CW_BACKING_PIXEL","","The backing-pixel specifies what value to use in planes not covered by backing-planes. The server is free to save only the specified bit planes in the backing-store or save-under and regenerate the remaining planes with the specified pixel value. Any bits beyond the specified depth of the window in these values are simply ignored.",null,null],[17,"XCB_CW_OVERRIDE_REDIRECT","","The override-redirect specifies whether map and configure requests on this window should override a SubstructureRedirect on the parent, typically to inform a window manager not to tamper with the window.",null,null],[17,"XCB_CW_SAVE_UNDER","","If 1, the server is advised that when this window is mapped, saving the contents of windows it obscures would be beneficial.",null,null],[17,"XCB_CW_EVENT_MASK","","The event-mask defines which events the client is interested in for this window (or for some event types, inferiors of the window).",null,null],[17,"XCB_CW_DONT_PROPAGATE","","The do-not-propagate-mask defines which events should not be propagated to ancestor windows when no client has the event type selected in this window.",null,null],[17,"XCB_CW_COLORMAP","","The colormap specifies the colormap that best reflects the true colors of the window. Servers capable of supporting multiple hardware colormaps may use this information, and window man- agers may use it for InstallColormap requests. The colormap must have the same visual type and root as the window (or a Match error results). If CopyFromParent is specified, the parent's colormap is copied (subsequent changes to the parent's colormap attribute do not affect the child). However, the window must have the same visual type as the parent (or a Match error results), and the parent must not have a colormap of None (or a Match error results). For an explanation of None, see FreeColormap request. The colormap is copied by sharing the colormap object between the child and the parent, not by making a complete copy of the colormap contents.",null,null],[17,"XCB_CW_CURSOR","","If a cursor is specified, it will be used whenever the pointer is in the window. If None is speci- fied, the parent's cursor will be used when the pointer is in the window, and any change in the parent's cursor will cause an immediate change in the displayed cursor.",null,null],[17,"XCB_BACK_PIXMAP_NONE","","",null,null],[17,"XCB_BACK_PIXMAP_PARENT_RELATIVE","","",null,null],[17,"XCB_GRAVITY_BIT_FORGET","","",null,null],[17,"XCB_GRAVITY_WIN_UNMAP","","",null,null],[17,"XCB_GRAVITY_NORTH_WEST","","",null,null],[17,"XCB_GRAVITY_NORTH","","",null,null],[17,"XCB_GRAVITY_NORTH_EAST","","",null,null],[17,"XCB_GRAVITY_WEST","","",null,null],[17,"XCB_GRAVITY_CENTER","","",null,null],[17,"XCB_GRAVITY_EAST","","",null,null],[17,"XCB_GRAVITY_SOUTH_WEST","","",null,null],[17,"XCB_GRAVITY_SOUTH","","",null,null],[17,"XCB_GRAVITY_SOUTH_EAST","","",null,null],[17,"XCB_GRAVITY_STATIC","","",null,null],[17,"XCB_CREATE_WINDOW","","",null,null],[17,"XCB_CHANGE_WINDOW_ATTRIBUTES","","",null,null],[17,"XCB_MAP_STATE_UNMAPPED","","",null,null],[17,"XCB_MAP_STATE_UNVIEWABLE","","",null,null],[17,"XCB_MAP_STATE_VIEWABLE","","",null,null],[17,"XCB_GET_WINDOW_ATTRIBUTES","","",null,null],[17,"XCB_DESTROY_WINDOW","","",null,null],[17,"XCB_DESTROY_SUBWINDOWS","","",null,null],[17,"XCB_SET_MODE_INSERT","","",null,null],[17,"XCB_SET_MODE_DELETE","","",null,null],[17,"XCB_CHANGE_SAVE_SET","","",null,null],[17,"XCB_REPARENT_WINDOW","","",null,null],[17,"XCB_MAP_WINDOW","","",null,null],[17,"XCB_MAP_SUBWINDOWS","","",null,null],[17,"XCB_UNMAP_WINDOW","","",null,null],[17,"XCB_UNMAP_SUBWINDOWS","","",null,null],[17,"XCB_CONFIG_WINDOW_X","","",null,null],[17,"XCB_CONFIG_WINDOW_Y","","",null,null],[17,"XCB_CONFIG_WINDOW_WIDTH","","",null,null],[17,"XCB_CONFIG_WINDOW_HEIGHT","","",null,null],[17,"XCB_CONFIG_WINDOW_BORDER_WIDTH","","",null,null],[17,"XCB_CONFIG_WINDOW_SIBLING","","",null,null],[17,"XCB_CONFIG_WINDOW_STACK_MODE","","",null,null],[17,"XCB_STACK_MODE_ABOVE","","",null,null],[17,"XCB_STACK_MODE_BELOW","","",null,null],[17,"XCB_STACK_MODE_TOP_IF","","",null,null],[17,"XCB_STACK_MODE_BOTTOM_IF","","",null,null],[17,"XCB_STACK_MODE_OPPOSITE","","",null,null],[17,"XCB_CONFIGURE_WINDOW","","",null,null],[17,"XCB_CIRCULATE_RAISE_LOWEST","","",null,null],[17,"XCB_CIRCULATE_LOWER_HIGHEST","","",null,null],[17,"XCB_CIRCULATE_WINDOW","","",null,null],[17,"XCB_GET_GEOMETRY","","",null,null],[17,"XCB_QUERY_TREE","","",null,null],[17,"XCB_INTERN_ATOM","","",null,null],[17,"XCB_GET_ATOM_NAME","","",null,null],[17,"XCB_PROP_MODE_REPLACE","","Discard the previous property value and store the new data.",null,null],[17,"XCB_PROP_MODE_PREPEND","","Insert the new data before the beginning of existing data. The `format` must match existing property value. If the property is undefined, it is treated as defined with the correct type and format with zero-length data.",null,null],[17,"XCB_PROP_MODE_APPEND","","Insert the new data after the beginning of existing data. The `format` must match existing property value. If the property is undefined, it is treated as defined with the correct type and format with zero-length data.",null,null],[17,"XCB_CHANGE_PROPERTY","","",null,null],[17,"XCB_DELETE_PROPERTY","","",null,null],[17,"XCB_GET_PROPERTY_TYPE_ANY","","",null,null],[17,"XCB_GET_PROPERTY","","",null,null],[17,"XCB_LIST_PROPERTIES","","",null,null],[17,"XCB_SET_SELECTION_OWNER","","",null,null],[17,"XCB_GET_SELECTION_OWNER","","",null,null],[17,"XCB_CONVERT_SELECTION","","",null,null],[17,"XCB_SEND_EVENT_DEST_POINTER_WINDOW","","",null,null],[17,"XCB_SEND_EVENT_DEST_ITEM_FOCUS","","",null,null],[17,"XCB_SEND_EVENT","","",null,null],[17,"XCB_GRAB_MODE_SYNC","","The state of the keyboard appears to freeze: No further keyboard events are generated by the server until the grabbing client issues a releasing `AllowEvents` request or until the keyboard grab is released.",null,null],[17,"XCB_GRAB_MODE_ASYNC","","Keyboard event processing continues normally.",null,null],[17,"XCB_GRAB_STATUS_SUCCESS","","",null,null],[17,"XCB_GRAB_STATUS_ALREADY_GRABBED","","",null,null],[17,"XCB_GRAB_STATUS_INVALID_TIME","","",null,null],[17,"XCB_GRAB_STATUS_NOT_VIEWABLE","","",null,null],[17,"XCB_GRAB_STATUS_FROZEN","","",null,null],[17,"XCB_CURSOR_NONE","","",null,null],[17,"XCB_GRAB_POINTER","","",null,null],[17,"XCB_UNGRAB_POINTER","","",null,null],[17,"XCB_BUTTON_INDEX_ANY","","Any of the following (or none):",null,null],[17,"XCB_BUTTON_INDEX_1","","The left mouse button.",null,null],[17,"XCB_BUTTON_INDEX_2","","The right mouse button.",null,null],[17,"XCB_BUTTON_INDEX_3","","The middle mouse button.",null,null],[17,"XCB_BUTTON_INDEX_4","","Scroll wheel. TODO: direction?",null,null],[17,"XCB_BUTTON_INDEX_5","","Scroll wheel. TODO: direction?",null,null],[17,"XCB_GRAB_BUTTON","","",null,null],[17,"XCB_UNGRAB_BUTTON","","",null,null],[17,"XCB_CHANGE_ACTIVE_POINTER_GRAB","","",null,null],[17,"XCB_GRAB_KEYBOARD","","",null,null],[17,"XCB_UNGRAB_KEYBOARD","","",null,null],[17,"XCB_GRAB_ANY","","",null,null],[17,"XCB_GRAB_KEY","","",null,null],[17,"XCB_UNGRAB_KEY","","",null,null],[17,"XCB_ALLOW_ASYNC_POINTER","","For AsyncPointer, if the pointer is frozen by the client, pointer event processing continues normally. If the pointer is frozen twice by the client on behalf of two separate grabs, AsyncPointer thaws for both. AsyncPointer has no effect if the pointer is not frozen by the client, but the pointer need not be grabbed by the client.",null,null],[17,"XCB_ALLOW_SYNC_POINTER","","For SyncPointer, if the pointer is frozen and actively grabbed by the client, pointer event processing continues normally until the next ButtonPress or ButtonRelease event is reported to the client, at which time the pointer again appears to freeze. However, if the reported event causes the pointer grab to be released, then the pointer does not freeze. SyncPointer has no effect if the pointer is not frozen by the client or if the pointer is not grabbed by the client.",null,null],[17,"XCB_ALLOW_REPLAY_POINTER","","For ReplayPointer, if the pointer is actively grabbed by the client and is frozen as the result of an event having been sent to the client (either from the activation of a GrabButton or from a previous AllowEvents with mode SyncPointer but not from a GrabPointer), then the pointer grab is released and that event is completely reprocessed, this time ignoring any passive grabs at or above (towards the root) the grab-window of the grab just released. The request has no effect if the pointer is not grabbed by the client or if the pointer is not frozen as the result of an event.",null,null],[17,"XCB_ALLOW_ASYNC_KEYBOARD","","For AsyncKeyboard, if the keyboard is frozen by the client, keyboard event processing continues normally. If the keyboard is frozen twice by the client on behalf of two separate grabs, AsyncKeyboard thaws for both. AsyncKeyboard has no effect if the keyboard is not frozen by the client, but the keyboard need not be grabbed by the client.",null,null],[17,"XCB_ALLOW_SYNC_KEYBOARD","","For SyncKeyboard, if the keyboard is frozen and actively grabbed by the client, keyboard event processing continues normally until the next KeyPress or KeyRelease event is reported to the client, at which time the keyboard again appears to freeze. However, if the reported event causes the keyboard grab to be released, then the keyboard does not freeze. SyncKeyboard has no effect if the keyboard is not frozen by the client or if the keyboard is not grabbed by the client.",null,null],[17,"XCB_ALLOW_REPLAY_KEYBOARD","","For ReplayKeyboard, if the keyboard is actively grabbed by the client and is frozen as the result of an event having been sent to the client (either from the activation of a GrabKey or from a previous AllowEvents with mode SyncKeyboard but not from a GrabKeyboard), then the keyboard grab is released and that event is completely reprocessed, this time ignoring any passive grabs at or above (towards the root) the grab-window of the grab just released. The request has no effect if the keyboard is not grabbed by the client or if the keyboard is not frozen as the result of an event.",null,null],[17,"XCB_ALLOW_ASYNC_BOTH","","For AsyncBoth, if the pointer and the keyboard are frozen by the client, event processing for both devices continues normally. If a device is frozen twice by the client on behalf of two separate grabs, AsyncBoth thaws for both. AsyncBoth has no effect unless both pointer and keyboard are frozen by the client.",null,null],[17,"XCB_ALLOW_SYNC_BOTH","","For SyncBoth, if both pointer and keyboard are frozen by the client, event processing (for both devices) continues normally until the next ButtonPress, ButtonRelease, KeyPress, or KeyRelease event is reported to the client for a grabbed device (button event for the pointer, key event for the keyboard), at which time the devices again appear to freeze. However, if the reported event causes the grab to be released, then the devices do not freeze (but if the other device is still grabbed, then a subsequent event for it will still cause both devices to freeze). SyncBoth has no effect unless both pointer and keyboard are frozen by the client. If the pointer or keyboard is frozen twice by the client on behalf of two separate grabs, SyncBoth thaws for both (but a subsequent freeze for SyncBoth will only freeze each device once).",null,null],[17,"XCB_ALLOW_EVENTS","","",null,null],[17,"XCB_GRAB_SERVER","","",null,null],[17,"XCB_UNGRAB_SERVER","","",null,null],[17,"XCB_QUERY_POINTER","","",null,null],[17,"XCB_GET_MOTION_EVENTS","","",null,null],[17,"XCB_TRANSLATE_COORDINATES","","",null,null],[17,"XCB_WARP_POINTER","","",null,null],[17,"XCB_INPUT_FOCUS_NONE","","The focus reverts to `XCB_NONE`, so no window will have the input focus.",null,null],[17,"XCB_INPUT_FOCUS_POINTER_ROOT","","The focus reverts to `XCB_POINTER_ROOT` respectively. When the focus reverts, FocusIn and FocusOut events are generated, but the last-focus-change time is not changed.",null,null],[17,"XCB_INPUT_FOCUS_PARENT","","The focus reverts to the parent (or closest viewable ancestor) and the new revert_to value is `XCB_INPUT_FOCUS_NONE`.",null,null],[17,"XCB_INPUT_FOCUS_FOLLOW_KEYBOARD","","NOT YET DOCUMENTED. Only relevant for the xinput extension.",null,null],[17,"XCB_SET_INPUT_FOCUS","","",null,null],[17,"XCB_GET_INPUT_FOCUS","","",null,null],[17,"XCB_QUERY_KEYMAP","","",null,null],[17,"XCB_OPEN_FONT","","",null,null],[17,"XCB_CLOSE_FONT","","",null,null],[17,"XCB_FONT_DRAW_LEFT_TO_RIGHT","","",null,null],[17,"XCB_FONT_DRAW_RIGHT_TO_LEFT","","",null,null],[17,"XCB_QUERY_FONT","","",null,null],[17,"XCB_QUERY_TEXT_EXTENTS","","",null,null],[17,"XCB_LIST_FONTS","","",null,null],[17,"XCB_LIST_FONTS_WITH_INFO","","",null,null],[17,"XCB_SET_FONT_PATH","","",null,null],[17,"XCB_GET_FONT_PATH","","",null,null],[17,"XCB_CREATE_PIXMAP","","",null,null],[17,"XCB_FREE_PIXMAP","","",null,null],[17,"XCB_GC_FUNCTION","","TODO: Refer to GX",null,null],[17,"XCB_GC_PLANE_MASK","","In graphics operations, given a source and destination pixel, the result is computed bitwise on corresponding bits of the pixels; that is, a Boolean operation is performed in each bit plane. The plane-mask restricts the operation to a subset of planes, so the result is:",null,null],[17,"XCB_GC_FOREGROUND","","Foreground colorpixel.",null,null],[17,"XCB_GC_BACKGROUND","","Background colorpixel.",null,null],[17,"XCB_GC_LINE_WIDTH","","The line-width is measured in pixels and can be greater than or equal to one, a wide line, or the special value zero, a thin line.",null,null],[17,"XCB_GC_LINE_STYLE","","The line-style defines which sections of a line are drawn: Solid                The full path of the line is drawn. DoubleDash           The full path of the line is drawn, but the even dashes are filled differently                      than the odd dashes (see fill-style), with Butt cap-style used where even and                      odd dashes meet. OnOffDash            Only the even dashes are drawn, and cap-style applies to all internal ends of                      the individual dashes (except NotLast is treated as Butt).",null,null],[17,"XCB_GC_CAP_STYLE","","The cap-style defines how the endpoints of a path are drawn: NotLast    The result is equivalent to Butt, except that for a line-width of zero the final            endpoint is not drawn. Butt       The result is square at the endpoint (perpendicular to the slope of the line)            with no projection beyond. Round      The result is a circular arc with its diameter equal to the line-width, centered            on the endpoint; it is equivalent to Butt for line-width zero. Projecting The result is square at the end, but the path continues beyond the endpoint for            a distance equal to half the line-width; it is equivalent to Butt for line-width            zero.",null,null],[17,"XCB_GC_JOIN_STYLE","","The join-style defines how corners are drawn for wide lines: Miter               The outer edges of the two lines extend to meet at an angle. However, if the                     angle is less than 11 degrees, a Bevel join-style is used instead. Round               The result is a circular arc with a diameter equal to the line-width, centered                     on the joinpoint. Bevel               The result is Butt endpoint styles, and then the triangular notch is filled.",null,null],[17,"XCB_GC_FILL_STYLE","","The fill-style defines the contents of the source for line, text, and fill requests. For all text and fill requests (for example, PolyText8, PolyText16, PolyFillRectangle, FillPoly, and PolyFillArc) as well as for line requests with line-style Solid, (for example, PolyLine, PolySegment, PolyRectangle, PolyArc) and for the even dashes for line requests with line-style OnOffDash or DoubleDash: Solid                     Foreground Tiled                     Tile OpaqueStippled            A tile with the same width and height as stipple but with background                           everywhere stipple has a zero and with foreground everywhere stipple                           has a one Stippled                  Foreground masked by stipple For the odd dashes for line requests with line-style DoubleDash: Solid                     Background Tiled                     Same as for even dashes OpaqueStippled            Same as for even dashes Stippled                  Background masked by stipple",null,null],[17,"XCB_GC_FILL_RULE","","",null,null],[17,"XCB_GC_TILE","","The tile/stipple represents an infinite two-dimensional plane with the tile/stipple replicated in all dimensions. When that plane is superimposed on the drawable for use in a graphics operation, the upper-left corner of some instance of the tile/stipple is at the coordinates within the drawable specified by the tile/stipple origin. The tile/stipple and clip origins are interpreted relative to the origin of whatever destination drawable is specified in a graphics request. The tile pixmap must have the same root and depth as the gcontext (or a Match error results). The stipple pixmap must have depth one and must have the same root as the gcontext (or a Match error results). For fill-style Stippled (but not fill-style OpaqueStippled), the stipple pattern is tiled in a single plane and acts as an additional clip mask to be ANDed with the clip-mask. Any size pixmap can be used for tiling or stippling, although some sizes may be faster to use than others.",null,null],[17,"XCB_GC_STIPPLE","","The tile/stipple represents an infinite two-dimensional plane with the tile/stipple replicated in all dimensions. When that plane is superimposed on the drawable for use in a graphics operation, the upper-left corner of some instance of the tile/stipple is at the coordinates within the drawable specified by the tile/stipple origin. The tile/stipple and clip origins are interpreted relative to the origin of whatever destination drawable is specified in a graphics request. The tile pixmap must have the same root and depth as the gcontext (or a Match error results). The stipple pixmap must have depth one and must have the same root as the gcontext (or a Match error results). For fill-style Stippled (but not fill-style OpaqueStippled), the stipple pattern is tiled in a single plane and acts as an additional clip mask to be ANDed with the clip-mask. Any size pixmap can be used for tiling or stippling, although some sizes may be faster to use than others.",null,null],[17,"XCB_GC_TILE_STIPPLE_ORIGIN_X","","TODO",null,null],[17,"XCB_GC_TILE_STIPPLE_ORIGIN_Y","","TODO",null,null],[17,"XCB_GC_FONT","","Which font to use for the `ImageText8` and `ImageText16` requests.",null,null],[17,"XCB_GC_SUBWINDOW_MODE","","For ClipByChildren, both source and destination windows are additionally clipped by all viewable InputOutput children. For IncludeInferiors, neither source nor destination window is clipped by inferiors. This will result in including subwindow contents in the source and drawing through subwindow boundaries of the destination. The use of IncludeInferiors with a source or destination window of one depth with mapped inferiors of differing depth is not illegal, but the semantics is undefined by the core protocol.",null,null],[17,"XCB_GC_GRAPHICS_EXPOSURES","","Whether ExposureEvents should be generated (1) or not (0).",null,null],[17,"XCB_GC_CLIP_ORIGIN_X","","TODO",null,null],[17,"XCB_GC_CLIP_ORIGIN_Y","","TODO",null,null],[17,"XCB_GC_CLIP_MASK","","The clip-mask restricts writes to the destination drawable. Only pixels where the clip-mask has bits set to 1 are drawn. Pixels are not drawn outside the area covered by the clip-mask or where the clip-mask has bits set to 0. The clip-mask affects all graphics requests, but it does not clip sources. The clip-mask origin is interpreted relative to the origin of whatever destination drawable is specified in a graphics request. If a pixmap is specified as the clip-mask, it must have depth 1 and have the same root as the gcontext (or a Match error results). If clip-mask is None, then pixels are always drawn, regardless of the clip origin. The clip-mask can also be set with the SetClipRectangles request.",null,null],[17,"XCB_GC_DASH_OFFSET","","TODO",null,null],[17,"XCB_GC_DASH_LIST","","TODO",null,null],[17,"XCB_GC_ARC_MODE","","TODO",null,null],[17,"XCB_GX_CLEAR","","",null,null],[17,"XCB_GX_AND","","",null,null],[17,"XCB_GX_AND_REVERSE","","",null,null],[17,"XCB_GX_COPY","","",null,null],[17,"XCB_GX_AND_INVERTED","","",null,null],[17,"XCB_GX_NOOP","","",null,null],[17,"XCB_GX_XOR","","",null,null],[17,"XCB_GX_OR","","",null,null],[17,"XCB_GX_NOR","","",null,null],[17,"XCB_GX_EQUIV","","",null,null],[17,"XCB_GX_INVERT","","",null,null],[17,"XCB_GX_OR_REVERSE","","",null,null],[17,"XCB_GX_COPY_INVERTED","","",null,null],[17,"XCB_GX_OR_INVERTED","","",null,null],[17,"XCB_GX_NAND","","",null,null],[17,"XCB_GX_SET","","",null,null],[17,"XCB_LINE_STYLE_SOLID","","",null,null],[17,"XCB_LINE_STYLE_ON_OFF_DASH","","",null,null],[17,"XCB_LINE_STYLE_DOUBLE_DASH","","",null,null],[17,"XCB_CAP_STYLE_NOT_LAST","","",null,null],[17,"XCB_CAP_STYLE_BUTT","","",null,null],[17,"XCB_CAP_STYLE_ROUND","","",null,null],[17,"XCB_CAP_STYLE_PROJECTING","","",null,null],[17,"XCB_JOIN_STYLE_MITER","","",null,null],[17,"XCB_JOIN_STYLE_ROUND","","",null,null],[17,"XCB_JOIN_STYLE_BEVEL","","",null,null],[17,"XCB_FILL_STYLE_SOLID","","",null,null],[17,"XCB_FILL_STYLE_TILED","","",null,null],[17,"XCB_FILL_STYLE_STIPPLED","","",null,null],[17,"XCB_FILL_STYLE_OPAQUE_STIPPLED","","",null,null],[17,"XCB_FILL_RULE_EVEN_ODD","","",null,null],[17,"XCB_FILL_RULE_WINDING","","",null,null],[17,"XCB_SUBWINDOW_MODE_CLIP_BY_CHILDREN","","",null,null],[17,"XCB_SUBWINDOW_MODE_INCLUDE_INFERIORS","","",null,null],[17,"XCB_ARC_MODE_CHORD","","",null,null],[17,"XCB_ARC_MODE_PIE_SLICE","","",null,null],[17,"XCB_CREATE_GC","","",null,null],[17,"XCB_CHANGE_GC","","",null,null],[17,"XCB_COPY_GC","","",null,null],[17,"XCB_SET_DASHES","","",null,null],[17,"XCB_CLIP_ORDERING_UNSORTED","","",null,null],[17,"XCB_CLIP_ORDERING_Y_SORTED","","",null,null],[17,"XCB_CLIP_ORDERING_YX_SORTED","","",null,null],[17,"XCB_CLIP_ORDERING_YX_BANDED","","",null,null],[17,"XCB_SET_CLIP_RECTANGLES","","",null,null],[17,"XCB_FREE_GC","","",null,null],[17,"XCB_CLEAR_AREA","","",null,null],[17,"XCB_COPY_AREA","","",null,null],[17,"XCB_COPY_PLANE","","",null,null],[17,"XCB_COORD_MODE_ORIGIN","","Treats all coordinates as relative to the origin.",null,null],[17,"XCB_COORD_MODE_PREVIOUS","","Treats all coordinates after the first as relative to the previous coordinate.",null,null],[17,"XCB_POLY_POINT","","",null,null],[17,"XCB_POLY_LINE","","",null,null],[17,"XCB_POLY_SEGMENT","","",null,null],[17,"XCB_POLY_RECTANGLE","","",null,null],[17,"XCB_POLY_ARC","","",null,null],[17,"XCB_POLY_SHAPE_COMPLEX","","",null,null],[17,"XCB_POLY_SHAPE_NONCONVEX","","",null,null],[17,"XCB_POLY_SHAPE_CONVEX","","",null,null],[17,"XCB_FILL_POLY","","",null,null],[17,"XCB_POLY_FILL_RECTANGLE","","",null,null],[17,"XCB_POLY_FILL_ARC","","",null,null],[17,"XCB_IMAGE_FORMAT_XY_BITMAP","","",null,null],[17,"XCB_IMAGE_FORMAT_XY_PIXMAP","","",null,null],[17,"XCB_IMAGE_FORMAT_Z_PIXMAP","","",null,null],[17,"XCB_PUT_IMAGE","","",null,null],[17,"XCB_GET_IMAGE","","",null,null],[17,"XCB_POLY_TEXT_8","","",null,null],[17,"XCB_POLY_TEXT_16","","",null,null],[17,"XCB_IMAGE_TEXT_8","","",null,null],[17,"XCB_IMAGE_TEXT_16","","",null,null],[17,"XCB_COLORMAP_ALLOC_NONE","","",null,null],[17,"XCB_COLORMAP_ALLOC_ALL","","",null,null],[17,"XCB_CREATE_COLORMAP","","",null,null],[17,"XCB_FREE_COLORMAP","","",null,null],[17,"XCB_COPY_COLORMAP_AND_FREE","","",null,null],[17,"XCB_INSTALL_COLORMAP","","",null,null],[17,"XCB_UNINSTALL_COLORMAP","","",null,null],[17,"XCB_LIST_INSTALLED_COLORMAPS","","",null,null],[17,"XCB_ALLOC_COLOR","","",null,null],[17,"XCB_ALLOC_NAMED_COLOR","","",null,null],[17,"XCB_ALLOC_COLOR_CELLS","","",null,null],[17,"XCB_ALLOC_COLOR_PLANES","","",null,null],[17,"XCB_FREE_COLORS","","",null,null],[17,"XCB_COLOR_FLAG_RED","","",null,null],[17,"XCB_COLOR_FLAG_GREEN","","",null,null],[17,"XCB_COLOR_FLAG_BLUE","","",null,null],[17,"XCB_STORE_COLORS","","",null,null],[17,"XCB_STORE_NAMED_COLOR","","",null,null],[17,"XCB_QUERY_COLORS","","",null,null],[17,"XCB_LOOKUP_COLOR","","",null,null],[17,"XCB_PIXMAP_NONE","","",null,null],[17,"XCB_CREATE_CURSOR","","",null,null],[17,"XCB_FONT_NONE","","",null,null],[17,"XCB_CREATE_GLYPH_CURSOR","","",null,null],[17,"XCB_FREE_CURSOR","","",null,null],[17,"XCB_RECOLOR_CURSOR","","",null,null],[17,"XCB_QUERY_SHAPE_OF_LARGEST_CURSOR","","",null,null],[17,"XCB_QUERY_SHAPE_OF_FASTEST_TILE","","",null,null],[17,"XCB_QUERY_SHAPE_OF_FASTEST_STIPPLE","","",null,null],[17,"XCB_QUERY_BEST_SIZE","","",null,null],[17,"XCB_QUERY_EXTENSION","","",null,null],[17,"XCB_LIST_EXTENSIONS","","",null,null],[17,"XCB_CHANGE_KEYBOARD_MAPPING","","",null,null],[17,"XCB_GET_KEYBOARD_MAPPING","","",null,null],[17,"XCB_KB_KEY_CLICK_PERCENT","","",null,null],[17,"XCB_KB_BELL_PERCENT","","",null,null],[17,"XCB_KB_BELL_PITCH","","",null,null],[17,"XCB_KB_BELL_DURATION","","",null,null],[17,"XCB_KB_LED","","",null,null],[17,"XCB_KB_LED_MODE","","",null,null],[17,"XCB_KB_KEY","","",null,null],[17,"XCB_KB_AUTO_REPEAT_MODE","","",null,null],[17,"XCB_LED_MODE_OFF","","",null,null],[17,"XCB_LED_MODE_ON","","",null,null],[17,"XCB_AUTO_REPEAT_MODE_OFF","","",null,null],[17,"XCB_AUTO_REPEAT_MODE_ON","","",null,null],[17,"XCB_AUTO_REPEAT_MODE_DEFAULT","","",null,null],[17,"XCB_CHANGE_KEYBOARD_CONTROL","","",null,null],[17,"XCB_GET_KEYBOARD_CONTROL","","",null,null],[17,"XCB_BELL","","",null,null],[17,"XCB_CHANGE_POINTER_CONTROL","","",null,null],[17,"XCB_GET_POINTER_CONTROL","","",null,null],[17,"XCB_BLANKING_NOT_PREFERRED","","",null,null],[17,"XCB_BLANKING_PREFERRED","","",null,null],[17,"XCB_BLANKING_DEFAULT","","",null,null],[17,"XCB_EXPOSURES_NOT_ALLOWED","","",null,null],[17,"XCB_EXPOSURES_ALLOWED","","",null,null],[17,"XCB_EXPOSURES_DEFAULT","","",null,null],[17,"XCB_SET_SCREEN_SAVER","","",null,null],[17,"XCB_GET_SCREEN_SAVER","","",null,null],[17,"XCB_HOST_MODE_INSERT","","",null,null],[17,"XCB_HOST_MODE_DELETE","","",null,null],[17,"XCB_FAMILY_INTERNET","","",null,null],[17,"XCB_FAMILY_DE_CNET","","",null,null],[17,"XCB_FAMILY_CHAOS","","",null,null],[17,"XCB_FAMILY_SERVER_INTERPRETED","","",null,null],[17,"XCB_FAMILY_INTERNET_6","","",null,null],[17,"XCB_CHANGE_HOSTS","","",null,null],[17,"XCB_LIST_HOSTS","","",null,null],[17,"XCB_ACCESS_CONTROL_DISABLE","","",null,null],[17,"XCB_ACCESS_CONTROL_ENABLE","","",null,null],[17,"XCB_SET_ACCESS_CONTROL","","",null,null],[17,"XCB_CLOSE_DOWN_DESTROY_ALL","","",null,null],[17,"XCB_CLOSE_DOWN_RETAIN_PERMANENT","","",null,null],[17,"XCB_CLOSE_DOWN_RETAIN_TEMPORARY","","",null,null],[17,"XCB_SET_CLOSE_DOWN_MODE","","",null,null],[17,"XCB_KILL_ALL_TEMPORARY","","",null,null],[17,"XCB_KILL_CLIENT","","",null,null],[17,"XCB_ROTATE_PROPERTIES","","",null,null],[17,"XCB_SCREEN_SAVER_RESET","","",null,null],[17,"XCB_SCREEN_SAVER_ACTIVE","","",null,null],[17,"XCB_FORCE_SCREEN_SAVER","","",null,null],[17,"XCB_MAPPING_STATUS_SUCCESS","","",null,null],[17,"XCB_MAPPING_STATUS_BUSY","","",null,null],[17,"XCB_MAPPING_STATUS_FAILURE","","",null,null],[17,"XCB_SET_POINTER_MAPPING","","",null,null],[17,"XCB_GET_POINTER_MAPPING","","",null,null],[17,"XCB_MAP_INDEX_SHIFT","","",null,null],[17,"XCB_MAP_INDEX_LOCK","","",null,null],[17,"XCB_MAP_INDEX_CONTROL","","",null,null],[17,"XCB_MAP_INDEX_1","","",null,null],[17,"XCB_MAP_INDEX_2","","",null,null],[17,"XCB_MAP_INDEX_3","","",null,null],[17,"XCB_MAP_INDEX_4","","",null,null],[17,"XCB_MAP_INDEX_5","","",null,null],[17,"XCB_SET_MODIFIER_MAPPING","","",null,null],[17,"XCB_GET_MODIFIER_MAPPING","","",null,null],[17,"XCB_NO_OPERATION","","",null,null],[11,"clone","","",346,{"inputs":[{"name":"self"}],"output":{"name":"xcb_char2b_t"}}],[11,"clone","","",362,{"inputs":[{"name":"self"}],"output":{"name":"xcb_point_t"}}],[11,"clone","","",364,{"inputs":[{"name":"self"}],"output":{"name":"xcb_rectangle_t"}}],[11,"clone","","",366,{"inputs":[{"name":"self"}],"output":{"name":"xcb_arc_t"}}],[11,"clone","","",368,{"inputs":[{"name":"self"}],"output":{"name":"xcb_format_t"}}],[11,"clone","","",370,{"inputs":[{"name":"self"}],"output":{"name":"xcb_visualtype_t"}}],[11,"clone","","",384,{"inputs":[{"name":"self"}],"output":{"name":"xcb_key_press_event_t"}}],[11,"clone","","",385,{"inputs":[{"name":"self"}],"output":{"name":"xcb_button_press_event_t"}}],[11,"clone","","",386,{"inputs":[{"name":"self"}],"output":{"name":"xcb_motion_notify_event_t"}}],[11,"clone","","",387,{"inputs":[{"name":"self"}],"output":{"name":"xcb_enter_notify_event_t"}}],[11,"clone","","",388,{"inputs":[{"name":"self"}],"output":{"name":"xcb_focus_in_event_t"}}],[11,"clone","","",389,{"inputs":[{"name":"self"}],"output":{"name":"xcb_keymap_notify_event_t"}}],[11,"clone","","",390,{"inputs":[{"name":"self"}],"output":{"name":"xcb_expose_event_t"}}],[11,"clone","","",391,{"inputs":[{"name":"self"}],"output":{"name":"xcb_graphics_exposure_event_t"}}],[11,"clone","","",392,{"inputs":[{"name":"self"}],"output":{"name":"xcb_no_exposure_event_t"}}],[11,"clone","","",393,{"inputs":[{"name":"self"}],"output":{"name":"xcb_visibility_notify_event_t"}}],[11,"clone","","",394,{"inputs":[{"name":"self"}],"output":{"name":"xcb_create_notify_event_t"}}],[11,"clone","","",395,{"inputs":[{"name":"self"}],"output":{"name":"xcb_destroy_notify_event_t"}}],[11,"clone","","",396,{"inputs":[{"name":"self"}],"output":{"name":"xcb_unmap_notify_event_t"}}],[11,"clone","","",397,{"inputs":[{"name":"self"}],"output":{"name":"xcb_map_notify_event_t"}}],[11,"clone","","",398,{"inputs":[{"name":"self"}],"output":{"name":"xcb_map_request_event_t"}}],[11,"clone","","",399,{"inputs":[{"name":"self"}],"output":{"name":"xcb_reparent_notify_event_t"}}],[11,"clone","","",400,{"inputs":[{"name":"self"}],"output":{"name":"xcb_configure_notify_event_t"}}],[11,"clone","","",401,{"inputs":[{"name":"self"}],"output":{"name":"xcb_configure_request_event_t"}}],[11,"clone","","",402,{"inputs":[{"name":"self"}],"output":{"name":"xcb_gravity_notify_event_t"}}],[11,"clone","","",403,{"inputs":[{"name":"self"}],"output":{"name":"xcb_resize_request_event_t"}}],[11,"clone","","",404,{"inputs":[{"name":"self"}],"output":{"name":"xcb_circulate_notify_event_t"}}],[11,"clone","","",405,{"inputs":[{"name":"self"}],"output":{"name":"xcb_property_notify_event_t"}}],[11,"clone","","",406,{"inputs":[{"name":"self"}],"output":{"name":"xcb_selection_clear_event_t"}}],[11,"clone","","",407,{"inputs":[{"name":"self"}],"output":{"name":"xcb_selection_request_event_t"}}],[11,"clone","","",408,{"inputs":[{"name":"self"}],"output":{"name":"xcb_selection_notify_event_t"}}],[11,"clone","","",409,{"inputs":[{"name":"self"}],"output":{"name":"xcb_colormap_notify_event_t"}}],[11,"clone","","",410,{"inputs":[{"name":"self"}],"output":{"name":"xcb_client_message_data_t"}}],[11,"clone","","",412,{"inputs":[{"name":"self"}],"output":{"name":"xcb_client_message_event_t"}}],[11,"clone","","",413,{"inputs":[{"name":"self"}],"output":{"name":"xcb_mapping_notify_event_t"}}],[11,"clone","","",414,{"inputs":[{"name":"self"}],"output":{"name":"xcb_ge_generic_event_t"}}],[11,"clone","","",415,{"inputs":[{"name":"self"}],"output":{"name":"xcb_request_error_t"}}],[11,"clone","","",416,{"inputs":[{"name":"self"}],"output":{"name":"xcb_value_error_t"}}],[11,"clone","","",419,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_window_attributes_request_t"}}],[11,"clone","","",593,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_window_attributes_cookie_t"}}],[11,"clone","","",420,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_window_attributes_reply_t"}}],[11,"clone","","",421,{"inputs":[{"name":"self"}],"output":{"name":"xcb_destroy_window_request_t"}}],[11,"clone","","",422,{"inputs":[{"name":"self"}],"output":{"name":"xcb_destroy_subwindows_request_t"}}],[11,"clone","","",423,{"inputs":[{"name":"self"}],"output":{"name":"xcb_change_save_set_request_t"}}],[11,"clone","","",424,{"inputs":[{"name":"self"}],"output":{"name":"xcb_reparent_window_request_t"}}],[11,"clone","","",425,{"inputs":[{"name":"self"}],"output":{"name":"xcb_map_window_request_t"}}],[11,"clone","","",426,{"inputs":[{"name":"self"}],"output":{"name":"xcb_map_subwindows_request_t"}}],[11,"clone","","",427,{"inputs":[{"name":"self"}],"output":{"name":"xcb_unmap_window_request_t"}}],[11,"clone","","",428,{"inputs":[{"name":"self"}],"output":{"name":"xcb_unmap_subwindows_request_t"}}],[11,"clone","","",430,{"inputs":[{"name":"self"}],"output":{"name":"xcb_circulate_window_request_t"}}],[11,"clone","","",431,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_geometry_request_t"}}],[11,"clone","","",594,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_geometry_cookie_t"}}],[11,"clone","","",432,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_geometry_reply_t"}}],[11,"clone","","",433,{"inputs":[{"name":"self"}],"output":{"name":"xcb_query_tree_request_t"}}],[11,"clone","","",595,{"inputs":[{"name":"self"}],"output":{"name":"xcb_query_tree_cookie_t"}}],[11,"clone","","",596,{"inputs":[{"name":"self"}],"output":{"name":"xcb_intern_atom_cookie_t"}}],[11,"clone","","",436,{"inputs":[{"name":"self"}],"output":{"name":"xcb_intern_atom_reply_t"}}],[11,"clone","","",437,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_atom_name_request_t"}}],[11,"clone","","",597,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_atom_name_cookie_t"}}],[11,"clone","","",440,{"inputs":[{"name":"self"}],"output":{"name":"xcb_delete_property_request_t"}}],[11,"clone","","",441,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_property_request_t"}}],[11,"clone","","",598,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_property_cookie_t"}}],[11,"clone","","",443,{"inputs":[{"name":"self"}],"output":{"name":"xcb_list_properties_request_t"}}],[11,"clone","","",599,{"inputs":[{"name":"self"}],"output":{"name":"xcb_list_properties_cookie_t"}}],[11,"clone","","",445,{"inputs":[{"name":"self"}],"output":{"name":"xcb_set_selection_owner_request_t"}}],[11,"clone","","",446,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_selection_owner_request_t"}}],[11,"clone","","",600,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_selection_owner_cookie_t"}}],[11,"clone","","",447,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_selection_owner_reply_t"}}],[11,"clone","","",448,{"inputs":[{"name":"self"}],"output":{"name":"xcb_convert_selection_request_t"}}],[11,"clone","","",449,{"inputs":[{"name":"self"}],"output":{"name":"xcb_send_event_request_t"}}],[11,"clone","","",450,{"inputs":[{"name":"self"}],"output":{"name":"xcb_grab_pointer_request_t"}}],[11,"clone","","",601,{"inputs":[{"name":"self"}],"output":{"name":"xcb_grab_pointer_cookie_t"}}],[11,"clone","","",451,{"inputs":[{"name":"self"}],"output":{"name":"xcb_grab_pointer_reply_t"}}],[11,"clone","","",452,{"inputs":[{"name":"self"}],"output":{"name":"xcb_ungrab_pointer_request_t"}}],[11,"clone","","",453,{"inputs":[{"name":"self"}],"output":{"name":"xcb_grab_button_request_t"}}],[11,"clone","","",454,{"inputs":[{"name":"self"}],"output":{"name":"xcb_ungrab_button_request_t"}}],[11,"clone","","",455,{"inputs":[{"name":"self"}],"output":{"name":"xcb_change_active_pointer_grab_request_t"}}],[11,"clone","","",456,{"inputs":[{"name":"self"}],"output":{"name":"xcb_grab_keyboard_request_t"}}],[11,"clone","","",602,{"inputs":[{"name":"self"}],"output":{"name":"xcb_grab_keyboard_cookie_t"}}],[11,"clone","","",457,{"inputs":[{"name":"self"}],"output":{"name":"xcb_grab_keyboard_reply_t"}}],[11,"clone","","",458,{"inputs":[{"name":"self"}],"output":{"name":"xcb_ungrab_keyboard_request_t"}}],[11,"clone","","",459,{"inputs":[{"name":"self"}],"output":{"name":"xcb_grab_key_request_t"}}],[11,"clone","","",460,{"inputs":[{"name":"self"}],"output":{"name":"xcb_ungrab_key_request_t"}}],[11,"clone","","",461,{"inputs":[{"name":"self"}],"output":{"name":"xcb_allow_events_request_t"}}],[11,"clone","","",462,{"inputs":[{"name":"self"}],"output":{"name":"xcb_grab_server_request_t"}}],[11,"clone","","",463,{"inputs":[{"name":"self"}],"output":{"name":"xcb_ungrab_server_request_t"}}],[11,"clone","","",464,{"inputs":[{"name":"self"}],"output":{"name":"xcb_query_pointer_request_t"}}],[11,"clone","","",603,{"inputs":[{"name":"self"}],"output":{"name":"xcb_query_pointer_cookie_t"}}],[11,"clone","","",465,{"inputs":[{"name":"self"}],"output":{"name":"xcb_query_pointer_reply_t"}}],[11,"clone","","",466,{"inputs":[{"name":"self"}],"output":{"name":"xcb_timecoord_t"}}],[11,"clone","","",468,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_motion_events_request_t"}}],[11,"clone","","",604,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_motion_events_cookie_t"}}],[11,"clone","","",470,{"inputs":[{"name":"self"}],"output":{"name":"xcb_translate_coordinates_request_t"}}],[11,"clone","","",605,{"inputs":[{"name":"self"}],"output":{"name":"xcb_translate_coordinates_cookie_t"}}],[11,"clone","","",471,{"inputs":[{"name":"self"}],"output":{"name":"xcb_translate_coordinates_reply_t"}}],[11,"clone","","",472,{"inputs":[{"name":"self"}],"output":{"name":"xcb_warp_pointer_request_t"}}],[11,"clone","","",473,{"inputs":[{"name":"self"}],"output":{"name":"xcb_set_input_focus_request_t"}}],[11,"clone","","",474,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_input_focus_request_t"}}],[11,"clone","","",606,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_input_focus_cookie_t"}}],[11,"clone","","",475,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_input_focus_reply_t"}}],[11,"clone","","",476,{"inputs":[{"name":"self"}],"output":{"name":"xcb_query_keymap_request_t"}}],[11,"clone","","",607,{"inputs":[{"name":"self"}],"output":{"name":"xcb_query_keymap_cookie_t"}}],[11,"clone","","",477,{"inputs":[{"name":"self"}],"output":{"name":"xcb_query_keymap_reply_t"}}],[11,"clone","","",479,{"inputs":[{"name":"self"}],"output":{"name":"xcb_close_font_request_t"}}],[11,"clone","","",480,{"inputs":[{"name":"self"}],"output":{"name":"xcb_fontprop_t"}}],[11,"clone","","",482,{"inputs":[{"name":"self"}],"output":{"name":"xcb_charinfo_t"}}],[11,"clone","","",484,{"inputs":[{"name":"self"}],"output":{"name":"xcb_query_font_request_t"}}],[11,"clone","","",608,{"inputs":[{"name":"self"}],"output":{"name":"xcb_query_font_cookie_t"}}],[11,"clone","","",609,{"inputs":[{"name":"self"}],"output":{"name":"xcb_query_text_extents_cookie_t"}}],[11,"clone","","",487,{"inputs":[{"name":"self"}],"output":{"name":"xcb_query_text_extents_reply_t"}}],[11,"clone","","",610,{"inputs":[{"name":"self"}],"output":{"name":"xcb_list_fonts_cookie_t"}}],[11,"clone","","",611,{"inputs":[{"name":"self"}],"output":{"name":"xcb_list_fonts_with_info_cookie_t"}}],[11,"clone","","",495,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_font_path_request_t"}}],[11,"clone","","",612,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_font_path_cookie_t"}}],[11,"clone","","",497,{"inputs":[{"name":"self"}],"output":{"name":"xcb_create_pixmap_request_t"}}],[11,"clone","","",498,{"inputs":[{"name":"self"}],"output":{"name":"xcb_free_pixmap_request_t"}}],[11,"clone","","",501,{"inputs":[{"name":"self"}],"output":{"name":"xcb_copy_gc_request_t"}}],[11,"clone","","",504,{"inputs":[{"name":"self"}],"output":{"name":"xcb_free_gc_request_t"}}],[11,"clone","","",505,{"inputs":[{"name":"self"}],"output":{"name":"xcb_clear_area_request_t"}}],[11,"clone","","",506,{"inputs":[{"name":"self"}],"output":{"name":"xcb_copy_area_request_t"}}],[11,"clone","","",507,{"inputs":[{"name":"self"}],"output":{"name":"xcb_copy_plane_request_t"}}],[11,"clone","","",510,{"inputs":[{"name":"self"}],"output":{"name":"xcb_segment_t"}}],[11,"clone","","",519,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_image_request_t"}}],[11,"clone","","",613,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_image_cookie_t"}}],[11,"clone","","",525,{"inputs":[{"name":"self"}],"output":{"name":"xcb_create_colormap_request_t"}}],[11,"clone","","",526,{"inputs":[{"name":"self"}],"output":{"name":"xcb_free_colormap_request_t"}}],[11,"clone","","",527,{"inputs":[{"name":"self"}],"output":{"name":"xcb_copy_colormap_and_free_request_t"}}],[11,"clone","","",528,{"inputs":[{"name":"self"}],"output":{"name":"xcb_install_colormap_request_t"}}],[11,"clone","","",529,{"inputs":[{"name":"self"}],"output":{"name":"xcb_uninstall_colormap_request_t"}}],[11,"clone","","",530,{"inputs":[{"name":"self"}],"output":{"name":"xcb_list_installed_colormaps_request_t"}}],[11,"clone","","",614,{"inputs":[{"name":"self"}],"output":{"name":"xcb_list_installed_colormaps_cookie_t"}}],[11,"clone","","",532,{"inputs":[{"name":"self"}],"output":{"name":"xcb_alloc_color_request_t"}}],[11,"clone","","",615,{"inputs":[{"name":"self"}],"output":{"name":"xcb_alloc_color_cookie_t"}}],[11,"clone","","",533,{"inputs":[{"name":"self"}],"output":{"name":"xcb_alloc_color_reply_t"}}],[11,"clone","","",616,{"inputs":[{"name":"self"}],"output":{"name":"xcb_alloc_named_color_cookie_t"}}],[11,"clone","","",535,{"inputs":[{"name":"self"}],"output":{"name":"xcb_alloc_named_color_reply_t"}}],[11,"clone","","",536,{"inputs":[{"name":"self"}],"output":{"name":"xcb_alloc_color_cells_request_t"}}],[11,"clone","","",617,{"inputs":[{"name":"self"}],"output":{"name":"xcb_alloc_color_cells_cookie_t"}}],[11,"clone","","",538,{"inputs":[{"name":"self"}],"output":{"name":"xcb_alloc_color_planes_request_t"}}],[11,"clone","","",618,{"inputs":[{"name":"self"}],"output":{"name":"xcb_alloc_color_planes_cookie_t"}}],[11,"clone","","",541,{"inputs":[{"name":"self"}],"output":{"name":"xcb_coloritem_t"}}],[11,"clone","","",545,{"inputs":[{"name":"self"}],"output":{"name":"xcb_rgb_t"}}],[11,"clone","","",619,{"inputs":[{"name":"self"}],"output":{"name":"xcb_query_colors_cookie_t"}}],[11,"clone","","",620,{"inputs":[{"name":"self"}],"output":{"name":"xcb_lookup_color_cookie_t"}}],[11,"clone","","",550,{"inputs":[{"name":"self"}],"output":{"name":"xcb_lookup_color_reply_t"}}],[11,"clone","","",551,{"inputs":[{"name":"self"}],"output":{"name":"xcb_create_cursor_request_t"}}],[11,"clone","","",552,{"inputs":[{"name":"self"}],"output":{"name":"xcb_create_glyph_cursor_request_t"}}],[11,"clone","","",553,{"inputs":[{"name":"self"}],"output":{"name":"xcb_free_cursor_request_t"}}],[11,"clone","","",554,{"inputs":[{"name":"self"}],"output":{"name":"xcb_recolor_cursor_request_t"}}],[11,"clone","","",555,{"inputs":[{"name":"self"}],"output":{"name":"xcb_query_best_size_request_t"}}],[11,"clone","","",621,{"inputs":[{"name":"self"}],"output":{"name":"xcb_query_best_size_cookie_t"}}],[11,"clone","","",556,{"inputs":[{"name":"self"}],"output":{"name":"xcb_query_best_size_reply_t"}}],[11,"clone","","",622,{"inputs":[{"name":"self"}],"output":{"name":"xcb_query_extension_cookie_t"}}],[11,"clone","","",558,{"inputs":[{"name":"self"}],"output":{"name":"xcb_query_extension_reply_t"}}],[11,"clone","","",559,{"inputs":[{"name":"self"}],"output":{"name":"xcb_list_extensions_request_t"}}],[11,"clone","","",623,{"inputs":[{"name":"self"}],"output":{"name":"xcb_list_extensions_cookie_t"}}],[11,"clone","","",562,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_keyboard_mapping_request_t"}}],[11,"clone","","",624,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_keyboard_mapping_cookie_t"}}],[11,"clone","","",565,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_keyboard_control_request_t"}}],[11,"clone","","",625,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_keyboard_control_cookie_t"}}],[11,"clone","","",566,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_keyboard_control_reply_t"}}],[11,"clone","","",567,{"inputs":[{"name":"self"}],"output":{"name":"xcb_bell_request_t"}}],[11,"clone","","",568,{"inputs":[{"name":"self"}],"output":{"name":"xcb_change_pointer_control_request_t"}}],[11,"clone","","",569,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_pointer_control_request_t"}}],[11,"clone","","",626,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_pointer_control_cookie_t"}}],[11,"clone","","",570,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_pointer_control_reply_t"}}],[11,"clone","","",571,{"inputs":[{"name":"self"}],"output":{"name":"xcb_set_screen_saver_request_t"}}],[11,"clone","","",572,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_screen_saver_request_t"}}],[11,"clone","","",627,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_screen_saver_cookie_t"}}],[11,"clone","","",573,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_screen_saver_reply_t"}}],[11,"clone","","",577,{"inputs":[{"name":"self"}],"output":{"name":"xcb_list_hosts_request_t"}}],[11,"clone","","",628,{"inputs":[{"name":"self"}],"output":{"name":"xcb_list_hosts_cookie_t"}}],[11,"clone","","",579,{"inputs":[{"name":"self"}],"output":{"name":"xcb_set_access_control_request_t"}}],[11,"clone","","",580,{"inputs":[{"name":"self"}],"output":{"name":"xcb_set_close_down_mode_request_t"}}],[11,"clone","","",581,{"inputs":[{"name":"self"}],"output":{"name":"xcb_kill_client_request_t"}}],[11,"clone","","",583,{"inputs":[{"name":"self"}],"output":{"name":"xcb_force_screen_saver_request_t"}}],[11,"clone","","",629,{"inputs":[{"name":"self"}],"output":{"name":"xcb_set_pointer_mapping_cookie_t"}}],[11,"clone","","",585,{"inputs":[{"name":"self"}],"output":{"name":"xcb_set_pointer_mapping_reply_t"}}],[11,"clone","","",586,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_pointer_mapping_request_t"}}],[11,"clone","","",630,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_pointer_mapping_cookie_t"}}],[11,"clone","","",631,{"inputs":[{"name":"self"}],"output":{"name":"xcb_set_modifier_mapping_cookie_t"}}],[11,"clone","","",589,{"inputs":[{"name":"self"}],"output":{"name":"xcb_set_modifier_mapping_reply_t"}}],[11,"clone","","",590,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_modifier_mapping_request_t"}}],[11,"clone","","",632,{"inputs":[{"name":"self"}],"output":{"name":"xcb_get_modifier_mapping_cookie_t"}}],[11,"clone","","",592,{"inputs":[{"name":"self"}],"output":{"name":"xcb_no_operation_request_t"}}],[0,"big_requests","xcb::ffi","",null,null],[3,"xcb_big_requests_enable_request_t","xcb::ffi::big_requests","",null,null],[12,"major_opcode","","",633,null],[12,"minor_opcode","","",633,null],[12,"length","","",633,null],[3,"xcb_big_requests_enable_cookie_t","","",null,null],[3,"xcb_big_requests_enable_reply_t","","",null,null],[12,"response_type","","",634,null],[12,"pad0","","",634,null],[12,"sequence","","",634,null],[12,"length","","",634,null],[12,"maximum_request_length","","",634,null],[7,"xcb_big_requests_id","","",null,null],[5,"xcb_big_requests_enable_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_big_requests_enable","","",null,null],[5,"xcb_big_requests_enable_unchecked","","",null,null],[17,"XCB_BIG_REQUESTS_MAJOR_VERSION","","",null,null],[17,"XCB_BIG_REQUESTS_MINOR_VERSION","","",null,null],[17,"XCB_BIG_REQUESTS_ENABLE","","",null,null],[11,"clone","","",633,{"inputs":[{"name":"self"}],"output":{"name":"xcb_big_requests_enable_request_t"}}],[11,"clone","","",635,{"inputs":[{"name":"self"}],"output":{"name":"xcb_big_requests_enable_cookie_t"}}],[11,"clone","","",634,{"inputs":[{"name":"self"}],"output":{"name":"xcb_big_requests_enable_reply_t"}}],[0,"xc_misc","xcb::ffi","",null,null],[3,"xcb_xc_misc_get_version_request_t","xcb::ffi::xc_misc","",null,null],[12,"major_opcode","","",636,null],[12,"minor_opcode","","",636,null],[12,"length","","",636,null],[12,"client_major_version","","",636,null],[12,"client_minor_version","","",636,null],[3,"xcb_xc_misc_get_version_cookie_t","","",null,null],[3,"xcb_xc_misc_get_version_reply_t","","",null,null],[12,"response_type","","",637,null],[12,"pad0","","",637,null],[12,"sequence","","",637,null],[12,"length","","",637,null],[12,"server_major_version","","",637,null],[12,"server_minor_version","","",637,null],[3,"xcb_xc_misc_get_xid_range_request_t","","",null,null],[12,"major_opcode","","",638,null],[12,"minor_opcode","","",638,null],[12,"length","","",638,null],[3,"xcb_xc_misc_get_xid_range_cookie_t","","",null,null],[3,"xcb_xc_misc_get_xid_range_reply_t","","",null,null],[12,"response_type","","",639,null],[12,"pad0","","",639,null],[12,"sequence","","",639,null],[12,"length","","",639,null],[12,"start_id","","",639,null],[12,"count","","",639,null],[3,"xcb_xc_misc_get_xid_list_request_t","","",null,null],[12,"major_opcode","","",640,null],[12,"minor_opcode","","",640,null],[12,"length","","",640,null],[12,"count","","",640,null],[3,"xcb_xc_misc_get_xid_list_cookie_t","","",null,null],[3,"xcb_xc_misc_get_xid_list_reply_t","","",null,null],[12,"response_type","","",641,null],[12,"pad0","","",641,null],[12,"sequence","","",641,null],[12,"length","","",641,null],[12,"ids_len","","",641,null],[12,"pad1","","",641,null],[7,"xcb_xc_misc_id","","",null,null],[5,"xcb_xc_misc_get_version_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_xc_misc_get_version","","",null,null],[5,"xcb_xc_misc_get_version_unchecked","","",null,null],[5,"xcb_xc_misc_get_xid_range_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_xc_misc_get_xid_range","","",null,null],[5,"xcb_xc_misc_get_xid_range_unchecked","","",null,null],[5,"xcb_xc_misc_get_xid_list_ids","","",null,null],[5,"xcb_xc_misc_get_xid_list_ids_length","","",null,null],[5,"xcb_xc_misc_get_xid_list_ids_end","","",null,null],[5,"xcb_xc_misc_get_xid_list_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_xc_misc_get_xid_list","","",null,null],[5,"xcb_xc_misc_get_xid_list_unchecked","","",null,null],[17,"XCB_XC_MISC_MAJOR_VERSION","","",null,null],[17,"XCB_XC_MISC_MINOR_VERSION","","",null,null],[17,"XCB_XC_MISC_GET_VERSION","","",null,null],[17,"XCB_XC_MISC_GET_XID_RANGE","","",null,null],[17,"XCB_XC_MISC_GET_XID_LIST","","",null,null],[11,"clone","","",636,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xc_misc_get_version_request_t"}}],[11,"clone","","",642,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xc_misc_get_version_cookie_t"}}],[11,"clone","","",637,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xc_misc_get_version_reply_t"}}],[11,"clone","","",638,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xc_misc_get_xid_range_request_t"}}],[11,"clone","","",643,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xc_misc_get_xid_range_cookie_t"}}],[11,"clone","","",639,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xc_misc_get_xid_range_reply_t"}}],[11,"clone","","",640,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xc_misc_get_xid_list_request_t"}}],[11,"clone","","",644,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xc_misc_get_xid_list_cookie_t"}}],[0,"xkb","xcb::ffi","",null,null],[3,"xcb_xkb_device_spec_iterator_t","xcb::ffi::xkb","",null,null],[12,"data","","",645,null],[12,"rem","","",645,null],[12,"index","","",645,null],[3,"xcb_xkb_led_class_spec_iterator_t","","",null,null],[12,"data","","",646,null],[12,"rem","","",646,null],[12,"index","","",646,null],[3,"xcb_xkb_bell_class_spec_iterator_t","","",null,null],[12,"data","","",647,null],[12,"rem","","",647,null],[12,"index","","",647,null],[3,"xcb_xkb_id_spec_iterator_t","","",null,null],[12,"data","","",648,null],[12,"rem","","",648,null],[12,"index","","",648,null],[3,"xcb_xkb_indicator_map_t","","",null,null],[12,"flags","","",649,null],[12,"whichGroups","","",649,null],[12,"groups","","",649,null],[12,"whichMods","","",649,null],[12,"mods","","",649,null],[12,"realMods","","",649,null],[12,"vmods","","",649,null],[12,"ctrls","","",649,null],[3,"xcb_xkb_indicator_map_iterator_t","","",null,null],[12,"data","","",650,null],[12,"rem","","",650,null],[12,"index","","",650,null],[3,"xcb_xkb_mod_def_t","","",null,null],[12,"mask","","",651,null],[12,"realMods","","",651,null],[12,"vmods","","",651,null],[3,"xcb_xkb_mod_def_iterator_t","","",null,null],[12,"data","","",652,null],[12,"rem","","",652,null],[12,"index","","",652,null],[3,"xcb_xkb_key_name_t","","",null,null],[12,"name","","",653,null],[3,"xcb_xkb_key_name_iterator_t","","",null,null],[12,"data","","",654,null],[12,"rem","","",654,null],[12,"index","","",654,null],[3,"xcb_xkb_key_alias_t","","",null,null],[12,"real","","",655,null],[12,"alias","","",655,null],[3,"xcb_xkb_key_alias_iterator_t","","",null,null],[12,"data","","",656,null],[12,"rem","","",656,null],[12,"index","","",656,null],[3,"xcb_xkb_counted_string_16_t","","",null,null],[12,"length","","",657,null],[3,"xcb_xkb_counted_string_16_iterator_t","","",null,null],[12,"data","","",658,null],[12,"rem","","",658,null],[12,"index","","",658,null],[3,"xcb_xkb_kt_map_entry_t","","",null,null],[12,"active","","",659,null],[12,"mods_mask","","",659,null],[12,"level","","",659,null],[12,"mods_mods","","",659,null],[12,"mods_vmods","","",659,null],[12,"pad0","","",659,null],[3,"xcb_xkb_kt_map_entry_iterator_t","","",null,null],[12,"data","","",660,null],[12,"rem","","",660,null],[12,"index","","",660,null],[3,"xcb_xkb_key_type_t","","",null,null],[12,"mods_mask","","",661,null],[12,"mods_mods","","",661,null],[12,"mods_vmods","","",661,null],[12,"numLevels","","",661,null],[12,"nMapEntries","","",661,null],[12,"hasPreserve","","",661,null],[12,"pad0","","",661,null],[3,"xcb_xkb_key_type_iterator_t","","",null,null],[12,"data","","",662,null],[12,"rem","","",662,null],[12,"index","","",662,null],[3,"xcb_xkb_key_sym_map_t","","",null,null],[12,"kt_index","","",663,null],[12,"groupInfo","","",663,null],[12,"width","","",663,null],[12,"nSyms","","",663,null],[3,"xcb_xkb_key_sym_map_iterator_t","","",null,null],[12,"data","","",664,null],[12,"rem","","",664,null],[12,"index","","",664,null],[3,"xcb_xkb_common_behavior_t","","",null,null],[12,"type_","","",665,null],[12,"data","","",665,null],[3,"xcb_xkb_common_behavior_iterator_t","","",null,null],[12,"data","","",666,null],[12,"rem","","",666,null],[12,"index","","",666,null],[3,"xcb_xkb_default_behavior_t","","",null,null],[12,"type_","","",667,null],[12,"pad0","","",667,null],[3,"xcb_xkb_default_behavior_iterator_t","","",null,null],[12,"data","","",668,null],[12,"rem","","",668,null],[12,"index","","",668,null],[3,"xcb_xkb_lock_behavior_t","","",null,null],[12,"type_","","",669,null],[12,"pad0","","",669,null],[3,"xcb_xkb_lock_behavior_iterator_t","","",null,null],[12,"data","","",670,null],[12,"rem","","",670,null],[12,"index","","",670,null],[3,"xcb_xkb_radio_group_behavior_t","","",null,null],[12,"type_","","",671,null],[12,"group","","",671,null],[3,"xcb_xkb_radio_group_behavior_iterator_t","","",null,null],[12,"data","","",672,null],[12,"rem","","",672,null],[12,"index","","",672,null],[3,"xcb_xkb_overlay_behavior_t","","",null,null],[12,"type_","","",673,null],[12,"key","","",673,null],[3,"xcb_xkb_overlay_behavior_iterator_t","","",null,null],[12,"data","","",674,null],[12,"rem","","",674,null],[12,"index","","",674,null],[3,"xcb_xkb_permament_lock_behavior_t","","",null,null],[12,"type_","","",675,null],[12,"pad0","","",675,null],[3,"xcb_xkb_permament_lock_behavior_iterator_t","","",null,null],[12,"data","","",676,null],[12,"rem","","",676,null],[12,"index","","",676,null],[3,"xcb_xkb_permament_radio_group_behavior_t","","",null,null],[12,"type_","","",677,null],[12,"group","","",677,null],[3,"xcb_xkb_permament_radio_group_behavior_iterator_t","","",null,null],[12,"data","","",678,null],[12,"rem","","",678,null],[12,"index","","",678,null],[3,"xcb_xkb_permament_overlay_behavior_t","","",null,null],[12,"type_","","",679,null],[12,"key","","",679,null],[3,"xcb_xkb_permament_overlay_behavior_iterator_t","","",null,null],[12,"data","","",680,null],[12,"rem","","",680,null],[12,"index","","",680,null],[3,"xcb_xkb_behavior_t","","",null,null],[12,"data","","",681,null],[3,"xcb_xkb_behavior_iterator_t","","",null,null],[12,"data","","",682,null],[12,"rem","","",682,null],[12,"index","","",682,null],[3,"xcb_xkb_set_behavior_t","","",null,null],[12,"keycode","","",683,null],[12,"behavior","","",683,null],[12,"pad0","","",683,null],[3,"xcb_xkb_set_behavior_iterator_t","","",null,null],[12,"data","","",684,null],[12,"rem","","",684,null],[12,"index","","",684,null],[3,"xcb_xkb_set_explicit_t","","",null,null],[12,"keycode","","",685,null],[12,"explicit","","",685,null],[3,"xcb_xkb_set_explicit_iterator_t","","",null,null],[12,"data","","",686,null],[12,"rem","","",686,null],[12,"index","","",686,null],[3,"xcb_xkb_key_mod_map_t","","",null,null],[12,"keycode","","",687,null],[12,"mods","","",687,null],[3,"xcb_xkb_key_mod_map_iterator_t","","",null,null],[12,"data","","",688,null],[12,"rem","","",688,null],[12,"index","","",688,null],[3,"xcb_xkb_key_v_mod_map_t","","",null,null],[12,"keycode","","",689,null],[12,"pad0","","",689,null],[12,"vmods","","",689,null],[3,"xcb_xkb_key_v_mod_map_iterator_t","","",null,null],[12,"data","","",690,null],[12,"rem","","",690,null],[12,"index","","",690,null],[3,"xcb_xkb_kt_set_map_entry_t","","",null,null],[12,"level","","",691,null],[12,"realMods","","",691,null],[12,"virtualMods","","",691,null],[3,"xcb_xkb_kt_set_map_entry_iterator_t","","",null,null],[12,"data","","",692,null],[12,"rem","","",692,null],[12,"index","","",692,null],[3,"xcb_xkb_set_key_type_t","","",null,null],[12,"mask","","",693,null],[12,"realMods","","",693,null],[12,"virtualMods","","",693,null],[12,"numLevels","","",693,null],[12,"nMapEntries","","",693,null],[12,"preserve","","",693,null],[12,"pad0","","",693,null],[3,"xcb_xkb_set_key_type_iterator_t","","",null,null],[12,"data","","",694,null],[12,"rem","","",694,null],[12,"index","","",694,null],[3,"xcb_xkb_string8_iterator_t","","",null,null],[12,"data","","",695,null],[12,"rem","","",695,null],[12,"index","","",695,null],[3,"xcb_xkb_outline_t","","",null,null],[12,"nPoints","","",696,null],[12,"cornerRadius","","",696,null],[12,"pad0","","",696,null],[3,"xcb_xkb_outline_iterator_t","","",null,null],[12,"data","","",697,null],[12,"rem","","",697,null],[12,"index","","",697,null],[3,"xcb_xkb_shape_t","","",null,null],[12,"name","","",698,null],[12,"nOutlines","","",698,null],[12,"primaryNdx","","",698,null],[12,"approxNdx","","",698,null],[12,"pad0","","",698,null],[3,"xcb_xkb_shape_iterator_t","","",null,null],[12,"data","","",699,null],[12,"rem","","",699,null],[12,"index","","",699,null],[3,"xcb_xkb_key_t","","",null,null],[12,"name","","",700,null],[12,"gap","","",700,null],[12,"shapeNdx","","",700,null],[12,"colorNdx","","",700,null],[3,"xcb_xkb_key_iterator_t","","",null,null],[12,"data","","",701,null],[12,"rem","","",701,null],[12,"index","","",701,null],[3,"xcb_xkb_overlay_key_t","","",null,null],[12,"over","","",702,null],[12,"under","","",702,null],[3,"xcb_xkb_overlay_key_iterator_t","","",null,null],[12,"data","","",703,null],[12,"rem","","",703,null],[12,"index","","",703,null],[3,"xcb_xkb_overlay_row_t","","",null,null],[12,"rowUnder","","",704,null],[12,"nKeys","","",704,null],[12,"pad0","","",704,null],[3,"xcb_xkb_overlay_row_iterator_t","","",null,null],[12,"data","","",705,null],[12,"rem","","",705,null],[12,"index","","",705,null],[3,"xcb_xkb_overlay_t","","",null,null],[12,"name","","",706,null],[12,"nRows","","",706,null],[12,"pad0","","",706,null],[3,"xcb_xkb_overlay_iterator_t","","",null,null],[12,"data","","",707,null],[12,"rem","","",707,null],[12,"index","","",707,null],[3,"xcb_xkb_row_t","","",null,null],[12,"top","","",708,null],[12,"left","","",708,null],[12,"nKeys","","",708,null],[12,"vertical","","",708,null],[12,"pad0","","",708,null],[3,"xcb_xkb_row_iterator_t","","",null,null],[12,"data","","",709,null],[12,"rem","","",709,null],[12,"index","","",709,null],[3,"xcb_xkb_listing_t","","",null,null],[12,"flags","","",710,null],[12,"length","","",710,null],[3,"xcb_xkb_listing_iterator_t","","",null,null],[12,"data","","",711,null],[12,"rem","","",711,null],[12,"index","","",711,null],[3,"xcb_xkb_device_led_info_t","","",null,null],[12,"ledClass","","",712,null],[12,"ledID","","",712,null],[12,"namesPresent","","",712,null],[12,"mapsPresent","","",712,null],[12,"physIndicators","","",712,null],[12,"state","","",712,null],[3,"xcb_xkb_device_led_info_iterator_t","","",null,null],[12,"data","","",713,null],[12,"rem","","",713,null],[12,"index","","",713,null],[3,"xcb_xkb_keyboard_error_t","","",null,null],[12,"response_type","","",714,null],[12,"error_code","","",714,null],[12,"sequence","","",714,null],[12,"value","","",714,null],[12,"minorOpcode","","",714,null],[12,"majorOpcode","","",714,null],[12,"pad0","","",714,null],[3,"xcb_xkb_sa_no_action_t","","",null,null],[12,"type_","","",715,null],[12,"pad0","","",715,null],[3,"xcb_xkb_sa_no_action_iterator_t","","",null,null],[12,"data","","",716,null],[12,"rem","","",716,null],[12,"index","","",716,null],[3,"xcb_xkb_sa_set_mods_t","","",null,null],[12,"type_","","",717,null],[12,"flags","","",717,null],[12,"mask","","",717,null],[12,"realMods","","",717,null],[12,"vmodsHigh","","",717,null],[12,"vmodsLow","","",717,null],[12,"pad0","","",717,null],[3,"xcb_xkb_sa_set_mods_iterator_t","","",null,null],[12,"data","","",718,null],[12,"rem","","",718,null],[12,"index","","",718,null],[3,"xcb_xkb_sa_latch_mods_t","","",null,null],[12,"type_","","",719,null],[12,"flags","","",719,null],[12,"mask","","",719,null],[12,"realMods","","",719,null],[12,"vmodsHigh","","",719,null],[12,"vmodsLow","","",719,null],[12,"pad0","","",719,null],[3,"xcb_xkb_sa_latch_mods_iterator_t","","",null,null],[12,"data","","",720,null],[12,"rem","","",720,null],[12,"index","","",720,null],[3,"xcb_xkb_sa_lock_mods_t","","",null,null],[12,"type_","","",721,null],[12,"flags","","",721,null],[12,"mask","","",721,null],[12,"realMods","","",721,null],[12,"vmodsHigh","","",721,null],[12,"vmodsLow","","",721,null],[12,"pad0","","",721,null],[3,"xcb_xkb_sa_lock_mods_iterator_t","","",null,null],[12,"data","","",722,null],[12,"rem","","",722,null],[12,"index","","",722,null],[3,"xcb_xkb_sa_set_group_t","","",null,null],[12,"type_","","",723,null],[12,"flags","","",723,null],[12,"group","","",723,null],[12,"pad0","","",723,null],[3,"xcb_xkb_sa_set_group_iterator_t","","",null,null],[12,"data","","",724,null],[12,"rem","","",724,null],[12,"index","","",724,null],[3,"xcb_xkb_sa_latch_group_t","","",null,null],[12,"type_","","",725,null],[12,"flags","","",725,null],[12,"group","","",725,null],[12,"pad0","","",725,null],[3,"xcb_xkb_sa_latch_group_iterator_t","","",null,null],[12,"data","","",726,null],[12,"rem","","",726,null],[12,"index","","",726,null],[3,"xcb_xkb_sa_lock_group_t","","",null,null],[12,"type_","","",727,null],[12,"flags","","",727,null],[12,"group","","",727,null],[12,"pad0","","",727,null],[3,"xcb_xkb_sa_lock_group_iterator_t","","",null,null],[12,"data","","",728,null],[12,"rem","","",728,null],[12,"index","","",728,null],[3,"xcb_xkb_sa_move_ptr_t","","",null,null],[12,"type_","","",729,null],[12,"flags","","",729,null],[12,"xHigh","","",729,null],[12,"xLow","","",729,null],[12,"yHigh","","",729,null],[12,"yLow","","",729,null],[12,"pad0","","",729,null],[3,"xcb_xkb_sa_move_ptr_iterator_t","","",null,null],[12,"data","","",730,null],[12,"rem","","",730,null],[12,"index","","",730,null],[3,"xcb_xkb_sa_ptr_btn_t","","",null,null],[12,"type_","","",731,null],[12,"flags","","",731,null],[12,"count","","",731,null],[12,"button","","",731,null],[12,"pad0","","",731,null],[3,"xcb_xkb_sa_ptr_btn_iterator_t","","",null,null],[12,"data","","",732,null],[12,"rem","","",732,null],[12,"index","","",732,null],[3,"xcb_xkb_sa_lock_ptr_btn_t","","",null,null],[12,"type_","","",733,null],[12,"flags","","",733,null],[12,"pad0","","",733,null],[12,"button","","",733,null],[12,"pad1","","",733,null],[3,"xcb_xkb_sa_lock_ptr_btn_iterator_t","","",null,null],[12,"data","","",734,null],[12,"rem","","",734,null],[12,"index","","",734,null],[3,"xcb_xkb_sa_set_ptr_dflt_t","","",null,null],[12,"type_","","",735,null],[12,"flags","","",735,null],[12,"affect","","",735,null],[12,"value","","",735,null],[12,"pad0","","",735,null],[3,"xcb_xkb_sa_set_ptr_dflt_iterator_t","","",null,null],[12,"data","","",736,null],[12,"rem","","",736,null],[12,"index","","",736,null],[3,"xcb_xkb_sa_iso_lock_t","","",null,null],[12,"type_","","",737,null],[12,"flags","","",737,null],[12,"mask","","",737,null],[12,"realMods","","",737,null],[12,"group","","",737,null],[12,"affect","","",737,null],[12,"vmodsHigh","","",737,null],[12,"vmodsLow","","",737,null],[3,"xcb_xkb_sa_iso_lock_iterator_t","","",null,null],[12,"data","","",738,null],[12,"rem","","",738,null],[12,"index","","",738,null],[3,"xcb_xkb_sa_terminate_t","","",null,null],[12,"type_","","",739,null],[12,"pad0","","",739,null],[3,"xcb_xkb_sa_terminate_iterator_t","","",null,null],[12,"data","","",740,null],[12,"rem","","",740,null],[12,"index","","",740,null],[3,"xcb_xkb_sa_switch_screen_t","","",null,null],[12,"type_","","",741,null],[12,"flags","","",741,null],[12,"newScreen","","",741,null],[12,"pad0","","",741,null],[3,"xcb_xkb_sa_switch_screen_iterator_t","","",null,null],[12,"data","","",742,null],[12,"rem","","",742,null],[12,"index","","",742,null],[3,"xcb_xkb_sa_set_controls_t","","",null,null],[12,"type_","","",743,null],[12,"pad0","","",743,null],[12,"boolCtrlsHigh","","",743,null],[12,"boolCtrlsLow","","",743,null],[12,"pad1","","",743,null],[3,"xcb_xkb_sa_set_controls_iterator_t","","",null,null],[12,"data","","",744,null],[12,"rem","","",744,null],[12,"index","","",744,null],[3,"xcb_xkb_sa_lock_controls_t","","",null,null],[12,"type_","","",745,null],[12,"pad0","","",745,null],[12,"boolCtrlsHigh","","",745,null],[12,"boolCtrlsLow","","",745,null],[12,"pad1","","",745,null],[3,"xcb_xkb_sa_lock_controls_iterator_t","","",null,null],[12,"data","","",746,null],[12,"rem","","",746,null],[12,"index","","",746,null],[3,"xcb_xkb_sa_action_message_t","","",null,null],[12,"type_","","",747,null],[12,"flags","","",747,null],[12,"message","","",747,null],[3,"xcb_xkb_sa_action_message_iterator_t","","",null,null],[12,"data","","",748,null],[12,"rem","","",748,null],[12,"index","","",748,null],[3,"xcb_xkb_sa_redirect_key_t","","",null,null],[12,"type_","","",749,null],[12,"newkey","","",749,null],[12,"mask","","",749,null],[12,"realModifiers","","",749,null],[12,"vmodsMaskHigh","","",749,null],[12,"vmodsMaskLow","","",749,null],[12,"vmodsHigh","","",749,null],[12,"vmodsLow","","",749,null],[3,"xcb_xkb_sa_redirect_key_iterator_t","","",null,null],[12,"data","","",750,null],[12,"rem","","",750,null],[12,"index","","",750,null],[3,"xcb_xkb_sa_device_btn_t","","",null,null],[12,"type_","","",751,null],[12,"flags","","",751,null],[12,"count","","",751,null],[12,"button","","",751,null],[12,"device","","",751,null],[12,"pad0","","",751,null],[3,"xcb_xkb_sa_device_btn_iterator_t","","",null,null],[12,"data","","",752,null],[12,"rem","","",752,null],[12,"index","","",752,null],[3,"xcb_xkb_sa_lock_device_btn_t","","",null,null],[12,"type_","","",753,null],[12,"flags","","",753,null],[12,"pad0","","",753,null],[12,"button","","",753,null],[12,"device","","",753,null],[12,"pad1","","",753,null],[3,"xcb_xkb_sa_lock_device_btn_iterator_t","","",null,null],[12,"data","","",754,null],[12,"rem","","",754,null],[12,"index","","",754,null],[3,"xcb_xkb_sa_device_valuator_t","","",null,null],[12,"type_","","",755,null],[12,"device","","",755,null],[12,"val1what","","",755,null],[12,"val1index","","",755,null],[12,"val1value","","",755,null],[12,"val2what","","",755,null],[12,"val2index","","",755,null],[12,"val2value","","",755,null],[3,"xcb_xkb_sa_device_valuator_iterator_t","","",null,null],[12,"data","","",756,null],[12,"rem","","",756,null],[12,"index","","",756,null],[3,"xcb_xkb_si_action_t","","",null,null],[12,"type_","","",757,null],[12,"data","","",757,null],[3,"xcb_xkb_si_action_iterator_t","","",null,null],[12,"data","","",758,null],[12,"rem","","",758,null],[12,"index","","",758,null],[3,"xcb_xkb_sym_interpret_t","","",null,null],[12,"sym","","",759,null],[12,"mods","","",759,null],[12,"match_","","",759,null],[12,"virtualMod","","",759,null],[12,"flags","","",759,null],[12,"action","","",759,null],[3,"xcb_xkb_sym_interpret_iterator_t","","",null,null],[12,"data","","",760,null],[12,"rem","","",760,null],[12,"index","","",760,null],[3,"xcb_xkb_action_t","","",null,null],[12,"data","","",761,null],[3,"xcb_xkb_action_iterator_t","","",null,null],[12,"data","","",762,null],[12,"rem","","",762,null],[12,"index","","",762,null],[3,"xcb_xkb_use_extension_request_t","","",null,null],[12,"major_opcode","","",763,null],[12,"minor_opcode","","",763,null],[12,"length","","",763,null],[12,"wantedMajor","","",763,null],[12,"wantedMinor","","",763,null],[3,"xcb_xkb_use_extension_cookie_t","","",null,null],[3,"xcb_xkb_use_extension_reply_t","","",null,null],[12,"response_type","","",764,null],[12,"supported","","",764,null],[12,"sequence","","",764,null],[12,"length","","",764,null],[12,"serverMajor","","",764,null],[12,"serverMinor","","",764,null],[12,"pad0","","",764,null],[3,"xcb_xkb_select_events_details_t","","",null,null],[12,"affectNewKeyboard","","",765,null],[12,"newKeyboardDetails","","",765,null],[12,"affectState","","",765,null],[12,"stateDetails","","",765,null],[12,"affectCtrls","","",765,null],[12,"ctrlDetails","","",765,null],[12,"affectIndicatorState","","",765,null],[12,"indicatorStateDetails","","",765,null],[12,"affectIndicatorMap","","",765,null],[12,"indicatorMapDetails","","",765,null],[12,"affectNames","","",765,null],[12,"namesDetails","","",765,null],[12,"affectCompat","","",765,null],[12,"compatDetails","","",765,null],[12,"affectBell","","",765,null],[12,"bellDetails","","",765,null],[12,"affectMsgDetails","","",765,null],[12,"msgDetails","","",765,null],[12,"affectAccessX","","",765,null],[12,"accessXDetails","","",765,null],[12,"affectExtDev","","",765,null],[12,"extdevDetails","","",765,null],[3,"xcb_xkb_select_events_request_t","","",null,null],[12,"major_opcode","","",766,null],[12,"minor_opcode","","",766,null],[12,"length","","",766,null],[12,"deviceSpec","","",766,null],[12,"affectWhich","","",766,null],[12,"clear","","",766,null],[12,"selectAll","","",766,null],[12,"affectMap","","",766,null],[12,"map","","",766,null],[3,"xcb_xkb_bell_request_t","","",null,null],[12,"major_opcode","","",767,null],[12,"minor_opcode","","",767,null],[12,"length","","",767,null],[12,"deviceSpec","","",767,null],[12,"bellClass","","",767,null],[12,"bellID","","",767,null],[12,"percent","","",767,null],[12,"forceSound","","",767,null],[12,"eventOnly","","",767,null],[12,"pad0","","",767,null],[12,"pitch","","",767,null],[12,"duration","","",767,null],[12,"pad1","","",767,null],[12,"name","","",767,null],[12,"window","","",767,null],[3,"xcb_xkb_get_state_request_t","","",null,null],[12,"major_opcode","","",768,null],[12,"minor_opcode","","",768,null],[12,"length","","",768,null],[12,"deviceSpec","","",768,null],[12,"pad0","","",768,null],[3,"xcb_xkb_get_state_cookie_t","","",null,null],[3,"xcb_xkb_get_state_reply_t","","",null,null],[12,"response_type","","",769,null],[12,"deviceID","","",769,null],[12,"sequence","","",769,null],[12,"length","","",769,null],[12,"mods","","",769,null],[12,"baseMods","","",769,null],[12,"latchedMods","","",769,null],[12,"lockedMods","","",769,null],[12,"group","","",769,null],[12,"lockedGroup","","",769,null],[12,"baseGroup","","",769,null],[12,"latchedGroup","","",769,null],[12,"compatState","","",769,null],[12,"grabMods","","",769,null],[12,"compatGrabMods","","",769,null],[12,"lookupMods","","",769,null],[12,"compatLookupMods","","",769,null],[12,"pad0","","",769,null],[12,"ptrBtnState","","",769,null],[12,"pad1","","",769,null],[3,"xcb_xkb_latch_lock_state_request_t","","",null,null],[12,"major_opcode","","",770,null],[12,"minor_opcode","","",770,null],[12,"length","","",770,null],[12,"deviceSpec","","",770,null],[12,"affectModLocks","","",770,null],[12,"modLocks","","",770,null],[12,"lockGroup","","",770,null],[12,"groupLock","","",770,null],[12,"affectModLatches","","",770,null],[12,"pad0","","",770,null],[12,"pad1","","",770,null],[12,"latchGroup","","",770,null],[12,"groupLatch","","",770,null],[3,"xcb_xkb_get_controls_request_t","","",null,null],[12,"major_opcode","","",771,null],[12,"minor_opcode","","",771,null],[12,"length","","",771,null],[12,"deviceSpec","","",771,null],[12,"pad0","","",771,null],[3,"xcb_xkb_get_controls_cookie_t","","",null,null],[3,"xcb_xkb_get_controls_reply_t","","",null,null],[12,"response_type","","",772,null],[12,"deviceID","","",772,null],[12,"sequence","","",772,null],[12,"length","","",772,null],[12,"mouseKeysDfltBtn","","",772,null],[12,"numGroups","","",772,null],[12,"groupsWrap","","",772,null],[12,"internalModsMask","","",772,null],[12,"ignoreLockModsMask","","",772,null],[12,"internalModsRealMods","","",772,null],[12,"ignoreLockModsRealMods","","",772,null],[12,"pad0","","",772,null],[12,"internalModsVmods","","",772,null],[12,"ignoreLockModsVmods","","",772,null],[12,"repeatDelay","","",772,null],[12,"repeatInterval","","",772,null],[12,"slowKeysDelay","","",772,null],[12,"debounceDelay","","",772,null],[12,"mouseKeysDelay","","",772,null],[12,"mouseKeysInterval","","",772,null],[12,"mouseKeysTimeToMax","","",772,null],[12,"mouseKeysMaxSpeed","","",772,null],[12,"mouseKeysCurve","","",772,null],[12,"accessXOption","","",772,null],[12,"accessXTimeout","","",772,null],[12,"accessXTimeoutOptionsMask","","",772,null],[12,"accessXTimeoutOptionsValues","","",772,null],[12,"pad1","","",772,null],[12,"accessXTimeoutMask","","",772,null],[12,"accessXTimeoutValues","","",772,null],[12,"enabledControls","","",772,null],[12,"perKeyRepeat","","",772,null],[3,"xcb_xkb_set_controls_request_t","","",null,null],[12,"major_opcode","","",773,null],[12,"minor_opcode","","",773,null],[12,"length","","",773,null],[12,"deviceSpec","","",773,null],[12,"affectInternalRealMods","","",773,null],[12,"internalRealMods","","",773,null],[12,"affectIgnoreLockRealMods","","",773,null],[12,"ignoreLockRealMods","","",773,null],[12,"affectInternalVirtualMods","","",773,null],[12,"internalVirtualMods","","",773,null],[12,"affectIgnoreLockVirtualMods","","",773,null],[12,"ignoreLockVirtualMods","","",773,null],[12,"mouseKeysDfltBtn","","",773,null],[12,"groupsWrap","","",773,null],[12,"accessXOptions","","",773,null],[12,"pad0","","",773,null],[12,"affectEnabledControls","","",773,null],[12,"enabledControls","","",773,null],[12,"changeControls","","",773,null],[12,"repeatDelay","","",773,null],[12,"repeatInterval","","",773,null],[12,"slowKeysDelay","","",773,null],[12,"debounceDelay","","",773,null],[12,"mouseKeysDelay","","",773,null],[12,"mouseKeysInterval","","",773,null],[12,"mouseKeysTimeToMax","","",773,null],[12,"mouseKeysMaxSpeed","","",773,null],[12,"mouseKeysCurve","","",773,null],[12,"accessXTimeout","","",773,null],[12,"accessXTimeoutMask","","",773,null],[12,"accessXTimeoutValues","","",773,null],[12,"accessXTimeoutOptionsMask","","",773,null],[12,"accessXTimeoutOptionsValues","","",773,null],[12,"perKeyRepeat","","",773,null],[3,"xcb_xkb_get_map_request_t","","",null,null],[12,"major_opcode","","",774,null],[12,"minor_opcode","","",774,null],[12,"length","","",774,null],[12,"deviceSpec","","",774,null],[12,"full","","",774,null],[12,"partial","","",774,null],[12,"firstType","","",774,null],[12,"nTypes","","",774,null],[12,"firstKeySym","","",774,null],[12,"nKeySyms","","",774,null],[12,"firstKeyAction","","",774,null],[12,"nKeyActions","","",774,null],[12,"firstKeyBehavior","","",774,null],[12,"nKeyBehaviors","","",774,null],[12,"virtualMods","","",774,null],[12,"firstKeyExplicit","","",774,null],[12,"nKeyExplicit","","",774,null],[12,"firstModMapKey","","",774,null],[12,"nModMapKeys","","",774,null],[12,"firstVModMapKey","","",774,null],[12,"nVModMapKeys","","",774,null],[12,"pad0","","",774,null],[3,"xcb_xkb_get_map_cookie_t","","",null,null],[3,"xcb_xkb_get_map_map_t","","",null,null],[12,"types_rtrn","","",775,null],[12,"syms_rtrn","","",775,null],[12,"acts_rtrn_count","","",775,null],[12,"pad2","","",775,null],[12,"acts_rtrn_acts","","",775,null],[12,"behaviors_rtrn","","",775,null],[12,"vmods_rtrn","","",775,null],[12,"pad3","","",775,null],[12,"explicit_rtrn","","",775,null],[12,"pad4","","",775,null],[12,"modmap_rtrn","","",775,null],[12,"pad5","","",775,null],[12,"vmodmap_rtrn","","",775,null],[3,"xcb_xkb_get_map_reply_t","","",null,null],[12,"response_type","","",776,null],[12,"deviceID","","",776,null],[12,"sequence","","",776,null],[12,"length","","",776,null],[12,"pad0","","",776,null],[12,"minKeyCode","","",776,null],[12,"maxKeyCode","","",776,null],[12,"present","","",776,null],[12,"firstType","","",776,null],[12,"nTypes","","",776,null],[12,"totalTypes","","",776,null],[12,"firstKeySym","","",776,null],[12,"totalSyms","","",776,null],[12,"nKeySyms","","",776,null],[12,"firstKeyAction","","",776,null],[12,"totalActions","","",776,null],[12,"nKeyActions","","",776,null],[12,"firstKeyBehavior","","",776,null],[12,"nKeyBehaviors","","",776,null],[12,"totalKeyBehaviors","","",776,null],[12,"firstKeyExplicit","","",776,null],[12,"nKeyExplicit","","",776,null],[12,"totalKeyExplicit","","",776,null],[12,"firstModMapKey","","",776,null],[12,"nModMapKeys","","",776,null],[12,"totalModMapKeys","","",776,null],[12,"firstVModMapKey","","",776,null],[12,"nVModMapKeys","","",776,null],[12,"totalVModMapKeys","","",776,null],[12,"pad1","","",776,null],[12,"virtualMods","","",776,null],[3,"xcb_xkb_set_map_values_t","","",null,null],[12,"types","","",777,null],[12,"syms","","",777,null],[12,"actionsCount","","",777,null],[12,"actions","","",777,null],[12,"behaviors","","",777,null],[12,"vmods","","",777,null],[12,"explicit","","",777,null],[12,"modmap","","",777,null],[12,"vmodmap","","",777,null],[3,"xcb_xkb_set_map_request_t","","",null,null],[12,"major_opcode","","",778,null],[12,"minor_opcode","","",778,null],[12,"length","","",778,null],[12,"deviceSpec","","",778,null],[12,"present","","",778,null],[12,"flags","","",778,null],[12,"minKeyCode","","",778,null],[12,"maxKeyCode","","",778,null],[12,"firstType","","",778,null],[12,"nTypes","","",778,null],[12,"firstKeySym","","",778,null],[12,"nKeySyms","","",778,null],[12,"totalSyms","","",778,null],[12,"firstKeyAction","","",778,null],[12,"nKeyActions","","",778,null],[12,"totalActions","","",778,null],[12,"firstKeyBehavior","","",778,null],[12,"nKeyBehaviors","","",778,null],[12,"totalKeyBehaviors","","",778,null],[12,"firstKeyExplicit","","",778,null],[12,"nKeyExplicit","","",778,null],[12,"totalKeyExplicit","","",778,null],[12,"firstModMapKey","","",778,null],[12,"nModMapKeys","","",778,null],[12,"totalModMapKeys","","",778,null],[12,"firstVModMapKey","","",778,null],[12,"nVModMapKeys","","",778,null],[12,"totalVModMapKeys","","",778,null],[12,"virtualMods","","",778,null],[3,"xcb_xkb_get_compat_map_request_t","","",null,null],[12,"major_opcode","","",779,null],[12,"minor_opcode","","",779,null],[12,"length","","",779,null],[12,"deviceSpec","","",779,null],[12,"groups","","",779,null],[12,"getAllSI","","",779,null],[12,"firstSI","","",779,null],[12,"nSI","","",779,null],[3,"xcb_xkb_get_compat_map_cookie_t","","",null,null],[3,"xcb_xkb_get_compat_map_reply_t","","",null,null],[12,"response_type","","",780,null],[12,"deviceID","","",780,null],[12,"sequence","","",780,null],[12,"length","","",780,null],[12,"groupsRtrn","","",780,null],[12,"pad0","","",780,null],[12,"firstSIRtrn","","",780,null],[12,"nSIRtrn","","",780,null],[12,"nTotalSI","","",780,null],[12,"pad1","","",780,null],[3,"xcb_xkb_set_compat_map_request_t","","",null,null],[12,"major_opcode","","",781,null],[12,"minor_opcode","","",781,null],[12,"length","","",781,null],[12,"deviceSpec","","",781,null],[12,"pad0","","",781,null],[12,"recomputeActions","","",781,null],[12,"truncateSI","","",781,null],[12,"groups","","",781,null],[12,"firstSI","","",781,null],[12,"nSI","","",781,null],[12,"pad1","","",781,null],[3,"xcb_xkb_get_indicator_state_request_t","","",null,null],[12,"major_opcode","","",782,null],[12,"minor_opcode","","",782,null],[12,"length","","",782,null],[12,"deviceSpec","","",782,null],[12,"pad0","","",782,null],[3,"xcb_xkb_get_indicator_state_cookie_t","","",null,null],[3,"xcb_xkb_get_indicator_state_reply_t","","",null,null],[12,"response_type","","",783,null],[12,"deviceID","","",783,null],[12,"sequence","","",783,null],[12,"length","","",783,null],[12,"state","","",783,null],[12,"pad0","","",783,null],[3,"xcb_xkb_get_indicator_map_request_t","","",null,null],[12,"major_opcode","","",784,null],[12,"minor_opcode","","",784,null],[12,"length","","",784,null],[12,"deviceSpec","","",784,null],[12,"pad0","","",784,null],[12,"which","","",784,null],[3,"xcb_xkb_get_indicator_map_cookie_t","","",null,null],[3,"xcb_xkb_get_indicator_map_reply_t","","",null,null],[12,"response_type","","",785,null],[12,"deviceID","","",785,null],[12,"sequence","","",785,null],[12,"length","","",785,null],[12,"which","","",785,null],[12,"realIndicators","","",785,null],[12,"nIndicators","","",785,null],[12,"pad0","","",785,null],[3,"xcb_xkb_set_indicator_map_request_t","","",null,null],[12,"major_opcode","","",786,null],[12,"minor_opcode","","",786,null],[12,"length","","",786,null],[12,"deviceSpec","","",786,null],[12,"pad0","","",786,null],[12,"which","","",786,null],[3,"xcb_xkb_get_named_indicator_request_t","","",null,null],[12,"major_opcode","","",787,null],[12,"minor_opcode","","",787,null],[12,"length","","",787,null],[12,"deviceSpec","","",787,null],[12,"ledClass","","",787,null],[12,"ledID","","",787,null],[12,"pad0","","",787,null],[12,"indicator","","",787,null],[3,"xcb_xkb_get_named_indicator_cookie_t","","",null,null],[3,"xcb_xkb_get_named_indicator_reply_t","","",null,null],[12,"response_type","","",788,null],[12,"deviceID","","",788,null],[12,"sequence","","",788,null],[12,"length","","",788,null],[12,"indicator","","",788,null],[12,"found","","",788,null],[12,"on","","",788,null],[12,"realIndicator","","",788,null],[12,"ndx","","",788,null],[12,"map_flags","","",788,null],[12,"map_whichGroups","","",788,null],[12,"map_groups","","",788,null],[12,"map_whichMods","","",788,null],[12,"map_mods","","",788,null],[12,"map_realMods","","",788,null],[12,"map_vmod","","",788,null],[12,"map_ctrls","","",788,null],[12,"supported","","",788,null],[12,"pad0","","",788,null],[3,"xcb_xkb_set_named_indicator_request_t","","",null,null],[12,"major_opcode","","",789,null],[12,"minor_opcode","","",789,null],[12,"length","","",789,null],[12,"deviceSpec","","",789,null],[12,"ledClass","","",789,null],[12,"ledID","","",789,null],[12,"pad0","","",789,null],[12,"indicator","","",789,null],[12,"setState","","",789,null],[12,"on","","",789,null],[12,"setMap","","",789,null],[12,"createMap","","",789,null],[12,"pad1","","",789,null],[12,"map_flags","","",789,null],[12,"map_whichGroups","","",789,null],[12,"map_groups","","",789,null],[12,"map_whichMods","","",789,null],[12,"map_realMods","","",789,null],[12,"map_vmods","","",789,null],[12,"map_ctrls","","",789,null],[3,"xcb_xkb_get_names_request_t","","",null,null],[12,"major_opcode","","",790,null],[12,"minor_opcode","","",790,null],[12,"length","","",790,null],[12,"deviceSpec","","",790,null],[12,"pad0","","",790,null],[12,"which","","",790,null],[3,"xcb_xkb_get_names_cookie_t","","",null,null],[3,"xcb_xkb_get_names_value_list_t","","",null,null],[12,"keycodesName","","",791,null],[12,"geometryName","","",791,null],[12,"symbolsName","","",791,null],[12,"physSymbolsName","","",791,null],[12,"typesName","","",791,null],[12,"compatName","","",791,null],[12,"typeNames","","",791,null],[12,"nLevelsPerType","","",791,null],[12,"alignment_pad","","",791,null],[12,"ktLevelNames","","",791,null],[12,"indicatorNames","","",791,null],[12,"virtualModNames","","",791,null],[12,"groups","","",791,null],[12,"keyNames","","",791,null],[12,"keyAliases","","",791,null],[12,"radioGroupNames","","",791,null],[3,"xcb_xkb_get_names_reply_t","","",null,null],[12,"response_type","","",792,null],[12,"deviceID","","",792,null],[12,"sequence","","",792,null],[12,"length","","",792,null],[12,"which","","",792,null],[12,"minKeyCode","","",792,null],[12,"maxKeyCode","","",792,null],[12,"nTypes","","",792,null],[12,"groupNames","","",792,null],[12,"virtualMods","","",792,null],[12,"firstKey","","",792,null],[12,"nKeys","","",792,null],[12,"indicators","","",792,null],[12,"nRadioGroups","","",792,null],[12,"nKeyAliases","","",792,null],[12,"nKTLevels","","",792,null],[12,"pad0","","",792,null],[3,"xcb_xkb_set_names_values_t","","",null,null],[12,"keycodesName","","",793,null],[12,"geometryName","","",793,null],[12,"symbolsName","","",793,null],[12,"physSymbolsName","","",793,null],[12,"typesName","","",793,null],[12,"compatName","","",793,null],[12,"typeNames","","",793,null],[12,"nLevelsPerType","","",793,null],[12,"ktLevelNames","","",793,null],[12,"indicatorNames","","",793,null],[12,"virtualModNames","","",793,null],[12,"groups","","",793,null],[12,"keyNames","","",793,null],[12,"keyAliases","","",793,null],[12,"radioGroupNames","","",793,null],[3,"xcb_xkb_set_names_request_t","","",null,null],[12,"major_opcode","","",794,null],[12,"minor_opcode","","",794,null],[12,"length","","",794,null],[12,"deviceSpec","","",794,null],[12,"virtualMods","","",794,null],[12,"which","","",794,null],[12,"firstType","","",794,null],[12,"nTypes","","",794,null],[12,"firstKTLevelt","","",794,null],[12,"nKTLevels","","",794,null],[12,"indicators","","",794,null],[12,"groupNames","","",794,null],[12,"nRadioGroups","","",794,null],[12,"firstKey","","",794,null],[12,"nKeys","","",794,null],[12,"nKeyAliases","","",794,null],[12,"pad0","","",794,null],[12,"totalKTLevelNames","","",794,null],[3,"xcb_xkb_per_client_flags_request_t","","",null,null],[12,"major_opcode","","",795,null],[12,"minor_opcode","","",795,null],[12,"length","","",795,null],[12,"deviceSpec","","",795,null],[12,"pad0","","",795,null],[12,"change","","",795,null],[12,"value","","",795,null],[12,"ctrlsToChange","","",795,null],[12,"autoCtrls","","",795,null],[12,"autoCtrlsValues","","",795,null],[3,"xcb_xkb_per_client_flags_cookie_t","","",null,null],[3,"xcb_xkb_per_client_flags_reply_t","","",null,null],[12,"response_type","","",796,null],[12,"deviceID","","",796,null],[12,"sequence","","",796,null],[12,"length","","",796,null],[12,"supported","","",796,null],[12,"value","","",796,null],[12,"autoCtrls","","",796,null],[12,"autoCtrlsValues","","",796,null],[12,"pad0","","",796,null],[3,"xcb_xkb_list_components_request_t","","",null,null],[12,"major_opcode","","",797,null],[12,"minor_opcode","","",797,null],[12,"length","","",797,null],[12,"deviceSpec","","",797,null],[12,"maxNames","","",797,null],[3,"xcb_xkb_list_components_cookie_t","","",null,null],[3,"xcb_xkb_list_components_reply_t","","",null,null],[12,"response_type","","",798,null],[12,"deviceID","","",798,null],[12,"sequence","","",798,null],[12,"length","","",798,null],[12,"nKeymaps","","",798,null],[12,"nKeycodes","","",798,null],[12,"nTypes","","",798,null],[12,"nCompatMaps","","",798,null],[12,"nSymbols","","",798,null],[12,"nGeometries","","",798,null],[12,"extra","","",798,null],[12,"pad0","","",798,null],[3,"xcb_xkb_get_kbd_by_name_request_t","","",null,null],[12,"major_opcode","","",799,null],[12,"minor_opcode","","",799,null],[12,"length","","",799,null],[12,"deviceSpec","","",799,null],[12,"need","","",799,null],[12,"want","","",799,null],[12,"load","","",799,null],[12,"pad0","","",799,null],[3,"xcb_xkb_get_kbd_by_name_cookie_t","","",null,null],[3,"xcb_xkb_get_kbd_by_name_replies_t","","",null,null],[12,"types","","",800,null],[12,"compat_map","","",800,null],[12,"indicator_maps","","",800,null],[12,"key_names","","",800,null],[12,"geometry","","",800,null],[3,"_xcb_xkb_get_kbd_by_name_replies__types","","",null,null],[12,"getmap_type","","",801,null],[12,"typeDeviceID","","",801,null],[12,"getmap_sequence","","",801,null],[12,"getmap_length","","",801,null],[12,"pad1","","",801,null],[12,"typeMinKeyCode","","",801,null],[12,"typeMaxKeyCode","","",801,null],[12,"present","","",801,null],[12,"firstType","","",801,null],[12,"nTypes","","",801,null],[12,"totalTypes","","",801,null],[12,"firstKeySym","","",801,null],[12,"totalSyms","","",801,null],[12,"nKeySyms","","",801,null],[12,"firstKeyAction","","",801,null],[12,"totalActions","","",801,null],[12,"nKeyActions","","",801,null],[12,"firstKeyBehavior","","",801,null],[12,"nKeyBehaviors","","",801,null],[12,"totalKeyBehaviors","","",801,null],[12,"firstKeyExplicit","","",801,null],[12,"nKeyExplicit","","",801,null],[12,"totalKeyExplicit","","",801,null],[12,"firstModMapKey","","",801,null],[12,"nModMapKeys","","",801,null],[12,"totalModMapKeys","","",801,null],[12,"firstVModMapKey","","",801,null],[12,"nVModMapKeys","","",801,null],[12,"totalVModMapKeys","","",801,null],[12,"pad2","","",801,null],[12,"virtualMods","","",801,null],[12,"map","","",801,null],[3,"_xcb_xkb_get_kbd_by_name_replies__compat_map","","",null,null],[12,"compatmap_type","","",802,null],[12,"compatDeviceID","","",802,null],[12,"compatmap_sequence","","",802,null],[12,"compatmap_length","","",802,null],[12,"groupsRtrn","","",802,null],[12,"pad3","","",802,null],[12,"firstSIRtrn","","",802,null],[12,"nSIRtrn","","",802,null],[12,"nTotalSI","","",802,null],[12,"pad4","","",802,null],[12,"si_rtrn","","",802,null],[12,"group_rtrn","","",802,null],[3,"_xcb_xkb_get_kbd_by_name_replies__indicator_maps","","",null,null],[12,"indicatormap_type","","",803,null],[12,"indicatorDeviceID","","",803,null],[12,"indicatormap_sequence","","",803,null],[12,"indicatormap_length","","",803,null],[12,"which","","",803,null],[12,"realIndicators","","",803,null],[12,"nIndicators","","",803,null],[12,"pad5","","",803,null],[12,"maps","","",803,null],[3,"_xcb_xkb_get_kbd_by_name_replies__key_names","","",null,null],[12,"keyname_type","","",804,null],[12,"keyDeviceID","","",804,null],[12,"keyname_sequence","","",804,null],[12,"keyname_length","","",804,null],[12,"which","","",804,null],[12,"keyMinKeyCode","","",804,null],[12,"keyMaxKeyCode","","",804,null],[12,"nTypes","","",804,null],[12,"groupNames","","",804,null],[12,"virtualMods","","",804,null],[12,"firstKey","","",804,null],[12,"nKeys","","",804,null],[12,"indicators","","",804,null],[12,"nRadioGroups","","",804,null],[12,"nKeyAliases","","",804,null],[12,"nKTLevels","","",804,null],[12,"pad6","","",804,null],[12,"valueList","","",804,null],[3,"_xcb_xkb_get_kbd_by_name_replies__geometry","","",null,null],[12,"geometry_type","","",805,null],[12,"geometryDeviceID","","",805,null],[12,"geometry_sequence","","",805,null],[12,"geometry_length","","",805,null],[12,"name","","",805,null],[12,"geometryFound","","",805,null],[12,"pad7","","",805,null],[12,"widthMM","","",805,null],[12,"heightMM","","",805,null],[12,"nProperties","","",805,null],[12,"nColors","","",805,null],[12,"nShapes","","",805,null],[12,"nSections","","",805,null],[12,"nDoodads","","",805,null],[12,"nKeyAliases","","",805,null],[12,"baseColorNdx","","",805,null],[12,"labelColorNdx","","",805,null],[12,"labelFont","","",805,null],[3,"xcb_xkb_get_kbd_by_name_replies_types_map_t","","",null,null],[12,"types_rtrn","","",806,null],[12,"syms_rtrn","","",806,null],[12,"acts_rtrn_count","","",806,null],[12,"acts_rtrn_acts","","",806,null],[12,"behaviors_rtrn","","",806,null],[12,"vmods_rtrn","","",806,null],[12,"explicit_rtrn","","",806,null],[12,"modmap_rtrn","","",806,null],[12,"vmodmap_rtrn","","",806,null],[3,"xcb_xkb_get_kbd_by_name_replies_key_names_value_list_t","","",null,null],[12,"keycodesName","","",807,null],[12,"geometryName","","",807,null],[12,"symbolsName","","",807,null],[12,"physSymbolsName","","",807,null],[12,"typesName","","",807,null],[12,"compatName","","",807,null],[12,"typeNames","","",807,null],[12,"nLevelsPerType","","",807,null],[12,"ktLevelNames","","",807,null],[12,"indicatorNames","","",807,null],[12,"virtualModNames","","",807,null],[12,"groups","","",807,null],[12,"keyNames","","",807,null],[12,"keyAliases","","",807,null],[12,"radioGroupNames","","",807,null],[3,"xcb_xkb_get_kbd_by_name_reply_t","","",null,null],[12,"response_type","","",808,null],[12,"deviceID","","",808,null],[12,"sequence","","",808,null],[12,"length","","",808,null],[12,"minKeyCode","","",808,null],[12,"maxKeyCode","","",808,null],[12,"loaded","","",808,null],[12,"newKeyboard","","",808,null],[12,"found","","",808,null],[12,"reported","","",808,null],[12,"pad0","","",808,null],[3,"xcb_xkb_get_device_info_request_t","","",null,null],[12,"major_opcode","","",809,null],[12,"minor_opcode","","",809,null],[12,"length","","",809,null],[12,"deviceSpec","","",809,null],[12,"wanted","","",809,null],[12,"allButtons","","",809,null],[12,"firstButton","","",809,null],[12,"nButtons","","",809,null],[12,"pad0","","",809,null],[12,"ledClass","","",809,null],[12,"ledID","","",809,null],[3,"xcb_xkb_get_device_info_cookie_t","","",null,null],[3,"xcb_xkb_get_device_info_reply_t","","",null,null],[12,"response_type","","",810,null],[12,"deviceID","","",810,null],[12,"sequence","","",810,null],[12,"length","","",810,null],[12,"present","","",810,null],[12,"supported","","",810,null],[12,"unsupported","","",810,null],[12,"nDeviceLedFBs","","",810,null],[12,"firstBtnWanted","","",810,null],[12,"nBtnsWanted","","",810,null],[12,"firstBtnRtrn","","",810,null],[12,"nBtnsRtrn","","",810,null],[12,"totalBtns","","",810,null],[12,"hasOwnState","","",810,null],[12,"dfltKbdFB","","",810,null],[12,"dfltLedFB","","",810,null],[12,"pad0","","",810,null],[12,"devType","","",810,null],[12,"nameLen","","",810,null],[3,"xcb_xkb_set_device_info_request_t","","",null,null],[12,"major_opcode","","",811,null],[12,"minor_opcode","","",811,null],[12,"length","","",811,null],[12,"deviceSpec","","",811,null],[12,"firstBtn","","",811,null],[12,"nBtns","","",811,null],[12,"change","","",811,null],[12,"nDeviceLedFBs","","",811,null],[3,"xcb_xkb_set_debugging_flags_request_t","","",null,null],[12,"major_opcode","","",812,null],[12,"minor_opcode","","",812,null],[12,"length","","",812,null],[12,"msgLength","","",812,null],[12,"pad0","","",812,null],[12,"affectFlags","","",812,null],[12,"flags","","",812,null],[12,"affectCtrls","","",812,null],[12,"ctrls","","",812,null],[3,"xcb_xkb_set_debugging_flags_cookie_t","","",null,null],[3,"xcb_xkb_set_debugging_flags_reply_t","","",null,null],[12,"response_type","","",813,null],[12,"pad0","","",813,null],[12,"sequence","","",813,null],[12,"length","","",813,null],[12,"currentFlags","","",813,null],[12,"currentCtrls","","",813,null],[12,"supportedFlags","","",813,null],[12,"supportedCtrls","","",813,null],[12,"pad1","","",813,null],[3,"xcb_xkb_new_keyboard_notify_event_t","","",null,null],[12,"response_type","","",814,null],[12,"xkbType","","",814,null],[12,"sequence","","",814,null],[12,"time","","",814,null],[12,"deviceID","","",814,null],[12,"oldDeviceID","","",814,null],[12,"minKeyCode","","",814,null],[12,"maxKeyCode","","",814,null],[12,"oldMinKeyCode","","",814,null],[12,"oldMaxKeyCode","","",814,null],[12,"requestMajor","","",814,null],[12,"requestMinor","","",814,null],[12,"changed","","",814,null],[12,"pad0","","",814,null],[3,"xcb_xkb_map_notify_event_t","","",null,null],[12,"response_type","","",815,null],[12,"xkbType","","",815,null],[12,"sequence","","",815,null],[12,"time","","",815,null],[12,"deviceID","","",815,null],[12,"ptrBtnActions","","",815,null],[12,"changed","","",815,null],[12,"minKeyCode","","",815,null],[12,"maxKeyCode","","",815,null],[12,"firstType","","",815,null],[12,"nTypes","","",815,null],[12,"firstKeySym","","",815,null],[12,"nKeySyms","","",815,null],[12,"firstKeyAct","","",815,null],[12,"nKeyActs","","",815,null],[12,"firstKeyBehavior","","",815,null],[12,"nKeyBehavior","","",815,null],[12,"firstKeyExplicit","","",815,null],[12,"nKeyExplicit","","",815,null],[12,"firstModMapKey","","",815,null],[12,"nModMapKeys","","",815,null],[12,"firstVModMapKey","","",815,null],[12,"nVModMapKeys","","",815,null],[12,"virtualMods","","",815,null],[12,"pad0","","",815,null],[3,"xcb_xkb_state_notify_event_t","","",null,null],[12,"response_type","","",816,null],[12,"xkbType","","",816,null],[12,"sequence","","",816,null],[12,"time","","",816,null],[12,"deviceID","","",816,null],[12,"mods","","",816,null],[12,"baseMods","","",816,null],[12,"latchedMods","","",816,null],[12,"lockedMods","","",816,null],[12,"group","","",816,null],[12,"baseGroup","","",816,null],[12,"latchedGroup","","",816,null],[12,"lockedGroup","","",816,null],[12,"compatState","","",816,null],[12,"grabMods","","",816,null],[12,"compatGrabMods","","",816,null],[12,"lookupMods","","",816,null],[12,"compatLoockupMods","","",816,null],[12,"ptrBtnState","","",816,null],[12,"changed","","",816,null],[12,"keycode","","",816,null],[12,"eventType","","",816,null],[12,"requestMajor","","",816,null],[12,"requestMinor","","",816,null],[3,"xcb_xkb_controls_notify_event_t","","",null,null],[12,"response_type","","",817,null],[12,"xkbType","","",817,null],[12,"sequence","","",817,null],[12,"time","","",817,null],[12,"deviceID","","",817,null],[12,"numGroups","","",817,null],[12,"pad0","","",817,null],[12,"changedControls","","",817,null],[12,"enabledControls","","",817,null],[12,"enabledControlChanges","","",817,null],[12,"keycode","","",817,null],[12,"eventType","","",817,null],[12,"requestMajor","","",817,null],[12,"requestMinor","","",817,null],[12,"pad1","","",817,null],[3,"xcb_xkb_indicator_state_notify_event_t","","",null,null],[12,"response_type","","",818,null],[12,"xkbType","","",818,null],[12,"sequence","","",818,null],[12,"time","","",818,null],[12,"deviceID","","",818,null],[12,"pad0","","",818,null],[12,"state","","",818,null],[12,"stateChanged","","",818,null],[12,"pad1","","",818,null],[3,"xcb_xkb_indicator_map_notify_event_t","","",null,null],[12,"response_type","","",819,null],[12,"xkbType","","",819,null],[12,"sequence","","",819,null],[12,"time","","",819,null],[12,"deviceID","","",819,null],[12,"pad0","","",819,null],[12,"state","","",819,null],[12,"mapChanged","","",819,null],[12,"pad1","","",819,null],[3,"xcb_xkb_names_notify_event_t","","",null,null],[12,"response_type","","",820,null],[12,"xkbType","","",820,null],[12,"sequence","","",820,null],[12,"time","","",820,null],[12,"deviceID","","",820,null],[12,"pad0","","",820,null],[12,"changed","","",820,null],[12,"firstType","","",820,null],[12,"nTypes","","",820,null],[12,"firstLevelName","","",820,null],[12,"nLevelNames","","",820,null],[12,"pad1","","",820,null],[12,"nRadioGroups","","",820,null],[12,"nKeyAliases","","",820,null],[12,"changedGroupNames","","",820,null],[12,"changedVirtualMods","","",820,null],[12,"firstKey","","",820,null],[12,"nKeys","","",820,null],[12,"changedIndicators","","",820,null],[12,"pad2","","",820,null],[3,"xcb_xkb_compat_map_notify_event_t","","",null,null],[12,"response_type","","",821,null],[12,"xkbType","","",821,null],[12,"sequence","","",821,null],[12,"time","","",821,null],[12,"deviceID","","",821,null],[12,"changedGroups","","",821,null],[12,"firstSI","","",821,null],[12,"nSI","","",821,null],[12,"nTotalSI","","",821,null],[12,"pad0","","",821,null],[3,"xcb_xkb_bell_notify_event_t","","",null,null],[12,"response_type","","",822,null],[12,"xkbType","","",822,null],[12,"sequence","","",822,null],[12,"time","","",822,null],[12,"deviceID","","",822,null],[12,"bellClass","","",822,null],[12,"bellID","","",822,null],[12,"percent","","",822,null],[12,"pitch","","",822,null],[12,"duration","","",822,null],[12,"name","","",822,null],[12,"window","","",822,null],[12,"eventOnly","","",822,null],[12,"pad0","","",822,null],[3,"xcb_xkb_action_message_event_t","","",null,null],[12,"response_type","","",823,null],[12,"xkbType","","",823,null],[12,"sequence","","",823,null],[12,"time","","",823,null],[12,"deviceID","","",823,null],[12,"keycode","","",823,null],[12,"press","","",823,null],[12,"keyEventFollows","","",823,null],[12,"mods","","",823,null],[12,"group","","",823,null],[12,"message","","",823,null],[12,"pad0","","",823,null],[3,"xcb_xkb_access_x_notify_event_t","","",null,null],[12,"response_type","","",824,null],[12,"xkbType","","",824,null],[12,"sequence","","",824,null],[12,"time","","",824,null],[12,"deviceID","","",824,null],[12,"keycode","","",824,null],[12,"detailt","","",824,null],[12,"slowKeysDelay","","",824,null],[12,"debounceDelay","","",824,null],[12,"pad0","","",824,null],[3,"xcb_xkb_extension_device_notify_event_t","","",null,null],[12,"response_type","","",825,null],[12,"xkbType","","",825,null],[12,"sequence","","",825,null],[12,"time","","",825,null],[12,"deviceID","","",825,null],[12,"pad0","","",825,null],[12,"reason","","",825,null],[12,"ledClass","","",825,null],[12,"ledID","","",825,null],[12,"ledsDefined","","",825,null],[12,"ledState","","",825,null],[12,"firstButton","","",825,null],[12,"nButtons","","",825,null],[12,"supported","","",825,null],[12,"unsupported","","",825,null],[12,"pad1","","",825,null],[7,"xcb_xkb_id","","",null,null],[5,"xcb_xkb_device_spec_next","","",null,null],[5,"xcb_xkb_device_spec_end","","",null,null],[5,"xcb_xkb_led_class_spec_next","","",null,null],[5,"xcb_xkb_led_class_spec_end","","",null,null],[5,"xcb_xkb_bell_class_spec_next","","",null,null],[5,"xcb_xkb_bell_class_spec_end","","",null,null],[5,"xcb_xkb_id_spec_next","","",null,null],[5,"xcb_xkb_id_spec_end","","",null,null],[5,"xcb_xkb_indicator_map_next","","",null,null],[5,"xcb_xkb_indicator_map_end","","",null,null],[5,"xcb_xkb_mod_def_next","","",null,null],[5,"xcb_xkb_mod_def_end","","",null,null],[5,"xcb_xkb_key_name_next","","",null,null],[5,"xcb_xkb_key_name_end","","",null,null],[5,"xcb_xkb_key_alias_next","","",null,null],[5,"xcb_xkb_key_alias_end","","",null,null],[5,"xcb_xkb_counted_string_16_string","","",null,null],[5,"xcb_xkb_counted_string_16_string_length","","",null,null],[5,"xcb_xkb_counted_string_16_string_end","","",null,null],[5,"xcb_xkb_counted_string_16_alignment_pad","","",null,null],[5,"xcb_xkb_counted_string_16_alignment_pad_length","","",null,null],[5,"xcb_xkb_counted_string_16_alignment_pad_end","","",null,null],[5,"xcb_xkb_counted_string_16_next","","",null,null],[5,"xcb_xkb_counted_string_16_end","","",null,null],[5,"xcb_xkb_kt_map_entry_next","","",null,null],[5,"xcb_xkb_kt_map_entry_end","","",null,null],[5,"xcb_xkb_key_type_map","","",null,null],[5,"xcb_xkb_key_type_map_length","","",null,null],[5,"xcb_xkb_key_type_map_iterator","","",null,null],[5,"xcb_xkb_key_type_preserve","","",null,null],[5,"xcb_xkb_key_type_preserve_length","","",null,null],[5,"xcb_xkb_key_type_preserve_iterator","","",null,null],[5,"xcb_xkb_key_type_next","","",null,null],[5,"xcb_xkb_key_type_end","","",null,null],[5,"xcb_xkb_key_sym_map_syms","","",null,null],[5,"xcb_xkb_key_sym_map_syms_length","","",null,null],[5,"xcb_xkb_key_sym_map_syms_end","","",null,null],[5,"xcb_xkb_key_sym_map_next","","",null,null],[5,"xcb_xkb_key_sym_map_end","","",null,null],[5,"xcb_xkb_common_behavior_next","","",null,null],[5,"xcb_xkb_common_behavior_end","","",null,null],[5,"xcb_xkb_default_behavior_next","","",null,null],[5,"xcb_xkb_default_behavior_end","","",null,null],[5,"xcb_xkb_lock_behavior_next","","",null,null],[5,"xcb_xkb_lock_behavior_end","","",null,null],[5,"xcb_xkb_radio_group_behavior_next","","",null,null],[5,"xcb_xkb_radio_group_behavior_end","","",null,null],[5,"xcb_xkb_overlay_behavior_next","","",null,null],[5,"xcb_xkb_overlay_behavior_end","","",null,null],[5,"xcb_xkb_permament_lock_behavior_next","","",null,null],[5,"xcb_xkb_permament_lock_behavior_end","","",null,null],[5,"xcb_xkb_permament_radio_group_behavior_next","","",null,null],[5,"xcb_xkb_permament_radio_group_behavior_end","","",null,null],[5,"xcb_xkb_permament_overlay_behavior_next","","",null,null],[5,"xcb_xkb_permament_overlay_behavior_end","","",null,null],[5,"xcb_xkb_behavior_next","","",null,null],[5,"xcb_xkb_behavior_end","","",null,null],[5,"xcb_xkb_set_behavior_next","","",null,null],[5,"xcb_xkb_set_behavior_end","","",null,null],[5,"xcb_xkb_set_explicit_next","","",null,null],[5,"xcb_xkb_set_explicit_end","","",null,null],[5,"xcb_xkb_key_mod_map_next","","",null,null],[5,"xcb_xkb_key_mod_map_end","","",null,null],[5,"xcb_xkb_key_v_mod_map_next","","",null,null],[5,"xcb_xkb_key_v_mod_map_end","","",null,null],[5,"xcb_xkb_kt_set_map_entry_next","","",null,null],[5,"xcb_xkb_kt_set_map_entry_end","","",null,null],[5,"xcb_xkb_set_key_type_entries","","",null,null],[5,"xcb_xkb_set_key_type_entries_length","","",null,null],[5,"xcb_xkb_set_key_type_entries_iterator","","",null,null],[5,"xcb_xkb_set_key_type_preserve_entries","","",null,null],[5,"xcb_xkb_set_key_type_preserve_entries_length","","",null,null],[5,"xcb_xkb_set_key_type_preserve_entries_iterator","","",null,null],[5,"xcb_xkb_set_key_type_next","","",null,null],[5,"xcb_xkb_set_key_type_end","","",null,null],[5,"xcb_xkb_string8_next","","",null,null],[5,"xcb_xkb_string8_end","","",null,null],[5,"xcb_xkb_outline_points","","",null,null],[5,"xcb_xkb_outline_points_length","","",null,null],[5,"xcb_xkb_outline_points_iterator","","",null,null],[5,"xcb_xkb_outline_next","","",null,null],[5,"xcb_xkb_outline_end","","",null,null],[5,"xcb_xkb_shape_outlines_length","","",null,null],[5,"xcb_xkb_shape_outlines_iterator","","",null,null],[5,"xcb_xkb_shape_next","","",null,null],[5,"xcb_xkb_shape_end","","",null,null],[5,"xcb_xkb_key_next","","",null,null],[5,"xcb_xkb_key_end","","",null,null],[5,"xcb_xkb_overlay_key_next","","",null,null],[5,"xcb_xkb_overlay_key_end","","",null,null],[5,"xcb_xkb_overlay_row_keys","","",null,null],[5,"xcb_xkb_overlay_row_keys_length","","",null,null],[5,"xcb_xkb_overlay_row_keys_iterator","","",null,null],[5,"xcb_xkb_overlay_row_next","","",null,null],[5,"xcb_xkb_overlay_row_end","","",null,null],[5,"xcb_xkb_overlay_rows_length","","",null,null],[5,"xcb_xkb_overlay_rows_iterator","","",null,null],[5,"xcb_xkb_overlay_next","","",null,null],[5,"xcb_xkb_overlay_end","","",null,null],[5,"xcb_xkb_row_keys","","",null,null],[5,"xcb_xkb_row_keys_length","","",null,null],[5,"xcb_xkb_row_keys_iterator","","",null,null],[5,"xcb_xkb_row_next","","",null,null],[5,"xcb_xkb_row_end","","",null,null],[5,"xcb_xkb_listing_string","","",null,null],[5,"xcb_xkb_listing_string_length","","",null,null],[5,"xcb_xkb_listing_string_end","","",null,null],[5,"xcb_xkb_listing_next","","",null,null],[5,"xcb_xkb_listing_end","","",null,null],[5,"xcb_xkb_device_led_info_names","","",null,null],[5,"xcb_xkb_device_led_info_names_length","","",null,null],[5,"xcb_xkb_device_led_info_names_end","","",null,null],[5,"xcb_xkb_device_led_info_maps","","",null,null],[5,"xcb_xkb_device_led_info_maps_length","","",null,null],[5,"xcb_xkb_device_led_info_maps_iterator","","",null,null],[5,"xcb_xkb_device_led_info_next","","",null,null],[5,"xcb_xkb_device_led_info_end","","",null,null],[5,"xcb_xkb_sa_no_action_next","","",null,null],[5,"xcb_xkb_sa_no_action_end","","",null,null],[5,"xcb_xkb_sa_set_mods_next","","",null,null],[5,"xcb_xkb_sa_set_mods_end","","",null,null],[5,"xcb_xkb_sa_latch_mods_next","","",null,null],[5,"xcb_xkb_sa_latch_mods_end","","",null,null],[5,"xcb_xkb_sa_lock_mods_next","","",null,null],[5,"xcb_xkb_sa_lock_mods_end","","",null,null],[5,"xcb_xkb_sa_set_group_next","","",null,null],[5,"xcb_xkb_sa_set_group_end","","",null,null],[5,"xcb_xkb_sa_latch_group_next","","",null,null],[5,"xcb_xkb_sa_latch_group_end","","",null,null],[5,"xcb_xkb_sa_lock_group_next","","",null,null],[5,"xcb_xkb_sa_lock_group_end","","",null,null],[5,"xcb_xkb_sa_move_ptr_next","","",null,null],[5,"xcb_xkb_sa_move_ptr_end","","",null,null],[5,"xcb_xkb_sa_ptr_btn_next","","",null,null],[5,"xcb_xkb_sa_ptr_btn_end","","",null,null],[5,"xcb_xkb_sa_lock_ptr_btn_next","","",null,null],[5,"xcb_xkb_sa_lock_ptr_btn_end","","",null,null],[5,"xcb_xkb_sa_set_ptr_dflt_next","","",null,null],[5,"xcb_xkb_sa_set_ptr_dflt_end","","",null,null],[5,"xcb_xkb_sa_iso_lock_next","","",null,null],[5,"xcb_xkb_sa_iso_lock_end","","",null,null],[5,"xcb_xkb_sa_terminate_next","","",null,null],[5,"xcb_xkb_sa_terminate_end","","",null,null],[5,"xcb_xkb_sa_switch_screen_next","","",null,null],[5,"xcb_xkb_sa_switch_screen_end","","",null,null],[5,"xcb_xkb_sa_set_controls_next","","",null,null],[5,"xcb_xkb_sa_set_controls_end","","",null,null],[5,"xcb_xkb_sa_lock_controls_next","","",null,null],[5,"xcb_xkb_sa_lock_controls_end","","",null,null],[5,"xcb_xkb_sa_action_message_next","","",null,null],[5,"xcb_xkb_sa_action_message_end","","",null,null],[5,"xcb_xkb_sa_redirect_key_next","","",null,null],[5,"xcb_xkb_sa_redirect_key_end","","",null,null],[5,"xcb_xkb_sa_device_btn_next","","",null,null],[5,"xcb_xkb_sa_device_btn_end","","",null,null],[5,"xcb_xkb_sa_lock_device_btn_next","","",null,null],[5,"xcb_xkb_sa_lock_device_btn_end","","",null,null],[5,"xcb_xkb_sa_device_valuator_next","","",null,null],[5,"xcb_xkb_sa_device_valuator_end","","",null,null],[5,"xcb_xkb_si_action_next","","",null,null],[5,"xcb_xkb_si_action_end","","",null,null],[5,"xcb_xkb_sym_interpret_next","","",null,null],[5,"xcb_xkb_sym_interpret_end","","",null,null],[5,"xcb_xkb_action_next","","",null,null],[5,"xcb_xkb_action_end","","",null,null],[5,"xcb_xkb_use_extension_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_xkb_use_extension","","",null,null],[5,"xcb_xkb_use_extension_unchecked","","",null,null],[5,"xcb_xkb_select_events","","",null,null],[5,"xcb_xkb_select_events_checked","","",null,null],[5,"xcb_xkb_bell","","",null,null],[5,"xcb_xkb_bell_checked","","",null,null],[5,"xcb_xkb_get_state_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_xkb_get_state","","",null,null],[5,"xcb_xkb_get_state_unchecked","","",null,null],[5,"xcb_xkb_latch_lock_state","","",null,null],[5,"xcb_xkb_latch_lock_state_checked","","",null,null],[5,"xcb_xkb_get_controls_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_xkb_get_controls","","",null,null],[5,"xcb_xkb_get_controls_unchecked","","",null,null],[5,"xcb_xkb_set_controls","","",null,null],[5,"xcb_xkb_set_controls_checked","","",null,null],[5,"xcb_xkb_get_map_map_types_rtrn_length","","",null,null],[5,"xcb_xkb_get_map_map_types_rtrn_iterator","","",null,null],[5,"xcb_xkb_get_map_map_syms_rtrn_length","","",null,null],[5,"xcb_xkb_get_map_map_syms_rtrn_iterator","","",null,null],[5,"xcb_xkb_get_map_map_acts_rtrn_count","","",null,null],[5,"xcb_xkb_get_map_map_acts_rtrn_count_length","","",null,null],[5,"xcb_xkb_get_map_map_acts_rtrn_count_end","","",null,null],[5,"xcb_xkb_get_map_map_acts_rtrn_acts","","",null,null],[5,"xcb_xkb_get_map_map_acts_rtrn_acts_length","","",null,null],[5,"xcb_xkb_get_map_map_acts_rtrn_acts_iterator","","",null,null],[5,"xcb_xkb_get_map_map_behaviors_rtrn","","",null,null],[5,"xcb_xkb_get_map_map_behaviors_rtrn_length","","",null,null],[5,"xcb_xkb_get_map_map_behaviors_rtrn_iterator","","",null,null],[5,"xcb_xkb_get_map_map_vmods_rtrn","","",null,null],[5,"xcb_xkb_get_map_map_vmods_rtrn_length","","",null,null],[5,"xcb_xkb_get_map_map_vmods_rtrn_end","","",null,null],[5,"xcb_xkb_get_map_map_explicit_rtrn","","",null,null],[5,"xcb_xkb_get_map_map_explicit_rtrn_length","","",null,null],[5,"xcb_xkb_get_map_map_explicit_rtrn_iterator","","",null,null],[5,"xcb_xkb_get_map_map_modmap_rtrn","","",null,null],[5,"xcb_xkb_get_map_map_modmap_rtrn_length","","",null,null],[5,"xcb_xkb_get_map_map_modmap_rtrn_iterator","","",null,null],[5,"xcb_xkb_get_map_map_vmodmap_rtrn","","",null,null],[5,"xcb_xkb_get_map_map_vmodmap_rtrn_length","","",null,null],[5,"xcb_xkb_get_map_map_vmodmap_rtrn_iterator","","",null,null],[5,"xcb_xkb_get_map_map","","",null,null],[5,"xcb_xkb_get_map_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_xkb_get_map","","",null,null],[5,"xcb_xkb_get_map_unchecked","","",null,null],[5,"xcb_xkb_set_map_values_types_length","","",null,null],[5,"xcb_xkb_set_map_values_types_iterator","","",null,null],[5,"xcb_xkb_set_map_values_syms_length","","",null,null],[5,"xcb_xkb_set_map_values_syms_iterator","","",null,null],[5,"xcb_xkb_set_map_values_actions_count","","",null,null],[5,"xcb_xkb_set_map_values_actions_count_length","","",null,null],[5,"xcb_xkb_set_map_values_actions_count_end","","",null,null],[5,"xcb_xkb_set_map_values_actions","","",null,null],[5,"xcb_xkb_set_map_values_actions_length","","",null,null],[5,"xcb_xkb_set_map_values_actions_iterator","","",null,null],[5,"xcb_xkb_set_map_values_behaviors","","",null,null],[5,"xcb_xkb_set_map_values_behaviors_length","","",null,null],[5,"xcb_xkb_set_map_values_behaviors_iterator","","",null,null],[5,"xcb_xkb_set_map_values_vmods","","",null,null],[5,"xcb_xkb_set_map_values_vmods_length","","",null,null],[5,"xcb_xkb_set_map_values_vmods_end","","",null,null],[5,"xcb_xkb_set_map_values_explicit","","",null,null],[5,"xcb_xkb_set_map_values_explicit_length","","",null,null],[5,"xcb_xkb_set_map_values_explicit_iterator","","",null,null],[5,"xcb_xkb_set_map_values_modmap","","",null,null],[5,"xcb_xkb_set_map_values_modmap_length","","",null,null],[5,"xcb_xkb_set_map_values_modmap_iterator","","",null,null],[5,"xcb_xkb_set_map_values_vmodmap","","",null,null],[5,"xcb_xkb_set_map_values_vmodmap_length","","",null,null],[5,"xcb_xkb_set_map_values_vmodmap_iterator","","",null,null],[5,"xcb_xkb_set_map","","",null,null],[5,"xcb_xkb_set_map_checked","","",null,null],[5,"xcb_xkb_get_compat_map_si_rtrn","","",null,null],[5,"xcb_xkb_get_compat_map_si_rtrn_length","","",null,null],[5,"xcb_xkb_get_compat_map_si_rtrn_iterator","","",null,null],[5,"xcb_xkb_get_compat_map_group_rtrn","","",null,null],[5,"xcb_xkb_get_compat_map_group_rtrn_length","","",null,null],[5,"xcb_xkb_get_compat_map_group_rtrn_iterator","","",null,null],[5,"xcb_xkb_get_compat_map_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_xkb_get_compat_map","","",null,null],[5,"xcb_xkb_get_compat_map_unchecked","","",null,null],[5,"xcb_xkb_set_compat_map","","",null,null],[5,"xcb_xkb_set_compat_map_checked","","",null,null],[5,"xcb_xkb_get_indicator_state_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_xkb_get_indicator_state","","",null,null],[5,"xcb_xkb_get_indicator_state_unchecked","","",null,null],[5,"xcb_xkb_get_indicator_map_maps","","",null,null],[5,"xcb_xkb_get_indicator_map_maps_length","","",null,null],[5,"xcb_xkb_get_indicator_map_maps_iterator","","",null,null],[5,"xcb_xkb_get_indicator_map_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_xkb_get_indicator_map","","",null,null],[5,"xcb_xkb_get_indicator_map_unchecked","","",null,null],[5,"xcb_xkb_set_indicator_map","","",null,null],[5,"xcb_xkb_set_indicator_map_checked","","",null,null],[5,"xcb_xkb_get_named_indicator_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_xkb_get_named_indicator","","",null,null],[5,"xcb_xkb_get_named_indicator_unchecked","","",null,null],[5,"xcb_xkb_set_named_indicator","","",null,null],[5,"xcb_xkb_set_named_indicator_checked","","",null,null],[5,"xcb_xkb_get_names_value_list_type_names","","",null,null],[5,"xcb_xkb_get_names_value_list_type_names_length","","",null,null],[5,"xcb_xkb_get_names_value_list_type_names_end","","",null,null],[5,"xcb_xkb_get_names_value_list_n_levels_per_type","","",null,null],[5,"xcb_xkb_get_names_value_list_n_levels_per_type_length","","",null,null],[5,"xcb_xkb_get_names_value_list_n_levels_per_type_end","","",null,null],[5,"xcb_xkb_get_names_value_list_alignment_pad","","",null,null],[5,"xcb_xkb_get_names_value_list_alignment_pad_length","","",null,null],[5,"xcb_xkb_get_names_value_list_alignment_pad_end","","",null,null],[5,"xcb_xkb_get_names_value_list_kt_level_names","","",null,null],[5,"xcb_xkb_get_names_value_list_kt_level_names_length","","",null,null],[5,"xcb_xkb_get_names_value_list_kt_level_names_end","","",null,null],[5,"xcb_xkb_get_names_value_list_indicator_names","","",null,null],[5,"xcb_xkb_get_names_value_list_indicator_names_length","","",null,null],[5,"xcb_xkb_get_names_value_list_indicator_names_end","","",null,null],[5,"xcb_xkb_get_names_value_list_virtual_mod_names","","",null,null],[5,"xcb_xkb_get_names_value_list_virtual_mod_names_length","","",null,null],[5,"xcb_xkb_get_names_value_list_virtual_mod_names_end","","",null,null],[5,"xcb_xkb_get_names_value_list_groups","","",null,null],[5,"xcb_xkb_get_names_value_list_groups_length","","",null,null],[5,"xcb_xkb_get_names_value_list_groups_end","","",null,null],[5,"xcb_xkb_get_names_value_list_key_names","","",null,null],[5,"xcb_xkb_get_names_value_list_key_names_length","","",null,null],[5,"xcb_xkb_get_names_value_list_key_names_iterator","","",null,null],[5,"xcb_xkb_get_names_value_list_key_aliases","","",null,null],[5,"xcb_xkb_get_names_value_list_key_aliases_length","","",null,null],[5,"xcb_xkb_get_names_value_list_key_aliases_iterator","","",null,null],[5,"xcb_xkb_get_names_value_list_radio_group_names","","",null,null],[5,"xcb_xkb_get_names_value_list_radio_group_names_length","","",null,null],[5,"xcb_xkb_get_names_value_list_radio_group_names_end","","",null,null],[5,"xcb_xkb_get_names_value_list","","",null,null],[5,"xcb_xkb_get_names_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_xkb_get_names","","",null,null],[5,"xcb_xkb_get_names_unchecked","","",null,null],[5,"xcb_xkb_set_names_values_type_names","","",null,null],[5,"xcb_xkb_set_names_values_type_names_length","","",null,null],[5,"xcb_xkb_set_names_values_type_names_end","","",null,null],[5,"xcb_xkb_set_names_values_n_levels_per_type","","",null,null],[5,"xcb_xkb_set_names_values_n_levels_per_type_length","","",null,null],[5,"xcb_xkb_set_names_values_n_levels_per_type_end","","",null,null],[5,"xcb_xkb_set_names_values_kt_level_names","","",null,null],[5,"xcb_xkb_set_names_values_kt_level_names_length","","",null,null],[5,"xcb_xkb_set_names_values_kt_level_names_end","","",null,null],[5,"xcb_xkb_set_names_values_indicator_names","","",null,null],[5,"xcb_xkb_set_names_values_indicator_names_length","","",null,null],[5,"xcb_xkb_set_names_values_indicator_names_end","","",null,null],[5,"xcb_xkb_set_names_values_virtual_mod_names","","",null,null],[5,"xcb_xkb_set_names_values_virtual_mod_names_length","","",null,null],[5,"xcb_xkb_set_names_values_virtual_mod_names_end","","",null,null],[5,"xcb_xkb_set_names_values_groups","","",null,null],[5,"xcb_xkb_set_names_values_groups_length","","",null,null],[5,"xcb_xkb_set_names_values_groups_end","","",null,null],[5,"xcb_xkb_set_names_values_key_names","","",null,null],[5,"xcb_xkb_set_names_values_key_names_length","","",null,null],[5,"xcb_xkb_set_names_values_key_names_iterator","","",null,null],[5,"xcb_xkb_set_names_values_key_aliases","","",null,null],[5,"xcb_xkb_set_names_values_key_aliases_length","","",null,null],[5,"xcb_xkb_set_names_values_key_aliases_iterator","","",null,null],[5,"xcb_xkb_set_names_values_radio_group_names","","",null,null],[5,"xcb_xkb_set_names_values_radio_group_names_length","","",null,null],[5,"xcb_xkb_set_names_values_radio_group_names_end","","",null,null],[5,"xcb_xkb_set_names","","",null,null],[5,"xcb_xkb_set_names_checked","","",null,null],[5,"xcb_xkb_per_client_flags_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_xkb_per_client_flags","","",null,null],[5,"xcb_xkb_per_client_flags_unchecked","","",null,null],[5,"xcb_xkb_list_components_keymaps_length","","",null,null],[5,"xcb_xkb_list_components_keymaps_iterator","","",null,null],[5,"xcb_xkb_list_components_keycodes_length","","",null,null],[5,"xcb_xkb_list_components_keycodes_iterator","","",null,null],[5,"xcb_xkb_list_components_types_length","","",null,null],[5,"xcb_xkb_list_components_types_iterator","","",null,null],[5,"xcb_xkb_list_components_compat_maps_length","","",null,null],[5,"xcb_xkb_list_components_compat_maps_iterator","","",null,null],[5,"xcb_xkb_list_components_symbols_length","","",null,null],[5,"xcb_xkb_list_components_symbols_iterator","","",null,null],[5,"xcb_xkb_list_components_geometries_length","","",null,null],[5,"xcb_xkb_list_components_geometries_iterator","","",null,null],[5,"xcb_xkb_list_components_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_xkb_list_components","","",null,null],[5,"xcb_xkb_list_components_unchecked","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_types_map","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_compat_map_si_rtrn","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_compat_map_si_rtrn_length","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_compat_map_si_rtrn_iterator","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_compat_map_group_rtrn","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_compat_map_group_rtrn_length","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_compat_map_group_rtrn_iterator","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_indicator_maps_maps","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_indicator_maps_maps_length","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_indicator_maps_maps_iterator","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_key_names_value_list","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_geometry_label_font","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_types_map_types_rtrn_length","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_types_map_types_rtrn_iterator","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_types_map_syms_rtrn_length","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_types_map_syms_rtrn_iterator","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_types_map_acts_rtrn_count","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_types_map_acts_rtrn_count_length","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_types_map_acts_rtrn_count_end","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_types_map_acts_rtrn_acts","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_types_map_acts_rtrn_acts_length","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_types_map_acts_rtrn_acts_iterator","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_types_map_behaviors_rtrn","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_types_map_behaviors_rtrn_length","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_types_map_behaviors_rtrn_iterator","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_types_map_vmods_rtrn","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_types_map_vmods_rtrn_length","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_types_map_vmods_rtrn_end","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_types_map_explicit_rtrn","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_types_map_explicit_rtrn_length","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_types_map_explicit_rtrn_iterator","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_types_map_modmap_rtrn","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_types_map_modmap_rtrn_length","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_types_map_modmap_rtrn_iterator","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_types_map_vmodmap_rtrn","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_types_map_vmodmap_rtrn_length","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_types_map_vmodmap_rtrn_iterator","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_key_names_value_list_type_names","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_key_names_value_list_type_names_length","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_key_names_value_list_type_names_end","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_key_names_value_list_n_levels_per_type","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_key_names_value_list_n_levels_per_type_length","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_key_names_value_list_n_levels_per_type_end","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_key_names_value_list_kt_level_names","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_key_names_value_list_kt_level_names_length","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_key_names_value_list_kt_level_names_end","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_key_names_value_list_indicator_names","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_key_names_value_list_indicator_names_length","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_key_names_value_list_indicator_names_end","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_key_names_value_list_virtual_mod_names","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_key_names_value_list_virtual_mod_names_length","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_key_names_value_list_virtual_mod_names_end","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_key_names_value_list_groups","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_key_names_value_list_groups_length","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_key_names_value_list_groups_end","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_key_names_value_list_key_names","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_key_names_value_list_key_names_length","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_key_names_value_list_key_names_iterator","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_key_names_value_list_key_aliases","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_key_names_value_list_key_aliases_length","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_key_names_value_list_key_aliases_iterator","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_key_names_value_list_radio_group_names","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_key_names_value_list_radio_group_names_length","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies_key_names_value_list_radio_group_names_end","","",null,null],[5,"xcb_xkb_get_kbd_by_name_replies","","",null,null],[5,"xcb_xkb_get_kbd_by_name_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_xkb_get_kbd_by_name","","",null,null],[5,"xcb_xkb_get_kbd_by_name_unchecked","","",null,null],[5,"xcb_xkb_get_device_info_name","","",null,null],[5,"xcb_xkb_get_device_info_name_length","","",null,null],[5,"xcb_xkb_get_device_info_name_end","","",null,null],[5,"xcb_xkb_get_device_info_btn_actions","","",null,null],[5,"xcb_xkb_get_device_info_btn_actions_length","","",null,null],[5,"xcb_xkb_get_device_info_btn_actions_iterator","","",null,null],[5,"xcb_xkb_get_device_info_leds_length","","",null,null],[5,"xcb_xkb_get_device_info_leds_iterator","","",null,null],[5,"xcb_xkb_get_device_info_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_xkb_get_device_info","","",null,null],[5,"xcb_xkb_get_device_info_unchecked","","",null,null],[5,"xcb_xkb_set_device_info","","",null,null],[5,"xcb_xkb_set_device_info_checked","","",null,null],[5,"xcb_xkb_set_debugging_flags_reply","","the returned value must be freed by the caller using libc::free().",null,null],[5,"xcb_xkb_set_debugging_flags","","",null,null],[5,"xcb_xkb_set_debugging_flags_unchecked","","",null,null],[6,"xcb_xkb_const_t","","",null,null],[6,"xcb_xkb_event_type_t","","",null,null],[6,"xcb_xkb_nkn_detail_t","","",null,null],[6,"xcb_xkb_axn_detail_t","","",null,null],[6,"xcb_xkb_map_part_t","","",null,null],[6,"xcb_xkb_set_map_flags_t","","",null,null],[6,"xcb_xkb_state_part_t","","",null,null],[6,"xcb_xkb_bool_ctrl_t","","",null,null],[6,"xcb_xkb_control_t","","",null,null],[6,"xcb_xkb_ax_option_t","","",null,null],[6,"xcb_xkb_device_spec_t","","",null,null],[6,"xcb_xkb_led_class_result_t","","",null,null],[6,"xcb_xkb_led_class_t","","",null,null],[6,"xcb_xkb_led_class_spec_t","","",null,null],[6,"xcb_xkb_bell_class_result_t","","",null,null],[6,"xcb_xkb_bell_class_t","","",null,null],[6,"xcb_xkb_bell_class_spec_t","","",null,null],[6,"xcb_xkb_id_t","","",null,null],[6,"xcb_xkb_id_spec_t","","",null,null],[6,"xcb_xkb_group_t","","",null,null],[6,"xcb_xkb_groups_t","","",null,null],[6,"xcb_xkb_set_of_group_t","","",null,null],[6,"xcb_xkb_set_of_groups_t","","",null,null],[6,"xcb_xkb_groups_wrap_t","","",null,null],[6,"xcb_xkb_v_mods_high_t","","",null,null],[6,"xcb_xkb_v_mods_low_t","","",null,null],[6,"xcb_xkb_v_mod_t","","",null,null],[6,"xcb_xkb_explicit_t","","",null,null],[6,"xcb_xkb_sym_interpret_match_t","","",null,null],[6,"xcb_xkb_sym_interp_match_t","","",null,null],[6,"xcb_xkb_im_flag_t","","",null,null],[6,"xcb_xkb_im_mods_which_t","","",null,null],[6,"xcb_xkb_im_groups_which_t","","",null,null],[6,"xcb_xkb_cm_detail_t","","",null,null],[6,"xcb_xkb_name_detail_t","","",null,null],[6,"xcb_xkb_gbn_detail_t","","",null,null],[6,"xcb_xkb_xi_feature_t","","",null,null],[6,"xcb_xkb_per_client_flag_t","","",null,null],[6,"xcb_xkb_behavior_type_t","","",null,null],[6,"xcb_xkb_string8_t","","",null,null],[6,"xcb_xkb_doodad_type_t","","",null,null],[6,"xcb_xkb_error_t","","",null,null],[6,"xcb_xkb_sa_t","","",null,null],[6,"xcb_xkb_sa_type_t","","",null,null],[6,"xcb_xkb_sa_move_ptr_flag_t","","",null,null],[6,"xcb_xkb_sa_set_ptr_dflt_flag_t","","",null,null],[6,"xcb_xkb_sa_iso_lock_flag_t","","",null,null],[6,"xcb_xkb_sa_iso_lock_no_affect_t","","",null,null],[6,"xcb_xkb_switch_screen_flag_t","","",null,null],[6,"xcb_xkb_bool_ctrls_high_t","","",null,null],[6,"xcb_xkb_bool_ctrls_low_t","","",null,null],[6,"xcb_xkb_action_message_flag_t","","",null,null],[6,"xcb_xkb_lock_device_flags_t","","",null,null],[6,"xcb_xkb_sa_val_what_t","","",null,null],[17,"XCB_XKB_MAJOR_VERSION","","",null,null],[17,"XCB_XKB_MINOR_VERSION","","",null,null],[17,"XCB_XKB_CONST_MAX_LEGAL_KEY_CODE","","",null,null],[17,"XCB_XKB_CONST_PER_KEY_BIT_ARRAY_SIZE","","",null,null],[17,"XCB_XKB_CONST_KEY_NAME_LENGTH","","",null,null],[17,"XCB_XKB_EVENT_TYPE_NEW_KEYBOARD_NOTIFY","","",null,null],[17,"XCB_XKB_EVENT_TYPE_MAP_NOTIFY","","",null,null],[17,"XCB_XKB_EVENT_TYPE_STATE_NOTIFY","","",null,null],[17,"XCB_XKB_EVENT_TYPE_CONTROLS_NOTIFY","","",null,null],[17,"XCB_XKB_EVENT_TYPE_INDICATOR_STATE_NOTIFY","","",null,null],[17,"XCB_XKB_EVENT_TYPE_INDICATOR_MAP_NOTIFY","","",null,null],[17,"XCB_XKB_EVENT_TYPE_NAMES_NOTIFY","","",null,null],[17,"XCB_XKB_EVENT_TYPE_COMPAT_MAP_NOTIFY","","",null,null],[17,"XCB_XKB_EVENT_TYPE_BELL_NOTIFY","","",null,null],[17,"XCB_XKB_EVENT_TYPE_ACTION_MESSAGE","","",null,null],[17,"XCB_XKB_EVENT_TYPE_ACCESS_X_NOTIFY","","",null,null],[17,"XCB_XKB_EVENT_TYPE_EXTENSION_DEVICE_NOTIFY","","",null,null],[17,"XCB_XKB_NKN_DETAIL_KEYCODES","","",null,null],[17,"XCB_XKB_NKN_DETAIL_GEOMETRY","","",null,null],[17,"XCB_XKB_NKN_DETAIL_DEVICE_ID","","",null,null],[17,"XCB_XKB_AXN_DETAIL_SK_PRESS","","",null,null],[17,"XCB_XKB_AXN_DETAIL_SK_ACCEPT","","",null,null],[17,"XCB_XKB_AXN_DETAIL_SK_REJECT","","",null,null],[17,"XCB_XKB_AXN_DETAIL_SK_RELEASE","","",null,null],[17,"XCB_XKB_AXN_DETAIL_BK_ACCEPT","","",null,null],[17,"XCB_XKB_AXN_DETAIL_BK_REJECT","","",null,null],[17,"XCB_XKB_AXN_DETAIL_AXK_WARNING","","",null,null],[17,"XCB_XKB_MAP_PART_KEY_TYPES","","",null,null],[17,"XCB_XKB_MAP_PART_KEY_SYMS","","",null,null],[17,"XCB_XKB_MAP_PART_MODIFIER_MAP","","",null,null],[17,"XCB_XKB_MAP_PART_EXPLICIT_COMPONENTS","","",null,null],[17,"XCB_XKB_MAP_PART_KEY_ACTIONS","","",null,null],[17,"XCB_XKB_MAP_PART_KEY_BEHAVIORS","","",null,null],[17,"XCB_XKB_MAP_PART_VIRTUAL_MODS","","",null,null],[17,"XCB_XKB_MAP_PART_VIRTUAL_MOD_MAP","","",null,null],[17,"XCB_XKB_SET_MAP_FLAGS_RESIZE_TYPES","","",null,null],[17,"XCB_XKB_SET_MAP_FLAGS_RECOMPUTE_ACTIONS","","",null,null],[17,"XCB_XKB_STATE_PART_MODIFIER_STATE","","",null,null],[17,"XCB_XKB_STATE_PART_MODIFIER_BASE","","",null,null],[17,"XCB_XKB_STATE_PART_MODIFIER_LATCH","","",null,null],[17,"XCB_XKB_STATE_PART_MODIFIER_LOCK","","",null,null],[17,"XCB_XKB_STATE_PART_GROUP_STATE","","",null,null],[17,"XCB_XKB_STATE_PART_GROUP_BASE","","",null,null],[17,"XCB_XKB_STATE_PART_GROUP_LATCH","","",null,null],[17,"XCB_XKB_STATE_PART_GROUP_LOCK","","",null,null],[17,"XCB_XKB_STATE_PART_COMPAT_STATE","","",null,null],[17,"XCB_XKB_STATE_PART_GRAB_MODS","","",null,null],[17,"XCB_XKB_STATE_PART_COMPAT_GRAB_MODS","","",null,null],[17,"XCB_XKB_STATE_PART_LOOKUP_MODS","","",null,null],[17,"XCB_XKB_STATE_PART_COMPAT_LOOKUP_MODS","","",null,null],[17,"XCB_XKB_STATE_PART_POINTER_BUTTONS","","",null,null],[17,"XCB_XKB_BOOL_CTRL_REPEAT_KEYS","","",null,null],[17,"XCB_XKB_BOOL_CTRL_SLOW_KEYS","","",null,null],[17,"XCB_XKB_BOOL_CTRL_BOUNCE_KEYS","","",null,null],[17,"XCB_XKB_BOOL_CTRL_STICKY_KEYS","","",null,null],[17,"XCB_XKB_BOOL_CTRL_MOUSE_KEYS","","",null,null],[17,"XCB_XKB_BOOL_CTRL_MOUSE_KEYS_ACCEL","","",null,null],[17,"XCB_XKB_BOOL_CTRL_ACCESS_X_KEYS","","",null,null],[17,"XCB_XKB_BOOL_CTRL_ACCESS_X_TIMEOUT_MASK","","",null,null],[17,"XCB_XKB_BOOL_CTRL_ACCESS_X_FEEDBACK_MASK","","",null,null],[17,"XCB_XKB_BOOL_CTRL_AUDIBLE_BELL_MASK","","",null,null],[17,"XCB_XKB_BOOL_CTRL_OVERLAY_1_MASK","","",null,null],[17,"XCB_XKB_BOOL_CTRL_OVERLAY_2_MASK","","",null,null],[17,"XCB_XKB_BOOL_CTRL_IGNORE_GROUP_LOCK_MASK","","",null,null],[17,"XCB_XKB_CONTROL_GROUPS_WRAP","","",null,null],[17,"XCB_XKB_CONTROL_INTERNAL_MODS","","",null,null],[17,"XCB_XKB_CONTROL_IGNORE_LOCK_MODS","","",null,null],[17,"XCB_XKB_CONTROL_PER_KEY_REPEAT","","",null,null],[17,"XCB_XKB_CONTROL_CONTROLS_ENABLED","","",null,null],[17,"XCB_XKB_AX_OPTION_SK_PRESS_FB","","",null,null],[17,"XCB_XKB_AX_OPTION_SK_ACCEPT_FB","","",null,null],[17,"XCB_XKB_AX_OPTION_FEATURE_FB","","",null,null],[17,"XCB_XKB_AX_OPTION_SLOW_WARN_FB","","",null,null],[17,"XCB_XKB_AX_OPTION_INDICATOR_FB","","",null,null],[17,"XCB_XKB_AX_OPTION_STICKY_KEYS_FB","","",null,null],[17,"XCB_XKB_AX_OPTION_TWO_KEYS","","",null,null],[17,"XCB_XKB_AX_OPTION_LATCH_TO_LOCK","","",null,null],[17,"XCB_XKB_AX_OPTION_SK_RELEASE_FB","","",null,null],[17,"XCB_XKB_AX_OPTION_SK_REJECT_FB","","",null,null],[17,"XCB_XKB_AX_OPTION_BK_REJECT_FB","","",null,null],[17,"XCB_XKB_AX_OPTION_DUMB_BELL","","",null,null],[17,"XCB_XKB_LED_CLASS_RESULT_KBD_FEEDBACK_CLASS","","",null,null],[17,"XCB_XKB_LED_CLASS_RESULT_LED_FEEDBACK_CLASS","","",null,null],[17,"XCB_XKB_LED_CLASS_KBD_FEEDBACK_CLASS","","",null,null],[17,"XCB_XKB_LED_CLASS_LED_FEEDBACK_CLASS","","",null,null],[17,"XCB_XKB_LED_CLASS_DFLT_XI_CLASS","","",null,null],[17,"XCB_XKB_LED_CLASS_ALL_XI_CLASSES","","",null,null],[17,"XCB_XKB_BELL_CLASS_RESULT_KBD_FEEDBACK_CLASS","","",null,null],[17,"XCB_XKB_BELL_CLASS_RESULT_BELL_FEEDBACK_CLASS","","",null,null],[17,"XCB_XKB_BELL_CLASS_KBD_FEEDBACK_CLASS","","",null,null],[17,"XCB_XKB_BELL_CLASS_BELL_FEEDBACK_CLASS","","",null,null],[17,"XCB_XKB_BELL_CLASS_DFLT_XI_CLASS","","",null,null],[17,"XCB_XKB_ID_USE_CORE_KBD","","",null,null],[17,"XCB_XKB_ID_USE_CORE_PTR","","",null,null],[17,"XCB_XKB_ID_DFLT_XI_CLASS","","",null,null],[17,"XCB_XKB_ID_DFLT_XI_ID","","",null,null],[17,"XCB_XKB_ID_ALL_XI_CLASS","","",null,null],[17,"XCB_XKB_ID_ALL_XI_ID","","",null,null],[17,"XCB_XKB_ID_XI_NONE","","",null,null],[17,"XCB_XKB_GROUP_1","","",null,null],[17,"XCB_XKB_GROUP_2","","",null,null],[17,"XCB_XKB_GROUP_3","","",null,null],[17,"XCB_XKB_GROUP_4","","",null,null],[17,"XCB_XKB_GROUPS_ANY","","",null,null],[17,"XCB_XKB_GROUPS_ALL","","",null,null],[17,"XCB_XKB_SET_OF_GROUP_GROUP_1","","",null,null],[17,"XCB_XKB_SET_OF_GROUP_GROUP_2","","",null,null],[17,"XCB_XKB_SET_OF_GROUP_GROUP_3","","",null,null],[17,"XCB_XKB_SET_OF_GROUP_GROUP_4","","",null,null],[17,"XCB_XKB_SET_OF_GROUPS_ANY","","",null,null],[17,"XCB_XKB_GROUPS_WRAP_WRAP_INTO_RANGE","","",null,null],[17,"XCB_XKB_GROUPS_WRAP_CLAMP_INTO_RANGE","","",null,null],[17,"XCB_XKB_GROUPS_WRAP_REDIRECT_INTO_RANGE","","",null,null],[17,"XCB_XKB_V_MODS_HIGH_15","","",null,null],[17,"XCB_XKB_V_MODS_HIGH_14","","",null,null],[17,"XCB_XKB_V_MODS_HIGH_13","","",null,null],[17,"XCB_XKB_V_MODS_HIGH_12","","",null,null],[17,"XCB_XKB_V_MODS_HIGH_11","","",null,null],[17,"XCB_XKB_V_MODS_HIGH_10","","",null,null],[17,"XCB_XKB_V_MODS_HIGH_9","","",null,null],[17,"XCB_XKB_V_MODS_HIGH_8","","",null,null],[17,"XCB_XKB_V_MODS_LOW_7","","",null,null],[17,"XCB_XKB_V_MODS_LOW_6","","",null,null],[17,"XCB_XKB_V_MODS_LOW_5","","",null,null],[17,"XCB_XKB_V_MODS_LOW_4","","",null,null],[17,"XCB_XKB_V_MODS_LOW_3","","",null,null],[17,"XCB_XKB_V_MODS_LOW_2","","",null,null],[17,"XCB_XKB_V_MODS_LOW_1","","",null,null],[17,"XCB_XKB_V_MODS_LOW_0","","",null,null],[17,"XCB_XKB_V_MOD_15","","",null,null],[17,"XCB_XKB_V_MOD_14","","",null,null],[17,"XCB_XKB_V_MOD_13","","",null,null],[17,"XCB_XKB_V_MOD_12","","",null,null],[17,"XCB_XKB_V_MOD_11","","",null,null],[17,"XCB_XKB_V_MOD_10","","",null,null],[17,"XCB_XKB_V_MOD_9","","",null,null],[17,"XCB_XKB_V_MOD_8","","",null,null],[17,"XCB_XKB_V_MOD_7","","",null,null],[17,"XCB_XKB_V_MOD_6","","",null,null],[17,"XCB_XKB_V_MOD_5","","",null,null],[17,"XCB_XKB_V_MOD_4","","",null,null],[17,"XCB_XKB_V_MOD_3","","",null,null],[17,"XCB_XKB_V_MOD_2","","",null,null],[17,"XCB_XKB_V_MOD_1","","",null,null],[17,"XCB_XKB_V_MOD_0","","",null,null],[17,"XCB_XKB_EXPLICIT_V_MOD_MAP","","",null,null],[17,"XCB_XKB_EXPLICIT_BEHAVIOR","","",null,null],[17,"XCB_XKB_EXPLICIT_AUTO_REPEAT","","",null,null],[17,"XCB_XKB_EXPLICIT_INTERPRET","","",null,null],[17,"XCB_XKB_EXPLICIT_KEY_TYPE_4","","",null,null],[17,"XCB_XKB_EXPLICIT_KEY_TYPE_3","","",null,null],[17,"XCB_XKB_EXPLICIT_KEY_TYPE_2","","",null,null],[17,"XCB_XKB_EXPLICIT_KEY_TYPE_1","","",null,null],[17,"XCB_XKB_SYM_INTERPRET_MATCH_NONE_OF","","",null,null],[17,"XCB_XKB_SYM_INTERPRET_MATCH_ANY_OF_OR_NONE","","",null,null],[17,"XCB_XKB_SYM_INTERPRET_MATCH_ANY_OF","","",null,null],[17,"XCB_XKB_SYM_INTERPRET_MATCH_ALL_OF","","",null,null],[17,"XCB_XKB_SYM_INTERPRET_MATCH_EXACTLY","","",null,null],[17,"XCB_XKB_SYM_INTERP_MATCH_LEVEL_ONE_ONLY","","",null,null],[17,"XCB_XKB_SYM_INTERP_MATCH_OP_MASK","","",null,null],[17,"XCB_XKB_IM_FLAG_NO_EXPLICIT","","",null,null],[17,"XCB_XKB_IM_FLAG_NO_AUTOMATIC","","",null,null],[17,"XCB_XKB_IM_FLAG_LED_DRIVES_KB","","",null,null],[17,"XCB_XKB_IM_MODS_WHICH_USE_COMPAT","","",null,null],[17,"XCB_XKB_IM_MODS_WHICH_USE_EFFECTIVE","","",null,null],[17,"XCB_XKB_IM_MODS_WHICH_USE_LOCKED","","",null,null],[17,"XCB_XKB_IM_MODS_WHICH_USE_LATCHED","","",null,null],[17,"XCB_XKB_IM_MODS_WHICH_USE_BASE","","",null,null],[17,"XCB_XKB_IM_GROUPS_WHICH_USE_COMPAT","","",null,null],[17,"XCB_XKB_IM_GROUPS_WHICH_USE_EFFECTIVE","","",null,null],[17,"XCB_XKB_IM_GROUPS_WHICH_USE_LOCKED","","",null,null],[17,"XCB_XKB_IM_GROUPS_WHICH_USE_LATCHED","","",null,null],[17,"XCB_XKB_IM_GROUPS_WHICH_USE_BASE","","",null,null],[17,"XCB_XKB_CM_DETAIL_SYM_INTERP","","",null,null],[17,"XCB_XKB_CM_DETAIL_GROUP_COMPAT","","",null,null],[17,"XCB_XKB_NAME_DETAIL_KEYCODES","","",null,null],[17,"XCB_XKB_NAME_DETAIL_GEOMETRY","","",null,null],[17,"XCB_XKB_NAME_DETAIL_SYMBOLS","","",null,null],[17,"XCB_XKB_NAME_DETAIL_PHYS_SYMBOLS","","",null,null],[17,"XCB_XKB_NAME_DETAIL_TYPES","","",null,null],[17,"XCB_XKB_NAME_DETAIL_COMPAT","","",null,null],[17,"XCB_XKB_NAME_DETAIL_KEY_TYPE_NAMES","","",null,null],[17,"XCB_XKB_NAME_DETAIL_KT_LEVEL_NAMES","","",null,null],[17,"XCB_XKB_NAME_DETAIL_INDICATOR_NAMES","","",null,null],[17,"XCB_XKB_NAME_DETAIL_KEY_NAMES","","",null,null],[17,"XCB_XKB_NAME_DETAIL_KEY_ALIASES","","",null,null],[17,"XCB_XKB_NAME_DETAIL_VIRTUAL_MOD_NAMES","","",null,null],[17,"XCB_XKB_NAME_DETAIL_GROUP_NAMES","","",null,null],[17,"XCB_XKB_NAME_DETAIL_RG_NAMES","","",null,null],[17,"XCB_XKB_GBN_DETAIL_TYPES","","",null,null],[17,"XCB_XKB_GBN_DETAIL_COMPAT_MAP","","",null,null],[17,"XCB_XKB_GBN_DETAIL_CLIENT_SYMBOLS","","",null,null],[17,"XCB_XKB_GBN_DETAIL_SERVER_SYMBOLS","","",null,null],[17,"XCB_XKB_GBN_DETAIL_INDICATOR_MAPS","","",null,null],[17,"XCB_XKB_GBN_DETAIL_KEY_NAMES","","",null,null],[17,"XCB_XKB_GBN_DETAIL_GEOMETRY","","",null,null],[17,"XCB_XKB_GBN_DETAIL_OTHER_NAMES","","",null,null],[17,"XCB_XKB_XI_FEATURE_KEYBOARDS","","",null,null],[17,"XCB_XKB_XI_FEATURE_BUTTON_ACTIONS","","",null,null],[17,"XCB_XKB_XI_FEATURE_INDICATOR_NAMES","","",null,null],[17,"XCB_XKB_XI_FEATURE_INDICATOR_MAPS","","",null,null],[17,"XCB_XKB_XI_FEATURE_INDICATOR_STATE","","",null,null],[17,"XCB_XKB_PER_CLIENT_FLAG_DETECTABLE_AUTO_REPEAT","","",null,null],[17,"XCB_XKB_PER_CLIENT_FLAG_GRABS_USE_XKB_STATE","","",null,null],[17,"XCB_XKB_PER_CLIENT_FLAG_AUTO_RESET_CONTROLS","","",null,null],[17,"XCB_XKB_PER_CLIENT_FLAG_LOOKUP_STATE_WHEN_GRABBED","","",null,null],[17,"XCB_XKB_PER_CLIENT_FLAG_SEND_EVENT_USES_XKB_STATE","","",null,null],[17,"XCB_XKB_BEHAVIOR_TYPE_DEFAULT","","",null,null],[17,"XCB_XKB_BEHAVIOR_TYPE_LOCK","","",null,null],[17,"XCB_XKB_BEHAVIOR_TYPE_RADIO_GROUP","","",null,null],[17,"XCB_XKB_BEHAVIOR_TYPE_OVERLAY_1","","",null,null],[17,"XCB_XKB_BEHAVIOR_TYPE_OVERLAY_2","","",null,null],[17,"XCB_XKB_BEHAVIOR_TYPE_PERMAMENT_LOCK","","",null,null],[17,"XCB_XKB_BEHAVIOR_TYPE_PERMAMENT_RADIO_GROUP","","",null,null],[17,"XCB_XKB_BEHAVIOR_TYPE_PERMAMENT_OVERLAY_1","","",null,null],[17,"XCB_XKB_BEHAVIOR_TYPE_PERMAMENT_OVERLAY_2","","",null,null],[17,"XCB_XKB_DOODAD_TYPE_OUTLINE","","",null,null],[17,"XCB_XKB_DOODAD_TYPE_SOLID","","",null,null],[17,"XCB_XKB_DOODAD_TYPE_TEXT","","",null,null],[17,"XCB_XKB_DOODAD_TYPE_INDICATOR","","",null,null],[17,"XCB_XKB_DOODAD_TYPE_LOGO","","",null,null],[17,"XCB_XKB_ERROR_BAD_DEVICE","","",null,null],[17,"XCB_XKB_ERROR_BAD_CLASS","","",null,null],[17,"XCB_XKB_ERROR_BAD_ID","","",null,null],[17,"XCB_XKB_KEYBOARD","","",null,null],[17,"XCB_XKB_SA_CLEAR_LOCKS","","",null,null],[17,"XCB_XKB_SA_LATCH_TO_LOCK","","",null,null],[17,"XCB_XKB_SA_USE_MOD_MAP_MODS","","",null,null],[17,"XCB_XKB_SA_GROUP_ABSOLUTE","","",null,null],[17,"XCB_XKB_SA_TYPE_NO_ACTION","","",null,null],[17,"XCB_XKB_SA_TYPE_SET_MODS","","",null,null],[17,"XCB_XKB_SA_TYPE_LATCH_MODS","","",null,null],[17,"XCB_XKB_SA_TYPE_LOCK_MODS","","",null,null],[17,"XCB_XKB_SA_TYPE_SET_GROUP","","",null,null],[17,"XCB_XKB_SA_TYPE_LATCH_GROUP","","",null,null],[17,"XCB_XKB_SA_TYPE_LOCK_GROUP","","",null,null],[17,"XCB_XKB_SA_TYPE_MOVE_PTR","","",null,null],[17,"XCB_XKB_SA_TYPE_PTR_BTN","","",null,null],[17,"XCB_XKB_SA_TYPE_LOCK_PTR_BTN","","",null,null],[17,"XCB_XKB_SA_TYPE_SET_PTR_DFLT","","",null,null],[17,"XCB_XKB_SA_TYPE_ISO_LOCK","","",null,null],[17,"XCB_XKB_SA_TYPE_TERMINATE","","",null,null],[17,"XCB_XKB_SA_TYPE_SWITCH_SCREEN","","",null,null],[17,"XCB_XKB_SA_TYPE_SET_CONTROLS","","",null,null],[17,"XCB_XKB_SA_TYPE_LOCK_CONTROLS","","",null,null],[17,"XCB_XKB_SA_TYPE_ACTION_MESSAGE","","",null,null],[17,"XCB_XKB_SA_TYPE_REDIRECT_KEY","","",null,null],[17,"XCB_XKB_SA_TYPE_DEVICE_BTN","","",null,null],[17,"XCB_XKB_SA_TYPE_LOCK_DEVICE_BTN","","",null,null],[17,"XCB_XKB_SA_TYPE_DEVICE_VALUATOR","","",null,null],[17,"XCB_XKB_SA_MOVE_PTR_FLAG_NO_ACCELERATION","","",null,null],[17,"XCB_XKB_SA_MOVE_PTR_FLAG_MOVE_ABSOLUTE_X","","",null,null],[17,"XCB_XKB_SA_MOVE_PTR_FLAG_MOVE_ABSOLUTE_Y","","",null,null],[17,"XCB_XKB_SA_SET_PTR_DFLT_FLAG_DFLT_BTN_ABSOLUTE","","",null,null],[17,"XCB_XKB_SA_SET_PTR_DFLT_FLAG_AFFECT_DFLT_BUTTON","","",null,null],[17,"XCB_XKB_SA_ISO_LOCK_FLAG_NO_LOCK","","",null,null],[17,"XCB_XKB_SA_ISO_LOCK_FLAG_NO_UNLOCK","","",null,null],[17,"XCB_XKB_SA_ISO_LOCK_FLAG_USE_MOD_MAP_MODS","","",null,null],[17,"XCB_XKB_SA_ISO_LOCK_FLAG_GROUP_ABSOLUTE","","",null,null],[17,"XCB_XKB_SA_ISO_LOCK_FLAG_ISO_DFLT_IS_GROUP","","",null,null],[17,"XCB_XKB_SA_ISO_LOCK_NO_AFFECT_CTRLS","","",null,null],[17,"XCB_XKB_SA_ISO_LOCK_NO_AFFECT_PTR","","",null,null],[17,"XCB_XKB_SA_ISO_LOCK_NO_AFFECT_GROUP","","",null,null],[17,"XCB_XKB_SA_ISO_LOCK_NO_AFFECT_MODS","","",null,null],[17,"XCB_XKB_SWITCH_SCREEN_FLAG_APPLICATION","","",null,null],[17,"XCB_XKB_SWITCH_SCREEN_FLAG_ABSOLUTE","","",null,null],[17,"XCB_XKB_BOOL_CTRLS_HIGH_ACCESS_X_FEEDBACK","","",null,null],[17,"XCB_XKB_BOOL_CTRLS_HIGH_AUDIBLE_BELL","","",null,null],[17,"XCB_XKB_BOOL_CTRLS_HIGH_OVERLAY_1","","",null,null],[17,"XCB_XKB_BOOL_CTRLS_HIGH_OVERLAY_2","","",null,null],[17,"XCB_XKB_BOOL_CTRLS_HIGH_IGNORE_GROUP_LOCK","","",null,null],[17,"XCB_XKB_BOOL_CTRLS_LOW_REPEAT_KEYS","","",null,null],[17,"XCB_XKB_BOOL_CTRLS_LOW_SLOW_KEYS","","",null,null],[17,"XCB_XKB_BOOL_CTRLS_LOW_BOUNCE_KEYS","","",null,null],[17,"XCB_XKB_BOOL_CTRLS_LOW_STICKY_KEYS","","",null,null],[17,"XCB_XKB_BOOL_CTRLS_LOW_MOUSE_KEYS","","",null,null],[17,"XCB_XKB_BOOL_CTRLS_LOW_MOUSE_KEYS_ACCEL","","",null,null],[17,"XCB_XKB_BOOL_CTRLS_LOW_ACCESS_X_KEYS","","",null,null],[17,"XCB_XKB_BOOL_CTRLS_LOW_ACCESS_X_TIMEOUT","","",null,null],[17,"XCB_XKB_ACTION_MESSAGE_FLAG_ON_PRESS","","",null,null],[17,"XCB_XKB_ACTION_MESSAGE_FLAG_ON_RELEASE","","",null,null],[17,"XCB_XKB_ACTION_MESSAGE_FLAG_GEN_KEY_EVENT","","",null,null],[17,"XCB_XKB_LOCK_DEVICE_FLAGS_NO_LOCK","","",null,null],[17,"XCB_XKB_LOCK_DEVICE_FLAGS_NO_UNLOCK","","",null,null],[17,"XCB_XKB_SA_VAL_WHAT_IGNORE_VAL","","",null,null],[17,"XCB_XKB_SA_VAL_WHAT_SET_VAL_MIN","","",null,null],[17,"XCB_XKB_SA_VAL_WHAT_SET_VAL_CENTER","","",null,null],[17,"XCB_XKB_SA_VAL_WHAT_SET_VAL_MAX","","",null,null],[17,"XCB_XKB_SA_VAL_WHAT_SET_VAL_RELATIVE","","",null,null],[17,"XCB_XKB_SA_VAL_WHAT_SET_VAL_ABSOLUTE","","",null,null],[17,"XCB_XKB_USE_EXTENSION","","",null,null],[17,"XCB_XKB_SELECT_EVENTS","","",null,null],[17,"XCB_XKB_BELL","","",null,null],[17,"XCB_XKB_GET_STATE","","",null,null],[17,"XCB_XKB_LATCH_LOCK_STATE","","",null,null],[17,"XCB_XKB_GET_CONTROLS","","",null,null],[17,"XCB_XKB_SET_CONTROLS","","",null,null],[17,"XCB_XKB_GET_MAP","","",null,null],[17,"XCB_XKB_SET_MAP","","",null,null],[17,"XCB_XKB_GET_COMPAT_MAP","","",null,null],[17,"XCB_XKB_SET_COMPAT_MAP","","",null,null],[17,"XCB_XKB_GET_INDICATOR_STATE","","",null,null],[17,"XCB_XKB_GET_INDICATOR_MAP","","",null,null],[17,"XCB_XKB_SET_INDICATOR_MAP","","",null,null],[17,"XCB_XKB_GET_NAMED_INDICATOR","","",null,null],[17,"XCB_XKB_SET_NAMED_INDICATOR","","",null,null],[17,"XCB_XKB_GET_NAMES","","",null,null],[17,"XCB_XKB_SET_NAMES","","",null,null],[17,"XCB_XKB_PER_CLIENT_FLAGS","","",null,null],[17,"XCB_XKB_LIST_COMPONENTS","","",null,null],[17,"XCB_XKB_GET_KBD_BY_NAME","","",null,null],[17,"XCB_XKB_GET_DEVICE_INFO","","",null,null],[17,"XCB_XKB_SET_DEVICE_INFO","","",null,null],[17,"XCB_XKB_SET_DEBUGGING_FLAGS","","",null,null],[17,"XCB_XKB_NEW_KEYBOARD_NOTIFY","","",null,null],[17,"XCB_XKB_MAP_NOTIFY","","",null,null],[17,"XCB_XKB_STATE_NOTIFY","","",null,null],[17,"XCB_XKB_CONTROLS_NOTIFY","","",null,null],[17,"XCB_XKB_INDICATOR_STATE_NOTIFY","","",null,null],[17,"XCB_XKB_INDICATOR_MAP_NOTIFY","","",null,null],[17,"XCB_XKB_NAMES_NOTIFY","","",null,null],[17,"XCB_XKB_COMPAT_MAP_NOTIFY","","",null,null],[17,"XCB_XKB_BELL_NOTIFY","","",null,null],[17,"XCB_XKB_ACTION_MESSAGE","","",null,null],[17,"XCB_XKB_ACCESS_X_NOTIFY","","",null,null],[17,"XCB_XKB_EXTENSION_DEVICE_NOTIFY","","",null,null],[11,"clone","","",649,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_indicator_map_t"}}],[11,"clone","","",651,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_mod_def_t"}}],[11,"clone","","",653,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_key_name_t"}}],[11,"clone","","",655,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_key_alias_t"}}],[11,"clone","","",659,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_kt_map_entry_t"}}],[11,"clone","","",665,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_common_behavior_t"}}],[11,"clone","","",667,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_default_behavior_t"}}],[11,"clone","","",669,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_lock_behavior_t"}}],[11,"clone","","",671,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_radio_group_behavior_t"}}],[11,"clone","","",673,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_overlay_behavior_t"}}],[11,"clone","","",675,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_permament_lock_behavior_t"}}],[11,"clone","","",677,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_permament_radio_group_behavior_t"}}],[11,"clone","","",679,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_permament_overlay_behavior_t"}}],[11,"clone","","",681,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_behavior_t"}}],[11,"clone","","",683,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_set_behavior_t"}}],[11,"clone","","",685,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_set_explicit_t"}}],[11,"clone","","",687,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_key_mod_map_t"}}],[11,"clone","","",689,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_key_v_mod_map_t"}}],[11,"clone","","",691,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_kt_set_map_entry_t"}}],[11,"clone","","",700,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_key_t"}}],[11,"clone","","",702,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_overlay_key_t"}}],[11,"clone","","",714,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_keyboard_error_t"}}],[11,"clone","","",715,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_sa_no_action_t"}}],[11,"clone","","",717,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_sa_set_mods_t"}}],[11,"clone","","",719,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_sa_latch_mods_t"}}],[11,"clone","","",721,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_sa_lock_mods_t"}}],[11,"clone","","",723,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_sa_set_group_t"}}],[11,"clone","","",725,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_sa_latch_group_t"}}],[11,"clone","","",727,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_sa_lock_group_t"}}],[11,"clone","","",729,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_sa_move_ptr_t"}}],[11,"clone","","",731,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_sa_ptr_btn_t"}}],[11,"clone","","",733,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_sa_lock_ptr_btn_t"}}],[11,"clone","","",735,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_sa_set_ptr_dflt_t"}}],[11,"clone","","",737,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_sa_iso_lock_t"}}],[11,"clone","","",739,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_sa_terminate_t"}}],[11,"clone","","",741,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_sa_switch_screen_t"}}],[11,"clone","","",743,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_sa_set_controls_t"}}],[11,"clone","","",745,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_sa_lock_controls_t"}}],[11,"clone","","",747,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_sa_action_message_t"}}],[11,"clone","","",749,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_sa_redirect_key_t"}}],[11,"clone","","",751,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_sa_device_btn_t"}}],[11,"clone","","",753,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_sa_lock_device_btn_t"}}],[11,"clone","","",755,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_sa_device_valuator_t"}}],[11,"clone","","",757,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_si_action_t"}}],[11,"clone","","",759,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_sym_interpret_t"}}],[11,"clone","","",761,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_action_t"}}],[11,"clone","","",763,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_use_extension_request_t"}}],[11,"clone","","",826,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_use_extension_cookie_t"}}],[11,"clone","","",764,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_use_extension_reply_t"}}],[11,"clone","","",767,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_bell_request_t"}}],[11,"clone","","",768,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_get_state_request_t"}}],[11,"clone","","",827,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_get_state_cookie_t"}}],[11,"clone","","",769,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_get_state_reply_t"}}],[11,"clone","","",770,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_latch_lock_state_request_t"}}],[11,"clone","","",771,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_get_controls_request_t"}}],[11,"clone","","",828,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_get_controls_cookie_t"}}],[11,"clone","","",772,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_get_controls_reply_t"}}],[11,"clone","","",773,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_set_controls_request_t"}}],[11,"clone","","",774,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_get_map_request_t"}}],[11,"clone","","",829,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_get_map_cookie_t"}}],[11,"clone","","",779,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_get_compat_map_request_t"}}],[11,"clone","","",830,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_get_compat_map_cookie_t"}}],[11,"clone","","",782,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_get_indicator_state_request_t"}}],[11,"clone","","",831,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_get_indicator_state_cookie_t"}}],[11,"clone","","",783,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_get_indicator_state_reply_t"}}],[11,"clone","","",784,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_get_indicator_map_request_t"}}],[11,"clone","","",832,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_get_indicator_map_cookie_t"}}],[11,"clone","","",787,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_get_named_indicator_request_t"}}],[11,"clone","","",833,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_get_named_indicator_cookie_t"}}],[11,"clone","","",788,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_get_named_indicator_reply_t"}}],[11,"clone","","",789,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_set_named_indicator_request_t"}}],[11,"clone","","",790,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_get_names_request_t"}}],[11,"clone","","",834,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_get_names_cookie_t"}}],[11,"clone","","",795,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_per_client_flags_request_t"}}],[11,"clone","","",835,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_per_client_flags_cookie_t"}}],[11,"clone","","",796,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_per_client_flags_reply_t"}}],[11,"clone","","",797,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_list_components_request_t"}}],[11,"clone","","",836,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_list_components_cookie_t"}}],[11,"clone","","",799,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_get_kbd_by_name_request_t"}}],[11,"clone","","",837,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_get_kbd_by_name_cookie_t"}}],[11,"clone","","",809,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_get_device_info_request_t"}}],[11,"clone","","",838,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_get_device_info_cookie_t"}}],[11,"clone","","",839,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_set_debugging_flags_cookie_t"}}],[11,"clone","","",813,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_set_debugging_flags_reply_t"}}],[11,"clone","","",814,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_new_keyboard_notify_event_t"}}],[11,"clone","","",815,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_map_notify_event_t"}}],[11,"clone","","",816,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_state_notify_event_t"}}],[11,"clone","","",817,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_controls_notify_event_t"}}],[11,"clone","","",818,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_indicator_state_notify_event_t"}}],[11,"clone","","",819,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_indicator_map_notify_event_t"}}],[11,"clone","","",820,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_names_notify_event_t"}}],[11,"clone","","",821,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_compat_map_notify_event_t"}}],[11,"clone","","",822,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_bell_notify_event_t"}}],[11,"clone","","",823,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_action_message_event_t"}}],[11,"clone","","",824,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_access_x_notify_event_t"}}],[11,"clone","","",825,{"inputs":[{"name":"self"}],"output":{"name":"xcb_xkb_extension_device_notify_event_t"}}]],"paths":[[3,"StructPtr"],[3,"Event"],[3,"Error"],[3,"Cookie"],[3,"Reply"],[4,"ConnError"],[8,"Zero"],[6,"VoidCookie"],[3,"Connection"],[3,"QueryExtensionData"],[3,"RequestError"],[3,"ValueError"],[3,"WindowError"],[3,"PixmapError"],[3,"AtomError"],[3,"CursorError"],[3,"FontError"],[3,"MatchError"],[3,"DrawableError"],[3,"AccessError"],[3,"AllocError"],[3,"ColormapError"],[3,"GContextError"],[3,"IdChoiceError"],[3,"NameError"],[3,"LengthError"],[3,"ImplementationError"],[3,"Char2b"],[3,"Point"],[3,"Rectangle"],[3,"Arc"],[3,"Format"],[3,"Visualtype"],[3,"Timecoord"],[3,"Fontprop"],[3,"Charinfo"],[3,"Segment"],[3,"Coloritem"],[3,"Rgb"],[6,"Char2bIterator"],[6,"PointIterator"],[6,"RectangleIterator"],[6,"ArcIterator"],[6,"FormatIterator"],[6,"VisualtypeIterator"],[6,"Depth"],[6,"DepthIterator"],[6,"Screen"],[6,"ScreenIterator"],[6,"SetupRequest"],[6,"SetupRequestIterator"],[6,"SetupFailed"],[6,"SetupFailedIterator"],[6,"SetupAuthenticate"],[6,"SetupAuthenticateIterator"],[6,"Setup"],[6,"SetupIterator"],[6,"KeyPressEvent"],[6,"ButtonPressEvent"],[6,"MotionNotifyEvent"],[6,"EnterNotifyEvent"],[6,"FocusInEvent"],[6,"KeymapNotifyEvent"],[6,"ExposeEvent"],[6,"GraphicsExposureEvent"],[6,"NoExposureEvent"],[6,"VisibilityNotifyEvent"],[6,"CreateNotifyEvent"],[6,"DestroyNotifyEvent"],[6,"UnmapNotifyEvent"],[6,"MapNotifyEvent"],[6,"MapRequestEvent"],[6,"ReparentNotifyEvent"],[6,"ConfigureNotifyEvent"],[6,"ConfigureRequestEvent"],[6,"GravityNotifyEvent"],[6,"ResizeRequestEvent"],[6,"CirculateNotifyEvent"],[6,"PropertyNotifyEvent"],[6,"SelectionClearEvent"],[6,"SelectionRequestEvent"],[6,"SelectionNotifyEvent"],[6,"ColormapNotifyEvent"],[6,"ClientMessageData"],[6,"ClientMessageDataIterator"],[6,"ClientMessageEvent"],[6,"MappingNotifyEvent"],[6,"GeGenericEvent"],[6,"GetWindowAttributesCookie"],[6,"GetWindowAttributesReply"],[6,"GetGeometryCookie"],[6,"GetGeometryReply"],[6,"QueryTreeCookie"],[6,"QueryTreeReply"],[6,"InternAtomCookie"],[6,"InternAtomReply"],[6,"GetAtomNameCookie"],[6,"GetAtomNameReply"],[6,"GetPropertyCookie"],[6,"GetPropertyReply"],[6,"ListPropertiesCookie"],[6,"ListPropertiesReply"],[6,"GetSelectionOwnerCookie"],[6,"GetSelectionOwnerReply"],[6,"GrabPointerCookie"],[6,"GrabPointerReply"],[6,"GrabKeyboardCookie"],[6,"GrabKeyboardReply"],[6,"QueryPointerCookie"],[6,"QueryPointerReply"],[6,"TimecoordIterator"],[6,"GetMotionEventsCookie"],[6,"GetMotionEventsReply"],[6,"TranslateCoordinatesCookie"],[6,"TranslateCoordinatesReply"],[6,"GetInputFocusCookie"],[6,"GetInputFocusReply"],[6,"QueryKeymapCookie"],[6,"QueryKeymapReply"],[6,"FontpropIterator"],[6,"CharinfoIterator"],[6,"QueryFontCookie"],[6,"QueryFontReply"],[6,"QueryTextExtentsCookie"],[6,"QueryTextExtentsReply"],[6,"Str"],[6,"StrIterator"],[6,"ListFontsCookie"],[6,"ListFontsReply"],[6,"ListFontsWithInfoCookie"],[6,"ListFontsWithInfoReply"],[6,"GetFontPathCookie"],[6,"GetFontPathReply"],[6,"SegmentIterator"],[6,"GetImageCookie"],[6,"GetImageReply"],[6,"ListInstalledColormapsCookie"],[6,"ListInstalledColormapsReply"],[6,"AllocColorCookie"],[6,"AllocColorReply"],[6,"AllocNamedColorCookie"],[6,"AllocNamedColorReply"],[6,"AllocColorCellsCookie"],[6,"AllocColorCellsReply"],[6,"AllocColorPlanesCookie"],[6,"AllocColorPlanesReply"],[6,"ColoritemIterator"],[6,"RgbIterator"],[6,"QueryColorsCookie"],[6,"QueryColorsReply"],[6,"LookupColorCookie"],[6,"LookupColorReply"],[6,"QueryBestSizeCookie"],[6,"QueryBestSizeReply"],[6,"QueryExtensionCookie"],[6,"QueryExtensionReply"],[6,"ListExtensionsCookie"],[6,"ListExtensionsReply"],[6,"GetKeyboardMappingCookie"],[6,"GetKeyboardMappingReply"],[6,"GetKeyboardControlCookie"],[6,"GetKeyboardControlReply"],[6,"GetPointerControlCookie"],[6,"GetPointerControlReply"],[6,"GetScreenSaverCookie"],[6,"GetScreenSaverReply"],[6,"Host"],[6,"HostIterator"],[6,"ListHostsCookie"],[6,"ListHostsReply"],[6,"SetPointerMappingCookie"],[6,"SetPointerMappingReply"],[6,"GetPointerMappingCookie"],[6,"GetPointerMappingReply"],[6,"SetModifierMappingCookie"],[6,"SetModifierMappingReply"],[6,"GetModifierMappingCookie"],[6,"GetModifierMappingReply"],[6,"EnableCookie"],[6,"EnableReply"],[6,"GetVersionCookie"],[6,"GetVersionReply"],[6,"GetXidRangeCookie"],[6,"GetXidRangeReply"],[6,"GetXidListCookie"],[6,"GetXidListReply"],[3,"KeyboardError"],[3,"IndicatorMap"],[3,"ModDef"],[3,"KtMapEntry"],[3,"CommonBehavior"],[3,"DefaultBehavior"],[3,"LockBehavior"],[3,"RadioGroupBehavior"],[3,"OverlayBehavior"],[3,"PermamentLockBehavior"],[3,"PermamentRadioGroupBehavior"],[3,"PermamentOverlayBehavior"],[3,"SetExplicit"],[3,"KeyModMap"],[3,"KeyVModMap"],[3,"KtSetMapEntry"],[3,"SaNoAction"],[3,"SaSetMods"],[3,"SaLatchMods"],[3,"SaLockMods"],[3,"SaSetGroup"],[3,"SaLatchGroup"],[3,"SaLockGroup"],[3,"SaMovePtr"],[3,"SaPtrBtn"],[3,"SaLockPtrBtn"],[3,"SaSetPtrDflt"],[3,"SaIsoLock"],[3,"SaTerminate"],[3,"SaSwitchScreen"],[3,"SaSetControls"],[3,"SaLockControls"],[3,"SaRedirectKey"],[3,"SaDeviceBtn"],[3,"SaLockDeviceBtn"],[3,"SaDeviceValuator"],[6,"IndicatorMapIterator"],[6,"ModDefIterator"],[6,"KeyName"],[6,"KeyNameIterator"],[6,"KeyAlias"],[6,"KeyAliasIterator"],[6,"CountedString16"],[6,"CountedString16Iterator"],[6,"KtMapEntryIterator"],[6,"KeyType"],[6,"KeyTypeIterator"],[6,"KeySymMap"],[6,"KeySymMapIterator"],[6,"CommonBehaviorIterator"],[6,"DefaultBehaviorIterator"],[6,"LockBehaviorIterator"],[6,"RadioGroupBehaviorIterator"],[6,"OverlayBehaviorIterator"],[6,"PermamentLockBehaviorIterator"],[6,"PermamentRadioGroupBehaviorIterator"],[6,"PermamentOverlayBehaviorIterator"],[6,"Behavior"],[6,"BehaviorIterator"],[6,"SetBehavior"],[6,"SetBehaviorIterator"],[6,"SetExplicitIterator"],[6,"KeyModMapIterator"],[6,"KeyVModMapIterator"],[6,"KtSetMapEntryIterator"],[6,"SetKeyType"],[6,"SetKeyTypeIterator"],[6,"Outline"],[6,"OutlineIterator"],[6,"Shape"],[6,"ShapeIterator"],[6,"Key"],[6,"KeyIterator"],[6,"OverlayKey"],[6,"OverlayKeyIterator"],[6,"OverlayRow"],[6,"OverlayRowIterator"],[6,"Overlay"],[6,"OverlayIterator"],[6,"Row"],[6,"RowIterator"],[6,"Listing"],[6,"ListingIterator"],[6,"DeviceLedInfo"],[6,"DeviceLedInfoIterator"],[6,"SaNoActionIterator"],[6,"SaSetModsIterator"],[6,"SaLatchModsIterator"],[6,"SaLockModsIterator"],[6,"SaSetGroupIterator"],[6,"SaLatchGroupIterator"],[6,"SaLockGroupIterator"],[6,"SaMovePtrIterator"],[6,"SaPtrBtnIterator"],[6,"SaLockPtrBtnIterator"],[6,"SaSetPtrDfltIterator"],[6,"SaIsoLockIterator"],[6,"SaTerminateIterator"],[6,"SaSwitchScreenIterator"],[6,"SaSetControlsIterator"],[6,"SaLockControlsIterator"],[6,"SaActionMessage"],[6,"SaActionMessageIterator"],[6,"SaRedirectKeyIterator"],[6,"SaDeviceBtnIterator"],[6,"SaLockDeviceBtnIterator"],[6,"SaDeviceValuatorIterator"],[6,"SiAction"],[6,"SiActionIterator"],[6,"SymInterpret"],[6,"SymInterpretIterator"],[6,"Action"],[6,"ActionIterator"],[6,"UseExtensionCookie"],[6,"UseExtensionReply"],[6,"GetStateCookie"],[6,"GetStateReply"],[6,"GetControlsCookie"],[6,"GetControlsReply"],[6,"GetMapCookie"],[6,"GetMapReply"],[6,"GetCompatMapCookie"],[6,"GetCompatMapReply"],[6,"GetIndicatorStateCookie"],[6,"GetIndicatorStateReply"],[6,"GetIndicatorMapCookie"],[6,"GetIndicatorMapReply"],[6,"GetNamedIndicatorCookie"],[6,"GetNamedIndicatorReply"],[6,"GetNamesCookie"],[6,"GetNamesReply"],[6,"PerClientFlagsCookie"],[6,"PerClientFlagsReply"],[6,"ListComponentsCookie"],[6,"ListComponentsReply"],[6,"GetKbdByNameCookie"],[6,"GetKbdByNameReply"],[6,"GetDeviceInfoCookie"],[6,"GetDeviceInfoReply"],[6,"SetDebuggingFlagsCookie"],[6,"SetDebuggingFlagsReply"],[6,"NewKeyboardNotifyEvent"],[6,"MapNotifyEvent"],[6,"StateNotifyEvent"],[6,"ControlsNotifyEvent"],[6,"IndicatorStateNotifyEvent"],[6,"IndicatorMapNotifyEvent"],[6,"NamesNotifyEvent"],[6,"CompatMapNotifyEvent"],[6,"BellNotifyEvent"],[6,"ActionMessageEvent"],[6,"AccessXNotifyEvent"],[6,"ExtensionDeviceNotifyEvent"],[3,"xcb_generic_iterator_t"],[3,"xcb_generic_reply_t"],[3,"xcb_generic_event_t"],[3,"xcb_ge_event_t"],[3,"xcb_generic_error_t"],[3,"xcb_void_cookie_t"],[3,"xcb_auth_info_t"],[3,"xcb_char2b_t"],[3,"xcb_char2b_iterator_t"],[3,"xcb_window_iterator_t"],[3,"xcb_pixmap_iterator_t"],[3,"xcb_cursor_iterator_t"],[3,"xcb_font_iterator_t"],[3,"xcb_gcontext_iterator_t"],[3,"xcb_colormap_iterator_t"],[3,"xcb_atom_iterator_t"],[3,"xcb_drawable_iterator_t"],[3,"xcb_fontable_iterator_t"],[3,"xcb_visualid_iterator_t"],[3,"xcb_timestamp_iterator_t"],[3,"xcb_keysym_iterator_t"],[3,"xcb_keycode_iterator_t"],[3,"xcb_button_iterator_t"],[3,"xcb_point_t"],[3,"xcb_point_iterator_t"],[3,"xcb_rectangle_t"],[3,"xcb_rectangle_iterator_t"],[3,"xcb_arc_t"],[3,"xcb_arc_iterator_t"],[3,"xcb_format_t"],[3,"xcb_format_iterator_t"],[3,"xcb_visualtype_t"],[3,"xcb_visualtype_iterator_t"],[3,"xcb_depth_t"],[3,"xcb_depth_iterator_t"],[3,"xcb_screen_t"],[3,"xcb_screen_iterator_t"],[3,"xcb_setup_request_t"],[3,"xcb_setup_request_iterator_t"],[3,"xcb_setup_failed_t"],[3,"xcb_setup_failed_iterator_t"],[3,"xcb_setup_authenticate_t"],[3,"xcb_setup_authenticate_iterator_t"],[3,"xcb_setup_t"],[3,"xcb_setup_iterator_t"],[3,"xcb_key_press_event_t"],[3,"xcb_button_press_event_t"],[3,"xcb_motion_notify_event_t"],[3,"xcb_enter_notify_event_t"],[3,"xcb_focus_in_event_t"],[3,"xcb_keymap_notify_event_t"],[3,"xcb_expose_event_t"],[3,"xcb_graphics_exposure_event_t"],[3,"xcb_no_exposure_event_t"],[3,"xcb_visibility_notify_event_t"],[3,"xcb_create_notify_event_t"],[3,"xcb_destroy_notify_event_t"],[3,"xcb_unmap_notify_event_t"],[3,"xcb_map_notify_event_t"],[3,"xcb_map_request_event_t"],[3,"xcb_reparent_notify_event_t"],[3,"xcb_configure_notify_event_t"],[3,"xcb_configure_request_event_t"],[3,"xcb_gravity_notify_event_t"],[3,"xcb_resize_request_event_t"],[3,"xcb_circulate_notify_event_t"],[3,"xcb_property_notify_event_t"],[3,"xcb_selection_clear_event_t"],[3,"xcb_selection_request_event_t"],[3,"xcb_selection_notify_event_t"],[3,"xcb_colormap_notify_event_t"],[3,"xcb_client_message_data_t"],[3,"xcb_client_message_data_iterator_t"],[3,"xcb_client_message_event_t"],[3,"xcb_mapping_notify_event_t"],[3,"xcb_ge_generic_event_t"],[3,"xcb_request_error_t"],[3,"xcb_value_error_t"],[3,"xcb_create_window_request_t"],[3,"xcb_change_window_attributes_request_t"],[3,"xcb_get_window_attributes_request_t"],[3,"xcb_get_window_attributes_reply_t"],[3,"xcb_destroy_window_request_t"],[3,"xcb_destroy_subwindows_request_t"],[3,"xcb_change_save_set_request_t"],[3,"xcb_reparent_window_request_t"],[3,"xcb_map_window_request_t"],[3,"xcb_map_subwindows_request_t"],[3,"xcb_unmap_window_request_t"],[3,"xcb_unmap_subwindows_request_t"],[3,"xcb_configure_window_request_t"],[3,"xcb_circulate_window_request_t"],[3,"xcb_get_geometry_request_t"],[3,"xcb_get_geometry_reply_t"],[3,"xcb_query_tree_request_t"],[3,"xcb_query_tree_reply_t"],[3,"xcb_intern_atom_request_t"],[3,"xcb_intern_atom_reply_t"],[3,"xcb_get_atom_name_request_t"],[3,"xcb_get_atom_name_reply_t"],[3,"xcb_change_property_request_t"],[3,"xcb_delete_property_request_t"],[3,"xcb_get_property_request_t"],[3,"xcb_get_property_reply_t"],[3,"xcb_list_properties_request_t"],[3,"xcb_list_properties_reply_t"],[3,"xcb_set_selection_owner_request_t"],[3,"xcb_get_selection_owner_request_t"],[3,"xcb_get_selection_owner_reply_t"],[3,"xcb_convert_selection_request_t"],[3,"xcb_send_event_request_t"],[3,"xcb_grab_pointer_request_t"],[3,"xcb_grab_pointer_reply_t"],[3,"xcb_ungrab_pointer_request_t"],[3,"xcb_grab_button_request_t"],[3,"xcb_ungrab_button_request_t"],[3,"xcb_change_active_pointer_grab_request_t"],[3,"xcb_grab_keyboard_request_t"],[3,"xcb_grab_keyboard_reply_t"],[3,"xcb_ungrab_keyboard_request_t"],[3,"xcb_grab_key_request_t"],[3,"xcb_ungrab_key_request_t"],[3,"xcb_allow_events_request_t"],[3,"xcb_grab_server_request_t"],[3,"xcb_ungrab_server_request_t"],[3,"xcb_query_pointer_request_t"],[3,"xcb_query_pointer_reply_t"],[3,"xcb_timecoord_t"],[3,"xcb_timecoord_iterator_t"],[3,"xcb_get_motion_events_request_t"],[3,"xcb_get_motion_events_reply_t"],[3,"xcb_translate_coordinates_request_t"],[3,"xcb_translate_coordinates_reply_t"],[3,"xcb_warp_pointer_request_t"],[3,"xcb_set_input_focus_request_t"],[3,"xcb_get_input_focus_request_t"],[3,"xcb_get_input_focus_reply_t"],[3,"xcb_query_keymap_request_t"],[3,"xcb_query_keymap_reply_t"],[3,"xcb_open_font_request_t"],[3,"xcb_close_font_request_t"],[3,"xcb_fontprop_t"],[3,"xcb_fontprop_iterator_t"],[3,"xcb_charinfo_t"],[3,"xcb_charinfo_iterator_t"],[3,"xcb_query_font_request_t"],[3,"xcb_query_font_reply_t"],[3,"xcb_query_text_extents_request_t"],[3,"xcb_query_text_extents_reply_t"],[3,"xcb_str_t"],[3,"xcb_str_iterator_t"],[3,"xcb_list_fonts_request_t"],[3,"xcb_list_fonts_reply_t"],[3,"xcb_list_fonts_with_info_request_t"],[3,"xcb_list_fonts_with_info_reply_t"],[3,"xcb_set_font_path_request_t"],[3,"xcb_get_font_path_request_t"],[3,"xcb_get_font_path_reply_t"],[3,"xcb_create_pixmap_request_t"],[3,"xcb_free_pixmap_request_t"],[3,"xcb_create_gc_request_t"],[3,"xcb_change_gc_request_t"],[3,"xcb_copy_gc_request_t"],[3,"xcb_set_dashes_request_t"],[3,"xcb_set_clip_rectangles_request_t"],[3,"xcb_free_gc_request_t"],[3,"xcb_clear_area_request_t"],[3,"xcb_copy_area_request_t"],[3,"xcb_copy_plane_request_t"],[3,"xcb_poly_point_request_t"],[3,"xcb_poly_line_request_t"],[3,"xcb_segment_t"],[3,"xcb_segment_iterator_t"],[3,"xcb_poly_segment_request_t"],[3,"xcb_poly_rectangle_request_t"],[3,"xcb_poly_arc_request_t"],[3,"xcb_fill_poly_request_t"],[3,"xcb_poly_fill_rectangle_request_t"],[3,"xcb_poly_fill_arc_request_t"],[3,"xcb_put_image_request_t"],[3,"xcb_get_image_request_t"],[3,"xcb_get_image_reply_t"],[3,"xcb_poly_text_8_request_t"],[3,"xcb_poly_text_16_request_t"],[3,"xcb_image_text_8_request_t"],[3,"xcb_image_text_16_request_t"],[3,"xcb_create_colormap_request_t"],[3,"xcb_free_colormap_request_t"],[3,"xcb_copy_colormap_and_free_request_t"],[3,"xcb_install_colormap_request_t"],[3,"xcb_uninstall_colormap_request_t"],[3,"xcb_list_installed_colormaps_request_t"],[3,"xcb_list_installed_colormaps_reply_t"],[3,"xcb_alloc_color_request_t"],[3,"xcb_alloc_color_reply_t"],[3,"xcb_alloc_named_color_request_t"],[3,"xcb_alloc_named_color_reply_t"],[3,"xcb_alloc_color_cells_request_t"],[3,"xcb_alloc_color_cells_reply_t"],[3,"xcb_alloc_color_planes_request_t"],[3,"xcb_alloc_color_planes_reply_t"],[3,"xcb_free_colors_request_t"],[3,"xcb_coloritem_t"],[3,"xcb_coloritem_iterator_t"],[3,"xcb_store_colors_request_t"],[3,"xcb_store_named_color_request_t"],[3,"xcb_rgb_t"],[3,"xcb_rgb_iterator_t"],[3,"xcb_query_colors_request_t"],[3,"xcb_query_colors_reply_t"],[3,"xcb_lookup_color_request_t"],[3,"xcb_lookup_color_reply_t"],[3,"xcb_create_cursor_request_t"],[3,"xcb_create_glyph_cursor_request_t"],[3,"xcb_free_cursor_request_t"],[3,"xcb_recolor_cursor_request_t"],[3,"xcb_query_best_size_request_t"],[3,"xcb_query_best_size_reply_t"],[3,"xcb_query_extension_request_t"],[3,"xcb_query_extension_reply_t"],[3,"xcb_list_extensions_request_t"],[3,"xcb_list_extensions_reply_t"],[3,"xcb_change_keyboard_mapping_request_t"],[3,"xcb_get_keyboard_mapping_request_t"],[3,"xcb_get_keyboard_mapping_reply_t"],[3,"xcb_change_keyboard_control_request_t"],[3,"xcb_get_keyboard_control_request_t"],[3,"xcb_get_keyboard_control_reply_t"],[3,"xcb_bell_request_t"],[3,"xcb_change_pointer_control_request_t"],[3,"xcb_get_pointer_control_request_t"],[3,"xcb_get_pointer_control_reply_t"],[3,"xcb_set_screen_saver_request_t"],[3,"xcb_get_screen_saver_request_t"],[3,"xcb_get_screen_saver_reply_t"],[3,"xcb_change_hosts_request_t"],[3,"xcb_host_t"],[3,"xcb_host_iterator_t"],[3,"xcb_list_hosts_request_t"],[3,"xcb_list_hosts_reply_t"],[3,"xcb_set_access_control_request_t"],[3,"xcb_set_close_down_mode_request_t"],[3,"xcb_kill_client_request_t"],[3,"xcb_rotate_properties_request_t"],[3,"xcb_force_screen_saver_request_t"],[3,"xcb_set_pointer_mapping_request_t"],[3,"xcb_set_pointer_mapping_reply_t"],[3,"xcb_get_pointer_mapping_request_t"],[3,"xcb_get_pointer_mapping_reply_t"],[3,"xcb_set_modifier_mapping_request_t"],[3,"xcb_set_modifier_mapping_reply_t"],[3,"xcb_get_modifier_mapping_request_t"],[3,"xcb_get_modifier_mapping_reply_t"],[3,"xcb_no_operation_request_t"],[3,"xcb_get_window_attributes_cookie_t"],[3,"xcb_get_geometry_cookie_t"],[3,"xcb_query_tree_cookie_t"],[3,"xcb_intern_atom_cookie_t"],[3,"xcb_get_atom_name_cookie_t"],[3,"xcb_get_property_cookie_t"],[3,"xcb_list_properties_cookie_t"],[3,"xcb_get_selection_owner_cookie_t"],[3,"xcb_grab_pointer_cookie_t"],[3,"xcb_grab_keyboard_cookie_t"],[3,"xcb_query_pointer_cookie_t"],[3,"xcb_get_motion_events_cookie_t"],[3,"xcb_translate_coordinates_cookie_t"],[3,"xcb_get_input_focus_cookie_t"],[3,"xcb_query_keymap_cookie_t"],[3,"xcb_query_font_cookie_t"],[3,"xcb_query_text_extents_cookie_t"],[3,"xcb_list_fonts_cookie_t"],[3,"xcb_list_fonts_with_info_cookie_t"],[3,"xcb_get_font_path_cookie_t"],[3,"xcb_get_image_cookie_t"],[3,"xcb_list_installed_colormaps_cookie_t"],[3,"xcb_alloc_color_cookie_t"],[3,"xcb_alloc_named_color_cookie_t"],[3,"xcb_alloc_color_cells_cookie_t"],[3,"xcb_alloc_color_planes_cookie_t"],[3,"xcb_query_colors_cookie_t"],[3,"xcb_lookup_color_cookie_t"],[3,"xcb_query_best_size_cookie_t"],[3,"xcb_query_extension_cookie_t"],[3,"xcb_list_extensions_cookie_t"],[3,"xcb_get_keyboard_mapping_cookie_t"],[3,"xcb_get_keyboard_control_cookie_t"],[3,"xcb_get_pointer_control_cookie_t"],[3,"xcb_get_screen_saver_cookie_t"],[3,"xcb_list_hosts_cookie_t"],[3,"xcb_set_pointer_mapping_cookie_t"],[3,"xcb_get_pointer_mapping_cookie_t"],[3,"xcb_set_modifier_mapping_cookie_t"],[3,"xcb_get_modifier_mapping_cookie_t"],[3,"xcb_big_requests_enable_request_t"],[3,"xcb_big_requests_enable_reply_t"],[3,"xcb_big_requests_enable_cookie_t"],[3,"xcb_xc_misc_get_version_request_t"],[3,"xcb_xc_misc_get_version_reply_t"],[3,"xcb_xc_misc_get_xid_range_request_t"],[3,"xcb_xc_misc_get_xid_range_reply_t"],[3,"xcb_xc_misc_get_xid_list_request_t"],[3,"xcb_xc_misc_get_xid_list_reply_t"],[3,"xcb_xc_misc_get_version_cookie_t"],[3,"xcb_xc_misc_get_xid_range_cookie_t"],[3,"xcb_xc_misc_get_xid_list_cookie_t"],[3,"xcb_xkb_device_spec_iterator_t"],[3,"xcb_xkb_led_class_spec_iterator_t"],[3,"xcb_xkb_bell_class_spec_iterator_t"],[3,"xcb_xkb_id_spec_iterator_t"],[3,"xcb_xkb_indicator_map_t"],[3,"xcb_xkb_indicator_map_iterator_t"],[3,"xcb_xkb_mod_def_t"],[3,"xcb_xkb_mod_def_iterator_t"],[3,"xcb_xkb_key_name_t"],[3,"xcb_xkb_key_name_iterator_t"],[3,"xcb_xkb_key_alias_t"],[3,"xcb_xkb_key_alias_iterator_t"],[3,"xcb_xkb_counted_string_16_t"],[3,"xcb_xkb_counted_string_16_iterator_t"],[3,"xcb_xkb_kt_map_entry_t"],[3,"xcb_xkb_kt_map_entry_iterator_t"],[3,"xcb_xkb_key_type_t"],[3,"xcb_xkb_key_type_iterator_t"],[3,"xcb_xkb_key_sym_map_t"],[3,"xcb_xkb_key_sym_map_iterator_t"],[3,"xcb_xkb_common_behavior_t"],[3,"xcb_xkb_common_behavior_iterator_t"],[3,"xcb_xkb_default_behavior_t"],[3,"xcb_xkb_default_behavior_iterator_t"],[3,"xcb_xkb_lock_behavior_t"],[3,"xcb_xkb_lock_behavior_iterator_t"],[3,"xcb_xkb_radio_group_behavior_t"],[3,"xcb_xkb_radio_group_behavior_iterator_t"],[3,"xcb_xkb_overlay_behavior_t"],[3,"xcb_xkb_overlay_behavior_iterator_t"],[3,"xcb_xkb_permament_lock_behavior_t"],[3,"xcb_xkb_permament_lock_behavior_iterator_t"],[3,"xcb_xkb_permament_radio_group_behavior_t"],[3,"xcb_xkb_permament_radio_group_behavior_iterator_t"],[3,"xcb_xkb_permament_overlay_behavior_t"],[3,"xcb_xkb_permament_overlay_behavior_iterator_t"],[3,"xcb_xkb_behavior_t"],[3,"xcb_xkb_behavior_iterator_t"],[3,"xcb_xkb_set_behavior_t"],[3,"xcb_xkb_set_behavior_iterator_t"],[3,"xcb_xkb_set_explicit_t"],[3,"xcb_xkb_set_explicit_iterator_t"],[3,"xcb_xkb_key_mod_map_t"],[3,"xcb_xkb_key_mod_map_iterator_t"],[3,"xcb_xkb_key_v_mod_map_t"],[3,"xcb_xkb_key_v_mod_map_iterator_t"],[3,"xcb_xkb_kt_set_map_entry_t"],[3,"xcb_xkb_kt_set_map_entry_iterator_t"],[3,"xcb_xkb_set_key_type_t"],[3,"xcb_xkb_set_key_type_iterator_t"],[3,"xcb_xkb_string8_iterator_t"],[3,"xcb_xkb_outline_t"],[3,"xcb_xkb_outline_iterator_t"],[3,"xcb_xkb_shape_t"],[3,"xcb_xkb_shape_iterator_t"],[3,"xcb_xkb_key_t"],[3,"xcb_xkb_key_iterator_t"],[3,"xcb_xkb_overlay_key_t"],[3,"xcb_xkb_overlay_key_iterator_t"],[3,"xcb_xkb_overlay_row_t"],[3,"xcb_xkb_overlay_row_iterator_t"],[3,"xcb_xkb_overlay_t"],[3,"xcb_xkb_overlay_iterator_t"],[3,"xcb_xkb_row_t"],[3,"xcb_xkb_row_iterator_t"],[3,"xcb_xkb_listing_t"],[3,"xcb_xkb_listing_iterator_t"],[3,"xcb_xkb_device_led_info_t"],[3,"xcb_xkb_device_led_info_iterator_t"],[3,"xcb_xkb_keyboard_error_t"],[3,"xcb_xkb_sa_no_action_t"],[3,"xcb_xkb_sa_no_action_iterator_t"],[3,"xcb_xkb_sa_set_mods_t"],[3,"xcb_xkb_sa_set_mods_iterator_t"],[3,"xcb_xkb_sa_latch_mods_t"],[3,"xcb_xkb_sa_latch_mods_iterator_t"],[3,"xcb_xkb_sa_lock_mods_t"],[3,"xcb_xkb_sa_lock_mods_iterator_t"],[3,"xcb_xkb_sa_set_group_t"],[3,"xcb_xkb_sa_set_group_iterator_t"],[3,"xcb_xkb_sa_latch_group_t"],[3,"xcb_xkb_sa_latch_group_iterator_t"],[3,"xcb_xkb_sa_lock_group_t"],[3,"xcb_xkb_sa_lock_group_iterator_t"],[3,"xcb_xkb_sa_move_ptr_t"],[3,"xcb_xkb_sa_move_ptr_iterator_t"],[3,"xcb_xkb_sa_ptr_btn_t"],[3,"xcb_xkb_sa_ptr_btn_iterator_t"],[3,"xcb_xkb_sa_lock_ptr_btn_t"],[3,"xcb_xkb_sa_lock_ptr_btn_iterator_t"],[3,"xcb_xkb_sa_set_ptr_dflt_t"],[3,"xcb_xkb_sa_set_ptr_dflt_iterator_t"],[3,"xcb_xkb_sa_iso_lock_t"],[3,"xcb_xkb_sa_iso_lock_iterator_t"],[3,"xcb_xkb_sa_terminate_t"],[3,"xcb_xkb_sa_terminate_iterator_t"],[3,"xcb_xkb_sa_switch_screen_t"],[3,"xcb_xkb_sa_switch_screen_iterator_t"],[3,"xcb_xkb_sa_set_controls_t"],[3,"xcb_xkb_sa_set_controls_iterator_t"],[3,"xcb_xkb_sa_lock_controls_t"],[3,"xcb_xkb_sa_lock_controls_iterator_t"],[3,"xcb_xkb_sa_action_message_t"],[3,"xcb_xkb_sa_action_message_iterator_t"],[3,"xcb_xkb_sa_redirect_key_t"],[3,"xcb_xkb_sa_redirect_key_iterator_t"],[3,"xcb_xkb_sa_device_btn_t"],[3,"xcb_xkb_sa_device_btn_iterator_t"],[3,"xcb_xkb_sa_lock_device_btn_t"],[3,"xcb_xkb_sa_lock_device_btn_iterator_t"],[3,"xcb_xkb_sa_device_valuator_t"],[3,"xcb_xkb_sa_device_valuator_iterator_t"],[3,"xcb_xkb_si_action_t"],[3,"xcb_xkb_si_action_iterator_t"],[3,"xcb_xkb_sym_interpret_t"],[3,"xcb_xkb_sym_interpret_iterator_t"],[3,"xcb_xkb_action_t"],[3,"xcb_xkb_action_iterator_t"],[3,"xcb_xkb_use_extension_request_t"],[3,"xcb_xkb_use_extension_reply_t"],[3,"xcb_xkb_select_events_details_t"],[3,"xcb_xkb_select_events_request_t"],[3,"xcb_xkb_bell_request_t"],[3,"xcb_xkb_get_state_request_t"],[3,"xcb_xkb_get_state_reply_t"],[3,"xcb_xkb_latch_lock_state_request_t"],[3,"xcb_xkb_get_controls_request_t"],[3,"xcb_xkb_get_controls_reply_t"],[3,"xcb_xkb_set_controls_request_t"],[3,"xcb_xkb_get_map_request_t"],[3,"xcb_xkb_get_map_map_t"],[3,"xcb_xkb_get_map_reply_t"],[3,"xcb_xkb_set_map_values_t"],[3,"xcb_xkb_set_map_request_t"],[3,"xcb_xkb_get_compat_map_request_t"],[3,"xcb_xkb_get_compat_map_reply_t"],[3,"xcb_xkb_set_compat_map_request_t"],[3,"xcb_xkb_get_indicator_state_request_t"],[3,"xcb_xkb_get_indicator_state_reply_t"],[3,"xcb_xkb_get_indicator_map_request_t"],[3,"xcb_xkb_get_indicator_map_reply_t"],[3,"xcb_xkb_set_indicator_map_request_t"],[3,"xcb_xkb_get_named_indicator_request_t"],[3,"xcb_xkb_get_named_indicator_reply_t"],[3,"xcb_xkb_set_named_indicator_request_t"],[3,"xcb_xkb_get_names_request_t"],[3,"xcb_xkb_get_names_value_list_t"],[3,"xcb_xkb_get_names_reply_t"],[3,"xcb_xkb_set_names_values_t"],[3,"xcb_xkb_set_names_request_t"],[3,"xcb_xkb_per_client_flags_request_t"],[3,"xcb_xkb_per_client_flags_reply_t"],[3,"xcb_xkb_list_components_request_t"],[3,"xcb_xkb_list_components_reply_t"],[3,"xcb_xkb_get_kbd_by_name_request_t"],[3,"xcb_xkb_get_kbd_by_name_replies_t"],[3,"_xcb_xkb_get_kbd_by_name_replies__types"],[3,"_xcb_xkb_get_kbd_by_name_replies__compat_map"],[3,"_xcb_xkb_get_kbd_by_name_replies__indicator_maps"],[3,"_xcb_xkb_get_kbd_by_name_replies__key_names"],[3,"_xcb_xkb_get_kbd_by_name_replies__geometry"],[3,"xcb_xkb_get_kbd_by_name_replies_types_map_t"],[3,"xcb_xkb_get_kbd_by_name_replies_key_names_value_list_t"],[3,"xcb_xkb_get_kbd_by_name_reply_t"],[3,"xcb_xkb_get_device_info_request_t"],[3,"xcb_xkb_get_device_info_reply_t"],[3,"xcb_xkb_set_device_info_request_t"],[3,"xcb_xkb_set_debugging_flags_request_t"],[3,"xcb_xkb_set_debugging_flags_reply_t"],[3,"xcb_xkb_new_keyboard_notify_event_t"],[3,"xcb_xkb_map_notify_event_t"],[3,"xcb_xkb_state_notify_event_t"],[3,"xcb_xkb_controls_notify_event_t"],[3,"xcb_xkb_indicator_state_notify_event_t"],[3,"xcb_xkb_indicator_map_notify_event_t"],[3,"xcb_xkb_names_notify_event_t"],[3,"xcb_xkb_compat_map_notify_event_t"],[3,"xcb_xkb_bell_notify_event_t"],[3,"xcb_xkb_action_message_event_t"],[3,"xcb_xkb_access_x_notify_event_t"],[3,"xcb_xkb_extension_device_notify_event_t"],[3,"xcb_xkb_use_extension_cookie_t"],[3,"xcb_xkb_get_state_cookie_t"],[3,"xcb_xkb_get_controls_cookie_t"],[3,"xcb_xkb_get_map_cookie_t"],[3,"xcb_xkb_get_compat_map_cookie_t"],[3,"xcb_xkb_get_indicator_state_cookie_t"],[3,"xcb_xkb_get_indicator_map_cookie_t"],[3,"xcb_xkb_get_named_indicator_cookie_t"],[3,"xcb_xkb_get_names_cookie_t"],[3,"xcb_xkb_per_client_flags_cookie_t"],[3,"xcb_xkb_list_components_cookie_t"],[3,"xcb_xkb_get_kbd_by_name_cookie_t"],[3,"xcb_xkb_get_device_info_cookie_t"],[3,"xcb_xkb_set_debugging_flags_cookie_t"]]};
searchIndex["xkbcommon"] = {"doc":"","items":[[0,"xkb","xkbcommon","",null,null],[3,"Context","xkbcommon::xkb","Top level library context object.",null,null],[3,"ContextIncludePaths","","Iterator to a Context include paths",null,null],[3,"Keymap","","Compiled keymap object.",null,null],[3,"KeymapMods","","iterator to the modifiers in a Keymap",null,null],[3,"KeymapLayouts","","iterator to the layouts in Keymap",null,null],[3,"KeymapLeds","","iterator to the leds in a Keymap",null,null],[3,"State","","Keyboard state object.",null,null],[4,"LogLevel","","",null,null],[13,"Critical","","",0,null],[13,"Error","","",0,null],[13,"Warning","","",0,null],[13,"Info","","",0,null],[13,"Debug","","",0,null],[4,"KeyDirection","","Specifies the direction of the key (press / release).",null,null],[13,"Up","","the key was released",1,null],[13,"Down","","the key was pressed",1,null],[5,"keycode_is_legal_ext","","Test whether a value is a valid extended keycode. @sa xkb_keycode_t",null,{"inputs":[{"name":"u32"}],"output":{"name":"bool"}}],[5,"keycode_is_legal_x11","","Names to compile a keymap with, also known as RMLVO.",null,{"inputs":[{"name":"u32"}],"output":{"name":"bool"}}],[5,"keysym_get_name","","Get the name of a keysym.",null,{"inputs":[{"name":"keysym"}],"output":{"name":"string"}}],[5,"keysym_from_name","","Get a keysym from its name.",null,{"inputs":[{"name":"str"},{"name":"keysymflags"}],"output":{"name":"keysym"}}],[5,"keysym_to_utf8","","Get the Unicode/UTF-8 representation of a keysym.",null,{"inputs":[{"name":"keysym"}],"output":{"name":"string"}}],[5,"keysym_to_utf32","","Get the Unicode/UTF-32 representation of a keysym.",null,{"inputs":[{"name":"keysym"}],"output":{"name":"u32"}}],[0,"ffi","","",null,null],[3,"xkb_rule_names","xkbcommon::xkb::ffi","",null,null],[12,"rules","","",2,null],[12,"model","","",2,null],[12,"layout","","",2,null],[12,"variant","","",2,null],[12,"options","","",2,null],[4,"xkb_context","","",null,null],[4,"xkb_keymap","","",null,null],[4,"xkb_state","","",null,null],[4,"xkb_log_level","","",null,null],[13,"CRITICAL","","",3,null],[13,"ERROR","","",3,null],[13,"WARNING","","",3,null],[13,"INFO","","",3,null],[13,"DEBUG","","",3,null],[4,"xkb_key_direction","","",null,null],[13,"UP","","",4,null],[13,"DOWN","","",4,null],[5,"xkb_keycode_is_legal_ext","","",null,{"inputs":[{"name":"u32"}],"output":{"name":"bool"}}],[5,"xkb_keycode_is_legal_x11","","",null,{"inputs":[{"name":"u32"}],"output":{"name":"bool"}}],[5,"xkb_keysym_get_name","","",null,null],[5,"xkb_keysym_from_name","","",null,null],[5,"xkb_keysym_to_utf8","","",null,null],[5,"xkb_keysym_to_utf32","","",null,null],[5,"xkb_context_new","","",null,null],[5,"xkb_context_ref","","",null,null],[5,"xkb_context_unref","","",null,null],[5,"xkb_context_set_user_data","","",null,null],[5,"xkb_context_get_user_data","","",null,null],[5,"xkb_context_include_path_append","","",null,null],[5,"xkb_context_include_path_append_default","","",null,null],[5,"xkb_context_include_path_reset_defaults","","",null,null],[5,"xkb_context_include_path_clear","","",null,null],[5,"xkb_context_num_include_paths","","",null,null],[5,"xkb_context_include_path_get","","",null,null],[5,"xkb_context_set_log_level","","",null,null],[5,"xkb_context_get_log_level","","",null,null],[5,"xkb_context_set_log_verbosity","","",null,null],[5,"xkb_context_get_log_verbosity","","",null,null],[5,"xkb_context_set_log_fn","","",null,null],[5,"xkb_keymap_new_from_names","","",null,null],[5,"xkb_keymap_new_from_file","","",null,null],[5,"xkb_keymap_new_from_string","","",null,null],[5,"xkb_keymap_new_from_buffer","","",null,null],[5,"xkb_keymap_ref","","",null,null],[5,"xkb_keymap_unref","","",null,null],[5,"xkb_keymap_get_as_string","","",null,null],[5,"xkb_keymap_min_keycode","","",null,null],[5,"xkb_keymap_max_keycode","","",null,null],[5,"xkb_keymap_key_for_each","","",null,null],[5,"xkb_keymap_num_mods","","",null,null],[5,"xkb_keymap_mod_get_name","","",null,null],[5,"xkb_keymap_mod_get_index","","",null,null],[5,"xkb_keymap_num_layouts","","",null,null],[5,"xkb_keymap_layout_get_name","","",null,null],[5,"xkb_keymap_layout_get_index","","",null,null],[5,"xkb_keymap_num_leds","","",null,null],[5,"xkb_keymap_led_get_name","","",null,null],[5,"xkb_keymap_led_get_index","","",null,null],[5,"xkb_keymap_num_layouts_for_key","","",null,null],[5,"xkb_keymap_num_levels_for_key","","",null,null],[5,"xkb_keymap_key_get_syms_by_level","","",null,null],[5,"xkb_keymap_key_repeats","","",null,null],[5,"xkb_state_ref","","",null,null],[5,"xkb_state_unref","","",null,null],[5,"xkb_state_new","","",null,null],[5,"xkb_state_get_keymap","","",null,null],[5,"xkb_state_update_key","","",null,null],[5,"xkb_state_update_mask","","",null,null],[5,"xkb_state_key_get_syms","","",null,null],[5,"xkb_state_key_get_utf8","","",null,null],[5,"xkb_state_key_get_utf32","","",null,null],[5,"xkb_state_key_get_one_sym","","",null,null],[5,"xkb_state_key_get_layout","","",null,null],[5,"xkb_state_key_get_level","","",null,null],[5,"xkb_state_serialize_mods","","",null,null],[5,"xkb_state_serialize_layout","","",null,null],[5,"xkb_state_mod_name_is_active","","",null,null],[5,"xkb_state_mod_names_are_active","","",null,null],[5,"xkb_state_mod_index_is_active","","",null,null],[5,"xkb_state_mod_index_are_active","","",null,null],[5,"xkb_state_mod_index_is_consumed","","",null,null],[5,"xkb_state_mod_mask_remove_consumed","","",null,null],[5,"xkb_state_key_get_consumed_mods","","",null,null],[5,"xkb_state_layout_name_is_active","","",null,null],[5,"xkb_state_layout_index_is_active","","",null,null],[5,"xkb_state_led_name_is_active","","",null,null],[5,"xkb_state_led_index_is_active","","",null,null],[6,"xkb_keycode_t","","",null,null],[6,"xkb_keysym_t","","",null,null],[6,"xkb_layout_index_t","","",null,null],[6,"xkb_layout_mask_t","","",null,null],[6,"xkb_level_index_t","","",null,null],[6,"xkb_mod_index_t","","",null,null],[6,"xkb_mod_mask_t","","",null,null],[6,"xkb_led_index_t","","",null,null],[6,"xkb_led_mask_t","","",null,null],[6,"xkb_keysym_flags","","",null,null],[6,"xkb_context_flags","","",null,null],[6,"xkb_keymap_compile_flags","","",null,null],[6,"xkb_keymap_format","","",null,null],[6,"xkb_state_component","","",null,null],[6,"xkb_state_match","","",null,null],[6,"xkb_log_fn_t","","",null,null],[6,"xkb_keymap_key_iter_t","","",null,null],[17,"XKB_KEYCODE_INVALID","","",null,null],[17,"XKB_LAYOUT_INVALID","","",null,null],[17,"XKB_LEVEL_INVALID","","",null,null],[17,"XKB_MOD_INVALID","","",null,null],[17,"XKB_LED_INVALID","","",null,null],[17,"XKB_KEYCODE_MAX","","",null,null],[17,"XKB_KEYSYM_NO_FLAGS","","",null,null],[17,"XKB_KEYSYM_CASE_INSENSITIVE","","",null,null],[17,"XKB_CONTEXT_NO_FLAGS","","",null,null],[17,"XKB_CONTEXT_NO_DEFAULT_INCLUDES","","",null,null],[17,"XKB_CONTEXT_NO_ENVIRONMENT_NAMES","","",null,null],[17,"XKB_KEYMAP_COMPILE_NO_FLAGS","","",null,null],[17,"XKB_KEYMAP_FORMAT_TEXT_V1","","",null,null],[17,"XKB_KEYMAP_FORMAT_USE_ORIGINAL","","",null,null],[17,"XKB_STATE_MODS_DEPRESSED","","",null,null],[17,"XKB_STATE_MODS_LATCHED","","",null,null],[17,"XKB_STATE_MODS_LOCKED","","",null,null],[17,"XKB_STATE_MODS_EFFECTIVE","","",null,null],[17,"XKB_STATE_LAYOUT_DEPRESSED","","",null,null],[17,"XKB_STATE_LAYOUT_LATCHED","","",null,null],[17,"XKB_STATE_LAYOUT_LOCKED","","",null,null],[17,"XKB_STATE_LAYOUT_EFFECTIVE","","",null,null],[17,"XKB_STATE_LEDS","","",null,null],[17,"XKB_STATE_MATCH_ANY","","",null,null],[17,"XKB_STATE_MATCH_ALL","","",null,null],[17,"XKB_STATE_MATCH_NON_EXCLUSIVE","","",null,null],[0,"x11","xkbcommon::xkb","",null,null],[4,"SetupXkbExtensionFlags","xkbcommon::xkb::x11","",null,null],[13,"NoFlags","","Do not apply any flags. ",5,null],[5,"setup_xkb_extension","","",null,{"inputs":[{"name":"connection"},{"name":"u16"},{"name":"u16"},{"name":"setupxkbextensionflags"},{"name":"u16"},{"name":"u16"},{"name":"u8"},{"name":"u8"}],"output":{"name":"bool"}}],[5,"get_core_keyboard_device_id","","",null,{"inputs":[{"name":"connection"}],"output":{"name":"i32"}}],[5,"keymap_new_from_device","","",null,{"inputs":[{"name":"context"},{"name":"connection"},{"name":"i32"},{"name":"keymapcompileflags"}],"output":{"name":"keymap"}}],[5,"state_new_from_device","","",null,{"inputs":[{"name":"keymap"},{"name":"connection"},{"name":"i32"}],"output":{"name":"state"}}],[0,"ffi","","",null,null],[4,"xkb_x11_setup_xkb_extension_flags","xkbcommon::xkb::x11::ffi","",null,null],[13,"NO_FLAGS","","Do not apply any flags. ",6,null],[5,"xkb_x11_setup_xkb_extension","","",null,null],[5,"xkb_x11_get_core_keyboard_device_id","","",null,null],[5,"xkb_x11_keymap_new_from_device","","",null,null],[5,"xkb_x11_state_new_from_device","","",null,null],[17,"XKB_X11_MIN_MAJOR_XKB_VERSION","","",null,null],[17,"XKB_X11_MIN_MINOR_XKB_VERSION","","",null,null],[17,"MIN_MAJOR_XKB_VERSION","xkbcommon::xkb::x11","",null,null],[17,"MIN_MINOR_XKB_VERSION","","",null,null],[0,"keysyms","xkbcommon::xkb","",null,null],[17,"KEY_NoSymbol","xkbcommon::xkb::keysyms","",null,null],[17,"KEY_VoidSymbol","","",null,null],[17,"KEY_BackSpace","","",null,null],[17,"KEY_Tab","","",null,null],[17,"KEY_Linefeed","","",null,null],[17,"KEY_Clear","","",null,null],[17,"KEY_Return","","",null,null],[17,"KEY_Pause","","",null,null],[17,"KEY_Scroll_Lock","","",null,null],[17,"KEY_Sys_Req","","",null,null],[17,"KEY_Escape","","",null,null],[17,"KEY_Delete","","",null,null],[17,"KEY_Multi_key","","",null,null],[17,"KEY_Codeinput","","",null,null],[17,"KEY_SingleCandidate","","",null,null],[17,"KEY_MultipleCandidate","","",null,null],[17,"KEY_PreviousCandidate","","",null,null],[17,"KEY_Kanji","","",null,null],[17,"KEY_Muhenkan","","",null,null],[17,"KEY_Henkan_Mode","","",null,null],[17,"KEY_Henkan","","",null,null],[17,"KEY_Romaji","","",null,null],[17,"KEY_Hiragana","","",null,null],[17,"KEY_Katakana","","",null,null],[17,"KEY_Hiragana_Katakana","","",null,null],[17,"KEY_Zenkaku","","",null,null],[17,"KEY_Hankaku","","",null,null],[17,"KEY_Zenkaku_Hankaku","","",null,null],[17,"KEY_Touroku","","",null,null],[17,"KEY_Massyo","","",null,null],[17,"KEY_Kana_Lock","","",null,null],[17,"KEY_Kana_Shift","","",null,null],[17,"KEY_Eisu_Shift","","",null,null],[17,"KEY_Eisu_toggle","","",null,null],[17,"KEY_Kanji_Bangou","","",null,null],[17,"KEY_Zen_Koho","","",null,null],[17,"KEY_Mae_Koho","","",null,null],[17,"KEY_Home","","",null,null],[17,"KEY_Left","","",null,null],[17,"KEY_Up","","",null,null],[17,"KEY_Right","","",null,null],[17,"KEY_Down","","",null,null],[17,"KEY_Prior","","",null,null],[17,"KEY_Page_Up","","",null,null],[17,"KEY_Next","","",null,null],[17,"KEY_Page_Down","","",null,null],[17,"KEY_End","","",null,null],[17,"KEY_Begin","","",null,null],[17,"KEY_Select","","",null,null],[17,"KEY_Print","","",null,null],[17,"KEY_Execute","","",null,null],[17,"KEY_Insert","","",null,null],[17,"KEY_Undo","","",null,null],[17,"KEY_Redo","","",null,null],[17,"KEY_Menu","","",null,null],[17,"KEY_Find","","",null,null],[17,"KEY_Cancel","","",null,null],[17,"KEY_Help","","",null,null],[17,"KEY_Break","","",null,null],[17,"KEY_Mode_switch","","",null,null],[17,"KEY_script_switch","","",null,null],[17,"KEY_Num_Lock","","",null,null],[17,"KEY_KP_Space","","",null,null],[17,"KEY_KP_Tab","","",null,null],[17,"KEY_KP_Enter","","",null,null],[17,"KEY_KP_F1","","",null,null],[17,"KEY_KP_F2","","",null,null],[17,"KEY_KP_F3","","",null,null],[17,"KEY_KP_F4","","",null,null],[17,"KEY_KP_Home","","",null,null],[17,"KEY_KP_Left","","",null,null],[17,"KEY_KP_Up","","",null,null],[17,"KEY_KP_Right","","",null,null],[17,"KEY_KP_Down","","",null,null],[17,"KEY_KP_Prior","","",null,null],[17,"KEY_KP_Page_Up","","",null,null],[17,"KEY_KP_Next","","",null,null],[17,"KEY_KP_Page_Down","","",null,null],[17,"KEY_KP_End","","",null,null],[17,"KEY_KP_Begin","","",null,null],[17,"KEY_KP_Insert","","",null,null],[17,"KEY_KP_Delete","","",null,null],[17,"KEY_KP_Equal","","",null,null],[17,"KEY_KP_Multiply","","",null,null],[17,"KEY_KP_Add","","",null,null],[17,"KEY_KP_Separator","","",null,null],[17,"KEY_KP_Subtract","","",null,null],[17,"KEY_KP_Decimal","","",null,null],[17,"KEY_KP_Divide","","",null,null],[17,"KEY_KP_0","","",null,null],[17,"KEY_KP_1","","",null,null],[17,"KEY_KP_2","","",null,null],[17,"KEY_KP_3","","",null,null],[17,"KEY_KP_4","","",null,null],[17,"KEY_KP_5","","",null,null],[17,"KEY_KP_6","","",null,null],[17,"KEY_KP_7","","",null,null],[17,"KEY_KP_8","","",null,null],[17,"KEY_KP_9","","",null,null],[17,"KEY_F1","","",null,null],[17,"KEY_F2","","",null,null],[17,"KEY_F3","","",null,null],[17,"KEY_F4","","",null,null],[17,"KEY_F5","","",null,null],[17,"KEY_F6","","",null,null],[17,"KEY_F7","","",null,null],[17,"KEY_F8","","",null,null],[17,"KEY_F9","","",null,null],[17,"KEY_F10","","",null,null],[17,"KEY_F11","","",null,null],[17,"KEY_L1","","",null,null],[17,"KEY_F12","","",null,null],[17,"KEY_L2","","",null,null],[17,"KEY_F13","","",null,null],[17,"KEY_L3","","",null,null],[17,"KEY_F14","","",null,null],[17,"KEY_L4","","",null,null],[17,"KEY_F15","","",null,null],[17,"KEY_L5","","",null,null],[17,"KEY_F16","","",null,null],[17,"KEY_L6","","",null,null],[17,"KEY_F17","","",null,null],[17,"KEY_L7","","",null,null],[17,"KEY_F18","","",null,null],[17,"KEY_L8","","",null,null],[17,"KEY_F19","","",null,null],[17,"KEY_L9","","",null,null],[17,"KEY_F20","","",null,null],[17,"KEY_L10","","",null,null],[17,"KEY_F21","","",null,null],[17,"KEY_R1","","",null,null],[17,"KEY_F22","","",null,null],[17,"KEY_R2","","",null,null],[17,"KEY_F23","","",null,null],[17,"KEY_R3","","",null,null],[17,"KEY_F24","","",null,null],[17,"KEY_R4","","",null,null],[17,"KEY_F25","","",null,null],[17,"KEY_R5","","",null,null],[17,"KEY_F26","","",null,null],[17,"KEY_R6","","",null,null],[17,"KEY_F27","","",null,null],[17,"KEY_R7","","",null,null],[17,"KEY_F28","","",null,null],[17,"KEY_R8","","",null,null],[17,"KEY_F29","","",null,null],[17,"KEY_R9","","",null,null],[17,"KEY_F30","","",null,null],[17,"KEY_R10","","",null,null],[17,"KEY_F31","","",null,null],[17,"KEY_R11","","",null,null],[17,"KEY_F32","","",null,null],[17,"KEY_R12","","",null,null],[17,"KEY_F33","","",null,null],[17,"KEY_R13","","",null,null],[17,"KEY_F34","","",null,null],[17,"KEY_R14","","",null,null],[17,"KEY_F35","","",null,null],[17,"KEY_R15","","",null,null],[17,"KEY_Shift_L","","",null,null],[17,"KEY_Shift_R","","",null,null],[17,"KEY_Control_L","","",null,null],[17,"KEY_Control_R","","",null,null],[17,"KEY_Caps_Lock","","",null,null],[17,"KEY_Shift_Lock","","",null,null],[17,"KEY_Meta_L","","",null,null],[17,"KEY_Meta_R","","",null,null],[17,"KEY_Alt_L","","",null,null],[17,"KEY_Alt_R","","",null,null],[17,"KEY_Super_L","","",null,null],[17,"KEY_Super_R","","",null,null],[17,"KEY_Hyper_L","","",null,null],[17,"KEY_Hyper_R","","",null,null],[17,"KEY_ISO_Lock","","",null,null],[17,"KEY_ISO_Level2_Latch","","",null,null],[17,"KEY_ISO_Level3_Shift","","",null,null],[17,"KEY_ISO_Level3_Latch","","",null,null],[17,"KEY_ISO_Level3_Lock","","",null,null],[17,"KEY_ISO_Level5_Shift","","",null,null],[17,"KEY_ISO_Level5_Latch","","",null,null],[17,"KEY_ISO_Level5_Lock","","",null,null],[17,"KEY_ISO_Group_Shift","","",null,null],[17,"KEY_ISO_Group_Latch","","",null,null],[17,"KEY_ISO_Group_Lock","","",null,null],[17,"KEY_ISO_Next_Group","","",null,null],[17,"KEY_ISO_Next_Group_Lock","","",null,null],[17,"KEY_ISO_Prev_Group","","",null,null],[17,"KEY_ISO_Prev_Group_Lock","","",null,null],[17,"KEY_ISO_First_Group","","",null,null],[17,"KEY_ISO_First_Group_Lock","","",null,null],[17,"KEY_ISO_Last_Group","","",null,null],[17,"KEY_ISO_Last_Group_Lock","","",null,null],[17,"KEY_ISO_Left_Tab","","",null,null],[17,"KEY_ISO_Move_Line_Up","","",null,null],[17,"KEY_ISO_Move_Line_Down","","",null,null],[17,"KEY_ISO_Partial_Line_Up","","",null,null],[17,"KEY_ISO_Partial_Line_Down","","",null,null],[17,"KEY_ISO_Partial_Space_Left","","",null,null],[17,"KEY_ISO_Partial_Space_Right","","",null,null],[17,"KEY_ISO_Set_Margin_Left","","",null,null],[17,"KEY_ISO_Set_Margin_Right","","",null,null],[17,"KEY_ISO_Release_Margin_Left","","",null,null],[17,"KEY_ISO_Release_Margin_Right","","",null,null],[17,"KEY_ISO_Release_Both_Margins","","",null,null],[17,"KEY_ISO_Fast_Cursor_Left","","",null,null],[17,"KEY_ISO_Fast_Cursor_Right","","",null,null],[17,"KEY_ISO_Fast_Cursor_Up","","",null,null],[17,"KEY_ISO_Fast_Cursor_Down","","",null,null],[17,"KEY_ISO_Continuous_Underline","","",null,null],[17,"KEY_ISO_Discontinuous_Underline","","",null,null],[17,"KEY_ISO_Emphasize","","",null,null],[17,"KEY_ISO_Center_Object","","",null,null],[17,"KEY_ISO_Enter","","",null,null],[17,"KEY_dead_grave","","",null,null],[17,"KEY_dead_acute","","",null,null],[17,"KEY_dead_circumflex","","",null,null],[17,"KEY_dead_tilde","","",null,null],[17,"KEY_dead_perispomeni","","",null,null],[17,"KEY_dead_macron","","",null,null],[17,"KEY_dead_breve","","",null,null],[17,"KEY_dead_abovedot","","",null,null],[17,"KEY_dead_diaeresis","","",null,null],[17,"KEY_dead_abovering","","",null,null],[17,"KEY_dead_doubleacute","","",null,null],[17,"KEY_dead_caron","","",null,null],[17,"KEY_dead_cedilla","","",null,null],[17,"KEY_dead_ogonek","","",null,null],[17,"KEY_dead_iota","","",null,null],[17,"KEY_dead_voiced_sound","","",null,null],[17,"KEY_dead_semivoiced_sound","","",null,null],[17,"KEY_dead_belowdot","","",null,null],[17,"KEY_dead_hook","","",null,null],[17,"KEY_dead_horn","","",null,null],[17,"KEY_dead_stroke","","",null,null],[17,"KEY_dead_abovecomma","","",null,null],[17,"KEY_dead_psili","","",null,null],[17,"KEY_dead_abovereversedcomma","","",null,null],[17,"KEY_dead_dasia","","",null,null],[17,"KEY_dead_doublegrave","","",null,null],[17,"KEY_dead_belowring","","",null,null],[17,"KEY_dead_belowmacron","","",null,null],[17,"KEY_dead_belowcircumflex","","",null,null],[17,"KEY_dead_belowtilde","","",null,null],[17,"KEY_dead_belowbreve","","",null,null],[17,"KEY_dead_belowdiaeresis","","",null,null],[17,"KEY_dead_invertedbreve","","",null,null],[17,"KEY_dead_belowcomma","","",null,null],[17,"KEY_dead_currency","","",null,null],[17,"KEY_dead_lowline","","",null,null],[17,"KEY_dead_aboveverticalline","","",null,null],[17,"KEY_dead_belowverticalline","","",null,null],[17,"KEY_dead_longsolidusoverlay","","",null,null],[17,"KEY_dead_a","","",null,null],[17,"KEY_dead_A","","",null,null],[17,"KEY_dead_e","","",null,null],[17,"KEY_dead_E","","",null,null],[17,"KEY_dead_i","","",null,null],[17,"KEY_dead_I","","",null,null],[17,"KEY_dead_o","","",null,null],[17,"KEY_dead_O","","",null,null],[17,"KEY_dead_u","","",null,null],[17,"KEY_dead_U","","",null,null],[17,"KEY_dead_small_schwa","","",null,null],[17,"KEY_dead_capital_schwa","","",null,null],[17,"KEY_dead_greek","","",null,null],[17,"KEY_First_Virtual_Screen","","",null,null],[17,"KEY_Prev_Virtual_Screen","","",null,null],[17,"KEY_Next_Virtual_Screen","","",null,null],[17,"KEY_Last_Virtual_Screen","","",null,null],[17,"KEY_Terminate_Server","","",null,null],[17,"KEY_AccessX_Enable","","",null,null],[17,"KEY_AccessX_Feedback_Enable","","",null,null],[17,"KEY_RepeatKeys_Enable","","",null,null],[17,"KEY_SlowKeys_Enable","","",null,null],[17,"KEY_BounceKeys_Enable","","",null,null],[17,"KEY_StickyKeys_Enable","","",null,null],[17,"KEY_MouseKeys_Enable","","",null,null],[17,"KEY_MouseKeys_Accel_Enable","","",null,null],[17,"KEY_Overlay1_Enable","","",null,null],[17,"KEY_Overlay2_Enable","","",null,null],[17,"KEY_AudibleBell_Enable","","",null,null],[17,"KEY_Pointer_Left","","",null,null],[17,"KEY_Pointer_Right","","",null,null],[17,"KEY_Pointer_Up","","",null,null],[17,"KEY_Pointer_Down","","",null,null],[17,"KEY_Pointer_UpLeft","","",null,null],[17,"KEY_Pointer_UpRight","","",null,null],[17,"KEY_Pointer_DownLeft","","",null,null],[17,"KEY_Pointer_DownRight","","",null,null],[17,"KEY_Pointer_Button_Dflt","","",null,null],[17,"KEY_Pointer_Button1","","",null,null],[17,"KEY_Pointer_Button2","","",null,null],[17,"KEY_Pointer_Button3","","",null,null],[17,"KEY_Pointer_Button4","","",null,null],[17,"KEY_Pointer_Button5","","",null,null],[17,"KEY_Pointer_DblClick_Dflt","","",null,null],[17,"KEY_Pointer_DblClick1","","",null,null],[17,"KEY_Pointer_DblClick2","","",null,null],[17,"KEY_Pointer_DblClick3","","",null,null],[17,"KEY_Pointer_DblClick4","","",null,null],[17,"KEY_Pointer_DblClick5","","",null,null],[17,"KEY_Pointer_Drag_Dflt","","",null,null],[17,"KEY_Pointer_Drag1","","",null,null],[17,"KEY_Pointer_Drag2","","",null,null],[17,"KEY_Pointer_Drag3","","",null,null],[17,"KEY_Pointer_Drag4","","",null,null],[17,"KEY_Pointer_Drag5","","",null,null],[17,"KEY_Pointer_EnableKeys","","",null,null],[17,"KEY_Pointer_Accelerate","","",null,null],[17,"KEY_Pointer_DfltBtnNext","","",null,null],[17,"KEY_Pointer_DfltBtnPrev","","",null,null],[17,"KEY_ch","","",null,null],[17,"KEY_Ch","","",null,null],[17,"KEY_CH","","",null,null],[17,"KEY_c_h","","",null,null],[17,"KEY_C_h","","",null,null],[17,"KEY_C_H","","",null,null],[17,"KEY_3270_Duplicate","","",null,null],[17,"KEY_3270_FieldMark","","",null,null],[17,"KEY_3270_Right2","","",null,null],[17,"KEY_3270_Left2","","",null,null],[17,"KEY_3270_BackTab","","",null,null],[17,"KEY_3270_EraseEOF","","",null,null],[17,"KEY_3270_EraseInput","","",null,null],[17,"KEY_3270_Reset","","",null,null],[17,"KEY_3270_Quit","","",null,null],[17,"KEY_3270_PA1","","",null,null],[17,"KEY_3270_PA2","","",null,null],[17,"KEY_3270_PA3","","",null,null],[17,"KEY_3270_Test","","",null,null],[17,"KEY_3270_Attn","","",null,null],[17,"KEY_3270_CursorBlink","","",null,null],[17,"KEY_3270_AltCursor","","",null,null],[17,"KEY_3270_KeyClick","","",null,null],[17,"KEY_3270_Jump","","",null,null],[17,"KEY_3270_Ident","","",null,null],[17,"KEY_3270_Rule","","",null,null],[17,"KEY_3270_Copy","","",null,null],[17,"KEY_3270_Play","","",null,null],[17,"KEY_3270_Setup","","",null,null],[17,"KEY_3270_Record","","",null,null],[17,"KEY_3270_ChangeScreen","","",null,null],[17,"KEY_3270_DeleteWord","","",null,null],[17,"KEY_3270_ExSelect","","",null,null],[17,"KEY_3270_CursorSelect","","",null,null],[17,"KEY_3270_PrintScreen","","",null,null],[17,"KEY_3270_Enter","","",null,null],[17,"KEY_space","","",null,null],[17,"KEY_exclam","","",null,null],[17,"KEY_quotedbl","","",null,null],[17,"KEY_numbersign","","",null,null],[17,"KEY_dollar","","",null,null],[17,"KEY_percent","","",null,null],[17,"KEY_ampersand","","",null,null],[17,"KEY_apostrophe","","",null,null],[17,"KEY_quoteright","","",null,null],[17,"KEY_parenleft","","",null,null],[17,"KEY_parenright","","",null,null],[17,"KEY_asterisk","","",null,null],[17,"KEY_plus","","",null,null],[17,"KEY_comma","","",null,null],[17,"KEY_minus","","",null,null],[17,"KEY_period","","",null,null],[17,"KEY_slash","","",null,null],[17,"KEY_0","","",null,null],[17,"KEY_1","","",null,null],[17,"KEY_2","","",null,null],[17,"KEY_3","","",null,null],[17,"KEY_4","","",null,null],[17,"KEY_5","","",null,null],[17,"KEY_6","","",null,null],[17,"KEY_7","","",null,null],[17,"KEY_8","","",null,null],[17,"KEY_9","","",null,null],[17,"KEY_colon","","",null,null],[17,"KEY_semicolon","","",null,null],[17,"KEY_less","","",null,null],[17,"KEY_equal","","",null,null],[17,"KEY_greater","","",null,null],[17,"KEY_question","","",null,null],[17,"KEY_at","","",null,null],[17,"KEY_A","","",null,null],[17,"KEY_B","","",null,null],[17,"KEY_C","","",null,null],[17,"KEY_D","","",null,null],[17,"KEY_E","","",null,null],[17,"KEY_F","","",null,null],[17,"KEY_G","","",null,null],[17,"KEY_H","","",null,null],[17,"KEY_I","","",null,null],[17,"KEY_J","","",null,null],[17,"KEY_K","","",null,null],[17,"KEY_L","","",null,null],[17,"KEY_M","","",null,null],[17,"KEY_N","","",null,null],[17,"KEY_O","","",null,null],[17,"KEY_P","","",null,null],[17,"KEY_Q","","",null,null],[17,"KEY_R","","",null,null],[17,"KEY_S","","",null,null],[17,"KEY_T","","",null,null],[17,"KEY_U","","",null,null],[17,"KEY_V","","",null,null],[17,"KEY_W","","",null,null],[17,"KEY_X","","",null,null],[17,"KEY_Y","","",null,null],[17,"KEY_Z","","",null,null],[17,"KEY_bracketleft","","",null,null],[17,"KEY_backslash","","",null,null],[17,"KEY_bracketright","","",null,null],[17,"KEY_asciicircum","","",null,null],[17,"KEY_underscore","","",null,null],[17,"KEY_grave","","",null,null],[17,"KEY_quoteleft","","",null,null],[17,"KEY_a","","",null,null],[17,"KEY_b","","",null,null],[17,"KEY_c","","",null,null],[17,"KEY_d","","",null,null],[17,"KEY_e","","",null,null],[17,"KEY_f","","",null,null],[17,"KEY_g","","",null,null],[17,"KEY_h","","",null,null],[17,"KEY_i","","",null,null],[17,"KEY_j","","",null,null],[17,"KEY_k","","",null,null],[17,"KEY_l","","",null,null],[17,"KEY_m","","",null,null],[17,"KEY_n","","",null,null],[17,"KEY_o","","",null,null],[17,"KEY_p","","",null,null],[17,"KEY_q","","",null,null],[17,"KEY_r","","",null,null],[17,"KEY_s","","",null,null],[17,"KEY_t","","",null,null],[17,"KEY_u","","",null,null],[17,"KEY_v","","",null,null],[17,"KEY_w","","",null,null],[17,"KEY_x","","",null,null],[17,"KEY_y","","",null,null],[17,"KEY_z","","",null,null],[17,"KEY_braceleft","","",null,null],[17,"KEY_bar","","",null,null],[17,"KEY_braceright","","",null,null],[17,"KEY_asciitilde","","",null,null],[17,"KEY_nobreakspace","","",null,null],[17,"KEY_exclamdown","","",null,null],[17,"KEY_cent","","",null,null],[17,"KEY_sterling","","",null,null],[17,"KEY_currency","","",null,null],[17,"KEY_yen","","",null,null],[17,"KEY_brokenbar","","",null,null],[17,"KEY_section","","",null,null],[17,"KEY_diaeresis","","",null,null],[17,"KEY_copyright","","",null,null],[17,"KEY_ordfeminine","","",null,null],[17,"KEY_guillemotleft","","",null,null],[17,"KEY_notsign","","",null,null],[17,"KEY_hyphen","","",null,null],[17,"KEY_registered","","",null,null],[17,"KEY_macron","","",null,null],[17,"KEY_degree","","",null,null],[17,"KEY_plusminus","","",null,null],[17,"KEY_twosuperior","","",null,null],[17,"KEY_threesuperior","","",null,null],[17,"KEY_acute","","",null,null],[17,"KEY_mu","","",null,null],[17,"KEY_paragraph","","",null,null],[17,"KEY_periodcentered","","",null,null],[17,"KEY_cedilla","","",null,null],[17,"KEY_onesuperior","","",null,null],[17,"KEY_masculine","","",null,null],[17,"KEY_guillemotright","","",null,null],[17,"KEY_onequarter","","",null,null],[17,"KEY_onehalf","","",null,null],[17,"KEY_threequarters","","",null,null],[17,"KEY_questiondown","","",null,null],[17,"KEY_Agrave","","",null,null],[17,"KEY_Aacute","","",null,null],[17,"KEY_Acircumflex","","",null,null],[17,"KEY_Atilde","","",null,null],[17,"KEY_Adiaeresis","","",null,null],[17,"KEY_Aring","","",null,null],[17,"KEY_AE","","",null,null],[17,"KEY_Ccedilla","","",null,null],[17,"KEY_Egrave","","",null,null],[17,"KEY_Eacute","","",null,null],[17,"KEY_Ecircumflex","","",null,null],[17,"KEY_Ediaeresis","","",null,null],[17,"KEY_Igrave","","",null,null],[17,"KEY_Iacute","","",null,null],[17,"KEY_Icircumflex","","",null,null],[17,"KEY_Idiaeresis","","",null,null],[17,"KEY_ETH","","",null,null],[17,"KEY_Eth","","",null,null],[17,"KEY_Ntilde","","",null,null],[17,"KEY_Ograve","","",null,null],[17,"KEY_Oacute","","",null,null],[17,"KEY_Ocircumflex","","",null,null],[17,"KEY_Otilde","","",null,null],[17,"KEY_Odiaeresis","","",null,null],[17,"KEY_multiply","","",null,null],[17,"KEY_Oslash","","",null,null],[17,"KEY_Ooblique","","",null,null],[17,"KEY_Ugrave","","",null,null],[17,"KEY_Uacute","","",null,null],[17,"KEY_Ucircumflex","","",null,null],[17,"KEY_Udiaeresis","","",null,null],[17,"KEY_Yacute","","",null,null],[17,"KEY_THORN","","",null,null],[17,"KEY_Thorn","","",null,null],[17,"KEY_ssharp","","",null,null],[17,"KEY_agrave","","",null,null],[17,"KEY_aacute","","",null,null],[17,"KEY_acircumflex","","",null,null],[17,"KEY_atilde","","",null,null],[17,"KEY_adiaeresis","","",null,null],[17,"KEY_aring","","",null,null],[17,"KEY_ae","","",null,null],[17,"KEY_ccedilla","","",null,null],[17,"KEY_egrave","","",null,null],[17,"KEY_eacute","","",null,null],[17,"KEY_ecircumflex","","",null,null],[17,"KEY_ediaeresis","","",null,null],[17,"KEY_igrave","","",null,null],[17,"KEY_iacute","","",null,null],[17,"KEY_icircumflex","","",null,null],[17,"KEY_idiaeresis","","",null,null],[17,"KEY_eth","","",null,null],[17,"KEY_ntilde","","",null,null],[17,"KEY_ograve","","",null,null],[17,"KEY_oacute","","",null,null],[17,"KEY_ocircumflex","","",null,null],[17,"KEY_otilde","","",null,null],[17,"KEY_odiaeresis","","",null,null],[17,"KEY_division","","",null,null],[17,"KEY_oslash","","",null,null],[17,"KEY_ooblique","","",null,null],[17,"KEY_ugrave","","",null,null],[17,"KEY_uacute","","",null,null],[17,"KEY_ucircumflex","","",null,null],[17,"KEY_udiaeresis","","",null,null],[17,"KEY_yacute","","",null,null],[17,"KEY_thorn","","",null,null],[17,"KEY_ydiaeresis","","",null,null],[17,"KEY_Aogonek","","",null,null],[17,"KEY_breve","","",null,null],[17,"KEY_Lstroke","","",null,null],[17,"KEY_Lcaron","","",null,null],[17,"KEY_Sacute","","",null,null],[17,"KEY_Scaron","","",null,null],[17,"KEY_Scedilla","","",null,null],[17,"KEY_Tcaron","","",null,null],[17,"KEY_Zacute","","",null,null],[17,"KEY_Zcaron","","",null,null],[17,"KEY_Zabovedot","","",null,null],[17,"KEY_aogonek","","",null,null],[17,"KEY_ogonek","","",null,null],[17,"KEY_lstroke","","",null,null],[17,"KEY_lcaron","","",null,null],[17,"KEY_sacute","","",null,null],[17,"KEY_caron","","",null,null],[17,"KEY_scaron","","",null,null],[17,"KEY_scedilla","","",null,null],[17,"KEY_tcaron","","",null,null],[17,"KEY_zacute","","",null,null],[17,"KEY_doubleacute","","",null,null],[17,"KEY_zcaron","","",null,null],[17,"KEY_zabovedot","","",null,null],[17,"KEY_Racute","","",null,null],[17,"KEY_Abreve","","",null,null],[17,"KEY_Lacute","","",null,null],[17,"KEY_Cacute","","",null,null],[17,"KEY_Ccaron","","",null,null],[17,"KEY_Eogonek","","",null,null],[17,"KEY_Ecaron","","",null,null],[17,"KEY_Dcaron","","",null,null],[17,"KEY_Dstroke","","",null,null],[17,"KEY_Nacute","","",null,null],[17,"KEY_Ncaron","","",null,null],[17,"KEY_Odoubleacute","","",null,null],[17,"KEY_Rcaron","","",null,null],[17,"KEY_Uring","","",null,null],[17,"KEY_Udoubleacute","","",null,null],[17,"KEY_Tcedilla","","",null,null],[17,"KEY_racute","","",null,null],[17,"KEY_abreve","","",null,null],[17,"KEY_lacute","","",null,null],[17,"KEY_cacute","","",null,null],[17,"KEY_ccaron","","",null,null],[17,"KEY_eogonek","","",null,null],[17,"KEY_ecaron","","",null,null],[17,"KEY_dcaron","","",null,null],[17,"KEY_dstroke","","",null,null],[17,"KEY_nacute","","",null,null],[17,"KEY_ncaron","","",null,null],[17,"KEY_odoubleacute","","",null,null],[17,"KEY_rcaron","","",null,null],[17,"KEY_uring","","",null,null],[17,"KEY_udoubleacute","","",null,null],[17,"KEY_tcedilla","","",null,null],[17,"KEY_abovedot","","",null,null],[17,"KEY_Hstroke","","",null,null],[17,"KEY_Hcircumflex","","",null,null],[17,"KEY_Iabovedot","","",null,null],[17,"KEY_Gbreve","","",null,null],[17,"KEY_Jcircumflex","","",null,null],[17,"KEY_hstroke","","",null,null],[17,"KEY_hcircumflex","","",null,null],[17,"KEY_idotless","","",null,null],[17,"KEY_gbreve","","",null,null],[17,"KEY_jcircumflex","","",null,null],[17,"KEY_Cabovedot","","",null,null],[17,"KEY_Ccircumflex","","",null,null],[17,"KEY_Gabovedot","","",null,null],[17,"KEY_Gcircumflex","","",null,null],[17,"KEY_Ubreve","","",null,null],[17,"KEY_Scircumflex","","",null,null],[17,"KEY_cabovedot","","",null,null],[17,"KEY_ccircumflex","","",null,null],[17,"KEY_gabovedot","","",null,null],[17,"KEY_gcircumflex","","",null,null],[17,"KEY_ubreve","","",null,null],[17,"KEY_scircumflex","","",null,null],[17,"KEY_kra","","",null,null],[17,"KEY_kappa","","",null,null],[17,"KEY_Rcedilla","","",null,null],[17,"KEY_Itilde","","",null,null],[17,"KEY_Lcedilla","","",null,null],[17,"KEY_Emacron","","",null,null],[17,"KEY_Gcedilla","","",null,null],[17,"KEY_Tslash","","",null,null],[17,"KEY_rcedilla","","",null,null],[17,"KEY_itilde","","",null,null],[17,"KEY_lcedilla","","",null,null],[17,"KEY_emacron","","",null,null],[17,"KEY_gcedilla","","",null,null],[17,"KEY_tslash","","",null,null],[17,"KEY_ENG","","",null,null],[17,"KEY_eng","","",null,null],[17,"KEY_Amacron","","",null,null],[17,"KEY_Iogonek","","",null,null],[17,"KEY_Eabovedot","","",null,null],[17,"KEY_Imacron","","",null,null],[17,"KEY_Ncedilla","","",null,null],[17,"KEY_Omacron","","",null,null],[17,"KEY_Kcedilla","","",null,null],[17,"KEY_Uogonek","","",null,null],[17,"KEY_Utilde","","",null,null],[17,"KEY_Umacron","","",null,null],[17,"KEY_amacron","","",null,null],[17,"KEY_iogonek","","",null,null],[17,"KEY_eabovedot","","",null,null],[17,"KEY_imacron","","",null,null],[17,"KEY_ncedilla","","",null,null],[17,"KEY_omacron","","",null,null],[17,"KEY_kcedilla","","",null,null],[17,"KEY_uogonek","","",null,null],[17,"KEY_utilde","","",null,null],[17,"KEY_umacron","","",null,null],[17,"KEY_Wcircumflex","","",null,null],[17,"KEY_wcircumflex","","",null,null],[17,"KEY_Ycircumflex","","",null,null],[17,"KEY_ycircumflex","","",null,null],[17,"KEY_Babovedot","","",null,null],[17,"KEY_babovedot","","",null,null],[17,"KEY_Dabovedot","","",null,null],[17,"KEY_dabovedot","","",null,null],[17,"KEY_Fabovedot","","",null,null],[17,"KEY_fabovedot","","",null,null],[17,"KEY_Mabovedot","","",null,null],[17,"KEY_mabovedot","","",null,null],[17,"KEY_Pabovedot","","",null,null],[17,"KEY_pabovedot","","",null,null],[17,"KEY_Sabovedot","","",null,null],[17,"KEY_sabovedot","","",null,null],[17,"KEY_Tabovedot","","",null,null],[17,"KEY_tabovedot","","",null,null],[17,"KEY_Wgrave","","",null,null],[17,"KEY_wgrave","","",null,null],[17,"KEY_Wacute","","",null,null],[17,"KEY_wacute","","",null,null],[17,"KEY_Wdiaeresis","","",null,null],[17,"KEY_wdiaeresis","","",null,null],[17,"KEY_Ygrave","","",null,null],[17,"KEY_ygrave","","",null,null],[17,"KEY_OE","","",null,null],[17,"KEY_oe","","",null,null],[17,"KEY_Ydiaeresis","","",null,null],[17,"KEY_overline","","",null,null],[17,"KEY_kana_fullstop","","",null,null],[17,"KEY_kana_openingbracket","","",null,null],[17,"KEY_kana_closingbracket","","",null,null],[17,"KEY_kana_comma","","",null,null],[17,"KEY_kana_conjunctive","","",null,null],[17,"KEY_kana_middledot","","",null,null],[17,"KEY_kana_WO","","",null,null],[17,"KEY_kana_a","","",null,null],[17,"KEY_kana_i","","",null,null],[17,"KEY_kana_u","","",null,null],[17,"KEY_kana_e","","",null,null],[17,"KEY_kana_o","","",null,null],[17,"KEY_kana_ya","","",null,null],[17,"KEY_kana_yu","","",null,null],[17,"KEY_kana_yo","","",null,null],[17,"KEY_kana_tsu","","",null,null],[17,"KEY_kana_tu","","",null,null],[17,"KEY_prolongedsound","","",null,null],[17,"KEY_kana_A","","",null,null],[17,"KEY_kana_I","","",null,null],[17,"KEY_kana_U","","",null,null],[17,"KEY_kana_E","","",null,null],[17,"KEY_kana_O","","",null,null],[17,"KEY_kana_KA","","",null,null],[17,"KEY_kana_KI","","",null,null],[17,"KEY_kana_KU","","",null,null],[17,"KEY_kana_KE","","",null,null],[17,"KEY_kana_KO","","",null,null],[17,"KEY_kana_SA","","",null,null],[17,"KEY_kana_SHI","","",null,null],[17,"KEY_kana_SU","","",null,null],[17,"KEY_kana_SE","","",null,null],[17,"KEY_kana_SO","","",null,null],[17,"KEY_kana_TA","","",null,null],[17,"KEY_kana_CHI","","",null,null],[17,"KEY_kana_TI","","",null,null],[17,"KEY_kana_TSU","","",null,null],[17,"KEY_kana_TU","","",null,null],[17,"KEY_kana_TE","","",null,null],[17,"KEY_kana_TO","","",null,null],[17,"KEY_kana_NA","","",null,null],[17,"KEY_kana_NI","","",null,null],[17,"KEY_kana_NU","","",null,null],[17,"KEY_kana_NE","","",null,null],[17,"KEY_kana_NO","","",null,null],[17,"KEY_kana_HA","","",null,null],[17,"KEY_kana_HI","","",null,null],[17,"KEY_kana_FU","","",null,null],[17,"KEY_kana_HU","","",null,null],[17,"KEY_kana_HE","","",null,null],[17,"KEY_kana_HO","","",null,null],[17,"KEY_kana_MA","","",null,null],[17,"KEY_kana_MI","","",null,null],[17,"KEY_kana_MU","","",null,null],[17,"KEY_kana_ME","","",null,null],[17,"KEY_kana_MO","","",null,null],[17,"KEY_kana_YA","","",null,null],[17,"KEY_kana_YU","","",null,null],[17,"KEY_kana_YO","","",null,null],[17,"KEY_kana_RA","","",null,null],[17,"KEY_kana_RI","","",null,null],[17,"KEY_kana_RU","","",null,null],[17,"KEY_kana_RE","","",null,null],[17,"KEY_kana_RO","","",null,null],[17,"KEY_kana_WA","","",null,null],[17,"KEY_kana_N","","",null,null],[17,"KEY_voicedsound","","",null,null],[17,"KEY_semivoicedsound","","",null,null],[17,"KEY_kana_switch","","",null,null],[17,"KEY_Farsi_0","","",null,null],[17,"KEY_Farsi_1","","",null,null],[17,"KEY_Farsi_2","","",null,null],[17,"KEY_Farsi_3","","",null,null],[17,"KEY_Farsi_4","","",null,null],[17,"KEY_Farsi_5","","",null,null],[17,"KEY_Farsi_6","","",null,null],[17,"KEY_Farsi_7","","",null,null],[17,"KEY_Farsi_8","","",null,null],[17,"KEY_Farsi_9","","",null,null],[17,"KEY_Arabic_percent","","",null,null],[17,"KEY_Arabic_superscript_alef","","",null,null],[17,"KEY_Arabic_tteh","","",null,null],[17,"KEY_Arabic_peh","","",null,null],[17,"KEY_Arabic_tcheh","","",null,null],[17,"KEY_Arabic_ddal","","",null,null],[17,"KEY_Arabic_rreh","","",null,null],[17,"KEY_Arabic_comma","","",null,null],[17,"KEY_Arabic_fullstop","","",null,null],[17,"KEY_Arabic_0","","",null,null],[17,"KEY_Arabic_1","","",null,null],[17,"KEY_Arabic_2","","",null,null],[17,"KEY_Arabic_3","","",null,null],[17,"KEY_Arabic_4","","",null,null],[17,"KEY_Arabic_5","","",null,null],[17,"KEY_Arabic_6","","",null,null],[17,"KEY_Arabic_7","","",null,null],[17,"KEY_Arabic_8","","",null,null],[17,"KEY_Arabic_9","","",null,null],[17,"KEY_Arabic_semicolon","","",null,null],[17,"KEY_Arabic_question_mark","","",null,null],[17,"KEY_Arabic_hamza","","",null,null],[17,"KEY_Arabic_maddaonalef","","",null,null],[17,"KEY_Arabic_hamzaonalef","","",null,null],[17,"KEY_Arabic_hamzaonwaw","","",null,null],[17,"KEY_Arabic_hamzaunderalef","","",null,null],[17,"KEY_Arabic_hamzaonyeh","","",null,null],[17,"KEY_Arabic_alef","","",null,null],[17,"KEY_Arabic_beh","","",null,null],[17,"KEY_Arabic_tehmarbuta","","",null,null],[17,"KEY_Arabic_teh","","",null,null],[17,"KEY_Arabic_theh","","",null,null],[17,"KEY_Arabic_jeem","","",null,null],[17,"KEY_Arabic_hah","","",null,null],[17,"KEY_Arabic_khah","","",null,null],[17,"KEY_Arabic_dal","","",null,null],[17,"KEY_Arabic_thal","","",null,null],[17,"KEY_Arabic_ra","","",null,null],[17,"KEY_Arabic_zain","","",null,null],[17,"KEY_Arabic_seen","","",null,null],[17,"KEY_Arabic_sheen","","",null,null],[17,"KEY_Arabic_sad","","",null,null],[17,"KEY_Arabic_dad","","",null,null],[17,"KEY_Arabic_tah","","",null,null],[17,"KEY_Arabic_zah","","",null,null],[17,"KEY_Arabic_ain","","",null,null],[17,"KEY_Arabic_ghain","","",null,null],[17,"KEY_Arabic_tatweel","","",null,null],[17,"KEY_Arabic_feh","","",null,null],[17,"KEY_Arabic_qaf","","",null,null],[17,"KEY_Arabic_kaf","","",null,null],[17,"KEY_Arabic_lam","","",null,null],[17,"KEY_Arabic_meem","","",null,null],[17,"KEY_Arabic_noon","","",null,null],[17,"KEY_Arabic_ha","","",null,null],[17,"KEY_Arabic_heh","","",null,null],[17,"KEY_Arabic_waw","","",null,null],[17,"KEY_Arabic_alefmaksura","","",null,null],[17,"KEY_Arabic_yeh","","",null,null],[17,"KEY_Arabic_fathatan","","",null,null],[17,"KEY_Arabic_dammatan","","",null,null],[17,"KEY_Arabic_kasratan","","",null,null],[17,"KEY_Arabic_fatha","","",null,null],[17,"KEY_Arabic_damma","","",null,null],[17,"KEY_Arabic_kasra","","",null,null],[17,"KEY_Arabic_shadda","","",null,null],[17,"KEY_Arabic_sukun","","",null,null],[17,"KEY_Arabic_madda_above","","",null,null],[17,"KEY_Arabic_hamza_above","","",null,null],[17,"KEY_Arabic_hamza_below","","",null,null],[17,"KEY_Arabic_jeh","","",null,null],[17,"KEY_Arabic_veh","","",null,null],[17,"KEY_Arabic_keheh","","",null,null],[17,"KEY_Arabic_gaf","","",null,null],[17,"KEY_Arabic_noon_ghunna","","",null,null],[17,"KEY_Arabic_heh_doachashmee","","",null,null],[17,"KEY_Farsi_yeh","","",null,null],[17,"KEY_Arabic_farsi_yeh","","",null,null],[17,"KEY_Arabic_yeh_baree","","",null,null],[17,"KEY_Arabic_heh_goal","","",null,null],[17,"KEY_Arabic_switch","","",null,null],[17,"KEY_Cyrillic_GHE_bar","","",null,null],[17,"KEY_Cyrillic_ghe_bar","","",null,null],[17,"KEY_Cyrillic_ZHE_descender","","",null,null],[17,"KEY_Cyrillic_zhe_descender","","",null,null],[17,"KEY_Cyrillic_KA_descender","","",null,null],[17,"KEY_Cyrillic_ka_descender","","",null,null],[17,"KEY_Cyrillic_KA_vertstroke","","",null,null],[17,"KEY_Cyrillic_ka_vertstroke","","",null,null],[17,"KEY_Cyrillic_EN_descender","","",null,null],[17,"KEY_Cyrillic_en_descender","","",null,null],[17,"KEY_Cyrillic_U_straight","","",null,null],[17,"KEY_Cyrillic_u_straight","","",null,null],[17,"KEY_Cyrillic_U_straight_bar","","",null,null],[17,"KEY_Cyrillic_u_straight_bar","","",null,null],[17,"KEY_Cyrillic_HA_descender","","",null,null],[17,"KEY_Cyrillic_ha_descender","","",null,null],[17,"KEY_Cyrillic_CHE_descender","","",null,null],[17,"KEY_Cyrillic_che_descender","","",null,null],[17,"KEY_Cyrillic_CHE_vertstroke","","",null,null],[17,"KEY_Cyrillic_che_vertstroke","","",null,null],[17,"KEY_Cyrillic_SHHA","","",null,null],[17,"KEY_Cyrillic_shha","","",null,null],[17,"KEY_Cyrillic_SCHWA","","",null,null],[17,"KEY_Cyrillic_schwa","","",null,null],[17,"KEY_Cyrillic_I_macron","","",null,null],[17,"KEY_Cyrillic_i_macron","","",null,null],[17,"KEY_Cyrillic_O_bar","","",null,null],[17,"KEY_Cyrillic_o_bar","","",null,null],[17,"KEY_Cyrillic_U_macron","","",null,null],[17,"KEY_Cyrillic_u_macron","","",null,null],[17,"KEY_Serbian_dje","","",null,null],[17,"KEY_Macedonia_gje","","",null,null],[17,"KEY_Cyrillic_io","","",null,null],[17,"KEY_Ukrainian_ie","","",null,null],[17,"KEY_Ukranian_je","","",null,null],[17,"KEY_Macedonia_dse","","",null,null],[17,"KEY_Ukrainian_i","","",null,null],[17,"KEY_Ukranian_i","","",null,null],[17,"KEY_Ukrainian_yi","","",null,null],[17,"KEY_Ukranian_yi","","",null,null],[17,"KEY_Cyrillic_je","","",null,null],[17,"KEY_Serbian_je","","",null,null],[17,"KEY_Cyrillic_lje","","",null,null],[17,"KEY_Serbian_lje","","",null,null],[17,"KEY_Cyrillic_nje","","",null,null],[17,"KEY_Serbian_nje","","",null,null],[17,"KEY_Serbian_tshe","","",null,null],[17,"KEY_Macedonia_kje","","",null,null],[17,"KEY_Ukrainian_ghe_with_upturn","","",null,null],[17,"KEY_Byelorussian_shortu","","",null,null],[17,"KEY_Cyrillic_dzhe","","",null,null],[17,"KEY_Serbian_dze","","",null,null],[17,"KEY_numerosign","","",null,null],[17,"KEY_Serbian_DJE","","",null,null],[17,"KEY_Macedonia_GJE","","",null,null],[17,"KEY_Cyrillic_IO","","",null,null],[17,"KEY_Ukrainian_IE","","",null,null],[17,"KEY_Ukranian_JE","","",null,null],[17,"KEY_Macedonia_DSE","","",null,null],[17,"KEY_Ukrainian_I","","",null,null],[17,"KEY_Ukranian_I","","",null,null],[17,"KEY_Ukrainian_YI","","",null,null],[17,"KEY_Ukranian_YI","","",null,null],[17,"KEY_Cyrillic_JE","","",null,null],[17,"KEY_Serbian_JE","","",null,null],[17,"KEY_Cyrillic_LJE","","",null,null],[17,"KEY_Serbian_LJE","","",null,null],[17,"KEY_Cyrillic_NJE","","",null,null],[17,"KEY_Serbian_NJE","","",null,null],[17,"KEY_Serbian_TSHE","","",null,null],[17,"KEY_Macedonia_KJE","","",null,null],[17,"KEY_Ukrainian_GHE_WITH_UPTURN","","",null,null],[17,"KEY_Byelorussian_SHORTU","","",null,null],[17,"KEY_Cyrillic_DZHE","","",null,null],[17,"KEY_Serbian_DZE","","",null,null],[17,"KEY_Cyrillic_yu","","",null,null],[17,"KEY_Cyrillic_a","","",null,null],[17,"KEY_Cyrillic_be","","",null,null],[17,"KEY_Cyrillic_tse","","",null,null],[17,"KEY_Cyrillic_de","","",null,null],[17,"KEY_Cyrillic_ie","","",null,null],[17,"KEY_Cyrillic_ef","","",null,null],[17,"KEY_Cyrillic_ghe","","",null,null],[17,"KEY_Cyrillic_ha","","",null,null],[17,"KEY_Cyrillic_i","","",null,null],[17,"KEY_Cyrillic_shorti","","",null,null],[17,"KEY_Cyrillic_ka","","",null,null],[17,"KEY_Cyrillic_el","","",null,null],[17,"KEY_Cyrillic_em","","",null,null],[17,"KEY_Cyrillic_en","","",null,null],[17,"KEY_Cyrillic_o","","",null,null],[17,"KEY_Cyrillic_pe","","",null,null],[17,"KEY_Cyrillic_ya","","",null,null],[17,"KEY_Cyrillic_er","","",null,null],[17,"KEY_Cyrillic_es","","",null,null],[17,"KEY_Cyrillic_te","","",null,null],[17,"KEY_Cyrillic_u","","",null,null],[17,"KEY_Cyrillic_zhe","","",null,null],[17,"KEY_Cyrillic_ve","","",null,null],[17,"KEY_Cyrillic_softsign","","",null,null],[17,"KEY_Cyrillic_yeru","","",null,null],[17,"KEY_Cyrillic_ze","","",null,null],[17,"KEY_Cyrillic_sha","","",null,null],[17,"KEY_Cyrillic_e","","",null,null],[17,"KEY_Cyrillic_shcha","","",null,null],[17,"KEY_Cyrillic_che","","",null,null],[17,"KEY_Cyrillic_hardsign","","",null,null],[17,"KEY_Cyrillic_YU","","",null,null],[17,"KEY_Cyrillic_A","","",null,null],[17,"KEY_Cyrillic_BE","","",null,null],[17,"KEY_Cyrillic_TSE","","",null,null],[17,"KEY_Cyrillic_DE","","",null,null],[17,"KEY_Cyrillic_IE","","",null,null],[17,"KEY_Cyrillic_EF","","",null,null],[17,"KEY_Cyrillic_GHE","","",null,null],[17,"KEY_Cyrillic_HA","","",null,null],[17,"KEY_Cyrillic_I","","",null,null],[17,"KEY_Cyrillic_SHORTI","","",null,null],[17,"KEY_Cyrillic_KA","","",null,null],[17,"KEY_Cyrillic_EL","","",null,null],[17,"KEY_Cyrillic_EM","","",null,null],[17,"KEY_Cyrillic_EN","","",null,null],[17,"KEY_Cyrillic_O","","",null,null],[17,"KEY_Cyrillic_PE","","",null,null],[17,"KEY_Cyrillic_YA","","",null,null],[17,"KEY_Cyrillic_ER","","",null,null],[17,"KEY_Cyrillic_ES","","",null,null],[17,"KEY_Cyrillic_TE","","",null,null],[17,"KEY_Cyrillic_U","","",null,null],[17,"KEY_Cyrillic_ZHE","","",null,null],[17,"KEY_Cyrillic_VE","","",null,null],[17,"KEY_Cyrillic_SOFTSIGN","","",null,null],[17,"KEY_Cyrillic_YERU","","",null,null],[17,"KEY_Cyrillic_ZE","","",null,null],[17,"KEY_Cyrillic_SHA","","",null,null],[17,"KEY_Cyrillic_E","","",null,null],[17,"KEY_Cyrillic_SHCHA","","",null,null],[17,"KEY_Cyrillic_CHE","","",null,null],[17,"KEY_Cyrillic_HARDSIGN","","",null,null],[17,"KEY_Greek_ALPHAaccent","","",null,null],[17,"KEY_Greek_EPSILONaccent","","",null,null],[17,"KEY_Greek_ETAaccent","","",null,null],[17,"KEY_Greek_IOTAaccent","","",null,null],[17,"KEY_Greek_IOTAdieresis","","",null,null],[17,"KEY_Greek_IOTAdiaeresis","","",null,null],[17,"KEY_Greek_OMICRONaccent","","",null,null],[17,"KEY_Greek_UPSILONaccent","","",null,null],[17,"KEY_Greek_UPSILONdieresis","","",null,null],[17,"KEY_Greek_OMEGAaccent","","",null,null],[17,"KEY_Greek_accentdieresis","","",null,null],[17,"KEY_Greek_horizbar","","",null,null],[17,"KEY_Greek_alphaaccent","","",null,null],[17,"KEY_Greek_epsilonaccent","","",null,null],[17,"KEY_Greek_etaaccent","","",null,null],[17,"KEY_Greek_iotaaccent","","",null,null],[17,"KEY_Greek_iotadieresis","","",null,null],[17,"KEY_Greek_iotaaccentdieresis","","",null,null],[17,"KEY_Greek_omicronaccent","","",null,null],[17,"KEY_Greek_upsilonaccent","","",null,null],[17,"KEY_Greek_upsilondieresis","","",null,null],[17,"KEY_Greek_upsilonaccentdieresis","","",null,null],[17,"KEY_Greek_omegaaccent","","",null,null],[17,"KEY_Greek_ALPHA","","",null,null],[17,"KEY_Greek_BETA","","",null,null],[17,"KEY_Greek_GAMMA","","",null,null],[17,"KEY_Greek_DELTA","","",null,null],[17,"KEY_Greek_EPSILON","","",null,null],[17,"KEY_Greek_ZETA","","",null,null],[17,"KEY_Greek_ETA","","",null,null],[17,"KEY_Greek_THETA","","",null,null],[17,"KEY_Greek_IOTA","","",null,null],[17,"KEY_Greek_KAPPA","","",null,null],[17,"KEY_Greek_LAMDA","","",null,null],[17,"KEY_Greek_LAMBDA","","",null,null],[17,"KEY_Greek_MU","","",null,null],[17,"KEY_Greek_NU","","",null,null],[17,"KEY_Greek_XI","","",null,null],[17,"KEY_Greek_OMICRON","","",null,null],[17,"KEY_Greek_PI","","",null,null],[17,"KEY_Greek_RHO","","",null,null],[17,"KEY_Greek_SIGMA","","",null,null],[17,"KEY_Greek_TAU","","",null,null],[17,"KEY_Greek_UPSILON","","",null,null],[17,"KEY_Greek_PHI","","",null,null],[17,"KEY_Greek_CHI","","",null,null],[17,"KEY_Greek_PSI","","",null,null],[17,"KEY_Greek_OMEGA","","",null,null],[17,"KEY_Greek_alpha","","",null,null],[17,"KEY_Greek_beta","","",null,null],[17,"KEY_Greek_gamma","","",null,null],[17,"KEY_Greek_delta","","",null,null],[17,"KEY_Greek_epsilon","","",null,null],[17,"KEY_Greek_zeta","","",null,null],[17,"KEY_Greek_eta","","",null,null],[17,"KEY_Greek_theta","","",null,null],[17,"KEY_Greek_iota","","",null,null],[17,"KEY_Greek_kappa","","",null,null],[17,"KEY_Greek_lamda","","",null,null],[17,"KEY_Greek_lambda","","",null,null],[17,"KEY_Greek_mu","","",null,null],[17,"KEY_Greek_nu","","",null,null],[17,"KEY_Greek_xi","","",null,null],[17,"KEY_Greek_omicron","","",null,null],[17,"KEY_Greek_pi","","",null,null],[17,"KEY_Greek_rho","","",null,null],[17,"KEY_Greek_sigma","","",null,null],[17,"KEY_Greek_finalsmallsigma","","",null,null],[17,"KEY_Greek_tau","","",null,null],[17,"KEY_Greek_upsilon","","",null,null],[17,"KEY_Greek_phi","","",null,null],[17,"KEY_Greek_chi","","",null,null],[17,"KEY_Greek_psi","","",null,null],[17,"KEY_Greek_omega","","",null,null],[17,"KEY_Greek_switch","","",null,null],[17,"KEY_leftradical","","",null,null],[17,"KEY_topleftradical","","",null,null],[17,"KEY_horizconnector","","",null,null],[17,"KEY_topintegral","","",null,null],[17,"KEY_botintegral","","",null,null],[17,"KEY_vertconnector","","",null,null],[17,"KEY_topleftsqbracket","","",null,null],[17,"KEY_botleftsqbracket","","",null,null],[17,"KEY_toprightsqbracket","","",null,null],[17,"KEY_botrightsqbracket","","",null,null],[17,"KEY_topleftparens","","",null,null],[17,"KEY_botleftparens","","",null,null],[17,"KEY_toprightparens","","",null,null],[17,"KEY_botrightparens","","",null,null],[17,"KEY_leftmiddlecurlybrace","","",null,null],[17,"KEY_rightmiddlecurlybrace","","",null,null],[17,"KEY_topleftsummation","","",null,null],[17,"KEY_botleftsummation","","",null,null],[17,"KEY_topvertsummationconnector","","",null,null],[17,"KEY_botvertsummationconnector","","",null,null],[17,"KEY_toprightsummation","","",null,null],[17,"KEY_botrightsummation","","",null,null],[17,"KEY_rightmiddlesummation","","",null,null],[17,"KEY_lessthanequal","","",null,null],[17,"KEY_notequal","","",null,null],[17,"KEY_greaterthanequal","","",null,null],[17,"KEY_integral","","",null,null],[17,"KEY_therefore","","",null,null],[17,"KEY_variation","","",null,null],[17,"KEY_infinity","","",null,null],[17,"KEY_nabla","","",null,null],[17,"KEY_approximate","","",null,null],[17,"KEY_similarequal","","",null,null],[17,"KEY_ifonlyif","","",null,null],[17,"KEY_implies","","",null,null],[17,"KEY_identical","","",null,null],[17,"KEY_radical","","",null,null],[17,"KEY_includedin","","",null,null],[17,"KEY_includes","","",null,null],[17,"KEY_intersection","","",null,null],[17,"KEY_union","","",null,null],[17,"KEY_logicaland","","",null,null],[17,"KEY_logicalor","","",null,null],[17,"KEY_partialderivative","","",null,null],[17,"KEY_function","","",null,null],[17,"KEY_leftarrow","","",null,null],[17,"KEY_uparrow","","",null,null],[17,"KEY_rightarrow","","",null,null],[17,"KEY_downarrow","","",null,null],[17,"KEY_blank","","",null,null],[17,"KEY_soliddiamond","","",null,null],[17,"KEY_checkerboard","","",null,null],[17,"KEY_ht","","",null,null],[17,"KEY_ff","","",null,null],[17,"KEY_cr","","",null,null],[17,"KEY_lf","","",null,null],[17,"KEY_nl","","",null,null],[17,"KEY_vt","","",null,null],[17,"KEY_lowrightcorner","","",null,null],[17,"KEY_uprightcorner","","",null,null],[17,"KEY_upleftcorner","","",null,null],[17,"KEY_lowleftcorner","","",null,null],[17,"KEY_crossinglines","","",null,null],[17,"KEY_horizlinescan1","","",null,null],[17,"KEY_horizlinescan3","","",null,null],[17,"KEY_horizlinescan5","","",null,null],[17,"KEY_horizlinescan7","","",null,null],[17,"KEY_horizlinescan9","","",null,null],[17,"KEY_leftt","","",null,null],[17,"KEY_rightt","","",null,null],[17,"KEY_bott","","",null,null],[17,"KEY_topt","","",null,null],[17,"KEY_vertbar","","",null,null],[17,"KEY_emspace","","",null,null],[17,"KEY_enspace","","",null,null],[17,"KEY_em3space","","",null,null],[17,"KEY_em4space","","",null,null],[17,"KEY_digitspace","","",null,null],[17,"KEY_punctspace","","",null,null],[17,"KEY_thinspace","","",null,null],[17,"KEY_hairspace","","",null,null],[17,"KEY_emdash","","",null,null],[17,"KEY_endash","","",null,null],[17,"KEY_signifblank","","",null,null],[17,"KEY_ellipsis","","",null,null],[17,"KEY_doubbaselinedot","","",null,null],[17,"KEY_onethird","","",null,null],[17,"KEY_twothirds","","",null,null],[17,"KEY_onefifth","","",null,null],[17,"KEY_twofifths","","",null,null],[17,"KEY_threefifths","","",null,null],[17,"KEY_fourfifths","","",null,null],[17,"KEY_onesixth","","",null,null],[17,"KEY_fivesixths","","",null,null],[17,"KEY_careof","","",null,null],[17,"KEY_figdash","","",null,null],[17,"KEY_leftanglebracket","","",null,null],[17,"KEY_decimalpoint","","",null,null],[17,"KEY_rightanglebracket","","",null,null],[17,"KEY_marker","","",null,null],[17,"KEY_oneeighth","","",null,null],[17,"KEY_threeeighths","","",null,null],[17,"KEY_fiveeighths","","",null,null],[17,"KEY_seveneighths","","",null,null],[17,"KEY_trademark","","",null,null],[17,"KEY_signaturemark","","",null,null],[17,"KEY_trademarkincircle","","",null,null],[17,"KEY_leftopentriangle","","",null,null],[17,"KEY_rightopentriangle","","",null,null],[17,"KEY_emopencircle","","",null,null],[17,"KEY_emopenrectangle","","",null,null],[17,"KEY_leftsinglequotemark","","",null,null],[17,"KEY_rightsinglequotemark","","",null,null],[17,"KEY_leftdoublequotemark","","",null,null],[17,"KEY_rightdoublequotemark","","",null,null],[17,"KEY_prescription","","",null,null],[17,"KEY_permille","","",null,null],[17,"KEY_minutes","","",null,null],[17,"KEY_seconds","","",null,null],[17,"KEY_latincross","","",null,null],[17,"KEY_hexagram","","",null,null],[17,"KEY_filledrectbullet","","",null,null],[17,"KEY_filledlefttribullet","","",null,null],[17,"KEY_filledrighttribullet","","",null,null],[17,"KEY_emfilledcircle","","",null,null],[17,"KEY_emfilledrect","","",null,null],[17,"KEY_enopencircbullet","","",null,null],[17,"KEY_enopensquarebullet","","",null,null],[17,"KEY_openrectbullet","","",null,null],[17,"KEY_opentribulletup","","",null,null],[17,"KEY_opentribulletdown","","",null,null],[17,"KEY_openstar","","",null,null],[17,"KEY_enfilledcircbullet","","",null,null],[17,"KEY_enfilledsqbullet","","",null,null],[17,"KEY_filledtribulletup","","",null,null],[17,"KEY_filledtribulletdown","","",null,null],[17,"KEY_leftpointer","","",null,null],[17,"KEY_rightpointer","","",null,null],[17,"KEY_club","","",null,null],[17,"KEY_diamond","","",null,null],[17,"KEY_heart","","",null,null],[17,"KEY_maltesecross","","",null,null],[17,"KEY_dagger","","",null,null],[17,"KEY_doubledagger","","",null,null],[17,"KEY_checkmark","","",null,null],[17,"KEY_ballotcross","","",null,null],[17,"KEY_musicalsharp","","",null,null],[17,"KEY_musicalflat","","",null,null],[17,"KEY_malesymbol","","",null,null],[17,"KEY_femalesymbol","","",null,null],[17,"KEY_telephone","","",null,null],[17,"KEY_telephonerecorder","","",null,null],[17,"KEY_phonographcopyright","","",null,null],[17,"KEY_caret","","",null,null],[17,"KEY_singlelowquotemark","","",null,null],[17,"KEY_doublelowquotemark","","",null,null],[17,"KEY_cursor","","",null,null],[17,"KEY_leftcaret","","",null,null],[17,"KEY_rightcaret","","",null,null],[17,"KEY_downcaret","","",null,null],[17,"KEY_upcaret","","",null,null],[17,"KEY_overbar","","",null,null],[17,"KEY_downtack","","",null,null],[17,"KEY_upshoe","","",null,null],[17,"KEY_downstile","","",null,null],[17,"KEY_underbar","","",null,null],[17,"KEY_jot","","",null,null],[17,"KEY_quad","","",null,null],[17,"KEY_uptack","","",null,null],[17,"KEY_circle","","",null,null],[17,"KEY_upstile","","",null,null],[17,"KEY_downshoe","","",null,null],[17,"KEY_rightshoe","","",null,null],[17,"KEY_leftshoe","","",null,null],[17,"KEY_lefttack","","",null,null],[17,"KEY_righttack","","",null,null],[17,"KEY_hebrew_doublelowline","","",null,null],[17,"KEY_hebrew_aleph","","",null,null],[17,"KEY_hebrew_bet","","",null,null],[17,"KEY_hebrew_beth","","",null,null],[17,"KEY_hebrew_gimel","","",null,null],[17,"KEY_hebrew_gimmel","","",null,null],[17,"KEY_hebrew_dalet","","",null,null],[17,"KEY_hebrew_daleth","","",null,null],[17,"KEY_hebrew_he","","",null,null],[17,"KEY_hebrew_waw","","",null,null],[17,"KEY_hebrew_zain","","",null,null],[17,"KEY_hebrew_zayin","","",null,null],[17,"KEY_hebrew_chet","","",null,null],[17,"KEY_hebrew_het","","",null,null],[17,"KEY_hebrew_tet","","",null,null],[17,"KEY_hebrew_teth","","",null,null],[17,"KEY_hebrew_yod","","",null,null],[17,"KEY_hebrew_finalkaph","","",null,null],[17,"KEY_hebrew_kaph","","",null,null],[17,"KEY_hebrew_lamed","","",null,null],[17,"KEY_hebrew_finalmem","","",null,null],[17,"KEY_hebrew_mem","","",null,null],[17,"KEY_hebrew_finalnun","","",null,null],[17,"KEY_hebrew_nun","","",null,null],[17,"KEY_hebrew_samech","","",null,null],[17,"KEY_hebrew_samekh","","",null,null],[17,"KEY_hebrew_ayin","","",null,null],[17,"KEY_hebrew_finalpe","","",null,null],[17,"KEY_hebrew_pe","","",null,null],[17,"KEY_hebrew_finalzade","","",null,null],[17,"KEY_hebrew_finalzadi","","",null,null],[17,"KEY_hebrew_zade","","",null,null],[17,"KEY_hebrew_zadi","","",null,null],[17,"KEY_hebrew_qoph","","",null,null],[17,"KEY_hebrew_kuf","","",null,null],[17,"KEY_hebrew_resh","","",null,null],[17,"KEY_hebrew_shin","","",null,null],[17,"KEY_hebrew_taw","","",null,null],[17,"KEY_hebrew_taf","","",null,null],[17,"KEY_Hebrew_switch","","",null,null],[17,"KEY_Thai_kokai","","",null,null],[17,"KEY_Thai_khokhai","","",null,null],[17,"KEY_Thai_khokhuat","","",null,null],[17,"KEY_Thai_khokhwai","","",null,null],[17,"KEY_Thai_khokhon","","",null,null],[17,"KEY_Thai_khorakhang","","",null,null],[17,"KEY_Thai_ngongu","","",null,null],[17,"KEY_Thai_chochan","","",null,null],[17,"KEY_Thai_choching","","",null,null],[17,"KEY_Thai_chochang","","",null,null],[17,"KEY_Thai_soso","","",null,null],[17,"KEY_Thai_chochoe","","",null,null],[17,"KEY_Thai_yoying","","",null,null],[17,"KEY_Thai_dochada","","",null,null],[17,"KEY_Thai_topatak","","",null,null],[17,"KEY_Thai_thothan","","",null,null],[17,"KEY_Thai_thonangmontho","","",null,null],[17,"KEY_Thai_thophuthao","","",null,null],[17,"KEY_Thai_nonen","","",null,null],[17,"KEY_Thai_dodek","","",null,null],[17,"KEY_Thai_totao","","",null,null],[17,"KEY_Thai_thothung","","",null,null],[17,"KEY_Thai_thothahan","","",null,null],[17,"KEY_Thai_thothong","","",null,null],[17,"KEY_Thai_nonu","","",null,null],[17,"KEY_Thai_bobaimai","","",null,null],[17,"KEY_Thai_popla","","",null,null],[17,"KEY_Thai_phophung","","",null,null],[17,"KEY_Thai_fofa","","",null,null],[17,"KEY_Thai_phophan","","",null,null],[17,"KEY_Thai_fofan","","",null,null],[17,"KEY_Thai_phosamphao","","",null,null],[17,"KEY_Thai_moma","","",null,null],[17,"KEY_Thai_yoyak","","",null,null],[17,"KEY_Thai_rorua","","",null,null],[17,"KEY_Thai_ru","","",null,null],[17,"KEY_Thai_loling","","",null,null],[17,"KEY_Thai_lu","","",null,null],[17,"KEY_Thai_wowaen","","",null,null],[17,"KEY_Thai_sosala","","",null,null],[17,"KEY_Thai_sorusi","","",null,null],[17,"KEY_Thai_sosua","","",null,null],[17,"KEY_Thai_hohip","","",null,null],[17,"KEY_Thai_lochula","","",null,null],[17,"KEY_Thai_oang","","",null,null],[17,"KEY_Thai_honokhuk","","",null,null],[17,"KEY_Thai_paiyannoi","","",null,null],[17,"KEY_Thai_saraa","","",null,null],[17,"KEY_Thai_maihanakat","","",null,null],[17,"KEY_Thai_saraaa","","",null,null],[17,"KEY_Thai_saraam","","",null,null],[17,"KEY_Thai_sarai","","",null,null],[17,"KEY_Thai_saraii","","",null,null],[17,"KEY_Thai_saraue","","",null,null],[17,"KEY_Thai_sarauee","","",null,null],[17,"KEY_Thai_sarau","","",null,null],[17,"KEY_Thai_sarauu","","",null,null],[17,"KEY_Thai_phinthu","","",null,null],[17,"KEY_Thai_maihanakat_maitho","","",null,null],[17,"KEY_Thai_baht","","",null,null],[17,"KEY_Thai_sarae","","",null,null],[17,"KEY_Thai_saraae","","",null,null],[17,"KEY_Thai_sarao","","",null,null],[17,"KEY_Thai_saraaimaimuan","","",null,null],[17,"KEY_Thai_saraaimaimalai","","",null,null],[17,"KEY_Thai_lakkhangyao","","",null,null],[17,"KEY_Thai_maiyamok","","",null,null],[17,"KEY_Thai_maitaikhu","","",null,null],[17,"KEY_Thai_maiek","","",null,null],[17,"KEY_Thai_maitho","","",null,null],[17,"KEY_Thai_maitri","","",null,null],[17,"KEY_Thai_maichattawa","","",null,null],[17,"KEY_Thai_thanthakhat","","",null,null],[17,"KEY_Thai_nikhahit","","",null,null],[17,"KEY_Thai_leksun","","",null,null],[17,"KEY_Thai_leknung","","",null,null],[17,"KEY_Thai_leksong","","",null,null],[17,"KEY_Thai_leksam","","",null,null],[17,"KEY_Thai_leksi","","",null,null],[17,"KEY_Thai_lekha","","",null,null],[17,"KEY_Thai_lekhok","","",null,null],[17,"KEY_Thai_lekchet","","",null,null],[17,"KEY_Thai_lekpaet","","",null,null],[17,"KEY_Thai_lekkao","","",null,null],[17,"KEY_Hangul","","",null,null],[17,"KEY_Hangul_Start","","",null,null],[17,"KEY_Hangul_End","","",null,null],[17,"KEY_Hangul_Hanja","","",null,null],[17,"KEY_Hangul_Jamo","","",null,null],[17,"KEY_Hangul_Romaja","","",null,null],[17,"KEY_Hangul_Codeinput","","",null,null],[17,"KEY_Hangul_Jeonja","","",null,null],[17,"KEY_Hangul_Banja","","",null,null],[17,"KEY_Hangul_PreHanja","","",null,null],[17,"KEY_Hangul_PostHanja","","",null,null],[17,"KEY_Hangul_SingleCandidate","","",null,null],[17,"KEY_Hangul_MultipleCandidate","","",null,null],[17,"KEY_Hangul_PreviousCandidate","","",null,null],[17,"KEY_Hangul_Special","","",null,null],[17,"KEY_Hangul_switch","","",null,null],[17,"KEY_Hangul_Kiyeog","","",null,null],[17,"KEY_Hangul_SsangKiyeog","","",null,null],[17,"KEY_Hangul_KiyeogSios","","",null,null],[17,"KEY_Hangul_Nieun","","",null,null],[17,"KEY_Hangul_NieunJieuj","","",null,null],[17,"KEY_Hangul_NieunHieuh","","",null,null],[17,"KEY_Hangul_Dikeud","","",null,null],[17,"KEY_Hangul_SsangDikeud","","",null,null],[17,"KEY_Hangul_Rieul","","",null,null],[17,"KEY_Hangul_RieulKiyeog","","",null,null],[17,"KEY_Hangul_RieulMieum","","",null,null],[17,"KEY_Hangul_RieulPieub","","",null,null],[17,"KEY_Hangul_RieulSios","","",null,null],[17,"KEY_Hangul_RieulTieut","","",null,null],[17,"KEY_Hangul_RieulPhieuf","","",null,null],[17,"KEY_Hangul_RieulHieuh","","",null,null],[17,"KEY_Hangul_Mieum","","",null,null],[17,"KEY_Hangul_Pieub","","",null,null],[17,"KEY_Hangul_SsangPieub","","",null,null],[17,"KEY_Hangul_PieubSios","","",null,null],[17,"KEY_Hangul_Sios","","",null,null],[17,"KEY_Hangul_SsangSios","","",null,null],[17,"KEY_Hangul_Ieung","","",null,null],[17,"KEY_Hangul_Jieuj","","",null,null],[17,"KEY_Hangul_SsangJieuj","","",null,null],[17,"KEY_Hangul_Cieuc","","",null,null],[17,"KEY_Hangul_Khieuq","","",null,null],[17,"KEY_Hangul_Tieut","","",null,null],[17,"KEY_Hangul_Phieuf","","",null,null],[17,"KEY_Hangul_Hieuh","","",null,null],[17,"KEY_Hangul_A","","",null,null],[17,"KEY_Hangul_AE","","",null,null],[17,"KEY_Hangul_YA","","",null,null],[17,"KEY_Hangul_YAE","","",null,null],[17,"KEY_Hangul_EO","","",null,null],[17,"KEY_Hangul_E","","",null,null],[17,"KEY_Hangul_YEO","","",null,null],[17,"KEY_Hangul_YE","","",null,null],[17,"KEY_Hangul_O","","",null,null],[17,"KEY_Hangul_WA","","",null,null],[17,"KEY_Hangul_WAE","","",null,null],[17,"KEY_Hangul_OE","","",null,null],[17,"KEY_Hangul_YO","","",null,null],[17,"KEY_Hangul_U","","",null,null],[17,"KEY_Hangul_WEO","","",null,null],[17,"KEY_Hangul_WE","","",null,null],[17,"KEY_Hangul_WI","","",null,null],[17,"KEY_Hangul_YU","","",null,null],[17,"KEY_Hangul_EU","","",null,null],[17,"KEY_Hangul_YI","","",null,null],[17,"KEY_Hangul_I","","",null,null],[17,"KEY_Hangul_J_Kiyeog","","",null,null],[17,"KEY_Hangul_J_SsangKiyeog","","",null,null],[17,"KEY_Hangul_J_KiyeogSios","","",null,null],[17,"KEY_Hangul_J_Nieun","","",null,null],[17,"KEY_Hangul_J_NieunJieuj","","",null,null],[17,"KEY_Hangul_J_NieunHieuh","","",null,null],[17,"KEY_Hangul_J_Dikeud","","",null,null],[17,"KEY_Hangul_J_Rieul","","",null,null],[17,"KEY_Hangul_J_RieulKiyeog","","",null,null],[17,"KEY_Hangul_J_RieulMieum","","",null,null],[17,"KEY_Hangul_J_RieulPieub","","",null,null],[17,"KEY_Hangul_J_RieulSios","","",null,null],[17,"KEY_Hangul_J_RieulTieut","","",null,null],[17,"KEY_Hangul_J_RieulPhieuf","","",null,null],[17,"KEY_Hangul_J_RieulHieuh","","",null,null],[17,"KEY_Hangul_J_Mieum","","",null,null],[17,"KEY_Hangul_J_Pieub","","",null,null],[17,"KEY_Hangul_J_PieubSios","","",null,null],[17,"KEY_Hangul_J_Sios","","",null,null],[17,"KEY_Hangul_J_SsangSios","","",null,null],[17,"KEY_Hangul_J_Ieung","","",null,null],[17,"KEY_Hangul_J_Jieuj","","",null,null],[17,"KEY_Hangul_J_Cieuc","","",null,null],[17,"KEY_Hangul_J_Khieuq","","",null,null],[17,"KEY_Hangul_J_Tieut","","",null,null],[17,"KEY_Hangul_J_Phieuf","","",null,null],[17,"KEY_Hangul_J_Hieuh","","",null,null],[17,"KEY_Hangul_RieulYeorinHieuh","","",null,null],[17,"KEY_Hangul_SunkyeongeumMieum","","",null,null],[17,"KEY_Hangul_SunkyeongeumPieub","","",null,null],[17,"KEY_Hangul_PanSios","","",null,null],[17,"KEY_Hangul_KkogjiDalrinIeung","","",null,null],[17,"KEY_Hangul_SunkyeongeumPhieuf","","",null,null],[17,"KEY_Hangul_YeorinHieuh","","",null,null],[17,"KEY_Hangul_AraeA","","",null,null],[17,"KEY_Hangul_AraeAE","","",null,null],[17,"KEY_Hangul_J_PanSios","","",null,null],[17,"KEY_Hangul_J_KkogjiDalrinIeung","","",null,null],[17,"KEY_Hangul_J_YeorinHieuh","","",null,null],[17,"KEY_Korean_Won","","",null,null],[17,"KEY_Armenian_ligature_ew","","",null,null],[17,"KEY_Armenian_full_stop","","",null,null],[17,"KEY_Armenian_verjaket","","",null,null],[17,"KEY_Armenian_separation_mark","","",null,null],[17,"KEY_Armenian_but","","",null,null],[17,"KEY_Armenian_hyphen","","",null,null],[17,"KEY_Armenian_yentamna","","",null,null],[17,"KEY_Armenian_exclam","","",null,null],[17,"KEY_Armenian_amanak","","",null,null],[17,"KEY_Armenian_accent","","",null,null],[17,"KEY_Armenian_shesht","","",null,null],[17,"KEY_Armenian_question","","",null,null],[17,"KEY_Armenian_paruyk","","",null,null],[17,"KEY_Armenian_AYB","","",null,null],[17,"KEY_Armenian_ayb","","",null,null],[17,"KEY_Armenian_BEN","","",null,null],[17,"KEY_Armenian_ben","","",null,null],[17,"KEY_Armenian_GIM","","",null,null],[17,"KEY_Armenian_gim","","",null,null],[17,"KEY_Armenian_DA","","",null,null],[17,"KEY_Armenian_da","","",null,null],[17,"KEY_Armenian_YECH","","",null,null],[17,"KEY_Armenian_yech","","",null,null],[17,"KEY_Armenian_ZA","","",null,null],[17,"KEY_Armenian_za","","",null,null],[17,"KEY_Armenian_E","","",null,null],[17,"KEY_Armenian_e","","",null,null],[17,"KEY_Armenian_AT","","",null,null],[17,"KEY_Armenian_at","","",null,null],[17,"KEY_Armenian_TO","","",null,null],[17,"KEY_Armenian_to","","",null,null],[17,"KEY_Armenian_ZHE","","",null,null],[17,"KEY_Armenian_zhe","","",null,null],[17,"KEY_Armenian_INI","","",null,null],[17,"KEY_Armenian_ini","","",null,null],[17,"KEY_Armenian_LYUN","","",null,null],[17,"KEY_Armenian_lyun","","",null,null],[17,"KEY_Armenian_KHE","","",null,null],[17,"KEY_Armenian_khe","","",null,null],[17,"KEY_Armenian_TSA","","",null,null],[17,"KEY_Armenian_tsa","","",null,null],[17,"KEY_Armenian_KEN","","",null,null],[17,"KEY_Armenian_ken","","",null,null],[17,"KEY_Armenian_HO","","",null,null],[17,"KEY_Armenian_ho","","",null,null],[17,"KEY_Armenian_DZA","","",null,null],[17,"KEY_Armenian_dza","","",null,null],[17,"KEY_Armenian_GHAT","","",null,null],[17,"KEY_Armenian_ghat","","",null,null],[17,"KEY_Armenian_TCHE","","",null,null],[17,"KEY_Armenian_tche","","",null,null],[17,"KEY_Armenian_MEN","","",null,null],[17,"KEY_Armenian_men","","",null,null],[17,"KEY_Armenian_HI","","",null,null],[17,"KEY_Armenian_hi","","",null,null],[17,"KEY_Armenian_NU","","",null,null],[17,"KEY_Armenian_nu","","",null,null],[17,"KEY_Armenian_SHA","","",null,null],[17,"KEY_Armenian_sha","","",null,null],[17,"KEY_Armenian_VO","","",null,null],[17,"KEY_Armenian_vo","","",null,null],[17,"KEY_Armenian_CHA","","",null,null],[17,"KEY_Armenian_cha","","",null,null],[17,"KEY_Armenian_PE","","",null,null],[17,"KEY_Armenian_pe","","",null,null],[17,"KEY_Armenian_JE","","",null,null],[17,"KEY_Armenian_je","","",null,null],[17,"KEY_Armenian_RA","","",null,null],[17,"KEY_Armenian_ra","","",null,null],[17,"KEY_Armenian_SE","","",null,null],[17,"KEY_Armenian_se","","",null,null],[17,"KEY_Armenian_VEV","","",null,null],[17,"KEY_Armenian_vev","","",null,null],[17,"KEY_Armenian_TYUN","","",null,null],[17,"KEY_Armenian_tyun","","",null,null],[17,"KEY_Armenian_RE","","",null,null],[17,"KEY_Armenian_re","","",null,null],[17,"KEY_Armenian_TSO","","",null,null],[17,"KEY_Armenian_tso","","",null,null],[17,"KEY_Armenian_VYUN","","",null,null],[17,"KEY_Armenian_vyun","","",null,null],[17,"KEY_Armenian_PYUR","","",null,null],[17,"KEY_Armenian_pyur","","",null,null],[17,"KEY_Armenian_KE","","",null,null],[17,"KEY_Armenian_ke","","",null,null],[17,"KEY_Armenian_O","","",null,null],[17,"KEY_Armenian_o","","",null,null],[17,"KEY_Armenian_FE","","",null,null],[17,"KEY_Armenian_fe","","",null,null],[17,"KEY_Armenian_apostrophe","","",null,null],[17,"KEY_Georgian_an","","",null,null],[17,"KEY_Georgian_ban","","",null,null],[17,"KEY_Georgian_gan","","",null,null],[17,"KEY_Georgian_don","","",null,null],[17,"KEY_Georgian_en","","",null,null],[17,"KEY_Georgian_vin","","",null,null],[17,"KEY_Georgian_zen","","",null,null],[17,"KEY_Georgian_tan","","",null,null],[17,"KEY_Georgian_in","","",null,null],[17,"KEY_Georgian_kan","","",null,null],[17,"KEY_Georgian_las","","",null,null],[17,"KEY_Georgian_man","","",null,null],[17,"KEY_Georgian_nar","","",null,null],[17,"KEY_Georgian_on","","",null,null],[17,"KEY_Georgian_par","","",null,null],[17,"KEY_Georgian_zhar","","",null,null],[17,"KEY_Georgian_rae","","",null,null],[17,"KEY_Georgian_san","","",null,null],[17,"KEY_Georgian_tar","","",null,null],[17,"KEY_Georgian_un","","",null,null],[17,"KEY_Georgian_phar","","",null,null],[17,"KEY_Georgian_khar","","",null,null],[17,"KEY_Georgian_ghan","","",null,null],[17,"KEY_Georgian_qar","","",null,null],[17,"KEY_Georgian_shin","","",null,null],[17,"KEY_Georgian_chin","","",null,null],[17,"KEY_Georgian_can","","",null,null],[17,"KEY_Georgian_jil","","",null,null],[17,"KEY_Georgian_cil","","",null,null],[17,"KEY_Georgian_char","","",null,null],[17,"KEY_Georgian_xan","","",null,null],[17,"KEY_Georgian_jhan","","",null,null],[17,"KEY_Georgian_hae","","",null,null],[17,"KEY_Georgian_he","","",null,null],[17,"KEY_Georgian_hie","","",null,null],[17,"KEY_Georgian_we","","",null,null],[17,"KEY_Georgian_har","","",null,null],[17,"KEY_Georgian_hoe","","",null,null],[17,"KEY_Georgian_fi","","",null,null],[17,"KEY_Xabovedot","","",null,null],[17,"KEY_Ibreve","","",null,null],[17,"KEY_Zstroke","","",null,null],[17,"KEY_Gcaron","","",null,null],[17,"KEY_Ocaron","","",null,null],[17,"KEY_Obarred","","",null,null],[17,"KEY_xabovedot","","",null,null],[17,"KEY_ibreve","","",null,null],[17,"KEY_zstroke","","",null,null],[17,"KEY_gcaron","","",null,null],[17,"KEY_ocaron","","",null,null],[17,"KEY_obarred","","",null,null],[17,"KEY_SCHWA","","",null,null],[17,"KEY_schwa","","",null,null],[17,"KEY_EZH","","",null,null],[17,"KEY_ezh","","",null,null],[17,"KEY_Lbelowdot","","",null,null],[17,"KEY_lbelowdot","","",null,null],[17,"KEY_Abelowdot","","",null,null],[17,"KEY_abelowdot","","",null,null],[17,"KEY_Ahook","","",null,null],[17,"KEY_ahook","","",null,null],[17,"KEY_Acircumflexacute","","",null,null],[17,"KEY_acircumflexacute","","",null,null],[17,"KEY_Acircumflexgrave","","",null,null],[17,"KEY_acircumflexgrave","","",null,null],[17,"KEY_Acircumflexhook","","",null,null],[17,"KEY_acircumflexhook","","",null,null],[17,"KEY_Acircumflextilde","","",null,null],[17,"KEY_acircumflextilde","","",null,null],[17,"KEY_Acircumflexbelowdot","","",null,null],[17,"KEY_acircumflexbelowdot","","",null,null],[17,"KEY_Abreveacute","","",null,null],[17,"KEY_abreveacute","","",null,null],[17,"KEY_Abrevegrave","","",null,null],[17,"KEY_abrevegrave","","",null,null],[17,"KEY_Abrevehook","","",null,null],[17,"KEY_abrevehook","","",null,null],[17,"KEY_Abrevetilde","","",null,null],[17,"KEY_abrevetilde","","",null,null],[17,"KEY_Abrevebelowdot","","",null,null],[17,"KEY_abrevebelowdot","","",null,null],[17,"KEY_Ebelowdot","","",null,null],[17,"KEY_ebelowdot","","",null,null],[17,"KEY_Ehook","","",null,null],[17,"KEY_ehook","","",null,null],[17,"KEY_Etilde","","",null,null],[17,"KEY_etilde","","",null,null],[17,"KEY_Ecircumflexacute","","",null,null],[17,"KEY_ecircumflexacute","","",null,null],[17,"KEY_Ecircumflexgrave","","",null,null],[17,"KEY_ecircumflexgrave","","",null,null],[17,"KEY_Ecircumflexhook","","",null,null],[17,"KEY_ecircumflexhook","","",null,null],[17,"KEY_Ecircumflextilde","","",null,null],[17,"KEY_ecircumflextilde","","",null,null],[17,"KEY_Ecircumflexbelowdot","","",null,null],[17,"KEY_ecircumflexbelowdot","","",null,null],[17,"KEY_Ihook","","",null,null],[17,"KEY_ihook","","",null,null],[17,"KEY_Ibelowdot","","",null,null],[17,"KEY_ibelowdot","","",null,null],[17,"KEY_Obelowdot","","",null,null],[17,"KEY_obelowdot","","",null,null],[17,"KEY_Ohook","","",null,null],[17,"KEY_ohook","","",null,null],[17,"KEY_Ocircumflexacute","","",null,null],[17,"KEY_ocircumflexacute","","",null,null],[17,"KEY_Ocircumflexgrave","","",null,null],[17,"KEY_ocircumflexgrave","","",null,null],[17,"KEY_Ocircumflexhook","","",null,null],[17,"KEY_ocircumflexhook","","",null,null],[17,"KEY_Ocircumflextilde","","",null,null],[17,"KEY_ocircumflextilde","","",null,null],[17,"KEY_Ocircumflexbelowdot","","",null,null],[17,"KEY_ocircumflexbelowdot","","",null,null],[17,"KEY_Ohornacute","","",null,null],[17,"KEY_ohornacute","","",null,null],[17,"KEY_Ohorngrave","","",null,null],[17,"KEY_ohorngrave","","",null,null],[17,"KEY_Ohornhook","","",null,null],[17,"KEY_ohornhook","","",null,null],[17,"KEY_Ohorntilde","","",null,null],[17,"KEY_ohorntilde","","",null,null],[17,"KEY_Ohornbelowdot","","",null,null],[17,"KEY_ohornbelowdot","","",null,null],[17,"KEY_Ubelowdot","","",null,null],[17,"KEY_ubelowdot","","",null,null],[17,"KEY_Uhook","","",null,null],[17,"KEY_uhook","","",null,null],[17,"KEY_Uhornacute","","",null,null],[17,"KEY_uhornacute","","",null,null],[17,"KEY_Uhorngrave","","",null,null],[17,"KEY_uhorngrave","","",null,null],[17,"KEY_Uhornhook","","",null,null],[17,"KEY_uhornhook","","",null,null],[17,"KEY_Uhorntilde","","",null,null],[17,"KEY_uhorntilde","","",null,null],[17,"KEY_Uhornbelowdot","","",null,null],[17,"KEY_uhornbelowdot","","",null,null],[17,"KEY_Ybelowdot","","",null,null],[17,"KEY_ybelowdot","","",null,null],[17,"KEY_Yhook","","",null,null],[17,"KEY_yhook","","",null,null],[17,"KEY_Ytilde","","",null,null],[17,"KEY_ytilde","","",null,null],[17,"KEY_Ohorn","","",null,null],[17,"KEY_ohorn","","",null,null],[17,"KEY_Uhorn","","",null,null],[17,"KEY_uhorn","","",null,null],[17,"KEY_EcuSign","","",null,null],[17,"KEY_ColonSign","","",null,null],[17,"KEY_CruzeiroSign","","",null,null],[17,"KEY_FFrancSign","","",null,null],[17,"KEY_LiraSign","","",null,null],[17,"KEY_MillSign","","",null,null],[17,"KEY_NairaSign","","",null,null],[17,"KEY_PesetaSign","","",null,null],[17,"KEY_RupeeSign","","",null,null],[17,"KEY_WonSign","","",null,null],[17,"KEY_NewSheqelSign","","",null,null],[17,"KEY_DongSign","","",null,null],[17,"KEY_EuroSign","","",null,null],[17,"KEY_zerosuperior","","",null,null],[17,"KEY_foursuperior","","",null,null],[17,"KEY_fivesuperior","","",null,null],[17,"KEY_sixsuperior","","",null,null],[17,"KEY_sevensuperior","","",null,null],[17,"KEY_eightsuperior","","",null,null],[17,"KEY_ninesuperior","","",null,null],[17,"KEY_zerosubscript","","",null,null],[17,"KEY_onesubscript","","",null,null],[17,"KEY_twosubscript","","",null,null],[17,"KEY_threesubscript","","",null,null],[17,"KEY_foursubscript","","",null,null],[17,"KEY_fivesubscript","","",null,null],[17,"KEY_sixsubscript","","",null,null],[17,"KEY_sevensubscript","","",null,null],[17,"KEY_eightsubscript","","",null,null],[17,"KEY_ninesubscript","","",null,null],[17,"KEY_partdifferential","","",null,null],[17,"KEY_emptyset","","",null,null],[17,"KEY_elementof","","",null,null],[17,"KEY_notelementof","","",null,null],[17,"KEY_containsas","","",null,null],[17,"KEY_squareroot","","",null,null],[17,"KEY_cuberoot","","",null,null],[17,"KEY_fourthroot","","",null,null],[17,"KEY_dintegral","","",null,null],[17,"KEY_tintegral","","",null,null],[17,"KEY_because","","",null,null],[17,"KEY_approxeq","","",null,null],[17,"KEY_notapproxeq","","",null,null],[17,"KEY_notidentical","","",null,null],[17,"KEY_stricteq","","",null,null],[17,"KEY_braille_dot_1","","",null,null],[17,"KEY_braille_dot_2","","",null,null],[17,"KEY_braille_dot_3","","",null,null],[17,"KEY_braille_dot_4","","",null,null],[17,"KEY_braille_dot_5","","",null,null],[17,"KEY_braille_dot_6","","",null,null],[17,"KEY_braille_dot_7","","",null,null],[17,"KEY_braille_dot_8","","",null,null],[17,"KEY_braille_dot_9","","",null,null],[17,"KEY_braille_dot_10","","",null,null],[17,"KEY_braille_blank","","",null,null],[17,"KEY_braille_dots_1","","",null,null],[17,"KEY_braille_dots_2","","",null,null],[17,"KEY_braille_dots_12","","",null,null],[17,"KEY_braille_dots_3","","",null,null],[17,"KEY_braille_dots_13","","",null,null],[17,"KEY_braille_dots_23","","",null,null],[17,"KEY_braille_dots_123","","",null,null],[17,"KEY_braille_dots_4","","",null,null],[17,"KEY_braille_dots_14","","",null,null],[17,"KEY_braille_dots_24","","",null,null],[17,"KEY_braille_dots_124","","",null,null],[17,"KEY_braille_dots_34","","",null,null],[17,"KEY_braille_dots_134","","",null,null],[17,"KEY_braille_dots_234","","",null,null],[17,"KEY_braille_dots_1234","","",null,null],[17,"KEY_braille_dots_5","","",null,null],[17,"KEY_braille_dots_15","","",null,null],[17,"KEY_braille_dots_25","","",null,null],[17,"KEY_braille_dots_125","","",null,null],[17,"KEY_braille_dots_35","","",null,null],[17,"KEY_braille_dots_135","","",null,null],[17,"KEY_braille_dots_235","","",null,null],[17,"KEY_braille_dots_1235","","",null,null],[17,"KEY_braille_dots_45","","",null,null],[17,"KEY_braille_dots_145","","",null,null],[17,"KEY_braille_dots_245","","",null,null],[17,"KEY_braille_dots_1245","","",null,null],[17,"KEY_braille_dots_345","","",null,null],[17,"KEY_braille_dots_1345","","",null,null],[17,"KEY_braille_dots_2345","","",null,null],[17,"KEY_braille_dots_12345","","",null,null],[17,"KEY_braille_dots_6","","",null,null],[17,"KEY_braille_dots_16","","",null,null],[17,"KEY_braille_dots_26","","",null,null],[17,"KEY_braille_dots_126","","",null,null],[17,"KEY_braille_dots_36","","",null,null],[17,"KEY_braille_dots_136","","",null,null],[17,"KEY_braille_dots_236","","",null,null],[17,"KEY_braille_dots_1236","","",null,null],[17,"KEY_braille_dots_46","","",null,null],[17,"KEY_braille_dots_146","","",null,null],[17,"KEY_braille_dots_246","","",null,null],[17,"KEY_braille_dots_1246","","",null,null],[17,"KEY_braille_dots_346","","",null,null],[17,"KEY_braille_dots_1346","","",null,null],[17,"KEY_braille_dots_2346","","",null,null],[17,"KEY_braille_dots_12346","","",null,null],[17,"KEY_braille_dots_56","","",null,null],[17,"KEY_braille_dots_156","","",null,null],[17,"KEY_braille_dots_256","","",null,null],[17,"KEY_braille_dots_1256","","",null,null],[17,"KEY_braille_dots_356","","",null,null],[17,"KEY_braille_dots_1356","","",null,null],[17,"KEY_braille_dots_2356","","",null,null],[17,"KEY_braille_dots_12356","","",null,null],[17,"KEY_braille_dots_456","","",null,null],[17,"KEY_braille_dots_1456","","",null,null],[17,"KEY_braille_dots_2456","","",null,null],[17,"KEY_braille_dots_12456","","",null,null],[17,"KEY_braille_dots_3456","","",null,null],[17,"KEY_braille_dots_13456","","",null,null],[17,"KEY_braille_dots_23456","","",null,null],[17,"KEY_braille_dots_123456","","",null,null],[17,"KEY_braille_dots_7","","",null,null],[17,"KEY_braille_dots_17","","",null,null],[17,"KEY_braille_dots_27","","",null,null],[17,"KEY_braille_dots_127","","",null,null],[17,"KEY_braille_dots_37","","",null,null],[17,"KEY_braille_dots_137","","",null,null],[17,"KEY_braille_dots_237","","",null,null],[17,"KEY_braille_dots_1237","","",null,null],[17,"KEY_braille_dots_47","","",null,null],[17,"KEY_braille_dots_147","","",null,null],[17,"KEY_braille_dots_247","","",null,null],[17,"KEY_braille_dots_1247","","",null,null],[17,"KEY_braille_dots_347","","",null,null],[17,"KEY_braille_dots_1347","","",null,null],[17,"KEY_braille_dots_2347","","",null,null],[17,"KEY_braille_dots_12347","","",null,null],[17,"KEY_braille_dots_57","","",null,null],[17,"KEY_braille_dots_157","","",null,null],[17,"KEY_braille_dots_257","","",null,null],[17,"KEY_braille_dots_1257","","",null,null],[17,"KEY_braille_dots_357","","",null,null],[17,"KEY_braille_dots_1357","","",null,null],[17,"KEY_braille_dots_2357","","",null,null],[17,"KEY_braille_dots_12357","","",null,null],[17,"KEY_braille_dots_457","","",null,null],[17,"KEY_braille_dots_1457","","",null,null],[17,"KEY_braille_dots_2457","","",null,null],[17,"KEY_braille_dots_12457","","",null,null],[17,"KEY_braille_dots_3457","","",null,null],[17,"KEY_braille_dots_13457","","",null,null],[17,"KEY_braille_dots_23457","","",null,null],[17,"KEY_braille_dots_123457","","",null,null],[17,"KEY_braille_dots_67","","",null,null],[17,"KEY_braille_dots_167","","",null,null],[17,"KEY_braille_dots_267","","",null,null],[17,"KEY_braille_dots_1267","","",null,null],[17,"KEY_braille_dots_367","","",null,null],[17,"KEY_braille_dots_1367","","",null,null],[17,"KEY_braille_dots_2367","","",null,null],[17,"KEY_braille_dots_12367","","",null,null],[17,"KEY_braille_dots_467","","",null,null],[17,"KEY_braille_dots_1467","","",null,null],[17,"KEY_braille_dots_2467","","",null,null],[17,"KEY_braille_dots_12467","","",null,null],[17,"KEY_braille_dots_3467","","",null,null],[17,"KEY_braille_dots_13467","","",null,null],[17,"KEY_braille_dots_23467","","",null,null],[17,"KEY_braille_dots_123467","","",null,null],[17,"KEY_braille_dots_567","","",null,null],[17,"KEY_braille_dots_1567","","",null,null],[17,"KEY_braille_dots_2567","","",null,null],[17,"KEY_braille_dots_12567","","",null,null],[17,"KEY_braille_dots_3567","","",null,null],[17,"KEY_braille_dots_13567","","",null,null],[17,"KEY_braille_dots_23567","","",null,null],[17,"KEY_braille_dots_123567","","",null,null],[17,"KEY_braille_dots_4567","","",null,null],[17,"KEY_braille_dots_14567","","",null,null],[17,"KEY_braille_dots_24567","","",null,null],[17,"KEY_braille_dots_124567","","",null,null],[17,"KEY_braille_dots_34567","","",null,null],[17,"KEY_braille_dots_134567","","",null,null],[17,"KEY_braille_dots_234567","","",null,null],[17,"KEY_braille_dots_1234567","","",null,null],[17,"KEY_braille_dots_8","","",null,null],[17,"KEY_braille_dots_18","","",null,null],[17,"KEY_braille_dots_28","","",null,null],[17,"KEY_braille_dots_128","","",null,null],[17,"KEY_braille_dots_38","","",null,null],[17,"KEY_braille_dots_138","","",null,null],[17,"KEY_braille_dots_238","","",null,null],[17,"KEY_braille_dots_1238","","",null,null],[17,"KEY_braille_dots_48","","",null,null],[17,"KEY_braille_dots_148","","",null,null],[17,"KEY_braille_dots_248","","",null,null],[17,"KEY_braille_dots_1248","","",null,null],[17,"KEY_braille_dots_348","","",null,null],[17,"KEY_braille_dots_1348","","",null,null],[17,"KEY_braille_dots_2348","","",null,null],[17,"KEY_braille_dots_12348","","",null,null],[17,"KEY_braille_dots_58","","",null,null],[17,"KEY_braille_dots_158","","",null,null],[17,"KEY_braille_dots_258","","",null,null],[17,"KEY_braille_dots_1258","","",null,null],[17,"KEY_braille_dots_358","","",null,null],[17,"KEY_braille_dots_1358","","",null,null],[17,"KEY_braille_dots_2358","","",null,null],[17,"KEY_braille_dots_12358","","",null,null],[17,"KEY_braille_dots_458","","",null,null],[17,"KEY_braille_dots_1458","","",null,null],[17,"KEY_braille_dots_2458","","",null,null],[17,"KEY_braille_dots_12458","","",null,null],[17,"KEY_braille_dots_3458","","",null,null],[17,"KEY_braille_dots_13458","","",null,null],[17,"KEY_braille_dots_23458","","",null,null],[17,"KEY_braille_dots_123458","","",null,null],[17,"KEY_braille_dots_68","","",null,null],[17,"KEY_braille_dots_168","","",null,null],[17,"KEY_braille_dots_268","","",null,null],[17,"KEY_braille_dots_1268","","",null,null],[17,"KEY_braille_dots_368","","",null,null],[17,"KEY_braille_dots_1368","","",null,null],[17,"KEY_braille_dots_2368","","",null,null],[17,"KEY_braille_dots_12368","","",null,null],[17,"KEY_braille_dots_468","","",null,null],[17,"KEY_braille_dots_1468","","",null,null],[17,"KEY_braille_dots_2468","","",null,null],[17,"KEY_braille_dots_12468","","",null,null],[17,"KEY_braille_dots_3468","","",null,null],[17,"KEY_braille_dots_13468","","",null,null],[17,"KEY_braille_dots_23468","","",null,null],[17,"KEY_braille_dots_123468","","",null,null],[17,"KEY_braille_dots_568","","",null,null],[17,"KEY_braille_dots_1568","","",null,null],[17,"KEY_braille_dots_2568","","",null,null],[17,"KEY_braille_dots_12568","","",null,null],[17,"KEY_braille_dots_3568","","",null,null],[17,"KEY_braille_dots_13568","","",null,null],[17,"KEY_braille_dots_23568","","",null,null],[17,"KEY_braille_dots_123568","","",null,null],[17,"KEY_braille_dots_4568","","",null,null],[17,"KEY_braille_dots_14568","","",null,null],[17,"KEY_braille_dots_24568","","",null,null],[17,"KEY_braille_dots_124568","","",null,null],[17,"KEY_braille_dots_34568","","",null,null],[17,"KEY_braille_dots_134568","","",null,null],[17,"KEY_braille_dots_234568","","",null,null],[17,"KEY_braille_dots_1234568","","",null,null],[17,"KEY_braille_dots_78","","",null,null],[17,"KEY_braille_dots_178","","",null,null],[17,"KEY_braille_dots_278","","",null,null],[17,"KEY_braille_dots_1278","","",null,null],[17,"KEY_braille_dots_378","","",null,null],[17,"KEY_braille_dots_1378","","",null,null],[17,"KEY_braille_dots_2378","","",null,null],[17,"KEY_braille_dots_12378","","",null,null],[17,"KEY_braille_dots_478","","",null,null],[17,"KEY_braille_dots_1478","","",null,null],[17,"KEY_braille_dots_2478","","",null,null],[17,"KEY_braille_dots_12478","","",null,null],[17,"KEY_braille_dots_3478","","",null,null],[17,"KEY_braille_dots_13478","","",null,null],[17,"KEY_braille_dots_23478","","",null,null],[17,"KEY_braille_dots_123478","","",null,null],[17,"KEY_braille_dots_578","","",null,null],[17,"KEY_braille_dots_1578","","",null,null],[17,"KEY_braille_dots_2578","","",null,null],[17,"KEY_braille_dots_12578","","",null,null],[17,"KEY_braille_dots_3578","","",null,null],[17,"KEY_braille_dots_13578","","",null,null],[17,"KEY_braille_dots_23578","","",null,null],[17,"KEY_braille_dots_123578","","",null,null],[17,"KEY_braille_dots_4578","","",null,null],[17,"KEY_braille_dots_14578","","",null,null],[17,"KEY_braille_dots_24578","","",null,null],[17,"KEY_braille_dots_124578","","",null,null],[17,"KEY_braille_dots_34578","","",null,null],[17,"KEY_braille_dots_134578","","",null,null],[17,"KEY_braille_dots_234578","","",null,null],[17,"KEY_braille_dots_1234578","","",null,null],[17,"KEY_braille_dots_678","","",null,null],[17,"KEY_braille_dots_1678","","",null,null],[17,"KEY_braille_dots_2678","","",null,null],[17,"KEY_braille_dots_12678","","",null,null],[17,"KEY_braille_dots_3678","","",null,null],[17,"KEY_braille_dots_13678","","",null,null],[17,"KEY_braille_dots_23678","","",null,null],[17,"KEY_braille_dots_123678","","",null,null],[17,"KEY_braille_dots_4678","","",null,null],[17,"KEY_braille_dots_14678","","",null,null],[17,"KEY_braille_dots_24678","","",null,null],[17,"KEY_braille_dots_124678","","",null,null],[17,"KEY_braille_dots_34678","","",null,null],[17,"KEY_braille_dots_134678","","",null,null],[17,"KEY_braille_dots_234678","","",null,null],[17,"KEY_braille_dots_1234678","","",null,null],[17,"KEY_braille_dots_5678","","",null,null],[17,"KEY_braille_dots_15678","","",null,null],[17,"KEY_braille_dots_25678","","",null,null],[17,"KEY_braille_dots_125678","","",null,null],[17,"KEY_braille_dots_35678","","",null,null],[17,"KEY_braille_dots_135678","","",null,null],[17,"KEY_braille_dots_235678","","",null,null],[17,"KEY_braille_dots_1235678","","",null,null],[17,"KEY_braille_dots_45678","","",null,null],[17,"KEY_braille_dots_145678","","",null,null],[17,"KEY_braille_dots_245678","","",null,null],[17,"KEY_braille_dots_1245678","","",null,null],[17,"KEY_braille_dots_345678","","",null,null],[17,"KEY_braille_dots_1345678","","",null,null],[17,"KEY_braille_dots_2345678","","",null,null],[17,"KEY_braille_dots_12345678","","",null,null],[17,"KEY_Sinh_ng","","",null,null],[17,"KEY_Sinh_h2","","",null,null],[17,"KEY_Sinh_a","","",null,null],[17,"KEY_Sinh_aa","","",null,null],[17,"KEY_Sinh_ae","","",null,null],[17,"KEY_Sinh_aee","","",null,null],[17,"KEY_Sinh_i","","",null,null],[17,"KEY_Sinh_ii","","",null,null],[17,"KEY_Sinh_u","","",null,null],[17,"KEY_Sinh_uu","","",null,null],[17,"KEY_Sinh_ri","","",null,null],[17,"KEY_Sinh_rii","","",null,null],[17,"KEY_Sinh_lu","","",null,null],[17,"KEY_Sinh_luu","","",null,null],[17,"KEY_Sinh_e","","",null,null],[17,"KEY_Sinh_ee","","",null,null],[17,"KEY_Sinh_ai","","",null,null],[17,"KEY_Sinh_o","","",null,null],[17,"KEY_Sinh_oo","","",null,null],[17,"KEY_Sinh_au","","",null,null],[17,"KEY_Sinh_ka","","",null,null],[17,"KEY_Sinh_kha","","",null,null],[17,"KEY_Sinh_ga","","",null,null],[17,"KEY_Sinh_gha","","",null,null],[17,"KEY_Sinh_ng2","","",null,null],[17,"KEY_Sinh_nga","","",null,null],[17,"KEY_Sinh_ca","","",null,null],[17,"KEY_Sinh_cha","","",null,null],[17,"KEY_Sinh_ja","","",null,null],[17,"KEY_Sinh_jha","","",null,null],[17,"KEY_Sinh_nya","","",null,null],[17,"KEY_Sinh_jnya","","",null,null],[17,"KEY_Sinh_nja","","",null,null],[17,"KEY_Sinh_tta","","",null,null],[17,"KEY_Sinh_ttha","","",null,null],[17,"KEY_Sinh_dda","","",null,null],[17,"KEY_Sinh_ddha","","",null,null],[17,"KEY_Sinh_nna","","",null,null],[17,"KEY_Sinh_ndda","","",null,null],[17,"KEY_Sinh_tha","","",null,null],[17,"KEY_Sinh_thha","","",null,null],[17,"KEY_Sinh_dha","","",null,null],[17,"KEY_Sinh_dhha","","",null,null],[17,"KEY_Sinh_na","","",null,null],[17,"KEY_Sinh_ndha","","",null,null],[17,"KEY_Sinh_pa","","",null,null],[17,"KEY_Sinh_pha","","",null,null],[17,"KEY_Sinh_ba","","",null,null],[17,"KEY_Sinh_bha","","",null,null],[17,"KEY_Sinh_ma","","",null,null],[17,"KEY_Sinh_mba","","",null,null],[17,"KEY_Sinh_ya","","",null,null],[17,"KEY_Sinh_ra","","",null,null],[17,"KEY_Sinh_la","","",null,null],[17,"KEY_Sinh_va","","",null,null],[17,"KEY_Sinh_sha","","",null,null],[17,"KEY_Sinh_ssha","","",null,null],[17,"KEY_Sinh_sa","","",null,null],[17,"KEY_Sinh_ha","","",null,null],[17,"KEY_Sinh_lla","","",null,null],[17,"KEY_Sinh_fa","","",null,null],[17,"KEY_Sinh_al","","",null,null],[17,"KEY_Sinh_aa2","","",null,null],[17,"KEY_Sinh_ae2","","",null,null],[17,"KEY_Sinh_aee2","","",null,null],[17,"KEY_Sinh_i2","","",null,null],[17,"KEY_Sinh_ii2","","",null,null],[17,"KEY_Sinh_u2","","",null,null],[17,"KEY_Sinh_uu2","","",null,null],[17,"KEY_Sinh_ru2","","",null,null],[17,"KEY_Sinh_e2","","",null,null],[17,"KEY_Sinh_ee2","","",null,null],[17,"KEY_Sinh_ai2","","",null,null],[17,"KEY_Sinh_o2","","",null,null],[17,"KEY_Sinh_oo2","","",null,null],[17,"KEY_Sinh_au2","","",null,null],[17,"KEY_Sinh_lu2","","",null,null],[17,"KEY_Sinh_ruu2","","",null,null],[17,"KEY_Sinh_luu2","","",null,null],[17,"KEY_Sinh_kunddaliya","","",null,null],[17,"KEY_XF86ModeLock","","",null,null],[17,"KEY_XF86MonBrightnessUp","","",null,null],[17,"KEY_XF86MonBrightnessDown","","",null,null],[17,"KEY_XF86KbdLightOnOff","","",null,null],[17,"KEY_XF86KbdBrightnessUp","","",null,null],[17,"KEY_XF86KbdBrightnessDown","","",null,null],[17,"KEY_XF86Standby","","",null,null],[17,"KEY_XF86AudioLowerVolume","","",null,null],[17,"KEY_XF86AudioMute","","",null,null],[17,"KEY_XF86AudioRaiseVolume","","",null,null],[17,"KEY_XF86AudioPlay","","",null,null],[17,"KEY_XF86AudioStop","","",null,null],[17,"KEY_XF86AudioPrev","","",null,null],[17,"KEY_XF86AudioNext","","",null,null],[17,"KEY_XF86HomePage","","",null,null],[17,"KEY_XF86Mail","","",null,null],[17,"KEY_XF86Start","","",null,null],[17,"KEY_XF86Search","","",null,null],[17,"KEY_XF86AudioRecord","","",null,null],[17,"KEY_XF86Calculator","","",null,null],[17,"KEY_XF86Memo","","",null,null],[17,"KEY_XF86ToDoList","","",null,null],[17,"KEY_XF86Calendar","","",null,null],[17,"KEY_XF86PowerDown","","",null,null],[17,"KEY_XF86ContrastAdjust","","",null,null],[17,"KEY_XF86RockerUp","","",null,null],[17,"KEY_XF86RockerDown","","",null,null],[17,"KEY_XF86RockerEnter","","",null,null],[17,"KEY_XF86Back","","",null,null],[17,"KEY_XF86Forward","","",null,null],[17,"KEY_XF86Stop","","",null,null],[17,"KEY_XF86Refresh","","",null,null],[17,"KEY_XF86PowerOff","","",null,null],[17,"KEY_XF86WakeUp","","",null,null],[17,"KEY_XF86Eject","","",null,null],[17,"KEY_XF86ScreenSaver","","",null,null],[17,"KEY_XF86WWW","","",null,null],[17,"KEY_XF86Sleep","","",null,null],[17,"KEY_XF86Favorites","","",null,null],[17,"KEY_XF86AudioPause","","",null,null],[17,"KEY_XF86AudioMedia","","",null,null],[17,"KEY_XF86MyComputer","","",null,null],[17,"KEY_XF86VendorHome","","",null,null],[17,"KEY_XF86LightBulb","","",null,null],[17,"KEY_XF86Shop","","",null,null],[17,"KEY_XF86History","","",null,null],[17,"KEY_XF86OpenURL","","",null,null],[17,"KEY_XF86AddFavorite","","",null,null],[17,"KEY_XF86HotLinks","","",null,null],[17,"KEY_XF86BrightnessAdjust","","",null,null],[17,"KEY_XF86Finance","","",null,null],[17,"KEY_XF86Community","","",null,null],[17,"KEY_XF86AudioRewind","","",null,null],[17,"KEY_XF86BackForward","","",null,null],[17,"KEY_XF86Launch0","","",null,null],[17,"KEY_XF86Launch1","","",null,null],[17,"KEY_XF86Launch2","","",null,null],[17,"KEY_XF86Launch3","","",null,null],[17,"KEY_XF86Launch4","","",null,null],[17,"KEY_XF86Launch5","","",null,null],[17,"KEY_XF86Launch6","","",null,null],[17,"KEY_XF86Launch7","","",null,null],[17,"KEY_XF86Launch8","","",null,null],[17,"KEY_XF86Launch9","","",null,null],[17,"KEY_XF86LaunchA","","",null,null],[17,"KEY_XF86LaunchB","","",null,null],[17,"KEY_XF86LaunchC","","",null,null],[17,"KEY_XF86LaunchD","","",null,null],[17,"KEY_XF86LaunchE","","",null,null],[17,"KEY_XF86LaunchF","","",null,null],[17,"KEY_XF86ApplicationLeft","","",null,null],[17,"KEY_XF86ApplicationRight","","",null,null],[17,"KEY_XF86Book","","",null,null],[17,"KEY_XF86CD","","",null,null],[17,"KEY_XF86Calculater","","",null,null],[17,"KEY_XF86Clear","","",null,null],[17,"KEY_XF86Close","","",null,null],[17,"KEY_XF86Copy","","",null,null],[17,"KEY_XF86Cut","","",null,null],[17,"KEY_XF86Display","","",null,null],[17,"KEY_XF86DOS","","",null,null],[17,"KEY_XF86Documents","","",null,null],[17,"KEY_XF86Excel","","",null,null],[17,"KEY_XF86Explorer","","",null,null],[17,"KEY_XF86Game","","",null,null],[17,"KEY_XF86Go","","",null,null],[17,"KEY_XF86iTouch","","",null,null],[17,"KEY_XF86LogOff","","",null,null],[17,"KEY_XF86Market","","",null,null],[17,"KEY_XF86Meeting","","",null,null],[17,"KEY_XF86MenuKB","","",null,null],[17,"KEY_XF86MenuPB","","",null,null],[17,"KEY_XF86MySites","","",null,null],[17,"KEY_XF86New","","",null,null],[17,"KEY_XF86News","","",null,null],[17,"KEY_XF86OfficeHome","","",null,null],[17,"KEY_XF86Open","","",null,null],[17,"KEY_XF86Option","","",null,null],[17,"KEY_XF86Paste","","",null,null],[17,"KEY_XF86Phone","","",null,null],[17,"KEY_XF86Q","","",null,null],[17,"KEY_XF86Reply","","",null,null],[17,"KEY_XF86Reload","","",null,null],[17,"KEY_XF86RotateWindows","","",null,null],[17,"KEY_XF86RotationPB","","",null,null],[17,"KEY_XF86RotationKB","","",null,null],[17,"KEY_XF86Save","","",null,null],[17,"KEY_XF86ScrollUp","","",null,null],[17,"KEY_XF86ScrollDown","","",null,null],[17,"KEY_XF86ScrollClick","","",null,null],[17,"KEY_XF86Send","","",null,null],[17,"KEY_XF86Spell","","",null,null],[17,"KEY_XF86SplitScreen","","",null,null],[17,"KEY_XF86Support","","",null,null],[17,"KEY_XF86TaskPane","","",null,null],[17,"KEY_XF86Terminal","","",null,null],[17,"KEY_XF86Tools","","",null,null],[17,"KEY_XF86Travel","","",null,null],[17,"KEY_XF86UserPB","","",null,null],[17,"KEY_XF86User1KB","","",null,null],[17,"KEY_XF86User2KB","","",null,null],[17,"KEY_XF86Video","","",null,null],[17,"KEY_XF86WheelButton","","",null,null],[17,"KEY_XF86Word","","",null,null],[17,"KEY_XF86Xfer","","",null,null],[17,"KEY_XF86ZoomIn","","",null,null],[17,"KEY_XF86ZoomOut","","",null,null],[17,"KEY_XF86Away","","",null,null],[17,"KEY_XF86Messenger","","",null,null],[17,"KEY_XF86WebCam","","",null,null],[17,"KEY_XF86MailForward","","",null,null],[17,"KEY_XF86Pictures","","",null,null],[17,"KEY_XF86Music","","",null,null],[17,"KEY_XF86Battery","","",null,null],[17,"KEY_XF86Bluetooth","","",null,null],[17,"KEY_XF86WLAN","","",null,null],[17,"KEY_XF86UWB","","",null,null],[17,"KEY_XF86AudioForward","","",null,null],[17,"KEY_XF86AudioRepeat","","",null,null],[17,"KEY_XF86AudioRandomPlay","","",null,null],[17,"KEY_XF86Subtitle","","",null,null],[17,"KEY_XF86AudioCycleTrack","","",null,null],[17,"KEY_XF86CycleAngle","","",null,null],[17,"KEY_XF86FrameBack","","",null,null],[17,"KEY_XF86FrameForward","","",null,null],[17,"KEY_XF86Time","","",null,null],[17,"KEY_XF86Select","","",null,null],[17,"KEY_XF86View","","",null,null],[17,"KEY_XF86TopMenu","","",null,null],[17,"KEY_XF86Red","","",null,null],[17,"KEY_XF86Green","","",null,null],[17,"KEY_XF86Yellow","","",null,null],[17,"KEY_XF86Blue","","",null,null],[17,"KEY_XF86Suspend","","",null,null],[17,"KEY_XF86Hibernate","","",null,null],[17,"KEY_XF86TouchpadToggle","","",null,null],[17,"KEY_XF86TouchpadOn","","",null,null],[17,"KEY_XF86TouchpadOff","","",null,null],[17,"KEY_XF86AudioMicMute","","",null,null],[17,"KEY_XF86Switch_VT_1","","",null,null],[17,"KEY_XF86Switch_VT_2","","",null,null],[17,"KEY_XF86Switch_VT_3","","",null,null],[17,"KEY_XF86Switch_VT_4","","",null,null],[17,"KEY_XF86Switch_VT_5","","",null,null],[17,"KEY_XF86Switch_VT_6","","",null,null],[17,"KEY_XF86Switch_VT_7","","",null,null],[17,"KEY_XF86Switch_VT_8","","",null,null],[17,"KEY_XF86Switch_VT_9","","",null,null],[17,"KEY_XF86Switch_VT_10","","",null,null],[17,"KEY_XF86Switch_VT_11","","",null,null],[17,"KEY_XF86Switch_VT_12","","",null,null],[17,"KEY_XF86Ungrab","","",null,null],[17,"KEY_XF86ClearGrab","","",null,null],[17,"KEY_XF86Next_VMode","","",null,null],[17,"KEY_XF86Prev_VMode","","",null,null],[17,"KEY_XF86LogWindowTree","","",null,null],[17,"KEY_XF86LogGrabInfo","","",null,null],[17,"KEY_SunFA_Grave","","",null,null],[17,"KEY_SunFA_Circum","","",null,null],[17,"KEY_SunFA_Tilde","","",null,null],[17,"KEY_SunFA_Acute","","",null,null],[17,"KEY_SunFA_Diaeresis","","",null,null],[17,"KEY_SunFA_Cedilla","","",null,null],[17,"KEY_SunF36","","",null,null],[17,"KEY_SunF37","","",null,null],[17,"KEY_SunSys_Req","","",null,null],[17,"KEY_SunPrint_Screen","","",null,null],[17,"KEY_SunCompose","","",null,null],[17,"KEY_SunAltGraph","","",null,null],[17,"KEY_SunPageUp","","",null,null],[17,"KEY_SunPageDown","","",null,null],[17,"KEY_SunUndo","","",null,null],[17,"KEY_SunAgain","","",null,null],[17,"KEY_SunFind","","",null,null],[17,"KEY_SunStop","","",null,null],[17,"KEY_SunProps","","",null,null],[17,"KEY_SunFront","","",null,null],[17,"KEY_SunCopy","","",null,null],[17,"KEY_SunOpen","","",null,null],[17,"KEY_SunPaste","","",null,null],[17,"KEY_SunCut","","",null,null],[17,"KEY_SunPowerSwitch","","",null,null],[17,"KEY_SunAudioLowerVolume","","",null,null],[17,"KEY_SunAudioMute","","",null,null],[17,"KEY_SunAudioRaiseVolume","","",null,null],[17,"KEY_SunVideoDegauss","","",null,null],[17,"KEY_SunVideoLowerBrightness","","",null,null],[17,"KEY_SunVideoRaiseBrightness","","",null,null],[17,"KEY_SunPowerSwitchShift","","",null,null],[17,"KEY_Dring_accent","","",null,null],[17,"KEY_Dcircumflex_accent","","",null,null],[17,"KEY_Dcedilla_accent","","",null,null],[17,"KEY_Dacute_accent","","",null,null],[17,"KEY_Dgrave_accent","","",null,null],[17,"KEY_Dtilde","","",null,null],[17,"KEY_Ddiaeresis","","",null,null],[17,"KEY_DRemove","","",null,null],[17,"KEY_hpClearLine","","",null,null],[17,"KEY_hpInsertLine","","",null,null],[17,"KEY_hpDeleteLine","","",null,null],[17,"KEY_hpInsertChar","","",null,null],[17,"KEY_hpDeleteChar","","",null,null],[17,"KEY_hpBackTab","","",null,null],[17,"KEY_hpKP_BackTab","","",null,null],[17,"KEY_hpModelock1","","",null,null],[17,"KEY_hpModelock2","","",null,null],[17,"KEY_hpReset","","",null,null],[17,"KEY_hpSystem","","",null,null],[17,"KEY_hpUser","","",null,null],[17,"KEY_hpmute_acute","","",null,null],[17,"KEY_hpmute_grave","","",null,null],[17,"KEY_hpmute_asciicircum","","",null,null],[17,"KEY_hpmute_diaeresis","","",null,null],[17,"KEY_hpmute_asciitilde","","",null,null],[17,"KEY_hplira","","",null,null],[17,"KEY_hpguilder","","",null,null],[17,"KEY_hpYdiaeresis","","",null,null],[17,"KEY_hpIO","","",null,null],[17,"KEY_hplongminus","","",null,null],[17,"KEY_hpblock","","",null,null],[17,"KEY_osfCopy","","",null,null],[17,"KEY_osfCut","","",null,null],[17,"KEY_osfPaste","","",null,null],[17,"KEY_osfBackTab","","",null,null],[17,"KEY_osfBackSpace","","",null,null],[17,"KEY_osfClear","","",null,null],[17,"KEY_osfEscape","","",null,null],[17,"KEY_osfAddMode","","",null,null],[17,"KEY_osfPrimaryPaste","","",null,null],[17,"KEY_osfQuickPaste","","",null,null],[17,"KEY_osfPageLeft","","",null,null],[17,"KEY_osfPageUp","","",null,null],[17,"KEY_osfPageDown","","",null,null],[17,"KEY_osfPageRight","","",null,null],[17,"KEY_osfActivate","","",null,null],[17,"KEY_osfMenuBar","","",null,null],[17,"KEY_osfLeft","","",null,null],[17,"KEY_osfUp","","",null,null],[17,"KEY_osfRight","","",null,null],[17,"KEY_osfDown","","",null,null],[17,"KEY_osfEndLine","","",null,null],[17,"KEY_osfBeginLine","","",null,null],[17,"KEY_osfEndData","","",null,null],[17,"KEY_osfBeginData","","",null,null],[17,"KEY_osfPrevMenu","","",null,null],[17,"KEY_osfNextMenu","","",null,null],[17,"KEY_osfPrevField","","",null,null],[17,"KEY_osfNextField","","",null,null],[17,"KEY_osfSelect","","",null,null],[17,"KEY_osfInsert","","",null,null],[17,"KEY_osfUndo","","",null,null],[17,"KEY_osfMenu","","",null,null],[17,"KEY_osfCancel","","",null,null],[17,"KEY_osfHelp","","",null,null],[17,"KEY_osfSelectAll","","",null,null],[17,"KEY_osfDeselectAll","","",null,null],[17,"KEY_osfReselect","","",null,null],[17,"KEY_osfExtend","","",null,null],[17,"KEY_osfRestore","","",null,null],[17,"KEY_osfDelete","","",null,null],[17,"KEY_Reset","","",null,null],[17,"KEY_System","","",null,null],[17,"KEY_User","","",null,null],[17,"KEY_ClearLine","","",null,null],[17,"KEY_InsertLine","","",null,null],[17,"KEY_DeleteLine","","",null,null],[17,"KEY_InsertChar","","",null,null],[17,"KEY_DeleteChar","","",null,null],[17,"KEY_BackTab","","",null,null],[17,"KEY_KP_BackTab","","",null,null],[17,"KEY_Ext16bit_L","","",null,null],[17,"KEY_Ext16bit_R","","",null,null],[17,"KEY_mute_acute","","",null,null],[17,"KEY_mute_grave","","",null,null],[17,"KEY_mute_asciicircum","","",null,null],[17,"KEY_mute_diaeresis","","",null,null],[17,"KEY_mute_asciitilde","","",null,null],[17,"KEY_lira","","",null,null],[17,"KEY_guilder","","",null,null],[17,"KEY_IO","","",null,null],[17,"KEY_longminus","","",null,null],[17,"KEY_block","","",null,null],[6,"Keycode","xkbcommon::xkb","A number used to represent a physical key on a keyboard.",null,null],[6,"Keysym","","A number used to represent the symbols generated from a key on a keyboard.",null,null],[6,"LayoutIndex","","Index of a keyboard layout.",null,null],[6,"LayoutMask","","A mask of layout indices",null,null],[6,"LevelIndex","","Index of a shift level.",null,null],[6,"ModIndex","","Index of a modifier.",null,null],[6,"ModMask","","A mask of modifier indices.",null,null],[6,"LedIndex","","Index of a keyboard LED.",null,null],[6,"LedMask","","A mask of LED indices.",null,null],[6,"KeysymFlags","","",null,null],[6,"ContextFlags","","Flags for context creation.",null,null],[6,"KeymapCompileFlags","","Flags for keymap compilation.",null,null],[6,"KeymapFormat","","The possible keymap formats.",null,null],[6,"StateComponent","","Modifier and layout types for state objects.  This enum is bitmaskable, e.g. (xkb::STATE_MODS_DEPRESSED | xkb::STATE_MODS_LATCHED) is valid to exclude locked modifiers.",null,null],[6,"StateMatch","","Match flags for xkb_state_mod_indices_are_active and xkb_state_mod_names_are_active, specifying how the conditions for a successful match.  xkb::STATE_MATCH_NON_EXCLUSIVE is bitmaskable with the other modes.",null,null],[17,"KEYCODE_INVALID","","",null,null],[17,"LAYOUT_INVALID","","",null,null],[17,"LEVEL_INVALID","","",null,null],[17,"MOD_INVALID","","",null,null],[17,"LED_INVALID","","",null,null],[17,"KEYCODE_MAX","","",null,null],[17,"KEYSYM_NO_FLAGS","","",null,null],[17,"KEYSYM_CASE_INSENSITIVE","","",null,null],[17,"CONTEXT_NO_FLAGS","","Do not apply any context flags.",null,null],[17,"CONTEXT_NO_DEFAULT_INCLUDES","","Create this context with an empty include path.",null,null],[17,"CONTEXT_NO_ENVIRONMENT_NAMES","","Don't take RMLVO names from the environment.",null,null],[17,"KEYMAP_COMPILE_NO_FLAGS","","Do not apply any flags.",null,null],[17,"KEYMAP_FORMAT_TEXT_V1","","The current/classic XKB text format, as generated by xkbcomp -xkb.",null,null],[17,"KEYMAP_FORMAT_USE_ORIGINAL","","Get the keymap as a string in the format from which it was created.",null,null],[17,"STATE_MODS_DEPRESSED","","Depressed modifiers, i.e. a key is physically holding them.",null,null],[17,"STATE_MODS_LATCHED","","Latched modifiers, i.e. will be unset after the next non-modifier key press.",null,null],[17,"STATE_MODS_LOCKED","","Locked modifiers, i.e. will be unset after the key provoking the lock has been pressed again.",null,null],[17,"STATE_MODS_EFFECTIVE","","Effective modifiers, i.e. currently active and affect key processing (derived from the other state components). Use this unless you explictly care how the state came about.",null,null],[17,"STATE_LAYOUT_DEPRESSED","","Depressed layout, i.e. a key is physically holding it.",null,null],[17,"STATE_LAYOUT_LATCHED","","Latched layout, i.e. will be unset after the next non-modifier key press.",null,null],[17,"STATE_LAYOUT_LOCKED","","Locked layout, i.e. will be unset after the key provoking the lock has been pressed again.",null,null],[17,"STATE_LAYOUT_EFFECTIVE","","Effective layout, i.e. currently active and affects key processing (derived from the other state components). Use this unless you explictly care how the state came about.",null,null],[17,"STATE_LEDS","","LEDs (derived from the other state components).",null,null],[17,"STATE_MATCH_ANY","","Returns true if any of the modifiers are active.",null,null],[17,"STATE_MATCH_ALL","","Returns true if all of the modifiers are active.",null,null],[17,"STATE_MATCH_NON_EXCLUSIVE","","Makes matching non-exclusive, i.e. will not return false if a modifier not specified in the arguments is active.",null,null],[17,"MOD_NAME_SHIFT","","",null,null],[17,"MOD_NAME_CAPS","","",null,null],[17,"MOD_NAME_CTRL","","",null,null],[17,"MOD_NAME_ALT","","",null,null],[17,"MOD_NAME_NUM","","",null,null],[17,"MOD_NAME_LOGO","","",null,null],[17,"LED_NAME_CAPS","","",null,null],[17,"LED_NAME_NUM","","",null,null],[17,"LED_NAME_SCROLL","","",null,null],[11,"from_raw_ptr","","contruct a context from a raw ffi pointer. This context must already been referenced as xkb_context_unref will be called at drop time",7,null],[11,"get_raw_ptr","","get the raw pointer from this context",7,null],[11,"new","","Create a new context.",7,{"inputs":[{"name":"contextflags"}],"output":{"name":"context"}}],[11,"include_path_append","","append a new entry to the context's include path returns true on success, or false if the include path could not be added or is inaccessible",7,{"inputs":[{"name":"self"},{"name":"path"}],"output":{"name":"bool"}}],[11,"include_path_append_default","","Append the default include paths to the context's include path.",7,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"include_path_reset_defaults","","Reset the context's include path to the default.",7,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"include_path_clear","","Remove all entries from the context's include path.",7,{"inputs":[{"name":"self"}],"output":null}],[11,"include_paths","","get an iterator on the include paths of this context",7,{"inputs":[{"name":"self"}],"output":{"name":"contextincludepaths"}}],[11,"set_log_level","","Set the current logging level.",7,{"inputs":[{"name":"self"},{"name":"loglevel"}],"output":null}],[11,"get_log_level","","",7,{"inputs":[{"name":"self"}],"output":{"name":"loglevel"}}],[11,"set_log_verbosity","","Sets the current logging verbosity.",7,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"get_log_verbosity","","",7,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"context"}}],[11,"drop","","",7,{"inputs":[{"name":"self"}],"output":null}],[11,"next","","",8,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"from_raw_ptr","","",9,null],[11,"get_raw_ptr","","",9,null],[11,"new_from_names","","Create a keymap from RMLVO names.",9,{"inputs":[{"name":"context"},{"name":"s"},{"name":"s"},{"name":"s"},{"name":"s"},{"name":"option"},{"name":"keymapcompileflags"}],"output":{"name":"option"}}],[11,"new_from_file","","Create a keymap from a keymap file.",9,{"inputs":[{"name":"context"},{"name":"file"},{"name":"keymapformat"},{"name":"keymapcompileflags"}],"output":{"name":"option"}}],[11,"new_from_string","","Create a keymap from a keymap string.",9,{"inputs":[{"name":"context"},{"name":"string"},{"name":"keymapformat"},{"name":"keymapcompileflags"}],"output":{"name":"option"}}],[11,"get_as_string","","Get the compiled keymap as a string.",9,{"inputs":[{"name":"self"},{"name":"keymapformat"}],"output":{"name":"string"}}],[11,"min_keycode","","Get the minimum keycode in the keymap.",9,{"inputs":[{"name":"self"}],"output":{"name":"keycode"}}],[11,"max_keycode","","Get the maximum keycode in the keymap.",9,{"inputs":[{"name":"self"}],"output":{"name":"keycode"}}],[11,"mods","","Get an iterator to the modifiers of this keymap",9,{"inputs":[{"name":"self"}],"output":{"name":"keymapmods"}}],[11,"num_mods","","Get the number of modifiers in the keymap.",9,{"inputs":[{"name":"self"}],"output":{"name":"modindex"}}],[11,"mod_get_name","","Get the name of a modifier by index.",9,{"inputs":[{"name":"self"},{"name":"modindex"}],"output":{"name":"str"}}],[11,"mod_get_index","","Get the index of a modifier by name.",9,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"modindex"}}],[11,"layouts","","Returns an iterator to the layouts in this keymap",9,{"inputs":[{"name":"self"}],"output":{"name":"keymaplayouts"}}],[11,"num_layouts","","Get the number of layouts in the keymap.",9,{"inputs":[{"name":"self"}],"output":{"name":"layoutindex"}}],[11,"layout_get_name","","Get the name of a layout by index.",9,{"inputs":[{"name":"self"},{"name":"layoutindex"}],"output":{"name":"str"}}],[11,"layout_get_index","","Get the index of a layout by name.",9,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"layoutindex"}}],[11,"leds","","Returns an iterator to the leds in this keymap",9,{"inputs":[{"name":"self"}],"output":{"name":"keymapleds"}}],[11,"num_leds","","Get the number of LEDs in the keymap.",9,{"inputs":[{"name":"self"}],"output":{"name":"ledindex"}}],[11,"led_get_name","","Get the name of a LED by index.",9,{"inputs":[{"name":"self"},{"name":"ledindex"}],"output":{"name":"str"}}],[11,"led_get_index","","Get the index of a LED by name.",9,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"ledindex"}}],[11,"num_layouts_for_key","","Get the number of layouts for a specific key.",9,{"inputs":[{"name":"self"},{"name":"keycode"}],"output":{"name":"layoutindex"}}],[11,"num_levels_for_key","","Get the number of shift levels for a specific key and layout.",9,{"inputs":[{"name":"self"},{"name":"keycode"}],"output":{"name":"levelindex"}}],[11,"key_get_syms_by_level","","Get the keysyms obtained from pressing a key in a given layout and shift level.",9,null],[11,"key_repeats","","Determine whether a key should repeat or not.",9,{"inputs":[{"name":"self"},{"name":"keycode"}],"output":{"name":"bool"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"keymap"}}],[11,"drop","","",9,{"inputs":[{"name":"self"}],"output":null}],[11,"next","","",10,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",11,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",12,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"from_raw_ptr","","",13,null],[11,"get_raw_ptr","","",13,null],[11,"new","","Create a new keyboard state object from a keymap.",13,{"inputs":[{"name":"keymap"}],"output":{"name":"state"}}],[11,"get_keymap","","Get the keymap which a keyboard state object is using.",13,{"inputs":[{"name":"self"}],"output":{"name":"keymap"}}],[11,"update_key","","Update the keyboard state to reflect a given key being pressed or released.",13,{"inputs":[{"name":"self"},{"name":"keycode"},{"name":"keydirection"}],"output":{"name":"statecomponent"}}],[11,"update_mask","","Update a keyboard state from a set of explicit masks.",13,{"inputs":[{"name":"self"},{"name":"modmask"},{"name":"modmask"},{"name":"modmask"},{"name":"layoutindex"},{"name":"layoutindex"},{"name":"layoutindex"}],"output":{"name":"statecomponent"}}],[11,"key_get_syms","","Get the keysyms obtained from pressing a particular key in a given keyboard state.",13,null],[11,"key_get_utf8","","Get the Unicode/UTF-8 string obtained from pressing a particular key in a given keyboard state.",13,{"inputs":[{"name":"self"},{"name":"keycode"}],"output":{"name":"string"}}],[11,"key_get_utf32","","Get the Unicode/UTF-32 codepoint obtained from pressing a particular key in a a given keyboard state.",13,{"inputs":[{"name":"self"},{"name":"keycode"}],"output":{"name":"u32"}}],[11,"key_get_one_sym","","Get the single keysym obtained from pressing a particular key in a given keyboard state.",13,{"inputs":[{"name":"self"},{"name":"keycode"}],"output":{"name":"keysym"}}],[11,"key_get_layout","","Get the effective layout index for a key in a given keyboard state.",13,{"inputs":[{"name":"self"},{"name":"keycode"}],"output":{"name":"layoutindex"}}],[11,"key_get_level","","Get the effective shift level for a key in a given keyboard state and layout.",13,{"inputs":[{"name":"self"},{"name":"keycode"},{"name":"layoutindex"}],"output":{"name":"levelindex"}}],[11,"serialize_mods","","The counterpart to xkb_state_update_mask for modifiers, to be used on the server side of serialization.",13,{"inputs":[{"name":"self"},{"name":"statecomponent"}],"output":{"name":"modmask"}}],[11,"serialize_layout","","",13,{"inputs":[{"name":"self"},{"name":"statecomponent"}],"output":{"name":"layoutindex"}}],[11,"mod_name_is_active","","Test whether a modifier is active in a given keyboard state by name.",13,{"inputs":[{"name":"self"},{"name":"s"},{"name":"statecomponent"}],"output":{"name":"bool"}}],[11,"mod_index_is_active","","Test whether a modifier is active in a given keyboard state by index.",13,{"inputs":[{"name":"self"},{"name":"modindex"},{"name":"statecomponent"}],"output":{"name":"bool"}}],[11,"mod_index_is_consumed","","Test whether a modifier is consumed by keyboard state translation for a key.",13,{"inputs":[{"name":"self"},{"name":"keycode"},{"name":"modindex"}],"output":{"name":"bool"}}],[11,"mod_mask_remove_consumed","","Remove consumed modifiers from a modifier mask for a key.",13,{"inputs":[{"name":"self"},{"name":"keycode"},{"name":"modmask"}],"output":{"name":"modmask"}}],[11,"key_get_consumed_mods","","Get the mask of modifiers consumed by translating a given key.",13,{"inputs":[{"name":"self"},{"name":"keycode"}],"output":{"name":"modmask"}}],[11,"layout_name_is_active","","Test whether a layout is active in a given keyboard state by name.",13,{"inputs":[{"name":"self"},{"name":"s"},{"name":"statecomponent"}],"output":{"name":"bool"}}],[11,"layout_index_is_active","","Test whether a layout is active in a given keyboard state by index.",13,{"inputs":[{"name":"self"},{"name":"layoutindex"},{"name":"statecomponent"}],"output":{"name":"bool"}}],[11,"led_name_is_active","","Test whether a LED is active in a given keyboard state by name.",13,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"bool"}}],[11,"led_index_is_active","","Test whether a LED is active in a given keyboard state by index.",13,{"inputs":[{"name":"self"},{"name":"ledindex"}],"output":{"name":"bool"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"state"}}],[11,"drop","","",13,{"inputs":[{"name":"self"}],"output":null}]],"paths":[[4,"LogLevel"],[4,"KeyDirection"],[3,"xkb_rule_names"],[4,"xkb_log_level"],[4,"xkb_key_direction"],[4,"SetupXkbExtensionFlags"],[4,"xkb_x11_setup_xkb_extension_flags"],[3,"Context"],[3,"ContextIncludePaths"],[3,"Keymap"],[3,"KeymapMods"],[3,"KeymapLayouts"],[3,"KeymapLeds"],[3,"State"]]};
initSearch(searchIndex);
