var N=null,E="",T="t",U="u",searchIndex={};
var R=["rand_core","errorkind","A wrapper type implementing [`RngCore`] for some type…","The core part of the RNG, implementing the `generate`…","Create a new `BlockRng` from an existing RNG implementing…","Get the index into the result buffer.","Reset the number of available results. This will force a…","generate_and_set","Generate a new set of results immediately, setting the…","usize","Implement `fill_bytes` by reading chunks from the output…","try_from","result","borrow_mut","try_into","rand_core::block","to_owned","clone_into","type_id","next_u32","next_u64","fill_bytes","try_fill_bytes","from_seed","seed_from_u64","from_rng","rngcore","blockrng","blockrng64","formatter","description","stderror","ErrorKind","BlockRng","BlockRng64","BlockRngCore","SeedableRng","unicode_xid","UnicodeXID","borrow","typeid","stable_deref_trait","lazy_static","memoffset","smallvec","Constructs a new `SmallVec` on the stack from an `A`…","into_inner","extend_from_slice","into_iter","next_back","intoiterator","ordering","option","size_hint","deref_mut","index_mut","rangefrom","rangefull","ExtendFromSlice","SmallVec","IntoIter","scopeguard","should_run","Strategy","ScopeGuard","untrusted","Calls `read` with the given input as a `Reader`, ensuring…","endofinput","EndOfInput","is_empty","Return a reference to the value associated with the given…","Return a mutable reference to the value associated with…","VacantEntry","with_capacity","capacity","reserve_exact","shrink_to_fit","fnvhasher","FnvHasher","default","lazycell","Put a value into this cell.","Borrows the contents of this lazy cell for the duration of…","Test whether this cell has been previously filled.","Consumes this `LazyCell`, returning the underlying value.","Returns a copy of the contents of the lazy cell.","atomiclazycell","LazyCell","AtomicLazyCell","NotReady","is_ready","is_not_ready","futureresult","Creates a \"leaf future\" from an immediate value of a…","Same as `join`, but with more futures.","Flatten the execution of this future when the successful…","Do something with the item of a future, passing it on.","executeerror","executeerrorkind","into_future","A stream which is just a shim over an underlying instance…","A stream combinator to concatenate the results of a stream…","An adapter for merging the output of two streams.","An adaptor for a stream of futures to execute the futures…","CatchUnwind","Converts an `Iterator` over `Result`s into a `Stream`…","Converts a list of futures into a `Stream` of results from…","Acquires a reference to the underlying stream that this…","Acquires a mutable reference to the underlying stream that…","Consumes this combinator, returning the underlying stream.","get_ref","get_mut","reuniteerror","Attempts to put the two \"halves\" of a split `Stream +…","futures_unordered","An unbounded set of futures.","futuresunordered","futures::stream","futuresordered","Chain on a computation for when a value is ready, passing…","Concatenate all results of a stream into a single…","catch_unwind","catchunwind","Get a shared reference to the inner sink.","Get a mutable reference to the inner sink.","Consumes this combinator, returning the underlying sink.","Composes a function in front of the sink.","A future that completes after the given stream has been…","futures","spawnhandle","futures::sync","The transmission end of a channel which is used to send…","The receiving end of a channel which implements the…","SpawnHandle","Handle returned from the `spawn` function.","Creates an in-memory channel implementation of the…","Spawns a `stream` onto the instance of `Executor`…","Returns the message that was attempted to be sent but…","trysenderror","senderror","is_closed","Returns whether this channel is closed without needing a…","Closes the receiving half","bilockguard","A multi-producer, single-consumer, futures-aware, FIFO…","Receiver","UnboundedSender","UnboundedReceiver","SendError","Error type for sending, used when the receiving end of a…","Type of future which `Executor` instances must be able to…","unbounded","spawn_unbounded","unbounded_send","Sends the provided message along this channel.","futures::unsync","A one-shot, futures-aware channel","Represents the completion half of a oneshot through which…","A future representing the completion of a computation…","Creates a new futures-aware, one-shot channel.","Spawns a `future` onto the instance of `Executor`…","Spawns a function `f` onto the `Spawn` instance provided…","Completes this oneshot with a successful result.","poll_cancel","Polls this `Sender` half to detect whether the `Receiver`…","is_canceled","Tests to see whether this `Sender`'s corresponding…","Gracefully close this receiver, preventing sending any…","Drop this future without canceling the underlying future.","futures::future","to_string","futures::stream::futures_unordered","futures::sink","futures::task","futures::executor","futures::sync::oneshot","futures::sync::mpsc","futures::unsync::mpsc","futures::unsync::oneshot","canceled","bilockacquired","start_send","startsend","poll_complete","asyncsink","notifyhandle","fmtresult","from_iter","shareditem","sharederror","sinkfromerr","sinkmaperr","unparkevent","This function is called whenever a new copy of `id` is…","All instances of `Task` store an `id` that they're going…","AsyncSink","ExecuteErrorKind","IntoFuture","FutureFrom","ExecuteError","ReuniteError","MergedItem","FilterMap","StreamFuture","InspectErr","SkipWhile","TakeWhile","BufferUnordered","SplitStream","SplitSink","FuturesUnordered","FuturesOrdered","WithFlatMap","SinkFromErr","SinkMapErr","UnsafeNotify","TrySendError","BiLockAcquired","FutureResult","FlattenStream","IntoStream","SelectNext","SelectAll","SharedItem","SharedError","IterResult","NotifyHandle","AtomicTask","UnparkEvent","BiLockGuard","BiLockAcquire","Execute","propertyvalues","rustc_demangle","demangle","trydemangleerror","TryDemangleError","unicode_width","Returns the character's displayed width in columns, or…","width_cjk","Returns the string's displayed width in columns.","UnicodeWidthChar","UnicodeWidthStr","UNICODE_VERSION","foreign_types_shared","The raw C type.","Returns a raw pointer to the wrapped value.","ForeignType","ForeignTypeRef","bitflags","utf8_ranges","utf8sequence","utf8range","Utf8Range","Utf8Sequence","Utf8Sequences","An iterator over the values of a map.","Returns an iterator visiting all values in ascending order…","Returns an iterator visiting all key-value pairs in…","OccupiedEntry","ValuesMut","iter_mut","IterMut","Retains only the elements specified by the predicate.","partial_cmp","ResultVoidExt","ResultVoidErrExt","unreachable","StrSimError","patternerror","Return an iterator that produces all the Paths that match…","Return if the given `str` matches this `Pattern` using the…","matchoptions","Return if the given `Path`, when converted to a `str`,…","pattern","globresult","PatternError","MatchOptions","GlobError","ansi_term","A colour is one specific type of ANSI escape code, and can…","Colour #0 (foreground code `30`, background code `40`).","Colour #1 (foreground code `31`, background code `41`).","Colour #2 (foreground code `32`, background code `42`).","Colour #3 (foreground code `33`, background code `43`).","Colour #4 (foreground code `34`, background code `44`).","Colour #5 (foreground code `35`, background code `45`).","Colour #6 (foreground code `36`, background code `46`).","Colour #7 (foreground code `37`, background code `47`).","A colour number from 0 to 255, for use in 256-colour…","A 24-bit RGB color, as specified by ISO-8613-3.","Returns a `Style` with the hidden property set.","Returns a `Style` with the bold property set.","Returns a `Style` with the dimmed property set.","Returns a `Style` with the italic property set.","underline","Returns a `Style` with the underline property set.","Returns a `Style` with the blink property set.","Returns a `Style` with the reverse property set.","strikethrough","Returns a `Style` with the background colour property set.","Paints the given text with this colour, returning an ANSI…","ansigenericstring","ANSIStrings","ANSIByteStrings","ANSIGenericStrings","ANSIGenericString","ANSIString","ANSIByteString","exitstatus","Random number generation traits","Error type of random number generators","The error kind","The error message","Error kind which can be matched over.","Unavailable","Feature is not available; not recoverable.","Unexpected","General failure; there may be a chance of recovery on retry.","Transient","A transient failure which likely can be resolved or worked…","Not ready yet: recommended to try again a little later.","should_retry","True if this kind of error may resolve itself on retry.","should_wait","True if we should retry but wait before retrying","A description of this error kind","Create a new instance, with specified kind and a message.","with_cause","Create a new instance, with specified kind, message, and a…","take_cause","Take the cause, if any. This allows the embedded cause to…","The `BlockRngCore` trait and implementation helpers","A trait for RNGs which do not generate random numbers…","Results element type, e.g. `u32`.","Results type. This is the 'block' an RNG implementing…","Generate a new block of results.","Helper functions for implementing `RngCore` functions.","next_u64_via_u32","rand_core::impls","Implement `next_u64` via `next_u32`, little-endian order.","fill_bytes_via_next","Implement `fill_bytes` via `next_u64` and `next_u32`,…","fill_via_u32_chunks","fill_via_u64_chunks","next_u32_via_fill","Implement `next_u32` via `fill_bytes`, little-endian order.","next_u64_via_fill","Implement `next_u64` via `fill_bytes`, little-endian order.","Little-Endian utilities","read_u32_into","rand_core::le","Reads unsigned 32 bit integers from `src` into `dst`.…","read_u64_into","Reads unsigned 64 bit integers from `src` into `dst`.…","The core of a random number generator.","Return the next random `u32`.","Return the next random `u64`.","Fill `dest` with random data.","Fill `dest` entirely with random data.","CryptoRng","A marker trait used to indicate that an [`RngCore`] or…","A random number generator that can be explicitly seeded.","Seed type, which is restricted to types…","Create a new PRNG using the given seed.","Create a new PRNG using a `u64` seed.","Create a new PRNG seeded from another `Rng`.","owning_ref","An owning reference.","Typedef of a owning reference that uses a…","Typedef of a mutable owning reference that uses a…","The type of handle to be encapsulated by the OwningHandle.","Given an appropriately-long-lived pointer to ourselves,…","owningref","Creates a new owning reference from a owner initialized to…","new_assert_stable_address","Like `new`, but doesn’t require `O` to implement the…","owningrefmut","map_owner","Converts `self` into a new owning reference with a…","map_owner_box","Converts `self` into a new owning reference where the…","erase_owner","Erases the concrete base type of the owner with a trait…","A reference to the underlying owner.","into_owner","Discards the reference and retrieves the owner.","Create a new OwningHandle. The provided callback will be…","as_owner","IntoErased","ToHandleMut","OwningRef","OwningRefMut","OwningHandle","An unsafe marker trait for types that deref to a stable…","An unsafe marker trait for types where clones deref to the…","levelfilter","setloggererror","metadata","recordbuilder","arguments","module_path","Returns a new builder.","The verbosity level of the message.","The name of the target of the directive.","metadatabuilder","parselevelerror","from_str","LevelFilter","RecordBuilder","MetadataBuilder","SetLoggerError","ParseLevelError","thread_local","Returns the element for the current thread, or creates it…","Returns the element for the current thread, if it exists.","get_or_try","Returns a mutable iterator over the local values of all…","Removes all thread-specific values from the `ThreadLocal`,…","get_default","Returns the element for the current thread, or creates a…","threadlocal","cachedthreadlocal","ThreadLocal","CachedThreadLocal","crossbeam_utils","If the current value equals `current`, stores `new` into…","fetch_add","Increments the current value by `val` and returns the…","fetch_sub","Decrements the current value by `val` and returns the…","fetch_and","Applies bitwise \"and\" to the current value and returns the…","Applies bitwise \"or\" to the current value and returns the…","fetch_xor","Applies bitwise \"xor\" to the current value and returns the…","fetch_or","Pads and aligns a value to the length of a cache line.","lockresult","shardedlockreadguard","trylockresult","shardedlockwriteguard","scopedthreadbuilder","scopedjoinhandle","crossbeam_utils::atomic","crossbeam_utils::sync","crossbeam_utils::thread","cachepadded","unparker","waitgroup","atomiccell","shardedlock","AtomicCell","AtomicConsume","CachePadded","ShardedLock","WaitGroup","ScopedThreadBuilder","ScopedJoinHandle","ShardedLockReadGuard","ShardedLockWriteGuard","tokio_trace_core","callsite","Returns an [`Identifier`] that uniquely identifies the…","identifier","Metadata","The \"error\" level.","The \"warn\" level.","The \"info\" level.","The \"debug\" level.","The \"trace\" level.","valueset","Returns `Attributes` describing a new child span of the…","contains","register_callsite","Registers a new callsite with this subscriber, returning…","interest","attributes","Record a set of values on a span.","record_follows_from","Adds an indication that `span` follows from the span with…","Records that an [`Event`] has occurred.","Records that a span has been entered.","Records that a span has been exited.","clone_span","Notifies the subscriber that a [span ID] has been cloned.","drop_span","Notifies the subscriber that a [span ID] has been dropped.","tokio_trace_core::callsite","tokio_trace_core::dispatcher","tokio_trace_core::event","tokio_trace_core::field","tokio_trace_core::metadata","tokio_trace_core::span","tokio_trace_core::subscriber","dispatch","displayvalue","debugvalue","Attributes","Subscriber","Identifier","DisplayValue","DebugValue","tokio_sync","Closes the receiving half of a channel, without dropping it.","unboundedtrysenderror","RecvError","tokio_sync::oneshot","Check if the associated [`Receiver`] handle has been…","tryrecverror","semaphore","acquireerror","tryacquireerror","tokio_sync::watch","recverror","poll_close","tokio_sync::mpsc","tokio_sync::mpsc::error","tokio_sync::oneshot::error","tokio_sync::semaphore","tokio_sync::task","tokio_sync::watch::error","Get the inner value.","Semaphore","TryAcquireError","UnboundedSendError","UnboundedTrySendError","UnboundedRecvError","TryRecvError","AcquireError","A synchronization primitive for task notification.","try_send","poll_ready","channel","Create an `AtomicTask` initialized with the given `Task`","atomictask","Registers the current task to be notified on calls to…","register_task","Registers the provided task to be notified on calls to…","Notifies the task that last called `register`.","register","stream_cancel","takeuntil","take_until","Take elements from this stream until the given future…","StreamExt","TakeUntil","A stream combinator which takes elements from a stream…","hyphensplitter","initial_indent","subsequent_indent","break_words","wrap_iter","Lazily wrap a line of text at `self.width` characters.…","intowrapiter","wrapper","WordSplitter","NoHyphenation","HyphenSplitter","IntoWrapIter","regex_syntax","The span of this class.","regex_syntax::ast","regex_syntax::ast::ErrorKind","original","Assertion","A single zero-width assertion.","Repetition","A grouped regular expression.","Alternation","An alternation of regular expressions.","A concatenation of regular expressions.","A Unicode character class, e.g., `\\pL` or `\\p{Greek}`.","A perl character class, e.g., `\\d` or `\\W`.","Bracketed","A bracketed character class set, which may contain zero or…","CaptureName","ParserBuilder","A builder for a regular expression parser.","parserbuilder","withcomments","classsetitem","classsetbinaryop","position","classasciikind","ClassUnicode","WordBoundary","A set of characters represented by Unicode scalar values.","StartLine","StartText","Unicode","GroupKind","CaptureIndex","NonCapturing","regex_syntax::hir","RepetitionKind","The kind of a repetition operator.","ZeroOrOne","ZeroOrMore","OneOrMore","RepetitionRange","Executes an implementation of `Visitor` in constant stack…","Literal","literals","Create a new printer.","Print the given `Ast` to the given writer. The writer must…","translatorbuilder","translator","translate","All implementors of `Visitor` must provide a `finish`…","visit_pre","visit_post","visit_alternation_in","Return the type of this error.","The original pattern string in which this error occurred.","Return the span at which this error occurred.","literal","repetition","Return true if and only if this HIR is required to match…","Return true if and only if this HIR contains any…","is_always_utf8","classunicode","case_fold_simple","classunicoderange","Create a new class from a sequence of ranges.","classbytes","Create a new class with no ranges.","Add a new range to this set.","Return an iterator over all ranges in this class.","Return the underlying ranges as a slice.","Expand this character class such that it contains all case…","intersect","difference","symmetric_difference","classbytesrange","Return the start of this range.","Return the end of this range.","is_negated","is_match_empty","Create a new parser builder with a default configuration.","Build a parser from this configuration with the given…","nest_limit","Set the nesting limit for this parser.","Whether to support octal syntax or not.","allow_invalid_utf8","ignore_whitespace","Enable verbose mode in the regular expression.","case_insensitive","multi_line","dot_matches_new_line","swap_greed","Enable or disable the Unicode flag (`u`) by default.","Create a new parser with a default configuration.","regex_syntax::ast::parse","regex_syntax::ast::print","regex_syntax::hir::literal","regex_syntax::hir::print","regex_syntax::hir::translate","alternation","literalkind","classperl","classascii","classunicodekind","classbracketed","classset","classsetrange","classsetunion","assertion","repetitionop","repetitionkind","repetitionrange","groupkind","capturename","flagsitem","flagsitemkind","wordboundary","specialliteralkind","hexliteralkind","classperlkind","classunicodeopkind","classsetbinaryopkind","assertionkind","setflags","This method is called before beginning traversal of the AST.","This method is called on an `Ast` before descending into…","This method is called on an `Ast` after descending all of…","This method is called between child nodes of an…","visit_class_set_item_pre","This method is called on every `ClassSetItem` before…","visit_class_set_item_post","This method is called on every `ClassSetItem` after…","visit_class_set_binary_op_pre","This method is called on every `ClassSetBinaryOp` before…","visit_class_set_binary_op_post","This method is called on every `ClassSetBinaryOp` after…","visit_class_set_binary_op_in","This method is called between the left hand and right hand…","This method is called before beginning traversal of the HIR.","This method is called on an `Hir` before descending into…","This method is called on an `Hir` after descending all of…","This method is called between child nodes of an alternation.","WithComments","ClassPerl","ClassAscii","ClassBracketed","ClassSetRange","ClassSetUnion","ClassSetBinaryOp","RepetitionOp","FlagsItem","LiteralKind","SpecialLiteralKind","HexLiteralKind","ClassPerlKind","ClassAsciiKind","ClassUnicodeKind","ClassUnicodeOpKind","ClassSetItem","ClassSetBinaryOpKind","AssertionKind","FlagsItemKind","TranslatorBuilder","Translator","ClassUnicodeRange","ClassBytes","ClassBytesRange","ClassUnicodeIter","ClassBytesIter","foreign_types","An opaque type used to define `ForeignTypeRef` types.","A type implemented by wrappers over foreign types.","The type representing a reference to this type.","from_ptr","Constructs an instance of this type from its raw type.","A trait implemented by types which reference borrowed…","Constructs a shared instance of this type from its raw type.","from_ptr_mut","Constructs a mutable reference of this type from its raw…","cpusubtype","sizeofcmds","sin_family","sigaction","if_nameindex","mach_timebase_info","ipv6_mreq","itimerval","sockaddr_in6","sockaddr_un","pthread_mutexattr_t","pthread_condattr_t","pthread_rwlockattr_t","siginfo_t","radvisory","sockaddr_in","kevent64_s","if_msghdr","proc_taskinfo","proc_bsdinfo","proc_taskallinfo","xsw_usage","mach_header","mach_header_64","segment_command","segment_command_64","load_command","sockaddr_dl","sockaddr_inarp","sockaddr_ctl","in_pktinfo","in6_pktinfo","proc_threadinfo","pthread_rwlock_t","pthread_mutex_t","pthread_cond_t","sockaddr_storage","timeval32","pthread_attr_t","timespec","protoent","sockaddr","addrinfo","fstore_t","sigevent","ipc_perm","semid_ds","shmid_ds","in6_addr","locale_t","timezone","proc_macro2","tokenstream","delimiter","set_span","Creates a new suffixed integer literal with the specified…","Creates a new unsuffixed integer literal with the…","proc_macro2::token_stream","tokentree","TokenTree","Delimiter","TokenStream","intoiter","capacityerror","utf8error","Adds the given char to the end of the string.","Adds the given string slice to the end of the string.","arrayvec","Push `element` to the end of the vector.","Insert `element` at position `index`.","Remove the element at `index` and swap the last element…","Remove the element at `index` and shift down the following…","arraystring","clone_from","Start index (inclusive)","End index (exclusive)","ArrayString","CapacityError","RangeArgument","truncate","as_slice","as_mut_slice","swap_remove","byteorder","Reads an unsigned n-bytes integer from the underlying…","Reads a signed n-bytes integer from the underlying reader.","DEPRECATED.","Writes an unsigned n-bytes integer to the underlying writer.","Writes a signed n-bytes integer to the underlying writer.","read_u128","read_uint","read_uint128","Reads an unsigned n-bytes integer from `buf`.","write_u16","write_u24","write_u32","write_u48","write_u64","write_u128","write_uint","write_uint128","Writes an unsigned integer `n` to `buf` using only `nbytes`.","read_i128","read_int128","Reads a signed n-bytes integer from `buf`.","Reads a IEEE754 single-precision (4 bytes) floating point…","Reads a IEEE754 double-precision (8 bytes) floating point…","write_i16","write_i24","write_i32","write_i48","write_i64","write_i128","write_int","write_int128","Writes a signed integer `n` to `buf` using only `nbytes`.","write_f32","Writes a IEEE754 single-precision (4 bytes) floating point…","write_f64","Writes a IEEE754 double-precision (8 bytes) floating point…","read_u16_into","read_u128_into","read_i16_into","read_i32_into","read_i64_into","read_i128_into","read_f32_into","read_f32_into_unchecked","read_f64_into","Reads IEEE754 single-precision (4 bytes) floating point…","read_f64_into_unchecked","read_u16","read_u32","read_u64","write_u16_into","write_u32_into","write_u64_into","write_u128_into","from_slice_u16","from_slice_u32","from_slice_u64","from_slice_u128","from_slice_f32","from_slice_f64","bigendian","littleendian","Reads an unsigned 8 bit integer from the underlying reader.","Reads a signed 8 bit integer from the underlying reader.","Reads an unsigned 16 bit integer from the underlying reader.","read_i16","Reads a signed 16 bit integer from the underlying reader.","read_u24","Reads an unsigned 24 bit integer from the underlying reader.","read_i24","Reads a signed 24 bit integer from the underlying reader.","Reads an unsigned 32 bit integer from the underlying reader.","read_i32","Reads a signed 32 bit integer from the underlying reader.","read_u48","Reads an unsigned 48 bit integer from the underlying reader.","read_i48","Reads a signed 48 bit integer from the underlying reader.","Reads an unsigned 64 bit integer from the underlying reader.","read_i64","Reads a signed 64 bit integer from the underlying reader.","Reads an unsigned 128 bit integer from the underlying…","Reads a signed 128 bit integer from the underlying reader.","read_int","read_f32","read_f64","Reads a sequence of unsigned 16 bit integers from the…","Reads a sequence of unsigned 32 bit integers from the…","Reads a sequence of unsigned 64 bit integers from the…","Reads a sequence of unsigned 128 bit integers from the…","Reads a sequence of signed 16 bit integers from the…","Reads a sequence of signed 32 bit integers from the…","Reads a sequence of signed 64 bit integers from the…","Reads a sequence of signed 128 bit integers from the…","Reads a sequence of IEEE754 single-precision (4 bytes)…","Reads a sequence of IEEE754 double-precision (8 bytes)…","Writes an unsigned 8 bit integer to the underlying writer.","Writes a signed 8 bit integer to the underlying writer.","Writes an unsigned 16 bit integer to the underlying writer.","Writes a signed 16 bit integer to the underlying writer.","Writes an unsigned 24 bit integer to the underlying writer.","Writes a signed 24 bit integer to the underlying writer.","Writes an unsigned 32 bit integer to the underlying writer.","Writes a signed 32 bit integer to the underlying writer.","Writes an unsigned 48 bit integer to the underlying writer.","Writes a signed 48 bit integer to the underlying writer.","Writes an unsigned 64 bit integer to the underlying writer.","Writes a signed 64 bit integer to the underlying writer.","Writes an unsigned 128 bit integer to the underlying writer.","Writes a signed 128 bit integer to the underlying writer.","ReadBytesExt","WriteBytesExt","ByteOrder","BigEndian","LittleEndian","Check for remaining elements after passing a…","serde::de","unexpected","expected","deserialize","Hint that the `Deserialize` type is expecting a string…","Hint that the `Deserialize` type is expecting a byte array…","Hint that the `Deserialize` type is expecting a sequence…","The error type that can be returned if some error occurs…","This returns `Ok(Some(value))` for the next value in the…","This returns `Ok(Some(key))` for the next key in the map,…","This returns a `Ok(value)` for the next value in the map.","This returns `Ok(Some((key, value)))` for the next…","`variant` is called to identify which variant to…","Called when deserializing a variant with a single value.","Deserializer","is_human_readable","SerializeSeq","SerializeTuple","Must match the `Ok` type of our `Serializer`.","Must match the `Error` type of our `Serializer`.","serialize_element","SerializeTupleStruct","SerializeTupleVariant","serialize_field","SerializeMap","SerializeStruct","SerializeStructVariant","skip_field","Deserialize","A data structure that can be deserialized from any data…","Deserialize this value from the given Serde deserializer.","A data format that can deserialize any data structure…","deserialize_any","Require the `Deserializer` to figure out how to drive the…","deserialize_bool","Hint that the `Deserialize` type is expecting a `bool`…","deserialize_i8","Hint that the `Deserialize` type is expecting an `i8` value.","deserialize_i16","Hint that the `Deserialize` type is expecting an `i16`…","deserialize_i32","Hint that the `Deserialize` type is expecting an `i32`…","deserialize_i64","Hint that the `Deserialize` type is expecting an `i64`…","deserialize_i128","Hint that the `Deserialize` type is expecting an `i128`…","deserialize_u8","Hint that the `Deserialize` type is expecting a `u8` value.","deserialize_u16","Hint that the `Deserialize` type is expecting a `u16` value.","deserialize_u32","Hint that the `Deserialize` type is expecting a `u32` value.","deserialize_u64","Hint that the `Deserialize` type is expecting a `u64` value.","deserialize_u128","Hint that the `Deserialize` type is expecting an `u128`…","deserialize_f32","Hint that the `Deserialize` type is expecting a `f32` value.","deserialize_f64","Hint that the `Deserialize` type is expecting a `f64` value.","deserialize_char","Hint that the `Deserialize` type is expecting a `char`…","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","Hint that the `Deserialize` type is expecting an optional…","deserialize_unit","Hint that the `Deserialize` type is expecting a unit value.","deserialize_unit_struct","Hint that the `Deserialize` type is expecting a unit…","deserialize_newtype_struct","Hint that the `Deserialize` type is expecting a newtype…","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","Hint that the `Deserialize` type is expecting a tuple…","deserialize_map","Hint that the `Deserialize` type is expecting a map of…","deserialize_struct","Hint that the `Deserialize` type is expecting a struct…","deserialize_enum","Hint that the `Deserialize` type is expecting an enum…","deserialize_identifier","Hint that the `Deserialize` type is expecting the name of…","deserialize_ignored_any","Hint that the `Deserialize` type needs to deserialize a…","Determine whether `Deserialize` implementations should…","A data structure that can be serialized into any data…","Serialize this value into the given Serde serializer.","A data format that can serialize any data structure…","The output type produced by this `Serializer` during…","The error type when some error occurs during serialization.","Type returned from [`serialize_seq`] for serializing the…","Type returned from [`serialize_tuple`] for serializing the…","Type returned from [`serialize_tuple_struct`] for…","Type returned from [`serialize_tuple_variant`] for…","Type returned from [`serialize_map`] for serializing the…","Type returned from [`serialize_struct`] for serializing…","Type returned from [`serialize_struct_variant`] for…","serialize_bool","Serialize a `bool` value.","serialize_i8","Serialize an `i8` value.","serialize_i16","Serialize an `i16` value.","serialize_i32","Serialize an `i32` value.","serialize_i64","Serialize an `i64` value.","serialize_i128","Serialize an `i128` value.","serialize_u8","Serialize a `u8` value.","serialize_u16","Serialize a `u16` value.","serialize_u32","Serialize a `u32` value.","serialize_u64","Serialize a `u64` value.","serialize_u128","Serialize a `u128` value.","serialize_f32","Serialize an `f32` value.","serialize_f64","Serialize an `f64` value.","serialize_char","Serialize a character.","serialize_str","Serialize a `&str`.","serialize_bytes","Serialize a chunk of raw byte data.","serialize_none","Serialize a [`None`] value.","serialize_some","Serialize a [`Some(T)`] value.","serialize_unit","Serialize a `()` value.","serialize_unit_struct","Serialize a unit struct like `struct Unit` or…","serialize_unit_variant","Serialize a unit variant like `E::A` in `enum E { A, B }`.","serialize_newtype_struct","Serialize a newtype struct like `struct Millimeters(u8)`.","serialize_newtype_variant","Serialize a newtype variant like `E::N` in `enum E { N(u8)…","serialize_seq","Begin to serialize a variably sized sequence. This call…","serialize_tuple","Begin to serialize a statically sized sequence whose…","serialize_tuple_struct","Begin to serialize a tuple struct like `struct Rgb(u8, u8,…","serialize_tuple_variant","Begin to serialize a tuple variant like `E::T` in `enum E…","serialize_map","Begin to serialize a map. This call must be followed by…","serialize_struct","Begin to serialize a struct like `struct Rgb { r: u8, g:…","serialize_struct_variant","Begin to serialize a struct variant like `E::S` in `enum E…","collect_seq","Collect an iterator as a sequence.","collect_map","Collect an iterator as a map.","collect_str","Serialize a string produced by an implementation of…","Determine whether `Serialize` implementations should…","serde::de::value","visit_newtype_struct","visit_bytes","next_element_seed","next_key_seed","next_value_seed","next_entry_seed","variant_seed","serde::ser","serialize_key","serialize_value","ignoredany","BorrowedStrDeserializer","BorrowedBytesDeserializer","SeqDeserializer","SeqAccessDeserializer","MapDeserializer","MapAccessDeserializer","DeserializeSeed","VariantAccess","IntoDeserializer","Serializer","UnitDeserializer","BoolDeserializer","I8Deserializer","I16Deserializer","I32Deserializer","I64Deserializer","IsizeDeserializer","U8Deserializer","U16Deserializer","U64Deserializer","UsizeDeserializer","F32Deserializer","F64Deserializer","CharDeserializer","I128Deserializer","U128Deserializer","U32Deserializer","StrDeserializer","StringDeserializer","CowStrDeserializer","num_traits","Shifts the bits to the left by a specified amount amount,…","Shifts the bits to the right by a specified amount amount,…","Shifts a number to the left, checking for overflow. If…","num_traits::ops","Performs the fused multiply-add operation.","The result after applying the operator.","Computes the absolute value.","The positive difference of two numbers.","Returns the sign of the number.","ParseFloatError","FloatErrorKind","ToPrimitive","FromPrimitive","AsPrimitive","MulAddAssign","WrappingAdd","WrappingSub","WrappingMul","WrappingShl","WrappingShr","An iterator over all occurrences of the needles in a…","An iterator over all occurrences of the needle in a…","Creates a new iterator that yields all positions of needle…","rand_xorshift","XorShiftRng","rand_isaac","new_from_u64","Create an ISAAC-64 random number generator using an `u64`…","rand_isaac::isaac","rand_isaac::isaac64","Create an ISAAC random number generator using an `u64` as…","Refills the output buffer, `results`. See also the…","Isaac64Core","Marker type which indicates that the Guard type for a lock…","mutexguard","Attempts to acquire this lock until a timeout is reached.","mappedmutexguard","Temporarily unlocks the mutex to execute the given function.","Makes a new `MappedMutexGuard` for a component of the…","Attempts to make a new `MappedMutexGuard` for a component…","unlock_fair","Unlocks the mutex using a fair unlock protocol.","Consumes this mutex, returning the underlying data.","Attempts to acquire this lock.","reentrantmutexguard","Returns a mutable reference to the underlying data.","force_unlock","Forcibly unlocks the mutex.","Returns the underlying raw mutex object.","force_unlock_fair","try_lock_for","try_lock_until","reentrantmutex","mappedreentrantmutexguard","unlocked_fair","Temporarily yields the mutex to a waiting thread if there…","Makes a new `MappedReentrantMutexGuard` for a component of…","Attempts to make a new `MappedReentrantMutexGuard` for a…","rwlockreadguard","rwlockwriteguard","Attempts to acquire this `RwLock` with shared read access…","Attempts to acquire this `RwLock` with exclusive write…","Locks this `RwLock` with shared read access, blocking the…","Attempts to acquire this `RwLock` with shared read access.","rwlockupgradablereadguard","Attempts to acquire this `RwLock` with upgradable read…","mappedrwlockreadguard","Temporarily unlocks the `RwLock` to execute the given…","Returns a reference to the original reader-writer lock…","mappedrwlockwriteguard","Unlocks the `RwLock` using a fair unlock protocol.","Temporarily yields the `RwLock` to a waiting thread if…","Tries to atomically upgrade an upgradable read lock into a…","Make a new `MappedRwLockReadGuard` for a component of the…","Attempts to make a new `MappedRwLockReadGuard` for a…","Make a new `MappedRwLockWriteGuard` for a component of the…","Attempts to make a new `MappedRwLockWriteGuard` for a…","Atomically downgrades a write lock into a read lock…","GuardMarker","Marker type which determines whether a lock guard should…","downgrade","Duration type used for `try_lock_for`.","Instant type used for `try_lock_until`.","Attempts to acquire a shared lock until a timeout is…","Attempts to acquire an exclusive lock until a timeout is…","Additional methods for RwLocks which support recursive…","Additional methods for RwLocks which support atomically…","try_upgrade","Additional methods for RwLocks which support upgradable…","downgrade_to_upgradable","Attempts to acquire an upgradable lock until a timeout is…","try_upgrade_for","Attempts to upgrade an upgradable lock to an exclusive…","try_upgrade_until","Initial value for an unlocked mutex.","Initial value.","Initial value for an unlocked `RwLock`.","bump_shared","Temporarily yields a shared lock to a waiting thread if…","bump_exclusive","Temporarily yields an exclusive lock to a waiting thread…","bump_upgradable","Temporarily yields an upgradable lock to a waiting thread…","MappedMutexGuard","ReentrantMutex","ReentrantMutexGuard","MappedReentrantMutexGuard","RwLockReadGuard","RwLockWriteGuard","RwLockUpgradableReadGuard","MappedRwLockReadGuard","MappedRwLockWriteGuard","RawMutexFair","RawMutexTimed","GetThreadId","RawRwLockFair","RawRwLockDowngrade","RawRwLockTimed","RawRwLockRecursive","RawRwLockRecursiveTimed","RawRwLockUpgrade","RawRwLockUpgradeFair","RawRwLockUpgradeDowngrade","RawRwLockUpgradeTimed","GuardNoSend","crossbeam_queue","Returns `true` if the queue is empty.","Returns the number of elements in the queue.","pusherror","tokio_executor","spawnerror","Provides a best effort hint to whether or not `spawn` will…","tokio_executor::park","park_timeout","defaultexecutor","DefaultExecutor","TypedExecutor","UnparkThread","with_default","core_foundation_sys","copyDescription","core_foundation_sys::array","core_foundation_sys::attributed_string","core_foundation_sys::base","core_foundation_sys::bundle","core_foundation_sys::data","core_foundation_sys::date","core_foundation_sys::dictionary","core_foundation_sys::error","core_foundation_sys::filedescriptor","core_foundation_sys::messageport","core_foundation_sys::number","core_foundation_sys::runloop","core_foundation_sys::set","core_foundation_sys::string","core_foundation_sys::timezone","core_foundation_sys::url","core_foundation_sys::uuid","cfuuidbytes","CFArrayCallBacks","CFAllocatorContext","CFComparisonResult","CFDictionaryKeyCallBacks","CFDictionaryValueCallBacks","CFFileDescriptorContext","CFMessagePortContext","CFRunLoopSourceContext","CFRunLoopSourceContext1","CFRunLoopObserverContext","CFRunLoopTimerContext","CFSetCallBacks","CFUUIDBytes","__CFAttributedString","__CFDictionary","__CFFileDescriptor","__CFMessagePort","__CFBoolean","__CFRunLoop","__CFRunLoopSource","__CFRunLoopObserver","__CFRunLoopTimer","__CFTimeZone","rand_chacha","A cryptographically secure random number generator that…","Mcg128Xsl64","rand_jitter","timererror","jitterrng","A specialized byte slice type for performing vectored I/O…","tcpbuilder","tcplistener","tcpstream","udpbuilder","Binds this socket to the specified address.","Sets the value for the `IP_TTL` option on this socket.","Sets the value for the `IPV6_V6ONLY` option on this socket.","reuse_address","Set value for the `SO_REUSEADDR` option on this socket.","get_reuse_address","Check the `SO_REUSEADDR` option on this socket.","Get the value of the `SO_ERROR` option on this socket.","Set value for the `SO_REUSEPORT` option on this socket.","get_reuse_port","Check the value of the `SO_REUSEPORT` option on this socket.","Sets whether keepalive messages are enabled to be sent on…","Returns whether keepalive messages are enabled on this…","Sets the `SO_RCVTIMEO` option for this socket.","Gets the value of the `SO_RCVTIMEO` option for this socket.","Sets the `SO_SNDTIMEO` option for this socket.","duration","Gets the value of the `SO_SNDTIMEO` option for this socket.","take_error","Gets the value of the `IP_TTL` option for this socket.","set_only_v6","Gets the value of the `IPV6_V6ONLY` option for this socket.","set_nonblocking","Sets the linger duration of this socket by setting the…","reads the linger duration for this socket by getting the…","set_recv_buffer_size","Sets the value of the `SO_RCVBUF` option on this socket.","recv_buffer_size","Gets the value of the `SO_RCVBUF` option on this socket.","set_send_buffer_size","Sets the value of the `SO_SNDBUF` option on this socket.","send_buffer_size","Gets the value of the `SO_SNDBUF` option on this socket.","set_read_timeout_ms","set_read_timeout","read_timeout_ms","read_timeout","set_write_timeout_ms","set_write_timeout","write_timeout_ms","write_timeout","tosocketaddrs","reuse_port","from_raw_fd","UnixTcpBuilderExt","UnixUdpBuilderExt","TcpStreamExt","TcpListenerExt","UdpSocketExt","Returns the current value of a high-resolution performance…","parseerror","outofrangeerror","stdduration","precisetime","Returns a TmFmt that outputs according to the `asctime`…","Formats the time according to the format string.","steadytime","The resulting Tm is in UTC.","PreciseTime","OutOfRangeError","checked_add","checked_sub","bytesorwidestring","symbolname","backtrace","symbol_address","backtraceframe","BytesOrWideString","BacktraceFrame","BacktraceSymbol","kCFTypeArrayCallBacks","CFArrayCreate","CFArrayCreateCopy","CFArrayGetCount","CFArrayGetValues","CFArrayGetValueAtIndex","CFArrayGetTypeID","CFArrayRetainCallBack","CFArrayReleaseCallBack","CFArrayCopyDescriptionCallBack","CFArrayEqualCallBack","preferredSize","GreaterThan","kCFAllocatorDefault","kCFAllocatorSystemDefault","kCFAllocatorMalloc","kCFAllocatorMallocZone","kCFAllocatorNull","kCFAllocatorUseContext","CFAllocatorCreate","CFAllocatorAllocate","CFAllocatorDeallocate","CFAllocatorGetPreferredSizeForSize","CFAllocatorReallocate","CFAllocatorGetDefault","CFAllocatorSetDefault","CFAllocatorGetContext","CFAllocatorGetTypeID","CFCopyDescription","CFGetRetainCount","CFGetTypeID","mach_port_t","CFAllocatorRef","CFOptionFlags","CFAllocatorRetainCallBack","CFAllocatorReleaseCallBack","CFAllocatorCopyDescriptionCallBack","CFAllocatorAllocateCallBack","CFAllocatorReallocateCallBack","CFAllocatorDeallocateCallBack","CFAllocatorPreferredSizeCallBack","TCFTypeRef","Trait for all types which are Core Foundation reference…","as_void_ptr","from_void_ptr","__CFBundle","CFBundleCreate","CFBundleGetBundleWithIdentifier","CFBundleGetFunctionPointerForName","CFBundleGetMainBundle","CFBundleGetInfoDictionary","CFBundleGetTypeID","CFBundleCopyExecutableURL","CFBundleCopyPrivateFrameworksURL","CFBundleRef","CFDataCreate","CFDataGetBytePtr","CFDataGetLength","CFDataGetTypeID","kCFAbsoluteTimeIntervalSince1904","kCFAbsoluteTimeIntervalSince1970","CFAbsoluteTimeGetCurrent","CFDateCreate","CFDateGetAbsoluteTime","CFDateGetTimeIntervalSinceDate","CFDateCompare","CFDateGetTypeID","CFTimeInterval","CFAbsoluteTime","kCFTypeDictionaryKeyCallBacks","kCFTypeDictionaryValueCallBacks","CFDictionaryContainsKey","CFDictionaryCreate","CFDictionaryGetCount","CFDictionaryGetTypeID","CFDictionaryGetValueIfPresent","CFDictionaryApplyFunction","CFDictionaryGetKeysAndValues","CFDictionaryCreateMutable","CFDictionaryCreateMutableCopy","CFDictionaryAddValue","CFDictionarySetValue","CFDictionaryReplaceValue","CFDictionaryRemoveValue","CFDictionaryRemoveAllValues","CFDictionaryApplierFunction","CFDictionaryRetainCallBack","CFDictionaryReleaseCallBack","CFDictionaryCopyDescriptionCallBack","CFDictionaryEqualCallBack","CFDictionaryHashCallBack","CFDictionaryRef","CFMutableDictionaryRef","CFErrorGetTypeID","kCFErrorDomainPOSIX","kCFErrorDomainOSStatus","kCFErrorDomainMach","kCFErrorDomainCocoa","CFErrorGetDomain","CFErrorGetCode","CFErrorCopyDescription","filedescriptor","CFFileDescriptorGetTypeID","CFFileDescriptorCreate","CFFileDescriptorGetNativeDescriptor","CFFileDescriptorGetContext","CFFileDescriptorEnableCallBacks","CFFileDescriptorDisableCallBacks","CFFileDescriptorInvalidate","CFFileDescriptorIsValid","CFFileDescriptorCreateRunLoopSource","CFFileDescriptorNativeDescriptor","CFFileDescriptorRef","CFFileDescriptorCallBack","kCFFileDescriptorReadCallBack","kCFFileDescriptorWriteCallBack","messageport","CFMessagePortGetTypeID","CFMessagePortCreateLocal","CFMessagePortCreateRemote","CFMessagePortIsRemote","CFMessagePortGetName","CFMessagePortSetName","CFMessagePortGetContext","CFMessagePortInvalidate","CFMessagePortIsValid","CFMessagePortGetInvalidationCallBack","CFMessagePortSetInvalidationCallBack","CFMessagePortSendRequest","CFMessagePortCreateRunLoopSource","CFMessagePortCallBack","CFMessagePortInvalidationCallBack","CFMessagePortRef","__CFNumber","kCFBooleanTrue","kCFBooleanFalse","CFBooleanGetTypeID","CFNumberCreate","CFNumberGetValue","CFNumberCompare","CFNumberGetTypeID","CFBooleanRef","CFNumberType","CFNumberRef","kCFNumberSInt32Type","kCFNumberSInt64Type","kCFNumberFloat32Type","kCFNumberFloat64Type","propertylist","CFPropertyListCreateWithData","core_foundation_sys::propertylist","CFPropertyListCreateData","CFPropertyListRef","CFPropertyListFormat","CFPropertyListMutabilityOptions","kCFPropertyListOpenStepFormat","kCFPropertyListXMLFormat_v1_0","kCFPropertyListBinaryFormat_v1_0","kCFPropertyListImmutable","kCFPropertyListMutableContainers","kCFPropertyListMutableContainersAndLeaves","kCFRunLoopDefaultMode","kCFRunLoopCommonModes","CFRunLoopGetTypeID","CFRunLoopGetCurrent","CFRunLoopGetMain","CFRunLoopCopyCurrentMode","CFRunLoopCopyAllModes","CFRunLoopAddCommonMode","CFRunLoopGetNextTimerFireDate","CFRunLoopRun","CFRunLoopRunInMode","CFRunLoopIsWaiting","CFRunLoopWakeUp","CFRunLoopStop","CFRunLoopContainsSource","CFRunLoopAddSource","CFRunLoopRemoveSource","CFRunLoopContainsObserver","CFRunLoopAddObserver","CFRunLoopRemoveObserver","CFRunLoopContainsTimer","CFRunLoopAddTimer","CFRunLoopRemoveTimer","CFRunLoopSourceGetTypeID","CFRunLoopSourceCreate","CFRunLoopSourceGetOrder","CFRunLoopSourceInvalidate","CFRunLoopSourceIsValid","CFRunLoopSourceGetContext","CFRunLoopSourceSignal","CFRunLoopObserverGetTypeID","CFRunLoopObserverCreate","CFRunLoopObserverGetActivities","CFRunLoopObserverDoesRepeat","CFRunLoopObserverGetOrder","CFRunLoopObserverInvalidate","CFRunLoopObserverIsValid","CFRunLoopObserverGetContext","CFRunLoopTimerGetTypeID","CFRunLoopTimerCreate","CFRunLoopTimerGetNextFireDate","CFRunLoopTimerSetNextFireDate","CFRunLoopTimerGetInterval","CFRunLoopTimerDoesRepeat","CFRunLoopTimerGetOrder","CFRunLoopTimerInvalidate","CFRunLoopTimerIsValid","CFRunLoopTimerGetContext","CFRunLoopTimerGetTolerance","CFRunLoopTimerSetTolerance","CFRunLoopRef","CFRunLoopSourceRef","CFRunLoopObserverRef","CFRunLoopActivity","CFRunLoopObserverCallBack","CFRunLoopTimerCallBack","CFRunLoopTimerRef","kCFRunLoopRunFinished","kCFRunLoopRunStopped","kCFRunLoopRunTimedOut","kCFRunLoopRunHandledSource","kCFRunLoopEntry","kCFRunLoopBeforeTimers","kCFRunLoopBeforeSources","kCFRunLoopBeforeWaiting","kCFRunLoopAfterWaiting","kCFRunLoopExit","kCFRunLoopAllActivities","kCFTypeSetCallBacks","CFSetCreate","CFSetApplyFunction","CFSetGetCount","CFSetGetTypeID","CFSetApplierFunction","CFSetRetainCallBack","CFSetReleaseCallBack","CFSetCopyDescriptionCallBack","CFSetEqualCallBack","CFSetHashCallBack","__CFString","CFStringCreateWithBytes","CFStringCreateWithBytesNoCopy","CFStringCreateWithCString","CFStringGetBytes","CFStringGetCString","CFStringGetCStringPtr","CFStringGetLength","CFStringGetTypeID","CFStringCompareFlags","CFStringEncoding","CFStringEncodings","CFStringRef","kCFStringEncodingUTF8","CFTimeZoneCopySystem","CFTimeZoneCopyDefault","CFTimeZoneCreateWithTimeIntervalFromGMT","CFTimeZoneGetSecondsFromGMT","CFTimeZoneGetTypeID","CFTimeZoneRef","kCFURLAttributeModificationDateKey","kCFURLContentAccessDateKey","kCFURLContentModificationDateKey","kCFURLCreationDateKey","kCFURLFileResourceIdentifierKey","kCFURLFileSecurityKey","kCFURLHasHiddenExtensionKey","kCFURLIsDirectoryKey","kCFURLIsExecutableKey","kCFURLIsHiddenKey","kCFURLIsPackageKey","kCFURLIsReadableKey","kCFURLIsRegularFileKey","kCFURLIsSymbolicLinkKey","kCFURLIsSystemImmutableKey","kCFURLIsUserImmutableKey","kCFURLIsVolumeKey","kCFURLIsWritableKey","kCFURLLabelNumberKey","kCFURLLinkCountKey","kCFURLLocalizedLabelKey","kCFURLLocalizedNameKey","kCFURLLocalizedTypeDescriptionKey","kCFURLNameKey","kCFURLParentDirectoryURLKey","kCFURLPreferredIOBlockSizeKey","kCFURLTypeIdentifierKey","kCFURLVolumeIdentifierKey","kCFURLVolumeURLKey","kCFURLFileResourceTypeKey","CFURLCopyAbsoluteURL","CFURLCreateFilePathURL","CFURLCreateFromFileSystemRepresentation","CFURLCreateWithBytes","CFURLCreateWithFileSystemPath","CFURLCreateWithFileSystemPathRelativeToBase","CFURLCanBeDecomposed","CFURLCopyFileSystemPath","CFURLCopyFragment","CFURLCopyHostName","CFURLCopyLastPathComponent","CFURLCopyNetLocation","CFURLCopyParameterString","CFURLCopyPassword","CFURLCopyPath","CFURLCopyPathExtension","CFURLCopyQueryString","CFURLCopyResourceSpecifier","CFURLCopyScheme","CFURLCopyStrictPath","CFURLCopyUserName","CFURLGetPortNumber","CFURLHasDirectoryPath","CFURLGetFileSystemRepresentation","CFURLGetString","CFURLGetBytes","CFURLGetTypeID","CFURLClearResourcePropertyCache","CFURLSetResourcePropertyForKey","CFURLBookmarkCreationOptions","CFURLPathStyle","kCFURLPOSIXPathStyle","kCFURLHFSPathStyle","kCFURLWindowsPathStyle","CFUUIDCreate","CFUUIDCreateFromUUIDBytes","CFUUIDGetUUIDBytes","CFUUIDGetTypeID","cfarraycallbacks","cfcomparisonresult","cfallocatorcontext","cfdictionarykeycallbacks","cfdictionaryvaluecallbacks","cffiledescriptorcontext","cfmessageportcontext","cfsetcallbacks","__CFArray","__CFError","daemon::daemon","DaemonRunner","EINPROGRESS","EDESTADDRREQ","ENOPROTOOPT","EPROTONOSUPPORT","ESOCKTNOSUPPORT","EPFNOSUPPORT","EAFNOSUPPORT","EADDRNOTAVAIL","ENETUNREACH","ECONNABORTED","ETOOMANYREFS","ECONNREFUSED","ENAMETOOLONG","EHOSTUNREACH","ERPCMISMATCH","EPROGUNAVAIL","EPROGMISMATCH","EPROCUNAVAIL","ENOTRECOVERABLE","EWOULDBLOCK","errnosentinel","F_DUPFD_CLOEXEC","F_FULLFSYNC","AT_SYMLINK_NOFOLLOW","O_DIRECTORY","Returns an empty set of flags.","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that…","from_bits_truncate","Convert from underlying bit representation, dropping any…","Returns `true` if no flags are currently stored.","Returns `true` if all flags are currently set.","Returns `true` if there are flags common to both `self`…","Returns `true` all of the flags in `other` are contained…","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the…","intersects","interfaceaddressiterator","if_nametoindex","IFF_BROADCAST","IFF_LOOPBACK","IFF_POINTOPOINT","IFF_NOTRAILERS","IFF_RUNNING","IFF_PROMISC","IFF_ALLMULTI","IFF_OACTIVE","IFF_SIMPLEX","IFF_MULTICAST","Per link layer defined bit.","IFF_ALTPHYS","interfaceflags","from_bits","eventflags","posix_openpt","ptymaster","openptyresult","aiocancelstat","aio_suspend","sigevnotify","lioopcode","EVFILT_MACHPORT","EVFILT_PROC","EVFILT_READ","EVFILT_SIGNAL","EVFILT_TIMER","EVFILT_USER","EVFILT_VNODE","EVFILT_WRITE","EV_DISPATCH","EV_SYSFLAGS","type_of_event_flag","eventflag","NOTE_ABSOLUTE","NOTE_ATTRIB","NOTE_DELETE","NOTE_EXIT_REPARENTED","NOTE_EXITSTATUS","NOTE_EXTEND","NOTE_FFCOPY","NOTE_FFCTRLMASK","NOTE_FFLAGSMASK","NOTE_NSECONDS","NOTE_PCTRLMASK","NOTE_PDATAMASK","NOTE_RENAME","NOTE_REVOKE","NOTE_SECONDS","NOTE_SIGNAL","NOTE_TRACKERR","NOTE_TRIGGER","NOTE_USECONDS","NOTE_VM_ERROR","NOTE_VM_PRESSURE","NOTE_VM_PRESSURE_SUDDEN_TERMINATE","NOTE_VM_PRESSURE_TERMINATE","filterflag","eventfilter","MADV_NORMAL","MADV_RANDOM","MADV_SEQUENTIAL","MADV_WILLNEED","MADV_DONTNEED","MADV_ZERO_WIRED_PAGES","MADV_FREE_REUSABLE","MADV_FREE_REUSE","MADV_CAN_REUSE","protflags","MAP_PRIVATE","MAP_NORESERVE","MAP_NOCACHE","mapflags","MS_INVALIDATE","MS_KILLPAGES","MS_DEACTIVATE","MCL_CURRENT","mlockallflags","pthread_self","nix::sys","SIG_UNBLOCK","SIG_SETMASK","Use the given signal-catching function, which takes in the…","nix::sys::signal","pthread_sigmask","sigprocmask","SA_NOCLDSTOP","SA_NOCLDWAIT","SA_RESETHAND","sigmaskhow","msg_namelen","msg_control","msg_controllen","sa_family_t","sin6_family","sin6_flowinfo","sin6_scope_id","sockprotocol","addressfamily","getsockopt","setsockopt","getpeername","getsockname","socketaddr","ipv4addr","nix::sys::socket","Represents a socket option that can be accessed or set.…","sockflag","MSG_DONTWAIT","msgflags","ipv6addr","st_atime_nsec","st_mtime_nsec","st_ctime_nsec","st_birthtime","st_birthtime_nsec","filestat","fsblkcnt_t","fsfilcnt_t","_POSIX_VDISABLE","cfgetispeed","cfgetospeed","cfsetispeed","cfsetospeed","tcsendbreak","inputflags","outputflags","tcflag_t","controlflags","localflags","suseconds_t","from_mut_slice","waitpidflag","waitstatus","nix::unistd","AIO_LISTIO_MAX","The implementation supports the Non-Robust Mutex Priority…","The implementation provides a C-language compilation…","PTHREAD_STACK_MIN","Replace the current process image with a new one (see…","sethostname","gethostname","Set the user ID","pathconfvar","Generate an ioctl request code for a command that passes…","Generates a wrapper function for a \"bad\" ioctl that writes…","Generates a wrapper function for a \"bad\" ioctl that reads…","Generates a wrapper function for an ioctl that reads and…","nix::ifaddrs","nix::net::if_","nix::sys::aio","nix::sys::event","nix::sys::mman","nix::sys::select","nix::sys::socket::sockopt","nix::sys::stat","nix::sys::statvfs","nix::sys::termios","nix::sys::time","nix::sys::uio","nix::sys::utsname","nix::sys::wait","ipmembershiprequest","ipv6membershiprequest","milliseconds","microseconds","nanoseconds","num_seconds","num_milliseconds","num_microseconds","num_nanoseconds","nix::errno","nix::fcntl","interfaceaddress","aiofsyncmode","sighandler","nix::poll","mmapadvise","signaliterator","socktype","fchmodatflags","specialcharacterindices","forkresult","sysconfvar","controlmessage","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","sub_assign","Returns the complement of this set of flags.","Returns the intersection between the two sets of flags.","Returns the union of the two sets of flags.","Returns the left flags, but with all the right flags…","bitand_assign","Disables all flags disabled in the set.","bitor_assign","Adds the set of flags.","bitxor_assign","Toggles the set of flags.","nix::pty","ErrnoSentinel","InterfaceAddress","InterfaceFlags","OpenptyResult","AioFsyncMode","AioCancelStat","EventFilter","MlockAllFlags","SigevNotify","AddressFamily","SockProtocol","ControlMessage","IpMembershipRequest","Ipv6MembershipRequest","FchmodatFlags","SpecialCharacterIndices","OutputFlags","ControlFlags","TimeValLike","WaitPidFlag","PathconfVar","InterfaceAddressIterator","SignalIterator","CmsgIterator","IpAddMembership","IpDropMembership","Ipv6AddMembership","Ipv6DropMembership","IpMulticastTtl","IpMulticastLoop","ReceiveTimeout","SendTimeout","SocketError","TcpKeepAlive","ReceiveTimestamp","num_minutes","from_slice","broadcast","InvalidUtf8","unspecified","seal_in_place","open_in_place","openingkey","algorithm","sealingkey","The key's AEAD algorithm.","The length of a tag.","ephemeralprivatekey","signingkey","securerandom","Generate an HMAC signing key using the given digest…","verificationkey","digest_algorithm","The digest algorithm for the key.","signature","ring::signature","Signing of ASN.1 DER-encoded ECDSA signatures using the…","Signing of fixed-length (PKCS#11 style) ECDSA signatures…","Not recommended. Verification of ASN.1 DER-encoded ECDSA…","Verification of ASN.1 DER-encoded ECDSA signatures using…","Verification of fixed-length (PKCS#11 style) ECDSA…","Verification of signatures using RSA keys of 2048-8192…","Verify the signature `signature` of message `msg` with the…","An implementation of `SecureRandom` that always fills the…","Returns the value of an attribute that is an integer, in…","ring::aead","ring::aead::chacha20_poly1305_openssh","ring::agreement","ring::digest","ring::error","ring::test","ring::test::rand","ring::rand","ring::hmac","signingcontext","Constructs an Ed25519 key pair by parsing an unencrypted…","generate_pkcs8","Generates a new key pair and returns the key pair…","from_pkcs8","SealingKey","OpeningKey","Algorithm","EphemeralPrivateKey","SigningContext","VerificationKey","SecureRandom","SystemRandom","SigningAlgorithm","VerificationAlgorithm","FixedByteRandom","FixedSliceRandom","FixedSliceSequenceRandom","Ed25519KeyPair","EdDSAParameters","ECDSAKeyPair","ECDSAVerification","Unspecified","RSAParameters","RSASigningState","Signature","generate","For use by `ToTokens` implementations.","into_token_stream","Convert `self` directly into a `TokenStream` object.","TokenStreamExt","messagesize","target_size","Gets the total size of the target and all of its children.…","frompointerbuilder","clienthook","pipelinehook","responsehook","requesthook","resultshook","into_reader","listbuilder","listreader","notinschema","as_reader","nesting_limit","readeroptions","traversal_limit_in_words","frompointerreader","setpointerbuilder","heapallocator","scratchspace","scratchspaceheapallocator","allocation_strategy","allocationstrategy","reborrow","get_segment","into_segments","allocate_segment","get_segments_for_output","outputsegments","capnp::private","remotepromise","paramshook","when_resolved","get_pipelined_cap","Reads the value, swapping bytes on big-endian processors.","Writes the value, swapping bytes on big-endian processors.","elementsize","elementcount32","wordcount32","readerarena","wirepointerkind","wordcount16","captablereader","extract_cap","new_default","pointerreader","structreader","bytecount32","pointertype","is_canonical","pointerbuilder","structbuilder","structsize","get_capability","wirepointercount16","elementcount","get_pointer_field","captablebuilder","get_data_field","get_data_field_mask","get_bool_field","get_bool_field_mask","wirepointercount","get_struct_element","get_pointer_element","read_message","ownedsegments","write_message","listiter","get_from_pointer","capnp::any_pointer","capnp::capability","capnp::capability_list","capnp::constant","capnp::data","capnp::data_list","capnp::enum_list","capnp::list_list","capnp::message","capnp::primitive_list","capnp::private::arena","capnp::private::capability","capnp::private::endian","capnp::private::layout","capnp::serialize","capnp::struct_list","capnp::text","capnp::text_list","capnp::traits","pipeline","check_offset","contains_interval","amplified_read","allocate_anywhere","get_segment_mut","into_internal_list_reader","init_pointer","set_pointer_builder","index_move","pipelineop","typedreader","MessageSize","NotInSchema","OutputSegments","RemotePromise","FromTypelessPipeline","FromClientHook","ReaderOptions","AllocationStrategy","ReaderSegments","SegmentArray","TypedReader","HeapAllocator","ScratchSpace","ScratchSpaceHeapAllocator","ReadLimiter","ReaderArena","BuilderArena","ReaderArenaImpl","BuilderArenaImpl","ResponseHook","RequestHook","ResultsHook","PipelineHook","ElementSize","WirePointerKind","PointerType","CapTableReader","CapTableBuilder","PrimitiveElement","WirePointer","PointerReader","PointerBuilder","StructReader","StructBuilder","ListBuilder","FromStructReader","HasStructSize","IntoInternalStructReader","FromStructBuilder","IntoInternalListReader","FromPointerReader","OwnedStruct","FromPointerReaderRefDefault","FromPointerBuilder","FromPointerBuilderRefDefault","SetPointerBuilder","BuilderArenaImplInner","SliceSegments","OwnedSegments","fromutf8error","crossbeam_epoch","Stores a `Shared` or `Owned` pointer into the atomic…","compareandseterror","Stores the pointer `new` (either `Shared` or `Owned`) into…","Dereferences the pointer.","Returns the tag stored within the pointer.","Returns the same pointer, but tagged with `tag`. `tag` is…","Stores a function so that it can be executed at some point…","collector","Returns a new pointer pointing to the tagged pointer `data`.","into_usize","from_usize","CompareAndSetError","LocalHandle","CompareAndSetOrdering","load_consume","Encode arbitrary octets as base64. Writes into the…","decodeerror","Decode from string reference as octets. Returns a Result…","displayerror","base64display","Convenience method for creating a `Base64Display` with the…","base64::display","characterset","DecodeError","CharacterSet","DisplayError","Base64Display","Returned if the deserializer attempts to deserialize a…","Serializes a serializable object into a `Vec` of bytes…","serialized_size","Returns the size that an object would be if serialized…","serialize_into","Deserializes a slice of bytes into an instance of `T`…","deserialize_from","deserialize_from_custom","Deserializes an object from a custom `BincodeRead`er using…","deserializeowned","BincodeRead","serialize","num_integer","Returns the truncated principal `n`th root of an integer…","Returns the truncated principal square root of an integer…","Returns the truncated principal cube root of an integer --…","div_mod_floor","IterBinomial","aho_corasick","aho_corasick::ErrorKind","ahocorasick","Build an Aho-Corasick automaton using the configuration…","ahocorasickbuilder","matchkind","AhoCorasick","AhoCorasickBuilder","FindOverlappingIter","StreamFindIter","tokio_current_thread","Run the executor to completion, blocking the thread until…","runtimeouterror","Spawn the future on the executor.","Synchronously waits for the provided `future` to complete.","blockerror","run_timeout","Perform a single iteration of the event loop.","turnerror","Returns a reference to the underlying `Park` instance.","get_park_mut","Returns a mutable reference to the underlying `Park`…","taskexecutor","CurrentThread","TaskExecutor","RunTimeoutError","entererror","tokio_timer","A queue of delayed elements.","delayqueue","Sets the delay of the item associated with `key` to expire…","Slow down a stream by enforcing a delay between items.","Returns whether the throttle error has occured because of…","Allows a `Future` or `Stream` to execute for a limited…","Returns `true` if the error was caused by the inner value…","A handle to a source of time.","Set the default timer for the duration of the closure.","new_with_now","Create a new `Timer` instance that uses `park` to block…","Returns `true` if the error was caused by the timer being…","Create a new `Interval` that starts at `at` and yields…","tokio_timer::delay_queue","tokio_timer::timeout","tokio_timer::clock","tokio_timer::throttle","tokio_timer::timer","DelayQueue","ThrottleError","shutdown","at_capacity","is_shutdown","is_at_capacity","Returns a mutable reference to the inner value.","core_foundation","Creates a new `CFArray` with the given elements, which…","Returns an instance of the object, wrapping the underlying…","A trait describing how to convert from the stored *const…","concretecftype","A Boolean type.","cfabsolutetime","cfdictionary","into_untyped","from_CFType_pairs","cfmutabledictionary","to_untyped","Returns the same dictionary, but with the types reset to…","contains_key","get_keys_and_values","cffiledescriptor","cfoptionflags","cfrunloopsource","An immutable bag of elements.","cfstring","cfurlpathstyle","cfpropertylist","as_concrete_TypeRef","wrap_under_get_rule","cfpropertylistref","into_CFType","as_CFTypeRef","wrap_under_create_rule","retain_count","Returns the reference count of the object. It is unwise to…","Writes a debugging version of this object on standard error.","instance_of","Returns true if this value is an instance of another type.","downcast_into","Similar to [`downcast`], but consumes self and can thus…","cfpropertylistsubclass","cfrunloopmode","cfrunlooptimer","cfrunloopobserver","cftimeinterval","core_foundation::array","from_mut_void","core_foundation::attributed_string","itemmutref","from_void","core_foundation::base","core_foundation::boolean","core_foundation::data","core_foundation::date","core_foundation::dictionary","core_foundation::error","core_foundation::filedescriptor","core_foundation::number","core_foundation::set","core_foundation::string","core_foundation::url","core_foundation::bundle","core_foundation::propertylist","core_foundation::runloop","core_foundation::timezone","core_foundation::uuid","cfarrayref","cfattributedstringref","cftyperef","cfmutableattributedstringref","cfallocatorref","cftypeid","cfbooleanref","cfdictionaryref","cfmutabledictionaryref","cferrorref","cffiledescriptorref","cfnumberref","cfstringref","cfbundleref","cfrunloopref","cfrunlooptimerref","cfrunloopsourceref","cfrunloopobserverref","cftimezoneref","cfallocator","cftimezone","cfattributedstring","cfmutableattributedstring","cfboolean","cfbundle","cfrunloop","CFAttributedString","CFMutableAttributedString","CFIndexConvertible","FromMutVoid","CFAllocator","CFDictionary","CFMutableDictionary","CFFileDescriptor","CFPropertyListSubClass","CFPropertyList","CFRunLoopTimer","CFRunLoopSource","CFArrayIterator","CFRunLoopObserver","CFAttributedStringRef","CFMutableAttributedStringRef","as_raw_fd","get_unchecked","CFArrayRef","attributed_string","CFAttributedStringCreate","CFAttributedStringGetLength","CFAttributedStringGetTypeID","CFAttributedStringCreateMutableCopy","CFAttributedStringCreateMutable","CFAttributedStringReplaceString","CFAttributedStringSetAttribute","CFMutableAttributedStringGetTypeID","CFErrorRef","reallocate","deallocate","CFHashCode","CFTypeRef","CFDataRef","CFDateRef","dictionary","CFUUIDRef","A distribution to sample floating point numbers uniformly…","Sample values uniformly between two bounds.","new_inclusive","Create a new `Uniform` instance which samples uniformly…","rand::distributions","weightedindex","weightederror","sample_iter","choose_multiple","Collects `amount` values at random from the iterator into…","distribution","Fill `dest` entirely with random bytes (uniform value…","Shuffle a mutable slice in place.","rand::distributions::uniform","rand::rngs","from_entropy","rand::rngs::adapter","rand::rngs::mock","rand::seq::index","sample_single","unitspheresurface","indexvecintoiter","rand::seq","WeightedError","SampleUniform","UniformSampler","SampleBorrow","WeightedIndex","UnitSphereSurface","Distribution","WeightedChoice","ReseedingRng","SliceRandom","IteratorRandom","AsByteSliceMut","FromEntropy","Alphanumeric","OpenClosed01","StandardNormal","UniformFloat","UniformDuration","SliceChooseIter","IndexVecIter","IndexVecIntoIter","A random number generator that retrieves randomness…","Create a new `OsRng`.","A true random number generator based on jitter in the CPU…","TimerError","An error that can occur when [`JitterRng::test_timer`]…","No timer available.","CoarseTimer","Timer too coarse to use as an entropy source.","NotMonotonic","Timer is not monotonically increasing.","TinyVariantions","Variations of deltas of time too small.","TooManyStuck","Too many stuck results (indicating no added entropy).","Create a new `JitterRng`. Makes use of `std::time` for a…","new_with_timer","Create a new `JitterRng`. A custom timer can be supplied,…","Configures how many rounds are used to generate each…","Basic quality tests on the timer, by measuring CPU timing…","timer_stats","Statistical test: return the timer delta of one normal run…","JitterRng","Gets a reference to the underlying `Buf`.","Gets a mutable reference to the underlying `Buf`.","Gets an unsigned 32 bit integer from `self` in the…","Gets an IEEE754 single-precision (4 bytes) floating point…","Gets an IEEE754 double-precision (8 bytes) floating point…","Transfer bytes into `self` from `src` and advance the…","Writes an IEEE754 single-precision (4 bytes) floating…","Writes an IEEE754 double-precision (8 bytes) floating…","Splits the bytes into two at the given index.","bytesmut","Shortens the buffer, keeping the first `len` bytes and…","Shortens the buffer, dropping the first `cnt` bytes and…","Clears the buffer, removing all data.","Appends given bytes to this object.","Read bytes from a buffer.","Returns the number of bytes between the current position…","Returns a slice starting at the current position and of…","Fills `dst` with potentially multiple slices starting at…","Advance the internal cursor of the Buf","has_remaining","bytes::buf","Returns true if there are any more bytes to consume","copy_to_slice","Copies bytes from `self` into `dst`.","Gets an unsigned 8 bit integer from `self`.","Gets a signed 8 bit integer from `self`.","Gets an unsigned 16 bit integer from `self` in big-endian…","Gets an unsigned 16 bit integer from `self` in…","Gets a signed 16 bit integer from `self` in big-endian…","Gets a signed 16 bit integer from `self` in little-endian…","Gets a signed 32 bit integer from `self` in big-endian…","Gets a signed 32 bit integer from `self` in little-endian…","Gets an unsigned 64 bit integer from `self` in big-endian…","Gets an unsigned 64 bit integer from `self` in…","Gets a signed 64 bit integer from `self` in big-endian…","Gets a signed 64 bit integer from `self` in little-endian…","get_uint_be","Gets an unsigned n-byte integer from `self` in big-endian…","get_uint_le","Gets an unsigned n-byte integer from `self` in…","Gets a signed n-byte integer from `self` in big-endian…","Gets a signed n-byte integer from `self` in little-endian…","Transforms a `Buf` into a concrete buffer.","Creates an adaptor which will read at most `limit` bytes…","Creates an adaptor which will chain this buffer with…","Creates a \"by reference\" adaptor for this instance of `Buf`.","Creates an adaptor which implements the `Read` trait for…","Returns an iterator over the bytes contained by the buffer.","A trait for values that provide sequential write access to…","remaining_mut","Returns the number of bytes that can be written from the…","advance_mut","Advance the internal cursor of the BufMut","has_remaining_mut","Returns true if there is space in `self` for more bytes.","Returns a mutable slice starting at the current BufMut…","bytes_vec_mut","Fills `dst` with potentially multiple mutable slices…","Writes an unsigned 8 bit integer to `self`.","Writes a signed 8 bit integer to `self`.","Writes an unsigned 16 bit integer to `self` in big-endian…","Writes an unsigned 16 bit integer to `self` in…","Writes a signed 16 bit integer to `self` in big-endian…","Writes a signed 16 bit integer to `self` in little-endian…","Writes an unsigned 32 bit integer to `self` in big-endian…","Writes an unsigned 32 bit integer to `self` in…","Writes a signed 32 bit integer to `self` in big-endian…","Writes a signed 32 bit integer to `self` in little-endian…","Writes an unsigned 64 bit integer to `self` in the…","Writes an unsigned 64 bit integer to `self` in…","Writes a signed 64 bit integer to `self` in the big-endian…","Writes a signed 64 bit integer to `self` in little-endian…","put_uint_be","Writes an unsigned n-byte integer to `self` in big-endian…","put_uint_le","Writes an unsigned n-byte integer to `self` in the…","Writes a signed n-byte integer to `self` in big-endian…","Writes a signed n-byte integer to `self` in little-endian…","Creates a \"by reference\" adaptor for this instance of…","Creates an adaptor which implements the `Write` trait for…","Conversion into a `Buf`","The `Buf` type that `self` is being converted into","Creates a `Buf` from a value.","remaining","bytes_mut","bytes_vec","get_u16_be","get_u16_le","get_i16_be","get_i16_le","get_u32_be","get_u32_le","get_i32_be","get_i32_le","get_u64_be","get_u64_le","get_i64_be","get_i64_le","get_int_be","get_int_le","get_f32_be","get_f32_le","get_f64_be","get_f64_le","put_slice","put_u16_be","put_u16_le","put_i16_be","put_i16_le","put_u32_be","put_u32_le","put_i32_be","put_i32_le","put_u64_be","put_u64_le","put_i64_be","put_i64_le","put_int_be","put_int_le","put_f32_be","put_f32_le","put_f64_be","put_f64_le","Defines big-endian serialization.","Defines little-endian serialization.","`ByteOrder` describes types that can serialize integers as…","Reads an unsigned 16 bit integer from `buf`.","Reads an unsigned 24 bit integer from `buf`, stored in u32.","Reads an unsigned 32 bit integer from `buf`.","Reads an unsigned 48 bit integer from `buf`, stored in u64.","Reads an unsigned 64 bit integer from `buf`.","Reads an unsigned 128 bit integer from `buf`.","Writes an unsigned 16 bit integer `n` to `buf`.","Writes an unsigned 24 bit integer `n` to `buf`, stored in…","Writes an unsigned 32 bit integer `n` to `buf`.","Writes an unsigned 48 bit integer `n` to `buf`, stored in…","Writes an unsigned 64 bit integer `n` to `buf`.","Writes an unsigned 128 bit integer `n` to `buf`.","Reads a signed 16 bit integer from `buf`.","Reads a signed 24 bit integer from `buf`, stored in i32.","Reads a signed 32 bit integer from `buf`.","Reads a signed 48 bit integer from `buf`, stored in i64.","Reads a signed 64 bit integer from `buf`.","Reads a signed 128 bit integer from `buf`.","Writes a signed 16 bit integer `n` to `buf`.","Writes a signed 24 bit integer `n` to `buf`, stored in i32.","Writes a signed 32 bit integer `n` to `buf`.","Writes a signed 48 bit integer `n` to `buf`, stored in i64.","Writes a signed 64 bit integer `n` to `buf`.","Writes a signed 128 bit integer `n` to `buf`.","Reads unsigned 16 bit integers from `src` into `dst`.","Reads unsigned 32 bit integers from `src` into `dst`.","Reads unsigned 64 bit integers from `src` into `dst`.","Reads unsigned 128 bit integers from `src` into `dst`.","Reads signed 16 bit integers from `src` to `dst`.","Reads signed 32 bit integers from `src` into `dst`.","Reads signed 64 bit integers from `src` into `dst`.","Reads signed 128 bit integers from `src` into `dst`.","Writes unsigned 16 bit integers from `src` into `dst`.","Writes unsigned 32 bit integers from `src` into `dst`.","Writes unsigned 64 bit integers from `src` into `dst`.","Writes unsigned 128 bit integers from `src` into `dst`.","write_i16_into","Writes signed 16 bit integers from `src` into `dst`.","write_i32_into","Writes signed 32 bit integers from `src` into `dst`.","write_i64_into","Writes signed 64 bit integers from `src` into `dst`.","write_i128_into","Writes signed 128 bit integers from `src` into `dst`.","write_f32_into","Writes IEEE754 single-precision (4 bytes) floating point…","write_f64_into","Writes IEEE754 double-precision (8 bytes) floating point…","Converts the given slice of unsigned 16 bit integers to a…","Converts the given slice of unsigned 32 bit integers to a…","Converts the given slice of unsigned 64 bit integers to a…","Converts the given slice of unsigned 128 bit integers to a…","from_slice_i16","Converts the given slice of signed 16 bit integers to a…","from_slice_i32","Converts the given slice of signed 32 bit integers to a…","from_slice_i64","Converts the given slice of signed 64 bit integers to a…","from_slice_i128","Converts the given slice of signed 128 bit integers to a…","Converts the given slice of IEEE754 single-precision (4…","Converts the given slice of IEEE754 double-precision (8…","Removes all options represented by `other` from `self`.","Returns true if `self` is a superset of `other`.","Creates a new independently owned handle to the underlying…","udpsocket","local_addr","A collection of readiness events.","reregister","deregister","mio::event","mio::unix","unixready","into_raw_fd","Registration","SetReadiness","TcpListener","set_nodelay","Sets the value of the `TCP_NODELAY` option on this socket.","Gets the value of the `TCP_NODELAY` option on this socket.","set_keepalive","set_linger","set_broadcast","Sets the value of the `SO_BROADCAST` option for this socket.","Gets the value of the `SO_BROADCAST` option for this socket.","set_multicast_loop_v4","Sets the value of the `IP_MULTICAST_LOOP` option for this…","multicast_loop_v4","Gets the value of the `IP_MULTICAST_LOOP` option for this…","set_multicast_ttl_v4","Sets the value of the `IP_MULTICAST_TTL` option for this…","multicast_ttl_v4","Gets the value of the `IP_MULTICAST_TTL` option for this…","set_multicast_loop_v6","Sets the value of the `IPV6_MULTICAST_LOOP` option for…","multicast_loop_v6","Gets the value of the `IPV6_MULTICAST_LOOP` option for…","join_multicast_v4","Executes an operation of the `IP_ADD_MEMBERSHIP` type.","join_multicast_v6","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","leave_multicast_v4","Executes an operation of the `IP_DROP_MEMBERSHIP` type.","leave_multicast_v6","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","Receives data on the socket from the remote address to…","An iterator for getting multiple values out of an argument…","AllowLeadingHyphen","NextLineHelp","Occurs when the user provides an unrecognized…","Sets a string describing what the program does. This will…","Adds additional help information to be displayed in…","Sets a string of the version number to be displayed when…","appsettings","Prints the full help message to [`io::stdout()`] using a…","clapresult","Writes the full help message to the user to a…","Writes the version message to the user to a [`io::Write`]…","Generate a completions file for a specified shell at…","argmatches","visible_alias","visible_aliases","Specifies that if the value is not passed in as an…","display_order","argsettings","Because [`Subcommand`]s are essentially \"sub-[`App`]s\"…","requires_all","Sets the requirement rules of this group. This is not to…","conflicts_with","conflicts_with_all","Convenience macro getting a typed value `T` where `T`…","Convenience macro getting a typed value [`Vec<T>`] where…","subcommand","ArgSettings","AppSettings","CaseInsensitive","contains_key2","Similar to `contains_key` but acts on a higher level,…","Similar to `find` but acts on a higher level,…","A convenience function to retrieve `CFType` instances.","Heterogeneous immutable arrays.","A heterogeneous immutable array.","from_CFTypes","Returns the same array, but with the type reset to void…","Iterates over the elements of this `CFArray`.","cfarrayiterator","get_all_values","CFNullRef","allocate","CFRelease","Superclass of all Core Foundation objects.","Always use this method to construct a `CFIndex` value. It…","All Core Foundation types implement this trait. The…","The reference type wrapped inside this type.","Returns the object as its concrete TypeRef.","Returns the type ID for this class.","Returns the object as a wrapped `CFType`. The reference…","Returns the object as a wrapped `CFType`. Consumes self…","Returns the object as a raw `CFTypeRef`. The reference…","Returns the type ID of this object.","Try to downcast the `CFType` to a subclass. Checking if…","false_value","Core Foundation byte buffers.","__CFData","A byte buffer.","from_buffer","Returns a pointer to the underlying bytes in this data.…","Returns the length of this byte buffer.","Core Foundation date objects.","__CFDate","Dictionaries of key-value pairs.","copy_with_capacity","Adds the key-value pair to the dictionary if no such key…","Sets the value of the key in the dictionary.","Replaces the value of the key in the dictionary.","Removes the value of the key from the dictionary.","Core Foundation errors.","An error value.","Returns a string identifying the domain with which this…","Returns the code identifying this type of error.","Returns a human-presentable description of the error.","cffiledescriptorcallback","enable_callbacks","disable_callbacks","to_run_loop_source","Immutable numbers.","An immutable numeric value.","Creates a new set from a list of `CFType` instances.","Immutable strings.","An immutable string in one of a variety of encodings.","Creates a new `CFString` instance from a Rust string.","from_static_string","Like `CFString::new`, but references a string that can be…","Returns the number of characters in the string.","A URL type for Core Foundation.","from_file_system_path","get_file_system_path","Core Foundation Bundle Type","A Bundle type.","main_bundle","info_dictionary","executable_url","private_frameworks_url","Core Foundation property lists","A CFPropertyList struct. This is superclass to [`CFData`],…","create_with_data","cfpropertylistmutabilityoptions","create_data","cfpropertylistformat","Trait for all subclasses of [`CFPropertyList`].","to_CFPropertyList","Create an instance of the superclass type…","into_CFPropertyList","Equal to [`to_CFPropertyList`], but consumes self and…","as_CFType","Returns the type ID of this object. Will be one of CFData,…","Try to downcast the [`CFPropertyList`] to a subclass.…","CFRunLoopMode","get_current","run_current","current_mode","contains_timer","remove_timer","contains_source","remove_source","contains_observer","add_observer","remove_observer","cfrunlooptimercallback","from_file_descriptor","Core Foundation time zone objects.","CFTimeZone","A time zone.","seconds_from_gmt","Core Foundation UUID objects.","__CFUUID","declare_TCFType","impl_TCFType","impl_CFTypeDescription","impl_CFComparison","cfdataref","cfdateref","cfuuidref","cfnumber","See also CFString::new for a variant of this which does…","CFBoolean","CFRunLoop","Constructs a `DNSNameRef` from the given input if the…","dnsnameref","trustanchor","RSA_PKCS1_2048_8192_SHA1","RSA_PKCS1_2048_8192_SHA256","RSA_PKCS1_2048_8192_SHA384","RSA_PKCS1_2048_8192_SHA512","RSA_PKCS1_3072_8192_SHA384","RSA PKCS#1 1.5 signatures using SHA-384 for keys of…","endentitycert","Verifies that the end-entity certificate is valid for use…","TrustAnchor","TLSServerTrustAnchors","TLSClientTrustAnchors","EndEntityCert","SignatureAlgorithm","capnp_futures","capnp_futures::serialize","AsOutputSegments","crossbeam_deque","Pushes a task into the queue.","Steals a task from the queue.","steal_batch","steal_batch_and_pop","paren_token","bracket_token","colon_token","Returned by `Generics::split_for_impl`.","brace_token","lifetimes","const_token","A structured list within an attribute, like `derive(Copy,…","A name-value pair within an attribute, like `feature =…","Named fields of a struct or struct variant such as `Point…","Unnamed fields of a tuple struct or tuple variant such as…","A public visibility level: `pub`.","A crate-level visibility: `crate`.","A visibility level restricted to some path: `pub(self)` or…","A box expression: `box f`.","A placement expression: `place <- value`.","A slice literal expression: `[a, b, c, d]`.","A function call expression: `invoke(a, b)`.","A method call expression: `x.foo::<T>(a, b)`.","A tuple expression: `(a, b, c, d)`.","A binary operation: `a + b`, `a * b`.","A unary operation: `!x`, `*x`.","A literal in place of an expression: `1`, `\"foo\"`.","A cast expression: `foo as f64`.","A type ascription expression: `foo: f64`.","A `let` guard: `let Some(x) = opt`.","An `if` expression with an optional `else` block: `if expr…","A while loop: `while expr { ... }`.","A for loop: `for pat in expr { ... }`.","Conditionless loop: `loop { ... }`.","A `match` expression: `match n { Some(n) => {}, None => {}…","A closure expression: `|a, b| a + b`.","An unsafe block: `unsafe { ... }`.","A blocked scope: `{ ... }`.","An assignment expression: `a = compute()`.","A compound assignment expression: `counter += 1`.","Access of a named struct field (`obj.k`) or unnamed tuple…","A square bracketed indexing expression: `vector[2]`.","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.","A path like `std::mem::replace` possibly containing…","A referencing operation: `&a` or `&mut a`.","A `break`, with an optional label to break and an optional…","A `continue`, with an optional label.","A `return`, with an optional value to be returned.","A macro invocation expression: `format!(\"{}\", q)`.","A struct literal expression: `Point { x: 1, y: 1 }`.","An array literal constructed from one repeated element:…","A parenthesized expression: `(a + b)`.","An expression contained within invisible delimiters.","A try-expression: `expr?`.","An async block: `async { ... }`.","A try block: `try { ... }`.","A yield expression: `yield expr`.","Tokens in expression position not interpreted by Syn.","A generic type parameter: `T: Into<String>`.","A lifetime definition: `'a: 'b + 'c + 'd`.","A const generic parameter: `const LENGTH: usize`.","A type predicate in a `where` clause: `for<'c> Foo<'c>:…","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.","An equality predicate in a `where` clause (unsupported).","A UTF-8 string literal: `\"foo\"`.","A byte string literal: `b\"foo\"`.","A byte literal: `b'f'`.","A character literal: `'a'`.","An integer literal: `1` or `1u16`.","A floating point literal: `1f64` or `1.0e10f64`.","A boolean literal: `true` or `false`.","A raw token literal not interpreted by Syn, possibly…","A struct input to a `proc_macro_derive` macro.","An enum input to a `proc_macro_derive` macro.","A tagged union input to a `proc_macro_derive` macro.","A dynamically sized slice type: `[T]`.","A fixed size array type: `[T; n]`.","A raw pointer type: `*const T` or `*mut T`.","A reference type: `&'a T` or `&'a mut T`.","A bare function type: `fn(usize) -> bool`.","The never type: `!`.","A tuple type: `(A, B, C, String)`.","A path like `std::slice::Iter`, optionally qualified with…","A trait object type `Bound1 + Bound2 + Bound3` where…","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…","A parenthesized type equivalent to the inner type.","A type contained within invisible delimiters.","Indication that a type should be inferred by the compiler:…","A macro in the type position.","Tokens in type position not interpreted by Syn.","An associated type bound: `Iterator<Item: Display>`.","parsestream","floatsuffix","without_plus","Creates a `TokenBuffer` containing all the tokens from the…","tokenbuffer","Returns an iterator over the contents of this sequence as…","Appends a syntax tree node onto the end of this punctuated…","A trait that can provide the `Span` of the complete…","whereclause","Syntax tree traversal to walk a shared borrow of a syntax…","visit_angle_bracketed_generic_arguments","anglebracketedgenericarguments","visit_attr_style","visit_attribute","visit_bare_fn_arg","visit_bare_fn_arg_name","barefnargname","visit_bin_op","visit_binding","visit_bound_lifetimes","boundlifetimes","visit_const_param","visit_constraint","visit_data_enum","visit_data_struct","visit_data_union","visit_derive_input","deriveinput","visit_expr_binary","visit_expr_call","visit_expr_cast","visit_expr_field","visit_expr_index","visit_expr_lit","visit_expr_paren","visit_expr_path","visit_expr_unary","visit_expr_verbatim","exprverbatim","visit_field","visit_fields","visit_fields_named","fieldsnamed","visit_fields_unnamed","fieldsunnamed","visit_generic_argument","genericargument","visit_generic_param","genericparam","visit_generics","visit_index","visit_lifetime","lifetime","visit_lifetime_def","lifetimedef","visit_lit_bool","visit_lit_byte","visit_lit_byte_str","visit_lit_char","visit_lit_float","visit_lit_int","visit_lit_str","visit_lit_verbatim","litverbatim","visit_macro","visit_macro_delimiter","macrodelimiter","visit_member","visit_meta_list","visit_meta_name_value","metanamevalue","visit_nested_meta","visit_parenthesized_generic_arguments","parenthesizedgenericarguments","visit_path_arguments","patharguments","visit_path_segment","pathsegment","visit_predicate_eq","predicateeq","visit_predicate_lifetime","predicatelifetime","visit_predicate_type","predicatetype","visit_qself","visit_return_type","visit_trait_bound","visit_trait_bound_modifier","traitboundmodifier","visit_type_array","visit_type_bare_fn","visit_type_group","visit_type_impl_trait","typeimpltrait","visit_type_infer","visit_type_macro","visit_type_never","visit_type_param","visit_type_param_bound","typeparambound","visit_type_paren","visit_type_path","visit_type_ptr","visit_type_reference","typereference","visit_type_slice","visit_type_trait_object","typetraitobject","visit_type_tuple","visit_type_verbatim","typeverbatim","visit_un_op","visit_variant","visit_vis_crate","visit_vis_public","visit_vis_restricted","visrestricted","visit_visibility","visit_where_clause","visit_where_predicate","wherepredicate","visit_ident","Error returned when a Syn parser cannot parse the input…","Parse a proc-macro2 token stream into the chosen syntax…","Parse tokens of source code into the chosen syntax tree…","Parse a string of Rust code into the chosen syntax tree…","parse_terminated","Parses zero or more occurrences of `T` separated by…","punctuated","Triggers an error at the current position of the parse…","The result of a Syn parser.","syn::buffer","syn::punctuated","syn::token","attrstyle","nestedmeta","visibility","vispublic","exprinplace","exprmethodcall","exprbinary","exprunary","exprforloop","exprclosure","exprassignop","exprfield","exprindex","exprreference","exprcontinue","exprparen","exprtryblock","typeparam","constparam","implgenerics","typegenerics","traitbound","datastruct","dataunion","typeslice","typearray","typebarefn","typenever","typetuple","typeparen","typegroup","typeinfer","typemacro","barefnarg","returntype","constraint","existential","exprunsafe","exprassign","exprreturn","exprstruct","exprrepeat","turbofish","litbytestr","intsuffix","syn::parse","underscore","exprarray","exprtuple","exprwhile","exprmatch","exprblock","exprrange","exprbreak","exprmacro","exprgroup","exprasync","expryield","generics","to_tokens","attribute","visit_data","dataenum","visit_expr","exprcall","exprcast","exprpath","visit_meta","metalist","visit_path","visit_type","typepath","viscrate","visit_span","Looks at the next token in the parse stream to determine…","MetaNameValue","FieldsNamed","FieldsUnnamed","VisRestricted","ExprVerbatim","BoundLifetimes","LifetimeDef","PredicateEq","PredicateLifetime","PredicateType","WhereClause","LitVerbatim","DeriveInput","TypeImplTrait","TypeReference","TypeTraitObject","TypeVerbatim","AngleBracketedGenericArguments","Constraint","ParenthesizedGenericArguments","PathSegment","GenericParam","TraitBoundModifier","TypeParamBound","WherePredicate","FloatSuffix","MacroDelimiter","BareFnArgName","GenericArgument","PathArguments","Existential","TypeGenerics","TokenBuffer","Punctuated","ParseBuffer","ExprAssignOp","ExprClosure","ExprContinue","ExprForLoop","ExprInPlace","ExprMethodCall","ExprReference","ExprTryBlock","ImplGenerics","A word of Rust code, which may be a keyword or legal…","token_stream","Creates a new `Ident` with the given `string` as well as…","Returns the span of this `Ident`.","Configures the span of this `Ident`, possibly changing its…","Makes a new `FixedOffset` for the Eastern Hemisphere with…","fixedoffset","Makes a new `FixedOffset` for the Western Hemisphere with…","Returns a `Date` which corresponds to the current date.","Returns a `DateTime` which corresponds to the current date.","Makes a new `Date` from year, month, day and the current…","Makes a new `Date` from year, day of year (DOY or…","localresult","Makes a new `Date` from ISO week date (year and week…","Makes a new `DateTime` from the number of non-leap seconds…","Makes a new `DateTime` from the number of non-leap…","datetime","naivedatetime","naivedate","Makes a new `DateTime` from the current date, hour,…","Makes a new `NaiveDate` from the calendar date (year,…","Makes a new `NaiveDate` from the ordinal date (year and…","Makes a new `NaiveDate` from the ISO week date (year, week…","Makes a new `NaiveDate` from the number of days since…","Parses a string with the specified format string and…","parseresult","and_hms_opt","Makes a new `NaiveDateTime` from the current date, hour,…","and_hms_milli_opt","and_hms_micro_opt","and_hms_nano_opt","Makes a new `NaiveDate` for the next calendar date.","Makes a new `NaiveDate` for the previous calendar date.","oldduration","delayedformat","strftimeitems","Makes a new `NaiveTime` from hour, minute and second.","naivetime","Makes a new `NaiveTime` from hour, minute, second and…","Makes a new `NaiveTime` from the number of seconds since…","parse_from_str","signed_duration_since","format_with_items","Makes a new `NaiveDateTime` corresponding to a UTC date…","timestamp_millis","checked_add_signed","checked_sub_signed","Formats the combined date and time with the specified…","Makes a new `DateTime` from the current date and given…","Makes a new `DateTime` from the current date, hour, minute…","and_hms_milli","and_hms_micro","and_hms_nano","Makes a new `Date` for the next date.","Makes a new `Date` for the prior date.","Formats the date with the specified format string. See the…","Retrieves a date component.","timestamp_nanos","timestamp_subsec_millis","timestamp_subsec_micros","timestamp_subsec_nanos","Retrieves an associated offset from UTC.","Retrieves an associated time zone.","with_timezone","Changes the associated time zone. This does not change the…","Adds given `Duration` to the current date and time.","Subtracts given `Duration` from the current date and time.","naive_local","timestamp","Week number, where the week 1 starts at the first Sunday…","Week number, where the week 1 starts at the first Monday…","The number of non-leap seconds since the midnight UTC on…","Offset from the local time to UTC (`+09:00` or `-04:00` or…","Internal uses only.","Returns a parsed timezone-aware date and time out of given…","chrono::format","Makes a new `DelayedFormat` value out of local date and…","chrono::offset","chrono::naive","chrono::format::strftime","from_offset","offset_from_local_date","offset_from_local_datetime","offset_from_utc_date","offset_from_utc_datetime","from_local_date","from_local_datetime","from_utc_date","from_utc_datetime","Returns the year number in the calendar date.","Returns the month number starting from 1.","Returns the month number starting from 0.","Returns the day of month starting from 1.","Returns the day of month starting from 0.","Returns the day of year starting from 1.","Returns the day of year starting from 0.","Returns the day of week.","with_month0","Makes a new `NaiveDate` with the month number (starting…","Makes a new `NaiveDate` with the day of month (starting…","with_ordinal","with_ordinal0","Makes a new `NaiveDate` with the day of year (starting…","with_month","Makes a new `NaiveDateTime` with the month number…","Makes a new `NaiveDateTime` with the day of month…","Makes a new `NaiveDateTime` with the day of year (starting…","with_year","with_day0","Returns the hour number from 0 to 23.","Returns the minute number from 0 to 59.","Returns the second number from 0 to 59.","nanosecond","Returns the number of nanoseconds since the whole non-leap…","with_minute","with_second","with_nanosecond","num_seconds_from_midnight","Returns the number of non-leap seconds past the last…","with_hour","secondsformat","internalfixed","parseweekdayerror","add_assign","SecondsFormat","LocalResult","FixedOffset","NaiveDateTime","StrftimeItems","DelayedFormat","SubsecRound","ParseWeekdayError","InternalNumeric","InternalFixed","ISO 8601 time duration with nanosecond precision. This…","ParseError","Makes a new `Duration` with given number of weeks.…","Makes a new `Duration` with given number of days.…","Makes a new `Duration` with given number of hours.…","Makes a new `Duration` with given number of minutes.…","Makes a new `Duration` with given number of seconds.…","Makes a new `Duration` with given number of milliseconds.","Makes a new `Duration` with given number of microseconds.","Makes a new `Duration` with given number of nanoseconds.","Runs a closure, returning the duration of time it took to…","Returns the total number of whole weeks in the duration.","Returns the total number of whole days in the duration.","Returns the total number of whole hours in the duration.","Returns the total number of whole minutes in the duration.","Returns the total number of whole seconds in the duration.","Returns the total number of whole milliseconds in the…","Returns the total number of whole microseconds in the…","Returns the total number of whole nanoseconds in the…","Add two durations, returning `None` if overflow occurred.","Subtract two durations, returning `None` if overflow…","The minimum possible `Duration`: `i64::MIN` milliseconds.","The maximum possible `Duration`: `i64::MAX` milliseconds.","A duration where the stored seconds and nanoseconds are…","Returns `true` if the duration equals `Duration::zero()`.","Creates a `time::Duration` object from `std::time::Duration`","Creates a `std::time::Duration` object from `time::Duration`","systemtime","min_value","max_value","RegexBuilder","A configurable builder for a regular expression.","RegexSetBuilder","A configurable builder for a set of regular expressions.","Match represents a single match of a regex in a haystack.","An iterator over all non-overlapping matches for a…","CaptureMatches","An iterator that yields all non-overlapping capture groups…","Yields all substrings delimited by a regular expression…","Yields at most `N` substrings delimited by a regular…","CaptureNames","An iterator over the names of all possible captures.","CaptureLocations","CaptureLocations is a low level representation of the raw…","SubCaptureMatches","An iterator that yields all capturing matches in the order…","ReplacerRef","By-reference adaptor for a `Replacer`","Match multiple (possibly overlapping) regular expressions…","A set of matches returned by a regex set.","SetMatchesIntoIter","An owned iterator over the set of matches from a regex set.","SetMatchesIter","A borrowed iterator over the set of matches from a regex…","regexbuilder","Create a new regular expression builder with the given…","Consume the builder and compile the regular expression.","Set the value for the case insensitive (`i`) flag.","Set the value for the multi-line matching (`m`) flag.","Set the value for the any character (`s`) flag, where in…","Set the value for the greedy swap (`U`) flag.","Set the value for the ignore whitespace (`x`) flag.","Set the value for the Unicode (`u`) flag.","Set the approximate size limit of the compiled regular…","dfa_size_limit","Set the approximate size of the cache used by the DFA.","regex::bytes","regexsetbuilder","size_limit","Consume the builder and compile the regular expressions…","no_expansion","Return a fixed unchanging replacement byte string.","Return a `Replacer` that borrows and wraps this `Replacer`.","replacerref","capturelocations","Create a new regex set with the given regular expressions.","regexset","Returns true if and only if one of the regexes in this set…","Returns the set of regular expressions that match in the…","Returns the total number of regular expressions in this set.","Returns the patterns that this set will match on.","matched_any","Whether this set contains any matches.","Whether the regex at the given index matched.","The total number of regexes in the set that created these…","Returns an iterator over indexes in the regex that matched.","setmatchesiter","Returns the starting byte offset of the match in the…","Returns the ending byte offset of the match in the haystack.","Returns the matched text.","Compiles a regular expression. Once compiled, it can be…","Returns true if and only if the regex matches the string…","Returns the start and end byte range of the leftmost-first…","Returns an iterator for each successive non-overlapping…","Returns the capture groups corresponding to the…","captures","captures_iter","Returns an iterator over all the non-overlapping capture…","capturematches","Returns an iterator of substrings of `text` delimited by a…","Returns an iterator of at most `limit` substrings of…","Replaces the leftmost-first match with the replacement…","replace_all","Replaces all non-overlapping matches in `text` with the…","Replaces at most `limit` non-overlapping matches in `text`…","shortest_match","Returns the end location of a match in the text given.","shortest_match_at","Returns the same as shortest_match, but starts the search…","is_match_at","Returns the same as is_match, but starts the search at the…","Returns the same as find, but starts the search at the…","captures_read","This is like `captures`, but uses `CaptureLocations`…","captures_read_at","Returns the original string of this regex.","capture_names","Returns an iterator over the capture names.","capturenames","captures_len","Returns the number of captures.","capture_locations","Returns an empty set of capture locations that can be…","Returns the start and end positions of the Nth capture…","Returns the total number of capturing groups.","Returns the match associated with the capture group at…","Returns the match for the capture group named `name`. If…","subcapturematches","Expands all instances of `$name` in `replacement` to the…","Returns the number of captured groups.","Replacer describes types that can be used to replace…","replace_append","Appends text to `dst` to replace the current match.","setmatches","Attempts to parse a string into a regular expression","Shows the original regular expression.","Return a fixed unchanging replacement string.","SetMatches","Escapes all regular expression meta characters in `text`.","parking_lot_core","unparkresult","parkresult","unparktoken","parktoken","UnparkResult","UnparkToken","Creates a future which will read all the bytes associated…","tokio_io::io","allowstdio","read_to_end","prepare_uninitialized_buffer","Prepares an uninitialized buffer to be safe to pass to…","Attempt to read from the `AsyncRead` into `buf`.","Pull some bytes from this source into the specified…","Provides a `Stream` and `Sink` interface for reading and…","Helper method for splitting this read/write object into…","Attempt to write bytes from `buf` into the object.","Attempt to flush the object, ensuring that any buffered…","Write a `Buf` into this value, returning how many bytes…","unixdatagram","try_clone","Receives data from the socket.","unixlistener","Accepts a new incoming connection to this listener.","Returns the local socket address of this listener.","Returns the value of the `SO_ERROR` option.","from_stream","unixstream","Shuts down the read, write, or both halves of this…","Read in a list of buffers all at once.","Write a list of buffers all at once.","UnixDatagram","UnixListener","core_graphics","cgcolorspace","cgdisplaymode","cgwindowimageoption","cgwindowlistoption","cgwindowid","Returns a boolean indicating whether a display is in a…","Returns a boolean indicating whether a display is…","cgdirectdisplayid","cgeventflags","Key to access an integer field that contains the mouse…","Key to access an integer field that contains scrolling…","Key to access a field that contains scrolling data. The…","Key to access an integer field that contains pixel-based…","Key to access an integer field that contains the absolute…","Key to access a double field that contains the tablet pen…","Key to access an integer field that contains the…","Key to access an integer field that contains a…","Key to access an integer field that indicates whether the…","Key to access a field that contains the event source Unix…","cgeventsource","cgeventtype","cgeventfield","cgaffinetransform","apply_transform","bytes_per_row","color_space","core_graphics::color_space","core_graphics::context","core_graphics::data_provider","core_graphics::display","core_graphics::event","core_graphics::event_source","core_graphics::font","core_graphics::geometry","core_graphics::private","core_graphics::image","core_graphics::path","cgdataprovider","cgmousebutton","cgeventtaplocation","cgeventsourcestateid","cgpathelementtype","cgcolorspaceref","cgcontextref","cgdataproviderref","cgdisplaymoderef","cgeventsourceref","cgeventref","cgimageref","cgfontref","cgpathref","CGColorSpace","CGTextDrawingMode","CGDataProvider","CGDataProviderRef","CGDisplayMode","CGEventType","CGMouseButton","CGEventTapLocation","CGEventFlags","CGEventSourceStateID","CGEventSource","CGAffineTransform","CGImageAlphaInfo","CGImageByteOrderInfo","CGPathElement","CGPathElementType","CGColorSpaceRef","CGContextRef","CGDisplayModeRef","CGEventSourceRef","CGPathElementRef","get_values","An immutable dictionary of key-value pairs.","get_CFType","This type implements `io::Read` and `io::Write`,…","Our session","The underlying transport, like a socket","ciphersuites","List of ciphersuites, in preference order.","Our MTU.  If None, we don't limit TLS message sizes.","alpn_protocols","How to output key material for debugging. The default does…","RSA_PKCS1_SHA256","RSA_PKCS1_SHA384","RSA_PKCS1_SHA512","RSA_PSS_SHA256","RSA_PSS_SHA384","RSA_PSS_SHA512","expect_types","rustls::TLSError","AES_128_GCM","AES_256_GCM","CHACHA20_POLY1305","rootcertstore","clientcertverifier","keyexchangeresult","keyexchange","signaturescheme","producestickets","serversessionmemorycache","storesserversessions","certificate","clientsessionmemorycache","set_protocols","Set the ALPN protocol list to the given protocol names.…","set_persistence","storesclientsessions","privatekey","writeearlydata","rustls::internal","rustls::internal::msgs","ProtocolVersion","Certificate","DecryptError","CipherSuite","TLS_NULL_WITH_NULL_NULL","TLS_RSA_WITH_NULL_MD5","TLS_RSA_WITH_NULL_SHA","TLS_RSA_EXPORT_WITH_RC4_40_MD5","TLS_RSA_WITH_RC4_128_MD5","TLS_RSA_WITH_RC4_128_SHA","TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5","TLS_RSA_WITH_IDEA_CBC_SHA","TLS_RSA_EXPORT_WITH_DES40_CBC_SHA","TLS_RSA_WITH_DES_CBC_SHA","TLS_RSA_WITH_3DES_EDE_CBC_SHA","TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA","TLS_DH_DSS_WITH_DES_CBC_SHA","TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA","TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA","TLS_DH_RSA_WITH_DES_CBC_SHA","TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA","TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA","TLS_DHE_DSS_WITH_DES_CBC_SHA","TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA","TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA","TLS_DHE_RSA_WITH_DES_CBC_SHA","TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA","TLS_DH_anon_EXPORT_WITH_RC4_40_MD5","TLS_DH_anon_WITH_RC4_128_MD5","TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA","TLS_DH_anon_WITH_DES_CBC_SHA","TLS_DH_anon_WITH_3DES_EDE_CBC_SHA","SSL_FORTEZZA_KEA_WITH_NULL_SHA","SSL_FORTEZZA_KEA_WITH_FORTEZZA_CBC_SHA","TLS_KRB5_WITH_DES_CBC_SHA_or_SSL_FORTEZZA_KEA_WITH_RC4_128_SHA","TLS_KRB5_WITH_3DES_EDE_CBC_SHA","TLS_KRB5_WITH_RC4_128_SHA","TLS_KRB5_WITH_IDEA_CBC_SHA","TLS_KRB5_WITH_DES_CBC_MD5","TLS_KRB5_WITH_3DES_EDE_CBC_MD5","TLS_KRB5_WITH_RC4_128_MD5","TLS_KRB5_WITH_IDEA_CBC_MD5","TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA","TLS_KRB5_EXPORT_WITH_RC2_CBC_40_SHA","TLS_KRB5_EXPORT_WITH_RC4_40_SHA","TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5","TLS_KRB5_EXPORT_WITH_RC2_CBC_40_MD5","TLS_KRB5_EXPORT_WITH_RC4_40_MD5","TLS_PSK_WITH_NULL_SHA","TLS_DHE_PSK_WITH_NULL_SHA","TLS_RSA_PSK_WITH_NULL_SHA","TLS_RSA_WITH_AES_128_CBC_SHA","TLS_DH_DSS_WITH_AES_128_CBC_SHA","TLS_DH_RSA_WITH_AES_128_CBC_SHA","TLS_DHE_DSS_WITH_AES_128_CBC_SHA","TLS_DHE_RSA_WITH_AES_128_CBC_SHA","TLS_DH_anon_WITH_AES_128_CBC_SHA","TLS_RSA_WITH_AES_256_CBC_SHA","TLS_DH_DSS_WITH_AES_256_CBC_SHA","TLS_DH_RSA_WITH_AES_256_CBC_SHA","TLS_DHE_DSS_WITH_AES_256_CBC_SHA","TLS_DHE_RSA_WITH_AES_256_CBC_SHA","TLS_DH_anon_WITH_AES_256_CBC_SHA","TLS_RSA_WITH_NULL_SHA256","TLS_RSA_WITH_AES_128_CBC_SHA256","TLS_RSA_WITH_AES_256_CBC_SHA256","TLS_DH_DSS_WITH_AES_128_CBC_SHA256","TLS_DH_RSA_WITH_AES_128_CBC_SHA256","TLS_DHE_DSS_WITH_AES_128_CBC_SHA256","TLS_RSA_WITH_CAMELLIA_128_CBC_SHA","TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA","TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA","TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA","TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA","TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA","TLS_ECDH_ECDSA_WITH_NULL_SHA_draft","TLS_ECDH_ECDSA_WITH_RC4_128_SHA_draft","TLS_ECDH_ECDSA_WITH_DES_CBC_SHA_draft","TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA_draft","TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA_draft","TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA_draft","TLS_ECDH_ECNRA_WITH_DES_CBC_SHA_draft","TLS_ECDH_ECNRA_WITH_3DES_EDE_CBC_SHA_draft","TLS_ECMQV_ECDSA_NULL_SHA_draft","TLS_ECMQV_ECDSA_WITH_RC4_128_SHA_draft","TLS_ECMQV_ECDSA_WITH_DES_CBC_SHA_draft","TLS_ECMQV_ECDSA_WITH_3DES_EDE_CBC_SHA_draft","TLS_ECMQV_ECNRA_NULL_SHA_draft","TLS_ECMQV_ECNRA_WITH_RC4_128_SHA_draft","TLS_ECMQV_ECNRA_WITH_DES_CBC_SHA_draft","TLS_ECMQV_ECNRA_WITH_3DES_EDE_CBC_SHA_draft","TLS_ECDH_anon_NULL_WITH_SHA_draft","TLS_ECDH_anon_WITH_RC4_128_SHA_draft","TLS_ECDH_anon_WITH_DES_CBC_SHA_draft","TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA_draft","TLS_ECDH_anon_EXPORT_WITH_DES40_CBC_SHA_draft","TLS_ECDH_anon_EXPORT_WITH_RC4_40_SHA_draft","TLS_RSA_EXPORT1024_WITH_RC4_56_MD5","TLS_RSA_EXPORT1024_WITH_RC2_CBC_56_MD5","TLS_RSA_EXPORT1024_WITH_DES_CBC_SHA","TLS_DHE_DSS_EXPORT1024_WITH_DES_CBC_SHA","TLS_RSA_EXPORT1024_WITH_RC4_56_SHA","TLS_DHE_DSS_EXPORT1024_WITH_RC4_56_SHA","TLS_DHE_DSS_WITH_RC4_128_SHA","TLS_DHE_RSA_WITH_AES_128_CBC_SHA256","TLS_DH_DSS_WITH_AES_256_CBC_SHA256","TLS_DH_RSA_WITH_AES_256_CBC_SHA256","TLS_DHE_DSS_WITH_AES_256_CBC_SHA256","TLS_DHE_RSA_WITH_AES_256_CBC_SHA256","TLS_DH_anon_WITH_AES_128_CBC_SHA256","TLS_DH_anon_WITH_AES_256_CBC_SHA256","TLS_DHE_DSS_WITH_3DES_EDE_CBC_RMD","TLS_DHE_DSS_WITH_AES_128_CBC_RMD","TLS_DHE_DSS_WITH_AES_256_CBC_RMD","TLS_DHE_RSA_WITH_3DES_EDE_CBC_RMD","TLS_DHE_RSA_WITH_AES_128_CBC_RMD","TLS_DHE_RSA_WITH_AES_256_CBC_RMD","TLS_RSA_WITH_3DES_EDE_CBC_RMD","TLS_RSA_WITH_AES_128_CBC_RMD","TLS_RSA_WITH_AES_256_CBC_RMD","TLS_GOSTR341094_WITH_28147_CNT_IMIT","TLS_GOSTR341001_WITH_28147_CNT_IMIT","TLS_GOSTR341094_WITH_NULL_GOSTR3411","TLS_GOSTR341001_WITH_NULL_GOSTR3411","TLS_RSA_WITH_CAMELLIA_256_CBC_SHA","TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA","TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA","TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA","TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA","TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA","TLS_PSK_WITH_RC4_128_SHA","TLS_PSK_WITH_3DES_EDE_CBC_SHA","TLS_PSK_WITH_AES_128_CBC_SHA","TLS_PSK_WITH_AES_256_CBC_SHA","TLS_DHE_PSK_WITH_RC4_128_SHA","TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA","TLS_DHE_PSK_WITH_AES_128_CBC_SHA","TLS_DHE_PSK_WITH_AES_256_CBC_SHA","TLS_RSA_PSK_WITH_RC4_128_SHA","TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA","TLS_RSA_PSK_WITH_AES_128_CBC_SHA","TLS_RSA_PSK_WITH_AES_256_CBC_SHA","TLS_RSA_WITH_SEED_CBC_SHA","TLS_DH_DSS_WITH_SEED_CBC_SHA","TLS_DH_RSA_WITH_SEED_CBC_SHA","TLS_DHE_DSS_WITH_SEED_CBC_SHA","TLS_DHE_RSA_WITH_SEED_CBC_SHA","TLS_DH_anon_WITH_SEED_CBC_SHA","TLS_RSA_WITH_AES_128_GCM_SHA256","TLS_RSA_WITH_AES_256_GCM_SHA384","TLS_DHE_RSA_WITH_AES_128_GCM_SHA256","TLS_DHE_RSA_WITH_AES_256_GCM_SHA384","TLS_DH_RSA_WITH_AES_128_GCM_SHA256","TLS_DH_RSA_WITH_AES_256_GCM_SHA384","TLS_DHE_DSS_WITH_AES_128_GCM_SHA256","TLS_DHE_DSS_WITH_AES_256_GCM_SHA384","TLS_DH_DSS_WITH_AES_128_GCM_SHA256","TLS_DH_DSS_WITH_AES_256_GCM_SHA384","TLS_DH_anon_WITH_AES_128_GCM_SHA256","TLS_DH_anon_WITH_AES_256_GCM_SHA384","TLS_PSK_WITH_AES_128_GCM_SHA256","TLS_PSK_WITH_AES_256_GCM_SHA384","TLS_DHE_PSK_WITH_AES_128_GCM_SHA256","TLS_DHE_PSK_WITH_AES_256_GCM_SHA384","TLS_RSA_PSK_WITH_AES_128_GCM_SHA256","TLS_RSA_PSK_WITH_AES_256_GCM_SHA384","TLS_PSK_WITH_AES_128_CBC_SHA256","TLS_PSK_WITH_AES_256_CBC_SHA384","TLS_PSK_WITH_NULL_SHA256","TLS_PSK_WITH_NULL_SHA384","TLS_DHE_PSK_WITH_AES_128_CBC_SHA256","TLS_DHE_PSK_WITH_AES_256_CBC_SHA384","TLS_DHE_PSK_WITH_NULL_SHA256","TLS_DHE_PSK_WITH_NULL_SHA384","TLS_RSA_PSK_WITH_AES_128_CBC_SHA256","TLS_RSA_PSK_WITH_AES_256_CBC_SHA384","TLS_RSA_PSK_WITH_NULL_SHA256","TLS_RSA_PSK_WITH_NULL_SHA384","TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256","TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256","TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256","TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256","TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256","TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA256","TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256","TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256","TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256","TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256","TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256","TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA256","TLS_EMPTY_RENEGOTIATION_INFO_SCSV","TLS13_AES_128_GCM_SHA256","TLS13_AES_256_GCM_SHA384","TLS13_CHACHA20_POLY1305_SHA256","TLS13_AES_128_CCM_SHA256","TLS13_AES_128_CCM_8_SHA256","TLS_ECDH_ECDSA_WITH_NULL_SHA","TLS_ECDH_ECDSA_WITH_RC4_128_SHA","TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA","TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA","TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA","TLS_ECDHE_ECDSA_WITH_NULL_SHA","TLS_ECDHE_ECDSA_WITH_RC4_128_SHA","TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA","TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA","TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA","TLS_ECDH_RSA_WITH_NULL_SHA","TLS_ECDH_RSA_WITH_RC4_128_SHA","TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA","TLS_ECDH_RSA_WITH_AES_128_CBC_SHA","TLS_ECDH_RSA_WITH_AES_256_CBC_SHA","TLS_ECDHE_RSA_WITH_NULL_SHA","TLS_ECDHE_RSA_WITH_RC4_128_SHA","TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA","TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA","TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA","TLS_ECDH_anon_WITH_NULL_SHA","TLS_ECDH_anon_WITH_RC4_128_SHA","TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA","TLS_ECDH_anon_WITH_AES_128_CBC_SHA","TLS_ECDH_anon_WITH_AES_256_CBC_SHA","TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA","TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA","TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA","TLS_SRP_SHA_WITH_AES_128_CBC_SHA","TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA","TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA","TLS_SRP_SHA_WITH_AES_256_CBC_SHA","TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA","TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA","TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256","TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384","TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256","TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384","TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256","TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384","TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256","TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384","TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256","TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384","TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256","TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384","TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256","TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384","TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256","TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384","TLS_ECDHE_PSK_WITH_RC4_128_SHA","TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA","TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA","TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA","TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256","TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384","TLS_ECDHE_PSK_WITH_NULL_SHA","TLS_ECDHE_PSK_WITH_NULL_SHA256","TLS_ECDHE_PSK_WITH_NULL_SHA384","TLS_RSA_WITH_ARIA_128_CBC_SHA256","TLS_RSA_WITH_ARIA_256_CBC_SHA384","TLS_DH_DSS_WITH_ARIA_128_CBC_SHA256","TLS_DH_DSS_WITH_ARIA_256_CBC_SHA384","TLS_DH_RSA_WITH_ARIA_128_CBC_SHA256","TLS_DH_RSA_WITH_ARIA_256_CBC_SHA384","TLS_DHE_DSS_WITH_ARIA_128_CBC_SHA256","TLS_DHE_DSS_WITH_ARIA_256_CBC_SHA384","TLS_DHE_RSA_WITH_ARIA_128_CBC_SHA256","TLS_DHE_RSA_WITH_ARIA_256_CBC_SHA384","TLS_DH_anon_WITH_ARIA_128_CBC_SHA256","TLS_DH_anon_WITH_ARIA_256_CBC_SHA384","TLS_ECDHE_ECDSA_WITH_ARIA_128_CBC_SHA256","TLS_ECDHE_ECDSA_WITH_ARIA_256_CBC_SHA384","TLS_ECDH_ECDSA_WITH_ARIA_128_CBC_SHA256","TLS_ECDH_ECDSA_WITH_ARIA_256_CBC_SHA384","TLS_ECDHE_RSA_WITH_ARIA_128_CBC_SHA256","TLS_ECDHE_RSA_WITH_ARIA_256_CBC_SHA384","TLS_ECDH_RSA_WITH_ARIA_128_CBC_SHA256","TLS_ECDH_RSA_WITH_ARIA_256_CBC_SHA384","TLS_RSA_WITH_ARIA_128_GCM_SHA256","TLS_RSA_WITH_ARIA_256_GCM_SHA384","TLS_DHE_RSA_WITH_ARIA_128_GCM_SHA256","TLS_DHE_RSA_WITH_ARIA_256_GCM_SHA384","TLS_DH_RSA_WITH_ARIA_128_GCM_SHA256","TLS_DH_RSA_WITH_ARIA_256_GCM_SHA384","TLS_DHE_DSS_WITH_ARIA_128_GCM_SHA256","TLS_DHE_DSS_WITH_ARIA_256_GCM_SHA384","TLS_DH_DSS_WITH_ARIA_128_GCM_SHA256","TLS_DH_DSS_WITH_ARIA_256_GCM_SHA384","TLS_DH_anon_WITH_ARIA_128_GCM_SHA256","TLS_DH_anon_WITH_ARIA_256_GCM_SHA384","TLS_ECDHE_ECDSA_WITH_ARIA_128_GCM_SHA256","TLS_ECDHE_ECDSA_WITH_ARIA_256_GCM_SHA384","TLS_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256","TLS_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384","TLS_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256","TLS_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384","TLS_ECDH_RSA_WITH_ARIA_128_GCM_SHA256","TLS_ECDH_RSA_WITH_ARIA_256_GCM_SHA384","TLS_PSK_WITH_ARIA_128_CBC_SHA256","TLS_PSK_WITH_ARIA_256_CBC_SHA384","TLS_DHE_PSK_WITH_ARIA_128_CBC_SHA256","TLS_DHE_PSK_WITH_ARIA_256_CBC_SHA384","TLS_RSA_PSK_WITH_ARIA_128_CBC_SHA256","TLS_RSA_PSK_WITH_ARIA_256_CBC_SHA384","TLS_PSK_WITH_ARIA_128_GCM_SHA256","TLS_PSK_WITH_ARIA_256_GCM_SHA384","TLS_DHE_PSK_WITH_ARIA_128_GCM_SHA256","TLS_DHE_PSK_WITH_ARIA_256_GCM_SHA384","TLS_RSA_PSK_WITH_ARIA_128_GCM_SHA256","TLS_RSA_PSK_WITH_ARIA_256_GCM_SHA384","TLS_ECDHE_PSK_WITH_ARIA_128_CBC_SHA256","TLS_ECDHE_PSK_WITH_ARIA_256_CBC_SHA384","TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256","TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384","TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256","TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384","TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256","TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384","TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256","TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384","TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256","TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384","TLS_DHE_RSA_WITH_CAMELLIA_128_GCM_SHA256","TLS_DHE_RSA_WITH_CAMELLIA_256_GCM_SHA384","TLS_DH_RSA_WITH_CAMELLIA_128_GCM_SHA256","TLS_DH_RSA_WITH_CAMELLIA_256_GCM_SHA384","TLS_DHE_DSS_WITH_CAMELLIA_128_GCM_SHA256","TLS_DHE_DSS_WITH_CAMELLIA_256_GCM_SHA384","TLS_DH_DSS_WITH_CAMELLIA_128_GCM_SHA256","TLS_DH_DSS_WITH_CAMELLIA_256_GCM_SHA384","TLS_DH_anon_WITH_CAMELLIA_128_GCM_SHA256","TLS_DH_anon_WITH_CAMELLIA_256_GCM_SHA384","TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256","TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384","TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256","TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384","TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256","TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384","TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256","TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384","TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256","TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384","TLS_DHE_PSK_WITH_CAMELLIA_128_GCM_SHA256","TLS_DHE_PSK_WITH_CAMELLIA_256_GCM_SHA384","TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256","TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384","TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256","TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384","TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256","TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384","TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256","TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384","TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256","TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384","TLS_RSA_WITH_AES_128_CCM","TLS_RSA_WITH_AES_256_CCM","TLS_DHE_RSA_WITH_AES_128_CCM","TLS_DHE_RSA_WITH_AES_256_CCM","TLS_RSA_WITH_AES_128_CCM_8","TLS_RSA_WITH_AES_256_CCM_8","TLS_DHE_RSA_WITH_AES_128_CCM_8","TLS_DHE_RSA_WITH_AES_256_CCM_8","TLS_PSK_WITH_AES_128_CCM","TLS_PSK_WITH_AES_256_CCM","TLS_DHE_PSK_WITH_AES_128_CCM","TLS_DHE_PSK_WITH_AES_256_CCM","TLS_PSK_WITH_AES_128_CCM_8","TLS_PSK_WITH_AES_256_CCM_8","TLS_PSK_DHE_WITH_AES_128_CCM_8","TLS_PSK_DHE_WITH_AES_256_CCM_8","TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256","TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256","TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256","TLS_PSK_WITH_CHACHA20_POLY1305_SHA256","TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256","TLS_DHE_PSK_WITH_CHACHA20_POLY1305_SHA256","TLS_RSA_PSK_WITH_CHACHA20_POLY1305_SHA256","SSL_RSA_FIPS_WITH_DES_CBC_SHA","SSL_RSA_FIPS_WITH_3DES_EDE_CBC_SHA","SignatureScheme","RSA_PKCS1_SHA1","ECDSA_SHA1_Legacy","ECDSA_NISTP256_SHA256","ECDSA_NISTP384_SHA384","ECDSA_NISTP521_SHA512","HelloRetryRequest","extensions","legacy_version","session_id","cipher_suite","CertificateStatus","ECPointFormats","SignatureAlgorithms","ServerName","SupportedVersions","CertificateStatusRequest","TransportParameters","RenegotiationInfo","PresharedKey","SignedCertificateTimestamp","EarlyData","HelloRequest","ClientHello","ServerHello","ServerKeyExchange","CertificateRequest","CertificateVerify","ServerHelloDone","EndOfEarlyData","ClientKeyExchange","NewSessionTicket","EncryptedExtensions","MessageHash","NamedGroups","PSKKeyExchangeModes","signaturealgorithm","supportedsignatureschemes","serverextension","ChangeCipherSpec","master_secret","extended_ms","SigningKey","tlserror","certifiedkey","rsasigningkey","DistinguishedNames","get_alpn_protocol","protocolversion","supportedciphersuite","rustls::internal::msgs::codec","rustls::internal::msgs::base","rustls::internal::msgs::enums","rustls::internal::msgs::alert","rustls::internal::msgs::handshake","rustls::internal::msgs::ccs","rustls::internal::msgs::message","rustls::internal::msgs::persist","rustls::internal::msgs::deframer","rustls::internal::msgs::fragmenter","rustls::internal::msgs::hsjoiner","rustls::sign","alertmessagepayload","vecu16ofpayloadu8","vecu16ofpayloadu16","ecpointformatlist","namedgroups","servernamerequest","keyshareentry","presharedkeyidentity","presharedkeyidentities","presharedkeyoffer","ocspcertificatestatusrequest","certificatestatusrequest","pskkeyexchangemodes","keyshareentries","protocolversions","clientextension","clienthellopayload","helloretryextension","helloretryrequest","serverhellopayload","certificatepayload","certificateextension","certificateextensions","certificateentry","certificatepayloadtls13","ecparameters","digitallysignedstruct","clientecdhparams","serverecdhparams","ecdheserverkeyexchange","serverkeyexchangepayload","encryptedextensions","clientcertificatetypes","certificaterequestpayload","certreqextension","certreqextensions","certificaterequestpayloadtls13","newsessionticketpayload","newsessionticketextension","newsessionticketextensions","newsessionticketpayloadtls13","certificatestatus","handshakemessagepayload","changecipherspecpayload","clientsessionkey","clientsessionvalue","serversessionvalue","supported","hashalgorithm","supported_verify","supported_sign_tls13","get_hostname","from_strings","as_single_string","get_extensions","Writes TLS messages to `wr`.","process_new_packets","wants_write","is_handshaking","set_buffer_limit","send_close_notify","get_peer_certificates","get_protocol_version","export_keying_material","get_negotiated_ciphersuite","writev_tls","wants_read","choose_scheme","payloadu24","payloadu16","payloadu8","clientcertificatetype","compression","contenttype","handshaketype","alertdescription","heartbeatmessagetype","extensiontype","servernametype","namedgroup","ciphersuite","ecpointformat","heartbeatmode","eccurvetype","pskkeyexchangemode","keyupdaterequest","certificatestatustype","alertlevel","namedcurve","servername","serverconfig","clientconfig","Obtain plaintext data received from the peer over this TLS…","Send the plaintext `buf` to the peer, encrypting and…","get_encoding","Convenience function to get the results of `encode()`.","Read one of these from the front of `bytes` and return it.","has_duplicate_extension","Returns true if there is more than one extension of a…","find_extension","get_quic_params_extension","early_data_extension_offered","sessionid","protocolnamelist","get_ecpoints_extension","get_supported_versions","get_sct_list","has_unknown_extension","get_sigalgs_extension","distinguishednames","messagepayload","build_key_update_notify","set_extended_ms_used","complete_io","This function uses `io` to complete any outstanding IO for…","StreamOwned","RootCertStore","ClientConfig","ServerConfig","SupportedCipherSuite","BulkAlgorithm","AllowAnyAuthenticatedClient","AllowAnyAnonymousOrAuthenticatedClient","NoClientAuth","ServerSessionMemoryCache","ResolvesServerCertUsingSNI","ServerSession","ClientSessionMemoryCache","ClientSession","HashAlgorithm","ClientCertificateType","Compression","ContentType","HandshakeType","AlertDescription","HeartbeatMessageType","ExtensionType","ServerNameType","NamedCurve","ECPointFormat","HeartbeatMode","ECCurveType","PSKKeyExchangeMode","KeyUpdateRequest","CertificateStatusType","AlertMessagePayload","UnknownExtension","KeyShareEntry","PresharedKeyIdentity","PresharedKeyOffer","OCSPCertificateStatusRequest","ClientHelloPayload","ServerHelloPayload","CertificateEntry","CertificatePayloadTLS13","ECParameters","DigitallySignedStruct","ClientECDHParams","ServerECDHParams","ECDHEServerKeyExchange","CertificateRequestPayload","CertificateRequestPayloadTLS13","NewSessionTicketPayload","NewSessionTicketPayloadTLS13","HandshakeMessagePayload","ServerNamePayload","ClientExtension","ServerExtension","HelloRetryExtension","CertificateExtension","KeyExchangeAlgorithm","ServerKeyExchangePayload","CertReqExtension","NewSessionTicketExtension","HandshakePayload","SupportedPointFormats","SupportedGroups","DecomposedSignatureScheme","SupportedMandatedSignatureSchemes","ConvertServerNameList","ConvertProtocolNameList","HasServerExtensions","BorrowMessage","MessagePayload","ClientSessionValue","ServerSessionValue","MessageDeframer","HandshakeJoiner","CertifiedKey","RSASigningKey","StoresClientSessions","ResolvesClientCert","StoresServerSessions","ResolvesServerCert","ProducesTickets","NoClientSessionStorage","NoServerSessionStorage","ChangeCipherSpecPayload","ClientSessionKey","MessageFragmenter","VecU16OfPayloadU8","VecU16OfPayloadU16","ECPointFormatList","SupportedSignatureSchemes","ServerNameRequest","PresharedKeyIdentities","KeyShareEntries","ProtocolVersions","CertificatePayload","CertificateExtensions","ClientCertificateTypes","CertReqExtensions","NewSessionTicketExtensions","ProtocolNameList","tlsservertrustanchors","get_type","tokio_threadpool","blockingerror","tokio_threadpool::park","DefaultPark","BlockingError","DefaultUnpark","Error returned by [`ParkThread`]","ParkError","Shutdown","synstructure","discriminant","Runs the passed-in function once for each bound field,…","referenced_ty_params","Returns a list of the type parameters which are referenced…","Returns a reference to the underlying `syn` AST node which…","Updates the `BindStyle` for each of the passed-in fields…","binding_name","Updates the binding name for each fo the passed-in fields…","NOTE: This methods' features are superceded by…","bindinginfo","variantast","variantinfo","addbounds","BindingInfo","VariantInfo","flexi_logger","All messages are duplicated.","A logline-formatter that produces log lines like…","logspecification","flexiloggererror","Returns a log specification based on the value of the…","logspecbuilder","Adds a log level filter, or updates the log level filter,…","Creates a Logger that reads the LogSpecification from the…","reconfigurationhandle","Specifies a folder for the log files.","This option only has an effect if `log_to_file` is set to…","Allows specifying a new LogSpecification for the current…","Allows temporarily pushing a new LogSpecification for the…","print_message","formatfunction","filelogwriterbuilder","suppress_timestamp","Makes the logger not include a timestamp into the names of…","rotate_over_size","Prevents indefinite growth of log files.","create_symlink","The specified String will be used on linux systems to…","filelogwriter","o_print_message","o_directory","o_timestamp","o_rotate_over_size","o_discriminant","The specified String is added to the log file name.","o_create_symlink","flexi_logger::writers","FlexiLoggerError","LogSpecification","LogSpecBuilder","ReconfigurationHandle","FileLogWriterBuilder","FileLogWriter","The \"payload\" of a log message.","An enum representing the available verbosity levels of the…","An enum representing the available verbosity level filters…","A level lower than all log levels.","Corresponds to the `Error` log level.","Corresponds to the `Warn` log level.","Corresponds to the `Info` log level.","Corresponds to the `Debug` log level.","Corresponds to the `Trace` log level.","Flushes any buffered records.","Returns the most verbose logging level.","to_level_filter","Converts the `Level` to the equivalent `LevelFilter`.","Returns the most verbose logging level filter.","Converts `self` to the equivalent `Level`.","The message body.","Metadata about the log directive.","The module path of the message.","The source file containing the message.","The line containing the message.","parking_lot","Waits on this condition variable for a notification,…","waittimeoutresult","An RAII mutex guard returned by `MutexGuard::map`, which…","A mutual exclusion primitive useful for protecting shared…","MutexGuard","An RAII implementation of a \"scoped lock\" of a mutex. When…","An RAII mutex guard returned by…","A mutex which can be recursively locked by a single thread.","An RAII implementation of a \"scoped lock\" of a reentrant…","An RAII read lock guard returned by…","An RAII write lock guard returned by…","A reader-writer lock","RAII structure used to release the shared read access of a…","RAII structure used to release the upgradable read access…","RAII structure used to release the exclusive write access…","nonzero_thread_id","lock_exclusive","try_lock_exclusive","unlock_exclusive","lock_shared","try_lock_shared","unlock_shared","unlock_shared_fair","unlock_exclusive_fair","try_lock_shared_for","try_lock_shared_until","try_lock_exclusive_for","try_lock_exclusive_until","lock_shared_recursive","try_lock_shared_recursive","try_lock_shared_recursive_for","try_lock_shared_recursive_until","lock_upgradable","try_lock_upgradable","unlock_upgradable","unlock_upgradable_fair","downgrade_upgradable","try_lock_upgradable_until","try_lock_upgradable_for","WaitTimeoutResult","RawRwLock","RawThreadId","tokio_codec","bytescodec","linescodec","framedparts","Returns a reference to the underlying I/O stream wrapped…","Returns a mutable reference to the underlying I/O stream…","Returns a reference to the underlying decoder.","Returns a mutable reference to the underlying decoder.","FramedParts","FramedWrite","write_buf","tokio_async_await","An extension trait which adds utility methods to…","tokio_async_await::io","tokio_async_await::sink","tokio_async_await::stream","AsyncReadExt","AsyncWriteExt","A future used to fully flush an I/O object.","Tries to read some bytes directly into the given `buf` in…","Creates a future which will read exactly enough bytes to…","ReadExact","tokio_rustls","clientsession","serversession","tlsconnector","tlsacceptor","TlsConnector","TlsAcceptor","Queries the file system metadata for a path.","MetadataFuture","OpenOptions","Options and flags which can be used to configure how a…","openoptions","tokio_fs::file","from_std","Seek to an offset, in bytes, in a stream.","metadatafuture","Queries metadata about the underlying file.","Create a new `File` instance that shares the same…","permissions","poll_metadata","tokio_fs::os::unix","tokio_fs","CreateDirFuture","CreateDirAllFuture","HardLinkFuture","ReadDirFuture","ReadLinkFuture","RemoveDirFuture","RemoveFileFuture","RenameFuture","SetPermissionsFuture","SymlinkMetadataFuture","CloneFuture","CreateFuture","SymlinkFuture","failure_derive","tokio_reactor","poll_read_ready","poll_write_ready","setfallbackerror","background","PollEvented","SetFallbackError","shutdown_on_idle","shutdown_now","Attempts to downcast this `Error` to a particular `Fail`…","Returns a reference to the underlying cause of this…","downcast_ref","downcast_mut","Attempts to downcast this failure to a concrete type by…","find_root_cause","iter_causes","Returns a iterator over all fails up the chain from the…","Deprecated alias to `find_root_cause`.","SyncFailure","Backtrace","Unimplemented","total_size","whichreader","has_unimplemented","has_resolve","has_release","has_obsolete_save","has_bootstrap","has_obsolete_delete","has_provide","has_disembargo","whichbuilder","capnp_rpc::rpc_capnp","reborrow_as_reader","get_question_id","get_deprecated_object_id","has_deprecated_object_id","Pipeline","WhichReader","WhichBuilder","has_third_party","capnp_rpc::rpc_capnp::call","set_question_id","get_interface_id","get_method_id","get_send_results_to","get_allow_third_party_tail_call","get_target","get_params","get_answer_id","get_release_param_caps","has_results","has_exception","has_accept_from_third_party","get_release_result_caps","get_promise_id","set_exception","init_exception","get_reference_count","set_provide","capnp_rpc::rpc_capnp::disembargo","has_target","init_target","get_context","set_target","get_recipient","has_recipient","get_provision","has_provision","get_embargo","get_key_part","has_key_part","has_promised_answer","get_content","has_content","get_cap_table","has_cap_table","has_receiver_answer","has_third_party_hosted","GetPointerField","capnp_rpc::rpc_capnp::promised_answer","get_transform","has_transform","get_vine_id","Disconnected","get_obsolete_is_callers_fault","get_obsolete_durability","capnp_rpc::rpc_twoparty_capnp","get_join_id","set_join_id","get_part_count","get_part_num","get_succeeded","capnp_rpc","outgoingmessage","vatnetwork","capnp_rpc::rpc_capnp::message","capnp_rpc::rpc_capnp::bootstrap","capnp_rpc::rpc_capnp::call::send_results_to","capnp_rpc::rpc_capnp::return_","capnp_rpc::rpc_capnp::finish","capnp_rpc::rpc_capnp::resolve","capnp_rpc::rpc_capnp::release","capnp_rpc::rpc_capnp::disembargo::context","capnp_rpc::rpc_capnp::provide","capnp_rpc::rpc_capnp::accept","capnp_rpc::rpc_capnp::join","capnp_rpc::rpc_capnp::message_target","capnp_rpc::rpc_capnp::payload","capnp_rpc::rpc_capnp::cap_descriptor","capnp_rpc::rpc_capnp::promised_answer::op","capnp_rpc::rpc_capnp::third_party_cap_descriptor","capnp_rpc::rpc_capnp::exception","capnp_rpc::rpc_twoparty_capnp::vat_id","capnp_rpc::rpc_twoparty_capnp::provision_id","capnp_rpc::rpc_twoparty_capnp::recipient_id","capnp_rpc::rpc_twoparty_capnp::third_party_cap_id","capnp_rpc::rpc_twoparty_capnp::join_key_part","capnp_rpc::rpc_twoparty_capnp::join_result","capnp_rpc::twoparty","connection","drive_until_shutdown","into_internal_struct_reader","struct_size","captable","imbue_mut","VatNetwork","OutgoingMessage","IncomingMessage","ImbuedMessageBuilder","Attempt to accept a connection and create a new connected…","Creates a new `TcpStream` from the pending socket inside…","connectfuture","peer_addr","keepalive","TcpStream","ConnectFuture","UnixStream","Creates an unnamed pair of connected sockets.","Connects the socket to the specified address.","Returns the address of this socket's peer.","Sends data on the socket to the specified address.","Sends data on the socket to the socket's peer.","Shut down the read, write, or both halves of this…","Test whether this socket is ready to be read or not.","poll_accept","poll_accept_std","Consumes this listener, returning a stream of the sockets…","Connects to the socket named by `path`.","Test whether this socket is ready to be written to or not.","Returns the socket address of the local half of this…","Returns the socket address of the remote half of this…","UnixDatagramFramed","A unified `Stream` and `Sink` interface to an underlying…","A future used to write the entire contents of some data to…","Connects the UDP socket setting the default destination…","Sends data on the socket to the remote address to which it…","Sends data on the socket to the given address. On success,…","Creates a future that will write the entire contents of…","Receives data from the socket. On success, returns the…","UdpSocket","Returns the local address that this socket is bound to.","poll_recv_from","poll_send_to","RecvDgram","SendDgram","hidapi::HidError","hidresult","hiddevice","Input reports are returned to the host through the…","Get The Manufacturer String from a HID device.","HidDeviceInfo","serial_number","little_endian","native_endian","max_frame_length","lengthdelimitedcodec","A reference to an open file on the filesystem.","An error returned when an operation could not be completed…","initializer","An I/O object representing a TCP socket listening for…","An I/O object representing a TCP stream connected to a…","An I/O object representing a UDP socket.","tokio::net","An I/O object representing a Unix datagram socket.","A Unix socket which can accept connections from other Unix…","A structure representing a connected Unix socket.","Read bytes asynchronously.","Writes bytes asynchronously.","Initiates or attempts to shut down this writer, returning…","The `Read` trait allows for reading bytes from a source.","read_vectored","Like `read`, except that it reads into a slice of buffers.","Determines if this `Read`er can work with buffers of…","Read all bytes until EOF in this source, placing them into…","read_to_string","Read all bytes until EOF in this source, appending them to…","read_exact","Read the exact number of bytes required to fill `buf`.","Transforms this `Read` instance to an [`Iterator`] over…","Creates an adaptor which will chain this stream with…","A trait for objects which are byte-oriented sinks.","Write a buffer into this writer, returning how many bytes…","write_vectored","Like `write`, except that it writes from a slice of buffers.","Flush this output stream, ensuring that all intermediately…","Attempts to write an entire buffer into this writer.","Writes a formatted string into this writer, returning any…","tokio::prelude","tokio::prelude::stream","Trait for types which are a placeholder of a value that…","The type of value that this future will resolved with if…","The type of error that this future will resolve with if it…","Query this future to see if its value has become…","Block the current thread until this future is resolved.","Map this future's result to a different type, returning a…","Map this future's error to a different error, returning a…","Map this future's error to any error implementing `From`…","Chain on a computation for when a future finished, passing…","Execute another future after this one has resolved…","Execute another future if this one resolves with an error.","Waits for either one of two futures to complete.","Waits for either one of two differently-typed futures to…","Joins the result of two futures, waiting for them both to…","into_stream","Convert this future into a single element stream.","flatten_stream","flattenstream","Fuse a future such that `poll` will never again be called…","Catches unwinding panics while polling the future.","Create a cloneable handle to this future where all handles…","Class of types which can be converted into a future.","The future that this type can be converted into.","The item that the future may resolve with.","The error that the future may resolve with.","Consumes this object and produces a future.","A stream of values, not all of which may have been…","The type of item this stream will yield on success.","The type of error this stream may generate.","Attempt to pull out the next value of this stream,…","Creates an iterator which blocks the current thread until…","Converts this stream into a `Future`.","streamfuture","Converts a stream of type `T` to a stream of type `U`.","Converts a stream of error type `T` to a stream of error…","Filters the values produced by this stream according to…","Filters the values produced by this stream while…","Chain on a computation for when an error happens, passing…","Collect all of the values of this stream into a vector,…","Execute an accumulating computation over a stream,…","Flattens a stream of streams into just one continuous…","Skip elements on this stream while the predicate provided…","Take elements from this stream while the predicate…","Runs this stream to completion, executing the provided…","Map this stream's error to any error implementing `From`…","Creates a new stream of at most `amt` items of the…","Creates a new stream which skips `amt` items of the…","Fuse a stream such that `poll` will never again be called…","Borrows a stream, rather than consuming it.","Catches unwinding panics while polling the stream.","An adaptor for creating a buffered list of pending futures.","buffer_unordered","An adaptor for creating a buffered list of pending futures…","bufferunordered","An adapter for zipping two streams together.","Adapter for chaining two stream.","Creates a new stream which exposes a `peek` method.","An adaptor for chunking up items of the stream inside a…","Creates a stream that selects the next element from either…","Splits this `Stream + Sink` object into separate `Stream`…","Do something with each item of this stream, afterwards…","inspect_err","Do something with the error of this stream, afterwards…","tokio::sync::mpsc","tokio::sync","tokio::sync::oneshot","tokio::sync::watch","tokio::timer","Creates a new future which allows `self` until `timeout`.","Throttle down the stream by enforcing a fixed delay…","Creates a new stream which gives the current iteration…","enumerate","Creates a new stream which allows `self` until `timeout`.","An extension trait for `Future` that provides a variety of…","tokio::util","An extension trait for `Stream` that provides a variety of…","Start the Tokio runtime using the supplied future to…","tokio::runtime","Returns a new runtime builder initialized with default…","Set the `Clock` instance that will be used by the runtime.","Create the configured `Runtime`.","Spawn a future onto the Tokio runtime.","block_on_all","tokio::codec","tokio::codec::length_delimited","tokio::fs::file","tokio::fs","tokio::fs::os::unix","tokio::net::tcp","tokio::net::udp","tokio::net::unix","tokio::prelude::future","tokio::prelude::stream::futures_unordered","tokio::prelude::task","tokio::reactor","tokio::sync::mpsc::error","tokio::sync::oneshot::error","tokio::sync::watch::error","tokio::timer::delay_queue","tokio::timer::timeout","tokio::executor","tokio::runtime::current_thread","tokio::io","framedwrite","pollevented","LengthDelimitedCodec","AsyncWrite","StreamAsyncExt","FrameTooBig","FutureSender","PollEvented2","A future which will copy all data from a reader into a…","A future which can be used to easily read exactly enough…","A future which can be used to easily read the entire…","A future which can be used to easily read the contents of…","A future used to fully shutdown an I/O object.","Combinator created by the top-level `lines` method which…","The readable half of an object returned from…","The writable half of an object returned from…","Creates a future which represents copying all the bytes…","Creates a future which will entirely flush an I/O object…","Creates a future which will entirely shutdown an I/O…","write_all","Creates a new stream from the I/O object given…","Returns the underlying I/O object.","Reunite with a previously split `WriteHalf`.","Reunite with a previously split `ReadHalf`.","AsyncRead","read_buf","poll_write","poll_flush","write_fmt","poll_read","WriteHalf","ReadToEnd","ReadUntil","TCP bindings for `tokio`.","Stream returned by the `TcpListener::incoming` function…","Future returned by `TcpStream::connect` which will resolve…","Create a new TCP listener associated with this event loop.","Create a new TCP listener from the standard library's TCP…","Returns the local address that this listener is bound to.","Create a new TCP stream connected to the specified address.","Create a new `TcpStream` from a `net::TcpStream`.","connect_std","Check the TCP stream's read readiness state.","Check the TCP stream's write readiness state.","Returns the local address that this stream is bound to.","Returns the remote address that this stream is connected…","Reads the linger duration for this socket by getting the…","UDP bindings for `tokio`.","UdpFramed","A future used to receive a datagram from a UDP socket.","Create a new `UdpFramed` backed by the given socket and…","Consumes the `Framed`, returning its underlying I/O stream.","This function will create a new UDP socket and attempt to…","Creates a new `UdpSocket` from the previously bound socket…","Receives a single datagram message on the socket from the…","send_dgram","recv_dgram","Creates a future that receive a datagram to be written to…","Check the UDP socket's read readiness state.","Check the UDP socket's write readiness state.","into_parts","Consume the `RecvDgram`, returning the socket and buffer.","Incoming","Stream of listeners","A future for receiving datagrams from a Unix datagram…","A future for writing a buffer to a Unix datagram socket.","Future returned by `UnixStream::connect` which will…","Credentials of a process","UID (user ID) of the process","GID (group ID) of the process","Creates a new `UnixDatagram` bound to the specified path.","Consumes a `UnixDatagram` in the standard library and…","Creates a new `UnixDatagram` which is not bound to any…","poll_recv","Returns a future for receiving a datagram. See the…","recvdgram","poll_send","Returns a future sending the data in buf to the socket at…","senddgram","Create a new `UnixDatagramFramed` backed by the given…","unixdatagramframed","Creates a new `UnixListener` bound to the specified path.","Consumes a `UnixListener` in the standard library and…","incoming","Consumes a `UnixStream` in the standard library and…","Returns effective credentials of the process which called…","SpawnError","Errors returned by `Executor::spawn`.","Executes futures on the default executor for the current…","Return a new `SpawnError` reflecting a shutdown executor…","Return a new `SpawnError` reflecting an executor at…","Returns `true` if the error reflects a shutdown executor…","Returns `true` if the error reflects an executor at…","Returns a handle to the default executor for the current…","Executor","A value that executes futures.","Spawns a future object to run on this executor.","A value that spawns futures of a specific type.","Spawns a future to run on this executor.","Return type of future, indicating whether a value is ready…","Represents that a value is immediately ready.","Represents that a value is not ready yet, but may be so…","The result of an asynchronous attempt to send a value to a…","The `start_send` attempt succeeded, so the sending process…","The `start_send` attempt failed due to the sink being…","Change the success value of this `Async` with the closure…","Returns whether this is `Async::Ready`","Returns whether this is `Async::NotReady`","Change the NotReady value of this `AsyncSink` with the…","Returns whether this is `AsyncSink::Ready`","Returns whether this is `AsyncSink::NotReady`","A future which is never resolved.","A future which defers creation of the actual future until…","A future which adapts a function returning `Poll`.","A future representing a value that is immediately ready.","A future implementing a tail-recursive loop.","Future for the `and_then` combinator, chaining a…","Future for the `flatten` combinator, flattening a…","Future for the `flatten_stream` combinator, flattening a…","A future which \"fuses\" a future once it's been resolved.","Future that forwards one element from the underlying…","Future for the `join` combinator, waiting for two futures…","Future for the `join3` combinator, waiting for three…","Future for the `join4` combinator, waiting for four…","Future for the `join5` combinator, waiting for five…","Future for the `map` combinator, changing the type of a…","Future for the `map_err` combinator, changing the error…","Future for the `from_err` combinator, changing the error…","Future for the `or_else` combinator, chaining a…","Future for the `select` combinator, waiting for one of two…","Future yielded as the second result in a `Select` future.","Future for the `select2` combinator, waiting for one of…","Future for the `then` combinator, chaining computations on…","Future for the `catch_unwind` combinator.","A future which takes a list of futures and resolves with a…","Future for the `select_all` combinator, waiting for one of…","Future for the `select_ok` combinator, waiting for one of…","A future that is cloneable and can be polled in multiple…","A wrapped item of the original future that is cloneable…","A wrapped error of the original future that is cloneable…","Errors returned from the `Spawn::spawn` function.","The status of a `loop_fn` loop.","Indicates that the loop has completed with output `T`.","Indicates that the loop function should be called again…","Combines two different futures yielding the same item and…","First branch of the type","Second branch of the type","Kinds of errors that can be returned from the…","This executor has shut down and will no longer accept new…","This executor has no more capacity to run more futures.…","Creates a future which never resolves, representing a…","Creates a new future which will eventually be the same as…","Creates a new future wrapping around a function returning…","Creates a new \"leaf future\" which will resolve with the…","Creates a new future implementing a tail-recursive loop.","Creates a future which represents a collection of the…","Creates a new future which will select over a list of…","Creates a new future which will select the first…","Returns whether the underlying future has finished or not.","Splits out the homogeneous type from an either of tuples.","If any clone of this `Shared` has completed execution,…","intostream","Asynchronous conversion from a type `T`.","The future for the conversion.","Possible errors during conversion.","future_from","Consume the given value, beginning the conversion.","A trait for types which can spawn fresh futures.","Spawns a future to run on this `Executor`, typically in…","Create a new `ExecuteError`","Returns the associated reason for the error","Consumes self and returns the original future that was…","Asynchronous streams","Stream that produces the same element repeatedly.","A stream combinator which chains a computation onto values…","An adapter for chaining the output of two streams.","A stream which contains no elements.","A stream combinator used to filter the results of a stream…","A combinator used to filter the results of a stream and…","A combinator used to flatten a stream-of-streams into one…","A future used to collect all the results of a stream into…","A stream combinator which executes a unit closure over…","A stream combinator to change the error type of a stream.","A stream which \"fuse\"s a stream once it's terminated.","A combinator used to temporarily convert a stream into a…","Do something with the items of a stream, passing it on.","Do something with the error of a stream, passing it on.","A stream combinator which will change the type of a stream…","A stream combinator which will change the error type of a…","A stream which emits single element and then EOF.","A stream combinator which chains a computation onto errors…","A `Stream` that implements a `peek` method.","A stream which adapts a function returning `Poll`.","A stream combinator which skips a number of elements…","A stream combinator which skips elements of a stream while…","A stream combinator which returns a maximum number of…","A stream combinator which chains a computation onto each…","A stream which creates futures, polls them and return…","Future for the `Stream::forward` combinator, which sends a…","Stream for the `catch_unwind` combinator.","An adaptor that chunks up elements in a vector.","A future which collects all of the values of a stream into…","A stream combinator which converts an asynchronous stream…","A `Stream` part of the split pair","A `Sink` part of the split pair","Error indicating a `SplitSink<S>` and `SplitStream<S>`…","An unbounded queue of futures.","An item returned from a merge stream, which represents an…","An item from the first stream","An item from the second stream","Items from both streams","Converts an `Iterator` into a `Stream` which is always…","iter_result","Create a stream which produces the same item repeatedly.","Creates a stream which contains no elements.","Creates a stream of single element","Creates a new stream wrapping around a function returning…","Creates a `Stream` from a seed and a closure returning a…","futures_ordered","Returns whether the underlying stream has finished or not.","Peek retrieves a reference to the next item in the stream.","Get a shared reference to the inner sink. If this…","Get a mutable reference to the inner sink. If this…","Get a shared reference to the inner stream. If this…","Get a mutable reference to the inner stream. If this…","splitstream","Mutable iterator over all futures in the unordered set.","Constructs a new, empty `FuturesUnordered`","Returns the number of futures contained in the set.","Returns `true` if the set contains no futures","Push a future into the set.","Returns an iterator that allows modifying each future in…","Constructs a new, empty `FuturesOrdered`","Returns the number of futures contained in the queue.","Returns `true` if the queue contains no futures","Push a future into the queue.","filter_map","skip_while","take_while","inspecterr","A `Sink` is a value into which other values can be sent,…","The type of value that the sink accepts.","The type of value produced by the sink when an error occurs.","Begin the process of sending a value to the sink.","Flush all output from this sink, if necessary.","A method to indicate that no more values will ever be…","Creates a new object which will produce a synchronous sink.","with_flat_map","withflatmap","sink_map_err","Transforms the error returned by the sink.","sink_from_err","Map this sink's error to any error implementing `From` for…","Adds a fixed-size buffer to the current sink.","Fanout items to multiple sinks.","A future that completes when the sink has finished…","A future that completes after the given item has been…","Tasks used to drive a future computation","A handle to a \"task\", which represents a single…","A key for task-local data stored in a future's task.","A set insertion to trigger upon `unpark`.","Returns a handle to the current task to call `notify` at a…","Initialize the `futures` task system.","with_unpark_event","For the duration of the given callback, add an \"unpark…","A concurrent set which allows for the insertion of `usize`…","Insert the given ID into the set","Representation of a spawned future/stream.","Spawns a future or stream, returning it and the new task…","A trait which represents a sink of notifications that a…","Indicates that an associated future and/or task are ready…","Future-aware synchronization","Return type of the `Future::poll` method, indicates…","unboundedsender","Access this task-local key, running the provided closure…","wait_future","Waits for the internal future to complete, blocking this…","wait_stream","Like `wait_future`, except only waits for the next element…","Blocks the current thread until it's able to send `value`…","Blocks the current thread until it's able to flush this…","Blocks the current thread until it's able to close this…","Construct an unpark event that will insert `id` into `set`…","Indicate that the task should attempt to poll its future…","Returns `true` when called from within the context of the…","will_notify_current","This function is intended as a performance optimization…","Get a shared reference to the object the Spawn is wrapping.","Get a mutable reference to the object the Spawn is wrapping.","Consume the Spawn, returning its inner object","poll_fn_notify","Calls the provided closure, scheduling notifications to be…","poll_future_notify","Polls the internal future, scheduling notifications to be…","poll_stream_notify","Like `poll_future_notify`, except polls the underlying…","start_send_notify","Invokes the underlying `start_send` method with this task…","poll_flush_notify","Invokes the underlying `poll_complete` method with this…","close_notify","Invokes the underlying `close` method with this task in…","Executes futures on the current thread.","Handle to spawn a future on the corresponding…","Executes a future on the current thread.","Returns an executor that executes futures on the current…","spawn_local","Spawn a future onto the current `CurrentThread` instance.","Utilities for tracking time.","A future that completes at a specified instant in time.","Errors encountered by the timer implementation.","A stream representing notifications at fixed interval","A configurable source of time.","Returns an `Instant` corresponding to \"now\".","delay_queue","An entry in `DelayQueue` that has expired and removed.","Token to a value stored in a `DelayQueue`.","Create a new, empty, `DelayQueue`","with_capacity_and_handle","Create a new, empty, `DelayQueue` backed by the specified…","Create a new, empty, `DelayQueue` with the specified…","Insert `value` into the queue set to expire at a specific…","Insert `value` into the queue set to expire after the…","Remove the item associated with `key` from the queue.","Clears the queue, removing all items.","Returns the number of elements the queue can hold without…","Reserve capacity for at least `additional` more items to…","Returns `true` if there are no items in the queue.","Returns a reference to the inner value.","Consumes `self` and returns the inner value.","throttle","Allows a future or stream to execute for a maximum amount…","Error returned by `Timeout`.","Create a new `Timeout` that allows `value` to execute for…","Gets a reference to the underlying value in this timeout.","Gets a mutable reference to the underlying value in this…","Consumes this timeout, returning the underlying value.","Create a new `Timeout` that completes when `future`…","Create a new `Error` representing the inner value…","Consumes `self`, returning the inner future error.","Create a new `Error` representing the inner value not…","is_elapsed","Creates a new `Error` representing an error encountered by…","Returns `true` if the error was caused by the timer.","Consumes `self`, returning the error raised by the timer…","Create a new `Delay` instance that elapses at `deadline`.","Returns the instant at which the future will complete.","Returns true if the `Delay` has elapsed","Reset the `Delay` instance to a new deadline.","Create an error representing a shutdown timer.","Create an error representing a timer at capacity.","new_interval","Creates new `Interval` that yields with interval of…","name_prefix","stack_size","Set the stack size (in bytes) for worker threads.","after_start","Execute function `f` after each thread is started but…","before_stop","Execute function `f` before each thread stops.","Utilities for encoding and decoding frames.","Decoding of frames via buffers.","The type of decoded frames.","The type of unrecoverable frame decoding errors.","Attempts to decode a frame from the provided buffer of…","decode_eof","A default method available to be called when there are no…","Trait of helper objects to write out messages as bytes,…","The type of items consumed by the `Encoder`","The type of encoding errors.","Encodes a frame into the buffer provided.","`FramedParts` contains an export of the data of a Framed…","The inner transport used to read bytes to and write bytes to","The buffer with read but unprocessed data.","A buffer with unprocessed data which are not written yet.","FramedRead","A `Stream` of messages decoded from an `AsyncRead`.","A `Sink` of frames encoded to an `AsyncWrite`.","BytesCodec","A simple `Codec` implementation that just ships bytes…","LinesCodec","A simple `Codec` implementation that splits up data into…","Creates a new `BytesCodec` for shipping around raw bytes.","Returns a `LinesCodec` for splitting up data into lines.","new_with_max_length","Returns a `LinesCodec` with a maximum line length limit.","Returns the maximum line length when decoding.","Returns a reference to the underlying codec wrapped by…","Returns a mutable reference to the underlying codec…","Consumes the `Frame`, returning its underlying I/O stream.","Consumes the `Frame`, returning its underlying I/O stream,…","Create a new, default, `FramedParts`","Creates a new `FramedRead` with the given `decoder`.","framedread","Consumes the `FramedRead`, returning its underlying I/O…","decoder_mut","Creates a new `FramedWrite` with the given `encoder`.","Consumes the `FramedWrite`, returning its underlying I/O…","encoder_mut","read_exact_async","readexact","write_async","Write data into this object.","write_all_async","Write an entire buffer into this object.","flush_async","Creates a future which will entirely flush this…","An extension trait which adds utility methods to `Sink`…","Send an item into the sink.","An extension trait which adds utility methods to `Stream`…","Creates a future that resolves to the next item in the…","Wait for a future to complete.","A future used to open a file and read its entire contents…","A handle to the standard error stream of a process.","A handle to the standard input stream of a process.","A handle to the standard output stream of a process.","A future used to open a file for writing and write the…","Creates a new, empty directory at the provided path","createdirfuture","create_dir_all","Recursively create a directory and all of its parent…","createdirallfuture","Creates a new hard link on the filesystem.","hardlinkfuture","Creates a future which will open a file for reading and…","Returns a stream over the entries within a directory.","readdirfuture","Reads a symbolic link, returning the file that the link…","readlinkfuture","Removes an existing, empty directory.","removedirfuture","remove_file","Removes a file from the filesystem.","removefilefuture","Rename a file or directory to a new name, replacing the…","renamefuture","set_permissions","Changes the permissions found on a file or a directory.","setpermissionsfuture","Constructs a new handle to the standard error of the…","Constructs a new handle to the standard input of the…","Constructs a new handle to the standard output of the…","symlink_metadata","symlinkmetadatafuture","Creates a future that will open a file for writing and…","Types for working with [`File`].","Future returned by `File::try_clone`.","Future returned by `File::create` and resolves to a `File`…","Future returned by `File::metadata` and resolves to a…","OpenFuture","Future returned by `File::open` and resolves to a `File`…","SeekFuture","Future returned by `File::seek`.","Creates a blank new set of options ready for configuration.","See the underlying [`read`] call for details.","See the underlying [`write`] call for details.","See the underlying [`append`] call for details.","See the underlying [`truncate`] call for details.","See the underlying [`create`] call for details.","See the underlying [`create_new`] call for details.","Opens a file at `path` with the options specified by `self`.","openfuture","Attempts to open a file in read-only mode.","Opens a file in write-only mode.","createfuture","Convert a [`std::fs::File`][std] to a…","poll_sync_all","Attempts to sync all OS-internal metadata to disk.","poll_sync_data","This function is similar to `poll_sync_all`, except that…","poll_set_len","Truncates or extends the underlying file, updating the…","poll_try_clone","clonefuture","poll_set_permissions","Changes the permissions on the underlying file.","Destructures the `tokio_fs::File` into a…","OS-specific functionality.","Unix-specific extensions to primitives in the `tokio_fs`…","Future returned by `symlink`.","Creates a new symbolic link on the filesystem.","symlinkfuture","WriteFile","Event loop that drives Tokio I/O resources.","Background","Handle to the reactor running on a background thread.","Associates an I/O resource that implements the…","Associates an I/O resource with the reactor instance that…","The core reactor, or event loop.","A reference to a reactor.","Return value from the `turn` method on `Reactor`.","Returns a reference to the reactor handle.","Shutdown the reactor on idle.","Shutdown the reactor immediately","Run the reactor on its thread until the process terminates.","Creates a new `PollEvented` associated with the default…","new_with_handle","Creates a new `PollEvented` associated with the specified…","Returns a shared reference to the underlying I/O object…","Returns a mutable reference to the underlying I/O object…","Consumes self, returning the inner I/O object","Check the I/O resource's read readiness state.","clear_read_ready","Clears the I/O resource's read readiness state and…","Check the I/O resource's write readiness state.","clear_write_ready","Resets the I/O resource's write readiness state and…","Create a new `Registration`.","registration","Register the I/O resource with the default reactor.","Deregister the I/O resource from the reactor it is…","register_with","Register the I/O resource with the specified reactor.","Poll for events on the I/O resource's read readiness stream.","take_read_ready","Consume any pending read readiness event.","Poll for events on the I/O resource's write readiness…","take_write_ready","Consume any pending write readiness event.","Creates a new event loop, returning any error that…","Returns a handle to this event loop which can be sent…","set_fallback","Configures the fallback handle to be returned from…","Performs one iteration of the event loop, blocking on…","Returns true if the reactor is currently idle.","Run this reactor on a background thread.","Returns a \"default\" handle, i.e., a handle that lazily…","A multi-producer, single-consumer queue for sending values…","Receive values from the associated `Sender`.","Send values to the associated `Receiver`.","Receive values from the associated `UnboundedSender`.","Send values to the associated `UnboundedReceiver`.","Create a bounded mpsc channel for communicating between…","unbounded_channel","Create an unbounded mpsc channel for communicating between…","Check if the `Sender` is ready to handle a value.","Attempts to send a message on this `Sender`, returning the…","Attempts to send a message on this `UnboundedSender`…","Channel error types","Error returned by `Receiver`.","Error returned by the `Sender`.","Error returned by `Sender::try_send`.","Error returned by `UnboundedReceiver`.","Error returned by the `UnboundedSender`.","Returned by `UnboundedSender::try_send` when the channel…","A channel for sending a single message between…","Sends a value to the associated `Receiver`.","Receive a value from the associated `Sender`.","Create a new one-shot channel for sending single values…","Oneshot error types","Error returned by the `Future` implementation for…","Error returned by the `try_recv` function on `Receiver`.","Prevent the associated [`Sender`] handle from sending a…","Attempts to receive a value outside of the context of a…","A single-producer, multi-consumer channel that only…","Receives values from the associated `Sender`.","Sends values to the associated `Receiver`.","Returns a reference to the inner value","Create a new watch channel, returning the \"send\" and…","Watch error types","Error produced when receiving a value fails.","Error produced when sending a value fails.","Returns a reference to the most recently sent value","Attempts to receive the latest value sent via the channel.","Broadcast a new value via the channel, notifying all…","Returns `Ready` when all receivers have dropped.","Did the send fail because the channel has been closed?","Did the send fail because the channel was at capacity?","initialize","hid_io::device","hidiomailer","hidiotransport","hidiopacketbuffer","hidioendpoint","send_packet","recv_packet","hidiomessage","hidiomailbox","hid_io::module::unicode","hid_io::module","InputLayout","hidiopackettype","hidioparseerror","hid_io::common_capnp","UsbKeyboard","hid_io::common_capnp::destination","nodetype","get_serial","has_serial","init_serial","get_commands","hid_io::common_capnp::h_i_d_i_o_node","[AUTO GENRATED]","ServerDispatch","hid_io::devicefunction_capnp::device_function","hid_io::devicefunction_capnp::device_function::commands","from_server","into_client","dispatch_call_internal","hid_io::hidiowatcher_capnp","hid_io::hidiowatcher_capnp::h_i_d_i_o_watcher","has_device_packet","has_host_packet","hid_io::hidiowatcher_capnp::h_i_d_i_o_watcher::commands","hid_io::hidio_capnp::h_i_d_i_o_server","hid_io::hidio_capnp","ToClient","_private","hid_io::hidio_capnp::h_i_d_i_o","HidioPacket","set_usb_keyboard","has_usb_keyboard","set_host_macro","has_host_macro","set_hidio_packet","has_hidio_packet","hid_io::hidio_capnp::h_i_d_i_o::signal","get_source","toclient","hid_io::hostmacro_capnp::host_macro","hid_io::hostmacro_capnp::host_macro::signal","get_name","hid_io::hostmacro_capnp::host_macro::commands","hid_io::usbkeyboard_capnp::u_s_b_keyboard","keyeventstate","get_event","get_success","has_key_event","has_scan_code_event","hid_io::usbkeyboard_capnp::u_s_b_keyboard::commands","hid_io::api","hid_io::device::hidusb","hid_io::module::unicode::osx","hid_io::protocol::hidio","hid_io::common_capnp::source","hid_io::common_capnp::destination::commands","hid_io::common_capnp::h_i_d_i_o_node::register_params","hid_io::common_capnp::h_i_d_i_o_node::register_results","hid_io::common_capnp::h_i_d_i_o_node::is_registered_params","hid_io::common_capnp::h_i_d_i_o_node::is_registered_results","hid_io::devicefunction_capnp::device_function::signal","hid_io::hidiowatcher_capnp::h_i_d_i_o_packet","hid_io::hidiowatcher_capnp::h_i_d_i_o_watcher::signal","hid_io::hidio_capnp::h_i_d_i_o_server::basic_params","hid_io::hidio_capnp::h_i_d_i_o_server::basic_results","hid_io::hidio_capnp::h_i_d_i_o_server::auth_params","hid_io::hidio_capnp::h_i_d_i_o_server::auth_results","hid_io::hidio_capnp::h_i_d_i_o::signal::type_","hid_io::hidio_capnp::h_i_d_i_o::signal_params","hid_io::hidio_capnp::h_i_d_i_o::signal_results","hid_io::hidio_capnp::h_i_d_i_o::nodes_params","hid_io::hidio_capnp::h_i_d_i_o::nodes_results","hid_io::hostmacro_capnp::host_macro::signal::macro_num","hid_io::hostmacro_capnp::host_macro::signal::macro_name","hid_io::usbkeyboard_capnp::u_s_b_keyboard::key_event","hid_io::usbkeyboard_capnp::u_s_b_keyboard::key_event_status","hid_io::usbkeyboard_capnp::u_s_b_keyboard::signal","hid_io::usbkeyboard_capnp::u_s_b_keyboard::commands::key_event_params","hid_io::usbkeyboard_capnp::u_s_b_keyboard::commands::key_event_results","hid_io::usbkeyboard_capnp::u_s_b_keyboard::commands::cli_command_params","hid_io::usbkeyboard_capnp::u_s_b_keyboard::commands::cli_command_results","type_string","press_symbol","get_layout","set_layout","hidiocommandid","hidiopropertyid","dispatch_call","HIDIOMessage","HIDIOMailbox","HIDUSBDevice","HIDIOEndpoint","HIDIOController","HIDIOMailer","OSXConnection","UnicodeOutput","HIDIOPacketBuffer","HIDIOPacketType","HIDIOCommandID","HIDIOPropertyID","KeyEventState","HIDIOParseError","destination","get_time"];
searchIndex["atty"]={"doc":"atty is a simple utility that answers one question > is…","i":[[4,"Stream","atty","possible stream sources",N,N],[13,"Stdout",E,E,0,N],[13,"Stderr",E,E,0,N],[13,"Stdin",E,E,0,N],[5,"is",E,"returns true if this is a tty",N,[[["stream"]],["bool"]]],[5,"isnt",E,"returns true if this is not a tty",N,[[["stream"]],["bool"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,"into",E,E,0,[[],[U]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[R[12]]]],[11,"clone",E,E,0,[[["self"]],["stream"]]]],"p":[[4,"Stream"]]};
searchIndex["base64"]={"doc":"Configs","i":[[3,"Config","base64","Contains configuration parameters for base64 encoding",N,N],[4,R[2274],E,"Errors that can occur while decoding.",N,N],[13,"InvalidByte",E,"An invalid byte was found in the input. The offset and…",0,N],[13,"InvalidLength",E,"The length of the input is invalid.",0,N],[4,R[2275],E,"Available encoding character sets",N,N],[13,"Standard",E,"The standard character set (uses `+` and `/`)",1,N],[13,"UrlSafe",E,"The URL safe character set (uses `-` and `_`)",1,N],[13,"Crypt",E,"The `crypt(3)` character set (uses…",1,N],[4,"LineEnding",E,"Line ending used in optional line wrapping.",N,N],[13,"LF",E,"Unix-style \\n",2,N],[13,"CRLF",E,"Windows-style \\r\\n",2,N],[4,"LineWrap",E,"Line wrap configuration.",N,N],[13,"NoWrap",E,"Don't wrap.",3,N],[13,"Wrap",E,"Wrap lines with the specified length and line ending. The…",3,N],[5,"encode",E,"Encode arbitrary octets as base64. Returns a String.…",N,[[[T]],["string"]]],[5,"encode_config",E,"Encode arbitrary octets as base64. Returns a String.",N,[[[T],["config"]],["string"]]],[5,"encode_config_buf",E,R[2266],N,[[["string"],[T],["config"]]]],[5,"encode_config_slice",E,R[2266],N,[[[T],["config"]],[R[9]]]],[5,"decode",E,R[2268],N,[[[T]],[[R[2267]],[R[12],["vec",R[2267]]],["vec",["u8"]]]]],[5,"decode_config",E,R[2268],N,[[[T],["config"]],[[R[2267]],[R[12],["vec",R[2267]]],["vec",["u8"]]]]],[5,"decode_config_buf",E,"Decode from string reference as octets. Writes into the…",N,[[[T],["config"],["vec"]],[[R[12],[R[2267]]],[R[2267]]]]],[5,"decode_config_slice",E,"Decode the input into the provided output slice.",N,[[[T],["config"]],[[R[2267]],[R[12],[R[9],R[2267]]],[R[9]]]]],[0,"display",E,"Enables base64'd output anywhere you might use a `Display`…",N,N],[3,R[2277],R[2272],"A convenience wrapper for base64'ing bytes into a format…",N,N],[4,R[2276],E,"Errors that can occur initializing a Base64Display.",N,N],[13,"InvalidLineLength",E,"If wrapping is configured, the line length must be a…",4,N],[11,"with_config",E,"Create a `Base64Display` with the provided config.",5,[[["config"]],[[R[2269]],[R[12],[R[2270],R[2269]]],[R[2270]]]]],[11,"standard",E,R[2271],5,[[],[R[2270]]]],[11,"url_safe",E,R[2271],5,[[],[R[2270]]]],[17,"STANDARD","base64","Standard character set with padding.",N,N],[17,"STANDARD_NO_PAD",E,"Standard character set without padding.",N,N],[17,"MIME",E,"As per standards for MIME encoded messages",N,N],[17,"URL_SAFE",E,"URL-safe character set with padding",N,N],[17,"URL_SAFE_NO_PAD",E,"URL-safe character set without padding",N,N],[17,"CRYPT",E,"As per `crypt(3)` requirements",N,N],[11,"new",E,"Create a new `Config`.",6,[[["linewrap"],["bool"],[R[2273]]],["config"]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[16],E,E,6,[[["self"]],[T]]],[11,R[17],E,E,6,[[[T],["self"]]]],[11,R[11],E,E,6,[[[U]],[R[12]]]],[11,R[39],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[],[R[12]]]],[11,R[18],E,E,6,[[["self"]],[R[40]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[[T],["self"]]]],[11,R[170],E,E,0,[[["self"]],["string"]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,[[[T],["self"]]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[17],E,E,2,[[[T],["self"]]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[17],E,E,3,[[[T],["self"]]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"from",R[2272],E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[170],E,E,5,[[["self"]],["string"]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,R[18],E,E,5,[[["self"]],[R[40]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,"eq",E,E,4,[[[R[2269]],["self"]],["bool"]]],[11,"eq","base64",E,0,[[[R[2267]],["self"]],["bool"]]],[11,"ne",E,E,0,[[[R[2267]],["self"]],["bool"]]],[11,"clone",E,E,0,[[["self"]],[R[2267]]]],[11,"clone",E,E,1,[[["self"]],[R[2273]]]],[11,"clone",E,E,2,[[["self"]],["lineending"]]],[11,"clone",E,E,3,[[["self"]],["linewrap"]]],[11,"clone",E,E,6,[[["self"]],["config"]]],[11,"fmt",R[2272],E,4,[[[R[29]],["self"]],[R[12]]]],[11,"fmt","base64",E,0,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,1,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,2,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,3,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,6,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[2272],E,5,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt","base64",E,0,[[["self"],[R[29]]],[R[12]]]],[11,R[30],E,E,0,[[["self"]],["str"]]],[11,"cause",E,E,0,[[["self"]],[[R[52],["error"]],["error"]]]]],"p":[[4,R[2274]],[4,R[2275]],[4,"LineEnding"],[4,"LineWrap"],[4,R[2276]],[3,R[2277]],[3,"Config"]]};
searchIndex["bincode"]={"doc":"Bincode is a crate for encoding and decoding using a tiny…","i":[[3,"Config","bincode","A configuration builder whose options Bincode will use…",N,N],[4,R[32],E,"The kind of error that can be produced during a…",N,N],[13,"Io",E,"If the error stems from the reader/writer that is being…",0,N],[13,"InvalidUtf8Encoding",E,R[2278],0,N],[13,"InvalidBoolEncoding",E,R[2278],0,N],[13,"InvalidCharEncoding",E,R[2278],0,N],[13,"InvalidTagEncoding",E,"Returned if the deserializer attempts to deserialize the…",0,N],[13,"DeserializeAnyNotSupported",E,"Serde has a deserialize_any method that lets the format…",0,N],[13,"SizeLimit",E,"If (de)serializing a message takes more than the provided…",0,N],[13,"SequenceMustHaveLength",E,"Bincode can not encode sequences of unknown length (like…",0,N],[13,"Custom",E,"A custom error message from Serde.",0,N],[5,"config",E,"Get a default configuration object.",N,[[],["config"]]],[5,R[2282],E,"Serializes an object directly into a `Writer` using the…",N,[[["w"],[T]],[R[12]]]],[5,R[2289],E,R[2279],N,[[[T]],[[R[12],["vec"]],["vec",["u8"]]]]],[5,R[2284],E,"Deserializes an object directly from a `Read`er using the…",N,[[["r"]],[R[12]]]],[5,R[2285],E,R[2286],N,[[["r"]],[R[12]]]],[5,R[941],E,R[2283],N,[[],[R[12]]]],[5,R[2280],E,R[2281],N,[[[T]],[["u64"],[R[12],["u64"]]]]],[11,"no_limit",E,"Sets the byte limit to be unlimited. This is the default.",1,[[["self"]],["self"]]],[11,"limit",E,"Sets the byte limit to `limit`.",1,[[["self"],["u64"]],["self"]]],[11,R[4707],E,"Sets the endianness to little-endian This is the default.",1,[[["self"]],["self"]]],[11,"big_endian",E,"Sets the endianness to big-endian",1,[[["self"]],["self"]]],[11,R[4708],E,"Sets the endianness to the the machine-native endianness",1,[[["self"]],["self"]]],[11,R[2289],E,R[2279],1,[[[T],["self"]],[[R[12],["vec"]],["vec",["u8"]]]]],[11,R[2280],E,R[2281],1,[[[T],["self"]],[["u64"],[R[12],["u64"]]]]],[11,R[2282],E,"Serializes an object directly into a `Writer` using this…",1,[[[T],["self"],["write"]],[R[12]]]],[11,R[941],E,R[2283],1,[[["self"]],[[R[12]],[R[941]]]]],[11,"deserialize_seed",E,"Deserializes a slice of bytes with state `seed` using this…",1,[[["deserializeseed"],["self"]],[R[12]]]],[11,R[2284],E,"Deserializes an object directly from a `Read`er using this…",1,[[["read"],["self"]],[[R[12]],[R[2287]]]]],[11,R[2285],E,R[2286],1,[[["bincoderead"],["self"]],[[R[12]],[R[2287]]]]],[6,"Error",E,"An error that can be produced during (de)serializing.",N,N],[6,"Result",E,"The result of a serialization or deserialization operation.",N,N],[8,R[2288],E,"An optional Read trait for advanced Bincode usage.",N,N],[10,"forward_read_str",E,"Forwards reading `length` bytes of a string on to the…",2,[[["self"],["v"],[R[9]]],[R[12]]]],[10,"get_byte_buffer",E,"Return the first `length` bytes of the internal byte buffer.",2,[[["self"],[R[9]]],[[R[12],["vec"]],["vec",["u8"]]]]],[10,"forward_read_bytes",E,"Forwards reading `length` bytes on to the serde reader.",2,[[["self"],["v"],[R[9]]],[R[12]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[170],E,E,0,[[["self"]],["string"]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",E,E,3,[[["error"]],["error"]]],[11,"fmt",E,E,0,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[R[12]]]],[11,R[30],E,E,0,[[["self"]],["str"]]],[11,"cause",E,E,0,[[["self"]],[[R[52],["error"]],["error"]]]],[11,"custom",E,E,3,[[["display"]],["self"]]],[11,"custom",E,E,3,[[["display"]],["error"]]]],"p":[[4,R[32]],[3,"Config"],[8,R[2288]],[6,"Error"]]};
searchIndex["bytes"]={"doc":"Provides abstractions for working with bytes.","i":[[8,R[934],"bytes",R[2664],N,N],[10,R[869],E,R[2665],0,[[],["u16"]]],[11,R[889],E,R[2666],0,[[],["u32"]]],[10,R[870],E,R[2667],0,[[],["u32"]]],[11,R[896],E,R[2668],0,[[],["u64"]]],[10,R[871],E,R[2669],0,[[],["u64"]]],[10,R[827],E,R[2670],0,[[],["u128"]]],[10,R[828],E,R[830],0,[[[R[9]]],["u64"]]],[10,R[829],E,R[830],0,[[[R[9]]],["u128"]]],[10,R[831],E,R[2671],0,[[["u16"]]]],[11,R[832],E,R[2672],0,[[["u32"]]]],[10,R[833],E,R[2673],0,[[["u32"]]]],[11,R[834],E,R[2674],0,[[["u64"]]]],[10,R[835],E,R[2675],0,[[["u64"]]]],[10,R[836],E,R[2676],0,[[["u128"]]]],[10,R[837],E,R[839],0,[[["u64"],[R[9]]]]],[10,R[838],E,R[839],0,[[["u128"],[R[9]]]]],[11,R[887],E,R[2677],0,[[],["i16"]]],[11,R[891],E,R[2678],0,[[],["i32"]]],[11,R[894],E,R[2679],0,[[],["i32"]]],[11,R[898],E,R[2680],0,[[],["i64"]]],[11,R[901],E,R[2681],0,[[],["i64"]]],[11,R[840],E,R[2682],0,[[],["i128"]]],[11,R[905],E,R[842],0,[[[R[9]]],["i64"]]],[11,R[841],E,R[842],0,[[[R[9]]],["i128"]]],[11,R[906],E,R[843],0,[[],["f32"]]],[11,R[907],E,R[844],0,[[],["f64"]]],[11,R[845],E,R[2683],0,[[["i16"]]]],[11,R[846],E,R[2684],0,[[["i32"]]]],[11,R[847],E,R[2685],0,[[["i32"]]]],[11,R[848],E,R[2686],0,[[["i64"]]]],[11,R[849],E,R[2687],0,[[["i64"]]]],[11,R[850],E,R[2688],0,[[["i128"]]]],[11,R[851],E,R[853],0,[[["i64"],[R[9]]]]],[11,R[852],E,R[853],0,[[["i128"],[R[9]]]]],[11,R[854],E,R[855],0,[[["f32"]]]],[11,R[856],E,R[857],0,[[["f64"]]]],[10,R[858],E,R[2689],0,[[]]],[10,R[350],E,R[2690],0,[[]]],[10,R[353],E,R[2691],0,[[]]],[10,R[859],E,R[2692],0,[[]]],[11,R[860],E,R[2693],0,[[]]],[11,R[861],E,R[2694],0,[[]]],[11,R[862],E,R[2695],0,[[]]],[11,R[863],E,R[2696],0,[[]]],[11,R[864],E,R[867],0,[[]]],[11,R[865],E,R[824],0,[[]]],[11,R[866],E,R[867],0,[[]]],[11,R[868],E,R[824],0,[[]]],[10,R[872],E,R[2697],0,[[]]],[10,R[873],E,R[2698],0,[[]]],[10,R[874],E,R[2699],0,[[]]],[10,R[875],E,R[2700],0,[[]]],[11,R[2701],E,R[2702],0,[[]]],[11,R[2703],E,R[2704],0,[[]]],[11,R[2705],E,R[2706],0,[[]]],[11,R[2707],E,R[2708],0,[[]]],[11,R[2709],E,R[2710],0,[[]]],[11,R[2711],E,R[2712],0,[[]]],[10,R[876],E,R[2713],0,[[]]],[10,R[877],E,R[2714],0,[[]]],[10,R[878],E,R[2715],0,[[]]],[10,R[879],E,R[2716],0,[[]]],[11,R[2717],E,R[2718],0,[[]]],[11,R[2719],E,R[2720],0,[[]]],[11,R[2721],E,R[2722],0,[[]]],[11,R[2723],E,R[2724],0,[[]]],[10,R[880],E,R[2725],0,[[]]],[10,R[881],E,R[2726],0,[[]]],[4,R[935],E,R[2662],N,N],[4,R[936],E,R[2663],N,N],[3,"Bytes",E,"A reference counted contiguous slice of memory.",N,N],[3,"BytesMut",E,"A unique reference to a contiguous slice of memory.",N,N],[0,"buf",E,"Utilities for working with buffers.",N,N],[3,"Chain",R[2559],"A `Chain` sequences two buffers.",N,N],[3,"Iter",E,"Iterator over the bytes contained by the buffer.",N,N],[3,"Reader",E,"A `Buf` adapter which implements `io::Read` for the inner…",N,N],[3,"Take",E,"A `Buf` adapter which limits the bytes read from an…",N,N],[3,"Writer",E,"A `BufMut` adapter which implements `io::Write` for the…",N,N],[11,"new",E,"Creates a new `Chain` sequencing the provided values.",1,[[[U],[T]],["chain"]]],[11,"first_ref",E,"Gets a reference to the first underlying `Buf`.",1,[[["self"]],[T]]],[11,"first_mut",E,"Gets a mutable reference to the first underlying `Buf`.",1,[[["self"]],[T]]],[11,"last_ref",E,"Gets a reference to the last underlying `Buf`.",1,[[["self"]],[U]]],[11,"last_mut",E,"Gets a mutable reference to the last underlying `Buf`.",1,[[["self"]],[U]]],[11,R[46],E,"Consumes this `Chain`, returning the underlying values.",1,[[]]],[11,R[46],E,"Consumes this `Iter`, returning the underlying value.",2,[[],[T]]],[11,R[110],E,R[2539],2,[[["self"]],[T]]],[11,R[111],E,R[2540],2,[[["self"]],[T]]],[11,R[110],E,R[2539],3,[[["self"]],["b"]]],[11,R[111],E,R[2540],3,[[["self"]],["b"]]],[11,R[46],E,"Consumes this `Reader`, returning the underlying value.",3,[[],["b"]]],[11,R[46],E,"Consumes this `Take`, returning the underlying value.",4,[[],[T]]],[11,R[110],E,R[2539],4,[[["self"]],[T]]],[11,R[111],E,R[2540],4,[[["self"]],[T]]],[11,"limit",E,"Returns the maximum number of bytes that can be read.",4,[[["self"]],[R[9]]]],[11,"set_limit",E,"Sets the maximum number of bytes that can be read.",4,[[["self"],[R[9]]]]],[11,R[110],E,"Gets a reference to the underlying `BufMut`.",5,[[["self"]],["b"]]],[11,R[111],E,"Gets a mutable reference to the underlying `BufMut`.",5,[[["self"]],["b"]]],[11,R[46],E,"Consumes this `Writer`, returning the underlying value.",5,[[],["b"]]],[8,"Buf",E,R[2553],N,N],[10,R[2622],E,R[2554],6,[[["self"]],[R[9]]]],[10,"bytes",E,R[2555],6,[[["self"]]]],[11,R[2624],E,R[2556],6,[[["self"]],[R[9]]]],[10,"advance",E,R[2557],6,[[["self"],[R[9]]]]],[11,R[2558],E,R[2560],6,[[["self"]],["bool"]]],[11,R[2561],E,R[2562],6,[[["self"]]]],[11,"get_u8",E,R[2563],6,[[["self"]],["u8"]]],[11,"get_i8",E,R[2564],6,[[["self"]],["i8"]]],[11,R[2625],E,R[2565],6,[[["self"]],["u16"]]],[11,R[2626],E,R[2566],6,[[["self"]],["u16"]]],[11,R[2627],E,R[2567],6,[[["self"]],["i16"]]],[11,R[2628],E,R[2568],6,[[["self"]],["i16"]]],[11,R[2629],E,R[2541],6,[[["self"]],["u32"]]],[11,R[2630],E,R[2541],6,[[["self"]],["u32"]]],[11,R[2631],E,R[2569],6,[[["self"]],["i32"]]],[11,R[2632],E,R[2570],6,[[["self"]],["i32"]]],[11,R[2633],E,R[2571],6,[[["self"]],["u64"]]],[11,R[2634],E,R[2572],6,[[["self"]],["u64"]]],[11,R[2635],E,R[2573],6,[[["self"]],["i64"]]],[11,R[2636],E,R[2574],6,[[["self"]],["i64"]]],[11,R[2575],E,R[2576],6,[[["self"],[R[9]]],["u64"]]],[11,R[2577],E,R[2578],6,[[["self"],[R[9]]],["u64"]]],[11,R[2637],E,R[2579],6,[[["self"],[R[9]]],["i64"]]],[11,R[2638],E,R[2580],6,[[["self"],[R[9]]],["i64"]]],[11,R[2639],E,R[2542],6,[[["self"]],["f32"]]],[11,R[2640],E,R[2542],6,[[["self"]],["f32"]]],[11,R[2641],E,R[2543],6,[[["self"]],["f64"]]],[11,R[2642],E,R[2543],6,[[["self"]],["f64"]]],[11,"collect",E,R[2581],6,[[],["b"]]],[11,"take",E,R[2582],6,[[[R[9]]],["take"]]],[11,"chain",E,R[2583],6,[[[U]],["chain"]]],[11,"by_ref",E,R[2584],6,[[["self"]],["self"]]],[11,"reader",E,R[2585],6,[[],["reader"]]],[11,"iter",E,R[2586],6,[[],["iter"]]],[8,"BufMut",E,R[2587],N,N],[10,R[2588],E,R[2589],7,[[["self"]],[R[9]]]],[10,R[2590],E,R[2591],7,[[["self"],[R[9]]]]],[11,R[2592],E,R[2593],7,[[["self"]],["bool"]]],[10,R[2623],E,R[2594],7,[[["self"]]]],[11,R[2595],E,R[2596],7,[[["self"]],[R[9]]]],[11,"put",E,R[2544],7,[[["self"],["intobuf"]]]],[11,R[2643],E,R[2544],7,[[["self"]]]],[11,"put_u8",E,R[2597],7,[[["self"],["u8"]]]],[11,"put_i8",E,R[2598],7,[[["self"],["i8"]]]],[11,R[2644],E,R[2599],7,[[["self"],["u16"]]]],[11,R[2645],E,R[2600],7,[[["self"],["u16"]]]],[11,R[2646],E,R[2601],7,[[["self"],["i16"]]]],[11,R[2647],E,R[2602],7,[[["self"],["i16"]]]],[11,R[2648],E,R[2603],7,[[["u32"],["self"]]]],[11,R[2649],E,R[2604],7,[[["u32"],["self"]]]],[11,R[2650],E,R[2605],7,[[["i32"],["self"]]]],[11,R[2651],E,R[2606],7,[[["i32"],["self"]]]],[11,R[2652],E,R[2607],7,[[["self"],["u64"]]]],[11,R[2653],E,R[2608],7,[[["self"],["u64"]]]],[11,R[2654],E,R[2609],7,[[["self"],["i64"]]]],[11,R[2655],E,R[2610],7,[[["self"],["i64"]]]],[11,R[2611],E,R[2612],7,[[["self"],["u64"],[R[9]]]]],[11,R[2613],E,R[2614],7,[[["self"],["u64"],[R[9]]]]],[11,R[2656],E,R[2615],7,[[["self"],["i64"],[R[9]]]]],[11,R[2657],E,R[2616],7,[[["self"],["i64"],[R[9]]]]],[11,R[2658],E,R[2545],7,[[["self"],["f32"]]]],[11,R[2659],E,R[2545],7,[[["self"],["f32"]]]],[11,R[2660],E,R[2546],7,[[["self"],["f64"]]]],[11,R[2661],E,R[2546],7,[[["self"],["f64"]]]],[11,"by_ref",E,R[2617],7,[[["self"]],["self"]]],[11,"writer",E,R[2618],7,[[],["writer"]]],[8,"FromBuf",E,"Conversion from a [`Buf`]",N,N],[10,"from_buf",E,"Creates a value from a buffer.",8,[[[T]],["self"]]],[8,"IntoBuf",E,R[2619],N,N],[16,"Buf",E,R[2620],9,N],[10,"into_buf",E,R[2621],9,[[]]],[11,R[73],"bytes","Creates a new `Bytes` with the specified capacity.",10,[[[R[9]]],["bytes"]]],[11,"new",E,"Creates a new empty `Bytes`.",10,[[],["bytes"]]],[11,"from_static",E,"Creates a new `Bytes` from a static slice.",10,[[],["bytes"]]],[11,"len",E,"Returns the number of bytes contained in this `Bytes`.",10,[[["self"]],[R[9]]]],[11,R[69],E,"Returns true if the `Bytes` has a length of 0.",10,[[["self"]],["bool"]]],[11,"slice",E,"Returns a slice of self for the index range `[begin..end)`.",10,[[["self"],[R[9]]],["bytes"]]],[11,"slice_from",E,"Returns a slice of self for the index range…",10,[[["self"],[R[9]]],["bytes"]]],[11,"slice_to",E,"Returns a slice of self for the index range `[0..end)`.",10,[[["self"],[R[9]]],["bytes"]]],[11,"slice_ref",E,"Returns a slice of self that is equivalent to the given…",10,[[["self"]],["bytes"]]],[11,"split_off",E,R[2547],10,[[["self"],[R[9]]],["bytes"]]],[11,"split_to",E,R[2547],10,[[["self"],[R[9]]],["bytes"]]],[11,R[817],E,R[2549],10,[[["self"],[R[9]]]]],[11,"advance",E,R[2550],10,[[["self"],[R[9]]]]],[11,"clear",E,R[2551],10,[[["self"]]]],[11,"try_mut",E,"Attempts to convert into a `BytesMut` handle.",10,[[],[[R[12],[R[2548],"bytes"]],[R[2548]],["bytes"]]]],[11,R[47],E,R[2552],10,[[["self"]]]],[11,R[73],E,"Creates a new `BytesMut` with the specified capacity.",11,[[[R[9]]],[R[2548]]]],[11,"new",E,"Creates a new `BytesMut` with default capacity.",11,[[],[R[2548]]]],[11,"len",E,"Returns the number of bytes contained in this `BytesMut`.",11,[[["self"]],[R[9]]]],[11,R[69],E,"Returns true if the `BytesMut` has a length of 0.",11,[[["self"]],["bool"]]],[11,R[74],E,"Returns the number of bytes the `BytesMut` can hold…",11,[[["self"]],[R[9]]]],[11,"freeze",E,"Converts `self` into an immutable `Bytes`.",11,[[],["bytes"]]],[11,"split_off",E,R[2547],11,[[["self"],[R[9]]],[R[2548]]]],[11,"take",E,"Removes the bytes from the current view, returning them in…",11,[[["self"]],[R[2548]]]],[11,"split_to",E,"Splits the buffer into two at the given index.",11,[[["self"],[R[9]]],[R[2548]]]],[11,R[817],E,R[2549],11,[[["self"],[R[9]]]]],[11,"advance",E,R[2550],11,[[["self"],[R[9]]]]],[11,"clear",E,R[2551],11,[[["self"]]]],[11,"resize",E,"Resizes the buffer so that `len` is equal to `new_len`.",11,[[["self"],["u8"],[R[9]]]]],[11,"set_len",E,"Sets the length of the buffer.",11,[[["self"],[R[9]]]]],[11,"reserve",E,"Reserves capacity for at least `additional` more bytes to…",11,[[["self"],[R[9]]]]],[11,R[47],E,R[2552],11,[[["self"]]]],[11,"unsplit",E,"Combine splitted BytesMut objects back as contiguous.",11,[[["self"],[R[2548]]]]],[8,"Buf",E,R[2553],N,N],[10,R[2622],E,R[2554],6,[[["self"]],[R[9]]]],[10,"bytes",E,R[2555],6,[[["self"]]]],[11,R[2624],R[2559],R[2556],6,[[["self"]],[R[9]]]],[10,"advance","bytes",R[2557],6,[[["self"],[R[9]]]]],[11,R[2558],R[2559],R[2560],6,[[["self"]],["bool"]]],[11,R[2561],E,R[2562],6,[[["self"]]]],[11,"get_u8",E,R[2563],6,[[["self"]],["u8"]]],[11,"get_i8",E,R[2564],6,[[["self"]],["i8"]]],[11,R[2625],E,R[2565],6,[[["self"]],["u16"]]],[11,R[2626],E,R[2566],6,[[["self"]],["u16"]]],[11,R[2627],E,R[2567],6,[[["self"]],["i16"]]],[11,R[2628],E,R[2568],6,[[["self"]],["i16"]]],[11,R[2629],E,R[2541],6,[[["self"]],["u32"]]],[11,R[2630],E,R[2541],6,[[["self"]],["u32"]]],[11,R[2631],E,R[2569],6,[[["self"]],["i32"]]],[11,R[2632],E,R[2570],6,[[["self"]],["i32"]]],[11,R[2633],E,R[2571],6,[[["self"]],["u64"]]],[11,R[2634],E,R[2572],6,[[["self"]],["u64"]]],[11,R[2635],E,R[2573],6,[[["self"]],["i64"]]],[11,R[2636],E,R[2574],6,[[["self"]],["i64"]]],[11,R[2575],E,R[2576],6,[[["self"],[R[9]]],["u64"]]],[11,R[2577],E,R[2578],6,[[["self"],[R[9]]],["u64"]]],[11,R[2637],E,R[2579],6,[[["self"],[R[9]]],["i64"]]],[11,R[2638],E,R[2580],6,[[["self"],[R[9]]],["i64"]]],[11,R[2639],E,R[2542],6,[[["self"]],["f32"]]],[11,R[2640],E,R[2542],6,[[["self"]],["f32"]]],[11,R[2641],E,R[2543],6,[[["self"]],["f64"]]],[11,R[2642],E,R[2543],6,[[["self"]],["f64"]]],[11,"collect",E,R[2581],6,[[],["b"]]],[11,"take",E,R[2582],6,[[[R[9]]],["take"]]],[11,"chain",E,R[2583],6,[[[U]],["chain"]]],[11,"by_ref",E,R[2584],6,[[["self"]],["self"]]],[11,"reader",E,R[2585],6,[[],["reader"]]],[11,"iter",E,R[2586],6,[[],["iter"]]],[8,"BufMut","bytes",R[2587],N,N],[10,R[2588],E,R[2589],7,[[["self"]],[R[9]]]],[10,R[2590],E,R[2591],7,[[["self"],[R[9]]]]],[11,R[2592],R[2559],R[2593],7,[[["self"]],["bool"]]],[10,R[2623],"bytes",R[2594],7,[[["self"]]]],[11,R[2595],R[2559],R[2596],7,[[["self"]],[R[9]]]],[11,"put",E,R[2544],7,[[["self"],["intobuf"]]]],[11,R[2643],E,R[2544],7,[[["self"]]]],[11,"put_u8",E,R[2597],7,[[["self"],["u8"]]]],[11,"put_i8",E,R[2598],7,[[["self"],["i8"]]]],[11,R[2644],E,R[2599],7,[[["self"],["u16"]]]],[11,R[2645],E,R[2600],7,[[["self"],["u16"]]]],[11,R[2646],E,R[2601],7,[[["self"],["i16"]]]],[11,R[2647],E,R[2602],7,[[["self"],["i16"]]]],[11,R[2648],E,R[2603],7,[[["u32"],["self"]]]],[11,R[2649],E,R[2604],7,[[["u32"],["self"]]]],[11,R[2650],E,R[2605],7,[[["i32"],["self"]]]],[11,R[2651],E,R[2606],7,[[["i32"],["self"]]]],[11,R[2652],E,R[2607],7,[[["self"],["u64"]]]],[11,R[2653],E,R[2608],7,[[["self"],["u64"]]]],[11,R[2654],E,R[2609],7,[[["self"],["i64"]]]],[11,R[2655],E,R[2610],7,[[["self"],["i64"]]]],[11,R[2611],E,R[2612],7,[[["self"],["u64"],[R[9]]]]],[11,R[2613],E,R[2614],7,[[["self"],["u64"],[R[9]]]]],[11,R[2656],E,R[2615],7,[[["self"],["i64"],[R[9]]]]],[11,R[2657],E,R[2616],7,[[["self"],["i64"],[R[9]]]]],[11,R[2658],E,R[2545],7,[[["self"],["f32"]]]],[11,R[2659],E,R[2545],7,[[["self"],["f32"]]]],[11,R[2660],E,R[2546],7,[[["self"],["f64"]]]],[11,R[2661],E,R[2546],7,[[["self"],["f64"]]]],[11,"by_ref",E,R[2617],7,[[["self"]],["self"]]],[11,"writer",E,R[2618],7,[[],["writer"]]],[8,"IntoBuf","bytes",R[2619],N,N],[16,"Buf",E,R[2620],9,N],[10,"into_buf",E,R[2621],9,[[]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[16],E,E,12,[[["self"]],[T]]],[11,R[17],E,E,12,[[[T],["self"]]]],[11,R[11],E,E,12,[[[U]],[R[12]]]],[11,R[39],E,E,12,[[["self"]],[T]]],[11,R[13],E,E,12,[[["self"]],[T]]],[11,R[14],E,E,12,[[],[R[12]]]],[11,R[18],E,E,12,[[["self"]],[R[40]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[16],E,E,13,[[["self"]],[T]]],[11,R[17],E,E,13,[[[T],["self"]]]],[11,R[11],E,E,13,[[[U]],[R[12]]]],[11,R[39],E,E,13,[[["self"]],[T]]],[11,R[13],E,E,13,[[["self"]],[T]]],[11,R[14],E,E,13,[[],[R[12]]]],[11,R[18],E,E,13,[[["self"]],[R[40]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[48],E,E,10,[[],["i"]]],[11,"into",E,E,10,[[],[U]]],[11,R[16],E,E,10,[[["self"]],[T]]],[11,R[17],E,E,10,[[[T],["self"]]]],[11,R[11],E,E,10,[[[U]],[R[12]]]],[11,R[39],E,E,10,[[["self"]],[T]]],[11,R[13],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[],[R[12]]]],[11,R[18],E,E,10,[[["self"]],[R[40]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[48],E,E,11,[[],["i"]]],[11,"into",E,E,11,[[],[U]]],[11,R[16],E,E,11,[[["self"]],[T]]],[11,R[17],E,E,11,[[[T],["self"]]]],[11,R[11],E,E,11,[[[U]],[R[12]]]],[11,R[39],E,E,11,[[["self"]],[T]]],[11,R[13],E,E,11,[[["self"]],[T]]],[11,R[14],E,E,11,[[],[R[12]]]],[11,R[18],E,E,11,[[["self"]],[R[40]]]],[11,"from",R[2559],E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[48],E,E,2,[[],["i"]]],[11,"into",E,E,2,[[],[U]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,R[18],E,E,5,[[["self"]],[R[40]]]],[11,"hash","bytes",E,12,[[["self"],["__h"]]]],[11,"hash",E,E,13,[[["self"],["__h"]]]],[11,"cmp",E,E,13,[[["self"],[R[883]]],[R[51]]]],[11,"cmp",E,E,12,[[["self"],[R[882]]],[R[51]]]],[11,"clone",E,E,13,[[["self"]],[R[883]]]],[11,"clone",E,E,12,[[["self"]],[R[882]]]],[11,"fmt",E,E,12,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,13,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,R[869],E,E,13,[[],["u16"]]],[11,R[870],E,E,13,[[],["u32"]]],[11,R[871],E,E,13,[[],["u64"]]],[11,R[827],E,E,13,[[],["u128"]]],[11,R[828],E,E,13,[[[R[9]]],["u64"]]],[11,R[829],E,E,13,[[[R[9]]],["u128"]]],[11,R[831],E,E,13,[[["u16"]]]],[11,R[833],E,E,13,[[["u32"]]]],[11,R[835],E,E,13,[[["u64"]]]],[11,R[836],E,E,13,[[["u128"]]]],[11,R[837],E,E,13,[[["u64"],[R[9]]]]],[11,R[838],E,E,13,[[["u128"],[R[9]]]]],[11,R[858],E,E,13,[[]]],[11,R[350],E,E,13,[[]]],[11,R[353],E,E,13,[[]]],[11,R[859],E,E,13,[[]]],[11,R[872],E,E,13,[[]]],[11,R[873],E,E,13,[[]]],[11,R[874],E,E,13,[[]]],[11,R[875],E,E,13,[[]]],[11,R[876],E,E,13,[[]]],[11,R[877],E,E,13,[[]]],[11,R[878],E,E,13,[[]]],[11,R[879],E,E,13,[[]]],[11,R[880],E,E,13,[[]]],[11,R[881],E,E,13,[[]]],[11,R[869],E,E,12,[[],["u16"]]],[11,R[870],E,E,12,[[],["u32"]]],[11,R[871],E,E,12,[[],["u64"]]],[11,R[827],E,E,12,[[],["u128"]]],[11,R[828],E,E,12,[[[R[9]]],["u64"]]],[11,R[829],E,E,12,[[[R[9]]],["u128"]]],[11,R[831],E,E,12,[[["u16"]]]],[11,R[833],E,E,12,[[["u32"]]]],[11,R[835],E,E,12,[[["u64"]]]],[11,R[836],E,E,12,[[["u128"]]]],[11,R[837],E,E,12,[[["u64"],[R[9]]]]],[11,R[838],E,E,12,[[["u128"],[R[9]]]]],[11,R[858],E,E,12,[[]]],[11,R[350],E,E,12,[[]]],[11,R[353],E,E,12,[[]]],[11,R[859],E,E,12,[[]]],[11,R[872],E,E,12,[[]]],[11,R[873],E,E,12,[[]]],[11,R[874],E,E,12,[[]]],[11,R[875],E,E,12,[[]]],[11,R[876],E,E,12,[[]]],[11,R[877],E,E,12,[[]]],[11,R[878],E,E,12,[[]]],[11,R[879],E,E,12,[[]]],[11,R[880],E,E,12,[[]]],[11,R[881],E,E,12,[[]]],[11,R[264],E,E,13,[[["self"],[R[883]]],[[R[51]],[R[52],[R[51]]]]]],[11,R[264],E,E,12,[[["self"],[R[882]]],[[R[51]],[R[52],[R[51]]]]]],[11,R[79],E,E,12,[[],[R[882]]]],[11,R[79],E,E,13,[[],[R[883]]]],[11,"eq",E,E,12,[[["self"],[R[882]]],["bool"]]],[11,"eq",E,E,13,[[["self"],[R[883]]],["bool"]]],[11,R[2622],R[2559],E,1,[[["self"]],[R[9]]]],[11,"bytes",E,E,1,[[["self"]]]],[11,"advance",E,E,1,[[["self"],[R[9]]]]],[11,R[2624],E,E,1,[[["self"]],[R[9]]]],[11,R[2622],E,E,4,[[["self"]],[R[9]]]],[11,"bytes",E,E,4,[[["self"]]]],[11,"advance",E,E,4,[[["self"],[R[9]]]]],[11,R[2588],E,E,1,[[["self"]],[R[9]]]],[11,R[2623],E,E,1,[[["self"]]]],[11,R[2590],E,E,1,[[["self"],[R[9]]]]],[11,R[2595],E,E,1,[[["self"]],[R[9]]]],[11,R[2588],"bytes",E,11,[[["self"]],[R[9]]]],[11,R[2590],E,E,11,[[["self"],[R[9]]]]],[11,R[2623],E,E,11,[[["self"]]]],[11,R[2643],E,E,11,[[["self"]]]],[11,"put_u8",E,E,11,[[["self"],["u8"]]]],[11,"put_i8",E,E,11,[[["self"],["i8"]]]],[11,"from_buf",E,E,10,[[[T]],["self"]]],[11,"from_buf",E,E,11,[[[T]],["self"]]],[11,"into_buf",E,E,10,[[]]],[11,"into_buf",E,E,11,[[]]],[11,"eq",E,E,10,[[["self"],["bytes"]],["bool"]]],[11,"eq",E,E,11,[[[R[2548]],["self"]],["bool"]]],[11,"eq",E,E,11,[[["self"]],["bool"]]],[11,"eq",E,E,11,[[["str"],["self"]],["bool"]]],[11,"eq",E,E,11,[[["vec"],["self"]],["bool"]]],[11,"eq",E,E,11,[[["string"],["self"]],["bool"]]],[11,"eq",E,E,11,[[[T],["self"]],["bool"]]],[11,"eq",E,E,10,[[["self"]],["bool"]]],[11,"eq",E,E,10,[[["str"],["self"]],["bool"]]],[11,"eq",E,E,10,[[["vec"],["self"]],["bool"]]],[11,"eq",E,E,10,[[["string"],["self"]],["bool"]]],[11,"eq",E,E,10,[[[T],["self"]],["bool"]]],[11,"eq",E,E,10,[[[R[2548]],["self"]],["bool"]]],[11,"eq",E,E,11,[[["self"],["bytes"]],["bool"]]],[11,"clone",E,E,10,[[["self"]],["bytes"]]],[11,"clone",E,E,11,[[["self"]],[R[2548]]]],[11,"cmp",E,E,10,[[["self"],["bytes"]],[R[51]]]],[11,"cmp",E,E,11,[[[R[2548]],["self"]],[R[51]]]],[11,"from",E,E,10,[[[R[2548]]],["bytes"]]],[11,"from",E,E,10,[[["u8"],["vec",["u8"]]],["bytes"]]],[11,"from",E,E,10,[[["string"]],["bytes"]]],[11,"from",E,E,10,[[],["bytes"]]],[11,"from",E,E,10,[[["str"]],["bytes"]]],[11,"from",E,E,11,[[["u8"],["vec",["u8"]]],[R[2548]]]],[11,"from",E,E,11,[[["string"]],[R[2548]]]],[11,"from",E,E,11,[[],[R[2548]]]],[11,"from",E,E,11,[[["str"]],[R[2548]]]],[11,"from",E,E,11,[[["bytes"]],[R[2548]]]],[11,R[48],E,E,10,[[]]],[11,R[48],E,E,11,[[]]],[11,"extend",E,E,10,[[["self"],[T]]]],[11,"extend",E,E,10,[[["self"],[T]]]],[11,"extend",E,E,11,[[["self"],[T]]]],[11,"extend",E,E,11,[[["self"],[T]]]],[11,R[264],E,E,10,[[["self"],["bytes"]],[[R[52],[R[51]]],[R[51]]]]],[11,R[264],E,E,11,[[[R[2548]],["self"]],[[R[52],[R[51]]],[R[51]]]]],[11,R[264],E,E,11,[[["self"]],[[R[52],[R[51]]],[R[51]]]]],[11,R[264],E,E,11,[[["str"],["self"]],[[R[52],[R[51]]],[R[51]]]]],[11,R[264],E,E,11,[[["vec"],["self"]],[[R[52],[R[51]]],[R[51]]]]],[11,R[264],E,E,11,[[["string"],["self"]],[[R[52],[R[51]]],[R[51]]]]],[11,R[264],E,E,11,[[[T],["self"]],[[R[52],[R[51]]],[R[51]]]]],[11,R[264],E,E,10,[[["self"]],[[R[52],[R[51]]],[R[51]]]]],[11,R[264],E,E,10,[[["str"],["self"]],[[R[52],[R[51]]],[R[51]]]]],[11,R[264],E,E,10,[[["vec"],["self"]],[[R[52],[R[51]]],[R[51]]]]],[11,R[264],E,E,10,[[["string"],["self"]],[[R[52],[R[51]]],[R[51]]]]],[11,R[264],E,E,10,[[[T],["self"]],[[R[52],[R[51]]],[R[51]]]]],[11,"as_mut",E,E,11,[[["self"]]]],[11,"next",R[2559],E,2,[[["self"]],[["u8"],[R[52],["u8"]]]]],[11,R[53],E,E,2,[[["self"]]]],[11,"as_ref","bytes",E,10,[[["self"]]]],[11,"as_ref",E,E,11,[[["self"]]]],[11,R[79],E,E,10,[[],["bytes"]]],[11,R[79],E,E,11,[[],[R[2548]]]],[11,R[54],E,E,11,[[["self"]]]],[11,"fmt",R[2559],E,1,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,2,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,3,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,4,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,5,[[[R[29]],["self"]],[R[12]]]],[11,"fmt","bytes",E,10,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,11,[[["self"],[R[29]]],[R[12]]]],[11,"deref",E,E,10,[[["self"]]]],[11,"deref",E,E,11,[[["self"]]]],[11,"hash",E,E,10,[[["h"],["self"]]]],[11,"hash",E,E,11,[[["h"],["self"]]]],[11,R[187],E,E,11,[[[R[50]]],["self"]]],[11,R[187],E,E,10,[[[R[50]]],["self"]]],[11,R[187],E,E,11,[[[R[50]]],["self"]]],[11,R[187],E,E,10,[[[R[50]]],["self"]]],[11,"write_str",E,E,11,[[["str"],["self"]],[R[12]]]],[11,R[4875],E,E,11,[[["self"],[R[400]]],[R[12]]]],[11,R[39],E,E,10,[[["self"]]]],[11,R[39],E,E,11,[[["self"]]]],[11,"read",R[2559],E,3,[[["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,"fill_buf",E,E,3,[[["self"]],[R[12]]]],[11,"consume",E,E,3,[[["self"],[R[9]]]]],[11,"write",E,E,5,[[["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,"flush",E,E,5,[[["self"]],[R[12]]]],[11,R[13],"bytes",E,11,[[["self"]]]],[11,R[2624],R[2559],R[2556],6,[[["self"]],[R[9]]]],[11,R[2558],E,R[2560],6,[[["self"]],["bool"]]],[11,R[2561],E,R[2562],6,[[["self"]]]],[11,"get_u8",E,R[2563],6,[[["self"]],["u8"]]],[11,"get_i8",E,R[2564],6,[[["self"]],["i8"]]],[11,R[2625],E,R[2565],6,[[["self"]],["u16"]]],[11,R[2626],E,R[2566],6,[[["self"]],["u16"]]],[11,R[2627],E,R[2567],6,[[["self"]],["i16"]]],[11,R[2628],E,R[2568],6,[[["self"]],["i16"]]],[11,R[2629],E,R[2541],6,[[["self"]],["u32"]]],[11,R[2630],E,R[2541],6,[[["self"]],["u32"]]],[11,R[2631],E,R[2569],6,[[["self"]],["i32"]]],[11,R[2632],E,R[2570],6,[[["self"]],["i32"]]],[11,R[2633],E,R[2571],6,[[["self"]],["u64"]]],[11,R[2634],E,R[2572],6,[[["self"]],["u64"]]],[11,R[2635],E,R[2573],6,[[["self"]],["i64"]]],[11,R[2636],E,R[2574],6,[[["self"]],["i64"]]],[11,R[2575],E,R[2576],6,[[["self"],[R[9]]],["u64"]]],[11,R[2577],E,R[2578],6,[[["self"],[R[9]]],["u64"]]],[11,R[2637],E,R[2579],6,[[["self"],[R[9]]],["i64"]]],[11,R[2638],E,R[2580],6,[[["self"],[R[9]]],["i64"]]],[11,R[2639],E,R[2542],6,[[["self"]],["f32"]]],[11,R[2640],E,R[2542],6,[[["self"]],["f32"]]],[11,R[2641],E,R[2543],6,[[["self"]],["f64"]]],[11,R[2642],E,R[2543],6,[[["self"]],["f64"]]],[11,"collect",E,R[2581],6,[[],["b"]]],[11,"take",E,R[2582],6,[[[R[9]]],["take"]]],[11,"chain",E,R[2583],6,[[[U]],["chain"]]],[11,"by_ref",E,R[2584],6,[[["self"]],["self"]]],[11,"reader",E,R[2585],6,[[],["reader"]]],[11,"iter",E,R[2586],6,[[],["iter"]]],[11,R[2592],E,R[2593],7,[[["self"]],["bool"]]],[11,R[2595],E,R[2596],7,[[["self"]],[R[9]]]],[11,"put",E,R[2544],7,[[["self"],["intobuf"]]]],[11,R[2643],E,R[2544],7,[[["self"]]]],[11,"put_u8",E,R[2597],7,[[["self"],["u8"]]]],[11,"put_i8",E,R[2598],7,[[["self"],["i8"]]]],[11,R[2644],E,R[2599],7,[[["self"],["u16"]]]],[11,R[2645],E,R[2600],7,[[["self"],["u16"]]]],[11,R[2646],E,R[2601],7,[[["self"],["i16"]]]],[11,R[2647],E,R[2602],7,[[["self"],["i16"]]]],[11,R[2648],E,R[2603],7,[[["u32"],["self"]]]],[11,R[2649],E,R[2604],7,[[["u32"],["self"]]]],[11,R[2650],E,R[2605],7,[[["i32"],["self"]]]],[11,R[2651],E,R[2606],7,[[["i32"],["self"]]]],[11,R[2652],E,R[2607],7,[[["self"],["u64"]]]],[11,R[2653],E,R[2608],7,[[["self"],["u64"]]]],[11,R[2654],E,R[2609],7,[[["self"],["i64"]]]],[11,R[2655],E,R[2610],7,[[["self"],["i64"]]]],[11,R[2611],E,R[2612],7,[[["self"],["u64"],[R[9]]]]],[11,R[2613],E,R[2614],7,[[["self"],["u64"],[R[9]]]]],[11,R[2656],E,R[2615],7,[[["self"],["i64"],[R[9]]]]],[11,R[2657],E,R[2616],7,[[["self"],["i64"],[R[9]]]]],[11,R[2658],E,R[2545],7,[[["self"],["f32"]]]],[11,R[2659],E,R[2545],7,[[["self"],["f32"]]]],[11,R[2660],E,R[2546],7,[[["self"],["f64"]]]],[11,R[2661],E,R[2546],7,[[["self"],["f64"]]]],[11,"by_ref",E,R[2617],7,[[["self"]],["self"]]],[11,"writer",E,R[2618],7,[[],["writer"]]]],"p":[[8,R[934]],[3,"Chain"],[3,"Iter"],[3,"Reader"],[3,"Take"],[3,"Writer"],[8,"Buf"],[8,"BufMut"],[8,"FromBuf"],[8,"IntoBuf"],[3,"Bytes"],[3,"BytesMut"],[4,R[935]],[4,R[936]]]};
searchIndex["capnp"]={"doc":"Cap'n Proto Runtime Library","i":[[3,"Word","capnp","Eight bytes of memory with opaque interior. Use…",N,N],[3,R[2200],E,"Size of a message. Every generated struct has a method…",N,N],[12,"word_count",E,E,0,N],[12,"cap_count",E,"Size of the capability table.",0,N],[3,R[2201],E,"An enum value or union discriminant that was not found…",N,N],[12,"0",E,E,1,N],[3,"Error",E,"Describes an arbitrary error that prevented an operation…",N,N],[12,"kind",E,"The general kind of the error. Code that decides how to…",2,N],[12,R[30],E,"Human-readable failure description.",2,N],[4,R[32],E,"The general nature of an error. The purpose of this enum…",N,N],[13,"Failed",E,"Something went wrong. This is the usual error kind. It…",3,N],[13,"Overloaded",E,"The call failed because of a temporary lack of resources.…",3,N],[13,R[4618],E,"The call required communication over a connection that has…",3,N],[13,R[4554],E,"The requested method is not implemented. The caller may…",3,N],[4,R[2202],E,"Helper struct that allows…",N,N],[13,"SingleSegment",E,E,4,N],[13,"MultiSegment",E,E,4,N],[0,"any_pointer",E,"Dynamically typed value.",N,N],[3,"Owned",R[2169],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[12,"hook",E,E,5,N],[11,"new",E,E,6,[[[R[2144]]],["reader"]]],[11,"is_null",E,E,6,[[["self"]],["bool"]]],[11,R[2099],E,R[2100],6,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,"get_as",E,E,6,[[["self"]],[[R[12]],[R[2115]]]]],[11,"get_as_capability",E,E,6,[[["self"]],[[R[12]],["fromclienthook"]]]],[11,R[2132],E,E,6,[[["self"]],[["box",[R[2102]]],[R[12],["box"]]]]],[11,"new",E,E,7,[[[R[2149]]],["builder"]]],[11,R[2122],E,E,7,[[["self"]],["builder"]]],[11,"is_null",E,E,7,[[["self"]],["bool"]]],[11,R[2099],E,R[2100],7,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,"get_as",E,E,7,[[],[[R[12]],[R[2101]]]]],[11,"init_as",E,E,7,[[],[R[2101]]]],[11,"initn_as",E,E,7,[[["u32"]],[R[2101]]]],[11,"set_as",E,E,7,[[[R[2116]]],[R[12]]]],[11,"set_as_capability",E,E,7,[[["box",[R[2102]]],["self"],[R[2102]]]]],[11,"clear",E,E,7,[[["self"]]]],[11,R[2111],E,E,7,[[],["reader"]]],[11,R[2107],E,E,7,[[],["reader"]]],[11,"new",E,E,5,[[["box",[R[2103]]],[R[2103]]],[R[2188]]]],[11,"noop",E,E,5,[[["self"]],[R[2188]]]],[11,R[2155],E,E,5,[[["u16"],["self"]],[R[2188]]]],[11,"as_cap",E,E,5,[[["self"]],[["box",[R[2102]]],[R[2102]]]]],[0,"capability","capnp","Hooks for for the RPC system.",N,N],[3,"Promise",R[2170],"A computation that might eventually resolve to a value of…",N,N],[3,R[2203],E,"A promise for a result from a method call.",N,N],[12,"promise",E,E,8,N],[12,R[2188],E,E,8,N],[3,"Response",E,"A response from a method call, as seen by the client.",N,N],[12,"marker",E,E,9,N],[12,"hook",E,E,9,N],[3,"Request",E,"A method call that has not been sent yet.",N,N],[12,"marker",E,E,10,N],[12,"hook",E,E,10,N],[3,"Params",E,"The values of the parameters passed to a method call, as…",N,N],[12,"marker",E,E,11,N],[12,"hook",E,E,11,N],[3,"Results",E,"The return values of a method, written in-place by the…",N,N],[12,"marker",E,E,12,N],[12,"hook",E,E,12,N],[3,"Client",E,"An untyped client.",N,N],[12,"hook",E,E,13,N],[8,R[2204],E,E,N,N],[10,"new",E,E,14,[[[R[2188]]],["self"]]],[8,R[2205],E,E,N,N],[10,"new",E,E,15,[[["box",[R[2102]]],[R[2102]]],["self"]]],[8,"Server",E,"An untyped server.",N,N],[10,R[5514],E,E,16,[[["results",["owned"]],["params",["owned"]],["self"],["u16"],["owned"],["u64"]],[["promise",["error"]],["error"]]]],[11,"ok",E,E,17,[[[T]],["promise"]]],[11,"err",E,E,17,[[["e"]],["promise"]]],[11,"from_future",E,E,17,[[["f"]],["promise"]]],[11,"new",E,E,9,[[[R[2104]],["box",[R[2104]]]],["response"]]],[11,"get",E,E,9,[[["self"]],[R[12]]]],[11,"new",E,E,10,[[["box",[R[2105]]],[R[2105]]],["request"]]],[11,"get",E,E,10,[[["self"]]]],[11,"set",E,E,10,[[["self"]],[R[12]]]],[11,"send",E,E,10,[[],[R[2129]]]],[11,"new",E,E,11,[[[R[2130]],["box",[R[2130]]]],["params"]]],[11,"get",E,E,11,[[["self"]],[R[12]]]],[11,"new",E,E,12,[[["box",[R[2106]]],[R[2106]]],["results"]]],[11,"get",E,E,12,[[["self"]]]],[11,"set",E,E,12,[[["self"]],[R[12]]]],[11,"new",E,E,13,[[["box",[R[2102]]],[R[2102]]],["client"]]],[11,"new_call",E,E,13,[[["u16"],[R[2098]],["self"],["u64"],[R[52],[R[2098]]]],["request"]]],[11,R[2131],E,"If the capability is actually only a promise, the returned…",13,[[["self"]],[["promise",["error"]],["error"]]]],[0,"capability_list","capnp","List of capabilities.",N,N],[3,"Owned",R[2171],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[11,"new",E,E,18,[[[R[2109]]],["reader"]]],[11,"len",E,E,18,[[["self"]],["u32"]]],[11,"iter",E,E,18,[[],[[R[12]],["reader"],[R[2167],["reader",R[12]]]]]],[11,R[2122],E,E,18,[[["self"]],["reader"]]],[11,"get",E,E,18,[[["u32"]],[R[12]]]],[11,"new",E,E,19,[[[R[2108]]],["builder"]]],[11,"len",E,E,19,[[["self"]],["u32"]]],[11,R[2111],E,E,19,[[],["reader"]]],[11,R[2107],E,E,19,[[],["reader"]]],[11,"set",E,E,19,[[["u32"],["box",[R[2102]]],["self"],[R[2102]]]]],[11,R[2122],E,E,19,[[["self"]],["builder"]]],[11,"get",E,E,19,[[["u32"]],[R[12]]]],[0,"constant","capnp","Helper type for generated Struct and List constants.",N,N],[3,"Reader",R[2172],E,N,N],[11,"get",E,"Retrieve the value.",20,[[["self"]],[R[12]]]],[0,"data","capnp","Sequence of bytes.",N,N],[3,"Owned",R[2173],E,N,N],[5,"new_reader",E,E,N,[[["u32"]],["reader"]]],[5,"new_builder",E,E,N,[[["u32"]],["builder"]]],[6,"Reader",E,E,N,N],[6,"Builder",E,E,N,N],[0,"data_list","capnp","List of sequences of bytes.",N,N],[3,"Owned",R[2174],E,N,N],[3,"Reader",E,E,N,N],[12,"reader",E,E,21,N],[3,"Builder",E,E,N,N],[11,"new",E,E,21,[[[R[2109]]],["reader"]]],[11,"len",E,E,21,[[["self"]],["u32"]]],[11,"iter",E,E,21,[[],[["reader"],[R[2167],["reader",R[12]]],[R[12],["reader"]]]]],[11,"get",E,E,21,[[["u32"]],[[R[12],["reader"]],["reader"]]]],[11,"new",E,E,22,[[[R[2108]]],["builder"]]],[11,"len",E,E,22,[[["self"]],["u32"]]],[11,R[2111],E,E,22,[[],["reader"]]],[11,R[2107],E,E,22,[[],["reader"]]],[11,"set",E,E,22,[[["u32"],["self"],["reader"]]]],[11,R[2122],E,E,22,[[["self"]],["builder"]]],[11,"get",E,E,22,[[["u32"]],[[R[12],["builder"]],["builder"]]]],[0,"enum_list","capnp","List of enums.",N,N],[3,"Owned",R[2175],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[11,"new",E,E,23,[[[R[2109]]],["reader"]]],[11,"len",E,E,23,[[["self"]],["u32"]]],[11,"iter",E,E,23,[[],[[R[2167],["reader",R[12]]],[R[12],[R[2110]]],["reader"]]]],[11,"get",E,E,23,[[["u32"],["self"]],[[R[2110]],[R[12],[R[2110]]]]]],[11,"new",E,E,24,[[[R[2108]]],["builder"]]],[11,"len",E,E,24,[[["self"]],["u32"]]],[11,R[2111],E,E,24,[[],["reader"]]],[11,R[2107],E,E,24,[[],["reader"]]],[11,"set",E,E,24,[[["u32"],["self"],[T]]]],[11,"get",E,E,24,[[["u32"],["self"]],[[R[2110]],[R[12],[R[2110]]]]]],[11,R[2122],E,E,24,[[["self"]],["builder"]]],[0,"list_list","capnp","List of lists.",N,N],[3,"Owned",R[2176],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[11,"new",E,E,25,[[[R[2109]]],["reader"]]],[11,"len",E,E,25,[[["self"]],["u32"]]],[11,"iter",E,E,25,[[],[[R[2167],["reader",R[12]]],["reader"],[R[12]]]]],[11,"get",E,E,25,[[["u32"]],[R[12]]]],[11,"new",E,E,26,[[[R[2108]]],["builder"]]],[11,"len",E,E,26,[[["self"]],["u32"]]],[11,R[2111],E,E,26,[[],["reader"]]],[11,R[2107],E,E,26,[[],["reader"]]],[11,"init",E,E,26,[[["u32"]]]],[11,R[2122],E,E,26,[[["self"]],["builder"]]],[11,"get",E,E,26,[[["u32"]],[R[12]]]],[0,"message","capnp","Untyped root container for a Cap'n Proto value.",N,N],[3,R[2206],R[2177],"Options controlling how data is read.",N,N],[12,R[2114],E,"Limits how many total words of data are allowed to be…",27,N],[12,R[2112],E,"Limits how deeply nested a message structure can be, e.g.…",27,N],[3,R[2209],E,"An array of segments.",N,N],[3,"Reader",E,"A container used to read a message.",N,N],[3,R[2210],E,"A message reader whose value is known to be of type `T`.",N,N],[3,"Builder",E,"A container used to build a message.",N,N],[3,R[2211],E,E,N,N],[3,R[2212],E,E,N,N],[3,R[2213],E,E,N,N],[4,R[2207],E,E,N,N],[13,"FixedSize",E,E,28,N],[13,"GrowHeuristically",E,E,28,N],[17,"DEFAULT_READER_OPTIONS",E,E,N,N],[17,"SUGGESTED_FIRST_SEGMENT_WORDS",E,E,N,N],[17,"SUGGESTED_ALLOCATION_STRATEGY",E,E,N,N],[8,R[2208],E,"An object that manages the buffers underlying a Cap'n…",N,N],[10,R[2123],E,"Gets the segment with index `idx`. Returns `None` if `idx`…",29,[[["u32"],["self"]],[R[52]]]],[11,"len",E,"Gets the number of segments.",29,[[["self"]],[R[9]]]],[8,"Allocator",E,"An object that allocates memory for a Cap'n Proto message…",N,N],[10,R[2125],E,"Allocates memory for a new segment, returning a pointer to…",30,[[["u32"],["self"]]]],[11,"pre_drop",E,E,30,[[["u32"],["self"]]]],[11,"new",E,E,27,[[],[R[2113]]]],[11,R[2112],E,E,27,[[["i32"],["self"]],[R[2113]]]],[11,R[2114],E,E,27,[[["u64"],["self"]],[R[2113]]]],[11,"new",E,E,31,[[],["segmentarray"]]],[11,"new",E,E,32,[[[R[2113]],["s"]],["self"]]],[11,"get_root",E,"Gets the root of the message, interpreting it as the given…",32,[[["self"]],[[R[12]],[R[2115]]]]],[11,R[2124],E,E,32,[[],["s"]]],[11,R[2148],E,"Checks whether the message is canonical.",32,[[["self"]],[[R[12],["bool"]],["bool"]]]],[11,"canonicalize",E,"Gets the canonical form of this message. Works by copying…",32,[[["self"]],[["vec",["word"]],[R[12],["vec"]]]]],[11,"into_typed",E,E,32,[[],[[R[2199]],["owned"]]]],[11,"new",E,E,33,[[["reader"]],["self"]]],[11,"get",E,E,33,[[["self"]],[R[12]]]],[11,R[46],E,E,33,[[],["reader"]]],[11,"new",E,E,34,[[["a"]],["self"]]],[11,"init_root",E,"Initializes the root as a value of the given type.",34,[[["self"]],[R[2101]]]],[11,"get_root",E,"Gets the root, interpreting it as the given type.",34,[[["self"]],[[R[12]],[R[2101]]]]],[11,"get_root_as_reader",E,E,34,[[["self"]],[[R[12]],[R[2115]]]]],[11,"set_root",E,"Sets the root to a deep copy of the given value.",34,[[["self"],[R[2116]]],[R[12]]]],[11,"set_root_canonical",E,"Sets the root to a canonicalized version of `value`. If…",34,[[["self"],[R[2116]]],[R[12]]]],[11,R[2126],E,E,34,[[["self"]],[R[2127]]]],[11,R[2107],E,E,34,[[],[["builder"],["reader",["builder"]]]]],[11,"new",E,E,35,[[],[R[2117]]]],[11,"first_segment_words",E,E,35,[[["u32"]],[R[2117]]]],[11,R[2120],E,E,35,[[[R[2121]]],[R[2117]]]],[11,R[2143],E,E,34,[[],[[R[2117]],["builder",[R[2117]]]]]],[11,"new",E,E,36,[[],[R[2118]]]],[11,"new",E,E,37,[[[R[2118]]],[R[2119]]]],[11,"second_segment_words",E,E,37,[[["u32"]],[R[2119]]]],[11,R[2120],E,E,37,[[[R[2121]]],[R[2119]]]],[0,"primitive_list","capnp","List of primitives.",N,N],[3,"Owned",R[2178],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[11,"new",E,E,38,[[[R[2109]]],["reader"]]],[11,"len",E,E,38,[[["self"]],["u32"]]],[11,"iter",E,E,38,[[],[["reader"],[R[2167],["reader"]]]]],[11,"get",E,E,38,[[["u32"],["self"]],[T]]],[11,"new",E,E,39,[[[R[2108]]],["builder"]]],[11,"len",E,E,39,[[["self"]],["u32"]]],[11,R[2111],E,E,39,[[],["reader"]]],[11,R[2107],E,E,39,[[],["reader"]]],[11,"set",E,E,39,[[["u32"],["self"],[T]]]],[11,"get",E,E,39,[[["u32"],["self"]],[T]]],[11,R[2122],E,E,39,[[["self"]],["builder"]]],[0,"private","capnp","Implementation details that should never be directly used…",N,N],[3,"RawSchema",R[2128],E,N,N],[12,"blob",E,E,40,N],[0,"arena",E,E,N,N],[3,R[2214],R[2179],E,N,N],[12,"limit",E,E,41,N],[3,R[2217],E,E,N,N],[3,R[2246],E,E,N,N],[3,R[2218],E,E,N,N],[3,"NullArena",E,E,N,N],[6,"SegmentId",E,E,N,N],[8,R[2215],E,E,N,N],[10,R[2123],E,E,42,[[["u32"],["self"]],[R[12]]]],[10,R[2189],E,E,42,[[["u32"],["i32"],["self"]],[R[12]]]],[10,R[2190],E,E,42,[[["u32"],["self"],[R[9]]],[R[12]]]],[10,R[2191],E,E,42,[[["self"],["u64"]],[R[12]]]],[8,R[2216],E,E,N,N],[10,R[2813],E,E,43,[[["u32"],[R[2137]],["self"]],[["u32"],[R[52],["u32"]]]]],[10,R[2192],E,E,43,[[["u32"],["self"]]]],[10,R[2193],E,E,43,[[["u32"],["self"]]]],[10,R[2111],E,E,43,[[["self"]],[R[2138]]]],[11,"new",E,E,41,[[["u64"]],["readlimiter"]]],[11,"can_read",E,E,41,[[["self"],["u64"]],[R[12]]]],[11,"new",E,E,44,[[[R[2113]],["s"]],["self"]]],[11,R[2124],E,E,44,[[],["s"]]],[11,"new",E,E,45,[[["a"]],["self"]]],[11,R[2125],E,E,45,[[["u32"],["self"]],[R[12]]]],[11,R[2126],E,E,45,[[["self"]],[R[2127]]]],[11,"len",E,E,45,[[["self"]],[R[9]]]],[0,"capability",R[2128],E,N,N],[4,"PipelineOp",R[2180],E,N,N],[13,"Noop",E,E,46,N],[13,R[4613],E,E,46,N],[5,"internal_get_typed_params",E,E,N,[[["params",["owned"]],["owned"]],["params"]]],[5,"internal_get_typed_results",E,E,N,[[["results",["owned"]],["owned"]],["results"]]],[5,"internal_get_untyped_results",E,E,N,[[["results"]],[["results",["owned"]],["owned"]]]],[8,R[2219],E,E,N,N],[10,"get",E,E,47,[[["self"]],[[R[12],["reader"]],["reader"]]]],[8,R[2220],E,E,N,N],[10,"get",E,E,48,[[["self"]],["builder"]]],[10,"get_brand",E,E,48,[[["self"]],[R[9]]]],[10,"send",E,E,48,[[["box"]],[["owned"],[R[2129],["owned"]]]]],[10,"tail_send",E,E,48,[[["box"]],[R[52]]]],[8,"ClientHook",E,E,N,N],[10,"add_ref",E,E,49,[[["self"]],[["box",[R[2102]]],[R[2102]]]]],[10,"new_call",E,E,49,[[["u16"],[R[2098]],["self"],["u64"],[R[52],[R[2098]]]],[["request",["owned","owned"]],["owned"]]]],[10,"call",E,E,49,[[[R[2130]],["box",[R[2130]]],["box",[R[2106]]],[R[2106]],["u16"],["self"],["u64"]],[["promise",["error"]],["error"]]]],[10,"get_brand",E,E,49,[[["self"]],[R[9]]]],[10,"get_ptr",E,E,49,[[["self"]],[R[9]]]],[10,"get_resolved",E,"If this ClientHook is a promise that has already resolved,…",49,[[["self"]],[["box",[R[2102]]],[R[52],["box"]]]]],[10,"when_more_resolved",E,"If this client is a settled reference (not a promise),…",49,[[["self"]],[[R[52],["promise"]],["promise",["box","error"]]]]],[11,R[2131],E,"Repeatedly calls whenMoreResolved() until it returns…",49,[[["self"]],[["promise",["error"]],["error"]]]],[8,"ServerHook",E,E,N,N],[10,"new_client",E,E,50,[[["server"],["box",["server"]]],["client"]]],[8,R[2221],E,E,N,N],[10,"get",E,E,51,[[["self"]],[["builder"],[R[12],["builder"]]]]],[10,"allow_cancellation",E,E,51,[[["self"]]]],[10,"tail_call",E,E,51,[[["box"],["box",[R[2105]]],[R[2105]]],[["promise",["error"]],["error"]]]],[10,"direct_tail_call",E,E,51,[[["box"],["box",[R[2105]]],[R[2105]]]]],[8,"ParamsHook",E,E,N,N],[10,"get",E,E,52,[[["self"]],[[R[12],["reader"]],["reader"]]]],[8,R[2222],E,E,N,N],[10,"add_ref",E,E,53,[[["self"]],[["box",[R[2103]]],[R[2103]]]]],[10,R[2132],E,E,53,[[["self"]],[["box",[R[2102]]],[R[2102]]]]],[11,"get_pipelined_cap_move",E,"Version of get_pipelined_cap() passing the array by move.…",53,[[[R[2198]],["self"],["vec",[R[2198]]]],[["box",[R[2102]]],[R[2102]]]]],[0,"endian",R[2128],E,N,N],[3,"WireValue",R[2181],"A value casted directly from a little-endian byte buffer.…",N,N],[8,"Endian",E,"Something that can appear in a `WireValue`.",N,N],[10,"get",E,R[2133],54,[[["self"]],["self"]]],[10,"set",E,R[2134],54,[[["self"]]]],[11,"get",E,R[2133],55,[[["self"]],[T]]],[11,"set",E,R[2134],55,[[["self"],[T]]]],[0,"layout",R[2128],E,N,N],[3,"StructSize",R[2182],E,N,N],[12,"data",E,E,56,N],[12,"pointers",E,E,56,N],[3,R[2229],E,E,N,N],[3,R[2230],E,E,N,N],[3,R[2231],E,E,N,N],[3,R[2232],E,E,N,N],[3,R[2233],E,E,N,N],[3,"ListReader",E,E,N,N],[3,R[2234],E,E,N,N],[4,R[2223],E,E,N,N],[13,"Void",E,E,57,N],[13,"Bit",E,E,57,N],[13,"Byte",E,E,57,N],[13,"TwoBytes",E,E,57,N],[13,"FourBytes",E,E,57,N],[13,"EightBytes",E,E,57,N],[13,"Pointer",E,E,57,N],[13,"InlineComposite",E,E,57,N],[4,R[2224],E,E,N,N],[13,"Struct",E,E,58,N],[13,"List",E,E,58,N],[13,"Far",E,E,58,N],[13,"Other",E,E,58,N],[4,R[2225],E,E,N,N],[13,"Null",E,E,59,N],[13,"Struct",E,E,59,N],[13,"List",E,E,59,N],[13,"Capability",E,E,59,N],[4,R[2226],E,E,N,N],[13,"Plain",E,E,60,N],[4,R[2227],E,E,N,N],[13,"Plain",E,E,61,N],[5,"data_bits_per_element",E,E,N,[[[R[2135]]],["bitcount32"]]],[5,"pointers_per_element",E,E,N,[[[R[2135]]],["wirepointercount32"]]],[6,"CapTable",E,E,N,N],[8,R[2228],E,E,N,N],[11,"get",E,E,62,[[[R[2136]],[R[2109]]],["self"]]],[11,"get_from_builder",E,E,62,[[[R[2136]],[R[2108]]],["self"]]],[11,"set",E,E,62,[[[R[2136]],[R[2108]]]]],[11,"element_size",E,E,62,[[],[R[2135]]]],[11,"total",E,E,56,[[["self"]],[R[2137]]]],[11,"kind",E,E,63,[[["self"]],[R[2139]]]],[11,"is_positional",E,E,63,[[["self"]],["bool"]]],[11,"is_capability",E,E,63,[[["self"]],["bool"]]],[11,"target",E,E,63,[[["self"]]]],[11,"target_from_segment",E,E,63,[[["u32"],[R[2138]],["self"]],[R[12]]]],[11,"mut_target",E,E,63,[[["self"]]]],[11,"set_kind_and_target",E,E,63,[[["self"],[R[2139]]]]],[11,"set_kind_with_zero_offset",E,E,63,[[["self"],[R[2139]]]]],[11,"set_kind_and_target_for_empty_struct",E,E,63,[[["self"]]]],[11,"inline_composite_list_element_count",E,E,63,[[["self"]],[R[2136]]]],[11,"set_kind_and_inline_composite_list_element_count",E,E,63,[[[R[2136]],["self"],[R[2139]]]]],[11,"far_position_in_segment",E,E,63,[[["self"]],[R[2137]]]],[11,"is_double_far",E,E,63,[[["self"]],["bool"]]],[11,"set_far",E,E,63,[[["self"],[R[2137]],["bool"]]]],[11,"set_cap",E,E,63,[[["u32"],["self"]]]],[11,"struct_data_size",E,E,63,[[["self"]],[R[2140]]]],[11,"struct_ptr_count",E,E,63,[[["self"]],[R[2140]]]],[11,"struct_word_size",E,E,63,[[["self"]],[R[2137]]]],[11,"set_struct_size",E,E,63,[[["self"],[R[2151]]]]],[11,"set_struct_size_from_pieces",E,E,63,[[["self"],[R[2140]],[R[2153]]]]],[11,"list_element_size",E,E,63,[[["self"]],[R[2135]]]],[11,"list_element_count",E,E,63,[[["self"]],[R[2136]]]],[11,"list_inline_composite_word_count",E,E,63,[[["self"]],[R[2137]]]],[11,"set_list_size_and_count",E,E,63,[[[R[2136]],["self"],[R[2135]]]]],[11,"set_list_inline_composite",E,E,63,[[["self"],[R[2137]]]]],[11,"far_segment_id",E,E,63,[[["self"]],["segmentid"]]],[11,"set_far_segment_id",E,E,63,[[["self"],["segmentid"]]]],[11,"cap_index",E,E,63,[[["self"]],["u32"]]],[11,"set_cap_index",E,E,63,[[["u32"],["self"]]]],[11,"is_null",E,E,63,[[["self"]],["bool"]]],[11,R[2142],E,E,60,[[["self"],[R[9]]],[["box",[R[2102]]],[R[52],["box"]]]]],[11,R[2111],E,E,61,[[],[R[2141]]]],[11,R[2107],E,E,61,[[],[R[2141]]]],[11,R[2142],E,E,61,[[["self"],[R[9]]],[["box",[R[2102]]],[R[52],["box"]]]]],[11,"inject_cap",E,E,61,[[["box",[R[2102]]],["self"],[R[2102]]],[R[9]]]],[11,"drop_cap",E,E,61,[[["self"],[R[9]]]]],[11,R[2143],E,E,64,[[],[R[2144]]]],[11,"get_root",E,E,64,[[["u32"],["i32"],[R[2138]]],[R[12]]]],[11,R[39],E,E,64,[[["self"]],[R[2144]]]],[11,"get_root_unchecked",E,E,64,[[],[R[2144]]]],[11,"imbue",E,E,64,[[["self"],[R[2141]]]]],[11,"is_null",E,E,64,[[["self"]],["bool"]]],[11,R[4555],E,E,64,[[["self"]],[[R[12],[R[2098]]],[R[2098]]]]],[11,"get_struct",E,E,64,[[],[[R[2145]],[R[12],[R[2145]]]]]],[11,"get_list",E,E,64,[[[R[2135]]],[[R[12],[R[2109]]],[R[2109]]]]],[11,"get_text",E,E,64,[[[R[2146]]],[[R[12],["reader"]],["reader"]]]],[11,"get_data",E,E,64,[[[R[2146]],["self"]],[["reader"],[R[12],["reader"]]]]],[11,R[2152],E,E,64,[[["self"]],[["box",[R[2102]]],[R[12],["box"]]]]],[11,"get_pointer_type",E,E,64,[[["self"]],[[R[12],[R[2147]]],[R[2147]]]]],[11,R[2148],E,E,64,[[["self"],["cell"]],[[R[12],["bool"]],["bool"]]]],[11,"get_root",E,E,65,[[["u32"],["builderarena"]],["self"]]],[11,R[39],E,E,65,[[["self"]],[R[2149]]]],[11,"imbue",E,E,65,[[[R[2156]],["self"]]]],[11,"is_null",E,E,65,[[["self"]],["bool"]]],[11,"get_struct",E,E,65,[[[R[2151]]],[[R[12],[R[2150]]],[R[2150]]]]],[11,"get_list",E,E,65,[[[R[2135]]],[[R[2108]],[R[12],[R[2108]]]]]],[11,"get_struct_list",E,E,65,[[[R[2151]]],[[R[2108]],[R[12],[R[2108]]]]]],[11,"get_text",E,E,65,[[[R[2146]]],[[R[12],["builder"]],["builder"]]]],[11,"get_data",E,E,65,[[[R[2146]]],[[R[12],["builder"]],["builder"]]]],[11,R[2152],E,E,65,[[["self"]],[["box",[R[2102]]],[R[12],["box"]]]]],[11,"init_struct",E,E,65,[[[R[2151]]],[R[2150]]]],[11,"init_list",E,E,65,[[[R[2136]],[R[2135]]],[R[2108]]]],[11,"init_struct_list",E,E,65,[[[R[2136]],[R[2151]]],[R[2108]]]],[11,"init_text",E,E,65,[[[R[2146]]],["builder"]]],[11,"init_data",E,E,65,[[[R[2146]]],["builder"]]],[11,"set_struct",E,E,65,[[[R[2145]],["self"],["bool"]],[R[12]]]],[11,"set_list",E,E,65,[[["self"],["bool"],[R[2109]]],[R[12]]]],[11,"set_text",E,E,65,[[["str"],["self"]]]],[11,"set_data",E,E,65,[[["self"]]]],[11,"set_capability",E,E,65,[[["box",[R[2102]]],[R[2102]],["self"]]]],[11,"copy_from",E,E,65,[[["self"],["bool"],[R[2144]]],[R[12]]]],[11,"clear",E,E,65,[[["self"]]]],[11,R[2111],E,E,65,[[],[R[2144]]]],[11,R[2107],E,E,65,[[],[R[2144]]]],[11,R[2143],E,E,66,[[],[R[2145]]]],[11,"imbue",E,E,66,[[["self"],[R[2141]]]]],[11,"get_data_section_size",E,E,66,[[["self"]],["bitcount32"]]],[11,"get_pointer_section_size",E,E,66,[[["self"]],[R[2153]]]],[11,"get_data_section_as_blob",E,E,66,[[["self"]]]],[11,R[2157],E,E,66,[[["self"],[R[2154]]],[["endian"],["zero"]]]],[11,R[2159],E,E,66,[[["self"],[R[2154]]],["bool"]]],[11,R[2158],E,E,66,[[["self"],[R[2154]]],[["endian"],["zero"],["mask"]]]],[11,R[2160],E,E,66,[[["self"],["bool"],[R[2154]]],["bool"]]],[11,R[2155],E,E,66,[[[R[2161]],["self"]],[R[2144]]]],[11,R[4555],E,E,66,[[["self"]],[[R[12],[R[2098]]],[R[2098]]]]],[11,R[2148],E,E,66,[[["self"],["bool"],["cell"]],[[R[12],["bool"]],["bool"]]]],[11,R[2111],E,E,67,[[],[R[2145]]]],[11,R[2107],E,E,67,[[],[R[2145]]]],[11,"imbue",E,E,67,[[[R[2156]],["self"]]]],[11,"set_data_field",E,E,67,[[["endian"],["self"],[R[2154]]]]],[11,"set_data_field_mask",E,E,67,[[["endian"],["self"],["mask"],[R[2154]]]]],[11,R[2157],E,E,67,[[["self"],[R[2154]]],["endian"]]],[11,R[2158],E,E,67,[[["self"],[R[2154]]],[["endian"],["mask"]]]],[11,"set_bool_field",E,E,67,[[["self"],["bool"],[R[2154]]]]],[11,"set_bool_field_mask",E,E,67,[[["self"],["bool"],[R[2154]]]]],[11,R[2159],E,E,67,[[["self"],[R[2154]]],["bool"]]],[11,R[2160],E,E,67,[[["self"],["bool"],[R[2154]]],["bool"]]],[11,R[2155],E,E,67,[[[R[2161]]],[R[2149]]]],[11,"copy_content_from",E,E,67,[[["self"],[R[2145]]],[R[12]]]],[11,R[2143],E,E,68,[[],[R[2109]]]],[11,"imbue",E,E,68,[[["self"],[R[2141]]]]],[11,"len",E,E,68,[[["self"]],[R[2136]]]],[11,R[2162],E,E,68,[[[R[2136]],["self"]],[R[2145]]]],[11,R[2163],E,E,68,[[[R[2136]]],[R[2144]]]],[11,R[2148],E,E,68,[[["self"],["cell"]],[[R[12],["bool"]],["bool"]]]],[11,R[2143],E,E,69,[[],[R[2108]]]],[11,R[2111],E,E,69,[[],[R[2109]]]],[11,R[2107],E,E,69,[[],[R[2109]]]],[11,R[39],E,E,69,[[["self"]],[R[2108]]]],[11,"imbue",E,E,69,[[[R[2156]],["self"]]]],[11,"len",E,E,69,[[["self"]],[R[2136]]]],[11,R[2162],E,E,69,[[[R[2136]]],[R[2150]]]],[11,R[2163],E,E,69,[[[R[2136]]],[R[2149]]]],[0,"units",R[2128],E,N,N],[5,"_bytes_per_element","capnp::private::units",E,N,[[],["bytecount"]]],[5,"bits_per_element",E,E,N,[[],["bitcount0"]]],[6,"BitCount0",E,E,N,N],[6,"BitCount8",E,E,N,N],[6,"BitCount16",E,E,N,N],[6,"BitCount32",E,E,N,N],[6,"BitCount64",E,E,N,N],[6,"ByteCount",E,E,N,N],[6,"ByteCount8",E,E,N,N],[6,"ByteCount16",E,E,N,N],[6,"ByteCount32",E,E,N,N],[6,"ByteCount64",E,E,N,N],[6,"WordCount",E,E,N,N],[6,"WordCount8",E,E,N,N],[6,"WordCount16",E,E,N,N],[6,"WordCount32",E,E,N,N],[6,"WordCount64",E,E,N,N],[6,"ElementCount",E,E,N,N],[6,"ElementCount8",E,E,N,N],[6,"ElementCount16",E,E,N,N],[6,"ElementCount32",E,E,N,N],[6,"ElementCount64",E,E,N,N],[6,"WirePointerCount",E,E,N,N],[6,"WirePointerCount8",E,E,N,N],[6,"WirePointerCount16",E,E,N,N],[6,"WirePointerCount32",E,E,N,N],[6,"WirePointerCount64",E,E,N,N],[17,"BITS_PER_BYTE",E,E,N,N],[17,"BITS_PER_WORD",E,E,N,N],[17,"BYTES_PER_WORD",E,E,N,N],[17,"BITS_PER_POINTER",E,E,N,N],[17,"_BYTES_PER_POINTER",E,E,N,N],[17,"WORDS_PER_POINTER",E,E,N,N],[17,"POINTER_SIZE_IN_WORDS",E,E,N,N],[0,"raw","capnp","Functions providing low level access to encoded data.",N,N],[5,"get_struct_data_section","capnp::raw","Gets a slice view of the data section of a struct.",N,[[[T]]]],[5,"get_list_element_size",E,"Gets the size of the elements in a list.",N,[[[T]],[R[2135]]]],[5,"get_list_step_size_in_bits",E,"Gets the number of bits between successive elements in a…",N,[[[T]],["u32"]]],[5,"get_list_bytes",E,"Gets a slice view of a list, exluding any tag word.",N,[[[T]]]],[0,R[2289],"capnp","Reading and writing of messages using the standard stream…",N,N],[3,R[2247],R[2183],"Segments read from a single flat slice of words.",N,N],[3,R[2248],E,E,N,N],[5,"read_message_from_words",E,"Reads a serialized message from a slice of words.",N,[[[R[2113]]],[[R[12],["reader"]],["reader",["slicesegments"]]]]],[5,R[2164],E,"Reads a serialized message from a stream with the provided…",N,[[["r"],[R[2113]]],[["reader",[R[2165]]],[R[12],["reader"]]]]],[5,"write_message_to_words",E,"Constructs a flat vector containing the entire message.",N,[[["builder"]],[["vec",["word"]],["word"]]]],[5,"write_message_segments_to_words",E,E,N,[[["r"]],[["vec",["word"]],["word"]]]],[5,R[2166],E,"Writes the provided message to `write`.",N,[[["w"],["builder"]],[R[12]]]],[5,"write_message_segments",E,E,N,[[["r"],["w"]],[R[12]]]],[5,"compute_serialized_size_in_words",E,"Returns the number of words required to serialize the…",N,[[["builder"]],[R[9]]]],[0,"serialize_packed","capnp","Reading and writing of messages using the packed stream…",N,N],[5,R[2164],"capnp::serialize_packed","Reads a packed message from a stream using the provided…",N,[[["r"],[R[2113]]],[["reader",[R[2165]]],[R[12],["reader"]]]]],[5,R[2166],E,"Writes a packed message to a stream.",N,[[["w"],["builder"]],[R[12]]]],[0,"struct_list","capnp","List of structs.",N,N],[3,"Owned",R[2184],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[11,"new",E,E,70,[[[R[2109]]],["reader"]]],[11,"len",E,E,70,[[["self"]],["u32"]]],[11,"iter",E,E,70,[[],[[R[2167],["reader"]],["reader"]]]],[11,R[2122],E,E,70,[[["self"]],["reader"]]],[11,"get",E,E,70,[[["u32"]]]],[11,"new",E,E,71,[[[R[2108]]],["builder"]]],[11,"len",E,E,71,[[["self"]],["u32"]]],[11,R[2111],E,E,71,[[],["reader"]]],[11,R[2107],E,E,71,[[],["reader"]]],[11,"set_with_caveats",E,"Sets the list element, with the following limitation based…",71,[[["u32"],["self"]],[R[12]]]],[11,R[2122],E,E,71,[[["self"]],["builder"]]],[11,"get",E,E,71,[[["u32"]]]],[0,"text","capnp","UTF-8 encoded text.",N,N],[3,"Owned",R[2185],E,N,N],[3,"Builder",E,E,N,N],[5,"new_reader",E,E,N,[[],[[R[12],["reader"]],["reader"]]]],[6,"Reader",E,E,N,N],[11,"new",E,E,72,[[["u32"]],[["builder"],[R[12],["builder"]]]]],[11,"push_ascii",E,E,72,[[["self"],["u8"]]]],[11,"push_str",E,E,72,[[["str"],["self"]]]],[11,"clear",E,E,72,[[["self"]]]],[0,"text_list","capnp","List of strings containing UTF-8 encoded text.",N,N],[3,"Owned",R[2186],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[11,"new",E,E,73,[[[R[2109]]],["reader"]]],[11,"len",E,E,73,[[["self"]],["u32"]]],[11,"iter",E,E,73,[[],[[R[2167],["reader",R[12]]],[R[12],["reader"]],["reader"]]]],[11,"get",E,E,73,[[["u32"]],[["reader"],[R[12],["reader"]]]]],[11,"new",E,E,74,[[[R[2108]]],["builder"]]],[11,"len",E,E,74,[[["self"]],["u32"]]],[11,"set",E,E,74,[[["u32"],["self"],["reader"]]]],[11,R[2111],E,E,74,[[],["reader"]]],[11,R[2107],E,E,74,[[],["reader"]]],[11,R[2122],E,E,74,[[["self"]],["builder"]]],[11,"get",E,E,74,[[["u32"]],[[R[12],["builder"]],["builder"]]]],[0,"traits","capnp",E,N,N],[3,"ListIter",R[2187],E,N,N],[8,R[2235],E,E,N,N],[10,"new",E,E,75,[[[R[2145]]],["self"]]],[8,R[2236],E,E,N,N],[10,R[4657],E,E,76,[[],[R[2151]]]],[8,R[2237],E,E,N,N],[10,R[4656],E,E,77,[[],[R[2145]]]],[8,R[2238],E,E,N,N],[10,"new",E,E,78,[[[R[2150]]],["self"]]],[8,R[2239],E,E,N,N],[10,R[2194],E,E,79,[[],[R[2109]]]],[8,R[2240],E,E,N,N],[10,R[2168],E,E,80,[[[R[2144]]],[R[12]]]],[8,"Owned",E,"Associated types hackery that allows us to reason about…",N,N],[16,"Reader",E,E,81,N],[16,"Builder",E,E,81,N],[8,R[2241],E,E,N,N],[16,"Reader",E,E,82,N],[16,"Builder",E,E,82,N],[8,"Pipelined",E,E,N,N],[16,R[4571],E,E,83,N],[8,R[2242],E,E,N,N],[10,R[2168],E,E,84,[[[R[2144]]],["self"]]],[8,R[2243],E,E,N,N],[10,R[2195],E,E,85,[[["u32"],[R[2149]]],["self"]]],[10,R[2168],E,E,85,[[[R[2149]]],[R[12]]]],[8,R[2244],E,E,N,N],[10,R[2168],E,E,86,[[[R[2149]]],["self"]]],[8,R[2245],E,E,N,N],[10,R[2196],E,E,87,[[[R[2149]],["bool"]],[R[12]]]],[8,"Imbue",E,E,N,N],[10,"imbue",E,E,88,[[["self"],[R[4658]]]]],[8,"ImbueMut",E,E,N,N],[10,R[4659],E,E,89,[[["self"],[R[4658]]]]],[8,"HasTypeId",E,E,N,N],[10,R[18],E,E,90,[[],["u64"]]],[8,"ToU16",E,E,N,N],[10,"to_u16",E,E,91,[[],["u16"]]],[8,"FromU16",E,E,N,N],[10,"from_u16",E,E,92,[[["u16"]],[[R[12],[R[2110]]],[R[2110]]]]],[8,"IndexMove",E,E,N,N],[10,R[2197],E,E,93,[[["i"],["self"]],[T]]],[11,"new",E,E,94,[[["u32"],[T]],[R[2167]]]],[6,"Result","capnp","Because messages are lazily validated, the return type of…",N,N],[11,"allocate_zeroed_vec",E,"Does this, but faster:…",95,[[[R[9]]],[["vec",["word"]],["word"]]]],[11,"bytes_to_words",E,"Converts a byte slice into a `Word` slice. Unsafe due to…",95,[[]]],[11,"bytes_to_words_mut",E,"Converts a mutable byte slice into a mutable `Word` slice.…",95,[[]]],[11,"words_to_bytes",E,E,95,[[]]],[11,"words_to_bytes_mut",E,E,95,[[]]],[11,"plus_eq",E,E,0,[[["self"],[R[2098]]]]],[11,"failed",E,E,2,[[["string"]],["error"]]],[11,"overloaded",E,E,2,[[["string"]],["error"]]],[11,"disconnected",E,E,2,[[["string"]],["error"]]],[11,"unimplemented",E,E,2,[[["string"]],["error"]]],[14,"capnp_word",E,"Constructs a `Word` from its constituent bytes, accounting…",N,N],[11,"from",E,E,95,[[[T]],[T]]],[11,"into",E,E,95,[[],[U]]],[11,R[16],E,E,95,[[["self"]],[T]]],[11,R[17],E,E,95,[[[T],["self"]]]],[11,R[11],E,E,95,[[[U]],[R[12]]]],[11,R[39],E,E,95,[[["self"]],[T]]],[11,R[13],E,E,95,[[["self"]],[T]]],[11,R[14],E,E,95,[[],[R[12]]]],[11,R[18],E,E,95,[[["self"]],[R[40]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[[T],["self"]]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,[[[T],["self"]]]],[11,R[170],E,E,1,[[["self"]],["string"]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[17],E,E,2,[[[T],["self"]]]],[11,R[170],E,E,2,[[["self"]],["string"]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[17],E,E,3,[[[T],["self"]]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,"from",R[2169],E,96,[[[T]],[T]]],[11,"into",E,E,96,[[],[U]]],[11,R[16],E,E,96,[[["self"]],[T]]],[11,R[17],E,E,96,[[[T],["self"]]]],[11,R[11],E,E,96,[[[U]],[R[12]]]],[11,R[39],E,E,96,[[["self"]],[T]]],[11,R[13],E,E,96,[[["self"]],[T]]],[11,R[14],E,E,96,[[],[R[12]]]],[11,R[18],E,E,96,[[["self"]],[R[40]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[16],E,E,6,[[["self"]],[T]]],[11,R[17],E,E,6,[[[T],["self"]]]],[11,R[11],E,E,6,[[[U]],[R[12]]]],[11,R[39],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[],[R[12]]]],[11,R[18],E,E,6,[[["self"]],[R[40]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[11],E,E,7,[[[U]],[R[12]]]],[11,R[39],E,E,7,[[["self"]],[T]]],[11,R[13],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[],[R[12]]]],[11,R[18],E,E,7,[[["self"]],[R[40]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,R[18],E,E,5,[[["self"]],[R[40]]]],[11,"from",R[2170],E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[11],E,E,17,[[[U]],[R[12]]]],[11,R[39],E,E,17,[[["self"]],[T]]],[11,R[13],E,E,17,[[["self"]],[T]]],[11,R[14],E,E,17,[[],[R[12]]]],[11,R[18],E,E,17,[[["self"]],[R[40]]]],[11,R[99],E,E,17,[[],["f"]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[11],E,E,8,[[[U]],[R[12]]]],[11,R[39],E,E,8,[[["self"]],[T]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[],[R[12]]]],[11,R[18],E,E,8,[[["self"]],[R[40]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[11],E,E,9,[[[U]],[R[12]]]],[11,R[39],E,E,9,[[["self"]],[T]]],[11,R[13],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[],[R[12]]]],[11,R[18],E,E,9,[[["self"]],[R[40]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[11],E,E,10,[[[U]],[R[12]]]],[11,R[39],E,E,10,[[["self"]],[T]]],[11,R[13],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[],[R[12]]]],[11,R[18],E,E,10,[[["self"]],[R[40]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[11],E,E,11,[[[U]],[R[12]]]],[11,R[39],E,E,11,[[["self"]],[T]]],[11,R[13],E,E,11,[[["self"]],[T]]],[11,R[14],E,E,11,[[],[R[12]]]],[11,R[18],E,E,11,[[["self"]],[R[40]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[11],E,E,12,[[[U]],[R[12]]]],[11,R[39],E,E,12,[[["self"]],[T]]],[11,R[13],E,E,12,[[["self"]],[T]]],[11,R[14],E,E,12,[[],[R[12]]]],[11,R[18],E,E,12,[[["self"]],[R[40]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[11],E,E,13,[[[U]],[R[12]]]],[11,R[39],E,E,13,[[["self"]],[T]]],[11,R[13],E,E,13,[[["self"]],[T]]],[11,R[14],E,E,13,[[],[R[12]]]],[11,R[18],E,E,13,[[["self"]],[R[40]]]],[11,"from",R[2171],E,97,[[[T]],[T]]],[11,"into",E,E,97,[[],[U]]],[11,R[16],E,E,97,[[["self"]],[T]]],[11,R[17],E,E,97,[[[T],["self"]]]],[11,R[11],E,E,97,[[[U]],[R[12]]]],[11,R[39],E,E,97,[[["self"]],[T]]],[11,R[13],E,E,97,[[["self"]],[T]]],[11,R[14],E,E,97,[[],[R[12]]]],[11,R[18],E,E,97,[[["self"]],[R[40]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[48],E,E,18,[[],["i"]]],[11,"into",E,E,18,[[],[U]]],[11,R[16],E,E,18,[[["self"]],[T]]],[11,R[17],E,E,18,[[[T],["self"]]]],[11,R[11],E,E,18,[[[U]],[R[12]]]],[11,R[39],E,E,18,[[["self"]],[T]]],[11,R[13],E,E,18,[[["self"]],[T]]],[11,R[14],E,E,18,[[],[R[12]]]],[11,R[18],E,E,18,[[["self"]],[R[40]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[11],E,E,19,[[[U]],[R[12]]]],[11,R[39],E,E,19,[[["self"]],[T]]],[11,R[13],E,E,19,[[["self"]],[T]]],[11,R[14],E,E,19,[[],[R[12]]]],[11,R[18],E,E,19,[[["self"]],[R[40]]]],[11,"from",R[2172],E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[16],E,E,20,[[["self"]],[T]]],[11,R[17],E,E,20,[[[T],["self"]]]],[11,R[11],E,E,20,[[[U]],[R[12]]]],[11,R[39],E,E,20,[[["self"]],[T]]],[11,R[13],E,E,20,[[["self"]],[T]]],[11,R[14],E,E,20,[[],[R[12]]]],[11,R[18],E,E,20,[[["self"]],[R[40]]]],[11,"from",R[2173],E,98,[[[T]],[T]]],[11,"into",E,E,98,[[],[U]]],[11,R[16],E,E,98,[[["self"]],[T]]],[11,R[17],E,E,98,[[[T],["self"]]]],[11,R[11],E,E,98,[[[U]],[R[12]]]],[11,R[39],E,E,98,[[["self"]],[T]]],[11,R[13],E,E,98,[[["self"]],[T]]],[11,R[14],E,E,98,[[],[R[12]]]],[11,R[18],E,E,98,[[["self"]],[R[40]]]],[11,"from",R[2174],E,99,[[[T]],[T]]],[11,"into",E,E,99,[[],[U]]],[11,R[16],E,E,99,[[["self"]],[T]]],[11,R[17],E,E,99,[[[T],["self"]]]],[11,R[11],E,E,99,[[[U]],[R[12]]]],[11,R[39],E,E,99,[[["self"]],[T]]],[11,R[13],E,E,99,[[["self"]],[T]]],[11,R[14],E,E,99,[[],[R[12]]]],[11,R[18],E,E,99,[[["self"]],[R[40]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[48],E,E,21,[[],["i"]]],[11,"into",E,E,21,[[],[U]]],[11,R[16],E,E,21,[[["self"]],[T]]],[11,R[17],E,E,21,[[[T],["self"]]]],[11,R[11],E,E,21,[[[U]],[R[12]]]],[11,R[39],E,E,21,[[["self"]],[T]]],[11,R[13],E,E,21,[[["self"]],[T]]],[11,R[14],E,E,21,[[],[R[12]]]],[11,R[18],E,E,21,[[["self"]],[R[40]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[11],E,E,22,[[[U]],[R[12]]]],[11,R[39],E,E,22,[[["self"]],[T]]],[11,R[13],E,E,22,[[["self"]],[T]]],[11,R[14],E,E,22,[[],[R[12]]]],[11,R[18],E,E,22,[[["self"]],[R[40]]]],[11,"from",R[2175],E,100,[[[T]],[T]]],[11,"into",E,E,100,[[],[U]]],[11,R[16],E,E,100,[[["self"]],[T]]],[11,R[17],E,E,100,[[[T],["self"]]]],[11,R[11],E,E,100,[[[U]],[R[12]]]],[11,R[39],E,E,100,[[["self"]],[T]]],[11,R[13],E,E,100,[[["self"]],[T]]],[11,R[14],E,E,100,[[],[R[12]]]],[11,R[18],E,E,100,[[["self"]],[R[40]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[48],E,E,23,[[],["i"]]],[11,"into",E,E,23,[[],[U]]],[11,R[16],E,E,23,[[["self"]],[T]]],[11,R[17],E,E,23,[[[T],["self"]]]],[11,R[11],E,E,23,[[[U]],[R[12]]]],[11,R[39],E,E,23,[[["self"]],[T]]],[11,R[13],E,E,23,[[["self"]],[T]]],[11,R[14],E,E,23,[[],[R[12]]]],[11,R[18],E,E,23,[[["self"]],[R[40]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[11],E,E,24,[[[U]],[R[12]]]],[11,R[39],E,E,24,[[["self"]],[T]]],[11,R[13],E,E,24,[[["self"]],[T]]],[11,R[14],E,E,24,[[],[R[12]]]],[11,R[18],E,E,24,[[["self"]],[R[40]]]],[11,"from",R[2176],E,101,[[[T]],[T]]],[11,"into",E,E,101,[[],[U]]],[11,R[16],E,E,101,[[["self"]],[T]]],[11,R[17],E,E,101,[[[T],["self"]]]],[11,R[11],E,E,101,[[[U]],[R[12]]]],[11,R[39],E,E,101,[[["self"]],[T]]],[11,R[13],E,E,101,[[["self"]],[T]]],[11,R[14],E,E,101,[[],[R[12]]]],[11,R[18],E,E,101,[[["self"]],[R[40]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[48],E,E,25,[[],["i"]]],[11,"into",E,E,25,[[],[U]]],[11,R[16],E,E,25,[[["self"]],[T]]],[11,R[17],E,E,25,[[[T],["self"]]]],[11,R[11],E,E,25,[[[U]],[R[12]]]],[11,R[39],E,E,25,[[["self"]],[T]]],[11,R[13],E,E,25,[[["self"]],[T]]],[11,R[14],E,E,25,[[],[R[12]]]],[11,R[18],E,E,25,[[["self"]],[R[40]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[11],E,E,26,[[[U]],[R[12]]]],[11,R[39],E,E,26,[[["self"]],[T]]],[11,R[13],E,E,26,[[["self"]],[T]]],[11,R[14],E,E,26,[[],[R[12]]]],[11,R[18],E,E,26,[[["self"]],[R[40]]]],[11,"from",R[2177],E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[16],E,E,27,[[["self"]],[T]]],[11,R[17],E,E,27,[[[T],["self"]]]],[11,R[11],E,E,27,[[[U]],[R[12]]]],[11,R[39],E,E,27,[[["self"]],[T]]],[11,R[13],E,E,27,[[["self"]],[T]]],[11,R[14],E,E,27,[[],[R[12]]]],[11,R[18],E,E,27,[[["self"]],[R[40]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[11],E,E,31,[[[U]],[R[12]]]],[11,R[39],E,E,31,[[["self"]],[T]]],[11,R[13],E,E,31,[[["self"]],[T]]],[11,R[14],E,E,31,[[],[R[12]]]],[11,R[18],E,E,31,[[["self"]],[R[40]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[11],E,E,32,[[[U]],[R[12]]]],[11,R[39],E,E,32,[[["self"]],[T]]],[11,R[13],E,E,32,[[["self"]],[T]]],[11,R[14],E,E,32,[[],[R[12]]]],[11,R[18],E,E,32,[[["self"]],[R[40]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[11],E,E,33,[[[U]],[R[12]]]],[11,R[39],E,E,33,[[["self"]],[T]]],[11,R[13],E,E,33,[[["self"]],[T]]],[11,R[14],E,E,33,[[],[R[12]]]],[11,R[18],E,E,33,[[["self"]],[R[40]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[11],E,E,34,[[[U]],[R[12]]]],[11,R[39],E,E,34,[[["self"]],[T]]],[11,R[13],E,E,34,[[["self"]],[T]]],[11,R[14],E,E,34,[[],[R[12]]]],[11,R[18],E,E,34,[[["self"]],[R[40]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[11],E,E,35,[[[U]],[R[12]]]],[11,R[39],E,E,35,[[["self"]],[T]]],[11,R[13],E,E,35,[[["self"]],[T]]],[11,R[14],E,E,35,[[],[R[12]]]],[11,R[18],E,E,35,[[["self"]],[R[40]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,R[11],E,E,36,[[[U]],[R[12]]]],[11,R[39],E,E,36,[[["self"]],[T]]],[11,R[13],E,E,36,[[["self"]],[T]]],[11,R[14],E,E,36,[[],[R[12]]]],[11,R[18],E,E,36,[[["self"]],[R[40]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,"into",E,E,37,[[],[U]]],[11,R[11],E,E,37,[[[U]],[R[12]]]],[11,R[39],E,E,37,[[["self"]],[T]]],[11,R[13],E,E,37,[[["self"]],[T]]],[11,R[14],E,E,37,[[],[R[12]]]],[11,R[18],E,E,37,[[["self"]],[R[40]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[16],E,E,28,[[["self"]],[T]]],[11,R[17],E,E,28,[[[T],["self"]]]],[11,R[11],E,E,28,[[[U]],[R[12]]]],[11,R[39],E,E,28,[[["self"]],[T]]],[11,R[13],E,E,28,[[["self"]],[T]]],[11,R[14],E,E,28,[[],[R[12]]]],[11,R[18],E,E,28,[[["self"]],[R[40]]]],[11,"from",R[2178],E,102,[[[T]],[T]]],[11,"into",E,E,102,[[],[U]]],[11,R[16],E,E,102,[[["self"]],[T]]],[11,R[17],E,E,102,[[[T],["self"]]]],[11,R[11],E,E,102,[[[U]],[R[12]]]],[11,R[39],E,E,102,[[["self"]],[T]]],[11,R[13],E,E,102,[[["self"]],[T]]],[11,R[14],E,E,102,[[],[R[12]]]],[11,R[18],E,E,102,[[["self"]],[R[40]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[48],E,E,38,[[],["i"]]],[11,"into",E,E,38,[[],[U]]],[11,R[16],E,E,38,[[["self"]],[T]]],[11,R[17],E,E,38,[[[T],["self"]]]],[11,R[11],E,E,38,[[[U]],[R[12]]]],[11,R[39],E,E,38,[[["self"]],[T]]],[11,R[13],E,E,38,[[["self"]],[T]]],[11,R[14],E,E,38,[[],[R[12]]]],[11,R[18],E,E,38,[[["self"]],[R[40]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,R[11],E,E,39,[[[U]],[R[12]]]],[11,R[39],E,E,39,[[["self"]],[T]]],[11,R[13],E,E,39,[[["self"]],[T]]],[11,R[14],E,E,39,[[],[R[12]]]],[11,R[18],E,E,39,[[["self"]],[R[40]]]],[11,"from",R[2128],E,40,[[[T]],[T]]],[11,"into",E,E,40,[[],[U]]],[11,R[11],E,E,40,[[[U]],[R[12]]]],[11,R[39],E,E,40,[[["self"]],[T]]],[11,R[13],E,E,40,[[["self"]],[T]]],[11,R[14],E,E,40,[[],[R[12]]]],[11,R[18],E,E,40,[[["self"]],[R[40]]]],[11,"from",R[2179],E,41,[[[T]],[T]]],[11,"into",E,E,41,[[],[U]]],[11,R[11],E,E,41,[[[U]],[R[12]]]],[11,R[39],E,E,41,[[["self"]],[T]]],[11,R[13],E,E,41,[[["self"]],[T]]],[11,R[14],E,E,41,[[],[R[12]]]],[11,R[18],E,E,41,[[["self"]],[R[40]]]],[11,"from",E,E,44,[[[T]],[T]]],[11,"into",E,E,44,[[],[U]]],[11,R[11],E,E,44,[[[U]],[R[12]]]],[11,R[39],E,E,44,[[["self"]],[T]]],[11,R[13],E,E,44,[[["self"]],[T]]],[11,R[14],E,E,44,[[],[R[12]]]],[11,R[18],E,E,44,[[["self"]],[R[40]]]],[11,"from",E,E,103,[[[T]],[T]]],[11,"into",E,E,103,[[],[U]]],[11,R[11],E,E,103,[[[U]],[R[12]]]],[11,R[39],E,E,103,[[["self"]],[T]]],[11,R[13],E,E,103,[[["self"]],[T]]],[11,R[14],E,E,103,[[],[R[12]]]],[11,R[18],E,E,103,[[["self"]],[R[40]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,"into",E,E,45,[[],[U]]],[11,R[11],E,E,45,[[[U]],[R[12]]]],[11,R[39],E,E,45,[[["self"]],[T]]],[11,R[13],E,E,45,[[["self"]],[T]]],[11,R[14],E,E,45,[[],[R[12]]]],[11,R[18],E,E,45,[[["self"]],[R[40]]]],[11,"from",E,E,104,[[[T]],[T]]],[11,"into",E,E,104,[[],[U]]],[11,R[11],E,E,104,[[[U]],[R[12]]]],[11,R[39],E,E,104,[[["self"]],[T]]],[11,R[13],E,E,104,[[["self"]],[T]]],[11,R[14],E,E,104,[[],[R[12]]]],[11,R[18],E,E,104,[[["self"]],[R[40]]]],[11,"from",R[2180],E,46,[[[T]],[T]]],[11,"into",E,E,46,[[],[U]]],[11,R[16],E,E,46,[[["self"]],[T]]],[11,R[17],E,E,46,[[[T],["self"]]]],[11,R[11],E,E,46,[[[U]],[R[12]]]],[11,R[39],E,E,46,[[["self"]],[T]]],[11,R[13],E,E,46,[[["self"]],[T]]],[11,R[14],E,E,46,[[],[R[12]]]],[11,R[18],E,E,46,[[["self"]],[R[40]]]],[11,"from",R[2181],E,55,[[[T]],[T]]],[11,"into",E,E,55,[[],[U]]],[11,R[11],E,E,55,[[[U]],[R[12]]]],[11,R[39],E,E,55,[[["self"]],[T]]],[11,R[13],E,E,55,[[["self"]],[T]]],[11,R[14],E,E,55,[[],[R[12]]]],[11,R[18],E,E,55,[[["self"]],[R[40]]]],[11,"from",R[2182],E,56,[[[T]],[T]]],[11,"into",E,E,56,[[],[U]]],[11,R[16],E,E,56,[[["self"]],[T]]],[11,R[17],E,E,56,[[[T],["self"]]]],[11,R[11],E,E,56,[[[U]],[R[12]]]],[11,R[39],E,E,56,[[["self"]],[T]]],[11,R[13],E,E,56,[[["self"]],[T]]],[11,R[14],E,E,56,[[],[R[12]]]],[11,R[18],E,E,56,[[["self"]],[R[40]]]],[11,"from",E,E,63,[[[T]],[T]]],[11,"into",E,E,63,[[],[U]]],[11,R[11],E,E,63,[[[U]],[R[12]]]],[11,R[39],E,E,63,[[["self"]],[T]]],[11,R[13],E,E,63,[[["self"]],[T]]],[11,R[14],E,E,63,[[],[R[12]]]],[11,R[18],E,E,63,[[["self"]],[R[40]]]],[11,"from",E,E,64,[[[T]],[T]]],[11,"into",E,E,64,[[],[U]]],[11,R[16],E,E,64,[[["self"]],[T]]],[11,R[17],E,E,64,[[[T],["self"]]]],[11,R[11],E,E,64,[[[U]],[R[12]]]],[11,R[39],E,E,64,[[["self"]],[T]]],[11,R[13],E,E,64,[[["self"]],[T]]],[11,R[14],E,E,64,[[],[R[12]]]],[11,R[18],E,E,64,[[["self"]],[R[40]]]],[11,"from",E,E,65,[[[T]],[T]]],[11,"into",E,E,65,[[],[U]]],[11,R[16],E,E,65,[[["self"]],[T]]],[11,R[17],E,E,65,[[[T],["self"]]]],[11,R[11],E,E,65,[[[U]],[R[12]]]],[11,R[39],E,E,65,[[["self"]],[T]]],[11,R[13],E,E,65,[[["self"]],[T]]],[11,R[14],E,E,65,[[],[R[12]]]],[11,R[18],E,E,65,[[["self"]],[R[40]]]],[11,"from",E,E,66,[[[T]],[T]]],[11,"into",E,E,66,[[],[U]]],[11,R[16],E,E,66,[[["self"]],[T]]],[11,R[17],E,E,66,[[[T],["self"]]]],[11,R[11],E,E,66,[[[U]],[R[12]]]],[11,R[39],E,E,66,[[["self"]],[T]]],[11,R[13],E,E,66,[[["self"]],[T]]],[11,R[14],E,E,66,[[],[R[12]]]],[11,R[18],E,E,66,[[["self"]],[R[40]]]],[11,"from",E,E,67,[[[T]],[T]]],[11,"into",E,E,67,[[],[U]]],[11,R[16],E,E,67,[[["self"]],[T]]],[11,R[17],E,E,67,[[[T],["self"]]]],[11,R[11],E,E,67,[[[U]],[R[12]]]],[11,R[39],E,E,67,[[["self"]],[T]]],[11,R[13],E,E,67,[[["self"]],[T]]],[11,R[14],E,E,67,[[],[R[12]]]],[11,R[18],E,E,67,[[["self"]],[R[40]]]],[11,"from",E,E,68,[[[T]],[T]]],[11,"into",E,E,68,[[],[U]]],[11,R[16],E,E,68,[[["self"]],[T]]],[11,R[17],E,E,68,[[[T],["self"]]]],[11,R[11],E,E,68,[[[U]],[R[12]]]],[11,R[39],E,E,68,[[["self"]],[T]]],[11,R[13],E,E,68,[[["self"]],[T]]],[11,R[14],E,E,68,[[],[R[12]]]],[11,R[18],E,E,68,[[["self"]],[R[40]]]],[11,"from",E,E,69,[[[T]],[T]]],[11,"into",E,E,69,[[],[U]]],[11,R[16],E,E,69,[[["self"]],[T]]],[11,R[17],E,E,69,[[[T],["self"]]]],[11,R[11],E,E,69,[[[U]],[R[12]]]],[11,R[39],E,E,69,[[["self"]],[T]]],[11,R[13],E,E,69,[[["self"]],[T]]],[11,R[14],E,E,69,[[],[R[12]]]],[11,R[18],E,E,69,[[["self"]],[R[40]]]],[11,"from",E,E,57,[[[T]],[T]]],[11,"into",E,E,57,[[],[U]]],[11,R[16],E,E,57,[[["self"]],[T]]],[11,R[17],E,E,57,[[[T],["self"]]]],[11,R[11],E,E,57,[[[U]],[R[12]]]],[11,R[39],E,E,57,[[["self"]],[T]]],[11,R[13],E,E,57,[[["self"]],[T]]],[11,R[14],E,E,57,[[],[R[12]]]],[11,R[18],E,E,57,[[["self"]],[R[40]]]],[11,"from",E,E,58,[[[T]],[T]]],[11,"into",E,E,58,[[],[U]]],[11,R[16],E,E,58,[[["self"]],[T]]],[11,R[17],E,E,58,[[[T],["self"]]]],[11,R[11],E,E,58,[[[U]],[R[12]]]],[11,R[39],E,E,58,[[["self"]],[T]]],[11,R[13],E,E,58,[[["self"]],[T]]],[11,R[14],E,E,58,[[],[R[12]]]],[11,R[18],E,E,58,[[["self"]],[R[40]]]],[11,"from",E,E,59,[[[T]],[T]]],[11,"into",E,E,59,[[],[U]]],[11,R[11],E,E,59,[[[U]],[R[12]]]],[11,R[39],E,E,59,[[["self"]],[T]]],[11,R[13],E,E,59,[[["self"]],[T]]],[11,R[14],E,E,59,[[],[R[12]]]],[11,R[18],E,E,59,[[["self"]],[R[40]]]],[11,"from",E,E,60,[[[T]],[T]]],[11,"into",E,E,60,[[],[U]]],[11,R[16],E,E,60,[[["self"]],[T]]],[11,R[17],E,E,60,[[[T],["self"]]]],[11,R[11],E,E,60,[[[U]],[R[12]]]],[11,R[39],E,E,60,[[["self"]],[T]]],[11,R[13],E,E,60,[[["self"]],[T]]],[11,R[14],E,E,60,[[],[R[12]]]],[11,R[18],E,E,60,[[["self"]],[R[40]]]],[11,"from",E,E,61,[[[T]],[T]]],[11,"into",E,E,61,[[],[U]]],[11,R[16],E,E,61,[[["self"]],[T]]],[11,R[17],E,E,61,[[[T],["self"]]]],[11,R[11],E,E,61,[[[U]],[R[12]]]],[11,R[39],E,E,61,[[["self"]],[T]]],[11,R[13],E,E,61,[[["self"]],[T]]],[11,R[14],E,E,61,[[],[R[12]]]],[11,R[18],E,E,61,[[["self"]],[R[40]]]],[11,"from",R[2183],E,105,[[[T]],[T]]],[11,"into",E,E,105,[[],[U]]],[11,R[11],E,E,105,[[[U]],[R[12]]]],[11,R[39],E,E,105,[[["self"]],[T]]],[11,R[13],E,E,105,[[["self"]],[T]]],[11,R[14],E,E,105,[[],[R[12]]]],[11,R[18],E,E,105,[[["self"]],[R[40]]]],[11,"from",E,E,106,[[[T]],[T]]],[11,"into",E,E,106,[[],[U]]],[11,R[11],E,E,106,[[[U]],[R[12]]]],[11,R[39],E,E,106,[[["self"]],[T]]],[11,R[13],E,E,106,[[["self"]],[T]]],[11,R[14],E,E,106,[[],[R[12]]]],[11,R[18],E,E,106,[[["self"]],[R[40]]]],[11,"from",R[2184],E,107,[[[T]],[T]]],[11,"into",E,E,107,[[],[U]]],[11,R[16],E,E,107,[[["self"]],[T]]],[11,R[17],E,E,107,[[[T],["self"]]]],[11,R[11],E,E,107,[[[U]],[R[12]]]],[11,R[39],E,E,107,[[["self"]],[T]]],[11,R[13],E,E,107,[[["self"]],[T]]],[11,R[14],E,E,107,[[],[R[12]]]],[11,R[18],E,E,107,[[["self"]],[R[40]]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[48],E,E,70,[[],["i"]]],[11,"into",E,E,70,[[],[U]]],[11,R[16],E,E,70,[[["self"]],[T]]],[11,R[17],E,E,70,[[[T],["self"]]]],[11,R[11],E,E,70,[[[U]],[R[12]]]],[11,R[39],E,E,70,[[["self"]],[T]]],[11,R[13],E,E,70,[[["self"]],[T]]],[11,R[14],E,E,70,[[],[R[12]]]],[11,R[18],E,E,70,[[["self"]],[R[40]]]],[11,"from",E,E,71,[[[T]],[T]]],[11,"into",E,E,71,[[],[U]]],[11,R[11],E,E,71,[[[U]],[R[12]]]],[11,R[39],E,E,71,[[["self"]],[T]]],[11,R[13],E,E,71,[[["self"]],[T]]],[11,R[14],E,E,71,[[],[R[12]]]],[11,R[18],E,E,71,[[["self"]],[R[40]]]],[11,"from",R[2185],E,108,[[[T]],[T]]],[11,"into",E,E,108,[[],[U]]],[11,R[16],E,E,108,[[["self"]],[T]]],[11,R[17],E,E,108,[[[T],["self"]]]],[11,R[11],E,E,108,[[[U]],[R[12]]]],[11,R[39],E,E,108,[[["self"]],[T]]],[11,R[13],E,E,108,[[["self"]],[T]]],[11,R[14],E,E,108,[[],[R[12]]]],[11,R[18],E,E,108,[[["self"]],[R[40]]]],[11,"from",E,E,72,[[[T]],[T]]],[11,"into",E,E,72,[[],[U]]],[11,R[11],E,E,72,[[[U]],[R[12]]]],[11,R[39],E,E,72,[[["self"]],[T]]],[11,R[13],E,E,72,[[["self"]],[T]]],[11,R[14],E,E,72,[[],[R[12]]]],[11,R[18],E,E,72,[[["self"]],[R[40]]]],[11,"from",R[2186],E,109,[[[T]],[T]]],[11,"into",E,E,109,[[],[U]]],[11,R[16],E,E,109,[[["self"]],[T]]],[11,R[17],E,E,109,[[[T],["self"]]]],[11,R[11],E,E,109,[[[U]],[R[12]]]],[11,R[39],E,E,109,[[["self"]],[T]]],[11,R[13],E,E,109,[[["self"]],[T]]],[11,R[14],E,E,109,[[],[R[12]]]],[11,R[18],E,E,109,[[["self"]],[R[40]]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[48],E,E,73,[[],["i"]]],[11,"into",E,E,73,[[],[U]]],[11,R[16],E,E,73,[[["self"]],[T]]],[11,R[17],E,E,73,[[[T],["self"]]]],[11,R[11],E,E,73,[[[U]],[R[12]]]],[11,R[39],E,E,73,[[["self"]],[T]]],[11,R[13],E,E,73,[[["self"]],[T]]],[11,R[14],E,E,73,[[],[R[12]]]],[11,R[18],E,E,73,[[["self"]],[R[40]]]],[11,"from",E,E,74,[[[T]],[T]]],[11,"into",E,E,74,[[],[U]]],[11,R[11],E,E,74,[[[U]],[R[12]]]],[11,R[39],E,E,74,[[["self"]],[T]]],[11,R[13],E,E,74,[[["self"]],[T]]],[11,R[14],E,E,74,[[],[R[12]]]],[11,R[18],E,E,74,[[["self"]],[R[40]]]],[11,"from",R[2187],E,94,[[[T]],[T]]],[11,R[48],E,E,94,[[],["i"]]],[11,"into",E,E,94,[[],[U]]],[11,R[11],E,E,94,[[[U]],[R[12]]]],[11,R[39],E,E,94,[[["self"]],[T]]],[11,R[13],E,E,94,[[["self"]],[T]]],[11,R[14],E,E,94,[[],[R[12]]]],[11,R[18],E,E,94,[[["self"]],[R[40]]]],[11,"new",R[2169],E,5,[[[R[2188]]],[R[2188]]]],[11,R[2123],R[2177],E,31,[[["u32"],["self"]],[R[52]]]],[11,"len",E,E,31,[[["self"]],[R[9]]]],[11,R[2123],E,E,34,[[["u32"],["self"]],[R[52]]]],[11,"len",E,E,34,[[["self"]],[R[9]]]],[11,R[2123],R[2183],E,105,[[["u32"],["self"]],[R[52]]]],[11,"len",E,E,105,[[["self"]],[R[9]]]],[11,R[2123],E,E,106,[[["u32"],["self"]],[R[52]]]],[11,"len",E,E,106,[[["self"]],[R[9]]]],[11,R[2123],"capnp",E,4,[[["u32"],["self"]],[R[52]]]],[11,R[2125],R[2177],E,35,[[["u32"],["self"]]]],[11,R[2125],E,E,37,[[["u32"],["self"]]]],[11,"pre_drop",E,E,37,[[["u32"],["self"]]]],[11,R[2123],R[2179],E,44,[[["u32"],["self"]],[R[12]]]],[11,R[2189],E,E,44,[[["u32"],["i32"],["self"]],[R[12]]]],[11,R[2190],E,E,44,[[["u32"],["self"],[R[9]]],[R[12]]]],[11,R[2191],E,E,44,[[["self"],["u64"]],[R[12]]]],[11,R[2123],E,E,45,[[["u32"],["self"]],[R[12]]]],[11,R[2189],E,E,45,[[["u32"],["i32"],["self"]],[R[12]]]],[11,R[2190],E,E,45,[[["u32"],["self"],[R[9]]],[R[12]]]],[11,R[2191],E,E,45,[[["self"],["u64"]],[R[12]]]],[11,R[2123],E,E,104,[[["u32"],["self"]],[R[12]]]],[11,R[2189],E,E,104,[[["u32"],["i32"],["self"]],[R[12]]]],[11,R[2190],E,E,104,[[["u32"],["self"],[R[9]]],[R[12]]]],[11,R[2191],E,E,104,[[["self"],["u64"]],[R[12]]]],[11,R[2813],E,E,45,[[["u32"],[R[2137]],["self"]],[["u32"],[R[52],["u32"]]]]],[11,R[2192],E,E,45,[[["u32"],["self"]]]],[11,R[2193],E,E,45,[[["u32"],["self"]]]],[11,R[2111],E,E,45,[[["self"]],[R[2138]]]],[11,R[2813],E,E,104,[[["u32"],[R[2137]],["self"]],[["u32"],[R[52],["u32"]]]]],[11,R[2192],E,E,104,[[["u32"],["self"]]]],[11,R[2193],E,E,104,[[["u32"],["self"]]]],[11,R[2111],E,E,104,[[["self"]],[R[2138]]]],[11,R[2194],R[2174],E,21,[[],[R[2109]]]],[11,R[2194],R[2175],E,23,[[],[R[2109]]]],[11,R[2194],R[2178],E,38,[[],[R[2109]]]],[11,R[2194],R[2184],E,70,[[],[R[2109]]]],[11,R[2194],R[2186],E,73,[[],[R[2109]]]],[11,R[2168],R[2169],E,6,[[[R[2144]]],[["reader"],[R[12],["reader"]]]]],[11,R[2168],R[2171],E,18,[[[R[2144]]],[[R[12],["reader"]],["reader"]]]],[11,R[2168],"capnp",E,110,[[[R[2144]]],[["reader"],[R[12],["reader"]]]]],[11,R[2168],R[2174],E,21,[[[R[2144]]],[["reader"],[R[12],["reader"]]]]],[11,R[2168],R[2175],E,23,[[[R[2144]]],[["reader"],[R[12],["reader"]]]]],[11,R[2168],R[2176],E,25,[[[R[2144]]],[["reader"],[R[12],["reader"]]]]],[11,R[2168],R[2178],E,38,[[[R[2144]]],[["reader"],[R[12],["reader"]]]]],[11,R[2168],R[2184],E,70,[[[R[2144]]],[["reader"],[R[12],["reader"]]]]],[11,R[2168],"capnp",E,111,[[[R[2144]]],[[R[12],["reader"]],["reader"]]]],[11,R[2168],R[2186],E,73,[[[R[2144]]],[[R[12],["reader"]],["reader"]]]],[11,R[2195],R[2169],E,7,[[["u32"],[R[2149]]],["builder"]]],[11,R[2168],E,E,7,[[[R[2149]]],[["builder"],[R[12],["builder"]]]]],[11,R[2195],R[2171],E,19,[[["u32"],[R[2149]]],["builder"]]],[11,R[2168],E,E,19,[[[R[2149]]],[[R[12],["builder"]],["builder"]]]],[11,R[2195],"capnp",E,112,[[["u32"],[R[2149]]],["builder"]]],[11,R[2168],E,E,112,[[[R[2149]]],[["builder"],[R[12],["builder"]]]]],[11,R[2195],R[2174],E,22,[[["u32"],[R[2149]]],["builder"]]],[11,R[2168],E,E,22,[[[R[2149]]],[[R[12],["builder"]],["builder"]]]],[11,R[2195],R[2175],E,24,[[["u32"],[R[2149]]],["builder"]]],[11,R[2168],E,E,24,[[[R[2149]]],[["builder"],[R[12],["builder"]]]]],[11,R[2195],R[2176],E,26,[[["u32"],[R[2149]]],["builder"]]],[11,R[2168],E,E,26,[[[R[2149]]],[["builder"],[R[12],["builder"]]]]],[11,R[2195],R[2178],E,39,[[["u32"],[R[2149]]],["builder"]]],[11,R[2168],E,E,39,[[[R[2149]]],[[R[12],["builder"]],["builder"]]]],[11,R[2195],R[2184],E,71,[[["u32"],[R[2149]]],["builder"]]],[11,R[2168],E,E,71,[[[R[2149]]],[["builder"],[R[12],["builder"]]]]],[11,R[2195],R[2185],E,72,[[["u32"],[R[2149]]],["builder"]]],[11,R[2168],E,E,72,[[[R[2149]]],[["builder"],[R[12],["builder"]]]]],[11,R[2195],R[2186],E,74,[[["u32"],[R[2149]]],["builder"]]],[11,R[2168],E,E,74,[[[R[2149]]],[["builder"],[R[12],["builder"]]]]],[11,R[2196],R[2169],E,6,[[["reader"],["bool"],[R[2149]]],[R[12]]]],[11,R[2196],R[2171],E,18,[[["reader"],["bool"],[R[2149]]],[R[12]]]],[11,R[2196],"capnp",E,110,[[["reader"],[R[2149]],["bool"]],[R[12]]]],[11,R[2196],R[2174],E,21,[[["reader"],["bool"],[R[2149]]],[R[12]]]],[11,R[2196],R[2175],E,23,[[["reader"],["bool"],[R[2149]]],[R[12]]]],[11,R[2196],R[2176],E,25,[[["reader"],["bool"],[R[2149]]],[R[12]]]],[11,R[2196],R[2178],E,38,[[["reader"],[R[2149]],["bool"]],[R[12]]]],[11,R[2196],R[2184],E,70,[[["reader"],["bool"],[R[2149]]],[R[12]]]],[11,R[2196],"capnp",E,111,[[["reader"],["bool"],[R[2149]]],[R[12]]]],[11,R[2196],R[2186],E,73,[[["bool"],["reader"],[R[2149]]],[R[12]]]],[11,"imbue",R[2169],E,6,[[["self"],[R[4658]]]]],[11,R[4659],E,E,7,[[[R[4658]],["self"]]]],[11,R[2197],R[2171],E,18,[[["u32"],["self"]],[R[12]]]],[11,R[2197],R[2174],E,21,[[["u32"],["self"]],[[R[12],["reader"]],["reader"]]]],[11,R[2197],R[2175],E,23,[[["u32"],["self"]],[[R[2110]],[R[12],[R[2110]]]]]],[11,R[2197],R[2176],E,25,[[["u32"],["self"]],[R[12]]]],[11,R[2197],R[2178],E,38,[[["u32"],["self"]],[T]]],[11,R[2197],R[2184],E,70,[[["u32"],["self"]]]],[11,R[2197],R[2186],E,73,[[["u32"],["self"]],[["reader"],[R[12],["reader"]]]]],[11,"eq",R[2182],E,57,[[["self"],[R[2135]]],["bool"]]],[11,"eq",E,E,58,[[[R[2139]],["self"]],["bool"]]],[11,"eq","capnp",E,95,[[["word"],["self"]],["bool"]]],[11,"ne",E,E,95,[[["word"],["self"]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[2098]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[2098]]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[2110]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[2110]]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[1]]],["bool"]]],[11,R[49],R[2187],E,94,[[["self"]],[R[52]]]],[11,"clone",R[2169],E,96,[[["self"]],["owned"]]],[11,"clone",E,E,6,[[["self"]],["reader"]]],[11,"clone",R[2171],E,97,[[["self"]],["owned"]]],[11,"clone",E,E,18,[[["self"]],["reader"]]],[11,"clone",R[2172],E,20,[[["self"]],["reader"]]],[11,"clone",R[2173],E,98,[[["self"]],["owned"]]],[11,"clone",R[2174],E,99,[[["self"]],["owned"]]],[11,"clone",E,E,21,[[["self"]],["reader"]]],[11,"clone",R[2175],E,100,[[["self"]],["owned"]]],[11,"clone",E,E,23,[[["self"]],["reader"]]],[11,"clone",R[2176],E,101,[[["self"]],["owned"]]],[11,"clone",E,E,25,[[["self"]],["reader"]]],[11,"clone",R[2177],E,27,[[["self"]],[R[2113]]]],[11,"clone",E,E,28,[[["self"]],[R[2121]]]],[11,"clone",R[2178],E,102,[[["self"]],["owned"]]],[11,"clone",E,E,38,[[["self"]],["reader"]]],[11,"clone",R[2180],E,46,[[["self"]],[R[2198]]]],[11,"clone",R[2182],E,57,[[["self"]],[R[2135]]]],[11,"clone",E,E,56,[[["self"]],[R[2151]]]],[11,"clone",E,E,58,[[["self"]],[R[2139]]]],[11,"clone",E,E,60,[[["self"]],[R[2141]]]],[11,"clone",E,E,61,[[["self"]],[R[2156]]]],[11,"clone",E,E,64,[[["self"]],[R[2144]]]],[11,"clone",E,E,65,[[["self"]],[R[2149]]]],[11,"clone",E,E,66,[[["self"]],[R[2145]]]],[11,"clone",E,E,67,[[["self"]],[R[2150]]]],[11,"clone",E,E,68,[[["self"]],[R[2109]]]],[11,"clone",E,E,69,[[["self"]],[R[2108]]]],[11,"clone",R[2184],E,107,[[["self"]],["owned"]]],[11,"clone",E,E,70,[[["self"]],["reader"]]],[11,"clone",R[2185],E,108,[[["self"]],["owned"]]],[11,"clone",R[2186],E,109,[[["self"]],["owned"]]],[11,"clone",E,E,73,[[["self"]],["reader"]]],[11,"clone","capnp",E,95,[[["self"]],["word"]]],[11,"clone",E,E,0,[[["self"]],[R[2098]]]],[11,"clone",E,E,1,[[["self"]],[R[2110]]]],[11,"clone",E,E,2,[[["self"]],["error"]]],[11,"clone",E,E,3,[[["self"]],[R[1]]]],[11,"from",R[2177],E,33,[[["reader"]],[R[2199]]]],[11,"from",E,E,33,[[["builder"]],[[R[2199],["builder"]],["builder"]]]],[11,"from","capnp",E,2,[[["error"]],["error"]]],[11,"from",E,E,2,[[[R[2249]]],["error"]]],[11,"from",E,E,2,[[[R[802]]],["error"]]],[11,"from",E,E,2,[[[R[179]]],["error"]]],[11,"from",E,E,2,[[[R[2110]]],["error"]]],[11,R[48],R[2171],E,18,[[]]],[11,R[48],R[2174],E,21,[[]]],[11,R[48],R[2175],E,23,[[]]],[11,R[48],R[2176],E,25,[[]]],[11,R[48],R[2178],E,38,[[]]],[11,R[48],R[2184],E,70,[[]]],[11,R[48],R[2186],E,73,[[]]],[11,"drop",R[2179],E,103,[[["self"]]]],[11,"next",R[2187],E,94,[[["self"]],[R[52]]]],[11,R[53],E,E,94,[[["self"]]]],[11,"nth",E,E,94,[[["self"],[R[9]]],[R[52]]]],[11,"len",E,E,94,[[["self"]],[R[9]]]],[11,"as_ref",R[2185],E,72,[[["self"]],["str"]]],[11,R[79],R[2177],E,27,[[],[R[2113]]]],[11,"fmt",E,E,27,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,35,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,28,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,36,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[2182],E,57,[[[R[29]],["self"]],[R[12]]]],[11,"fmt","capnp",E,95,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,0,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,1,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,2,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,3,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,1,[[["self"],[R[29]]],[["error"],[R[12],["error"]]]]],[11,"fmt",E,E,2,[[["self"],[R[29]]],[["error"],[R[12],["error"]]]]],[11,"deref",R[2185],E,72,[[["self"]],["str"]]],[11,"deref","capnp",E,4,[[["self"]]]],[11,R[30],E,E,1,[[["self"]],["str"]]],[11,R[30],E,E,2,[[["self"]],["str"]]],[11,"cause",E,E,2,[[["self"]],[[R[52],["error"]],["error"]]]],[11,"poll",R[2170],E,17,[[["self"]],["poll"]]]],"p":[[3,R[2200]],[3,R[2201]],[3,"Error"],[4,R[32]],[4,R[2202]],[3,R[4571]],[3,"Reader"],[3,"Builder"],[3,R[2203]],[3,"Response"],[3,"Request"],[3,"Params"],[3,"Results"],[3,"Client"],[8,R[2204]],[8,R[2205]],[8,"Server"],[3,"Promise"],[3,"Reader"],[3,"Builder"],[3,"Reader"],[3,"Reader"],[3,"Builder"],[3,"Reader"],[3,"Builder"],[3,"Reader"],[3,"Builder"],[3,R[2206]],[4,R[2207]],[8,R[2208]],[8,"Allocator"],[3,R[2209]],[3,"Reader"],[3,R[2210]],[3,"Builder"],[3,R[2211]],[3,R[2212]],[3,R[2213]],[3,"Reader"],[3,"Builder"],[3,"RawSchema"],[3,R[2214]],[8,R[2215]],[8,R[2216]],[3,R[2217]],[3,R[2218]],[4,"PipelineOp"],[8,R[2219]],[8,R[2220]],[8,"ClientHook"],[8,"ServerHook"],[8,R[2221]],[8,"ParamsHook"],[8,R[2222]],[8,"Endian"],[3,"WireValue"],[3,"StructSize"],[4,R[2223]],[4,R[2224]],[4,R[2225]],[4,R[2226]],[4,R[2227]],[8,R[2228]],[3,R[2229]],[3,R[2230]],[3,R[2231]],[3,R[2232]],[3,R[2233]],[3,"ListReader"],[3,R[2234]],[3,"Reader"],[3,"Builder"],[3,"Builder"],[3,"Reader"],[3,"Builder"],[8,R[2235]],[8,R[2236]],[8,R[2237]],[8,R[2238]],[8,R[2239]],[8,R[2240]],[8,"Owned"],[8,R[2241]],[8,"Pipelined"],[8,R[2242]],[8,R[2243]],[8,R[2244]],[8,R[2245]],[8,"Imbue"],[8,"ImbueMut"],[8,"HasTypeId"],[8,"ToU16"],[8,"FromU16"],[8,"IndexMove"],[3,"ListIter"],[3,"Word"],[3,"Owned"],[3,"Owned"],[3,"Owned"],[3,"Owned"],[3,"Owned"],[3,"Owned"],[3,"Owned"],[3,R[2246]],[3,"NullArena"],[3,R[2247]],[3,R[2248]],[3,"Owned"],[3,"Owned"],[3,"Owned"],[6,"Reader"],[6,"Reader"],[6,"Builder"]]};
searchIndex["cfg_if"]={"doc":"A macro for defining `#[cfg]` if-else statements.","i":[[14,"cfg_if","cfg_if","The main macro provided by this crate. See crate…",N,N]],"p":[]};
searchIndex["chrono"]={"doc":"Chrono: Date and Time for Rust","i":[[3,"Duration","chrono",R[3410],N,N],[3,"Date",E,"ISO 8601 calendar date with time zone.",N,N],[3,"DateTime",E,"ISO 8601 combined date and time with time zone.",N,N],[3,R[3407],E,"An error resulting from reading `Weekday` value with…",N,N],[4,R[3400],E,"Specific formatting options for seconds. This may be…",N,N],[13,"Secs",E,"Format whole seconds only, with no decimal point nor…",0,N],[13,"Millis",E,"Use fixed 3 subsecond digits. This corresponds to…",0,N],[13,"Micros",E,"Use fixed 6 subsecond digits. This corresponds to…",0,N],[13,"Nanos",E,"Use fixed 9 subsecond digits. This corresponds to…",0,N],[13,"AutoSi",E,"Automatically select one of `Secs`, `Millis`, `Micros`, or…",0,N],[4,"Weekday",E,"The day of week.",N,N],[13,"Mon",E,"Monday.",1,N],[13,"Tue",E,"Tuesday.",1,N],[13,"Wed",E,"Wednesday.",1,N],[13,"Thu",E,"Thursday.",1,N],[13,"Fri",E,"Friday.",1,N],[13,"Sat",E,"Saturday.",1,N],[13,"Sun",E,"Sunday.",1,N],[0,"prelude",E,"A convenience module appropriate for glob imports (`use…",N,N],[0,"offset",E,"The time zone, which calculates offsets from the local…",N,N],[3,"Utc",R[3353],"The UTC time zone. This is the most efficient time zone…",N,N],[3,R[3402],E,"The time zone with fixed offset, from UTC-23:59:59 to…",N,N],[3,"Local",E,"The local timescale. This is implemented via the standard…",N,N],[4,R[3401],E,"The conversion result from the local time to the…",N,N],[13,"None",E,"Given local time representation is invalid. This can occur…",2,N],[13,"Single",E,"Given local time representation has a single unique result.",2,N],[13,"Ambiguous",E,"Given local time representation has multiple results and…",2,N],[11,"today",E,R[3284],3,[[],[["date",["utc"]],["utc"]]]],[11,"now",E,R[3285],3,[[],[[R[3292],["utc"]],["utc"]]]],[11,"east",E,R[3281],4,[[["i32"]],[R[3282]]]],[11,"east_opt",E,R[3281],4,[[["i32"]],[[R[52],[R[3282]]],[R[3282]]]]],[11,"west",E,R[3283],4,[[["i32"]],[R[3282]]]],[11,"west_opt",E,R[3283],4,[[["i32"]],[[R[52],[R[3282]]],[R[3282]]]]],[11,"local_minus_utc",E,"Returns the number of seconds to add to convert from UTC…",4,[[["self"]],["i32"]]],[11,"utc_minus_local",E,"Returns the number of seconds to add to convert from the…",4,[[["self"]],["i32"]]],[11,"today",E,R[3284],5,[[],[["date",["local"]],["local"]]]],[11,"now",E,R[3285],5,[[],[["local"],[R[3292],["local"]]]]],[8,"Offset",E,"The offset from the local time to UTC.",N,N],[10,"fix",E,"Returns the fixed offset from UTC to the local time stored.",6,[[["self"]],[R[3282]]]],[8,"TimeZone",E,"The time zone.",N,N],[16,"Offset",E,"An associated offset type. This type is used to store the…",7,N],[11,"ymd",E,R[3286],7,[[["u32"],["i32"],["self"]],["date"]]],[11,"ymd_opt",E,R[3286],7,[[["u32"],["i32"],["self"]],[["date"],[R[3288],["date"]]]]],[11,"yo",E,R[3287],7,[[["u32"],["i32"],["self"]],["date"]]],[11,"yo_opt",E,R[3287],7,[[["u32"],["i32"],["self"]],[["date"],[R[3288],["date"]]]]],[11,"isoywd",E,R[3289],7,[[["u32"],["i32"],["weekday"],["self"]],["date"]]],[11,"isoywd_opt",E,R[3289],7,[[["u32"],["i32"],["weekday"],["self"]],[["date"],[R[3288],["date"]]]]],[11,R[3344],E,R[3290],7,[[["u32"],["i64"],["self"]],[R[3292]]]],[11,"timestamp_opt",E,R[3290],7,[[["u32"],["i64"],["self"]],[[R[3292]],[R[3288],[R[3292]]]]]],[11,R[3320],E,R[3291],7,[[["i64"],["self"]],[R[3292]]]],[11,"timestamp_millis_opt",E,R[3291],7,[[["i64"],["self"]],[[R[3292]],[R[3288],[R[3292]]]]]],[11,"datetime_from_str",E,R[3300],7,[[["str"],["self"]],[[R[3292]],[R[3301],[R[3292]]]]]],[10,R[3356],E,"Reconstructs the time zone from the offset.",7,[[],["self"]]],[10,R[3357],E,"Creates the offset(s) for given local `NaiveDate` if…",7,[[[R[3294]],["self"]],[R[3288]]]],[10,R[3358],E,"Creates the offset(s) for given local `NaiveDateTime` if…",7,[[[R[3293]],["self"]],[R[3288]]]],[11,R[3361],E,"Converts the local `NaiveDate` to the timezone-aware…",7,[[[R[3294]],["self"]],[["date"],[R[3288],["date"]]]]],[11,R[3362],E,"Converts the local `NaiveDateTime` to the timezone-aware…",7,[[[R[3293]],["self"]],[[R[3292]],[R[3288],[R[3292]]]]]],[10,R[3359],E,"Creates the offset for given UTC `NaiveDate`. This cannot…",7,[[[R[3294]],["self"]]]],[10,R[3360],E,"Creates the offset for given UTC `NaiveDateTime`. This…",7,[[[R[3293]],["self"]]]],[11,R[3363],E,"Converts the UTC `NaiveDate` to the local time. The UTC is…",7,[[[R[3294]],["self"]],["date"]]],[11,R[3364],E,"Converts the UTC `NaiveDateTime` to the local time. The…",7,[[[R[3293]],["self"]],[R[3292]]]],[11,"single",E,"Returns `Some` only when the conversion result is unique,…",2,[[],[R[52]]]],[11,"earliest",E,"Returns `Some` for the earliest possible conversion…",2,[[],[R[52]]]],[11,"latest",E,"Returns `Some` for the latest possible conversion result,…",2,[[],[R[52]]]],[11,"map",E,"Maps a `LocalResult<T>` into `LocalResult<U>` with given…",2,[[["fnmut"]],[R[3288]]]],[11,"and_time",E,R[3324],2,[[[R[3313]]],[[R[3292]],[R[3288],[R[3292]]]]]],[11,R[3302],E,R[3325],2,[[["u32"]],[[R[3292]],[R[3288],[R[3292]]]]]],[11,R[3304],E,R[3295],2,[[["u32"]],[[R[3292]],[R[3288],[R[3292]]]]]],[11,R[3305],E,R[3295],2,[[["u32"]],[[R[3292]],[R[3288],[R[3292]]]]]],[11,R[3306],E,R[3295],2,[[["u32"]],[[R[3292]],[R[3288],[R[3292]]]]]],[11,"unwrap",E,"Returns the single unique conversion result, or panics…",2,[[],[T]]],[0,"naive","chrono","Date and time types which do not concern about the…",N,N],[3,"NaiveDate",R[3354],"ISO 8601 calendar date without timezone. Allows for every…",N,N],[3,"IsoWeek",E,"ISO 8601 week.",N,N],[3,"NaiveTime",E,"ISO 8601 time without timezone. Allows for the nanosecond…",N,N],[3,R[3403],E,"ISO 8601 combined date and time without timezone.",N,N],[11,"from_ymd",E,R[3296],8,[[["u32"],["i32"]],[R[3294]]]],[11,"from_ymd_opt",E,R[3296],8,[[["u32"],["i32"]],[[R[3294]],[R[52],[R[3294]]]]]],[11,"from_yo",E,R[3297],8,[[["u32"],["i32"]],[R[3294]]]],[11,"from_yo_opt",E,R[3297],8,[[["u32"],["i32"]],[[R[3294]],[R[52],[R[3294]]]]]],[11,"from_isoywd",E,R[3298],8,[[["u32"],["i32"],["weekday"]],[R[3294]]]],[11,"from_isoywd_opt",E,R[3298],8,[[["u32"],["i32"],["weekday"]],[[R[3294]],[R[52],[R[3294]]]]]],[11,"from_num_days_from_ce",E,R[3299],8,[[["i32"]],[R[3294]]]],[11,"from_num_days_from_ce_opt",E,R[3299],8,[[["i32"]],[[R[3294]],[R[52],[R[3294]]]]]],[11,R[3316],E,R[3300],8,[[["str"]],[[R[3301],[R[3294]]],[R[3294]]]]],[11,"and_time",E,"Makes a new `NaiveDateTime` from the current date and…",8,[[[R[3313]],["self"]],[R[3293]]]],[11,"and_hms",E,R[3303],8,[[["u32"],["self"]],[R[3293]]]],[11,R[3302],E,R[3303],8,[[["u32"],["self"]],[[R[3293]],[R[52],[R[3293]]]]]],[11,R[3326],E,R[3303],8,[[["u32"],["self"]],[R[3293]]]],[11,R[3304],E,R[3303],8,[[["u32"],["self"]],[[R[3293]],[R[52],[R[3293]]]]]],[11,R[3327],E,R[3303],8,[[["u32"],["self"]],[R[3293]]]],[11,R[3305],E,R[3303],8,[[["u32"],["self"]],[[R[3293]],[R[52],[R[3293]]]]]],[11,R[3328],E,R[3303],8,[[["u32"],["self"]],[R[3293]]]],[11,R[3306],E,R[3303],8,[[["u32"],["self"]],[[R[3293]],[R[52],[R[3293]]]]]],[11,"succ",E,R[3307],8,[[["self"]],[R[3294]]]],[11,"succ_opt",E,R[3307],8,[[["self"]],[[R[3294]],[R[52],[R[3294]]]]]],[11,"pred",E,R[3308],8,[[["self"]],[R[3294]]]],[11,"pred_opt",E,R[3308],8,[[["self"]],[[R[3294]],[R[52],[R[3294]]]]]],[11,R[3321],E,"Adds the `days` part of given `Duration` to the current…",8,[[[R[3309]]],[[R[3294]],[R[52],[R[3294]]]]]],[11,R[3322],E,"Subtracts the `days` part of given `Duration` from the…",8,[[[R[3309]]],[[R[3294]],[R[52],[R[3294]]]]]],[11,R[3317],E,"Subtracts another `NaiveDate` from the current date.…",8,[[[R[3294]]],[R[3309]]]],[11,R[3318],E,"Formats the date with the specified formatting items.…",8,[[["i"],["self"]],[R[3310]]]],[11,"format",E,R[3331],8,[[["str"],["self"]],[[R[3311]],[R[3310],[R[3311]]]]]],[11,"year",E,"Returns the year number for this ISO week.",9,[[["self"]],["i32"]]],[11,"week",E,"Returns the ISO week number starting from 1.",9,[[["self"]],["u32"]]],[11,"week0",E,"Returns the ISO week number starting from 0.",9,[[["self"]],["u32"]]],[11,"from_hms",E,R[3312],10,[[["u32"]],[R[3313]]]],[11,"from_hms_opt",E,R[3312],10,[[["u32"]],[[R[3313]],[R[52],[R[3313]]]]]],[11,"from_hms_milli",E,R[3314],10,[[["u32"]],[R[3313]]]],[11,"from_hms_milli_opt",E,R[3314],10,[[["u32"]],[[R[3313]],[R[52],[R[3313]]]]]],[11,"from_hms_micro",E,R[3314],10,[[["u32"]],[R[3313]]]],[11,"from_hms_micro_opt",E,R[3314],10,[[["u32"]],[[R[3313]],[R[52],[R[3313]]]]]],[11,"from_hms_nano",E,R[3314],10,[[["u32"]],[R[3313]]]],[11,"from_hms_nano_opt",E,R[3314],10,[[["u32"]],[[R[3313]],[R[52],[R[3313]]]]]],[11,"from_num_seconds_from_midnight",E,R[3315],10,[[["u32"]],[R[3313]]]],[11,"from_num_seconds_from_midnight_opt",E,R[3315],10,[[["u32"]],[[R[3313]],[R[52],[R[3313]]]]]],[11,R[3316],E,R[3300],10,[[["str"]],[[R[3301],[R[3313]]],[R[3313]]]]],[11,"overflowing_add_signed",E,"Adds given `Duration` to the current time, and also…",10,[[[R[3309]],["self"]]]],[11,"overflowing_sub_signed",E,"Subtracts given `Duration` from the current time, and also…",10,[[[R[3309]],["self"]]]],[11,R[3317],E,"Subtracts another `NaiveTime` from the current time.…",10,[[[R[3313]]],[R[3309]]]],[11,R[3318],E,"Formats the time with the specified formatting items.…",10,[[["i"],["self"]],[R[3310]]]],[11,"format",E,"Formats the time with the specified format string. See the…",10,[[["str"],["self"]],[[R[3311]],[R[3310],[R[3311]]]]]],[11,"new",E,"Makes a new `NaiveDateTime` from date and time components.…",11,[[[R[3294]],[R[3313]]],[R[3293]]]],[11,"from_timestamp",E,R[3319],11,[[["u32"],["i64"]],[R[3293]]]],[11,"from_timestamp_opt",E,R[3319],11,[[["u32"],["i64"]],[[R[3293]],[R[52],[R[3293]]]]]],[11,R[3316],E,R[3300],11,[[["str"]],[[R[3301],[R[3293]]],[R[3293]]]]],[11,"date",E,R[3332],11,[[["self"]],[R[3294]]]],[11,"time",E,"Retrieves a time component.",11,[[["self"]],[R[3313]]]],[11,R[3344],E,"Returns the number of non-leap seconds since the midnight…",11,[[["self"]],["i64"]]],[11,R[3320],E,"Returns the number of non-leap milliseconds since midnight…",11,[[["self"]],["i64"]]],[11,R[3333],E,"Returns the number of non-leap nanoseconds since midnight…",11,[[["self"]],["i64"]]],[11,R[3334],E,"Returns the number of milliseconds since the last whole…",11,[[["self"]],["u32"]]],[11,R[3335],E,"Returns the number of microseconds since the last whole…",11,[[["self"]],["u32"]]],[11,R[3336],E,"Returns the number of nanoseconds since the last whole…",11,[[["self"]],["u32"]]],[11,R[3321],E,R[3341],11,[[[R[3309]]],[[R[3293]],[R[52],[R[3293]]]]]],[11,R[3322],E,R[3342],11,[[[R[3309]]],[[R[3293]],[R[52],[R[3293]]]]]],[11,R[3317],E,"Subtracts another `NaiveDateTime` from the current date…",11,[[[R[3293]]],[R[3309]]]],[11,R[3318],E,R[3323],11,[[["i"],["self"]],[R[3310]]]],[11,"format",E,R[3323],11,[[["str"],["self"]],[[R[3311]],[R[3310],[R[3311]]]]]],[17,"MIN_DATE",E,"The minimum possible `NaiveDate` (January 1, 262145 BCE).",N,N],[17,"MAX_DATE",E,"The maximum possible `NaiveDate` (December 31, 262143 CE).",N,N],[11,"from_utc","chrono","Makes a new `Date` with given UTC date and offset. The…",12,[[[R[3294]]],["date"]]],[11,"and_time",E,R[3324],12,[[[R[3313]],["self"]],[[R[52],[R[3292]]],[R[3292]]]]],[11,"and_hms",E,R[3325],12,[[["u32"],["self"]],[R[3292]]]],[11,R[3302],E,R[3325],12,[[["u32"],["self"]],[[R[52],[R[3292]]],[R[3292]]]]],[11,R[3326],E,R[3295],12,[[["u32"],["self"]],[R[3292]]]],[11,R[3304],E,R[3295],12,[[["u32"],["self"]],[[R[52],[R[3292]]],[R[3292]]]]],[11,R[3327],E,R[3295],12,[[["u32"],["self"]],[R[3292]]]],[11,R[3305],E,R[3295],12,[[["u32"],["self"]],[[R[52],[R[3292]]],[R[3292]]]]],[11,R[3328],E,R[3295],12,[[["u32"],["self"]],[R[3292]]]],[11,R[3306],E,R[3295],12,[[["u32"],["self"]],[[R[52],[R[3292]]],[R[3292]]]]],[11,"succ",E,R[3329],12,[[["self"]],["date"]]],[11,"succ_opt",E,R[3329],12,[[["self"]],[[R[52],["date"]],["date"]]]],[11,"pred",E,R[3330],12,[[["self"]],["date"]]],[11,"pred_opt",E,R[3330],12,[[["self"]],[[R[52],["date"]],["date"]]]],[11,"offset",E,R[3337],12,[[["self"]]]],[11,R[788],E,R[3338],12,[[["self"]],["tz"]]],[11,R[3339],E,R[3340],12,[[["tz2"],["self"]],[[R[788]],["date"]]]],[11,R[3321],E,"Adds given `Duration` to the current date.",12,[[[R[3309]]],[[R[52],["date"]],["date"]]]],[11,R[3322],E,"Subtracts given `Duration` from the current date.",12,[[[R[3309]]],[[R[52],["date"]],["date"]]]],[11,R[3317],E,"Subtracts another `Date` from the current date. Returns a…",12,[[[R[788]],["date"]],[R[3309]]]],[11,"naive_utc",E,"Returns a view to the naive UTC date.",12,[[["self"]],[R[3294]]]],[11,R[3343],E,"Returns a view to the naive local date.",12,[[["self"]],[R[3294]]]],[11,R[3318],E,"Formats the date with the specified formatting items.",12,[[["i"],["self"]],[R[3310]]]],[11,"format",E,R[3331],12,[[["str"],["self"]],[[R[3311]],[R[3310],[R[3311]]]]]],[11,"from_utc",E,"Makes a new `DateTime` with given UTC datetime and offset.…",13,[[[R[3293]]],[R[3292]]]],[11,"date",E,R[3332],13,[[["self"]],["date"]]],[11,"time",E,"Retrieves a time component. Unlike `date`, this is not…",13,[[["self"]],[R[3313]]]],[11,R[3344],E,"Returns the number of non-leap seconds since January 1,…",13,[[["self"]],["i64"]]],[11,R[3320],E,"Returns the number of non-leap-milliseconds since January…",13,[[["self"]],["i64"]]],[11,R[3333],E,"Returns the number of non-leap-nanoseconds since January…",13,[[["self"]],["i64"]]],[11,R[3334],E,"Returns the number of milliseconds since the last second…",13,[[["self"]],["u32"]]],[11,R[3335],E,"Returns the number of microseconds since the last second…",13,[[["self"]],["u32"]]],[11,R[3336],E,"Returns the number of nanoseconds since the last second…",13,[[["self"]],["u32"]]],[11,"offset",E,R[3337],13,[[["self"]]]],[11,R[788],E,R[3338],13,[[["self"]],["tz"]]],[11,R[3339],E,R[3340],13,[[["tz2"],["self"]],[[R[788]],[R[3292]]]]],[11,R[3321],E,R[3341],13,[[[R[3309]]],[[R[52],[R[3292]]],[R[3292]]]]],[11,R[3322],E,R[3342],13,[[[R[3309]]],[[R[52],[R[3292]]],[R[3292]]]]],[11,R[3317],E,"Subtracts another `DateTime` from the current date and…",13,[[[R[788]],[R[3292]]],[R[3309]]]],[11,"naive_utc",E,"Returns a view to the naive UTC datetime.",13,[[["self"]],[R[3293]]]],[11,R[3343],E,"Returns a view to the naive local datetime.",13,[[["self"]],[R[3293]]]],[11,"parse_from_rfc2822",E,"Parses an RFC 2822 date and time string such as `Tue, 1…",13,[[["str"]],[[R[3292],[R[3282]]],[R[3301],[R[3292]]]]]],[11,"parse_from_rfc3339",E,"Parses an RFC 3339 and ISO 8601 date and time string such…",13,[[["str"]],[[R[3292],[R[3282]]],[R[3301],[R[3292]]]]]],[11,R[3316],E,R[3300],13,[[["str"]],[[R[3292],[R[3282]]],[R[3301],[R[3292]]]]]],[11,"to_rfc2822",E,"Returns an RFC 2822 date and time string such as `Tue, 1…",13,[[["self"]],["string"]]],[11,"to_rfc3339",E,"Returns an RFC 3339 and ISO 8601 date and time string such…",13,[[["self"]],["string"]]],[11,"to_rfc3339_opts",E,"Return an RFC 3339 and ISO 8601 date and time string with…",13,[[[R[3396]],["self"],["bool"]],["string"]]],[11,R[3318],E,R[3323],13,[[["i"],["self"]],[R[3310]]]],[11,"format",E,R[3323],13,[[["str"],["self"]],[[R[3311]],[R[3310],[R[3311]]]]]],[0,"format",E,"Formatting (and parsing) utilities for date and time.",N,N],[3,"Parsed",R[3351],"Parsed parts of date and time. There are two classes of…",N,N],[12,"year",E,"Year.",14,N],[12,"year_div_100",E,"Year divided by 100. Implies that the year is >= 1 BCE…",14,N],[12,"year_mod_100",E,"Year modulo 100. Implies that the year is >= 1 BCE when set.",14,N],[12,"isoyear",E,"Year in the ISO week date.",14,N],[12,"isoyear_div_100",E,"Year in the ISO week date, divided by 100. Implies that…",14,N],[12,"isoyear_mod_100",E,"Year in the ISO week date, modulo 100. Implies that the…",14,N],[12,"month",E,"Month (1--12).",14,N],[12,"week_from_sun",E,R[3345],14,N],[12,"week_from_mon",E,R[3346],14,N],[12,"isoweek",E,"ISO week number (1--52 or 1--53 depending on the year).",14,N],[12,"weekday",E,"Day of the week.",14,N],[12,"ordinal",E,"Day of the year (1--365 or 1--366 depending on the year).",14,N],[12,"day",E,"Day of the month (1--28, 1--29, 1--30 or 1--31 depending…",14,N],[12,"hour_div_12",E,"Hour number divided by 12 (0--1). 0 indicates AM and 1…",14,N],[12,"hour_mod_12",E,"Hour number modulo 12 (0--11).",14,N],[12,"minute",E,"Minute number (0--59).",14,N],[12,"second",E,"Second number (0--60, accounting for leap seconds).",14,N],[12,R[3388],E,"The number of nanoseconds since the whole second…",14,N],[12,R[3344],E,R[3347],14,N],[12,"offset",E,"Offset from the local time to UTC, in seconds.",14,N],[3,R[3408],E,"An opaque type representing numeric item types for…",N,N],[3,R[3409],E,"An opaque type representing fixed-format item types for…",N,N],[3,R[3411],E,"An error from the `parse` function.",N,N],[3,R[3405],E,"A temporary object which can be used as an argument to…",N,N],[4,"Pad",E,"Padding characters for numeric items.",N,N],[13,"None",E,"No padding.",15,N],[13,"Zero",E,"Zero (`0`) padding.",15,N],[13,"Space",E,"Space padding.",15,N],[4,"Numeric",E,"Numeric item types. They have associated formatting width…",N,N],[13,"Year",E,"Full Gregorian year (FW=4, PW=∞). May accept years before…",16,N],[13,"YearDiv100",E,"Gregorian year divided by 100 (century number; FW=PW=2).…",16,N],[13,"YearMod100",E,"Gregorian year modulo 100 (FW=PW=2). Cannot be negative.",16,N],[13,"IsoYear",E,"Year in the ISO week date (FW=4, PW=∞). May accept years…",16,N],[13,"IsoYearDiv100",E,"Year in the ISO week date, divided by 100 (FW=PW=2).…",16,N],[13,"IsoYearMod100",E,"Year in the ISO week date, modulo 100 (FW=PW=2). Cannot be…",16,N],[13,"Month",E,"Month (FW=PW=2).",16,N],[13,"Day",E,"Day of the month (FW=PW=2).",16,N],[13,"WeekFromSun",E,R[3345],16,N],[13,"WeekFromMon",E,R[3346],16,N],[13,"IsoWeek",E,"Week number in the ISO week date (FW=PW=2).",16,N],[13,"NumDaysFromSun",E,"Day of the week, where Sunday = 0 and Saturday = 6…",16,N],[13,"WeekdayFromMon",E,"Day of the week, where Monday = 1 and Sunday = 7 (FW=PW=1).",16,N],[13,"Ordinal",E,"Day of the year (FW=PW=3).",16,N],[13,"Hour",E,"Hour number in the 24-hour clocks (FW=PW=2).",16,N],[13,"Hour12",E,"Hour number in the 12-hour clocks (FW=PW=2).",16,N],[13,"Minute",E,"The number of minutes since the last whole hour (FW=PW=2).",16,N],[13,"Second",E,"The number of seconds since the last whole minute (FW=PW=2).",16,N],[13,"Nanosecond",E,"The number of nanoseconds since the last whole second…",16,N],[13,"Timestamp",E,R[3347],16,N],[13,"Internal",E,R[3349],16,N],[4,"Fixed",E,"Fixed-format item types.",N,N],[13,"ShortMonthName",E,"Abbreviated month names.",17,N],[13,"LongMonthName",E,"Full month names.",17,N],[13,"ShortWeekdayName",E,"Abbreviated day of the week names.",17,N],[13,"LongWeekdayName",E,"Full day of the week names.",17,N],[13,"LowerAmPm",E,"AM/PM.",17,N],[13,"UpperAmPm",E,"AM/PM.",17,N],[13,"Nanosecond",E,"An optional dot plus one or more digits for left-aligned…",17,N],[13,"Nanosecond3",E,"Same to `Nanosecond` but the accuracy is fixed to 3.",17,N],[13,"Nanosecond6",E,"Same to `Nanosecond` but the accuracy is fixed to 6.",17,N],[13,"Nanosecond9",E,"Same to `Nanosecond` but the accuracy is fixed to 9.",17,N],[13,"TimezoneName",E,"Timezone name.",17,N],[13,"TimezoneOffsetColon",E,R[3348],17,N],[13,"TimezoneOffsetColonZ",E,R[3348],17,N],[13,"TimezoneOffset",E,"Same to `TimezoneOffsetColon` but prints no colon. Parsing…",17,N],[13,"TimezoneOffsetZ",E,"Same to `TimezoneOffsetColonZ` but prints no colon.…",17,N],[13,"RFC2822",E,"RFC 2822 date and time syntax. Commonly used for email and…",17,N],[13,"RFC3339",E,"RFC 3339 & ISO 8601 date and time syntax.",17,N],[13,"Internal",E,R[3349],17,N],[4,"Item",E,"A single formatting item. This is used for both formatting…",N,N],[13,R[602],E,"A literally printed and parsed text.",18,N],[13,"OwnedLiteral",E,"Same to `Literal` but with the string owned by the item.",18,N],[13,"Space",E,"Whitespace. Prints literally but reads zero or more…",18,N],[13,"OwnedSpace",E,"Same to `Space` but with the string owned by the item.",18,N],[13,"Numeric",E,"Numeric item. Can be optionally padded to the maximal…",18,N],[13,"Fixed",E,"Fixed-format item.",18,N],[13,"Error",E,"Issues a formatting error. Used to signal an invalid…",18,N],[5,"parse",E,"Tries to parse given string into `parsed` with given…",N,[[["str"],["parsed"],["i"]],[R[3301]]]],[5,"format",E,"Tries to format given arguments with given formatting…",N,[[[R[3294]],[R[3313]],["i"],[R[52]],[R[29]],[R[52],[R[3313]]],[R[52],[R[3294]]]],[R[12]]]],[11,"new",E,"Returns the initial value of parsed parts.",14,[[],["parsed"]]],[11,"set_year",E,"Tries to set the `year` field from given value.",14,[[["self"],["i64"]],[R[3301]]]],[11,"set_year_div_100",E,"Tries to set the `year_div_100` field from given value.",14,[[["self"],["i64"]],[R[3301]]]],[11,"set_year_mod_100",E,"Tries to set the `year_mod_100` field from given value.",14,[[["self"],["i64"]],[R[3301]]]],[11,"set_isoyear",E,"Tries to set the `isoyear` field from given value.",14,[[["self"],["i64"]],[R[3301]]]],[11,"set_isoyear_div_100",E,"Tries to set the `isoyear_div_100` field from given value.",14,[[["self"],["i64"]],[R[3301]]]],[11,"set_isoyear_mod_100",E,"Tries to set the `isoyear_mod_100` field from given value.",14,[[["self"],["i64"]],[R[3301]]]],[11,"set_month",E,"Tries to set the `month` field from given value.",14,[[["self"],["i64"]],[R[3301]]]],[11,"set_week_from_sun",E,"Tries to set the `week_from_sun` field from given value.",14,[[["self"],["i64"]],[R[3301]]]],[11,"set_week_from_mon",E,"Tries to set the `week_from_mon` field from given value.",14,[[["self"],["i64"]],[R[3301]]]],[11,"set_isoweek",E,"Tries to set the `isoweek` field from given value.",14,[[["self"],["i64"]],[R[3301]]]],[11,"set_weekday",E,"Tries to set the `weekday` field from given value.",14,[[["self"],["weekday"]],[R[3301]]]],[11,"set_ordinal",E,"Tries to set the `ordinal` field from given value.",14,[[["self"],["i64"]],[R[3301]]]],[11,"set_day",E,"Tries to set the `day` field from given value.",14,[[["self"],["i64"]],[R[3301]]]],[11,"set_ampm",E,"Tries to set the `hour_div_12` field from given value.…",14,[[["self"],["bool"]],[R[3301]]]],[11,"set_hour12",E,"Tries to set the `hour_mod_12` field from given hour…",14,[[["self"],["i64"]],[R[3301]]]],[11,"set_hour",E,"Tries to set both `hour_div_12` and `hour_mod_12` fields…",14,[[["self"],["i64"]],[R[3301]]]],[11,"set_minute",E,"Tries to set the `minute` field from given value.",14,[[["self"],["i64"]],[R[3301]]]],[11,"set_second",E,"Tries to set the `second` field from given value.",14,[[["self"],["i64"]],[R[3301]]]],[11,"set_nanosecond",E,"Tries to set the `nanosecond` field from given value.",14,[[["self"],["i64"]],[R[3301]]]],[11,"set_timestamp",E,"Tries to set the `timestamp` field from given value.",14,[[["self"],["i64"]],[R[3301]]]],[11,"set_offset",E,"Tries to set the `offset` field from given value.",14,[[["self"],["i64"]],[R[3301]]]],[11,"to_naive_date",E,"Returns a parsed naive date out of given fields.",14,[[["self"]],[[R[3301],[R[3294]]],[R[3294]]]]],[11,"to_naive_time",E,"Returns a parsed naive time out of given fields.",14,[[["self"]],[[R[3301],[R[3313]]],[R[3313]]]]],[11,"to_naive_datetime_with_offset",E,"Returns a parsed naive date and time out of given fields,…",14,[[["i32"],["self"]],[[R[3301],[R[3293]]],[R[3293]]]]],[11,"to_fixed_offset",E,"Returns a parsed fixed time zone offset out of given fields.",14,[[["self"]],[[R[3282]],[R[3301],[R[3282]]]]]],[11,"to_datetime",E,R[3350],14,[[["self"]],[[R[3292],[R[3282]]],[R[3301],[R[3292]]]]]],[11,"to_datetime_with_timezone",E,R[3350],14,[[["tz"],["self"]],[[R[3301],[R[3292]]],[R[3292]]]]],[0,"strftime",E,"`strftime`/`strptime`-inspired date and time formatting…",N,N],[3,R[3404],R[3355],"Parsing iterator for `strftime`-like format strings.",N,N],[11,"new",E,"Creates a new parsing iterator from the `strftime`-like…",19,[[["str"]],[R[3311]]]],[6,"ParseResult",R[3351],"Same to `Result<T, ParseError>`.",N,N],[11,"new",E,R[3352],20,[[["i"],[R[3294]],[R[3313]],[R[52],[R[3313]]],[R[52],[R[3294]]]],[R[3310]]]],[11,"new_with_offset",E,R[3352],20,[[["off"],["i"],[R[3294]],[R[3313]],[R[52],[R[3313]]],[R[52],[R[3294]]]],[R[3310]]]],[17,"MIN_DATE","chrono","The minimum possible `Date`.",N,N],[17,"MAX_DATE",E,"The maximum possible `Date`.",N,N],[8,R[3406],E,"Extension trait for subsecond rounding or truncation to a…",N,N],[10,"round_subsecs",E,"Return a copy rounded to the specified number of subsecond…",21,[[["u16"]],["self"]]],[10,"trunc_subsecs",E,"Return a copy truncated to the specified number of…",21,[[["u16"]],["self"]]],[8,"Datelike",E,"The common set of methods for date component.",N,N],[10,"year",E,R[3365],22,[[["self"]],["i32"]]],[11,"year_ce",E,"Returns the absolute year number starting from 1 with a…",22,[[["self"]]]],[10,"month",E,R[3366],22,[[["self"]],["u32"]]],[10,"month0",E,R[3367],22,[[["self"]],["u32"]]],[10,"day",E,R[3368],22,[[["self"]],["u32"]]],[10,"day0",E,R[3369],22,[[["self"]],["u32"]]],[10,"ordinal",E,R[3370],22,[[["self"]],["u32"]]],[10,"ordinal0",E,R[3371],22,[[["self"]],["u32"]]],[10,"weekday",E,R[3372],22,[[["self"]],["weekday"]]],[10,"iso_week",E,"Returns the ISO week.",22,[[["self"]],["isoweek"]]],[10,R[3383],E,"Makes a new value with the year number changed.",22,[[["i32"],["self"]],[R[52]]]],[10,R[3379],E,"Makes a new value with the month number (starting from 1)…",22,[[["u32"],["self"]],[R[52]]]],[10,R[3373],E,"Makes a new value with the month number (starting from 0)…",22,[[["u32"],["self"]],[R[52]]]],[10,"with_day",E,"Makes a new value with the day of month (starting from 1)…",22,[[["u32"],["self"]],[R[52]]]],[10,R[3384],E,"Makes a new value with the day of month (starting from 0)…",22,[[["u32"],["self"]],[R[52]]]],[10,R[3376],E,"Makes a new value with the day of year (starting from 1)…",22,[[["u32"],["self"]],[R[52]]]],[10,R[3377],E,"Makes a new value with the day of year (starting from 0)…",22,[[["u32"],["self"]],[R[52]]]],[11,"num_days_from_ce",E,"Returns the number of days since January 1, Year 1 (aka…",22,[[["self"]],["i32"]]],[8,"Timelike",E,"The common set of methods for time component.",N,N],[10,"hour",E,R[3385],23,[[["self"]],["u32"]]],[11,"hour12",E,"Returns the hour number from 1 to 12 with a boolean flag,…",23,[[["self"]]]],[10,"minute",E,R[3386],23,[[["self"]],["u32"]]],[10,"second",E,R[3387],23,[[["self"]],["u32"]]],[10,R[3388],E,R[3389],23,[[["self"]],["u32"]]],[10,R[3395],E,"Makes a new value with the hour number changed.",23,[[["u32"],["self"]],[R[52]]]],[10,R[3390],E,"Makes a new value with the minute number changed.",23,[[["u32"],["self"]],[R[52]]]],[10,R[3391],E,"Makes a new value with the second number changed.",23,[[["u32"],["self"]],[R[52]]]],[10,R[3392],E,"Makes a new value with nanoseconds since the whole…",23,[[["u32"],["self"]],[R[52]]]],[11,R[3393],E,R[3394],23,[[["self"]],["u32"]]],[11,"succ",E,"The next day in the week.",1,[[["self"]],["weekday"]]],[11,"pred",E,"The previous day in the week.",1,[[["self"]],["weekday"]]],[11,"number_from_monday",E,"Returns a day-of-week number starting from Monday = 1.…",1,[[["self"]],["u32"]]],[11,"number_from_sunday",E,"Returns a day-of-week number starting from Sunday = 1.",1,[[["self"]],["u32"]]],[11,"num_days_from_monday",E,"Returns a day-of-week number starting from Monday = 0.",1,[[["self"]],["u32"]]],[11,"num_days_from_sunday",E,"Returns a day-of-week number starting from Sunday = 0.",1,[[["self"]],["u32"]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[16],E,E,24,[[["self"]],[T]]],[11,R[17],E,E,24,[[[T],["self"]]]],[11,R[170],E,E,24,[[["self"]],["string"]]],[11,R[11],E,E,24,[[[U]],[R[12]]]],[11,R[39],E,E,24,[[["self"]],[T]]],[11,R[13],E,E,24,[[["self"]],[T]]],[11,R[14],E,E,24,[[],[R[12]]]],[11,R[18],E,E,24,[[["self"]],[R[40]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[16],E,E,12,[[["self"]],[T]]],[11,R[17],E,E,12,[[[T],["self"]]]],[11,R[170],E,E,12,[[["self"]],["string"]]],[11,R[11],E,E,12,[[[U]],[R[12]]]],[11,R[39],E,E,12,[[["self"]],[T]]],[11,R[13],E,E,12,[[["self"]],[T]]],[11,R[14],E,E,12,[[],[R[12]]]],[11,R[18],E,E,12,[[["self"]],[R[40]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[16],E,E,13,[[["self"]],[T]]],[11,R[17],E,E,13,[[[T],["self"]]]],[11,R[170],E,E,13,[[["self"]],["string"]]],[11,R[11],E,E,13,[[[U]],[R[12]]]],[11,R[39],E,E,13,[[["self"]],[T]]],[11,R[13],E,E,13,[[["self"]],[T]]],[11,R[14],E,E,13,[[],[R[12]]]],[11,R[18],E,E,13,[[["self"]],[R[40]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[16],E,E,25,[[["self"]],[T]]],[11,R[17],E,E,25,[[[T],["self"]]]],[11,R[11],E,E,25,[[[U]],[R[12]]]],[11,R[39],E,E,25,[[["self"]],[T]]],[11,R[13],E,E,25,[[["self"]],[T]]],[11,R[14],E,E,25,[[],[R[12]]]],[11,R[18],E,E,25,[[["self"]],[R[40]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[[T],["self"]]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,[[[T],["self"]]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",R[3353],E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[17],E,E,3,[[[T],["self"]]]],[11,R[170],E,E,3,[[["self"]],["string"]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[16],E,E,4,[[["self"]],[T]]],[11,R[17],E,E,4,[[[T],["self"]]]],[11,R[170],E,E,4,[[["self"]],["string"]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[16],E,E,5,[[["self"]],[T]]],[11,R[17],E,E,5,[[[T],["self"]]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,R[18],E,E,5,[[["self"]],[R[40]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[17],E,E,2,[[[T],["self"]]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",R[3354],E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[16],E,E,8,[[["self"]],[T]]],[11,R[17],E,E,8,[[[T],["self"]]]],[11,R[170],E,E,8,[[["self"]],["string"]]],[11,R[11],E,E,8,[[[U]],[R[12]]]],[11,R[39],E,E,8,[[["self"]],[T]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[],[R[12]]]],[11,R[18],E,E,8,[[["self"]],[R[40]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[16],E,E,9,[[["self"]],[T]]],[11,R[17],E,E,9,[[[T],["self"]]]],[11,R[11],E,E,9,[[[U]],[R[12]]]],[11,R[39],E,E,9,[[["self"]],[T]]],[11,R[13],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[],[R[12]]]],[11,R[18],E,E,9,[[["self"]],[R[40]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[16],E,E,10,[[["self"]],[T]]],[11,R[17],E,E,10,[[[T],["self"]]]],[11,R[170],E,E,10,[[["self"]],["string"]]],[11,R[11],E,E,10,[[[U]],[R[12]]]],[11,R[39],E,E,10,[[["self"]],[T]]],[11,R[13],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[],[R[12]]]],[11,R[18],E,E,10,[[["self"]],[R[40]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[16],E,E,11,[[["self"]],[T]]],[11,R[17],E,E,11,[[[T],["self"]]]],[11,R[170],E,E,11,[[["self"]],["string"]]],[11,R[11],E,E,11,[[[U]],[R[12]]]],[11,R[39],E,E,11,[[["self"]],[T]]],[11,R[13],E,E,11,[[["self"]],[T]]],[11,R[14],E,E,11,[[],[R[12]]]],[11,R[18],E,E,11,[[["self"]],[R[40]]]],[11,"from",R[3351],E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[16],E,E,14,[[["self"]],[T]]],[11,R[17],E,E,14,[[[T],["self"]]]],[11,R[11],E,E,14,[[[U]],[R[12]]]],[11,R[39],E,E,14,[[["self"]],[T]]],[11,R[13],E,E,14,[[["self"]],[T]]],[11,R[14],E,E,14,[[],[R[12]]]],[11,R[18],E,E,14,[[["self"]],[R[40]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[16],E,E,26,[[["self"]],[T]]],[11,R[17],E,E,26,[[[T],["self"]]]],[11,R[11],E,E,26,[[[U]],[R[12]]]],[11,R[39],E,E,26,[[["self"]],[T]]],[11,R[13],E,E,26,[[["self"]],[T]]],[11,R[14],E,E,26,[[],[R[12]]]],[11,R[18],E,E,26,[[["self"]],[R[40]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[16],E,E,27,[[["self"]],[T]]],[11,R[17],E,E,27,[[[T],["self"]]]],[11,R[11],E,E,27,[[[U]],[R[12]]]],[11,R[39],E,E,27,[[["self"]],[T]]],[11,R[13],E,E,27,[[["self"]],[T]]],[11,R[14],E,E,27,[[],[R[12]]]],[11,R[18],E,E,27,[[["self"]],[R[40]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[16],E,E,28,[[["self"]],[T]]],[11,R[17],E,E,28,[[[T],["self"]]]],[11,R[170],E,E,28,[[["self"]],["string"]]],[11,R[11],E,E,28,[[[U]],[R[12]]]],[11,R[39],E,E,28,[[["self"]],[T]]],[11,R[13],E,E,28,[[["self"]],[T]]],[11,R[14],E,E,28,[[],[R[12]]]],[11,R[18],E,E,28,[[["self"]],[R[40]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[170],E,E,20,[[["self"]],["string"]]],[11,R[11],E,E,20,[[[U]],[R[12]]]],[11,R[39],E,E,20,[[["self"]],[T]]],[11,R[13],E,E,20,[[["self"]],[T]]],[11,R[14],E,E,20,[[],[R[12]]]],[11,R[18],E,E,20,[[["self"]],[R[40]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[16],E,E,15,[[["self"]],[T]]],[11,R[17],E,E,15,[[[T],["self"]]]],[11,R[11],E,E,15,[[[U]],[R[12]]]],[11,R[39],E,E,15,[[["self"]],[T]]],[11,R[13],E,E,15,[[["self"]],[T]]],[11,R[14],E,E,15,[[],[R[12]]]],[11,R[18],E,E,15,[[["self"]],[R[40]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[16],E,E,16,[[["self"]],[T]]],[11,R[17],E,E,16,[[[T],["self"]]]],[11,R[11],E,E,16,[[[U]],[R[12]]]],[11,R[39],E,E,16,[[["self"]],[T]]],[11,R[13],E,E,16,[[["self"]],[T]]],[11,R[14],E,E,16,[[],[R[12]]]],[11,R[18],E,E,16,[[["self"]],[R[40]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[16],E,E,17,[[["self"]],[T]]],[11,R[17],E,E,17,[[[T],["self"]]]],[11,R[11],E,E,17,[[[U]],[R[12]]]],[11,R[39],E,E,17,[[["self"]],[T]]],[11,R[13],E,E,17,[[["self"]],[T]]],[11,R[14],E,E,17,[[],[R[12]]]],[11,R[18],E,E,17,[[["self"]],[R[40]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[16],E,E,18,[[["self"]],[T]]],[11,R[17],E,E,18,[[[T],["self"]]]],[11,R[11],E,E,18,[[[U]],[R[12]]]],[11,R[39],E,E,18,[[["self"]],[T]]],[11,R[13],E,E,18,[[["self"]],[T]]],[11,R[14],E,E,18,[[],[R[12]]]],[11,R[18],E,E,18,[[["self"]],[R[40]]]],[11,"from",R[3355],E,19,[[[T]],[T]]],[11,R[48],E,E,19,[[],["i"]]],[11,"into",E,E,19,[[],[U]]],[11,R[16],E,E,19,[[["self"]],[T]]],[11,R[17],E,E,19,[[[T],["self"]]]],[11,R[11],E,E,19,[[[U]],[R[12]]]],[11,R[39],E,E,19,[[["self"]],[T]]],[11,R[13],E,E,19,[[["self"]],[T]]],[11,R[14],E,E,19,[[],[R[12]]]],[11,R[18],E,E,19,[[["self"]],[R[40]]]],[11,"div","chrono",E,24,[[["i32"]],[R[1358]]]],[11,"hash",E,E,24,[[["self"],["__h"]]]],[11,"cmp",E,E,24,[[["self"],[R[1358]]],[R[51]]]],[11,"clone",E,E,24,[[["self"]],[R[1358]]]],[11,"add",E,E,24,[[[R[1358]]],[R[1358]]]],[11,"fmt",E,E,24,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"neg",E,E,24,[[],[R[1358]]]],[11,"sub",E,E,24,[[[R[1358]]],[R[1358]]]],[11,R[264],E,E,24,[[["self"],[R[1358]]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,24,[[["self"],[R[1358]]],["bool"]]],[11,"le",E,E,24,[[["self"],[R[1358]]],["bool"]]],[11,"gt",E,E,24,[[["self"],[R[1358]]],["bool"]]],[11,"ge",E,E,24,[[["self"],[R[1358]]],["bool"]]],[11,"fmt",E,E,24,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"mul",E,E,24,[[["i32"]],[R[1358]]]],[11,"eq",E,E,24,[[["self"],[R[1358]]],["bool"]]],[11,"ne",E,E,24,[[["self"],[R[1358]]],["bool"]]],[11,"fix",R[3353],E,3,[[["self"]],[R[3282]]]],[11,"fix",E,E,4,[[["self"]],[R[3282]]]],[11,R[3356],E,E,3,[[["utc"]],["utc"]]],[11,R[3357],E,E,3,[[[R[3294]],["self"]],[["utc"],[R[3288],["utc"]]]]],[11,R[3358],E,E,3,[[[R[3293]],["self"]],[["utc"],[R[3288],["utc"]]]]],[11,R[3359],E,E,3,[[[R[3294]],["self"]],["utc"]]],[11,R[3360],E,E,3,[[[R[3293]],["self"]],["utc"]]],[11,R[3356],E,E,4,[[[R[3282]]],[R[3282]]]],[11,R[3357],E,E,4,[[[R[3294]],["self"]],[[R[3282]],[R[3288],[R[3282]]]]]],[11,R[3358],E,E,4,[[[R[3293]],["self"]],[[R[3282]],[R[3288],[R[3282]]]]]],[11,R[3359],E,E,4,[[[R[3294]],["self"]],[R[3282]]]],[11,R[3360],E,E,4,[[[R[3293]],["self"]],[R[3282]]]],[11,R[3356],E,E,5,[[[R[3282]]],["local"]]],[11,R[3357],E,E,5,[[[R[3294]],["self"]],[[R[3282]],[R[3288],[R[3282]]]]]],[11,R[3358],E,E,5,[[[R[3293]],["self"]],[[R[3282]],[R[3288],[R[3282]]]]]],[11,R[3359],E,E,5,[[[R[3294]],["self"]],[R[3282]]]],[11,R[3360],E,E,5,[[[R[3293]],["self"]],[R[3282]]]],[11,R[3361],E,E,5,[[[R[3294]],["self"]],[["date",["local"]],[R[3288],["date"]]]]],[11,R[3362],E,E,5,[[[R[3293]],["self"]],[[R[3292],["local"]],[R[3288],[R[3292]]]]]],[11,R[3363],E,E,5,[[[R[3294]],["self"]],[["date",["local"]],["local"]]]],[11,R[3364],E,E,5,[[[R[3293]],["self"]],[["local"],[R[3292],["local"]]]]],[11,"year",R[3354],R[3365],8,[[["self"]],["i32"]]],[11,"month",E,R[3366],8,[[["self"]],["u32"]]],[11,"month0",E,R[3367],8,[[["self"]],["u32"]]],[11,"day",E,R[3368],8,[[["self"]],["u32"]]],[11,"day0",E,R[3369],8,[[["self"]],["u32"]]],[11,"ordinal",E,R[3370],8,[[["self"]],["u32"]]],[11,"ordinal0",E,R[3371],8,[[["self"]],["u32"]]],[11,"weekday",E,R[3372],8,[[["self"]],["weekday"]]],[11,"iso_week",E,E,8,[[["self"]],["isoweek"]]],[11,R[3383],E,"Makes a new `NaiveDate` with the year number changed.",8,[[["i32"],["self"]],[[R[3294]],[R[52],[R[3294]]]]]],[11,R[3379],E,R[3374],8,[[["u32"],["self"]],[[R[3294]],[R[52],[R[3294]]]]]],[11,R[3373],E,R[3374],8,[[["u32"],["self"]],[[R[3294]],[R[52],[R[3294]]]]]],[11,"with_day",E,R[3375],8,[[["u32"],["self"]],[[R[3294]],[R[52],[R[3294]]]]]],[11,R[3384],E,R[3375],8,[[["u32"],["self"]],[[R[3294]],[R[52],[R[3294]]]]]],[11,R[3376],E,R[3378],8,[[["u32"],["self"]],[[R[3294]],[R[52],[R[3294]]]]]],[11,R[3377],E,R[3378],8,[[["u32"],["self"]],[[R[3294]],[R[52],[R[3294]]]]]],[11,"year",E,R[3365],11,[[["self"]],["i32"]]],[11,"month",E,R[3366],11,[[["self"]],["u32"]]],[11,"month0",E,R[3367],11,[[["self"]],["u32"]]],[11,"day",E,R[3368],11,[[["self"]],["u32"]]],[11,"day0",E,R[3369],11,[[["self"]],["u32"]]],[11,"ordinal",E,R[3370],11,[[["self"]],["u32"]]],[11,"ordinal0",E,R[3371],11,[[["self"]],["u32"]]],[11,"weekday",E,R[3372],11,[[["self"]],["weekday"]]],[11,"iso_week",E,E,11,[[["self"]],["isoweek"]]],[11,R[3383],E,"Makes a new `NaiveDateTime` with the year number changed.",11,[[["i32"],["self"]],[[R[3293]],[R[52],[R[3293]]]]]],[11,R[3379],E,R[3380],11,[[["u32"],["self"]],[[R[3293]],[R[52],[R[3293]]]]]],[11,R[3373],E,R[3380],11,[[["u32"],["self"]],[[R[3293]],[R[52],[R[3293]]]]]],[11,"with_day",E,R[3381],11,[[["u32"],["self"]],[[R[3293]],[R[52],[R[3293]]]]]],[11,R[3384],E,R[3381],11,[[["u32"],["self"]],[[R[3293]],[R[52],[R[3293]]]]]],[11,R[3376],E,R[3382],11,[[["u32"],["self"]],[[R[3293]],[R[52],[R[3293]]]]]],[11,R[3377],E,R[3382],11,[[["u32"],["self"]],[[R[3293]],[R[52],[R[3293]]]]]],[11,"year","chrono",E,12,[[["self"]],["i32"]]],[11,"month",E,E,12,[[["self"]],["u32"]]],[11,"month0",E,E,12,[[["self"]],["u32"]]],[11,"day",E,E,12,[[["self"]],["u32"]]],[11,"day0",E,E,12,[[["self"]],["u32"]]],[11,"ordinal",E,E,12,[[["self"]],["u32"]]],[11,"ordinal0",E,E,12,[[["self"]],["u32"]]],[11,"weekday",E,E,12,[[["self"]],["weekday"]]],[11,"iso_week",E,E,12,[[["self"]],["isoweek"]]],[11,R[3383],E,E,12,[[["i32"],["self"]],[[R[52],["date"]],["date"]]]],[11,R[3379],E,E,12,[[["u32"],["self"]],[[R[52],["date"]],["date"]]]],[11,R[3373],E,E,12,[[["u32"],["self"]],[[R[52],["date"]],["date"]]]],[11,"with_day",E,E,12,[[["u32"],["self"]],[[R[52],["date"]],["date"]]]],[11,R[3384],E,E,12,[[["u32"],["self"]],[[R[52],["date"]],["date"]]]],[11,R[3376],E,E,12,[[["u32"],["self"]],[[R[52],["date"]],["date"]]]],[11,R[3377],E,E,12,[[["u32"],["self"]],[[R[52],["date"]],["date"]]]],[11,"year",E,E,13,[[["self"]],["i32"]]],[11,"month",E,E,13,[[["self"]],["u32"]]],[11,"month0",E,E,13,[[["self"]],["u32"]]],[11,"day",E,E,13,[[["self"]],["u32"]]],[11,"day0",E,E,13,[[["self"]],["u32"]]],[11,"ordinal",E,E,13,[[["self"]],["u32"]]],[11,"ordinal0",E,E,13,[[["self"]],["u32"]]],[11,"weekday",E,E,13,[[["self"]],["weekday"]]],[11,"iso_week",E,E,13,[[["self"]],["isoweek"]]],[11,R[3383],E,E,13,[[["i32"],["self"]],[[R[52],[R[3292]]],[R[3292]]]]],[11,R[3379],E,E,13,[[["u32"],["self"]],[[R[52],[R[3292]]],[R[3292]]]]],[11,R[3373],E,E,13,[[["u32"],["self"]],[[R[52],[R[3292]]],[R[3292]]]]],[11,"with_day",E,E,13,[[["u32"],["self"]],[[R[52],[R[3292]]],[R[3292]]]]],[11,R[3384],E,E,13,[[["u32"],["self"]],[[R[52],[R[3292]]],[R[3292]]]]],[11,R[3376],E,E,13,[[["u32"],["self"]],[[R[52],[R[3292]]],[R[3292]]]]],[11,R[3377],E,E,13,[[["u32"],["self"]],[[R[52],[R[3292]]],[R[3292]]]]],[11,"hour",R[3354],R[3385],10,[[["self"]],["u32"]]],[11,"minute",E,R[3386],10,[[["self"]],["u32"]]],[11,"second",E,R[3387],10,[[["self"]],["u32"]]],[11,R[3388],E,R[3389],10,[[["self"]],["u32"]]],[11,R[3395],E,"Makes a new `NaiveTime` with the hour number changed.",10,[[["u32"],["self"]],[[R[3313]],[R[52],[R[3313]]]]]],[11,R[3390],E,"Makes a new `NaiveTime` with the minute number changed.",10,[[["u32"],["self"]],[[R[3313]],[R[52],[R[3313]]]]]],[11,R[3391],E,"Makes a new `NaiveTime` with the second number changed.",10,[[["u32"],["self"]],[[R[3313]],[R[52],[R[3313]]]]]],[11,R[3392],E,"Makes a new `NaiveTime` with nanoseconds since the whole…",10,[[["u32"],["self"]],[[R[3313]],[R[52],[R[3313]]]]]],[11,R[3393],E,R[3394],10,[[["self"]],["u32"]]],[11,"hour",E,R[3385],11,[[["self"]],["u32"]]],[11,"minute",E,R[3386],11,[[["self"]],["u32"]]],[11,"second",E,R[3387],11,[[["self"]],["u32"]]],[11,R[3388],E,R[3389],11,[[["self"]],["u32"]]],[11,R[3395],E,"Makes a new `NaiveDateTime` with the hour number changed.",11,[[["u32"],["self"]],[[R[3293]],[R[52],[R[3293]]]]]],[11,R[3390],E,"Makes a new `NaiveDateTime` with the minute number changed.",11,[[["u32"],["self"]],[[R[3293]],[R[52],[R[3293]]]]]],[11,R[3391],E,"Makes a new `NaiveDateTime` with the second number changed.",11,[[["u32"],["self"]],[[R[3293]],[R[52],[R[3293]]]]]],[11,R[3392],E,"Makes a new `NaiveDateTime` with nanoseconds since the…",11,[[["u32"],["self"]],[[R[3293]],[R[52],[R[3293]]]]]],[11,"hour","chrono",E,13,[[["self"]],["u32"]]],[11,"minute",E,E,13,[[["self"]],["u32"]]],[11,"second",E,E,13,[[["self"]],["u32"]]],[11,R[3388],E,E,13,[[["self"]],["u32"]]],[11,R[3395],E,E,13,[[["u32"],["self"]],[[R[52],[R[3292]]],[R[3292]]]]],[11,R[3390],E,E,13,[[["u32"],["self"]],[[R[52],[R[3292]]],[R[3292]]]]],[11,R[3391],E,E,13,[[["u32"],["self"]],[[R[52],[R[3292]]],[R[3292]]]]],[11,R[3392],E,E,13,[[["u32"],["self"]],[[R[52],[R[3292]]],[R[3292]]]]],[11,"eq",R[3353],E,2,[[[R[3288]],["self"]],["bool"]]],[11,"ne",E,E,2,[[[R[3288]],["self"]],["bool"]]],[11,"eq",E,E,3,[[["utc"],["self"]],["bool"]]],[11,"eq",E,E,4,[[[R[3282]],["self"]],["bool"]]],[11,"ne",E,E,4,[[[R[3282]],["self"]],["bool"]]],[11,"eq",R[3354],E,8,[[[R[3294]],["self"]],["bool"]]],[11,"ne",E,E,8,[[[R[3294]],["self"]],["bool"]]],[11,"eq",E,E,9,[[["self"],["isoweek"]],["bool"]]],[11,"ne",E,E,9,[[["self"],["isoweek"]],["bool"]]],[11,"eq",E,E,10,[[[R[3313]],["self"]],["bool"]]],[11,"ne",E,E,10,[[[R[3313]],["self"]],["bool"]]],[11,"eq",E,E,11,[[[R[3293]],["self"]],["bool"]]],[11,"ne",E,E,11,[[[R[3293]],["self"]],["bool"]]],[11,"eq","chrono",E,12,[[["self"],["date"]],["bool"]]],[11,"eq",E,E,0,[[[R[3396]],["self"]],["bool"]]],[11,"eq",E,E,13,[[[R[3292]],["self"]],["bool"]]],[11,"eq",R[3351],E,15,[[["pad"],["self"]],["bool"]]],[11,"eq",E,E,16,[[["self"],["numeric"]],["bool"]]],[11,"ne",E,E,16,[[["self"],["numeric"]],["bool"]]],[11,"eq",E,E,26,[[["self"],["internalnumeric"]],["bool"]]],[11,"eq",E,E,17,[[["fixed"],["self"]],["bool"]]],[11,"ne",E,E,17,[[["fixed"],["self"]],["bool"]]],[11,"eq",E,E,27,[[[R[3397]],["self"]],["bool"]]],[11,"ne",E,E,27,[[[R[3397]],["self"]],["bool"]]],[11,"eq",E,E,18,[[["item"],["self"]],["bool"]]],[11,"ne",E,E,18,[[["item"],["self"]],["bool"]]],[11,"eq",E,E,28,[[[R[1392]],["self"]],["bool"]]],[11,"ne",E,E,28,[[[R[1392]],["self"]],["bool"]]],[11,"eq",E,E,14,[[["parsed"],["self"]],["bool"]]],[11,"ne",E,E,14,[[["parsed"],["self"]],["bool"]]],[11,"eq","chrono",E,1,[[["self"],["weekday"]],["bool"]]],[11,"eq",E,E,25,[[[R[3398]],["self"]],["bool"]]],[11,"ne",E,E,25,[[[R[3398]],["self"]],["bool"]]],[11,"clone",R[3353],E,2,[[["self"]],[R[3288]]]],[11,"clone",E,E,3,[[["self"]],["utc"]]],[11,"clone",E,E,4,[[["self"]],[R[3282]]]],[11,"clone",E,E,5,[[["self"]],["local"]]],[11,"clone",R[3354],E,8,[[["self"]],[R[3294]]]],[11,"clone",E,E,9,[[["self"]],["isoweek"]]],[11,"clone",E,E,10,[[["self"]],[R[3313]]]],[11,"clone",E,E,11,[[["self"]],[R[3293]]]],[11,"clone","chrono",E,12,[[["self"]],["date"]]],[11,"clone",E,E,0,[[["self"]],[R[3396]]]],[11,"clone",E,E,13,[[["self"]],[R[3292]]]],[11,"clone",R[3351],E,15,[[["self"]],["pad"]]],[11,"clone",E,E,16,[[["self"]],["numeric"]]],[11,"clone",E,E,26,[[["self"]],["self"]]],[11,"clone",E,E,17,[[["self"]],["fixed"]]],[11,"clone",E,E,27,[[["self"]],[R[3397]]]],[11,"clone",E,E,18,[[["self"]],["item"]]],[11,"clone",E,E,28,[[["self"]],[R[1392]]]],[11,"clone",E,E,14,[[["self"]],["parsed"]]],[11,"clone",R[3355],E,19,[[["self"]],[R[3311]]]],[11,"clone","chrono",E,1,[[["self"]],["weekday"]]],[11,"clone",E,E,25,[[["self"]],[R[3398]]]],[11,"cmp",R[3354],E,8,[[[R[3294]],["self"]],[R[51]]]],[11,"cmp",E,E,9,[[["self"],["isoweek"]],[R[51]]]],[11,"cmp",E,E,10,[[[R[3313]],["self"]],[R[51]]]],[11,"cmp",E,E,11,[[[R[3293]],["self"]],[R[51]]]],[11,"cmp","chrono",E,12,[[["date"],["self"]],[R[51]]]],[11,"cmp",E,E,13,[[["self"],[R[3292]]],[R[51]]]],[11,"from",E,E,13,[[[R[3437]]],[[R[3292],["utc"]],["utc"]]]],[11,"from",E,E,13,[[[R[3437]]],[["local"],[R[3292],["local"]]]]],[11,R[264],R[3354],E,8,[[[R[3294]],["self"]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,8,[[[R[3294]],["self"]],["bool"]]],[11,"le",E,E,8,[[[R[3294]],["self"]],["bool"]]],[11,"gt",E,E,8,[[[R[3294]],["self"]],["bool"]]],[11,"ge",E,E,8,[[[R[3294]],["self"]],["bool"]]],[11,R[264],E,E,9,[[["self"],["isoweek"]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,9,[[["self"],["isoweek"]],["bool"]]],[11,"le",E,E,9,[[["self"],["isoweek"]],["bool"]]],[11,"gt",E,E,9,[[["self"],["isoweek"]],["bool"]]],[11,"ge",E,E,9,[[["self"],["isoweek"]],["bool"]]],[11,R[264],E,E,10,[[[R[3313]],["self"]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,10,[[[R[3313]],["self"]],["bool"]]],[11,"le",E,E,10,[[[R[3313]],["self"]],["bool"]]],[11,"gt",E,E,10,[[[R[3313]],["self"]],["bool"]]],[11,"ge",E,E,10,[[[R[3313]],["self"]],["bool"]]],[11,R[264],E,E,11,[[[R[3293]],["self"]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,11,[[[R[3293]],["self"]],["bool"]]],[11,"le",E,E,11,[[[R[3293]],["self"]],["bool"]]],[11,"gt",E,E,11,[[[R[3293]],["self"]],["bool"]]],[11,"ge",E,E,11,[[[R[3293]],["self"]],["bool"]]],[11,R[264],"chrono",E,12,[[["date"],["self"]],[[R[52],[R[51]]],[R[51]]]]],[11,R[264],E,E,13,[[["self"],[R[3292]]],[[R[52],[R[51]]],[R[51]]]]],[11,"next",R[3355],E,19,[[["self"]],[[R[52],["item"]],["item"]]]],[11,R[79],R[3351],E,14,[[],["parsed"]]],[11,R[407],R[3354],E,8,[[["str"]],[[R[3301],[R[3294]]],[R[3294]]]]],[11,R[407],E,E,10,[[["str"]],[[R[3301],[R[3313]]],[R[3313]]]]],[11,R[407],E,E,11,[[["str"]],[[R[3301],[R[3293]]],[R[3293]]]]],[11,R[407],"chrono",E,13,[[["str"]],[[R[3292],[R[3282]]],[R[3301],[R[3292]]]]]],[11,R[407],E,E,13,[[["str"]],[[R[3301],[R[3292]]],[R[3292],["utc"]]]]],[11,R[407],E,E,13,[[["str"]],[[R[3301],[R[3292]]],[R[3292],["local"]]]]],[11,R[407],E,E,1,[[["str"]],[R[12]]]],[11,"fmt",R[3353],E,2,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,3,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,4,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,5,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[3354],E,8,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,9,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,10,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,11,[[["self"],[R[29]]],[R[12]]]],[11,"fmt","chrono",E,12,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,0,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,13,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[3351],E,15,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,16,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,26,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,17,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,27,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,18,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,28,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,14,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[3355],E,19,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[3351],E,20,[[[R[29]],["self"]],[R[12]]]],[11,"fmt","chrono",E,1,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,25,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[3353],E,3,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,4,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[3354],E,8,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,10,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,11,[[["self"],[R[29]]],[R[12]]]],[11,"fmt","chrono",E,12,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,13,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[3351],E,28,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,20,[[["self"],[R[29]]],[R[12]]]],[11,"sub",R[3354],E,10,[[[R[3282]]],[R[3313]]]],[11,"sub",E,E,11,[[[R[3282]]],[R[3293]]]],[11,"sub","chrono",E,13,[[[R[3282]]],[R[3292]]]],[11,"sub",R[3354],E,8,[[[R[3309]]],[R[3294]]]],[11,"sub",E,E,8,[[[R[3294]]],[R[3309]]]],[11,"sub",E,E,10,[[[R[3309]]],[R[3313]]]],[11,"sub",E,E,10,[[[R[3313]]],[R[3309]]]],[11,"sub",E,E,11,[[[R[3309]]],[R[3293]]]],[11,"sub",E,E,11,[[[R[3293]]],[R[3309]]]],[11,"sub","chrono",E,12,[[[R[3309]]],["date"]]],[11,"sub",E,E,12,[[["date"]],[R[3309]]]],[11,"sub",E,E,13,[[[R[3309]]],[R[3292]]]],[11,"sub",E,E,13,[[[R[3292]]],[R[3309]]]],[11,"add",R[3354],E,10,[[[R[3282]]],[R[3313]]]],[11,"add",E,E,11,[[[R[3282]]],[R[3293]]]],[11,"add","chrono",E,13,[[[R[3282]]],[R[3292]]]],[11,"add",R[3354],E,8,[[[R[3309]]],[R[3294]]]],[11,"add",E,E,10,[[[R[3309]]],[R[3313]]]],[11,"add",E,E,11,[[[R[3309]]],[R[3293]]]],[11,"add","chrono",E,12,[[[R[3309]]],["date"]]],[11,"add",E,E,13,[[[R[3309]]],[R[3292]]]],[11,R[3399],R[3354],E,8,[[["self"],[R[3309]]]]],[11,R[3399],E,E,10,[[["self"],[R[3309]]]]],[11,R[3399],E,E,11,[[["self"],[R[3309]]]]],[11,R[1981],E,E,8,[[["self"],[R[3309]]]]],[11,R[1981],E,E,10,[[["self"],[R[3309]]]]],[11,R[1981],E,E,11,[[["self"],[R[3309]]]]],[11,"hash",R[3353],E,4,[[["self"],["__h"]]]],[11,"hash",R[3354],E,8,[[["self"],["__h"]]]],[11,"hash",E,E,10,[[["h"],["self"]]]],[11,"hash",E,E,11,[[["h"],["self"]]]],[11,"hash","chrono",E,12,[[["h"],["self"]]]],[11,"hash",E,E,13,[[["h"],["self"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,R[30],R[3351],E,28,[[["self"]],["str"]]],[11,"from_i64","chrono",E,1,[[["i64"]],[["weekday"],[R[52],["weekday"]]]]],[11,"from_u64",E,E,1,[[["u64"]],[["weekday"],[R[52],["weekday"]]]]],[11,"weeks",E,R[3412],24,[[["i64"]],[R[1358]]]],[11,"days",E,R[3413],24,[[["i64"]],[R[1358]]]],[11,"hours",E,R[3414],24,[[["i64"]],[R[1358]]]],[11,"minutes",E,R[3415],24,[[["i64"]],[R[1358]]]],[11,"seconds",E,R[3416],24,[[["i64"]],[R[1358]]]],[11,R[1958],E,R[3417],24,[[["i64"]],[R[1358]]]],[11,R[1959],E,R[3418],24,[[["i64"]],[R[1358]]]],[11,R[1960],E,R[3419],24,[[["i64"]],[R[1358]]]],[11,"span",E,R[3420],24,[[["f"]],[R[1358]]]],[11,"num_weeks",E,R[3421],24,[[["self"]],["i64"]]],[11,"num_days",E,R[3422],24,[[["self"]],["i64"]]],[11,"num_hours",E,R[3423],24,[[["self"]],["i64"]]],[11,R[2028],E,R[3424],24,[[["self"]],["i64"]]],[11,R[1961],E,R[3425],24,[[["self"]],["i64"]]],[11,R[1962],E,R[3426],24,[[["self"]],["i64"]]],[11,R[1963],E,R[3427],24,[[["self"]],[["i64"],[R[52],["i64"]]]]],[11,R[1964],E,R[3428],24,[[["self"]],[["i64"],[R[52],["i64"]]]]],[11,R[1402],E,R[3429],24,[[["self"],[R[1358]]],[[R[1358]],[R[52],[R[1358]]]]]],[11,R[1403],E,R[3430],24,[[["self"],[R[1358]]],[[R[1358]],[R[52],[R[1358]]]]]],[11,R[3438],E,R[3431],24,[[],[R[1358]]]],[11,R[3439],E,R[3432],24,[[],[R[1358]]]],[11,"zero",E,R[3433],24,[[],[R[1358]]]],[11,"is_zero",E,R[3434],24,[[["self"]],["bool"]]],[11,R[4511],E,R[3435],24,[[[R[1358]]],[[R[1393]],[R[1358]],[R[12],[R[1358],R[1393]]]]]],[11,"to_std",E,R[3436],24,[[["self"]],[[R[1393]],[R[1358]],[R[12],[R[1358],R[1393]]]]]]],"p":[[4,R[3400]],[4,"Weekday"],[4,R[3401]],[3,"Utc"],[3,R[3402]],[3,"Local"],[8,"Offset"],[8,"TimeZone"],[3,"NaiveDate"],[3,"IsoWeek"],[3,"NaiveTime"],[3,R[3403]],[3,"Date"],[3,"DateTime"],[3,"Parsed"],[4,"Pad"],[4,"Numeric"],[4,"Fixed"],[4,"Item"],[3,R[3404]],[3,R[3405]],[8,R[3406]],[8,"Datelike"],[8,"Timelike"],[3,"Duration"],[3,R[3407]],[3,R[3408]],[3,R[3409]],[3,R[3411]]]};
searchIndex["clap"]={"doc":"`clap` is a simple-to-use, efficient, and full-featured…","i":[[3,"Arg","clap","The abstract representation of a command line argument.…",N,N],[3,"ArgGroup",E,"`ArgGroup`s are a family of related [arguments] and way…",N,N],[3,"ArgMatches",E,"Used to get information about the arguments that where…",N,N],[3,"OsValues",E,R[2771],N,N],[3,"SubCommand",E,"The abstract representation of a command line subcommand.",N,N],[3,"Values",E,R[2771],N,N],[3,"App",E,"Used to create a representation of a command line program…",N,N],[3,"Error",E,"Command Line Argument Parser Error",N,N],[12,"message",E,"Formatted error message",0,N],[12,"kind",E,"The type of error",0,N],[12,"info",E,"Any additional information passed along, such as the…",0,N],[4,R[2798],E,"Various settings that apply to arguments and may be set,…",N,N],[13,"Required",E,"The argument must be used",1,N],[13,"Multiple",E,"The argument may be used multiple times such as `--flag…",1,N],[13,"EmptyValues",E,"The argument allows empty values such as `--option \"\"`",1,N],[13,"Global",E,"The argument should be propagated down through all child…",1,N],[13,"Hidden",E,"The argument should not be shown in help text",1,N],[13,"TakesValue",E,"The argument accepts a value, such as `--option <value>`",1,N],[13,"UseValueDelimiter",E,"Determines if the argument allows values to be grouped via…",1,N],[13,R[2773],E,"Prints the help text on the line after the argument",1,N],[13,"RequireDelimiter",E,"Requires the use of a value delimiter for all multiple…",1,N],[13,"HidePossibleValues",E,"Hides the possible values from the help string",1,N],[13,R[2772],E,"Allows vals that start with a '-'",1,N],[13,"RequireEquals",E,"Require options use `--option=val` syntax",1,N],[13,"Last",E,"Specifies that the arg is the last positional argument and…",1,N],[13,"HideDefaultValue",E,"Hides the default value from the help string",1,N],[13,R[2800],E,"Makes `Arg::possible_values` case insensitive",1,N],[13,"HideEnvValues",E,"Hides ENV values in the help message",1,N],[13,"HiddenShortHelp",E,"The argument should not be shown in short help text",1,N],[13,"HiddenLongHelp",E,"The argument should not be shown in long help text",1,N],[4,R[2799],E,"Application level settings, which affect how [`App`]…",N,N],[13,"AllowInvalidUtf8",E,"Specifies that any invalid UTF-8 code points should not be…",2,N],[13,"AllArgsOverrideSelf",E,"Essentially sets [`Arg::overrides_with(\"itself\")`] for all…",2,N],[13,R[2772],E,"Specifies that leading hyphens are allowed in argument…",2,N],[13,"AllowNegativeNumbers",E,"Allows negative numbers to pass as values. This is similar…",2,N],[13,"AllowMissingPositional",E,"Allows one to implement two styles of CLIs where…",2,N],[13,"AllowExternalSubcommands",E,"Specifies that an unexpected positional argument, which…",2,N],[13,"ArgsNegateSubcommands",E,"Specifies that use of a valid [argument] negates…",2,N],[13,"ArgRequiredElseHelp",E,"Specifies that the help text should be displayed (and then…",2,N],[13,"ColoredHelp",E,"Uses colorized help messages.",2,N],[13,"ColorAuto",E,"Enables colored output only when the output is going to a…",2,N],[13,"ColorAlways",E,"Enables colored output regardless of whether or not the…",2,N],[13,"ColorNever",E,"Disables colored output no matter if the output is going…",2,N],[13,"DontCollapseArgsInUsage",E,"Disables the automatic collapsing of positional args into…",2,N],[13,"DontDelimitTrailingValues",E,"Disables the automatic delimiting of values when `--` or…",2,N],[13,"DisableHelpSubcommand",E,"Disables the `help` subcommand",2,N],[13,"DisableVersion",E,"Disables `-V` and `--version` [`App`] without affecting…",2,N],[13,"DeriveDisplayOrder",E,"Displays the arguments and [`SubCommand`]s in the help…",2,N],[13,"GlobalVersion",E,"Specifies to use the version of the current command for…",2,N],[13,"Hidden",E,"Specifies that this [`SubCommand`] should be hidden from…",2,N],[13,"HidePossibleValuesInHelp",E,"Tells `clap` not to print possible values when displaying…",2,N],[13,"InferSubcommands",E,"Tries to match unknown args to partial [`subcommands`] or…",2,N],[13,"NoBinaryName",E,"Specifies that the parser should not assume the first…",2,N],[13,R[2773],E,"Places the help string for all arguments on the line after…",2,N],[13,"PropagateGlobalValuesDown",E,"DEPRECATED: This setting is no longer required in order to…",2,N],[13,"SubcommandsNegateReqs",E,"Allows [`SubCommand`]s to override all requirements of the…",2,N],[13,"SubcommandRequiredElseHelp",E,"Specifies that the help text should be displayed (before…",2,N],[13,"StrictUtf8",E,"Specifies that any invalid UTF-8 code points should be…",2,N],[13,"SubcommandRequired",E,"Allows specifying that if no [`SubCommand`] is present at…",2,N],[13,"TrailingVarArg",E,"Specifies that the final positional argument is a \"VarArg\"…",2,N],[13,"UnifiedHelpMessage",E,"Groups flags and options together, presenting a more…",2,N],[13,"VersionlessSubcommands",E,"Disables `-V` and `--version` for all [`SubCommand`]s…",2,N],[13,"WaitOnError",E,"Will display a message \"Press [ENTER]/[RETURN] to…",2,N],[4,R[32],E,"Command line argument parser kind of error",N,N],[13,"InvalidValue",E,"Occurs when an [`Arg`] has a set of possible values, and…",3,N],[13,"UnknownArgument",E,"Occurs when a user provides a flag, option, argument or…",3,N],[13,"InvalidSubcommand",E,R[2774],3,N],[13,"UnrecognizedSubcommand",E,R[2774],3,N],[13,"EmptyValue",E,"Occurs when the user provides an empty value for an option…",3,N],[13,"ValueValidation",E,"Occurs when the user provides a value for an argument with…",3,N],[13,"TooManyValues",E,"Occurs when a user provides more values for an argument…",3,N],[13,"TooFewValues",E,"Occurs when the user provides fewer values for an argument…",3,N],[13,"WrongNumberOfValues",E,"Occurs when the user provides a different number of values…",3,N],[13,"ArgumentConflict",E,"Occurs when the user provides two values which conflict…",3,N],[13,"MissingRequiredArgument",E,"Occurs when the user does not provide one or more required…",3,N],[13,"MissingSubcommand",E,"Occurs when a subcommand is required (as defined by…",3,N],[13,"MissingArgumentOrSubcommand",E,"Occurs when either an argument or [`SubCommand`] is…",3,N],[13,"UnexpectedMultipleUsage",E,"Occurs when the user provides multiple values to an…",3,N],[13,R[2031],E,"Occurs when the user provides a value containing invalid…",3,N],[13,"HelpDisplayed",E,"Not a true \"error\" as it means `--help` or similar was…",3,N],[13,"VersionDisplayed",E,"Not a true \"error\" as it means `--version` or similar was…",3,N],[13,"ArgumentNotFound",E,"Occurs when using the [`value_t!`] and [`values_t!`]…",3,N],[13,"Io",E,"Represents an [I/O error]. Can occur when writing to…",3,N],[13,"Format",E,"Represents a [Format error] (which is a part of…",3,N],[4,"Shell",E,"Describes which shell to produce a completions file for",N,N],[13,"Bash",E,"Generates a .bash completion file for the Bourne Again…",4,N],[13,"Fish",E,"Generates a .fish completion file for the Friendly…",4,N],[13,"Zsh",E,"Generates a completion file for the Z SHell (ZSH)",4,N],[13,"PowerShell",E,"Generates a completion file for PowerShell",4,N],[13,"Elvish",E,"Generates a completion file for Elvish",4,N],[11,"new",E,"Creates a new instance of an application requiring a name.…",5,[[["string"],["into",["string"]]],["self"]]],[11,R[5468],E,"Get the name of the app",5,[[["self"]],["str"]]],[11,"get_bin_name",E,"Get the name of the binary",5,[[["self"]],[["str"],[R[52],["str"]]]]],[11,"with_defaults",E,"Creates a new instance of an application requiring a name,…",5,[[["string"],["into",["string"]]],["self"]]],[11,"author",E,"Sets a string of author(s) that will be displayed to the…",5,[[["into",["str"]],["str"]],["self"]]],[11,"bin_name",E,"Overrides the system-determined binary name. This should…",5,[[["string"],["into",["string"]]],["self"]]],[11,"about",E,R[2775],5,[[["into",["str"]],["str"]],["self"]]],[11,"long_about",E,R[2775],5,[[["into",["str"]],["str"]],["self"]]],[11,"name",E,"Sets the program's name. This will be displayed when…",5,[[["string"],["into",["string"]]],["self"]]],[11,"after_help",E,R[2776],5,[[["into",["str"]],["str"]],["self"]]],[11,"before_help",E,R[2776],5,[[["into",["str"]],["str"]],["self"]]],[11,"version",E,R[2777],5,[[["into",["str"]],["str"]],["self"]]],[11,"long_version",E,R[2777],5,[[["into",["str"]],["str"]],["self"]]],[11,"usage",E,"Sets a custom usage string to override the auto-generated…",5,[[["into",["str"]],["str"]],["self"]]],[11,"help",E,"Sets a custom help message and overrides the…",5,[[["into",["str"]],["str"]],["self"]]],[11,"help_short",E,"Sets the [`short`] for the auto-generated `help` argument.",5,[[["str"],["asref",["str"]]],["self"]]],[11,"version_short",E,"Sets the [`short`] for the auto-generated `version`…",5,[[["str"],["asref",["str"]]],["self"]]],[11,"help_message",E,"Sets the help text for the auto-generated `help` argument.",5,[[["str"],["into",["str"]]],["self"]]],[11,"version_message",E,"Sets the help text for the auto-generated `version`…",5,[[["str"],["into",["str"]]],["self"]]],[11,"template",E,"Sets the help template to be used, overriding the default…",5,[[["into",["str"]],["str"]],["self"]]],[11,"setting",E,"Enables a single command, or [`SubCommand`], level settings.",5,[[[R[2778]]],["self"]]],[11,"settings",E,"Enables multiple command, or [`SubCommand`], level settings",5,[[],["self"]]],[11,"global_setting",E,"Enables a single setting that is propagated down through…",5,[[[R[2778]]],["self"]]],[11,"global_settings",E,"Enables multiple settings which are propagated down…",5,[[],["self"]]],[11,"unset_setting",E,"Disables a single command, or [`SubCommand`], level setting.",5,[[[R[2778]]],["self"]]],[11,"unset_settings",E,"Disables multiple command, or [`SubCommand`], level…",5,[[],["self"]]],[11,"set_term_width",E,"Sets the terminal width at which to wrap help messages.…",5,[[[R[9]]],["self"]]],[11,"max_term_width",E,"Sets the max terminal width at which to wrap help…",5,[[[R[9]]],["self"]]],[11,"arg",E,"Adds an [argument] to the list of valid possibilities.",5,[[["into",["arg"]],["arg"]],["self"]]],[11,"args",E,"Adds multiple [arguments] to the list of valid possibilities",5,[[],["self"]]],[11,"arg_from_usage",E,"A convenience method for adding a single [argument] from a…",5,[[["str"]],["self"]]],[11,"args_from_usage",E,"Adds multiple [arguments] at once from a usage string, one…",5,[[["str"]],["self"]]],[11,"alias",E,"Allows adding a [`SubCommand`] alias, which function as…",5,[[["into",["str"]],["str"]],["self"]]],[11,"aliases",E,"Allows adding [`SubCommand`] aliases, which function as…",5,[[],["self"]]],[11,R[2785],E,"Allows adding a [`SubCommand`] alias that functions…",5,[[["into",["str"]],["str"]],["self"]]],[11,R[2786],E,"Allows adding multiple [`SubCommand`] aliases that…",5,[[],["self"]]],[11,"group",E,"Adds an [`ArgGroup`] to the application. [`ArgGroup`]s are…",5,[[["arggroup"]],["self"]]],[11,"groups",E,"Adds multiple [`ArgGroup`]s to the [`App`] at once.",5,[[],["self"]]],[11,R[2797],E,"Adds a [`SubCommand`] to the list of valid possibilities.…",5,[[["app"]],["self"]]],[11,"subcommands",E,"Adds multiple subcommands to the list of valid…",5,[[["i"]],["self"]]],[11,R[2788],E,"Allows custom ordering of [`SubCommand`]s within the help…",5,[[[R[9]]],["self"]]],[11,"print_help",E,R[2779],5,[[["self"]],[R[2780]]]],[11,"print_long_help",E,R[2779],5,[[["self"]],[R[2780]]]],[11,"write_help",E,R[2781],5,[[["self"],["w"]],[R[2780]]]],[11,"write_long_help",E,R[2781],5,[[["self"],["w"]],[R[2780]]]],[11,"write_version",E,R[2782],5,[[["self"],["w"]],[R[2780]]]],[11,"write_long_version",E,R[2782],5,[[["self"],["w"]],[R[2780]]]],[11,"gen_completions",E,R[2783],5,[[["string"],["osstring"],["self"],["shell"],["into",["osstring"]],["into",["string"]]]]],[11,"gen_completions_to",E,R[2783],5,[[["string"],["self"],["shell"],["w"],["into",["string"]]]]],[11,"get_matches",E,"Starts the parsing process, upon a failed parse an error…",5,[[],[R[2784]]]],[11,"get_matches_safe",E,"Starts the parsing process. This method will return a…",5,[[],[[R[2780],[R[2784]]],[R[2784]]]]],[11,"get_matches_from",E,"Starts the parsing process. Like [`App::get_matches`] this…",5,[[["i"]],[R[2784]]]],[11,"get_matches_from_safe",E,"Starts the parsing process. A combination of…",5,[[["i"]],[[R[2780],[R[2784]]],[R[2784]]]]],[11,"get_matches_from_safe_borrow",E,"Starts the parsing process without consuming the [`App`]…",5,[[["self"],["i"]],[[R[2780],[R[2784]]],[R[2784]]]]],[11,"with_name",E,"Creates a new instance of [`Arg`] using a unique string…",6,[[["str"]],["self"]]],[11,"from_usage",E,"Creates a new instance of [`Arg`] from a usage string.…",6,[[["str"]],["self"]]],[11,"short",E,"Sets the short version of the argument without the…",6,[[["str"],["asref",["str"]]],["self"]]],[11,"long",E,"Sets the long version of the argument without the…",6,[[["str"]],["self"]]],[11,"alias",E,"Allows adding a [`Arg`] alias, which function as \"hidden\"…",6,[[["into",["str"]],["str"]],["self"]]],[11,"aliases",E,"Allows adding [`Arg`] aliases, which function as \"hidden\"…",6,[[],["self"]]],[11,R[2785],E,"Allows adding a [`Arg`] alias that functions exactly like…",6,[[["into",["str"]],["str"]],["self"]]],[11,R[2786],E,"Allows adding multiple [`Arg`] aliases that functions…",6,[[],["self"]]],[11,"help",E,"Sets the short help text of the argument that will be…",6,[[["str"]],["self"]]],[11,"long_help",E,"Sets the long help text of the argument that will be…",6,[[["str"]],["self"]]],[11,"last",E,"Specifies that this arg is the last, or final, positional…",6,[[["bool"]],["self"]]],[11,"required",E,"Sets whether or not the argument is required by default.…",6,[[["bool"]],["self"]]],[11,"require_equals",E,"Requires that options use the `--option=val` syntax (i.e.…",6,[[["bool"]],["self"]]],[11,"allow_hyphen_values",E,"Allows values which start with a leading hyphen (`-`)",6,[[["bool"]],["self"]]],[11,"required_unless",E,"Sets an arg that override this arg's required setting.…",6,[[["str"]],["self"]]],[11,"required_unless_all",E,"Sets args that override this arg's required setting. (i.e.…",6,[[],["self"]]],[11,"required_unless_one",E,"Sets args that override this arg's [required] setting.…",6,[[],["self"]]],[11,R[2793],E,"Sets a conflicting argument by name. I.e. when using this…",6,[[["str"]],["self"]]],[11,R[2794],E,"The same as [`Arg::conflicts_with`] but allows specifying…",6,[[],["self"]]],[11,"overrides_with",E,"Sets a overridable argument by name. I.e. this argument…",6,[[["str"]],["self"]]],[11,"overrides_with_all",E,"Sets multiple mutually overridable arguments by name. I.e.…",6,[[],["self"]]],[11,"requires",E,"Sets an argument by name that is required when this one is…",6,[[["str"]],["self"]]],[11,"requires_if",E,"Allows a conditional requirement. The requirement will…",6,[[["str"],["str"]],["self"]]],[11,"requires_ifs",E,"Allows multiple conditional requirements. The requirement…",6,[[],["self"]]],[11,"required_if",E,"Allows specifying that an argument is [required]…",6,[[["str"],["str"]],["self"]]],[11,"required_ifs",E,"Allows specifying that an argument is [required] based on…",6,[[],["self"]]],[11,R[2791],E,"Sets multiple arguments by names that are required when…",6,[[],["self"]]],[11,"takes_value",E,"Specifies that the argument takes a value at run time.",6,[[["bool"]],["self"]]],[11,"hide_possible_values",E,"Specifies if the possible values of an argument should be…",6,[[["bool"]],["self"]]],[11,"hide_default_value",E,"Specifies if the default value of an argument should be…",6,[[["bool"]],["self"]]],[11,"index",E,"Specifies the index of a positional argument starting at 1.",6,[[["u64"]],["self"]]],[11,"multiple",E,"Specifies that the argument may appear more than once. For…",6,[[["bool"]],["self"]]],[11,"value_terminator",E,"Specifies a value that stops parsing multiple values of a…",6,[[["str"]],["self"]]],[11,"global",E,"Specifies that an argument can be matched to all child…",6,[[["bool"]],["self"]]],[11,"empty_values",E,"Allows an argument to accept explicitly empty values. An…",6,[[["bool"]],["self"]]],[11,"hidden",E,"Hides an argument from help message output.",6,[[["bool"]],["self"]]],[11,"possible_values",E,"Specifies a list of possible values for this argument. At…",6,[[],["self"]]],[11,"possible_value",E,"Specifies a possible value for this argument, one at a…",6,[[["str"]],["self"]]],[11,R[647],E,"When used with [`Arg::possible_values`] it allows the…",6,[[["bool"]],["self"]]],[11,"group",E,"Specifies the name of the [`ArgGroup`] the argument…",6,[[["str"]],["self"]]],[11,"groups",E,"Specifies the names of multiple [`ArgGroup`]'s the…",6,[[],["self"]]],[11,"number_of_values",E,"Specifies how many values are required to satisfy this…",6,[[["u64"]],["self"]]],[11,"validator",E,"Allows one to perform a custom validation on the argument…",6,[[["f"]],["self"]]],[11,"validator_os",E,"Works identically to Validator but is intended to be used…",6,[[["f"]],["self"]]],[11,"max_values",E,"Specifies the maximum number of values are for this…",6,[[["u64"]],["self"]]],[11,"min_values",E,"Specifies the minimum number of values for this argument.…",6,[[["u64"]],["self"]]],[11,"use_delimiter",E,"Specifies whether or not an argument should allow grouping…",6,[[["bool"]],["self"]]],[11,"require_delimiter",E,"Specifies that multiple values may only be set using the…",6,[[["bool"]],["self"]]],[11,"value_delimiter",E,"Specifies the separator to use when values are clumped…",6,[[["str"]],["self"]]],[11,"value_names",E,"Specify multiple names for values of option arguments.…",6,[[],["self"]]],[11,"value_name",E,"Specifies the name for value of [option] or [positional]…",6,[[["str"]],["self"]]],[11,"default_value",E,"Specifies the value of the argument when not specified at…",6,[[["str"]],["self"]]],[11,"default_value_os",E,"Provides a default value in the exact same manner as…",6,[[["osstr"]],["self"]]],[11,"default_value_if",E,"Specifies the value of the argument if `arg` has been used…",6,[[["str"],[R[52],["str"]],["str"]],["self"]]],[11,"default_value_if_os",E,"Provides a conditional default value in the exact same…",6,[[["str"],["osstr"],[R[52],["osstr"]]],["self"]]],[11,"default_value_ifs",E,"Specifies multiple values and conditions in the same…",6,[[],["self"]]],[11,"default_value_ifs_os",E,"Provides multiple conditional default values in the exact…",6,[[],["self"]]],[11,"env",E,R[2787],6,[[["str"]],["self"]]],[11,"env_os",E,R[2787],6,[[["osstr"]],["self"]]],[11,"hide_env_values",E,"@TODO @p2 @docs @release: write docs",6,[[["bool"]],["self"]]],[11,"next_line_help",E,"When set to `true` the help string will be displayed on…",6,[[["bool"]],["self"]]],[11,R[2788],E,"Allows custom ordering of args within the help message.…",6,[[[R[9]]],["self"]]],[11,"raw",E,"Indicates that all parameters passed after this should not…",6,[[["bool"]],["self"]]],[11,"hidden_short_help",E,"Hides an argument from short help message output.",6,[[["bool"]],["self"]]],[11,"hidden_long_help",E,"Hides an argument from long help message output.",6,[[["bool"]],["self"]]],[11,"is_set",E,"Checks if one of the [`ArgSettings`] settings is set for…",6,[[[R[2789]],["self"]],["bool"]]],[11,"set",E,"Sets one of the [`ArgSettings`] settings for the argument…",6,[[[R[2789]]],["self"]]],[11,"unset",E,"Unsets one of the [`ArgSettings`] settings for the…",6,[[[R[2789]]],["self"]]],[11,"value_of",E,"Gets the value of a specific [option] or [positional]…",7,[[["str"],["self"],["asref",["str"]]],[["str"],[R[52],["str"]]]]],[11,"value_of_lossy",E,"Gets the lossy value of a specific argument. If the…",7,[[["str"],["self"],["asref",["str"]]],[["cow",["str"]],[R[52],["cow"]]]]],[11,"value_of_os",E,"Gets the OS version of a string value of a specific…",7,[[["str"],["self"],["asref",["str"]]],[[R[52],["osstr"]],["osstr"]]]],[11,"values_of",E,"Gets a [`Values`] struct which implements [`Iterator`] for…",7,[[["str"],["self"],["asref",["str"]]],[[R[52],["values"]],["values"]]]],[11,"values_of_lossy",E,"Gets the lossy values of a specific argument. If the…",7,[[["str"],["self"],["asref",["str"]]],[["vec",["string"]],[R[52],["vec"]]]]],[11,"values_of_os",E,"Gets a [`OsValues`] struct which is implements…",7,[[["str"],["self"],["asref",["str"]]],[["osvalues"],[R[52],["osvalues"]]]]],[11,"is_present",E,"Returns `true` if an argument was present at runtime,…",7,[[["str"],["self"],["asref",["str"]]],["bool"]]],[11,"occurrences_of",E,"Returns the number of times an argument was used at…",7,[[["str"],["self"],["asref",["str"]]],["u64"]]],[11,"index_of",E,"Gets the starting index of the argument in respect to all…",7,[[["str"],["self"],["asref",["str"]]],[[R[52],[R[9]]],[R[9]]]]],[11,"indices_of",E,"Gets all indices of the argument in respect to all other…",7,[[["str"],["self"],["asref",["str"]]],[["indices"],[R[52],["indices"]]]]],[11,"subcommand_matches",E,R[2790],7,[[["str"],["self"],["asref",["str"]]],[[R[52],[R[2784]]],[R[2784]]]]],[11,"subcommand_name",E,R[2790],7,[[["self"]],[["str"],[R[52],["str"]]]]],[11,R[2797],E,"This brings together [`ArgMatches::subcommand_matches`]…",7,[[["self"]]]],[11,"usage",E,"Returns a string slice of the usage statement for the…",7,[[["self"]],["str"]]],[11,"with_name",E,"Creates a new instance of a subcommand requiring a name.…",8,[[["str"]],["app"]]],[11,"with_name",E,"Creates a new instance of `ArgGroup` using a unique string…",9,[[["str"]],["self"]]],[11,"arg",E,"Adds an [argument] to this group by name",9,[[["str"]],["self"]]],[11,"args",E,"Adds multiple [arguments] to this group by name",9,[[],["self"]]],[11,"multiple",E,"Allows more than one of the ['Arg']s in this group to be…",9,[[["bool"]],["self"]]],[11,"required",E,"Sets the group as required or not. A required group will…",9,[[["bool"]],["self"]]],[11,"requires",E,R[2792],9,[[["str"]],["self"]]],[11,R[2791],E,R[2792],9,[[],["self"]]],[11,R[2793],E,"Sets the exclusion rules of this group. Exclusion (aka…",9,[[["str"]],["self"]]],[11,R[2794],E,"Sets the exclusion rules of this group. Exclusion rules…",9,[[],["self"]]],[11,"use_stderr",E,"Should the message be written to `stdout` or not",0,[[["self"]],["bool"]]],[11,"exit",E,"Prints the error to `stderr` and exits with a status of `1`",0,[[["self"]]]],[11,"with_description",E,"Create an error with a custom description.",0,[[["str"],[R[1]]],["self"]]],[11,"variants",E,"A list of possible variants in `&'static str` form",4,[[]]],[6,"Result",E,"Short hand for [`Result`] type",N,N],[14,"value_t",E,R[2795],N,N],[14,"value_t_or_exit",E,R[2795],N,N],[14,"values_t",E,R[2796],N,N],[14,"values_t_or_exit",E,R[2796],N,N],[14,"_clap_count_exprs",E,"Counts the number of comma-delimited expressions passed to…",N,N],[14,"arg_enum",E,"Convenience macro to generate more complete enums with…",N,N],[14,"crate_version",E,"Allows you to pull the version from your Cargo.toml at…",N,N],[14,"crate_authors",E,"Allows you to pull the authors for the app from your…",N,N],[14,"crate_description",E,"Allows you to pull the description from your Cargo.toml at…",N,N],[14,"crate_name",E,"Allows you to pull the name from your Cargo.toml at…",N,N],[14,"app_from_crate",E,"Allows you to build the `App` instance from your…",N,N],[14,"clap_app",E,"Build `App`, `Arg`s, `SubCommand`s and `Group`s with…",N,N],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[16],E,E,6,[[["self"]],[T]]],[11,R[17],E,E,6,[[[T],["self"]]]],[11,R[11],E,E,6,[[[U]],[R[12]]]],[11,R[39],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[],[R[12]]]],[11,R[18],E,E,6,[[["self"]],[R[40]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[16],E,E,9,[[["self"]],[T]]],[11,R[17],E,E,9,[[[T],["self"]]]],[11,R[11],E,E,9,[[[U]],[R[12]]]],[11,R[39],E,E,9,[[["self"]],[T]]],[11,R[13],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[],[R[12]]]],[11,R[18],E,E,9,[[["self"]],[R[40]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[16],E,E,7,[[["self"]],[T]]],[11,R[17],E,E,7,[[[T],["self"]]]],[11,R[11],E,E,7,[[[U]],[R[12]]]],[11,R[39],E,E,7,[[["self"]],[T]]],[11,R[13],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[],[R[12]]]],[11,R[18],E,E,7,[[["self"]],[R[40]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[48],E,E,10,[[],["i"]]],[11,"into",E,E,10,[[],[U]]],[11,R[16],E,E,10,[[["self"]],[T]]],[11,R[17],E,E,10,[[[T],["self"]]]],[11,R[11],E,E,10,[[[U]],[R[12]]]],[11,R[39],E,E,10,[[["self"]],[T]]],[11,R[13],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[],[R[12]]]],[11,R[18],E,E,10,[[["self"]],[R[40]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[16],E,E,8,[[["self"]],[T]]],[11,R[17],E,E,8,[[[T],["self"]]]],[11,R[11],E,E,8,[[[U]],[R[12]]]],[11,R[39],E,E,8,[[["self"]],[T]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[],[R[12]]]],[11,R[18],E,E,8,[[["self"]],[R[40]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[48],E,E,11,[[],["i"]]],[11,"into",E,E,11,[[],[U]]],[11,R[16],E,E,11,[[["self"]],[T]]],[11,R[17],E,E,11,[[[T],["self"]]]],[11,R[11],E,E,11,[[[U]],[R[12]]]],[11,R[39],E,E,11,[[["self"]],[T]]],[11,R[13],E,E,11,[[["self"]],[T]]],[11,R[14],E,E,11,[[],[R[12]]]],[11,R[18],E,E,11,[[["self"]],[R[40]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[16],E,E,5,[[["self"]],[T]]],[11,R[17],E,E,5,[[[T],["self"]]]],[11,R[170],E,E,5,[[["self"]],["string"]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,R[18],E,E,5,[[["self"]],[R[40]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[170],E,E,0,[[["self"]],["string"]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,[[[T],["self"]]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[17],E,E,2,[[[T],["self"]]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[17],E,E,3,[[[T],["self"]]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[16],E,E,4,[[["self"]],[T]]],[11,R[17],E,E,4,[[[T],["self"]]]],[11,R[170],E,E,4,[[["self"]],["string"]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,"eq",E,E,2,[[[R[2778]],["self"]],["bool"]]],[11,"eq",E,E,6,[[["self"],["arg"]],["bool"]]],[11,"eq",E,E,1,[[[R[2789]],["self"]],["bool"]]],[11,"eq",E,E,3,[[[R[1]],["self"]],["bool"]]],[11,R[49],E,E,11,[[["self"]],[["str"],[R[52],["str"]]]]],[11,R[49],E,E,10,[[["self"]],[["osstr"],[R[52],["osstr"]]]]],[11,"clone",E,E,2,[[["self"]],[R[2778]]]],[11,"clone",E,E,5,[[["self"]],["self"]]],[11,"clone",E,E,6,[[["self"]],["arg"]]],[11,"clone",E,E,7,[[["self"]],[R[2784]]]],[11,"clone",E,E,11,[[["self"]],["values"]]],[11,"clone",E,E,10,[[["self"]],["osvalues"]]],[11,"clone",E,E,8,[[["self"]],[R[2797]]]],[11,"clone",E,E,9,[[["self"]],["self"]]],[11,"clone",E,E,1,[[["self"]],[R[2789]]]],[11,"clone",E,E,3,[[["self"]],[R[1]]]],[11,"clone",E,E,4,[[["self"]],["shell"]]],[11,"from",E,E,6,[[["arg"]],["self"]]],[11,"from",E,E,9,[[["arggroup"]],["self"]]],[11,"from",E,E,0,[[["error"]],["self"]]],[11,"from",E,E,0,[[["error"]],["self"]]],[11,"next",E,E,11,[[["self"]],[["str"],[R[52],["str"]]]]],[11,R[53],E,E,11,[[["self"]]]],[11,"next",E,E,10,[[["self"]],[["osstr"],[R[52],["osstr"]]]]],[11,R[53],E,E,10,[[["self"]]]],[11,R[79],E,E,6,[[],["arg"]]],[11,R[79],E,E,7,[[],["self"]]],[11,R[79],E,E,11,[[],["self"]]],[11,R[79],E,E,10,[[],["self"]]],[11,R[79],E,E,9,[[],["arggroup"]]],[11,R[407],E,E,2,[[["str"]],[R[12]]]],[11,R[407],E,E,1,[[["str"]],[R[12]]]],[11,R[407],E,E,4,[[["str"]],[R[12]]]],[11,"fmt",E,E,2,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,7,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,8,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,9,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,1,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,3,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,0,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,4,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,5,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,0,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,4,[[["self"],[R[29]]],[R[12]]]],[11,R[30],E,E,0,[[["self"]],["str"]]]],"p":[[3,"Error"],[4,R[2798]],[4,R[2799]],[4,R[32]],[4,"Shell"],[3,"App"],[3,"Arg"],[3,"ArgMatches"],[3,"SubCommand"],[3,"ArgGroup"],[3,"OsValues"],[3,"Values"]]};
searchIndex["ctrlc"]={"doc":"Cross platform handling of Ctrl-C signals.","i":[[4,"SignalType","ctrlc","A cross-platform way to represent Ctrl-C or program…",N,N],[13,"Ctrlc",E,"Ctrl-C",0,N],[13,"Termination",E,"Program termination Maps to `SIGTERM` on *nix,…",0,N],[13,"Other",E,"Other signal/event using platform-specific data",0,N],[4,"Error",E,"Ctrl-C error.",N,N],[13,"NoSuchSignal",E,"Signal could not be found from the system.",1,N],[13,"MultipleHandlers",E,"Ctrl-C signal handler already registered.",1,N],[13,"System",E,"Unexpected system error.",1,N],[5,"set_handler",E,"Register signal handler for Ctrl-C.",N,[[["f"]],[[R[12],["error"]],["error"]]]],[6,"Signal",E,"Platform specific signal type",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[170],E,E,1,[[["self"]],["string"]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",E,E,1,[[["error"]],["error"]]],[11,"fmt",E,E,1,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,0,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,1,[[["self"],[R[29]]],[R[12]]]],[11,R[30],E,E,1,[[["self"]],["str"]]],[11,"cause",E,E,1,[[["self"]],[[R[52],["error"]],["error"]]]]],"p":[[4,"SignalType"],[4,"Error"]]};
searchIndex["daemon"]={"doc":E,"i":[[0,"daemon","daemon",E,N,N],[3,"Daemon",R[1750],E,N,N],[12,"name",E,E,0,N],[4,"State",E,E,N,N],[13,"Start",E,E,1,N],[13,"Reload",E,E,1,N],[13,"Stop",E,E,1,N],[8,R[1751],E,E,N,N],[10,"run",E,E,2,[[["fnonce"],["self"]],[[R[12],["error"]],["error"]]]],[14,"declare_singleton","daemon",E,N,N],[11,"from",R[1750],E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]]],"p":[[3,"Daemon"],[4,"State"],[8,R[1751]]]};
searchIndex["failure"]={"doc":"An experimental new error-handling library. Guide-style…","i":[[3,R[4553],"failure","A `Backtrace`.",N,N],[3,"Compat",E,"A compatibility wrapper around an error type from this…",N,N],[3,"Context",E,"An error with context around it.",N,N],[3,R[4552],E,"Wrapper for `std` errors to make them `Sync`.",N,N],[3,"Error",E,"The `Error` type, which can contain any failure.",N,N],[3,"Causes",E,"A iterator over the causes of a `Fail`",N,N],[5,"err_msg",E,"Constructs a `Fail` type from a string.",N,[[["send"],["display"],["sync"],["debug"]],["error"]]],[11,"new",E,"Constructs a new backtrace. This will only create a real…",0,[[],[R[1406]]]],[11,R[46],E,"Unwraps this into the inner error.",1,[[],["e"]]],[11,R[110],E,"Gets a reference to the inner error.",1,[[["self"]],["e"]]],[11,"new",E,"Creates a new context without an underlying error message.",2,[[["d"]],["context"]]],[11,R[4597],E,"Returns a reference to the context provided with this error.",2,[[["self"]],["d"]]],[11,"map",E,"Maps `Context<D>` to `Context<T>` by applying a function…",2,[[["f"]],["context"]]],[11,"new",E,"Wraps a non-`Sync` `Error` in order to make it implement…",3,[[["e"]],["self"]]],[11,"from_boxed_compat",E,"Creates an `Error` from `Box<std::error::Error>`.",4,[[[R[31]],["box",[R[31]]]],["error"]]],[11,"as_fail",E,"Return a reference to the underlying failure that this…",4,[[["self"]],["fail"]]],[11,"name",E,"Returns the name of the underlying fail.",4,[[["self"]],[["str"],[R[52],["str"]]]]],[11,"cause",E,R[4544],4,[[["self"]],["fail"]]],[11,R[1406],E,"Gets a reference to the `Backtrace` for this `Error`.",4,[[["self"]],[R[1406]]]],[11,"context",E,"Provides context for this `Error`.",4,[[["send"],["display"],["sync"]],[["context"],["send"],["display"],["sync"]]]],[11,"compat",E,"Wraps `Error` in a compatibility type.",4,[[],[["error"],["compat",["error"]]]]],[11,"downcast",E,R[4543],4,[[],[["error"],["fail"],[R[12],["error"]]]]],[11,R[4548],E,"Returns the \"root cause\" of this error - the last value in…",4,[[["self"]],["fail"]]],[11,R[4549],E,"Returns a iterator over the causes of this error with the…",4,[[["self"]],["causes"]]],[11,"iter_chain",E,R[4550],4,[[["self"]],["causes"]]],[11,R[4545],E,R[4543],4,[[["self"]],[[R[52]],[T]]]],[11,R[4546],E,R[4543],4,[[["self"]],[[T],[R[52]]]]],[11,"root_cause",E,R[4551],4,[[["self"]],["fail"]]],[11,"causes",E,"Deprecated alias to `iter_causes`.",4,[[["self"]],["causes"]]],[6,"Fallible",E,"A common result with an `Error`.",N,N],[8,"AsFail",E,"The `AsFail` trait",N,N],[10,"as_fail",E,"Converts a reference to `Self` into a dynamic trait object…",5,[[["self"]],["fail"]]],[8,"ResultExt",E,"Extension methods for `Result`.",N,N],[10,"compat",E,"Wraps the error in `Compat` to make it compatible with…",6,[[],[[R[12],["compat"]],["compat"]]]],[10,"context",E,"Wraps the error type in a context type.",6,[[["d"]],[[R[12],["context"]],["context"]]]],[10,"with_context",E,"Wraps the error type in a context type generated by…",6,[[["f"]],[[R[12],["context"]],["context"]]]],[8,"Fail",E,"The `Fail` trait.",N,N],[11,"name",E,"Returns the \"name\" of the error.",7,[[["self"]],[["str"],[R[52],["str"]]]]],[11,"cause",E,R[4544],7,[[["self"]],[["fail"],[R[52],["fail"]]]]],[11,R[1406],E,"Returns a reference to the `Backtrace` carried by this…",7,[[["self"]],[[R[52],[R[1406]]],[R[1406]]]]],[11,"context",E,"Provides context for this failure.",7,[[["d"]],["context"]]],[11,"compat",E,"Wraps this failure in a compatibility wrapper that…",7,[[],["compat"]]],[11,R[4545],E,R[4547],7,[[["self"]],[[R[52]],[T]]]],[11,R[4546],E,R[4547],7,[[["self"]],[[T],[R[52]]]]],[11,R[4548],E,"Returns the \"root cause\" of this `Fail` - the last value…",7,[[["self"]],["fail"]]],[11,R[4549],E,"Returns a iterator over the causes of this `Fail` with the…",7,[[["self"]],["causes"]]],[11,"iter_chain",E,R[4550],7,[[["self"]],["causes"]]],[11,"root_cause",E,R[4551],7,[[["self"]],["fail"]]],[11,"causes",E,"Deprecated alias to `iter_chain`.",7,[[["self"]],["causes"]]],[14,"bail",E,"Exits a function early with an `Error`.",N,N],[14,"ensure",E,"Exits a function early with an `Error` if the condition is…",N,N],[14,"format_err",E,"Constructs an `Error` using the standard string…",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[170],E,E,0,[[["self"]],["string"]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,[[[T],["self"]]]],[11,R[170],E,E,1,[[["self"]],["string"]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[170],E,E,2,[[["self"]],["string"]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[170],E,E,3,[[["self"]],["string"]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[170],E,E,4,[[["self"]],["string"]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[48],E,E,8,[[],["i"]]],[11,"into",E,E,8,[[],[U]]],[11,R[11],E,E,8,[[[U]],[R[12]]]],[11,R[39],E,E,8,[[["self"]],[T]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[],[R[12]]]],[11,R[18],E,E,8,[[["self"]],[R[40]]]],[11,"as_fail",E,E,7,[[["self"]],["fail"]]],[11,"as_fail",E,E,4,[[["self"]],["fail"]]],[11,"name",E,E,2,[[["self"]],[["str"],[R[52],["str"]]]]],[11,"cause",E,E,2,[[["self"]],[["fail"],[R[52],["fail"]]]]],[11,R[1406],E,E,2,[[["self"]],[[R[52],[R[1406]]],[R[1406]]]]],[11,"eq",E,E,1,[[["compat"],["self"]],["bool"]]],[11,"ne",E,E,1,[[["compat"],["self"]],["bool"]]],[11,"clone",E,E,1,[[["self"]],["compat"]]],[11,"from",E,E,2,[[["d"]],["context"]]],[11,"from",E,E,4,[[["f"]],["error"]]],[11,"next",E,E,8,[[["self"]],[[R[52],["fail"]],["fail"]]]],[11,"as_ref",E,E,4,[[["self"]],["fail"]]],[11,R[79],E,E,0,[[],[R[1406]]]],[11,R[79],E,E,1,[[],["compat"]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,1,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,2,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,3,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,4,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,1,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,2,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,3,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,4,[[["self"],[R[29]]],[R[12]]]],[11,"hash",E,E,1,[[["self"],["__he"]]]],[11,R[30],E,E,1,[[["self"]],["str"]]]],"p":[[3,R[4553]],[3,"Compat"],[3,"Context"],[3,R[4552]],[3,"Error"],[8,"AsFail"],[8,"ResultExt"],[8,"Fail"],[3,"Causes"]]};
searchIndex["fnv"]={"doc":"An implementation of the [Fowler–Noll–Vo hash…","i":[[3,R[78],"fnv","An implementation of the Fowler–Noll–Vo hash function.",N,N],[6,"FnvBuildHasher",E,"A builder for default FNV hashers.",N,N],[6,"FnvHashMap",E,"A `HashMap` using a default FNV hasher.",N,N],[6,"FnvHashSet",E,"A `HashSet` using a default FNV hasher.",N,N],[11,"with_key",E,"Create an FNV hasher starting with a state corresponding…",0,[[["u64"]],[R[77]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,R[79],E,E,0,[[],[R[77]]]],[11,"finish",E,E,0,[[["self"]],["u64"]]],[11,"write",E,E,0,[[["self"]]]]],"p":[[3,R[78]]]};
searchIndex["glob"]={"doc":"Support for matching file paths against Unix shell style…","i":[[3,"Paths","glob","An iterator that yields `Path`s from the filesystem that…",N,N],[3,R[278],E,"A glob iteration error.",N,N],[3,R[276],E,"A pattern parsing error.",N,N],[12,"pos",E,"The approximate character index of where the error occurred.",0,N],[12,"msg",E,"A message describing the error.",0,N],[3,"Pattern",E,"A compiled Unix shell style pattern.",N,N],[3,R[277],E,"Configuration options to modify the behaviour of…",N,N],[12,"case_sensitive",E,"Whether or not patterns should be matched in a…",1,N],[12,"require_literal_separator",E,"If this is true then path-component separator characters…",1,N],[12,"require_literal_leading_dot",E,"If this is true then paths that contain components that…",1,N],[5,"glob",E,R[270],N,[[["str"]],[[R[269]],["paths"],[R[12],["paths",R[269]]]]]],[5,"glob_with",E,R[270],N,[[["str"],[R[272]]],[[R[269]],["paths"],[R[12],["paths",R[269]]]]]],[6,"GlobResult",E,"An alias for a glob iteration result.",N,N],[11,"path",E,"The Path that the error corresponds to.",2,[[["self"]],["path"]]],[11,"error",E,"The error in question.",2,[[["self"]],["error"]]],[11,"new",E,"This function compiles Unix shell style patterns.",3,[[["str"]],[[R[269]],[R[12],[R[274],R[269]]],[R[274]]]]],[11,"escape",E,"Escape metacharacters within the given string by…",3,[[["str"]],["string"]]],[11,"matches",E,R[271],3,[[["str"],["self"]],["bool"]]],[11,"matches_path",E,R[273],3,[[["path"],["self"]],["bool"]]],[11,"matches_with",E,R[271],3,[[["str"],[R[272]],["self"]],["bool"]]],[11,"matches_path_with",E,R[273],3,[[["path"],[R[272]],["self"]],["bool"]]],[11,"as_str",E,"Access the original glob pattern.",3,[[["self"]],["str"]]],[11,"new",E,"Constructs a new `MatchOptions` with default field values.…",1,[[],[R[272]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[48],E,E,4,[[],["i"]]],[11,"into",E,E,4,[[],[U]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[170],E,E,2,[[["self"]],["string"]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[170],E,E,0,[[["self"]],["string"]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[17],E,E,3,[[[T],["self"]]]],[11,R[170],E,E,3,[[["self"]],["string"]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,[[[T],["self"]]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"eq",E,E,3,[[[R[274]],["self"]],["bool"]]],[11,"ne",E,E,3,[[[R[274]],["self"]],["bool"]]],[11,"eq",E,E,1,[[[R[272]],["self"]],["bool"]]],[11,"ne",E,E,1,[[[R[272]],["self"]],["bool"]]],[11,"clone",E,E,3,[[["self"]],[R[274]]]],[11,"clone",E,E,1,[[["self"]],[R[272]]]],[11,"cmp",E,E,3,[[[R[274]],["self"]],[R[51]]]],[11,"cmp",E,E,1,[[[R[272]],["self"]],[R[51]]]],[11,R[264],E,E,3,[[[R[274]],["self"]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,3,[[[R[274]],["self"]],["bool"]]],[11,"le",E,E,3,[[[R[274]],["self"]],["bool"]]],[11,"gt",E,E,3,[[[R[274]],["self"]],["bool"]]],[11,"ge",E,E,3,[[[R[274]],["self"]],["bool"]]],[11,R[264],E,E,1,[[[R[272]],["self"]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,1,[[[R[272]],["self"]],["bool"]]],[11,"le",E,E,1,[[[R[272]],["self"]],["bool"]]],[11,"gt",E,E,1,[[[R[272]],["self"]],["bool"]]],[11,"ge",E,E,1,[[[R[272]],["self"]],["bool"]]],[11,"next",E,E,4,[[["self"]],[[R[52],[R[275]]],[R[275]]]]],[11,R[79],E,E,3,[[],[R[274]]]],[11,R[79],E,E,1,[[],[R[272]]]],[11,R[407],E,E,3,[[["str"]],[[R[269]],[R[12],[R[274],R[269]]],[R[274]]]]],[11,"fmt",E,E,2,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,0,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,3,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,2,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,3,[[["self"],[R[29]]],[R[12]]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,R[30],E,E,2,[[["self"]],["str"]]],[11,"cause",E,E,2,[[["self"]],[[R[52],["error"]],["error"]]]],[11,R[30],E,E,0,[[["self"]],["str"]]]],"p":[[3,R[276]],[3,R[277]],[3,R[278]],[3,"Pattern"],[3,"Paths"]]};
searchIndex["hid_io"]={"doc":E,"i":[[3,"RUNNING","hid_io","Any thread can set this to false to signal shutdown",N,N],[0,"api",E,"capnp interface for other programs to hook into",N,N],[3,"Endpoint",R[5477],"Information about a connected node",N,N],[12,"type_",E,E,0,N],[12,"name",E,E,0,N],[12,"serial",E,E,0,N],[12,"id",E,"Automatically generated",0,N],[4,"AuthLevel",E,"Authorization level for a remote node",N,N],[13,"Basic",E,"Allows connecting and listing devices",1,N],[13,"Secure",E,"Allows sending commands to a device",1,N],[13,"Debug",E,"Allows inspecting all incoming packets",1,N],[5,"load_certs",E,E,N,[[["str"]],[[R[3686]],["vec",[R[3686]]]]]],[5,"load_private_key",E,E,N,[[["str"]],[R[3692]]]],[5,R[5415],E,"Cap'n'Proto API Initialization Sets up a localhost socket…",N,[[[R[5424]]]]],[0,"device","hid_io","communication with hidapi compatable devices",N,N],[3,R[5518],R[5416],"A raw transport plus any associated metadata",N,N],[3,R[5519],E,"A R/W channel for a single endpoint",N,N],[3,"HIDIOQueue",E,"The userspace end of a HIDIOController",N,N],[12,"info",E,E,2,N],[3,R[5515],E,"A single message and its recipient or source",N,N],[12,"device",E,E,3,N],[12,"message",E,E,3,N],[3,R[5520],E,"The main HIDIOMessage passer",N,N],[3,R[5516],E,"The userspace end of the HIDIO message system",N,N],[12,"nodes",E,E,4,N],[5,R[5415],E,"Module initialization",N,[[[R[5417]]]]],[0,"debug",E,E,N,N],[5,R[5415],"hid_io::device::debug","device debug module initialization",N,[[]]],[0,"hidusb",R[5416],"Handles hidapi devices (libusb/rawhid)",N,N],[3,R[5517],R[5478],E,N,N],[5,R[5415],E,"hidusb initialization",N,[[[R[5417]]]]],[17,"DEV_VID",E,E,N,N],[17,"DEV_PID",E,E,N,N],[17,"INTERFACE_NUMBER",E,E,N,N],[17,"USAGE_PAGE",E,E,N,N],[17,"USAGE",E,E,N,N],[11,"new",E,E,5,[[[R[4702]]],["hidusbdevice"]]],[8,"HIDIOTransport",R[5416],"A duplex stream for HIDIO to communicate over",N,N],[11,"new",E,E,6,[[["u32"],[R[5418]],["box",[R[5418]]]],[R[5420]]]],[11,"recv_chunk",E,E,6,[[["self"],[R[5419]]],[[R[12],[R[9],"error"]],["error"],[R[9]]]]],[11,"create_buffer",E,E,6,[[["self"]],[R[5419]]]],[11,R[5422],E,E,6,[[["self"]],[R[5419]]]],[11,R[5421],E,E,6,[[["self"],[R[5419]]],[["error"],[R[12],["error"]]]]],[11,"send_sync",E,E,6,[[["self"]]]],[11,"send_ack",E,E,6,[[["u32"],["self"],["u8"],["vec",["u8"]]]]],[11,"new",E,E,7,[[["string"],["sender",[R[5419]]],[R[5420]],["receiver",[R[5419]]],[R[5419]]],["hidiocontroller"]]],[11,"process",E,E,7,[[["self"]],[["error"],[R[12],["error"]]]]],[11,"new",E,E,2,[[["sender",[R[5419]]],["receiver",[R[5419]]],["endpoint"],[R[5419]]],["hidioqueue"]]],[11,R[5421],E,E,2,[[["self"],[R[5419]]],[[R[12],[R[139]]],[R[139],[R[5419]]]]]],[11,R[5422],E,E,2,[[["self"]],[R[5419]]]],[11,"messages",E,E,2,[[["self"]],[["tryiter",[R[5419]]],[R[5419]]]]],[11,"new",E,E,8,[[["receiver",[R[5423]]],[R[5423]]],[R[5417]]]],[11,"register_device",E,E,8,[[["string"],["hidioqueue"],["self"]]]],[11,"unregister_device",E,E,8,[[["str"],["self"]]]],[11,"devices",E,E,8,[[["self"]],[["arc",["rwlock"]],["rwlock",["vec"]]]]],[11,"register_listener",E,E,8,[[["self"],[R[5423]],["sender",[R[5423]]]]]],[11,"process",E,E,8,[[["self"]]]],[11,"new",E,E,4,[[["arc",["rwlock"]],["rwlock",["vec"]],["receiver",[R[5423]]],[R[5423]],["sender",[R[5423]]]],[R[5424]]]],[11,"from_sender",E,E,4,[[["arc",["rwlock"]],["rwlock",["vec"]],["sender",[R[5423]]],[R[5423]]]]],[11,R[5421],E,E,4,[[["string"],["self"],[R[5419]]]]],[11,"recv",E,E,4,[[["self"]],[R[5423]]]],[11,"recv_psuedoblocking",E,E,4,[[["self"]],[[R[52],[R[5423]]],[R[5423]]]]],[11,"iter",E,E,4,[[["self"]],[[R[5423]],["iter",[R[5423]]]]]],[11,"send_sync",E,E,4,[[["string"],["self"]]]],[11,"send_ack",E,E,4,[[["u32"],["string"],["u8"],["self"],["vec",["u8"]]]]],[11,"send_nack",E,E,4,[[["u32"],["string"],["u8"],["self"],["vec",["u8"]]]]],[11,"send_command",E,E,4,[[["string"],["u8"],["self"],[R[5512]],["vec",["u8"]]]]],[0,"module","hid_io","built-in features and command handlers",N,N],[5,R[5415],R[5426],"Device initialization Sets up a scanning thread per Device…",N,[[[R[5424]]],["joinhandle"]]],[0,"unicode",E,"Platform specific character output and IME control",N,N],[3,"StubOutput",R[5425],"Dummy impementation for unsupported platforms",N,N],[0,"osx",E,"Osx quartz impementation",N,N],[3,R[5521],R[5479],E,N,N],[11,"new",E,E,9,[[],["osxconnection"]]],[11,"press_key",E,E,9,[[["char"],["self"],["bool"]]]],[8,R[5522],R[5425],"Functions that can be called in a cross platform manner",N,N],[10,R[5510],E,E,10,[[["self"]],["string"]]],[10,R[5511],E,E,10,[[["str"],["self"]]]],[10,R[5508],E,E,10,[[["str"],["self"]]]],[10,R[5509],E,E,10,[[["char"],["self"],["bool"]]]],[10,"get_held",E,E,10,[[["self"]],[["char"],["vec",["char"]]]]],[10,"set_held",E,E,10,[[["str"],["self"]]]],[11,"new",E,E,11,[[],["stuboutput"]]],[17,"SUPPORTED_IDS",R[5426],"List of commands we advertise as supporting to devices",N,N],[0,"protocol","hid_io","parsing for different data types",N,N],[0,"hidio","hid_io::protocol","hidio packet encoder/decoder",N,N],[3,R[5523],R[5480],"HID-IO Packet Buffer Struct",N,N],[12,"ptype",E,"Type of packet (Continued is automatically set if needed)",12,N],[12,"id",E,"Packet Id",12,N],[12,"max_len",E,"Packet length for serialization (in bytes)",12,N],[12,"data",E,"Payload data, chunking is done automatically by serializer",12,N],[12,"done",E,"Set False if buffer is not complete, True if it is",12,N],[3,R[5528],E,"HID-IO Parse Error",N,N],[4,R[5524],E,"HID-IO Packet Types",N,N],[13,"Data",E,"Data packet",13,N],[13,"ACK",E,"ACK packet",13,N],[13,"NAK",E,"NAK packet",13,N],[13,"Sync",E,"Sync packet",13,N],[13,"Continued",E,"Continued packet",13,N],[4,R[5525],E,"Requests for to perform a specific action",N,N],[13,"SupportedIDs",E,E,14,N],[13,"GetInfo",E,E,14,N],[13,"TestPacket",E,E,14,N],[13,"ResetHIDIO",E,E,14,N],[13,"Reserved",E,E,14,N],[13,"GetProperties",E,E,14,N],[13,"KeyState",E,E,14,N],[13,"KeyboardLayout",E,E,14,N],[13,"KeyLayout",E,E,14,N],[13,"KeyShapes",E,E,14,N],[13,"LEDLayout",E,E,14,N],[13,"FlashMode",E,E,14,N],[13,"UnicodeText",E,E,14,N],[13,"UnicodeKey",E,E,14,N],[13,"HostMacro",E,E,14,N],[13,"KLLState",E,E,14,N],[13,"PixelSetting",E,E,14,N],[13,"PixelSet1c8b",E,E,14,N],[13,"PixelSet3c8b",E,E,14,N],[13,"PixelSet1c16b",E,E,14,N],[13,"PixelSet3c16b",E,E,14,N],[13,"OpenURL",E,E,14,N],[13,"Terminal",E,E,14,N],[13,R[5427],E,E,14,N],[4,R[5526],E,"Requests for a specific piece of info",N,N],[13,"HIDIOMajor",E,E,15,N],[13,"HIDIOMinor",E,E,15,N],[13,"HIDIOPatch",E,E,15,N],[13,"HostOS",E,E,15,N],[13,"OSVersion",E,E,15,N],[13,"HostName",E,E,15,N],[13,R[5427],E,E,15,N],[4,"HostOSID",E,"Platforms as a numeric id",N,N],[13,"Unknown",E,E,16,N],[13,"Windows",E,E,16,N],[13,"Linux",E,E,16,N],[13,"Android",E,E,16,N],[13,"Mac",E,E,16,N],[13,"IOS",E,E,16,N],[13,"ChromeOS",E,E,16,N],[5,"packet_type",E,"Determines the packet type from a byte stream",N,[[["vec"]],[[R[12],[R[5428],R[5429]]],[R[5428]],[R[5429]]]]],[5,"payload_len",E,"Determines payload of packet from a byte stream",N,[[["vec"]],[["u32"],[R[12],["u32",R[5429]]],[R[5429]]]]],[5,"packet_id_width",E,"Determines id_width from a byte stream",N,[[["vec"]],[[R[12],[R[9],R[5429]]],[R[9]],[R[5429]]]]],[5,"packet_id",E,"Determines packet id from a byte stream",N,[[["vec"]],[["u32"],[R[12],["u32",R[5429]]],[R[5429]]]]],[5,"continued_packet",E,"Determines whether there are following continued packets",N,[[["vec"]],[[R[12],["bool",R[5429]]],["bool"],[R[5429]]]]],[5,"payload_start",E,"Determines the starting position of the payload data",N,[[["vec"]],[[R[12],[R[9],R[5429]]],[R[9]],[R[5429]]]]],[11,"new",E,"Constructor for HIDIOPacketBuffer",12,[[],[R[5419]]]],[11,"append_payload",E,"Append payload data",12,[[["self"],["vec"]],["bool"]]],[11,"decode_packet",E,"Append packet stream Returns the number of bytes used.",12,[[["self"],["vec"]],[["u32"],[R[12],["u32",R[5429]]],[R[5429]]]]],[11,"serialize_buffer",E,"Serialize HIDIOPacketBuffer",12,[[["self"]],[[R[12],["vec",R[5429]]],["vec",["u8"]],[R[5429]]]]],[0,"built_info","hid_io","Compile time information",N,N],[17,"CI_PLATFORM","hid_io::built_info","The Continuous Integration platform detected during…",N,N],[17,"PKG_VERSION",E,"The full version.",N,N],[17,"PKG_VERSION_MAJOR",E,"The major version.",N,N],[17,"PKG_VERSION_MINOR",E,"The minor version.",N,N],[17,"PKG_VERSION_PATCH",E,"The patch version.",N,N],[17,"PKG_VERSION_PRE",E,"The pre-release version.",N,N],[17,"PKG_AUTHORS",E,"A colon-separated list of authors.",N,N],[17,"PKG_NAME",E,"The name of the package.",N,N],[17,"PKG_DESCRIPTION",E,"The description.",N,N],[17,"PKG_HOMEPAGE",E,"The homepage.",N,N],[17,"TARGET",E,"The target triple that was being compiled for.",N,N],[17,"HOST",E,"The host triple of the rust compiler.",N,N],[17,"PROFILE",E,"`release` for release builds, `debug` for other builds.",N,N],[17,"RUSTC",E,"The compiler that cargo resolved to use.",N,N],[17,"RUSTDOC",E,"The documentation generator that cargo resolved to use.",N,N],[17,"OPT_LEVEL",E,"Value of OPT_LEVEL for the profile used during compilation.",N,N],[17,"NUM_JOBS",E,"The parallelism that was specified during compilation.",N,N],[17,"DEBUG",E,"Value of DEBUG for the profile used during compilation.",N,N],[17,"FEATURES",E,"The features that were enabled during compilation.",N,N],[17,"FEATURES_STR",E,"The features as a comma-separated string.",N,N],[17,"RUSTC_VERSION",E,"The output of `rustc -V`",N,N],[17,"RUSTDOC_VERSION",E,"The output of `rustdoc -V`",N,N],[17,"GIT_VERSION",E,"If the crate was compiled from within a git-repository,…",N,N],[17,"BUILT_TIME_UTC",E,"The built-time in RFC822, UTC",N,N],[17,"CFG_TARGET_ARCH",E,"The target architecture, given by `cfg!(target_arch)`.",N,N],[17,"CFG_ENDIAN",E,"The endianness, given by `cfg!(target_endian)`.",N,N],[17,"CFG_ENV",E,"The toolchain-environment, given by `cfg!(target_env)`.",N,N],[17,"CFG_FAMILY",E,"The OS-family, given by `cfg!(target_family)`.",N,N],[17,"CFG_OS",E,"The operating system, given by `cfg!(target_os)`.",N,N],[17,"CFG_POINTER_WIDTH",E,"The pointer width, given by `cfg!(target_pointer_width)`.",N,N],[0,"common_capnp","hid_io",R[5439],N,N],[4,R[5527],R[5430],E,N,N],[13,"Off",E,E,17,N],[13,"Press",E,E,17,N],[13,"Hold",E,E,17,N],[13,"Release",E,E,17,N],[4,"NodeType",E,E,N,N],[13,"HidioDaemon",E,E,18,N],[13,"HidioScript",E,E,18,N],[13,R[5431],E,E,18,N],[0,"source",E,E,N,N],[3,"Owned",R[5481],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[11,R[2122],E,E,19,[[["self"]],["reader"]]],[11,R[4555],E,E,19,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,R[4349],E,E,19,[[],[[R[12],[R[5433],R[2110]]],[R[5433]],[R[2110]]]]],[11,R[5468],E,E,19,[[],[["reader"],[R[12],["reader"]]]]],[11,"has_name",E,E,19,[[["self"]],["bool"]]],[11,R[5434],E,E,19,[[],[["reader"],[R[12],["reader"]]]]],[11,R[5435],E,E,19,[[["self"]],["bool"]]],[11,"get_id",E,E,19,[[],["u64"]]],[11,R[2111],E,E,20,[[],["reader"]]],[11,R[2107],E,E,20,[[],["reader"]]],[11,R[2122],E,E,20,[[["self"]],["builder"]]],[11,R[4567],E,E,20,[[["self"]],["reader"]]],[11,R[4555],E,E,20,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,R[4349],E,E,20,[[],[[R[12],[R[5433],R[2110]]],[R[5433]],[R[2110]]]]],[11,"set_type",E,E,20,[[["self"],[R[5433]]]]],[11,R[5468],E,E,20,[[],[["builder"],[R[12],["builder"]]]]],[11,"set_name",E,E,20,[[["self"],["reader"]]]],[11,"init_name",E,E,20,[[["u32"]],["builder"]]],[11,"has_name",E,E,20,[[["self"]],["bool"]]],[11,R[5434],E,E,20,[[],[["builder"],[R[12],["builder"]]]]],[11,"set_serial",E,E,20,[[["self"],["reader"]]]],[11,R[5436],E,E,20,[[["u32"]],["builder"]]],[11,R[5435],E,E,20,[[["self"]],["bool"]]],[11,"get_id",E,E,20,[[],["u64"]]],[11,"set_id",E,E,20,[[["self"],["u64"]]]],[0,R[5529],R[5430],E,N,N],[3,"Owned",R[5432],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[0,"commands",E,E,N,N],[3,"Owned",R[5482],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[4,"Which",E,E,N,N],[13,R[5431],E,E,21,N],[13,"HostMacro",E,E,21,N],[13,R[5456],E,E,21,N],[6,R[4572],E,E,N,N],[6,R[4573],E,E,N,N],[11,R[2122],E,E,22,[[["self"]],["reader"]]],[11,R[4555],E,E,22,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,"which",E,E,22,[[],[[R[12],[R[4556],R[2110]]],[R[4556]],[R[2110]]]]],[11,R[2111],E,E,23,[[],["reader"]]],[11,R[2107],E,E,23,[[],["reader"]]],[11,R[2122],E,E,23,[[["self"]],["builder"]]],[11,R[4567],E,E,23,[[["self"]],["reader"]]],[11,R[4555],E,E,23,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,R[5457],E,E,23,[[["client"],["self"]]]],[11,R[5459],E,E,23,[[["client"],["self"]]]],[11,R[5461],E,E,23,[[["self"],["client"]]]],[11,"which",E,E,23,[[],[[R[4565]],[R[12],[R[4565],R[2110]]],[R[2110]]]]],[11,R[2122],R[5432],E,24,[[["self"]],["reader"]]],[11,R[4555],E,E,24,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,R[4349],E,E,24,[[],[[R[12],[R[5433],R[2110]]],[R[5433]],[R[2110]]]]],[11,R[5468],E,E,24,[[],[["reader"],[R[12],["reader"]]]]],[11,"has_name",E,E,24,[[["self"]],["bool"]]],[11,R[5434],E,E,24,[[],[["reader"],[R[12],["reader"]]]]],[11,R[5435],E,E,24,[[["self"]],["bool"]]],[11,"get_id",E,E,24,[[],["u64"]]],[11,"get_node",E,E,24,[[],[["client"],[R[12],["client"]]]]],[11,R[5437],E,E,24,[[],["reader"]]],[11,R[2111],E,E,25,[[],["reader"]]],[11,R[2107],E,E,25,[[],["reader"]]],[11,R[2122],E,E,25,[[["self"]],["builder"]]],[11,R[4567],E,E,25,[[["self"]],["reader"]]],[11,R[4555],E,E,25,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,R[4349],E,E,25,[[],[[R[12],[R[5433],R[2110]]],[R[5433]],[R[2110]]]]],[11,"set_type",E,E,25,[[["self"],[R[5433]]]]],[11,R[5468],E,E,25,[[],[["builder"],[R[12],["builder"]]]]],[11,"set_name",E,E,25,[[["self"],["reader"]]]],[11,"init_name",E,E,25,[[["u32"]],["builder"]]],[11,"has_name",E,E,25,[[["self"]],["bool"]]],[11,R[5434],E,E,25,[[],[["builder"],[R[12],["builder"]]]]],[11,"set_serial",E,E,25,[[["self"],["reader"]]]],[11,R[5436],E,E,25,[[["u32"]],["builder"]]],[11,R[5435],E,E,25,[[["self"]],["bool"]]],[11,"get_id",E,E,25,[[],["u64"]]],[11,"set_id",E,E,25,[[["self"],["u64"]]]],[11,"get_node",E,E,25,[[],[["client"],[R[12],["client"]]]]],[11,"set_node",E,E,25,[[["client"],["self"]]]],[11,R[5437],E,E,25,[[],["builder"]]],[11,"init_commands",E,E,25,[[],["builder"]]],[11,"get_node",E,E,26,[[["self"]],["client"]]],[11,R[5437],E,E,26,[[["self"]],[R[2188]]]],[0,"h_i_d_i_o_node",R[5430],E,N,N],[3,"Client",R[5438],E,N,N],[12,"client",E,E,27,N],[3,"Owned",E,E,N,N],[3,R[5453],E,E,N,N],[12,U,E,E,28,N],[3,R[5440],E,E,N,N],[12,"server",E,E,29,N],[0,R[5454],E,E,N,N],[17,"TYPE_ID","hid_io::common_capnp::h_i_d_i_o_node::_private",E,N,N],[0,"register_params",R[5438],E,N,N],[3,"Owned",R[5483],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[11,R[2122],E,E,30,[[["self"]],["reader"]]],[11,R[4555],E,E,30,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,R[2111],E,E,31,[[],["reader"]]],[11,R[2107],E,E,31,[[],["reader"]]],[11,R[2122],E,E,31,[[["self"]],["builder"]]],[11,R[4567],E,E,31,[[["self"]],["reader"]]],[11,R[4555],E,E,31,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[0,"register_results",R[5438],E,N,N],[3,"Owned",R[5484],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[11,R[2122],E,E,32,[[["self"]],["reader"]]],[11,R[4555],E,E,32,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,"get_ok",E,E,32,[[],["bool"]]],[11,R[2111],E,E,33,[[],["reader"]]],[11,R[2107],E,E,33,[[],["reader"]]],[11,R[2122],E,E,33,[[["self"]],["builder"]]],[11,R[4567],E,E,33,[[["self"]],["reader"]]],[11,R[4555],E,E,33,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,"get_ok",E,E,33,[[],["bool"]]],[11,"set_ok",E,E,33,[[["self"],["bool"]]]],[0,"is_registered_params",R[5438],E,N,N],[3,"Owned",R[5485],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[11,R[2122],E,E,34,[[["self"]],["reader"]]],[11,R[4555],E,E,34,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,R[2111],E,E,35,[[],["reader"]]],[11,R[2107],E,E,35,[[],["reader"]]],[11,R[2122],E,E,35,[[["self"]],["builder"]]],[11,R[4567],E,E,35,[[["self"]],["reader"]]],[11,R[4555],E,E,35,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[0,"is_registered_results",R[5438],E,N,N],[3,"Owned",R[5486],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[11,R[2122],E,E,36,[[["self"]],["reader"]]],[11,R[4555],E,E,36,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,"get_ok",E,E,36,[[],["bool"]]],[11,R[2111],E,E,37,[[],["reader"]]],[11,R[2107],E,E,37,[[],["reader"]]],[11,R[2122],E,E,37,[[["self"]],["builder"]]],[11,R[4567],E,E,37,[[["self"]],["reader"]]],[11,R[4555],E,E,37,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,"get_ok",E,E,37,[[],["bool"]]],[11,"set_ok",E,E,37,[[["self"],["bool"]]]],[6,"RegisterParams",R[5438],E,N,N],[6,"RegisterResults",E,E,N,N],[6,"IsRegisteredParams",E,E,N,N],[6,"IsRegisteredResults",E,E,N,N],[8,"Server",E,E,N,N],[11,R[540],E,E,38,[[["registerparams"],["self"],["registerresults"]],[["promise",["error"]],["error"]]]],[11,"is_registered",E,E,38,[[["self"],["isregisteredresults"],["isregisteredparams"]],[["promise",["error"]],["error"]]]],[11,"new",E,E,28,[[[U]],[R[5465]]]],[11,R[5443],E,E,28,[[],["client"]]],[11,R[5444],E,E,28,[[],["client"]]],[11,"register_request",E,E,27,[[["self"]],[["owned"],["request",["owned","owned"]],["owned"]]]],[11,"is_registered_request",E,E,27,[[["self"]],[["owned"],["owned"],["request",["owned","owned"]]]]],[11,R[5445],E,E,29,[[["owned"],["u16"],["_t"],["results",["owned"]],["params",["owned"]]],[["promise",["error"]],["error"]]]],[0,"devicefunction_capnp","hid_io",R[5439],N,N],[0,"device_function","hid_io::devicefunction_capnp",E,N,N],[3,"Client",R[5441],E,N,N],[12,"client",E,E,39,N],[3,"Owned",E,E,N,N],[3,R[5453],E,E,N,N],[12,U,E,E,40,N],[3,R[5440],E,E,N,N],[12,"server",E,E,41,N],[0,R[5454],E,E,N,N],[17,"TYPE_ID","hid_io::devicefunction_capnp::device_function::_private",E,N,N],[0,"signal",R[5441],E,N,N],[3,"Owned",R[5487],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[11,R[2122],E,E,42,[[["self"]],["reader"]]],[11,R[4555],E,E,42,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,R[2111],E,E,43,[[],["reader"]]],[11,R[2107],E,E,43,[[],["reader"]]],[11,R[2122],E,E,43,[[["self"]],["builder"]]],[11,R[4567],E,E,43,[[["self"]],["reader"]]],[11,R[4555],E,E,43,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[0,"commands",R[5441],E,N,N],[3,"Client",R[5442],E,N,N],[12,"client",E,E,44,N],[3,"Owned",E,E,N,N],[3,R[5453],E,E,N,N],[12,U,E,E,45,N],[3,R[5440],E,E,N,N],[12,"server",E,E,46,N],[0,R[5454],E,E,N,N],[17,"TYPE_ID","hid_io::devicefunction_capnp::device_function::commands::_private",E,N,N],[8,"Server",R[5442],E,N,N],[11,"new",E,E,45,[[[U]],[R[5465]]]],[11,R[5443],E,E,45,[[],["client"]]],[11,R[5444],E,E,45,[[],["client"]]],[11,R[5445],E,E,46,[[["owned"],["u16"],["_t"],["results",["owned"]],["params",["owned"]]],[["promise",["error"]],["error"]]]],[8,"Server",R[5441],E,N,N],[11,"new",E,E,40,[[[U]],[R[5465]]]],[11,R[5443],E,E,40,[[],["client"]]],[11,R[5444],E,E,40,[[],["client"]]],[11,R[5445],E,E,41,[[["owned"],["u16"],["_t"],["results",["owned"]],["params",["owned"]]],[["promise",["error"]],["error"]]]],[0,"hidiowatcher_capnp","hid_io",R[5439],N,N],[0,"h_i_d_i_o_packet",R[5446],E,N,N],[3,"Owned",R[5488],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[11,R[2122],E,E,47,[[["self"]],["reader"]]],[11,R[4555],E,E,47,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,"get_id",E,E,47,[[],["u16"]]],[11,"get_data",E,E,47,[[],[["reader",["u8"]],[R[12],["reader"]]]]],[11,"has_data",E,E,47,[[["self"]],["bool"]]],[11,R[2111],E,E,48,[[],["reader"]]],[11,R[2107],E,E,48,[[],["reader"]]],[11,R[2122],E,E,48,[[["self"]],["builder"]]],[11,R[4567],E,E,48,[[["self"]],["reader"]]],[11,R[4555],E,E,48,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,"get_id",E,E,48,[[],["u16"]]],[11,"set_id",E,E,48,[[["self"],["u16"]]]],[11,"get_data",E,E,48,[[],[[R[12],["builder"]],["builder",["u8"]]]]],[11,"set_data",E,E,48,[[["self"],["reader",["u8"]],["u8"]],[R[12]]]],[11,"init_data",E,E,48,[[["u32"]],[["u8"],["builder",["u8"]]]]],[11,"has_data",E,E,48,[[["self"]],["bool"]]],[0,"h_i_d_i_o_watcher",R[5446],E,N,N],[3,"Client",R[5447],E,N,N],[12,"client",E,E,49,N],[3,"Owned",E,E,N,N],[3,R[5453],E,E,N,N],[12,U,E,E,50,N],[3,R[5440],E,E,N,N],[12,"server",E,E,51,N],[0,R[5454],E,E,N,N],[17,"TYPE_ID","hid_io::hidiowatcher_capnp::h_i_d_i_o_watcher::_private",E,N,N],[0,"signal",R[5447],E,N,N],[3,"Owned",R[5489],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[4,"Which",E,E,N,N],[13,"DevicePacket",E,E,52,N],[13,"HostPacket",E,E,52,N],[6,R[4572],E,E,N,N],[6,R[4573],E,E,N,N],[11,R[2122],E,E,53,[[["self"]],["reader"]]],[11,R[4555],E,E,53,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,R[5448],E,E,53,[[["self"]],["bool"]]],[11,R[5449],E,E,53,[[["self"]],["bool"]]],[11,"which",E,E,53,[[],[[R[4556]],[R[12],[R[4556],R[2110]]],[R[2110]]]]],[11,R[2111],E,E,54,[[],["reader"]]],[11,R[2107],E,E,54,[[],["reader"]]],[11,R[2122],E,E,54,[[["self"]],["builder"]]],[11,R[4567],E,E,54,[[["self"]],["reader"]]],[11,R[4555],E,E,54,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,"set_device_packet",E,E,54,[[["reader"],["self"]],[R[12]]]],[11,"init_device_packet",E,E,54,[[],["builder"]]],[11,R[5448],E,E,54,[[["self"]],["bool"]]],[11,"set_host_packet",E,E,54,[[["reader"],["self"]],[R[12]]]],[11,"init_host_packet",E,E,54,[[],["builder"]]],[11,R[5449],E,E,54,[[["self"]],["bool"]]],[11,"which",E,E,54,[[],[[R[12],[R[4565],R[2110]]],[R[2110]],[R[4565]]]]],[0,"commands",R[5447],E,N,N],[3,"Client",R[5450],E,N,N],[12,"client",E,E,55,N],[3,"Owned",E,E,N,N],[3,R[5453],E,E,N,N],[12,U,E,E,56,N],[3,R[5440],E,E,N,N],[12,"server",E,E,57,N],[0,R[5454],E,E,N,N],[17,"TYPE_ID","hid_io::hidiowatcher_capnp::h_i_d_i_o_watcher::commands::_private",E,N,N],[8,"Server",R[5450],E,N,N],[11,"new",E,E,56,[[[U]],[R[5465]]]],[11,R[5443],E,E,56,[[],["client"]]],[11,R[5444],E,E,56,[[],["client"]]],[11,R[5445],E,E,57,[[["owned"],["u16"],["_t"],["results",["owned"]],["params",["owned"]]],[["promise",["error"]],["error"]]]],[8,"Server",R[5447],E,N,N],[11,"new",E,E,50,[[[U]],[R[5465]]]],[11,R[5443],E,E,50,[[],["client"]]],[11,R[5444],E,E,50,[[],["client"]]],[11,R[5445],E,E,51,[[["owned"],["u16"],["_t"],["results",["owned"]],["params",["owned"]]],[["promise",["error"]],["error"]]]],[0,"hidio_capnp","hid_io",R[5439],N,N],[0,"h_i_d_i_o_server",R[5452],E,N,N],[3,"Client",R[5451],E,N,N],[12,"client",E,E,58,N],[3,"Owned",E,E,N,N],[3,R[5453],E,E,N,N],[12,U,E,E,59,N],[3,R[5440],E,E,N,N],[12,"server",E,E,60,N],[0,R[5454],E,E,N,N],[17,"TYPE_ID","hid_io::hidio_capnp::h_i_d_i_o_server::_private",E,N,N],[0,"basic_params",R[5451],E,N,N],[3,"Owned",R[5490],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[11,R[2122],E,E,61,[[["self"]],["reader"]]],[11,R[4555],E,E,61,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,"get_info",E,E,61,[[],[["reader"],[R[12],["reader"]]]]],[11,"has_info",E,E,61,[[["self"]],["bool"]]],[11,R[2111],E,E,62,[[],["reader"]]],[11,R[2107],E,E,62,[[],["reader"]]],[11,R[2122],E,E,62,[[["self"]],["builder"]]],[11,R[4567],E,E,62,[[["self"]],["reader"]]],[11,R[4555],E,E,62,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,"get_info",E,E,62,[[],[[R[12],["builder"]],["builder"]]]],[11,"set_info",E,E,62,[[["self"],["reader"]],[R[12]]]],[11,"init_info",E,E,62,[[],["builder"]]],[11,"has_info",E,E,62,[[["self"]],["bool"]]],[11,"get_info",E,E,63,[[["self"]],[R[2188]]]],[0,"basic_results",R[5451],E,N,N],[3,"Owned",R[5491],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[11,R[2122],E,E,64,[[["self"]],["reader"]]],[11,R[4555],E,E,64,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,"get_port",E,E,64,[[],[[R[12],["client"]],["client"]]]],[11,R[2111],E,E,65,[[],["reader"]]],[11,R[2107],E,E,65,[[],["reader"]]],[11,R[2122],E,E,65,[[["self"]],["builder"]]],[11,R[4567],E,E,65,[[["self"]],["reader"]]],[11,R[4555],E,E,65,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,"get_port",E,E,65,[[],[[R[12],["client"]],["client"]]]],[11,"set_port",E,E,65,[[["self"],["client"]]]],[11,"get_port",E,E,66,[[["self"]],["client"]]],[0,"auth_params",R[5451],E,N,N],[3,"Owned",R[5492],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[11,R[2122],E,E,67,[[["self"]],["reader"]]],[11,R[4555],E,E,67,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,"get_info",E,E,67,[[],[["reader"],[R[12],["reader"]]]]],[11,"has_info",E,E,67,[[["self"]],["bool"]]],[11,R[2111],E,E,68,[[],["reader"]]],[11,R[2107],E,E,68,[[],["reader"]]],[11,R[2122],E,E,68,[[["self"]],["builder"]]],[11,R[4567],E,E,68,[[["self"]],["reader"]]],[11,R[4555],E,E,68,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,"get_info",E,E,68,[[],[[R[12],["builder"]],["builder"]]]],[11,"set_info",E,E,68,[[["self"],["reader"]],[R[12]]]],[11,"init_info",E,E,68,[[],["builder"]]],[11,"has_info",E,E,68,[[["self"]],["bool"]]],[11,"get_info",E,E,69,[[["self"]],[R[2188]]]],[0,"auth_results",R[5451],E,N,N],[3,"Owned",R[5493],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[11,R[2122],E,E,70,[[["self"]],["reader"]]],[11,R[4555],E,E,70,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,"get_port",E,E,70,[[],[[R[12],["client"]],["client"]]]],[11,R[2111],E,E,71,[[],["reader"]]],[11,R[2107],E,E,71,[[],["reader"]]],[11,R[2122],E,E,71,[[["self"]],["builder"]]],[11,R[4567],E,E,71,[[["self"]],["reader"]]],[11,R[4555],E,E,71,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,"get_port",E,E,71,[[],[[R[12],["client"]],["client"]]]],[11,"set_port",E,E,71,[[["self"],["client"]]]],[11,"get_port",E,E,72,[[["self"]],["client"]]],[6,"BasicParams",R[5451],E,N,N],[6,"BasicResults",E,E,N,N],[6,"AuthParams",E,E,N,N],[6,"AuthResults",E,E,N,N],[8,"Server",E,E,N,N],[11,"basic",E,E,73,[[["basicparams"],["self"],["basicresults"]],[["promise",["error"]],["error"]]]],[11,"auth",E,E,73,[[["self"],["authparams"],["authresults"]],[["promise",["error"]],["error"]]]],[11,"new",E,E,59,[[[U]],[R[5465]]]],[11,R[5443],E,E,59,[[],["client"]]],[11,R[5444],E,E,59,[[],["client"]]],[11,"basic_request",E,E,58,[[["self"]],[["owned"],["request",["owned","owned"]],["owned"]]]],[11,"auth_request",E,E,58,[[["self"]],[["request",["owned","owned"]],["owned"],["owned"]]]],[11,R[5445],E,E,60,[[["owned"],["u16"],["_t"],["results",["owned"]],["params",["owned"]]],[["promise",["error"]],["error"]]]],[0,"h_i_d_i_o",R[5452],E,N,N],[3,"Client",R[5455],E,N,N],[12,"client",E,E,74,N],[3,"Owned",E,E,N,N],[3,R[5453],E,E,N,N],[12,U,E,E,75,N],[3,R[5440],E,E,N,N],[12,"server",E,E,76,N],[0,R[5454],E,E,N,N],[17,"TYPE_ID","hid_io::hidio_capnp::h_i_d_i_o::_private",E,N,N],[0,"signal",R[5455],E,N,N],[3,"Owned",R[5463],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[0,"type_",E,E,N,N],[3,"Owned",R[5494],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[4,"Which",E,E,N,N],[13,R[5431],E,E,77,N],[13,"HostMacro",E,E,77,N],[13,R[5456],E,E,77,N],[6,R[4572],E,E,N,N],[6,R[4573],E,E,N,N],[11,R[2122],E,E,78,[[["self"]],["reader"]]],[11,R[4555],E,E,78,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,R[5458],E,E,78,[[["self"]],["bool"]]],[11,R[5460],E,E,78,[[["self"]],["bool"]]],[11,R[5462],E,E,78,[[["self"]],["bool"]]],[11,"which",E,E,78,[[],[[R[4556]],[R[12],[R[4556],R[2110]]],[R[2110]]]]],[11,R[2111],E,E,79,[[],["reader"]]],[11,R[2107],E,E,79,[[],["reader"]]],[11,R[2122],E,E,79,[[["self"]],["builder"]]],[11,R[4567],E,E,79,[[["self"]],["reader"]]],[11,R[4555],E,E,79,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,R[5457],E,E,79,[[["self"],["reader"]],[R[12]]]],[11,"init_usb_keyboard",E,E,79,[[],["builder"]]],[11,R[5458],E,E,79,[[["self"]],["bool"]]],[11,R[5459],E,E,79,[[["self"],["reader"]],[R[12]]]],[11,"init_host_macro",E,E,79,[[],["builder"]]],[11,R[5460],E,E,79,[[["self"]],["bool"]]],[11,R[5461],E,E,79,[[["self"],["reader"]],[R[12]]]],[11,"init_hidio_packet",E,E,79,[[],["builder"]]],[11,R[5462],E,E,79,[[["self"]],["bool"]]],[11,"which",E,E,79,[[],[[R[12],[R[4565],R[2110]]],[R[4565]],[R[2110]]]]],[11,R[2122],R[5463],E,80,[[["self"]],["reader"]]],[11,R[4555],E,E,80,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,R[5530],E,E,80,[[],["u64"]]],[11,R[5464],E,E,80,[[],[["reader"],[R[12],["reader"]]]]],[11,"has_source",E,E,80,[[["self"]],["bool"]]],[11,R[4349],E,E,80,[[],["reader"]]],[11,R[2111],E,E,81,[[],["reader"]]],[11,R[2107],E,E,81,[[],["reader"]]],[11,R[2122],E,E,81,[[["self"]],["builder"]]],[11,R[4567],E,E,81,[[["self"]],["reader"]]],[11,R[4555],E,E,81,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,R[5530],E,E,81,[[],["u64"]]],[11,"set_time",E,E,81,[[["self"],["u64"]]]],[11,R[5464],E,E,81,[[],[[R[12],["builder"]],["builder"]]]],[11,"set_source",E,E,81,[[["self"],["reader"]],[R[12]]]],[11,"init_source",E,E,81,[[],["builder"]]],[11,"has_source",E,E,81,[[["self"]],["bool"]]],[11,R[4349],E,E,81,[[],["builder"]]],[11,"init_type",E,E,81,[[],["builder"]]],[11,R[5464],E,E,82,[[["self"]],[R[2188]]]],[11,R[4349],E,E,82,[[["self"]],[R[2188]]]],[0,"signal_params",R[5455],E,N,N],[3,"Owned",R[5495],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[11,R[2122],E,E,83,[[["self"]],["reader"]]],[11,R[4555],E,E,83,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,R[5530],E,E,83,[[],["u64"]]],[11,R[2111],E,E,84,[[],["reader"]]],[11,R[2107],E,E,84,[[],["reader"]]],[11,R[2122],E,E,84,[[["self"]],["builder"]]],[11,R[4567],E,E,84,[[["self"]],["reader"]]],[11,R[4555],E,E,84,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,R[5530],E,E,84,[[],["u64"]]],[11,"set_time",E,E,84,[[["self"],["u64"]]]],[0,"signal_results",R[5455],E,N,N],[3,"Owned",R[5496],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[11,R[2122],E,E,85,[[["self"]],["reader"]]],[11,R[4555],E,E,85,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,R[5530],E,E,85,[[],["u64"]]],[11,"get_signal",E,E,85,[[],[["reader",["owned"]],[R[12],["reader"]]]]],[11,"has_signal",E,E,85,[[["self"]],["bool"]]],[11,R[2111],E,E,86,[[],["reader"]]],[11,R[2107],E,E,86,[[],["reader"]]],[11,R[2122],E,E,86,[[["self"]],["builder"]]],[11,R[4567],E,E,86,[[["self"]],["reader"]]],[11,R[4555],E,E,86,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,R[5530],E,E,86,[[],["u64"]]],[11,"set_time",E,E,86,[[["self"],["u64"]]]],[11,"get_signal",E,E,86,[[],[["builder",["owned"]],[R[12],["builder"]]]]],[11,"set_signal",E,E,86,[[["self"],["reader",["owned"]],["owned"]],[R[12]]]],[11,"init_signal",E,E,86,[[["u32"]],[["builder",["owned"]],["owned"]]]],[11,"has_signal",E,E,86,[[["self"]],["bool"]]],[0,"nodes_params",R[5455],E,N,N],[3,"Owned",R[5497],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[11,R[2122],E,E,87,[[["self"]],["reader"]]],[11,R[4555],E,E,87,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,R[2111],E,E,88,[[],["reader"]]],[11,R[2107],E,E,88,[[],["reader"]]],[11,R[2122],E,E,88,[[["self"]],["builder"]]],[11,R[4567],E,E,88,[[["self"]],["reader"]]],[11,R[4555],E,E,88,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[0,"nodes_results",R[5455],E,N,N],[3,"Owned",R[5498],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[11,R[2122],E,E,89,[[["self"]],["reader"]]],[11,R[4555],E,E,89,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,"get_nodes",E,E,89,[[],[[R[12],["reader"]],["reader",["owned"]]]]],[11,"has_nodes",E,E,89,[[["self"]],["bool"]]],[11,R[2111],E,E,90,[[],["reader"]]],[11,R[2107],E,E,90,[[],["reader"]]],[11,R[2122],E,E,90,[[["self"]],["builder"]]],[11,R[4567],E,E,90,[[["self"]],["reader"]]],[11,R[4555],E,E,90,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,"get_nodes",E,E,90,[[],[["builder",["owned"]],[R[12],["builder"]]]]],[11,"set_nodes",E,E,90,[[["self"],["owned"],["reader",["owned"]]],[R[12]]]],[11,"init_nodes",E,E,90,[[["u32"]],[["builder",["owned"]],["owned"]]]],[11,"has_nodes",E,E,90,[[["self"]],["bool"]]],[6,"SignalParams",R[5455],E,N,N],[6,"SignalResults",E,E,N,N],[6,"NodesParams",E,E,N,N],[6,"NodesResults",E,E,N,N],[8,"Server",E,E,N,N],[11,"signal",E,E,91,[[["self"],["signalresults"],["signalparams"]],[["promise",["error"]],["error"]]]],[11,"nodes",E,E,91,[[["nodesparams"],["self"],["nodesresults"]],[["promise",["error"]],["error"]]]],[11,"new",E,E,75,[[[U]],[R[5465]]]],[11,R[5443],E,E,75,[[],["client"]]],[11,R[5444],E,E,75,[[],["client"]]],[11,"signal_request",E,E,74,[[["self"]],[["request",["owned","owned"]],["owned"],["owned"]]]],[11,"nodes_request",E,E,74,[[["self"]],[["owned"],["request",["owned","owned"]],["owned"]]]],[11,R[5445],E,E,76,[[["owned"],["u16"],["_t"],["results",["owned"]],["params",["owned"]]],[["promise",["error"]],["error"]]]],[0,"hostmacro_capnp","hid_io",R[5439],N,N],[0,"host_macro","hid_io::hostmacro_capnp",E,N,N],[3,"Client",R[5466],E,N,N],[12,"client",E,E,92,N],[3,"Owned",E,E,N,N],[3,R[5453],E,E,N,N],[12,U,E,E,93,N],[3,R[5440],E,E,N,N],[12,"server",E,E,94,N],[0,R[5454],E,E,N,N],[17,"TYPE_ID","hid_io::hostmacro_capnp::host_macro::_private",E,N,N],[0,"signal",R[5466],E,N,N],[3,"Owned",R[5467],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[4,"Which",E,E,N,N],[13,"MacroNum",E,E,95,N],[13,"MacroName",E,E,95,N],[0,"macro_num",E,E,N,N],[3,"Owned",R[5499],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[11,R[2122],E,E,96,[[["self"]],["reader"]]],[11,R[4555],E,E,96,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,"get_num",E,E,96,[[],["u32"]]],[11,R[2111],E,E,97,[[],["reader"]]],[11,R[2107],E,E,97,[[],["reader"]]],[11,R[2122],E,E,97,[[["self"]],["builder"]]],[11,R[4567],E,E,97,[[["self"]],["reader"]]],[11,R[4555],E,E,97,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,"get_num",E,E,97,[[],["u32"]]],[11,"set_num",E,E,97,[[["u32"],["self"]]]],[0,"macro_name",R[5467],E,N,N],[3,"Owned",R[5500],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[11,R[2122],E,E,98,[[["self"]],["reader"]]],[11,R[4555],E,E,98,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,R[5468],E,E,98,[[],[["reader"],[R[12],["reader"]]]]],[11,"has_name",E,E,98,[[["self"]],["bool"]]],[11,R[2111],E,E,99,[[],["reader"]]],[11,R[2107],E,E,99,[[],["reader"]]],[11,R[2122],E,E,99,[[["self"]],["builder"]]],[11,R[4567],E,E,99,[[["self"]],["reader"]]],[11,R[4555],E,E,99,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,R[5468],E,E,99,[[],[["builder"],[R[12],["builder"]]]]],[11,"set_name",E,E,99,[[["self"],["reader"]]]],[11,"init_name",E,E,99,[[["u32"]],["builder"]]],[11,"has_name",E,E,99,[[["self"]],["bool"]]],[6,R[4572],R[5467],E,N,N],[6,R[4573],E,E,N,N],[11,R[2122],E,E,100,[[["self"]],["reader"]]],[11,R[4555],E,E,100,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,"which",E,E,100,[[],[[R[12],[R[4556],R[2110]]],[R[4556]],[R[2110]]]]],[11,R[2111],E,E,101,[[],["reader"]]],[11,R[2107],E,E,101,[[],["reader"]]],[11,R[2122],E,E,101,[[["self"]],["builder"]]],[11,R[4567],E,E,101,[[["self"]],["reader"]]],[11,R[4555],E,E,101,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,"init_macro_num",E,E,101,[[],["builder"]]],[11,"init_macro_name",E,E,101,[[],["builder"]]],[11,"which",E,E,101,[[],[[R[12],[R[4565],R[2110]]],[R[4565]],[R[2110]]]]],[0,"commands",R[5466],E,N,N],[3,"Client",R[5469],E,N,N],[12,"client",E,E,102,N],[3,"Owned",E,E,N,N],[3,R[5453],E,E,N,N],[12,U,E,E,103,N],[3,R[5440],E,E,N,N],[12,"server",E,E,104,N],[0,R[5454],E,E,N,N],[17,"TYPE_ID","hid_io::hostmacro_capnp::host_macro::commands::_private",E,N,N],[8,"Server",R[5469],E,N,N],[11,"new",E,E,103,[[[U]],[R[5465]]]],[11,R[5443],E,E,103,[[],["client"]]],[11,R[5444],E,E,103,[[],["client"]]],[11,R[5445],E,E,104,[[["owned"],["u16"],["_t"],["results",["owned"]],["params",["owned"]]],[["promise",["error"]],["error"]]]],[8,"Server",R[5466],E,N,N],[11,"new",E,E,93,[[[U]],[R[5465]]]],[11,R[5443],E,E,93,[[],["client"]]],[11,R[5444],E,E,93,[[],["client"]]],[11,R[5445],E,E,94,[[["owned"],["u16"],["_t"],["results",["owned"]],["params",["owned"]]],[["promise",["error"]],["error"]]]],[0,"usbkeyboard_capnp","hid_io",R[5439],N,N],[0,"u_s_b_keyboard","hid_io::usbkeyboard_capnp",E,N,N],[3,"Client",R[5470],E,N,N],[12,"client",E,E,105,N],[3,"Owned",E,E,N,N],[3,R[5453],E,E,N,N],[12,U,E,E,106,N],[3,R[5440],E,E,N,N],[12,"server",E,E,107,N],[0,R[5454],E,E,N,N],[17,"TYPE_ID","hid_io::usbkeyboard_capnp::u_s_b_keyboard::_private",E,N,N],[0,"key_event",R[5470],E,N,N],[3,"Owned",R[5501],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[11,R[2122],E,E,108,[[["self"]],["reader"]]],[11,R[4555],E,E,108,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,R[5472],E,E,108,[[],[[R[5471]],[R[12],[R[5471],R[2110]]],[R[2110]]]]],[11,"get_id",E,E,108,[[],["u16"]]],[11,R[2111],E,E,109,[[],["reader"]]],[11,R[2107],E,E,109,[[],["reader"]]],[11,R[2122],E,E,109,[[["self"]],["builder"]]],[11,R[4567],E,E,109,[[["self"]],["reader"]]],[11,R[4555],E,E,109,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,R[5472],E,E,109,[[],[[R[5471]],[R[12],[R[5471],R[2110]]],[R[2110]]]]],[11,"set_event",E,E,109,[[[R[5471]],["self"]]]],[11,"get_id",E,E,109,[[],["u16"]]],[11,"set_id",E,E,109,[[["self"],["u16"]]]],[0,"key_event_status",R[5470],E,N,N],[3,"Owned",R[5502],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[11,R[2122],E,E,110,[[["self"]],["reader"]]],[11,R[4555],E,E,110,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,R[5472],E,E,110,[[],[[R[5471]],[R[12],[R[5471],R[2110]]],[R[2110]]]]],[11,"get_id",E,E,110,[[],["u16"]]],[11,R[5473],E,E,110,[[],["bool"]]],[11,R[2111],E,E,111,[[],["reader"]]],[11,R[2107],E,E,111,[[],["reader"]]],[11,R[2122],E,E,111,[[["self"]],["builder"]]],[11,R[4567],E,E,111,[[["self"]],["reader"]]],[11,R[4555],E,E,111,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,R[5472],E,E,111,[[],[[R[5471]],[R[12],[R[5471],R[2110]]],[R[2110]]]]],[11,"set_event",E,E,111,[[[R[5471]],["self"]]]],[11,"get_id",E,E,111,[[],["u16"]]],[11,"set_id",E,E,111,[[["self"],["u16"]]]],[11,R[5473],E,E,111,[[],["bool"]]],[11,"set_success",E,E,111,[[["self"],["bool"]]]],[0,"signal",R[5470],E,N,N],[3,"Owned",R[5503],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[4,"Which",E,E,N,N],[13,"KeyEvent",E,E,112,N],[13,"ScanCodeEvent",E,E,112,N],[6,R[4572],E,E,N,N],[6,R[4573],E,E,N,N],[11,R[2122],E,E,113,[[["self"]],["reader"]]],[11,R[4555],E,E,113,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,R[5474],E,E,113,[[["self"]],["bool"]]],[11,R[5475],E,E,113,[[["self"]],["bool"]]],[11,"which",E,E,113,[[],[[R[12],[R[4556],R[2110]]],[R[2110]],[R[4556]]]]],[11,R[2111],E,E,114,[[],["reader"]]],[11,R[2107],E,E,114,[[],["reader"]]],[11,R[2122],E,E,114,[[["self"]],["builder"]]],[11,R[4567],E,E,114,[[["self"]],["reader"]]],[11,R[4555],E,E,114,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,"set_key_event",E,E,114,[[["self"],["reader"]],[R[12]]]],[11,"init_key_event",E,E,114,[[],["builder"]]],[11,R[5474],E,E,114,[[["self"]],["bool"]]],[11,"set_scan_code_event",E,E,114,[[["self"],["reader"]],[R[12]]]],[11,"init_scan_code_event",E,E,114,[[],["builder"]]],[11,R[5475],E,E,114,[[["self"]],["bool"]]],[11,"which",E,E,114,[[],[[R[12],[R[4565],R[2110]]],[R[4565]],[R[2110]]]]],[0,"commands",R[5470],E,N,N],[3,"Client",R[5476],E,N,N],[12,"client",E,E,115,N],[3,"Owned",E,E,N,N],[3,R[5453],E,E,N,N],[12,U,E,E,116,N],[3,R[5440],E,E,N,N],[12,"server",E,E,117,N],[0,R[5454],E,E,N,N],[17,"TYPE_ID","hid_io::usbkeyboard_capnp::u_s_b_keyboard::commands::_private",E,N,N],[0,"key_event_params",R[5476],E,N,N],[3,"Owned",R[5504],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[11,R[2122],E,E,118,[[["self"]],["reader"]]],[11,R[4555],E,E,118,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,"get_events",E,E,118,[[],[["reader",["owned"]],[R[12],["reader"]]]]],[11,"has_events",E,E,118,[[["self"]],["bool"]]],[11,R[2111],E,E,119,[[],["reader"]]],[11,R[2107],E,E,119,[[],["reader"]]],[11,R[2122],E,E,119,[[["self"]],["builder"]]],[11,R[4567],E,E,119,[[["self"]],["reader"]]],[11,R[4555],E,E,119,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,"get_events",E,E,119,[[],[[R[12],["builder"]],["builder",["owned"]]]]],[11,"set_events",E,E,119,[[["owned"],["reader",["owned"]],["self"]],[R[12]]]],[11,"init_events",E,E,119,[[["u32"]],[["owned"],["builder",["owned"]]]]],[11,"has_events",E,E,119,[[["self"]],["bool"]]],[0,"key_event_results",R[5476],E,N,N],[3,"Owned",R[5505],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[11,R[2122],E,E,120,[[["self"]],["reader"]]],[11,R[4555],E,E,120,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,"get_status",E,E,120,[[],[["reader",["owned"]],[R[12],["reader"]]]]],[11,"has_status",E,E,120,[[["self"]],["bool"]]],[11,R[2111],E,E,121,[[],["reader"]]],[11,R[2107],E,E,121,[[],["reader"]]],[11,R[2122],E,E,121,[[["self"]],["builder"]]],[11,R[4567],E,E,121,[[["self"]],["reader"]]],[11,R[4555],E,E,121,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,"get_status",E,E,121,[[],[[R[12],["builder"]],["builder",["owned"]]]]],[11,"set_status",E,E,121,[[["reader",["owned"]],["self"],["owned"]],[R[12]]]],[11,"init_status",E,E,121,[[["u32"]],[["builder",["owned"]],["owned"]]]],[11,"has_status",E,E,121,[[["self"]],["bool"]]],[0,"cli_command_params",R[5476],E,N,N],[3,"Owned",R[5506],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[11,R[2122],E,E,122,[[["self"]],["reader"]]],[11,R[4555],E,E,122,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,"get_foobar",E,E,122,[[],[["reader"],[R[12],["reader"]]]]],[11,"has_foobar",E,E,122,[[["self"]],["bool"]]],[11,R[2111],E,E,123,[[],["reader"]]],[11,R[2107],E,E,123,[[],["reader"]]],[11,R[2122],E,E,123,[[["self"]],["builder"]]],[11,R[4567],E,E,123,[[["self"]],["reader"]]],[11,R[4555],E,E,123,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,"get_foobar",E,E,123,[[],[["builder"],[R[12],["builder"]]]]],[11,"set_foobar",E,E,123,[[["self"],["reader"]]]],[11,"init_foobar",E,E,123,[[["u32"]],["builder"]]],[11,"has_foobar",E,E,123,[[["self"]],["bool"]]],[0,"cli_command_results",R[5476],E,N,N],[3,"Owned",R[5507],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[11,R[2122],E,E,124,[[["self"]],["reader"]]],[11,R[4555],E,E,124,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[11,R[2111],E,E,125,[[],["reader"]]],[11,R[2107],E,E,125,[[],["reader"]]],[11,R[2122],E,E,125,[[["self"]],["builder"]]],[11,R[4567],E,E,125,[[["self"]],["reader"]]],[11,R[4555],E,E,125,[[["self"]],[[R[2098]],[R[12],[R[2098]]]]]],[6,"KeyEventParams",R[5476],E,N,N],[6,"KeyEventResults",E,E,N,N],[6,"CliCommandParams",E,E,N,N],[6,"CliCommandResults",E,E,N,N],[8,"Server",E,E,N,N],[11,"key_event",E,E,126,[[["self"],["keyeventparams"],["keyeventresults"]],[["promise",["error"]],["error"]]]],[11,"cli_command",E,E,126,[[["clicommandresults"],["self"],["clicommandparams"]],[["promise",["error"]],["error"]]]],[11,"new",E,E,116,[[[U]],[R[5465]]]],[11,R[5443],E,E,116,[[],["client"]]],[11,R[5444],E,E,116,[[],["client"]]],[11,"key_event_request",E,E,115,[[["self"]],[["owned"],["request",["owned","owned"]],["owned"]]]],[11,"cli_command_request",E,E,115,[[["self"]],[["owned"],["owned"],["request",["owned","owned"]]]]],[11,R[5445],E,E,117,[[["owned"],["u16"],["_t"],["results",["owned"]],["params",["owned"]]],[["promise",["error"]],["error"]]]],[8,"Server",R[5470],E,N,N],[11,"new",E,E,106,[[[U]],[R[5465]]]],[11,R[5443],E,E,106,[[],["client"]]],[11,R[5444],E,E,106,[[],["client"]]],[11,R[5445],E,E,107,[[["owned"],["u16"],["_t"],["results",["owned"]],["params",["owned"]]],[["promise",["error"]],["error"]]]],[11,"from","hid_io",E,127,[[[T]],[T]]],[11,"into",E,E,127,[[],[U]]],[11,R[11],E,E,127,[[[U]],[R[12]]]],[11,R[39],E,E,127,[[["self"]],[T]]],[11,R[13],E,E,127,[[["self"]],[T]]],[11,R[14],E,E,127,[[],[R[12]]]],[11,R[18],E,E,127,[[["self"]],[R[40]]]],[11,"from",R[5477],E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[[T],["self"]]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,[[[T],["self"]]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",R[5416],E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[11],E,E,6,[[[U]],[R[12]]]],[11,R[39],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[],[R[12]]]],[11,R[18],E,E,6,[[["self"]],[R[40]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[11],E,E,7,[[[U]],[R[12]]]],[11,R[39],E,E,7,[[["self"]],[T]]],[11,R[13],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[],[R[12]]]],[11,R[18],E,E,7,[[["self"]],[R[40]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[17],E,E,3,[[[T],["self"]]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[11],E,E,8,[[[U]],[R[12]]]],[11,R[39],E,E,8,[[["self"]],[T]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[],[R[12]]]],[11,R[18],E,E,8,[[["self"]],[R[40]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,"from",R[5478],E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,R[18],E,E,5,[[["self"]],[R[40]]]],[11,"from",R[5425],E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[11],E,E,11,[[[U]],[R[12]]]],[11,R[39],E,E,11,[[["self"]],[T]]],[11,R[13],E,E,11,[[["self"]],[T]]],[11,R[14],E,E,11,[[],[R[12]]]],[11,R[18],E,E,11,[[["self"]],[R[40]]]],[11,"from",R[5479],E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[11],E,E,9,[[[U]],[R[12]]]],[11,R[39],E,E,9,[[["self"]],[T]]],[11,R[13],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[],[R[12]]]],[11,R[18],E,E,9,[[["self"]],[R[40]]]],[11,"from",R[5480],E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[16],E,E,12,[[["self"]],[T]]],[11,R[17],E,E,12,[[[T],["self"]]]],[11,R[170],E,E,12,[[["self"]],["string"]]],[11,R[11],E,E,12,[[[U]],[R[12]]]],[11,R[39],E,E,12,[[["self"]],[T]]],[11,R[13],E,E,12,[[["self"]],[T]]],[11,R[14],E,E,12,[[],[R[12]]]],[11,R[18],E,E,12,[[["self"]],[R[40]]]],[11,"from",E,E,128,[[[T]],[T]]],[11,"into",E,E,128,[[],[U]]],[11,R[11],E,E,128,[[[U]],[R[12]]]],[11,R[39],E,E,128,[[["self"]],[T]]],[11,R[13],E,E,128,[[["self"]],[T]]],[11,R[14],E,E,128,[[],[R[12]]]],[11,R[18],E,E,128,[[["self"]],[R[40]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[16],E,E,13,[[["self"]],[T]]],[11,R[17],E,E,13,[[[T],["self"]]]],[11,R[170],E,E,13,[[["self"]],["string"]]],[11,R[11],E,E,13,[[[U]],[R[12]]]],[11,R[39],E,E,13,[[["self"]],[T]]],[11,R[13],E,E,13,[[["self"]],[T]]],[11,R[14],E,E,13,[[],[R[12]]]],[11,R[18],E,E,13,[[["self"]],[R[40]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[16],E,E,14,[[["self"]],[T]]],[11,R[17],E,E,14,[[[T],["self"]]]],[11,R[11],E,E,14,[[[U]],[R[12]]]],[11,R[39],E,E,14,[[["self"]],[T]]],[11,R[13],E,E,14,[[["self"]],[T]]],[11,R[14],E,E,14,[[],[R[12]]]],[11,R[18],E,E,14,[[["self"]],[R[40]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[16],E,E,15,[[["self"]],[T]]],[11,R[17],E,E,15,[[[T],["self"]]]],[11,R[11],E,E,15,[[[U]],[R[12]]]],[11,R[39],E,E,15,[[["self"]],[T]]],[11,R[13],E,E,15,[[["self"]],[T]]],[11,R[14],E,E,15,[[],[R[12]]]],[11,R[18],E,E,15,[[["self"]],[R[40]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[16],E,E,16,[[["self"]],[T]]],[11,R[17],E,E,16,[[[T],["self"]]]],[11,R[11],E,E,16,[[[U]],[R[12]]]],[11,R[39],E,E,16,[[["self"]],[T]]],[11,R[13],E,E,16,[[["self"]],[T]]],[11,R[14],E,E,16,[[],[R[12]]]],[11,R[18],E,E,16,[[["self"]],[R[40]]]],[11,"from",R[5430],E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[16],E,E,17,[[["self"]],[T]]],[11,R[17],E,E,17,[[[T],["self"]]]],[11,R[11],E,E,17,[[[U]],[R[12]]]],[11,R[39],E,E,17,[[["self"]],[T]]],[11,R[13],E,E,17,[[["self"]],[T]]],[11,R[14],E,E,17,[[],[R[12]]]],[11,R[18],E,E,17,[[["self"]],[R[40]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[16],E,E,18,[[["self"]],[T]]],[11,R[17],E,E,18,[[[T],["self"]]]],[11,R[170],E,E,18,[[["self"]],["string"]]],[11,R[11],E,E,18,[[[U]],[R[12]]]],[11,R[39],E,E,18,[[["self"]],[T]]],[11,R[13],E,E,18,[[["self"]],[T]]],[11,R[14],E,E,18,[[],[R[12]]]],[11,R[18],E,E,18,[[["self"]],[R[40]]]],[11,"from",R[5481],E,129,[[[T]],[T]]],[11,"into",E,E,129,[[],[U]]],[11,R[16],E,E,129,[[["self"]],[T]]],[11,R[17],E,E,129,[[[T],["self"]]]],[11,R[11],E,E,129,[[[U]],[R[12]]]],[11,R[39],E,E,129,[[["self"]],[T]]],[11,R[13],E,E,129,[[["self"]],[T]]],[11,R[14],E,E,129,[[],[R[12]]]],[11,R[18],E,E,129,[[["self"]],[R[40]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[16],E,E,19,[[["self"]],[T]]],[11,R[17],E,E,19,[[[T],["self"]]]],[11,R[11],E,E,19,[[[U]],[R[12]]]],[11,R[39],E,E,19,[[["self"]],[T]]],[11,R[13],E,E,19,[[["self"]],[T]]],[11,R[14],E,E,19,[[],[R[12]]]],[11,R[18],E,E,19,[[["self"]],[R[40]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[11],E,E,20,[[[U]],[R[12]]]],[11,R[39],E,E,20,[[["self"]],[T]]],[11,R[13],E,E,20,[[["self"]],[T]]],[11,R[14],E,E,20,[[],[R[12]]]],[11,R[18],E,E,20,[[["self"]],[R[40]]]],[11,"from",E,E,130,[[[T]],[T]]],[11,"into",E,E,130,[[],[U]]],[11,R[11],E,E,130,[[[U]],[R[12]]]],[11,R[39],E,E,130,[[["self"]],[T]]],[11,R[13],E,E,130,[[["self"]],[T]]],[11,R[14],E,E,130,[[],[R[12]]]],[11,R[18],E,E,130,[[["self"]],[R[40]]]],[11,"from",R[5432],E,131,[[[T]],[T]]],[11,"into",E,E,131,[[],[U]]],[11,R[16],E,E,131,[[["self"]],[T]]],[11,R[17],E,E,131,[[[T],["self"]]]],[11,R[11],E,E,131,[[[U]],[R[12]]]],[11,R[39],E,E,131,[[["self"]],[T]]],[11,R[13],E,E,131,[[["self"]],[T]]],[11,R[14],E,E,131,[[],[R[12]]]],[11,R[18],E,E,131,[[["self"]],[R[40]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[16],E,E,24,[[["self"]],[T]]],[11,R[17],E,E,24,[[[T],["self"]]]],[11,R[11],E,E,24,[[[U]],[R[12]]]],[11,R[39],E,E,24,[[["self"]],[T]]],[11,R[13],E,E,24,[[["self"]],[T]]],[11,R[14],E,E,24,[[],[R[12]]]],[11,R[18],E,E,24,[[["self"]],[R[40]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[11],E,E,25,[[[U]],[R[12]]]],[11,R[39],E,E,25,[[["self"]],[T]]],[11,R[13],E,E,25,[[["self"]],[T]]],[11,R[14],E,E,25,[[],[R[12]]]],[11,R[18],E,E,25,[[["self"]],[R[40]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[11],E,E,26,[[[U]],[R[12]]]],[11,R[39],E,E,26,[[["self"]],[T]]],[11,R[13],E,E,26,[[["self"]],[T]]],[11,R[14],E,E,26,[[],[R[12]]]],[11,R[18],E,E,26,[[["self"]],[R[40]]]],[11,"from",R[5482],E,132,[[[T]],[T]]],[11,"into",E,E,132,[[],[U]]],[11,R[16],E,E,132,[[["self"]],[T]]],[11,R[17],E,E,132,[[[T],["self"]]]],[11,R[11],E,E,132,[[[U]],[R[12]]]],[11,R[39],E,E,132,[[["self"]],[T]]],[11,R[13],E,E,132,[[["self"]],[T]]],[11,R[14],E,E,132,[[],[R[12]]]],[11,R[18],E,E,132,[[["self"]],[R[40]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[16],E,E,22,[[["self"]],[T]]],[11,R[17],E,E,22,[[[T],["self"]]]],[11,R[11],E,E,22,[[[U]],[R[12]]]],[11,R[39],E,E,22,[[["self"]],[T]]],[11,R[13],E,E,22,[[["self"]],[T]]],[11,R[14],E,E,22,[[],[R[12]]]],[11,R[18],E,E,22,[[["self"]],[R[40]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[11],E,E,23,[[[U]],[R[12]]]],[11,R[39],E,E,23,[[["self"]],[T]]],[11,R[13],E,E,23,[[["self"]],[T]]],[11,R[14],E,E,23,[[],[R[12]]]],[11,R[18],E,E,23,[[["self"]],[R[40]]]],[11,"from",E,E,133,[[[T]],[T]]],[11,"into",E,E,133,[[],[U]]],[11,R[11],E,E,133,[[[U]],[R[12]]]],[11,R[39],E,E,133,[[["self"]],[T]]],[11,R[13],E,E,133,[[["self"]],[T]]],[11,R[14],E,E,133,[[],[R[12]]]],[11,R[18],E,E,133,[[["self"]],[R[40]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[11],E,E,21,[[[U]],[R[12]]]],[11,R[39],E,E,21,[[["self"]],[T]]],[11,R[13],E,E,21,[[["self"]],[T]]],[11,R[14],E,E,21,[[],[R[12]]]],[11,R[18],E,E,21,[[["self"]],[R[40]]]],[11,"from",R[5438],E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[16],E,E,27,[[["self"]],[T]]],[11,R[17],E,E,27,[[[T],["self"]]]],[11,R[11],E,E,27,[[[U]],[R[12]]]],[11,R[39],E,E,27,[[["self"]],[T]]],[11,R[13],E,E,27,[[["self"]],[T]]],[11,R[14],E,E,27,[[],[R[12]]]],[11,R[18],E,E,27,[[["self"]],[R[40]]]],[11,"from",E,E,134,[[[T]],[T]]],[11,"into",E,E,134,[[],[U]]],[11,R[16],E,E,134,[[["self"]],[T]]],[11,R[17],E,E,134,[[[T],["self"]]]],[11,R[11],E,E,134,[[[U]],[R[12]]]],[11,R[39],E,E,134,[[["self"]],[T]]],[11,R[13],E,E,134,[[["self"]],[T]]],[11,R[14],E,E,134,[[],[R[12]]]],[11,R[18],E,E,134,[[["self"]],[R[40]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[11],E,E,28,[[[U]],[R[12]]]],[11,R[39],E,E,28,[[["self"]],[T]]],[11,R[13],E,E,28,[[["self"]],[T]]],[11,R[14],E,E,28,[[],[R[12]]]],[11,R[18],E,E,28,[[["self"]],[R[40]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[11],E,E,29,[[[U]],[R[12]]]],[11,R[39],E,E,29,[[["self"]],[T]]],[11,R[13],E,E,29,[[["self"]],[T]]],[11,R[14],E,E,29,[[],[R[12]]]],[11,R[18],E,E,29,[[["self"]],[R[40]]]],[11,"from",R[5483],E,135,[[[T]],[T]]],[11,"into",E,E,135,[[],[U]]],[11,R[16],E,E,135,[[["self"]],[T]]],[11,R[17],E,E,135,[[[T],["self"]]]],[11,R[11],E,E,135,[[[U]],[R[12]]]],[11,R[39],E,E,135,[[["self"]],[T]]],[11,R[13],E,E,135,[[["self"]],[T]]],[11,R[14],E,E,135,[[],[R[12]]]],[11,R[18],E,E,135,[[["self"]],[R[40]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[16],E,E,30,[[["self"]],[T]]],[11,R[17],E,E,30,[[[T],["self"]]]],[11,R[11],E,E,30,[[[U]],[R[12]]]],[11,R[39],E,E,30,[[["self"]],[T]]],[11,R[13],E,E,30,[[["self"]],[T]]],[11,R[14],E,E,30,[[],[R[12]]]],[11,R[18],E,E,30,[[["self"]],[R[40]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[11],E,E,31,[[[U]],[R[12]]]],[11,R[39],E,E,31,[[["self"]],[T]]],[11,R[13],E,E,31,[[["self"]],[T]]],[11,R[14],E,E,31,[[],[R[12]]]],[11,R[18],E,E,31,[[["self"]],[R[40]]]],[11,"from",E,E,136,[[[T]],[T]]],[11,"into",E,E,136,[[],[U]]],[11,R[11],E,E,136,[[[U]],[R[12]]]],[11,R[39],E,E,136,[[["self"]],[T]]],[11,R[13],E,E,136,[[["self"]],[T]]],[11,R[14],E,E,136,[[],[R[12]]]],[11,R[18],E,E,136,[[["self"]],[R[40]]]],[11,"from",R[5484],E,137,[[[T]],[T]]],[11,"into",E,E,137,[[],[U]]],[11,R[16],E,E,137,[[["self"]],[T]]],[11,R[17],E,E,137,[[[T],["self"]]]],[11,R[11],E,E,137,[[[U]],[R[12]]]],[11,R[39],E,E,137,[[["self"]],[T]]],[11,R[13],E,E,137,[[["self"]],[T]]],[11,R[14],E,E,137,[[],[R[12]]]],[11,R[18],E,E,137,[[["self"]],[R[40]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[16],E,E,32,[[["self"]],[T]]],[11,R[17],E,E,32,[[[T],["self"]]]],[11,R[11],E,E,32,[[[U]],[R[12]]]],[11,R[39],E,E,32,[[["self"]],[T]]],[11,R[13],E,E,32,[[["self"]],[T]]],[11,R[14],E,E,32,[[],[R[12]]]],[11,R[18],E,E,32,[[["self"]],[R[40]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[11],E,E,33,[[[U]],[R[12]]]],[11,R[39],E,E,33,[[["self"]],[T]]],[11,R[13],E,E,33,[[["self"]],[T]]],[11,R[14],E,E,33,[[],[R[12]]]],[11,R[18],E,E,33,[[["self"]],[R[40]]]],[11,"from",E,E,138,[[[T]],[T]]],[11,"into",E,E,138,[[],[U]]],[11,R[11],E,E,138,[[[U]],[R[12]]]],[11,R[39],E,E,138,[[["self"]],[T]]],[11,R[13],E,E,138,[[["self"]],[T]]],[11,R[14],E,E,138,[[],[R[12]]]],[11,R[18],E,E,138,[[["self"]],[R[40]]]],[11,"from",R[5485],E,139,[[[T]],[T]]],[11,"into",E,E,139,[[],[U]]],[11,R[16],E,E,139,[[["self"]],[T]]],[11,R[17],E,E,139,[[[T],["self"]]]],[11,R[11],E,E,139,[[[U]],[R[12]]]],[11,R[39],E,E,139,[[["self"]],[T]]],[11,R[13],E,E,139,[[["self"]],[T]]],[11,R[14],E,E,139,[[],[R[12]]]],[11,R[18],E,E,139,[[["self"]],[R[40]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[16],E,E,34,[[["self"]],[T]]],[11,R[17],E,E,34,[[[T],["self"]]]],[11,R[11],E,E,34,[[[U]],[R[12]]]],[11,R[39],E,E,34,[[["self"]],[T]]],[11,R[13],E,E,34,[[["self"]],[T]]],[11,R[14],E,E,34,[[],[R[12]]]],[11,R[18],E,E,34,[[["self"]],[R[40]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[11],E,E,35,[[[U]],[R[12]]]],[11,R[39],E,E,35,[[["self"]],[T]]],[11,R[13],E,E,35,[[["self"]],[T]]],[11,R[14],E,E,35,[[],[R[12]]]],[11,R[18],E,E,35,[[["self"]],[R[40]]]],[11,"from",E,E,140,[[[T]],[T]]],[11,"into",E,E,140,[[],[U]]],[11,R[11],E,E,140,[[[U]],[R[12]]]],[11,R[39],E,E,140,[[["self"]],[T]]],[11,R[13],E,E,140,[[["self"]],[T]]],[11,R[14],E,E,140,[[],[R[12]]]],[11,R[18],E,E,140,[[["self"]],[R[40]]]],[11,"from",R[5486],E,141,[[[T]],[T]]],[11,"into",E,E,141,[[],[U]]],[11,R[16],E,E,141,[[["self"]],[T]]],[11,R[17],E,E,141,[[[T],["self"]]]],[11,R[11],E,E,141,[[[U]],[R[12]]]],[11,R[39],E,E,141,[[["self"]],[T]]],[11,R[13],E,E,141,[[["self"]],[T]]],[11,R[14],E,E,141,[[],[R[12]]]],[11,R[18],E,E,141,[[["self"]],[R[40]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,R[16],E,E,36,[[["self"]],[T]]],[11,R[17],E,E,36,[[[T],["self"]]]],[11,R[11],E,E,36,[[[U]],[R[12]]]],[11,R[39],E,E,36,[[["self"]],[T]]],[11,R[13],E,E,36,[[["self"]],[T]]],[11,R[14],E,E,36,[[],[R[12]]]],[11,R[18],E,E,36,[[["self"]],[R[40]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,"into",E,E,37,[[],[U]]],[11,R[11],E,E,37,[[[U]],[R[12]]]],[11,R[39],E,E,37,[[["self"]],[T]]],[11,R[13],E,E,37,[[["self"]],[T]]],[11,R[14],E,E,37,[[],[R[12]]]],[11,R[18],E,E,37,[[["self"]],[R[40]]]],[11,"from",E,E,142,[[[T]],[T]]],[11,"into",E,E,142,[[],[U]]],[11,R[11],E,E,142,[[[U]],[R[12]]]],[11,R[39],E,E,142,[[["self"]],[T]]],[11,R[13],E,E,142,[[["self"]],[T]]],[11,R[14],E,E,142,[[],[R[12]]]],[11,R[18],E,E,142,[[["self"]],[R[40]]]],[11,"from",R[5441],E,39,[[[T]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,R[16],E,E,39,[[["self"]],[T]]],[11,R[17],E,E,39,[[[T],["self"]]]],[11,R[11],E,E,39,[[[U]],[R[12]]]],[11,R[39],E,E,39,[[["self"]],[T]]],[11,R[13],E,E,39,[[["self"]],[T]]],[11,R[14],E,E,39,[[],[R[12]]]],[11,R[18],E,E,39,[[["self"]],[R[40]]]],[11,"from",E,E,143,[[[T]],[T]]],[11,"into",E,E,143,[[],[U]]],[11,R[16],E,E,143,[[["self"]],[T]]],[11,R[17],E,E,143,[[[T],["self"]]]],[11,R[11],E,E,143,[[[U]],[R[12]]]],[11,R[39],E,E,143,[[["self"]],[T]]],[11,R[13],E,E,143,[[["self"]],[T]]],[11,R[14],E,E,143,[[],[R[12]]]],[11,R[18],E,E,143,[[["self"]],[R[40]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,"into",E,E,40,[[],[U]]],[11,R[11],E,E,40,[[[U]],[R[12]]]],[11,R[39],E,E,40,[[["self"]],[T]]],[11,R[13],E,E,40,[[["self"]],[T]]],[11,R[14],E,E,40,[[],[R[12]]]],[11,R[18],E,E,40,[[["self"]],[R[40]]]],[11,"from",E,E,41,[[[T]],[T]]],[11,"into",E,E,41,[[],[U]]],[11,R[11],E,E,41,[[[U]],[R[12]]]],[11,R[39],E,E,41,[[["self"]],[T]]],[11,R[13],E,E,41,[[["self"]],[T]]],[11,R[14],E,E,41,[[],[R[12]]]],[11,R[18],E,E,41,[[["self"]],[R[40]]]],[11,"from",R[5487],E,144,[[[T]],[T]]],[11,"into",E,E,144,[[],[U]]],[11,R[16],E,E,144,[[["self"]],[T]]],[11,R[17],E,E,144,[[[T],["self"]]]],[11,R[11],E,E,144,[[[U]],[R[12]]]],[11,R[39],E,E,144,[[["self"]],[T]]],[11,R[13],E,E,144,[[["self"]],[T]]],[11,R[14],E,E,144,[[],[R[12]]]],[11,R[18],E,E,144,[[["self"]],[R[40]]]],[11,"from",E,E,42,[[[T]],[T]]],[11,"into",E,E,42,[[],[U]]],[11,R[16],E,E,42,[[["self"]],[T]]],[11,R[17],E,E,42,[[[T],["self"]]]],[11,R[11],E,E,42,[[[U]],[R[12]]]],[11,R[39],E,E,42,[[["self"]],[T]]],[11,R[13],E,E,42,[[["self"]],[T]]],[11,R[14],E,E,42,[[],[R[12]]]],[11,R[18],E,E,42,[[["self"]],[R[40]]]],[11,"from",E,E,43,[[[T]],[T]]],[11,"into",E,E,43,[[],[U]]],[11,R[11],E,E,43,[[[U]],[R[12]]]],[11,R[39],E,E,43,[[["self"]],[T]]],[11,R[13],E,E,43,[[["self"]],[T]]],[11,R[14],E,E,43,[[],[R[12]]]],[11,R[18],E,E,43,[[["self"]],[R[40]]]],[11,"from",E,E,145,[[[T]],[T]]],[11,"into",E,E,145,[[],[U]]],[11,R[11],E,E,145,[[[U]],[R[12]]]],[11,R[39],E,E,145,[[["self"]],[T]]],[11,R[13],E,E,145,[[["self"]],[T]]],[11,R[14],E,E,145,[[],[R[12]]]],[11,R[18],E,E,145,[[["self"]],[R[40]]]],[11,"from",R[5442],E,44,[[[T]],[T]]],[11,"into",E,E,44,[[],[U]]],[11,R[16],E,E,44,[[["self"]],[T]]],[11,R[17],E,E,44,[[[T],["self"]]]],[11,R[11],E,E,44,[[[U]],[R[12]]]],[11,R[39],E,E,44,[[["self"]],[T]]],[11,R[13],E,E,44,[[["self"]],[T]]],[11,R[14],E,E,44,[[],[R[12]]]],[11,R[18],E,E,44,[[["self"]],[R[40]]]],[11,"from",E,E,146,[[[T]],[T]]],[11,"into",E,E,146,[[],[U]]],[11,R[16],E,E,146,[[["self"]],[T]]],[11,R[17],E,E,146,[[[T],["self"]]]],[11,R[11],E,E,146,[[[U]],[R[12]]]],[11,R[39],E,E,146,[[["self"]],[T]]],[11,R[13],E,E,146,[[["self"]],[T]]],[11,R[14],E,E,146,[[],[R[12]]]],[11,R[18],E,E,146,[[["self"]],[R[40]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,"into",E,E,45,[[],[U]]],[11,R[11],E,E,45,[[[U]],[R[12]]]],[11,R[39],E,E,45,[[["self"]],[T]]],[11,R[13],E,E,45,[[["self"]],[T]]],[11,R[14],E,E,45,[[],[R[12]]]],[11,R[18],E,E,45,[[["self"]],[R[40]]]],[11,"from",E,E,46,[[[T]],[T]]],[11,"into",E,E,46,[[],[U]]],[11,R[11],E,E,46,[[[U]],[R[12]]]],[11,R[39],E,E,46,[[["self"]],[T]]],[11,R[13],E,E,46,[[["self"]],[T]]],[11,R[14],E,E,46,[[],[R[12]]]],[11,R[18],E,E,46,[[["self"]],[R[40]]]],[11,"from",R[5488],E,147,[[[T]],[T]]],[11,"into",E,E,147,[[],[U]]],[11,R[16],E,E,147,[[["self"]],[T]]],[11,R[17],E,E,147,[[[T],["self"]]]],[11,R[11],E,E,147,[[[U]],[R[12]]]],[11,R[39],E,E,147,[[["self"]],[T]]],[11,R[13],E,E,147,[[["self"]],[T]]],[11,R[14],E,E,147,[[],[R[12]]]],[11,R[18],E,E,147,[[["self"]],[R[40]]]],[11,"from",E,E,47,[[[T]],[T]]],[11,"into",E,E,47,[[],[U]]],[11,R[16],E,E,47,[[["self"]],[T]]],[11,R[17],E,E,47,[[[T],["self"]]]],[11,R[11],E,E,47,[[[U]],[R[12]]]],[11,R[39],E,E,47,[[["self"]],[T]]],[11,R[13],E,E,47,[[["self"]],[T]]],[11,R[14],E,E,47,[[],[R[12]]]],[11,R[18],E,E,47,[[["self"]],[R[40]]]],[11,"from",E,E,48,[[[T]],[T]]],[11,"into",E,E,48,[[],[U]]],[11,R[11],E,E,48,[[[U]],[R[12]]]],[11,R[39],E,E,48,[[["self"]],[T]]],[11,R[13],E,E,48,[[["self"]],[T]]],[11,R[14],E,E,48,[[],[R[12]]]],[11,R[18],E,E,48,[[["self"]],[R[40]]]],[11,"from",E,E,148,[[[T]],[T]]],[11,"into",E,E,148,[[],[U]]],[11,R[11],E,E,148,[[[U]],[R[12]]]],[11,R[39],E,E,148,[[["self"]],[T]]],[11,R[13],E,E,148,[[["self"]],[T]]],[11,R[14],E,E,148,[[],[R[12]]]],[11,R[18],E,E,148,[[["self"]],[R[40]]]],[11,"from",R[5447],E,49,[[[T]],[T]]],[11,"into",E,E,49,[[],[U]]],[11,R[16],E,E,49,[[["self"]],[T]]],[11,R[17],E,E,49,[[[T],["self"]]]],[11,R[11],E,E,49,[[[U]],[R[12]]]],[11,R[39],E,E,49,[[["self"]],[T]]],[11,R[13],E,E,49,[[["self"]],[T]]],[11,R[14],E,E,49,[[],[R[12]]]],[11,R[18],E,E,49,[[["self"]],[R[40]]]],[11,"from",E,E,149,[[[T]],[T]]],[11,"into",E,E,149,[[],[U]]],[11,R[16],E,E,149,[[["self"]],[T]]],[11,R[17],E,E,149,[[[T],["self"]]]],[11,R[11],E,E,149,[[[U]],[R[12]]]],[11,R[39],E,E,149,[[["self"]],[T]]],[11,R[13],E,E,149,[[["self"]],[T]]],[11,R[14],E,E,149,[[],[R[12]]]],[11,R[18],E,E,149,[[["self"]],[R[40]]]],[11,"from",E,E,50,[[[T]],[T]]],[11,"into",E,E,50,[[],[U]]],[11,R[11],E,E,50,[[[U]],[R[12]]]],[11,R[39],E,E,50,[[["self"]],[T]]],[11,R[13],E,E,50,[[["self"]],[T]]],[11,R[14],E,E,50,[[],[R[12]]]],[11,R[18],E,E,50,[[["self"]],[R[40]]]],[11,"from",E,E,51,[[[T]],[T]]],[11,"into",E,E,51,[[],[U]]],[11,R[11],E,E,51,[[[U]],[R[12]]]],[11,R[39],E,E,51,[[["self"]],[T]]],[11,R[13],E,E,51,[[["self"]],[T]]],[11,R[14],E,E,51,[[],[R[12]]]],[11,R[18],E,E,51,[[["self"]],[R[40]]]],[11,"from",R[5489],E,150,[[[T]],[T]]],[11,"into",E,E,150,[[],[U]]],[11,R[16],E,E,150,[[["self"]],[T]]],[11,R[17],E,E,150,[[[T],["self"]]]],[11,R[11],E,E,150,[[[U]],[R[12]]]],[11,R[39],E,E,150,[[["self"]],[T]]],[11,R[13],E,E,150,[[["self"]],[T]]],[11,R[14],E,E,150,[[],[R[12]]]],[11,R[18],E,E,150,[[["self"]],[R[40]]]],[11,"from",E,E,53,[[[T]],[T]]],[11,"into",E,E,53,[[],[U]]],[11,R[16],E,E,53,[[["self"]],[T]]],[11,R[17],E,E,53,[[[T],["self"]]]],[11,R[11],E,E,53,[[[U]],[R[12]]]],[11,R[39],E,E,53,[[["self"]],[T]]],[11,R[13],E,E,53,[[["self"]],[T]]],[11,R[14],E,E,53,[[],[R[12]]]],[11,R[18],E,E,53,[[["self"]],[R[40]]]],[11,"from",E,E,54,[[[T]],[T]]],[11,"into",E,E,54,[[],[U]]],[11,R[11],E,E,54,[[[U]],[R[12]]]],[11,R[39],E,E,54,[[["self"]],[T]]],[11,R[13],E,E,54,[[["self"]],[T]]],[11,R[14],E,E,54,[[],[R[12]]]],[11,R[18],E,E,54,[[["self"]],[R[40]]]],[11,"from",E,E,151,[[[T]],[T]]],[11,"into",E,E,151,[[],[U]]],[11,R[11],E,E,151,[[[U]],[R[12]]]],[11,R[39],E,E,151,[[["self"]],[T]]],[11,R[13],E,E,151,[[["self"]],[T]]],[11,R[14],E,E,151,[[],[R[12]]]],[11,R[18],E,E,151,[[["self"]],[R[40]]]],[11,"from",E,E,52,[[[T]],[T]]],[11,"into",E,E,52,[[],[U]]],[11,R[11],E,E,52,[[[U]],[R[12]]]],[11,R[39],E,E,52,[[["self"]],[T]]],[11,R[13],E,E,52,[[["self"]],[T]]],[11,R[14],E,E,52,[[],[R[12]]]],[11,R[18],E,E,52,[[["self"]],[R[40]]]],[11,"from",R[5450],E,55,[[[T]],[T]]],[11,"into",E,E,55,[[],[U]]],[11,R[16],E,E,55,[[["self"]],[T]]],[11,R[17],E,E,55,[[[T],["self"]]]],[11,R[11],E,E,55,[[[U]],[R[12]]]],[11,R[39],E,E,55,[[["self"]],[T]]],[11,R[13],E,E,55,[[["self"]],[T]]],[11,R[14],E,E,55,[[],[R[12]]]],[11,R[18],E,E,55,[[["self"]],[R[40]]]],[11,"from",E,E,152,[[[T]],[T]]],[11,"into",E,E,152,[[],[U]]],[11,R[16],E,E,152,[[["self"]],[T]]],[11,R[17],E,E,152,[[[T],["self"]]]],[11,R[11],E,E,152,[[[U]],[R[12]]]],[11,R[39],E,E,152,[[["self"]],[T]]],[11,R[13],E,E,152,[[["self"]],[T]]],[11,R[14],E,E,152,[[],[R[12]]]],[11,R[18],E,E,152,[[["self"]],[R[40]]]],[11,"from",E,E,56,[[[T]],[T]]],[11,"into",E,E,56,[[],[U]]],[11,R[11],E,E,56,[[[U]],[R[12]]]],[11,R[39],E,E,56,[[["self"]],[T]]],[11,R[13],E,E,56,[[["self"]],[T]]],[11,R[14],E,E,56,[[],[R[12]]]],[11,R[18],E,E,56,[[["self"]],[R[40]]]],[11,"from",E,E,57,[[[T]],[T]]],[11,"into",E,E,57,[[],[U]]],[11,R[11],E,E,57,[[[U]],[R[12]]]],[11,R[39],E,E,57,[[["self"]],[T]]],[11,R[13],E,E,57,[[["self"]],[T]]],[11,R[14],E,E,57,[[],[R[12]]]],[11,R[18],E,E,57,[[["self"]],[R[40]]]],[11,"from",R[5451],E,58,[[[T]],[T]]],[11,"into",E,E,58,[[],[U]]],[11,R[16],E,E,58,[[["self"]],[T]]],[11,R[17],E,E,58,[[[T],["self"]]]],[11,R[11],E,E,58,[[[U]],[R[12]]]],[11,R[39],E,E,58,[[["self"]],[T]]],[11,R[13],E,E,58,[[["self"]],[T]]],[11,R[14],E,E,58,[[],[R[12]]]],[11,R[18],E,E,58,[[["self"]],[R[40]]]],[11,"from",E,E,153,[[[T]],[T]]],[11,"into",E,E,153,[[],[U]]],[11,R[16],E,E,153,[[["self"]],[T]]],[11,R[17],E,E,153,[[[T],["self"]]]],[11,R[11],E,E,153,[[[U]],[R[12]]]],[11,R[39],E,E,153,[[["self"]],[T]]],[11,R[13],E,E,153,[[["self"]],[T]]],[11,R[14],E,E,153,[[],[R[12]]]],[11,R[18],E,E,153,[[["self"]],[R[40]]]],[11,"from",E,E,59,[[[T]],[T]]],[11,"into",E,E,59,[[],[U]]],[11,R[11],E,E,59,[[[U]],[R[12]]]],[11,R[39],E,E,59,[[["self"]],[T]]],[11,R[13],E,E,59,[[["self"]],[T]]],[11,R[14],E,E,59,[[],[R[12]]]],[11,R[18],E,E,59,[[["self"]],[R[40]]]],[11,"from",E,E,60,[[[T]],[T]]],[11,"into",E,E,60,[[],[U]]],[11,R[11],E,E,60,[[[U]],[R[12]]]],[11,R[39],E,E,60,[[["self"]],[T]]],[11,R[13],E,E,60,[[["self"]],[T]]],[11,R[14],E,E,60,[[],[R[12]]]],[11,R[18],E,E,60,[[["self"]],[R[40]]]],[11,"from",R[5490],E,154,[[[T]],[T]]],[11,"into",E,E,154,[[],[U]]],[11,R[16],E,E,154,[[["self"]],[T]]],[11,R[17],E,E,154,[[[T],["self"]]]],[11,R[11],E,E,154,[[[U]],[R[12]]]],[11,R[39],E,E,154,[[["self"]],[T]]],[11,R[13],E,E,154,[[["self"]],[T]]],[11,R[14],E,E,154,[[],[R[12]]]],[11,R[18],E,E,154,[[["self"]],[R[40]]]],[11,"from",E,E,61,[[[T]],[T]]],[11,"into",E,E,61,[[],[U]]],[11,R[16],E,E,61,[[["self"]],[T]]],[11,R[17],E,E,61,[[[T],["self"]]]],[11,R[11],E,E,61,[[[U]],[R[12]]]],[11,R[39],E,E,61,[[["self"]],[T]]],[11,R[13],E,E,61,[[["self"]],[T]]],[11,R[14],E,E,61,[[],[R[12]]]],[11,R[18],E,E,61,[[["self"]],[R[40]]]],[11,"from",E,E,62,[[[T]],[T]]],[11,"into",E,E,62,[[],[U]]],[11,R[11],E,E,62,[[[U]],[R[12]]]],[11,R[39],E,E,62,[[["self"]],[T]]],[11,R[13],E,E,62,[[["self"]],[T]]],[11,R[14],E,E,62,[[],[R[12]]]],[11,R[18],E,E,62,[[["self"]],[R[40]]]],[11,"from",E,E,63,[[[T]],[T]]],[11,"into",E,E,63,[[],[U]]],[11,R[11],E,E,63,[[[U]],[R[12]]]],[11,R[39],E,E,63,[[["self"]],[T]]],[11,R[13],E,E,63,[[["self"]],[T]]],[11,R[14],E,E,63,[[],[R[12]]]],[11,R[18],E,E,63,[[["self"]],[R[40]]]],[11,"from",R[5491],E,155,[[[T]],[T]]],[11,"into",E,E,155,[[],[U]]],[11,R[16],E,E,155,[[["self"]],[T]]],[11,R[17],E,E,155,[[[T],["self"]]]],[11,R[11],E,E,155,[[[U]],[R[12]]]],[11,R[39],E,E,155,[[["self"]],[T]]],[11,R[13],E,E,155,[[["self"]],[T]]],[11,R[14],E,E,155,[[],[R[12]]]],[11,R[18],E,E,155,[[["self"]],[R[40]]]],[11,"from",E,E,64,[[[T]],[T]]],[11,"into",E,E,64,[[],[U]]],[11,R[16],E,E,64,[[["self"]],[T]]],[11,R[17],E,E,64,[[[T],["self"]]]],[11,R[11],E,E,64,[[[U]],[R[12]]]],[11,R[39],E,E,64,[[["self"]],[T]]],[11,R[13],E,E,64,[[["self"]],[T]]],[11,R[14],E,E,64,[[],[R[12]]]],[11,R[18],E,E,64,[[["self"]],[R[40]]]],[11,"from",E,E,65,[[[T]],[T]]],[11,"into",E,E,65,[[],[U]]],[11,R[11],E,E,65,[[[U]],[R[12]]]],[11,R[39],E,E,65,[[["self"]],[T]]],[11,R[13],E,E,65,[[["self"]],[T]]],[11,R[14],E,E,65,[[],[R[12]]]],[11,R[18],E,E,65,[[["self"]],[R[40]]]],[11,"from",E,E,66,[[[T]],[T]]],[11,"into",E,E,66,[[],[U]]],[11,R[11],E,E,66,[[[U]],[R[12]]]],[11,R[39],E,E,66,[[["self"]],[T]]],[11,R[13],E,E,66,[[["self"]],[T]]],[11,R[14],E,E,66,[[],[R[12]]]],[11,R[18],E,E,66,[[["self"]],[R[40]]]],[11,"from",R[5492],E,156,[[[T]],[T]]],[11,"into",E,E,156,[[],[U]]],[11,R[16],E,E,156,[[["self"]],[T]]],[11,R[17],E,E,156,[[[T],["self"]]]],[11,R[11],E,E,156,[[[U]],[R[12]]]],[11,R[39],E,E,156,[[["self"]],[T]]],[11,R[13],E,E,156,[[["self"]],[T]]],[11,R[14],E,E,156,[[],[R[12]]]],[11,R[18],E,E,156,[[["self"]],[R[40]]]],[11,"from",E,E,67,[[[T]],[T]]],[11,"into",E,E,67,[[],[U]]],[11,R[16],E,E,67,[[["self"]],[T]]],[11,R[17],E,E,67,[[[T],["self"]]]],[11,R[11],E,E,67,[[[U]],[R[12]]]],[11,R[39],E,E,67,[[["self"]],[T]]],[11,R[13],E,E,67,[[["self"]],[T]]],[11,R[14],E,E,67,[[],[R[12]]]],[11,R[18],E,E,67,[[["self"]],[R[40]]]],[11,"from",E,E,68,[[[T]],[T]]],[11,"into",E,E,68,[[],[U]]],[11,R[11],E,E,68,[[[U]],[R[12]]]],[11,R[39],E,E,68,[[["self"]],[T]]],[11,R[13],E,E,68,[[["self"]],[T]]],[11,R[14],E,E,68,[[],[R[12]]]],[11,R[18],E,E,68,[[["self"]],[R[40]]]],[11,"from",E,E,69,[[[T]],[T]]],[11,"into",E,E,69,[[],[U]]],[11,R[11],E,E,69,[[[U]],[R[12]]]],[11,R[39],E,E,69,[[["self"]],[T]]],[11,R[13],E,E,69,[[["self"]],[T]]],[11,R[14],E,E,69,[[],[R[12]]]],[11,R[18],E,E,69,[[["self"]],[R[40]]]],[11,"from",R[5493],E,157,[[[T]],[T]]],[11,"into",E,E,157,[[],[U]]],[11,R[16],E,E,157,[[["self"]],[T]]],[11,R[17],E,E,157,[[[T],["self"]]]],[11,R[11],E,E,157,[[[U]],[R[12]]]],[11,R[39],E,E,157,[[["self"]],[T]]],[11,R[13],E,E,157,[[["self"]],[T]]],[11,R[14],E,E,157,[[],[R[12]]]],[11,R[18],E,E,157,[[["self"]],[R[40]]]],[11,"from",E,E,70,[[[T]],[T]]],[11,"into",E,E,70,[[],[U]]],[11,R[16],E,E,70,[[["self"]],[T]]],[11,R[17],E,E,70,[[[T],["self"]]]],[11,R[11],E,E,70,[[[U]],[R[12]]]],[11,R[39],E,E,70,[[["self"]],[T]]],[11,R[13],E,E,70,[[["self"]],[T]]],[11,R[14],E,E,70,[[],[R[12]]]],[11,R[18],E,E,70,[[["self"]],[R[40]]]],[11,"from",E,E,71,[[[T]],[T]]],[11,"into",E,E,71,[[],[U]]],[11,R[11],E,E,71,[[[U]],[R[12]]]],[11,R[39],E,E,71,[[["self"]],[T]]],[11,R[13],E,E,71,[[["self"]],[T]]],[11,R[14],E,E,71,[[],[R[12]]]],[11,R[18],E,E,71,[[["self"]],[R[40]]]],[11,"from",E,E,72,[[[T]],[T]]],[11,"into",E,E,72,[[],[U]]],[11,R[11],E,E,72,[[[U]],[R[12]]]],[11,R[39],E,E,72,[[["self"]],[T]]],[11,R[13],E,E,72,[[["self"]],[T]]],[11,R[14],E,E,72,[[],[R[12]]]],[11,R[18],E,E,72,[[["self"]],[R[40]]]],[11,"from",R[5455],E,74,[[[T]],[T]]],[11,"into",E,E,74,[[],[U]]],[11,R[16],E,E,74,[[["self"]],[T]]],[11,R[17],E,E,74,[[[T],["self"]]]],[11,R[11],E,E,74,[[[U]],[R[12]]]],[11,R[39],E,E,74,[[["self"]],[T]]],[11,R[13],E,E,74,[[["self"]],[T]]],[11,R[14],E,E,74,[[],[R[12]]]],[11,R[18],E,E,74,[[["self"]],[R[40]]]],[11,"from",E,E,158,[[[T]],[T]]],[11,"into",E,E,158,[[],[U]]],[11,R[16],E,E,158,[[["self"]],[T]]],[11,R[17],E,E,158,[[[T],["self"]]]],[11,R[11],E,E,158,[[[U]],[R[12]]]],[11,R[39],E,E,158,[[["self"]],[T]]],[11,R[13],E,E,158,[[["self"]],[T]]],[11,R[14],E,E,158,[[],[R[12]]]],[11,R[18],E,E,158,[[["self"]],[R[40]]]],[11,"from",E,E,75,[[[T]],[T]]],[11,"into",E,E,75,[[],[U]]],[11,R[11],E,E,75,[[[U]],[R[12]]]],[11,R[39],E,E,75,[[["self"]],[T]]],[11,R[13],E,E,75,[[["self"]],[T]]],[11,R[14],E,E,75,[[],[R[12]]]],[11,R[18],E,E,75,[[["self"]],[R[40]]]],[11,"from",E,E,76,[[[T]],[T]]],[11,"into",E,E,76,[[],[U]]],[11,R[11],E,E,76,[[[U]],[R[12]]]],[11,R[39],E,E,76,[[["self"]],[T]]],[11,R[13],E,E,76,[[["self"]],[T]]],[11,R[14],E,E,76,[[],[R[12]]]],[11,R[18],E,E,76,[[["self"]],[R[40]]]],[11,"from",R[5463],E,159,[[[T]],[T]]],[11,"into",E,E,159,[[],[U]]],[11,R[16],E,E,159,[[["self"]],[T]]],[11,R[17],E,E,159,[[[T],["self"]]]],[11,R[11],E,E,159,[[[U]],[R[12]]]],[11,R[39],E,E,159,[[["self"]],[T]]],[11,R[13],E,E,159,[[["self"]],[T]]],[11,R[14],E,E,159,[[],[R[12]]]],[11,R[18],E,E,159,[[["self"]],[R[40]]]],[11,"from",E,E,80,[[[T]],[T]]],[11,"into",E,E,80,[[],[U]]],[11,R[16],E,E,80,[[["self"]],[T]]],[11,R[17],E,E,80,[[[T],["self"]]]],[11,R[11],E,E,80,[[[U]],[R[12]]]],[11,R[39],E,E,80,[[["self"]],[T]]],[11,R[13],E,E,80,[[["self"]],[T]]],[11,R[14],E,E,80,[[],[R[12]]]],[11,R[18],E,E,80,[[["self"]],[R[40]]]],[11,"from",E,E,81,[[[T]],[T]]],[11,"into",E,E,81,[[],[U]]],[11,R[11],E,E,81,[[[U]],[R[12]]]],[11,R[39],E,E,81,[[["self"]],[T]]],[11,R[13],E,E,81,[[["self"]],[T]]],[11,R[14],E,E,81,[[],[R[12]]]],[11,R[18],E,E,81,[[["self"]],[R[40]]]],[11,"from",E,E,82,[[[T]],[T]]],[11,"into",E,E,82,[[],[U]]],[11,R[11],E,E,82,[[[U]],[R[12]]]],[11,R[39],E,E,82,[[["self"]],[T]]],[11,R[13],E,E,82,[[["self"]],[T]]],[11,R[14],E,E,82,[[],[R[12]]]],[11,R[18],E,E,82,[[["self"]],[R[40]]]],[11,"from",R[5494],E,160,[[[T]],[T]]],[11,"into",E,E,160,[[],[U]]],[11,R[16],E,E,160,[[["self"]],[T]]],[11,R[17],E,E,160,[[[T],["self"]]]],[11,R[11],E,E,160,[[[U]],[R[12]]]],[11,R[39],E,E,160,[[["self"]],[T]]],[11,R[13],E,E,160,[[["self"]],[T]]],[11,R[14],E,E,160,[[],[R[12]]]],[11,R[18],E,E,160,[[["self"]],[R[40]]]],[11,"from",E,E,78,[[[T]],[T]]],[11,"into",E,E,78,[[],[U]]],[11,R[16],E,E,78,[[["self"]],[T]]],[11,R[17],E,E,78,[[[T],["self"]]]],[11,R[11],E,E,78,[[[U]],[R[12]]]],[11,R[39],E,E,78,[[["self"]],[T]]],[11,R[13],E,E,78,[[["self"]],[T]]],[11,R[14],E,E,78,[[],[R[12]]]],[11,R[18],E,E,78,[[["self"]],[R[40]]]],[11,"from",E,E,79,[[[T]],[T]]],[11,"into",E,E,79,[[],[U]]],[11,R[11],E,E,79,[[[U]],[R[12]]]],[11,R[39],E,E,79,[[["self"]],[T]]],[11,R[13],E,E,79,[[["self"]],[T]]],[11,R[14],E,E,79,[[],[R[12]]]],[11,R[18],E,E,79,[[["self"]],[R[40]]]],[11,"from",E,E,161,[[[T]],[T]]],[11,"into",E,E,161,[[],[U]]],[11,R[11],E,E,161,[[[U]],[R[12]]]],[11,R[39],E,E,161,[[["self"]],[T]]],[11,R[13],E,E,161,[[["self"]],[T]]],[11,R[14],E,E,161,[[],[R[12]]]],[11,R[18],E,E,161,[[["self"]],[R[40]]]],[11,"from",E,E,77,[[[T]],[T]]],[11,"into",E,E,77,[[],[U]]],[11,R[11],E,E,77,[[[U]],[R[12]]]],[11,R[39],E,E,77,[[["self"]],[T]]],[11,R[13],E,E,77,[[["self"]],[T]]],[11,R[14],E,E,77,[[],[R[12]]]],[11,R[18],E,E,77,[[["self"]],[R[40]]]],[11,"from",R[5495],E,162,[[[T]],[T]]],[11,"into",E,E,162,[[],[U]]],[11,R[16],E,E,162,[[["self"]],[T]]],[11,R[17],E,E,162,[[[T],["self"]]]],[11,R[11],E,E,162,[[[U]],[R[12]]]],[11,R[39],E,E,162,[[["self"]],[T]]],[11,R[13],E,E,162,[[["self"]],[T]]],[11,R[14],E,E,162,[[],[R[12]]]],[11,R[18],E,E,162,[[["self"]],[R[40]]]],[11,"from",E,E,83,[[[T]],[T]]],[11,"into",E,E,83,[[],[U]]],[11,R[16],E,E,83,[[["self"]],[T]]],[11,R[17],E,E,83,[[[T],["self"]]]],[11,R[11],E,E,83,[[[U]],[R[12]]]],[11,R[39],E,E,83,[[["self"]],[T]]],[11,R[13],E,E,83,[[["self"]],[T]]],[11,R[14],E,E,83,[[],[R[12]]]],[11,R[18],E,E,83,[[["self"]],[R[40]]]],[11,"from",E,E,84,[[[T]],[T]]],[11,"into",E,E,84,[[],[U]]],[11,R[11],E,E,84,[[[U]],[R[12]]]],[11,R[39],E,E,84,[[["self"]],[T]]],[11,R[13],E,E,84,[[["self"]],[T]]],[11,R[14],E,E,84,[[],[R[12]]]],[11,R[18],E,E,84,[[["self"]],[R[40]]]],[11,"from",E,E,163,[[[T]],[T]]],[11,"into",E,E,163,[[],[U]]],[11,R[11],E,E,163,[[[U]],[R[12]]]],[11,R[39],E,E,163,[[["self"]],[T]]],[11,R[13],E,E,163,[[["self"]],[T]]],[11,R[14],E,E,163,[[],[R[12]]]],[11,R[18],E,E,163,[[["self"]],[R[40]]]],[11,"from",R[5496],E,164,[[[T]],[T]]],[11,"into",E,E,164,[[],[U]]],[11,R[16],E,E,164,[[["self"]],[T]]],[11,R[17],E,E,164,[[[T],["self"]]]],[11,R[11],E,E,164,[[[U]],[R[12]]]],[11,R[39],E,E,164,[[["self"]],[T]]],[11,R[13],E,E,164,[[["self"]],[T]]],[11,R[14],E,E,164,[[],[R[12]]]],[11,R[18],E,E,164,[[["self"]],[R[40]]]],[11,"from",E,E,85,[[[T]],[T]]],[11,"into",E,E,85,[[],[U]]],[11,R[16],E,E,85,[[["self"]],[T]]],[11,R[17],E,E,85,[[[T],["self"]]]],[11,R[11],E,E,85,[[[U]],[R[12]]]],[11,R[39],E,E,85,[[["self"]],[T]]],[11,R[13],E,E,85,[[["self"]],[T]]],[11,R[14],E,E,85,[[],[R[12]]]],[11,R[18],E,E,85,[[["self"]],[R[40]]]],[11,"from",E,E,86,[[[T]],[T]]],[11,"into",E,E,86,[[],[U]]],[11,R[11],E,E,86,[[[U]],[R[12]]]],[11,R[39],E,E,86,[[["self"]],[T]]],[11,R[13],E,E,86,[[["self"]],[T]]],[11,R[14],E,E,86,[[],[R[12]]]],[11,R[18],E,E,86,[[["self"]],[R[40]]]],[11,"from",E,E,165,[[[T]],[T]]],[11,"into",E,E,165,[[],[U]]],[11,R[11],E,E,165,[[[U]],[R[12]]]],[11,R[39],E,E,165,[[["self"]],[T]]],[11,R[13],E,E,165,[[["self"]],[T]]],[11,R[14],E,E,165,[[],[R[12]]]],[11,R[18],E,E,165,[[["self"]],[R[40]]]],[11,"from",R[5497],E,166,[[[T]],[T]]],[11,"into",E,E,166,[[],[U]]],[11,R[16],E,E,166,[[["self"]],[T]]],[11,R[17],E,E,166,[[[T],["self"]]]],[11,R[11],E,E,166,[[[U]],[R[12]]]],[11,R[39],E,E,166,[[["self"]],[T]]],[11,R[13],E,E,166,[[["self"]],[T]]],[11,R[14],E,E,166,[[],[R[12]]]],[11,R[18],E,E,166,[[["self"]],[R[40]]]],[11,"from",E,E,87,[[[T]],[T]]],[11,"into",E,E,87,[[],[U]]],[11,R[16],E,E,87,[[["self"]],[T]]],[11,R[17],E,E,87,[[[T],["self"]]]],[11,R[11],E,E,87,[[[U]],[R[12]]]],[11,R[39],E,E,87,[[["self"]],[T]]],[11,R[13],E,E,87,[[["self"]],[T]]],[11,R[14],E,E,87,[[],[R[12]]]],[11,R[18],E,E,87,[[["self"]],[R[40]]]],[11,"from",E,E,88,[[[T]],[T]]],[11,"into",E,E,88,[[],[U]]],[11,R[11],E,E,88,[[[U]],[R[12]]]],[11,R[39],E,E,88,[[["self"]],[T]]],[11,R[13],E,E,88,[[["self"]],[T]]],[11,R[14],E,E,88,[[],[R[12]]]],[11,R[18],E,E,88,[[["self"]],[R[40]]]],[11,"from",E,E,167,[[[T]],[T]]],[11,"into",E,E,167,[[],[U]]],[11,R[11],E,E,167,[[[U]],[R[12]]]],[11,R[39],E,E,167,[[["self"]],[T]]],[11,R[13],E,E,167,[[["self"]],[T]]],[11,R[14],E,E,167,[[],[R[12]]]],[11,R[18],E,E,167,[[["self"]],[R[40]]]],[11,"from",R[5498],E,168,[[[T]],[T]]],[11,"into",E,E,168,[[],[U]]],[11,R[16],E,E,168,[[["self"]],[T]]],[11,R[17],E,E,168,[[[T],["self"]]]],[11,R[11],E,E,168,[[[U]],[R[12]]]],[11,R[39],E,E,168,[[["self"]],[T]]],[11,R[13],E,E,168,[[["self"]],[T]]],[11,R[14],E,E,168,[[],[R[12]]]],[11,R[18],E,E,168,[[["self"]],[R[40]]]],[11,"from",E,E,89,[[[T]],[T]]],[11,"into",E,E,89,[[],[U]]],[11,R[16],E,E,89,[[["self"]],[T]]],[11,R[17],E,E,89,[[[T],["self"]]]],[11,R[11],E,E,89,[[[U]],[R[12]]]],[11,R[39],E,E,89,[[["self"]],[T]]],[11,R[13],E,E,89,[[["self"]],[T]]],[11,R[14],E,E,89,[[],[R[12]]]],[11,R[18],E,E,89,[[["self"]],[R[40]]]],[11,"from",E,E,90,[[[T]],[T]]],[11,"into",E,E,90,[[],[U]]],[11,R[11],E,E,90,[[[U]],[R[12]]]],[11,R[39],E,E,90,[[["self"]],[T]]],[11,R[13],E,E,90,[[["self"]],[T]]],[11,R[14],E,E,90,[[],[R[12]]]],[11,R[18],E,E,90,[[["self"]],[R[40]]]],[11,"from",E,E,169,[[[T]],[T]]],[11,"into",E,E,169,[[],[U]]],[11,R[11],E,E,169,[[[U]],[R[12]]]],[11,R[39],E,E,169,[[["self"]],[T]]],[11,R[13],E,E,169,[[["self"]],[T]]],[11,R[14],E,E,169,[[],[R[12]]]],[11,R[18],E,E,169,[[["self"]],[R[40]]]],[11,"from",R[5466],E,92,[[[T]],[T]]],[11,"into",E,E,92,[[],[U]]],[11,R[16],E,E,92,[[["self"]],[T]]],[11,R[17],E,E,92,[[[T],["self"]]]],[11,R[11],E,E,92,[[[U]],[R[12]]]],[11,R[39],E,E,92,[[["self"]],[T]]],[11,R[13],E,E,92,[[["self"]],[T]]],[11,R[14],E,E,92,[[],[R[12]]]],[11,R[18],E,E,92,[[["self"]],[R[40]]]],[11,"from",E,E,170,[[[T]],[T]]],[11,"into",E,E,170,[[],[U]]],[11,R[16],E,E,170,[[["self"]],[T]]],[11,R[17],E,E,170,[[[T],["self"]]]],[11,R[11],E,E,170,[[[U]],[R[12]]]],[11,R[39],E,E,170,[[["self"]],[T]]],[11,R[13],E,E,170,[[["self"]],[T]]],[11,R[14],E,E,170,[[],[R[12]]]],[11,R[18],E,E,170,[[["self"]],[R[40]]]],[11,"from",E,E,93,[[[T]],[T]]],[11,"into",E,E,93,[[],[U]]],[11,R[11],E,E,93,[[[U]],[R[12]]]],[11,R[39],E,E,93,[[["self"]],[T]]],[11,R[13],E,E,93,[[["self"]],[T]]],[11,R[14],E,E,93,[[],[R[12]]]],[11,R[18],E,E,93,[[["self"]],[R[40]]]],[11,"from",E,E,94,[[[T]],[T]]],[11,"into",E,E,94,[[],[U]]],[11,R[11],E,E,94,[[[U]],[R[12]]]],[11,R[39],E,E,94,[[["self"]],[T]]],[11,R[13],E,E,94,[[["self"]],[T]]],[11,R[14],E,E,94,[[],[R[12]]]],[11,R[18],E,E,94,[[["self"]],[R[40]]]],[11,"from",R[5467],E,171,[[[T]],[T]]],[11,"into",E,E,171,[[],[U]]],[11,R[16],E,E,171,[[["self"]],[T]]],[11,R[17],E,E,171,[[[T],["self"]]]],[11,R[11],E,E,171,[[[U]],[R[12]]]],[11,R[39],E,E,171,[[["self"]],[T]]],[11,R[13],E,E,171,[[["self"]],[T]]],[11,R[14],E,E,171,[[],[R[12]]]],[11,R[18],E,E,171,[[["self"]],[R[40]]]],[11,"from",E,E,100,[[[T]],[T]]],[11,"into",E,E,100,[[],[U]]],[11,R[16],E,E,100,[[["self"]],[T]]],[11,R[17],E,E,100,[[[T],["self"]]]],[11,R[11],E,E,100,[[[U]],[R[12]]]],[11,R[39],E,E,100,[[["self"]],[T]]],[11,R[13],E,E,100,[[["self"]],[T]]],[11,R[14],E,E,100,[[],[R[12]]]],[11,R[18],E,E,100,[[["self"]],[R[40]]]],[11,"from",E,E,101,[[[T]],[T]]],[11,"into",E,E,101,[[],[U]]],[11,R[11],E,E,101,[[[U]],[R[12]]]],[11,R[39],E,E,101,[[["self"]],[T]]],[11,R[13],E,E,101,[[["self"]],[T]]],[11,R[14],E,E,101,[[],[R[12]]]],[11,R[18],E,E,101,[[["self"]],[R[40]]]],[11,"from",E,E,172,[[[T]],[T]]],[11,"into",E,E,172,[[],[U]]],[11,R[11],E,E,172,[[[U]],[R[12]]]],[11,R[39],E,E,172,[[["self"]],[T]]],[11,R[13],E,E,172,[[["self"]],[T]]],[11,R[14],E,E,172,[[],[R[12]]]],[11,R[18],E,E,172,[[["self"]],[R[40]]]],[11,"from",E,E,95,[[[T]],[T]]],[11,"into",E,E,95,[[],[U]]],[11,R[11],E,E,95,[[[U]],[R[12]]]],[11,R[39],E,E,95,[[["self"]],[T]]],[11,R[13],E,E,95,[[["self"]],[T]]],[11,R[14],E,E,95,[[],[R[12]]]],[11,R[18],E,E,95,[[["self"]],[R[40]]]],[11,"from",R[5499],E,173,[[[T]],[T]]],[11,"into",E,E,173,[[],[U]]],[11,R[16],E,E,173,[[["self"]],[T]]],[11,R[17],E,E,173,[[[T],["self"]]]],[11,R[11],E,E,173,[[[U]],[R[12]]]],[11,R[39],E,E,173,[[["self"]],[T]]],[11,R[13],E,E,173,[[["self"]],[T]]],[11,R[14],E,E,173,[[],[R[12]]]],[11,R[18],E,E,173,[[["self"]],[R[40]]]],[11,"from",E,E,96,[[[T]],[T]]],[11,"into",E,E,96,[[],[U]]],[11,R[16],E,E,96,[[["self"]],[T]]],[11,R[17],E,E,96,[[[T],["self"]]]],[11,R[11],E,E,96,[[[U]],[R[12]]]],[11,R[39],E,E,96,[[["self"]],[T]]],[11,R[13],E,E,96,[[["self"]],[T]]],[11,R[14],E,E,96,[[],[R[12]]]],[11,R[18],E,E,96,[[["self"]],[R[40]]]],[11,"from",E,E,97,[[[T]],[T]]],[11,"into",E,E,97,[[],[U]]],[11,R[11],E,E,97,[[[U]],[R[12]]]],[11,R[39],E,E,97,[[["self"]],[T]]],[11,R[13],E,E,97,[[["self"]],[T]]],[11,R[14],E,E,97,[[],[R[12]]]],[11,R[18],E,E,97,[[["self"]],[R[40]]]],[11,"from",E,E,174,[[[T]],[T]]],[11,"into",E,E,174,[[],[U]]],[11,R[11],E,E,174,[[[U]],[R[12]]]],[11,R[39],E,E,174,[[["self"]],[T]]],[11,R[13],E,E,174,[[["self"]],[T]]],[11,R[14],E,E,174,[[],[R[12]]]],[11,R[18],E,E,174,[[["self"]],[R[40]]]],[11,"from",R[5500],E,175,[[[T]],[T]]],[11,"into",E,E,175,[[],[U]]],[11,R[16],E,E,175,[[["self"]],[T]]],[11,R[17],E,E,175,[[[T],["self"]]]],[11,R[11],E,E,175,[[[U]],[R[12]]]],[11,R[39],E,E,175,[[["self"]],[T]]],[11,R[13],E,E,175,[[["self"]],[T]]],[11,R[14],E,E,175,[[],[R[12]]]],[11,R[18],E,E,175,[[["self"]],[R[40]]]],[11,"from",E,E,98,[[[T]],[T]]],[11,"into",E,E,98,[[],[U]]],[11,R[16],E,E,98,[[["self"]],[T]]],[11,R[17],E,E,98,[[[T],["self"]]]],[11,R[11],E,E,98,[[[U]],[R[12]]]],[11,R[39],E,E,98,[[["self"]],[T]]],[11,R[13],E,E,98,[[["self"]],[T]]],[11,R[14],E,E,98,[[],[R[12]]]],[11,R[18],E,E,98,[[["self"]],[R[40]]]],[11,"from",E,E,99,[[[T]],[T]]],[11,"into",E,E,99,[[],[U]]],[11,R[11],E,E,99,[[[U]],[R[12]]]],[11,R[39],E,E,99,[[["self"]],[T]]],[11,R[13],E,E,99,[[["self"]],[T]]],[11,R[14],E,E,99,[[],[R[12]]]],[11,R[18],E,E,99,[[["self"]],[R[40]]]],[11,"from",E,E,176,[[[T]],[T]]],[11,"into",E,E,176,[[],[U]]],[11,R[11],E,E,176,[[[U]],[R[12]]]],[11,R[39],E,E,176,[[["self"]],[T]]],[11,R[13],E,E,176,[[["self"]],[T]]],[11,R[14],E,E,176,[[],[R[12]]]],[11,R[18],E,E,176,[[["self"]],[R[40]]]],[11,"from",R[5469],E,102,[[[T]],[T]]],[11,"into",E,E,102,[[],[U]]],[11,R[16],E,E,102,[[["self"]],[T]]],[11,R[17],E,E,102,[[[T],["self"]]]],[11,R[11],E,E,102,[[[U]],[R[12]]]],[11,R[39],E,E,102,[[["self"]],[T]]],[11,R[13],E,E,102,[[["self"]],[T]]],[11,R[14],E,E,102,[[],[R[12]]]],[11,R[18],E,E,102,[[["self"]],[R[40]]]],[11,"from",E,E,177,[[[T]],[T]]],[11,"into",E,E,177,[[],[U]]],[11,R[16],E,E,177,[[["self"]],[T]]],[11,R[17],E,E,177,[[[T],["self"]]]],[11,R[11],E,E,177,[[[U]],[R[12]]]],[11,R[39],E,E,177,[[["self"]],[T]]],[11,R[13],E,E,177,[[["self"]],[T]]],[11,R[14],E,E,177,[[],[R[12]]]],[11,R[18],E,E,177,[[["self"]],[R[40]]]],[11,"from",E,E,103,[[[T]],[T]]],[11,"into",E,E,103,[[],[U]]],[11,R[11],E,E,103,[[[U]],[R[12]]]],[11,R[39],E,E,103,[[["self"]],[T]]],[11,R[13],E,E,103,[[["self"]],[T]]],[11,R[14],E,E,103,[[],[R[12]]]],[11,R[18],E,E,103,[[["self"]],[R[40]]]],[11,"from",E,E,104,[[[T]],[T]]],[11,"into",E,E,104,[[],[U]]],[11,R[11],E,E,104,[[[U]],[R[12]]]],[11,R[39],E,E,104,[[["self"]],[T]]],[11,R[13],E,E,104,[[["self"]],[T]]],[11,R[14],E,E,104,[[],[R[12]]]],[11,R[18],E,E,104,[[["self"]],[R[40]]]],[11,"from",R[5470],E,105,[[[T]],[T]]],[11,"into",E,E,105,[[],[U]]],[11,R[16],E,E,105,[[["self"]],[T]]],[11,R[17],E,E,105,[[[T],["self"]]]],[11,R[11],E,E,105,[[[U]],[R[12]]]],[11,R[39],E,E,105,[[["self"]],[T]]],[11,R[13],E,E,105,[[["self"]],[T]]],[11,R[14],E,E,105,[[],[R[12]]]],[11,R[18],E,E,105,[[["self"]],[R[40]]]],[11,"from",E,E,178,[[[T]],[T]]],[11,"into",E,E,178,[[],[U]]],[11,R[16],E,E,178,[[["self"]],[T]]],[11,R[17],E,E,178,[[[T],["self"]]]],[11,R[11],E,E,178,[[[U]],[R[12]]]],[11,R[39],E,E,178,[[["self"]],[T]]],[11,R[13],E,E,178,[[["self"]],[T]]],[11,R[14],E,E,178,[[],[R[12]]]],[11,R[18],E,E,178,[[["self"]],[R[40]]]],[11,"from",E,E,106,[[[T]],[T]]],[11,"into",E,E,106,[[],[U]]],[11,R[11],E,E,106,[[[U]],[R[12]]]],[11,R[39],E,E,106,[[["self"]],[T]]],[11,R[13],E,E,106,[[["self"]],[T]]],[11,R[14],E,E,106,[[],[R[12]]]],[11,R[18],E,E,106,[[["self"]],[R[40]]]],[11,"from",E,E,107,[[[T]],[T]]],[11,"into",E,E,107,[[],[U]]],[11,R[11],E,E,107,[[[U]],[R[12]]]],[11,R[39],E,E,107,[[["self"]],[T]]],[11,R[13],E,E,107,[[["self"]],[T]]],[11,R[14],E,E,107,[[],[R[12]]]],[11,R[18],E,E,107,[[["self"]],[R[40]]]],[11,"from",R[5501],E,179,[[[T]],[T]]],[11,"into",E,E,179,[[],[U]]],[11,R[16],E,E,179,[[["self"]],[T]]],[11,R[17],E,E,179,[[[T],["self"]]]],[11,R[11],E,E,179,[[[U]],[R[12]]]],[11,R[39],E,E,179,[[["self"]],[T]]],[11,R[13],E,E,179,[[["self"]],[T]]],[11,R[14],E,E,179,[[],[R[12]]]],[11,R[18],E,E,179,[[["self"]],[R[40]]]],[11,"from",E,E,108,[[[T]],[T]]],[11,"into",E,E,108,[[],[U]]],[11,R[16],E,E,108,[[["self"]],[T]]],[11,R[17],E,E,108,[[[T],["self"]]]],[11,R[11],E,E,108,[[[U]],[R[12]]]],[11,R[39],E,E,108,[[["self"]],[T]]],[11,R[13],E,E,108,[[["self"]],[T]]],[11,R[14],E,E,108,[[],[R[12]]]],[11,R[18],E,E,108,[[["self"]],[R[40]]]],[11,"from",E,E,109,[[[T]],[T]]],[11,"into",E,E,109,[[],[U]]],[11,R[11],E,E,109,[[[U]],[R[12]]]],[11,R[39],E,E,109,[[["self"]],[T]]],[11,R[13],E,E,109,[[["self"]],[T]]],[11,R[14],E,E,109,[[],[R[12]]]],[11,R[18],E,E,109,[[["self"]],[R[40]]]],[11,"from",E,E,180,[[[T]],[T]]],[11,"into",E,E,180,[[],[U]]],[11,R[11],E,E,180,[[[U]],[R[12]]]],[11,R[39],E,E,180,[[["self"]],[T]]],[11,R[13],E,E,180,[[["self"]],[T]]],[11,R[14],E,E,180,[[],[R[12]]]],[11,R[18],E,E,180,[[["self"]],[R[40]]]],[11,"from",R[5502],E,181,[[[T]],[T]]],[11,"into",E,E,181,[[],[U]]],[11,R[16],E,E,181,[[["self"]],[T]]],[11,R[17],E,E,181,[[[T],["self"]]]],[11,R[11],E,E,181,[[[U]],[R[12]]]],[11,R[39],E,E,181,[[["self"]],[T]]],[11,R[13],E,E,181,[[["self"]],[T]]],[11,R[14],E,E,181,[[],[R[12]]]],[11,R[18],E,E,181,[[["self"]],[R[40]]]],[11,"from",E,E,110,[[[T]],[T]]],[11,"into",E,E,110,[[],[U]]],[11,R[16],E,E,110,[[["self"]],[T]]],[11,R[17],E,E,110,[[[T],["self"]]]],[11,R[11],E,E,110,[[[U]],[R[12]]]],[11,R[39],E,E,110,[[["self"]],[T]]],[11,R[13],E,E,110,[[["self"]],[T]]],[11,R[14],E,E,110,[[],[R[12]]]],[11,R[18],E,E,110,[[["self"]],[R[40]]]],[11,"from",E,E,111,[[[T]],[T]]],[11,"into",E,E,111,[[],[U]]],[11,R[11],E,E,111,[[[U]],[R[12]]]],[11,R[39],E,E,111,[[["self"]],[T]]],[11,R[13],E,E,111,[[["self"]],[T]]],[11,R[14],E,E,111,[[],[R[12]]]],[11,R[18],E,E,111,[[["self"]],[R[40]]]],[11,"from",E,E,182,[[[T]],[T]]],[11,"into",E,E,182,[[],[U]]],[11,R[11],E,E,182,[[[U]],[R[12]]]],[11,R[39],E,E,182,[[["self"]],[T]]],[11,R[13],E,E,182,[[["self"]],[T]]],[11,R[14],E,E,182,[[],[R[12]]]],[11,R[18],E,E,182,[[["self"]],[R[40]]]],[11,"from",R[5503],E,183,[[[T]],[T]]],[11,"into",E,E,183,[[],[U]]],[11,R[16],E,E,183,[[["self"]],[T]]],[11,R[17],E,E,183,[[[T],["self"]]]],[11,R[11],E,E,183,[[[U]],[R[12]]]],[11,R[39],E,E,183,[[["self"]],[T]]],[11,R[13],E,E,183,[[["self"]],[T]]],[11,R[14],E,E,183,[[],[R[12]]]],[11,R[18],E,E,183,[[["self"]],[R[40]]]],[11,"from",E,E,113,[[[T]],[T]]],[11,"into",E,E,113,[[],[U]]],[11,R[16],E,E,113,[[["self"]],[T]]],[11,R[17],E,E,113,[[[T],["self"]]]],[11,R[11],E,E,113,[[[U]],[R[12]]]],[11,R[39],E,E,113,[[["self"]],[T]]],[11,R[13],E,E,113,[[["self"]],[T]]],[11,R[14],E,E,113,[[],[R[12]]]],[11,R[18],E,E,113,[[["self"]],[R[40]]]],[11,"from",E,E,114,[[[T]],[T]]],[11,"into",E,E,114,[[],[U]]],[11,R[11],E,E,114,[[[U]],[R[12]]]],[11,R[39],E,E,114,[[["self"]],[T]]],[11,R[13],E,E,114,[[["self"]],[T]]],[11,R[14],E,E,114,[[],[R[12]]]],[11,R[18],E,E,114,[[["self"]],[R[40]]]],[11,"from",E,E,184,[[[T]],[T]]],[11,"into",E,E,184,[[],[U]]],[11,R[11],E,E,184,[[[U]],[R[12]]]],[11,R[39],E,E,184,[[["self"]],[T]]],[11,R[13],E,E,184,[[["self"]],[T]]],[11,R[14],E,E,184,[[],[R[12]]]],[11,R[18],E,E,184,[[["self"]],[R[40]]]],[11,"from",E,E,112,[[[T]],[T]]],[11,"into",E,E,112,[[],[U]]],[11,R[11],E,E,112,[[[U]],[R[12]]]],[11,R[39],E,E,112,[[["self"]],[T]]],[11,R[13],E,E,112,[[["self"]],[T]]],[11,R[14],E,E,112,[[],[R[12]]]],[11,R[18],E,E,112,[[["self"]],[R[40]]]],[11,"from",R[5476],E,115,[[[T]],[T]]],[11,"into",E,E,115,[[],[U]]],[11,R[16],E,E,115,[[["self"]],[T]]],[11,R[17],E,E,115,[[[T],["self"]]]],[11,R[11],E,E,115,[[[U]],[R[12]]]],[11,R[39],E,E,115,[[["self"]],[T]]],[11,R[13],E,E,115,[[["self"]],[T]]],[11,R[14],E,E,115,[[],[R[12]]]],[11,R[18],E,E,115,[[["self"]],[R[40]]]],[11,"from",E,E,185,[[[T]],[T]]],[11,"into",E,E,185,[[],[U]]],[11,R[16],E,E,185,[[["self"]],[T]]],[11,R[17],E,E,185,[[[T],["self"]]]],[11,R[11],E,E,185,[[[U]],[R[12]]]],[11,R[39],E,E,185,[[["self"]],[T]]],[11,R[13],E,E,185,[[["self"]],[T]]],[11,R[14],E,E,185,[[],[R[12]]]],[11,R[18],E,E,185,[[["self"]],[R[40]]]],[11,"from",E,E,116,[[[T]],[T]]],[11,"into",E,E,116,[[],[U]]],[11,R[11],E,E,116,[[[U]],[R[12]]]],[11,R[39],E,E,116,[[["self"]],[T]]],[11,R[13],E,E,116,[[["self"]],[T]]],[11,R[14],E,E,116,[[],[R[12]]]],[11,R[18],E,E,116,[[["self"]],[R[40]]]],[11,"from",E,E,117,[[[T]],[T]]],[11,"into",E,E,117,[[],[U]]],[11,R[11],E,E,117,[[[U]],[R[12]]]],[11,R[39],E,E,117,[[["self"]],[T]]],[11,R[13],E,E,117,[[["self"]],[T]]],[11,R[14],E,E,117,[[],[R[12]]]],[11,R[18],E,E,117,[[["self"]],[R[40]]]],[11,"from",R[5504],E,186,[[[T]],[T]]],[11,"into",E,E,186,[[],[U]]],[11,R[16],E,E,186,[[["self"]],[T]]],[11,R[17],E,E,186,[[[T],["self"]]]],[11,R[11],E,E,186,[[[U]],[R[12]]]],[11,R[39],E,E,186,[[["self"]],[T]]],[11,R[13],E,E,186,[[["self"]],[T]]],[11,R[14],E,E,186,[[],[R[12]]]],[11,R[18],E,E,186,[[["self"]],[R[40]]]],[11,"from",E,E,118,[[[T]],[T]]],[11,"into",E,E,118,[[],[U]]],[11,R[16],E,E,118,[[["self"]],[T]]],[11,R[17],E,E,118,[[[T],["self"]]]],[11,R[11],E,E,118,[[[U]],[R[12]]]],[11,R[39],E,E,118,[[["self"]],[T]]],[11,R[13],E,E,118,[[["self"]],[T]]],[11,R[14],E,E,118,[[],[R[12]]]],[11,R[18],E,E,118,[[["self"]],[R[40]]]],[11,"from",E,E,119,[[[T]],[T]]],[11,"into",E,E,119,[[],[U]]],[11,R[11],E,E,119,[[[U]],[R[12]]]],[11,R[39],E,E,119,[[["self"]],[T]]],[11,R[13],E,E,119,[[["self"]],[T]]],[11,R[14],E,E,119,[[],[R[12]]]],[11,R[18],E,E,119,[[["self"]],[R[40]]]],[11,"from",E,E,187,[[[T]],[T]]],[11,"into",E,E,187,[[],[U]]],[11,R[11],E,E,187,[[[U]],[R[12]]]],[11,R[39],E,E,187,[[["self"]],[T]]],[11,R[13],E,E,187,[[["self"]],[T]]],[11,R[14],E,E,187,[[],[R[12]]]],[11,R[18],E,E,187,[[["self"]],[R[40]]]],[11,"from",R[5505],E,188,[[[T]],[T]]],[11,"into",E,E,188,[[],[U]]],[11,R[16],E,E,188,[[["self"]],[T]]],[11,R[17],E,E,188,[[[T],["self"]]]],[11,R[11],E,E,188,[[[U]],[R[12]]]],[11,R[39],E,E,188,[[["self"]],[T]]],[11,R[13],E,E,188,[[["self"]],[T]]],[11,R[14],E,E,188,[[],[R[12]]]],[11,R[18],E,E,188,[[["self"]],[R[40]]]],[11,"from",E,E,120,[[[T]],[T]]],[11,"into",E,E,120,[[],[U]]],[11,R[16],E,E,120,[[["self"]],[T]]],[11,R[17],E,E,120,[[[T],["self"]]]],[11,R[11],E,E,120,[[[U]],[R[12]]]],[11,R[39],E,E,120,[[["self"]],[T]]],[11,R[13],E,E,120,[[["self"]],[T]]],[11,R[14],E,E,120,[[],[R[12]]]],[11,R[18],E,E,120,[[["self"]],[R[40]]]],[11,"from",E,E,121,[[[T]],[T]]],[11,"into",E,E,121,[[],[U]]],[11,R[11],E,E,121,[[[U]],[R[12]]]],[11,R[39],E,E,121,[[["self"]],[T]]],[11,R[13],E,E,121,[[["self"]],[T]]],[11,R[14],E,E,121,[[],[R[12]]]],[11,R[18],E,E,121,[[["self"]],[R[40]]]],[11,"from",E,E,189,[[[T]],[T]]],[11,"into",E,E,189,[[],[U]]],[11,R[11],E,E,189,[[[U]],[R[12]]]],[11,R[39],E,E,189,[[["self"]],[T]]],[11,R[13],E,E,189,[[["self"]],[T]]],[11,R[14],E,E,189,[[],[R[12]]]],[11,R[18],E,E,189,[[["self"]],[R[40]]]],[11,"from",R[5506],E,190,[[[T]],[T]]],[11,"into",E,E,190,[[],[U]]],[11,R[16],E,E,190,[[["self"]],[T]]],[11,R[17],E,E,190,[[[T],["self"]]]],[11,R[11],E,E,190,[[[U]],[R[12]]]],[11,R[39],E,E,190,[[["self"]],[T]]],[11,R[13],E,E,190,[[["self"]],[T]]],[11,R[14],E,E,190,[[],[R[12]]]],[11,R[18],E,E,190,[[["self"]],[R[40]]]],[11,"from",E,E,122,[[[T]],[T]]],[11,"into",E,E,122,[[],[U]]],[11,R[16],E,E,122,[[["self"]],[T]]],[11,R[17],E,E,122,[[[T],["self"]]]],[11,R[11],E,E,122,[[[U]],[R[12]]]],[11,R[39],E,E,122,[[["self"]],[T]]],[11,R[13],E,E,122,[[["self"]],[T]]],[11,R[14],E,E,122,[[],[R[12]]]],[11,R[18],E,E,122,[[["self"]],[R[40]]]],[11,"from",E,E,123,[[[T]],[T]]],[11,"into",E,E,123,[[],[U]]],[11,R[11],E,E,123,[[[U]],[R[12]]]],[11,R[39],E,E,123,[[["self"]],[T]]],[11,R[13],E,E,123,[[["self"]],[T]]],[11,R[14],E,E,123,[[],[R[12]]]],[11,R[18],E,E,123,[[["self"]],[R[40]]]],[11,"from",E,E,191,[[[T]],[T]]],[11,"into",E,E,191,[[],[U]]],[11,R[11],E,E,191,[[[U]],[R[12]]]],[11,R[39],E,E,191,[[["self"]],[T]]],[11,R[13],E,E,191,[[["self"]],[T]]],[11,R[14],E,E,191,[[],[R[12]]]],[11,R[18],E,E,191,[[["self"]],[R[40]]]],[11,"from",R[5507],E,192,[[[T]],[T]]],[11,"into",E,E,192,[[],[U]]],[11,R[16],E,E,192,[[["self"]],[T]]],[11,R[17],E,E,192,[[[T],["self"]]]],[11,R[11],E,E,192,[[[U]],[R[12]]]],[11,R[39],E,E,192,[[["self"]],[T]]],[11,R[13],E,E,192,[[["self"]],[T]]],[11,R[14],E,E,192,[[],[R[12]]]],[11,R[18],E,E,192,[[["self"]],[R[40]]]],[11,"from",E,E,124,[[[T]],[T]]],[11,"into",E,E,124,[[],[U]]],[11,R[16],E,E,124,[[["self"]],[T]]],[11,R[17],E,E,124,[[[T],["self"]]]],[11,R[11],E,E,124,[[[U]],[R[12]]]],[11,R[39],E,E,124,[[["self"]],[T]]],[11,R[13],E,E,124,[[["self"]],[T]]],[11,R[14],E,E,124,[[],[R[12]]]],[11,R[18],E,E,124,[[["self"]],[R[40]]]],[11,"from",E,E,125,[[[T]],[T]]],[11,"into",E,E,125,[[],[U]]],[11,R[11],E,E,125,[[[U]],[R[12]]]],[11,R[39],E,E,125,[[["self"]],[T]]],[11,R[13],E,E,125,[[["self"]],[T]]],[11,R[14],E,E,125,[[],[R[12]]]],[11,R[18],E,E,125,[[["self"]],[R[40]]]],[11,"from",E,E,193,[[[T]],[T]]],[11,"into",E,E,193,[[],[U]]],[11,R[11],E,E,193,[[[U]],[R[12]]]],[11,R[39],E,E,193,[[["self"]],[T]]],[11,R[13],E,E,193,[[["self"]],[T]]],[11,R[14],E,E,193,[[],[R[12]]]],[11,R[18],E,E,193,[[["self"]],[R[40]]]],[11,R[5510],R[5479],E,9,[[["self"]],["string"]]],[11,R[5511],E,E,9,[[["str"],["self"]]]],[11,R[5508],E,E,9,[[["str"],["self"]]]],[11,R[5509],E,E,9,[[["char"],["self"],["bool"]]]],[11,"get_held",E,E,9,[[["self"]],[["char"],["vec",["char"]]]]],[11,"set_held",E,E,9,[[["str"],["self"]]]],[11,R[5510],R[5425],E,11,[[["self"]],["string"]]],[11,R[5511],E,E,11,[[["str"],["self"]]]],[11,R[5508],E,E,11,[[["str"],["self"]]]],[11,R[5509],E,E,11,[[["char"],["self"],["bool"]]]],[11,"get_held",E,E,11,[[["self"]],[["char"],["vec",["char"]]]]],[11,"set_held",E,E,11,[[["str"],["self"]]]],[11,"eq",R[5480],E,13,[[["self"],[R[5428]]],["bool"]]],[11,"eq",E,E,14,[[[R[5512]],["self"]],["bool"]]],[11,"eq",E,E,15,[[[R[5513]],["self"]],["bool"]]],[11,"eq",E,E,16,[[["self"],["hostosid"]],["bool"]]],[11,"eq",E,E,12,[[[R[5419]],["self"]],["bool"]]],[11,"ne",E,E,12,[[[R[5419]],["self"]],["bool"]]],[11,"eq",R[5430],E,17,[[[R[5471]],["self"]],["bool"]]],[11,"eq",E,E,18,[[["self"],[R[5433]]],["bool"]]],[11,"clone",R[5477],E,1,[[["self"]],["authlevel"]]],[11,"clone",E,E,0,[[["self"]],["endpoint"]]],[11,"clone",R[5416],E,3,[[["self"]],[R[5423]]]],[11,"clone",R[5480],E,13,[[["self"]],[R[5428]]]],[11,"clone",E,E,14,[[["self"]],[R[5512]]]],[11,"clone",E,E,15,[[["self"]],[R[5513]]]],[11,"clone",E,E,16,[[["self"]],["hostosid"]]],[11,"clone",E,E,12,[[["self"]],[R[5419]]]],[11,"clone",R[5430],E,17,[[["self"]],[R[5471]]]],[11,"clone",E,E,18,[[["self"]],[R[5433]]]],[11,"clone",R[5481],E,129,[[["self"]],["owned"]]],[11,"clone",E,E,19,[[["self"]],["reader"]]],[11,"clone",R[5432],E,131,[[["self"]],["owned"]]],[11,"clone",E,E,24,[[["self"]],["reader"]]],[11,"clone",R[5482],E,132,[[["self"]],["owned"]]],[11,"clone",E,E,22,[[["self"]],["reader"]]],[11,"clone",R[5438],E,134,[[["self"]],["owned"]]],[11,"clone",E,E,27,[[["self"]],["client"]]],[11,"clone",R[5483],E,135,[[["self"]],["owned"]]],[11,"clone",E,E,30,[[["self"]],["reader"]]],[11,"clone",R[5484],E,137,[[["self"]],["owned"]]],[11,"clone",E,E,32,[[["self"]],["reader"]]],[11,"clone",R[5485],E,139,[[["self"]],["owned"]]],[11,"clone",E,E,34,[[["self"]],["reader"]]],[11,"clone",R[5486],E,141,[[["self"]],["owned"]]],[11,"clone",E,E,36,[[["self"]],["reader"]]],[11,"clone",R[5441],E,143,[[["self"]],["owned"]]],[11,"clone",E,E,39,[[["self"]],["client"]]],[11,"clone",R[5487],E,144,[[["self"]],["owned"]]],[11,"clone",E,E,42,[[["self"]],["reader"]]],[11,"clone",R[5442],E,146,[[["self"]],["owned"]]],[11,"clone",E,E,44,[[["self"]],["client"]]],[11,"clone",R[5488],E,147,[[["self"]],["owned"]]],[11,"clone",E,E,47,[[["self"]],["reader"]]],[11,"clone",R[5447],E,149,[[["self"]],["owned"]]],[11,"clone",E,E,49,[[["self"]],["client"]]],[11,"clone",R[5489],E,150,[[["self"]],["owned"]]],[11,"clone",E,E,53,[[["self"]],["reader"]]],[11,"clone",R[5450],E,152,[[["self"]],["owned"]]],[11,"clone",E,E,55,[[["self"]],["client"]]],[11,"clone",R[5451],E,153,[[["self"]],["owned"]]],[11,"clone",E,E,58,[[["self"]],["client"]]],[11,"clone",R[5490],E,154,[[["self"]],["owned"]]],[11,"clone",E,E,61,[[["self"]],["reader"]]],[11,"clone",R[5491],E,155,[[["self"]],["owned"]]],[11,"clone",E,E,64,[[["self"]],["reader"]]],[11,"clone",R[5492],E,156,[[["self"]],["owned"]]],[11,"clone",E,E,67,[[["self"]],["reader"]]],[11,"clone",R[5493],E,157,[[["self"]],["owned"]]],[11,"clone",E,E,70,[[["self"]],["reader"]]],[11,"clone",R[5455],E,158,[[["self"]],["owned"]]],[11,"clone",E,E,74,[[["self"]],["client"]]],[11,"clone",R[5463],E,159,[[["self"]],["owned"]]],[11,"clone",E,E,80,[[["self"]],["reader"]]],[11,"clone",R[5494],E,160,[[["self"]],["owned"]]],[11,"clone",E,E,78,[[["self"]],["reader"]]],[11,"clone",R[5495],E,162,[[["self"]],["owned"]]],[11,"clone",E,E,83,[[["self"]],["reader"]]],[11,"clone",R[5496],E,164,[[["self"]],["owned"]]],[11,"clone",E,E,85,[[["self"]],["reader"]]],[11,"clone",R[5497],E,166,[[["self"]],["owned"]]],[11,"clone",E,E,87,[[["self"]],["reader"]]],[11,"clone",R[5498],E,168,[[["self"]],["owned"]]],[11,"clone",E,E,89,[[["self"]],["reader"]]],[11,"clone",R[5466],E,170,[[["self"]],["owned"]]],[11,"clone",E,E,92,[[["self"]],["client"]]],[11,"clone",R[5467],E,171,[[["self"]],["owned"]]],[11,"clone",E,E,100,[[["self"]],["reader"]]],[11,"clone",R[5499],E,173,[[["self"]],["owned"]]],[11,"clone",E,E,96,[[["self"]],["reader"]]],[11,"clone",R[5500],E,175,[[["self"]],["owned"]]],[11,"clone",E,E,98,[[["self"]],["reader"]]],[11,"clone",R[5469],E,177,[[["self"]],["owned"]]],[11,"clone",E,E,102,[[["self"]],["client"]]],[11,"clone",R[5470],E,178,[[["self"]],["owned"]]],[11,"clone",E,E,105,[[["self"]],["client"]]],[11,"clone",R[5501],E,179,[[["self"]],["owned"]]],[11,"clone",E,E,108,[[["self"]],["reader"]]],[11,"clone",R[5502],E,181,[[["self"]],["owned"]]],[11,"clone",E,E,110,[[["self"]],["reader"]]],[11,"clone",R[5503],E,183,[[["self"]],["owned"]]],[11,"clone",E,E,113,[[["self"]],["reader"]]],[11,"clone",R[5476],E,185,[[["self"]],["owned"]]],[11,"clone",E,E,115,[[["self"]],["client"]]],[11,"clone",R[5504],E,186,[[["self"]],["owned"]]],[11,"clone",E,E,118,[[["self"]],["reader"]]],[11,"clone",R[5505],E,188,[[["self"]],["owned"]]],[11,"clone",E,E,120,[[["self"]],["reader"]]],[11,"clone",R[5506],E,190,[[["self"]],["owned"]]],[11,"clone",E,E,122,[[["self"]],["reader"]]],[11,"clone",R[5507],E,192,[[["self"]],["owned"]]],[11,"clone",E,E,124,[[["self"]],["reader"]]],[11,"drop",R[5479],E,9,[[["self"]]]],[11,R[79],E,E,9,[[],["self"]]],[11,R[79],R[5425],E,11,[[],["stuboutput"]]],[11,R[79],R[5480],E,12,[[],["self"]]],[11,"fmt",R[5430],E,18,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[5477],E,0,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[5416],E,3,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[5480],E,13,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,14,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,15,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,16,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,12,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,128,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[5430],E,18,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[5480],"Display formatter for HIDIOPacketType",13,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,"Display formatter for HIDIOPacketBuffer",12,[[["self"],[R[29]]],[R[12]]]],[11,"deref","hid_io",E,127,[[["self"]],["arc"]]],[11,"read",R[5478],E,5,[[["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,"write",E,E,5,[[["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,"flush",E,E,5,[[["self"]],[R[12]]]],[11,R[2196],R[5481],E,19,[[[R[2149]],["reader"],["bool"]],[R[12]]]],[11,R[2196],R[5432],E,24,[[[R[2149]],["reader"],["bool"]],[R[12]]]],[11,R[2196],R[5482],E,22,[[[R[2149]],["bool"],["reader"]],[R[12]]]],[11,R[2196],R[5438],E,27,[[[R[2149]],["bool"],["client"]],[R[12]]]],[11,R[2196],R[5483],E,30,[[["reader"],[R[2149]],["bool"]],[R[12]]]],[11,R[2196],R[5484],E,32,[[[R[2149]],["reader"],["bool"]],[R[12]]]],[11,R[2196],R[5485],E,34,[[["reader"],[R[2149]],["bool"]],[R[12]]]],[11,R[2196],R[5486],E,36,[[[R[2149]],["bool"],["reader"]],[R[12]]]],[11,R[2196],R[5441],E,39,[[["client"],[R[2149]],["bool"]],[R[12]]]],[11,R[2196],R[5487],E,42,[[[R[2149]],["reader"],["bool"]],[R[12]]]],[11,R[2196],R[5442],E,44,[[["client"],[R[2149]],["bool"]],[R[12]]]],[11,R[2196],R[5488],E,47,[[["reader"],[R[2149]],["bool"]],[R[12]]]],[11,R[2196],R[5447],E,49,[[["client"],[R[2149]],["bool"]],[R[12]]]],[11,R[2196],R[5489],E,53,[[["reader"],[R[2149]],["bool"]],[R[12]]]],[11,R[2196],R[5450],E,55,[[[R[2149]],["client"],["bool"]],[R[12]]]],[11,R[2196],R[5451],E,58,[[[R[2149]],["bool"],["client"]],[R[12]]]],[11,R[2196],R[5490],E,61,[[[R[2149]],["reader"],["bool"]],[R[12]]]],[11,R[2196],R[5491],E,64,[[[R[2149]],["reader"],["bool"]],[R[12]]]],[11,R[2196],R[5492],E,67,[[[R[2149]],["reader"],["bool"]],[R[12]]]],[11,R[2196],R[5493],E,70,[[[R[2149]],["bool"],["reader"]],[R[12]]]],[11,R[2196],R[5455],E,74,[[["client"],[R[2149]],["bool"]],[R[12]]]],[11,R[2196],R[5463],E,80,[[[R[2149]],["reader"],["bool"]],[R[12]]]],[11,R[2196],R[5494],E,78,[[[R[2149]],["reader"],["bool"]],[R[12]]]],[11,R[2196],R[5495],E,83,[[[R[2149]],["reader"],["bool"]],[R[12]]]],[11,R[2196],R[5496],E,85,[[["reader"],[R[2149]],["bool"]],[R[12]]]],[11,R[2196],R[5497],E,87,[[[R[2149]],["bool"],["reader"]],[R[12]]]],[11,R[2196],R[5498],E,89,[[[R[2149]],["bool"],["reader"]],[R[12]]]],[11,R[2196],R[5466],E,92,[[["client"],[R[2149]],["bool"]],[R[12]]]],[11,R[2196],R[5467],E,100,[[[R[2149]],["reader"],["bool"]],[R[12]]]],[11,R[2196],R[5499],E,96,[[[R[2149]],["reader"],["bool"]],[R[12]]]],[11,R[2196],R[5500],E,98,[[[R[2149]],["reader"],["bool"]],[R[12]]]],[11,R[2196],R[5469],E,102,[[[R[2149]],["bool"],["client"]],[R[12]]]],[11,R[2196],R[5470],E,105,[[["client"],[R[2149]],["bool"]],[R[12]]]],[11,R[2196],R[5501],E,108,[[["reader"],[R[2149]],["bool"]],[R[12]]]],[11,R[2196],R[5502],E,110,[[[R[2149]],["reader"],["bool"]],[R[12]]]],[11,R[2196],R[5503],E,113,[[[R[2149]],["reader"],["bool"]],[R[12]]]],[11,R[2196],R[5476],E,115,[[["client"],[R[2149]],["bool"]],[R[12]]]],[11,R[2196],R[5504],E,118,[[[R[2149]],["bool"],["reader"]],[R[12]]]],[11,R[2196],R[5505],E,120,[[[R[2149]],["bool"],["reader"]],[R[12]]]],[11,R[2196],R[5506],E,122,[[[R[2149]],["bool"],["reader"]],[R[12]]]],[11,R[2196],R[5507],E,124,[[[R[2149]],["reader"],["bool"]],[R[12]]]],[11,R[2195],R[5481],E,20,[[["u32"],[R[2149]]],["builder"]]],[11,R[2168],E,E,20,[[[R[2149]]],[["builder"],[R[12],["builder"]]]]],[11,R[2195],R[5432],E,25,[[["u32"],[R[2149]]],["builder"]]],[11,R[2168],E,E,25,[[[R[2149]]],[["builder"],[R[12],["builder"]]]]],[11,R[2195],R[5482],E,23,[[["u32"],[R[2149]]],["builder"]]],[11,R[2168],E,E,23,[[[R[2149]]],[[R[12],["builder"]],["builder"]]]],[11,R[2195],R[5438],E,27,[[["u32"],[R[2149]]],["client"]]],[11,R[2168],E,E,27,[[[R[2149]]],[["client"],[R[12],["client"]]]]],[11,R[2195],R[5483],E,31,[[["u32"],[R[2149]]],["builder"]]],[11,R[2168],E,E,31,[[[R[2149]]],[[R[12],["builder"]],["builder"]]]],[11,R[2195],R[5484],E,33,[[["u32"],[R[2149]]],["builder"]]],[11,R[2168],E,E,33,[[[R[2149]]],[["builder"],[R[12],["builder"]]]]],[11,R[2195],R[5485],E,35,[[["u32"],[R[2149]]],["builder"]]],[11,R[2168],E,E,35,[[[R[2149]]],[["builder"],[R[12],["builder"]]]]],[11,R[2195],R[5486],E,37,[[["u32"],[R[2149]]],["builder"]]],[11,R[2168],E,E,37,[[[R[2149]]],[[R[12],["builder"]],["builder"]]]],[11,R[2195],R[5441],E,39,[[["u32"],[R[2149]]],["client"]]],[11,R[2168],E,E,39,[[[R[2149]]],[[R[12],["client"]],["client"]]]],[11,R[2195],R[5487],E,43,[[["u32"],[R[2149]]],["builder"]]],[11,R[2168],E,E,43,[[[R[2149]]],[[R[12],["builder"]],["builder"]]]],[11,R[2195],R[5442],E,44,[[["u32"],[R[2149]]],["client"]]],[11,R[2168],E,E,44,[[[R[2149]]],[[R[12],["client"]],["client"]]]],[11,R[2195],R[5488],E,48,[[["u32"],[R[2149]]],["builder"]]],[11,R[2168],E,E,48,[[[R[2149]]],[["builder"],[R[12],["builder"]]]]],[11,R[2195],R[5447],E,49,[[["u32"],[R[2149]]],["client"]]],[11,R[2168],E,E,49,[[[R[2149]]],[[R[12],["client"]],["client"]]]],[11,R[2195],R[5489],E,54,[[["u32"],[R[2149]]],["builder"]]],[11,R[2168],E,E,54,[[[R[2149]]],[["builder"],[R[12],["builder"]]]]],[11,R[2195],R[5450],E,55,[[["u32"],[R[2149]]],["client"]]],[11,R[2168],E,E,55,[[[R[2149]]],[[R[12],["client"]],["client"]]]],[11,R[2195],R[5451],E,58,[[["u32"],[R[2149]]],["client"]]],[11,R[2168],E,E,58,[[[R[2149]]],[[R[12],["client"]],["client"]]]],[11,R[2195],R[5490],E,62,[[["u32"],[R[2149]]],["builder"]]],[11,R[2168],E,E,62,[[[R[2149]]],[[R[12],["builder"]],["builder"]]]],[11,R[2195],R[5491],E,65,[[["u32"],[R[2149]]],["builder"]]],[11,R[2168],E,E,65,[[[R[2149]]],[["builder"],[R[12],["builder"]]]]],[11,R[2195],R[5492],E,68,[[["u32"],[R[2149]]],["builder"]]],[11,R[2168],E,E,68,[[[R[2149]]],[[R[12],["builder"]],["builder"]]]],[11,R[2195],R[5493],E,71,[[["u32"],[R[2149]]],["builder"]]],[11,R[2168],E,E,71,[[[R[2149]]],[[R[12],["builder"]],["builder"]]]],[11,R[2195],R[5455],E,74,[[["u32"],[R[2149]]],["client"]]],[11,R[2168],E,E,74,[[[R[2149]]],[["client"],[R[12],["client"]]]]],[11,R[2195],R[5463],E,81,[[["u32"],[R[2149]]],["builder"]]],[11,R[2168],E,E,81,[[[R[2149]]],[[R[12],["builder"]],["builder"]]]],[11,R[2195],R[5494],E,79,[[["u32"],[R[2149]]],["builder"]]],[11,R[2168],E,E,79,[[[R[2149]]],[["builder"],[R[12],["builder"]]]]],[11,R[2195],R[5495],E,84,[[["u32"],[R[2149]]],["builder"]]],[11,R[2168],E,E,84,[[[R[2149]]],[[R[12],["builder"]],["builder"]]]],[11,R[2195],R[5496],E,86,[[["u32"],[R[2149]]],["builder"]]],[11,R[2168],E,E,86,[[[R[2149]]],[[R[12],["builder"]],["builder"]]]],[11,R[2195],R[5497],E,88,[[["u32"],[R[2149]]],["builder"]]],[11,R[2168],E,E,88,[[[R[2149]]],[["builder"],[R[12],["builder"]]]]],[11,R[2195],R[5498],E,90,[[["u32"],[R[2149]]],["builder"]]],[11,R[2168],E,E,90,[[[R[2149]]],[["builder"],[R[12],["builder"]]]]],[11,R[2195],R[5466],E,92,[[["u32"],[R[2149]]],["client"]]],[11,R[2168],E,E,92,[[[R[2149]]],[["client"],[R[12],["client"]]]]],[11,R[2195],R[5467],E,101,[[["u32"],[R[2149]]],["builder"]]],[11,R[2168],E,E,101,[[[R[2149]]],[["builder"],[R[12],["builder"]]]]],[11,R[2195],R[5499],E,97,[[["u32"],[R[2149]]],["builder"]]],[11,R[2168],E,E,97,[[[R[2149]]],[[R[12],["builder"]],["builder"]]]],[11,R[2195],R[5500],E,99,[[["u32"],[R[2149]]],["builder"]]],[11,R[2168],E,E,99,[[[R[2149]]],[[R[12],["builder"]],["builder"]]]],[11,R[2195],R[5469],E,102,[[["u32"],[R[2149]]],["client"]]],[11,R[2168],E,E,102,[[[R[2149]]],[["client"],[R[12],["client"]]]]],[11,R[2195],R[5470],E,105,[[["u32"],[R[2149]]],["client"]]],[11,R[2168],E,E,105,[[[R[2149]]],[[R[12],["client"]],["client"]]]],[11,R[2195],R[5501],E,109,[[["u32"],[R[2149]]],["builder"]]],[11,R[2168],E,E,109,[[[R[2149]]],[["builder"],[R[12],["builder"]]]]],[11,R[2195],R[5502],E,111,[[["u32"],[R[2149]]],["builder"]]],[11,R[2168],E,E,111,[[[R[2149]]],[[R[12],["builder"]],["builder"]]]],[11,R[2195],R[5503],E,114,[[["u32"],[R[2149]]],["builder"]]],[11,R[2168],E,E,114,[[[R[2149]]],[["builder"],[R[12],["builder"]]]]],[11,R[2195],R[5476],E,115,[[["u32"],[R[2149]]],["client"]]],[11,R[2168],E,E,115,[[[R[2149]]],[["client"],[R[12],["client"]]]]],[11,R[2195],R[5504],E,119,[[["u32"],[R[2149]]],["builder"]]],[11,R[2168],E,E,119,[[[R[2149]]],[["builder"],[R[12],["builder"]]]]],[11,R[2195],R[5505],E,121,[[["u32"],[R[2149]]],["builder"]]],[11,R[2168],E,E,121,[[[R[2149]]],[["builder"],[R[12],["builder"]]]]],[11,R[2195],R[5506],E,123,[[["u32"],[R[2149]]],["builder"]]],[11,R[2168],E,E,123,[[[R[2149]]],[["builder"],[R[12],["builder"]]]]],[11,R[2195],R[5507],E,125,[[["u32"],[R[2149]]],["builder"]]],[11,R[2168],E,E,125,[[[R[2149]]],[["builder"],[R[12],["builder"]]]]],[11,"new",R[5438],E,27,[[["box",[R[2102]]],[R[2102]]],["client"]]],[11,"new",R[5441],E,39,[[["box",[R[2102]]],[R[2102]]],["client"]]],[11,"new",R[5442],E,44,[[["box",[R[2102]]],[R[2102]]],["client"]]],[11,"new",R[5447],E,49,[[["box",[R[2102]]],[R[2102]]],["client"]]],[11,"new",R[5450],E,55,[[["box",[R[2102]]],[R[2102]]],["client"]]],[11,"new",R[5451],E,58,[[["box",[R[2102]]],[R[2102]]],["client"]]],[11,"new",R[5455],E,74,[[["box",[R[2102]]],[R[2102]]],["client"]]],[11,"new",R[5466],E,92,[[["box",[R[2102]]],[R[2102]]],["client"]]],[11,"new",R[5469],E,102,[[["box",[R[2102]]],[R[2102]]],["client"]]],[11,"new",R[5470],E,105,[[["box",[R[2102]]],[R[2102]]],["client"]]],[11,"new",R[5476],E,115,[[["box",[R[2102]]],[R[2102]]],["client"]]],[11,R[2168],R[5481],E,19,[[[R[2144]]],[["reader"],[R[12],["reader"]]]]],[11,R[2168],R[5432],E,24,[[[R[2144]]],[[R[12],["reader"]],["reader"]]]],[11,R[2168],R[5482],E,22,[[[R[2144]]],[[R[12],["reader"]],["reader"]]]],[11,R[2168],R[5438],E,27,[[[R[2144]]],[["client"],[R[12],["client"]]]]],[11,R[2168],R[5483],E,30,[[[R[2144]]],[["reader"],[R[12],["reader"]]]]],[11,R[2168],R[5484],E,32,[[[R[2144]]],[["reader"],[R[12],["reader"]]]]],[11,R[2168],R[5485],E,34,[[[R[2144]]],[["reader"],[R[12],["reader"]]]]],[11,R[2168],R[5486],E,36,[[[R[2144]]],[[R[12],["reader"]],["reader"]]]],[11,R[2168],R[5441],E,39,[[[R[2144]]],[[R[12],["client"]],["client"]]]],[11,R[2168],R[5487],E,42,[[[R[2144]]],[["reader"],[R[12],["reader"]]]]],[11,R[2168],R[5442],E,44,[[[R[2144]]],[[R[12],["client"]],["client"]]]],[11,R[2168],R[5488],E,47,[[[R[2144]]],[["reader"],[R[12],["reader"]]]]],[11,R[2168],R[5447],E,49,[[[R[2144]]],[[R[12],["client"]],["client"]]]],[11,R[2168],R[5489],E,53,[[[R[2144]]],[["reader"],[R[12],["reader"]]]]],[11,R[2168],R[5450],E,55,[[[R[2144]]],[[R[12],["client"]],["client"]]]],[11,R[2168],R[5451],E,58,[[[R[2144]]],[[R[12],["client"]],["client"]]]],[11,R[2168],R[5490],E,61,[[[R[2144]]],[[R[12],["reader"]],["reader"]]]],[11,R[2168],R[5491],E,64,[[[R[2144]]],[["reader"],[R[12],["reader"]]]]],[11,R[2168],R[5492],E,67,[[[R[2144]]],[[R[12],["reader"]],["reader"]]]],[11,R[2168],R[5493],E,70,[[[R[2144]]],[[R[12],["reader"]],["reader"]]]],[11,R[2168],R[5455],E,74,[[[R[2144]]],[["client"],[R[12],["client"]]]]],[11,R[2168],R[5463],E,80,[[[R[2144]]],[[R[12],["reader"]],["reader"]]]],[11,R[2168],R[5494],E,78,[[[R[2144]]],[[R[12],["reader"]],["reader"]]]],[11,R[2168],R[5495],E,83,[[[R[2144]]],[["reader"],[R[12],["reader"]]]]],[11,R[2168],R[5496],E,85,[[[R[2144]]],[["reader"],[R[12],["reader"]]]]],[11,R[2168],R[5497],E,87,[[[R[2144]]],[["reader"],[R[12],["reader"]]]]],[11,R[2168],R[5498],E,89,[[[R[2144]]],[["reader"],[R[12],["reader"]]]]],[11,R[2168],R[5466],E,92,[[[R[2144]]],[["client"],[R[12],["client"]]]]],[11,R[2168],R[5467],E,100,[[[R[2144]]],[[R[12],["reader"]],["reader"]]]],[11,R[2168],R[5499],E,96,[[[R[2144]]],[["reader"],[R[12],["reader"]]]]],[11,R[2168],R[5500],E,98,[[[R[2144]]],[[R[12],["reader"]],["reader"]]]],[11,R[2168],R[5469],E,102,[[[R[2144]]],[["client"],[R[12],["client"]]]]],[11,R[2168],R[5470],E,105,[[[R[2144]]],[[R[12],["client"]],["client"]]]],[11,R[2168],R[5501],E,108,[[[R[2144]]],[["reader"],[R[12],["reader"]]]]],[11,R[2168],R[5502],E,110,[[[R[2144]]],[["reader"],[R[12],["reader"]]]]],[11,R[2168],R[5503],E,113,[[[R[2144]]],[["reader"],[R[12],["reader"]]]]],[11,R[2168],R[5476],E,115,[[[R[2144]]],[["client"],[R[12],["client"]]]]],[11,R[2168],R[5504],E,118,[[[R[2144]]],[[R[12],["reader"]],["reader"]]]],[11,R[2168],R[5505],E,120,[[[R[2144]]],[[R[12],["reader"]],["reader"]]]],[11,R[2168],R[5506],E,122,[[[R[2144]]],[[R[12],["reader"]],["reader"]]]],[11,R[2168],R[5507],E,124,[[[R[2144]]],[[R[12],["reader"]],["reader"]]]],[11,"new",R[5481],E,130,[[[R[2188]]],[R[2188]]]],[11,"new",R[5432],E,26,[[[R[2188]]],[R[2188]]]],[11,"new",R[5482],E,133,[[[R[2188]]],[R[2188]]]],[11,"new",R[5483],E,136,[[[R[2188]]],[R[2188]]]],[11,"new",R[5484],E,138,[[[R[2188]]],[R[2188]]]],[11,"new",R[5485],E,140,[[[R[2188]]],[R[2188]]]],[11,"new",R[5486],E,142,[[[R[2188]]],[R[2188]]]],[11,"new",R[5487],E,145,[[[R[2188]]],[R[2188]]]],[11,"new",R[5488],E,148,[[[R[2188]]],[R[2188]]]],[11,"new",R[5489],E,151,[[[R[2188]]],[R[2188]]]],[11,"new",R[5490],E,63,[[[R[2188]]],[R[2188]]]],[11,"new",R[5491],E,66,[[[R[2188]]],[R[2188]]]],[11,"new",R[5492],E,69,[[[R[2188]]],[R[2188]]]],[11,"new",R[5493],E,72,[[[R[2188]]],[R[2188]]]],[11,"new",R[5463],E,82,[[[R[2188]]],[R[2188]]]],[11,"new",R[5494],E,161,[[[R[2188]]],[R[2188]]]],[11,"new",R[5495],E,163,[[[R[2188]]],[R[2188]]]],[11,"new",R[5496],E,165,[[[R[2188]]],[R[2188]]]],[11,"new",R[5497],E,167,[[[R[2188]]],[R[2188]]]],[11,"new",R[5498],E,169,[[[R[2188]]],[R[2188]]]],[11,"new",R[5467],E,172,[[[R[2188]]],[R[2188]]]],[11,"new",R[5499],E,174,[[[R[2188]]],[R[2188]]]],[11,"new",R[5500],E,176,[[[R[2188]]],[R[2188]]]],[11,"new",R[5501],E,180,[[[R[2188]]],[R[2188]]]],[11,"new",R[5502],E,182,[[[R[2188]]],[R[2188]]]],[11,"new",R[5503],E,184,[[[R[2188]]],[R[2188]]]],[11,"new",R[5504],E,187,[[[R[2188]]],[R[2188]]]],[11,"new",R[5505],E,189,[[[R[2188]]],[R[2188]]]],[11,"new",R[5506],E,191,[[[R[2188]]],[R[2188]]]],[11,"new",R[5507],E,193,[[[R[2188]]],[R[2188]]]],[11,R[5514],R[5438],E,29,[[["self"],["owned"],["u16"],["u64"],["results",["owned"]],["params",["owned"]]],[["promise",["error"]],["error"]]]],[11,R[5514],R[5441],E,41,[[["self"],["owned"],["u16"],["u64"],["results",["owned"]],["params",["owned"]]],[["promise",["error"]],["error"]]]],[11,R[5514],R[5442],E,46,[[["self"],["owned"],["u16"],["u64"],["results",["owned"]],["params",["owned"]]],[["promise",["error"]],["error"]]]],[11,R[5514],R[5447],E,51,[[["self"],["owned"],["u16"],["u64"],["results",["owned"]],["params",["owned"]]],[["promise",["error"]],["error"]]]],[11,R[5514],R[5450],E,57,[[["self"],["owned"],["u16"],["u64"],["results",["owned"]],["params",["owned"]]],[["promise",["error"]],["error"]]]],[11,R[5514],R[5451],E,60,[[["self"],["owned"],["u16"],["u64"],["results",["owned"]],["params",["owned"]]],[["promise",["error"]],["error"]]]],[11,R[5514],R[5455],E,76,[[["self"],["owned"],["u16"],["u64"],["results",["owned"]],["params",["owned"]]],[["promise",["error"]],["error"]]]],[11,R[5514],R[5466],E,94,[[["self"],["owned"],["u16"],["u64"],["results",["owned"]],["params",["owned"]]],[["promise",["error"]],["error"]]]],[11,R[5514],R[5469],E,104,[[["self"],["owned"],["u16"],["u64"],["results",["owned"]],["params",["owned"]]],[["promise",["error"]],["error"]]]],[11,R[5514],R[5470],E,107,[[["self"],["owned"],["u16"],["u64"],["results",["owned"]],["params",["owned"]]],[["promise",["error"]],["error"]]]],[11,R[5514],R[5476],E,117,[[["self"],["owned"],["u16"],["u64"],["results",["owned"]],["params",["owned"]]],[["promise",["error"]],["error"]]]],[11,"from_u16",R[5430],E,17,[[["u16"]],[[R[12],[R[5471],R[2110]]],[R[5471]],[R[2110]]]]],[11,"from_u16",E,E,18,[[["u16"]],[[R[5433]],[R[2110]],[R[12],[R[5433],R[2110]]]]]],[11,"to_u16",E,E,17,[[],["u16"]]],[11,"to_u16",E,E,18,[[],["u16"]]],[11,R[4656],R[5481],E,19,[[],[R[2145]]]],[11,R[4656],R[5432],E,24,[[],[R[2145]]]],[11,R[4656],R[5482],E,22,[[],[R[2145]]]],[11,R[4656],R[5483],E,30,[[],[R[2145]]]],[11,R[4656],R[5484],E,32,[[],[R[2145]]]],[11,R[4656],R[5485],E,34,[[],[R[2145]]]],[11,R[4656],R[5486],E,36,[[],[R[2145]]]],[11,R[4656],R[5487],E,42,[[],[R[2145]]]],[11,R[4656],R[5488],E,47,[[],[R[2145]]]],[11,R[4656],R[5489],E,53,[[],[R[2145]]]],[11,R[4656],R[5490],E,61,[[],[R[2145]]]],[11,R[4656],R[5491],E,64,[[],[R[2145]]]],[11,R[4656],R[5492],E,67,[[],[R[2145]]]],[11,R[4656],R[5493],E,70,[[],[R[2145]]]],[11,R[4656],R[5463],E,80,[[],[R[2145]]]],[11,R[4656],R[5494],E,78,[[],[R[2145]]]],[11,R[4656],R[5495],E,83,[[],[R[2145]]]],[11,R[4656],R[5496],E,85,[[],[R[2145]]]],[11,R[4656],R[5497],E,87,[[],[R[2145]]]],[11,R[4656],R[5498],E,89,[[],[R[2145]]]],[11,R[4656],R[5467],E,100,[[],[R[2145]]]],[11,R[4656],R[5499],E,96,[[],[R[2145]]]],[11,R[4656],R[5500],E,98,[[],[R[2145]]]],[11,R[4656],R[5501],E,108,[[],[R[2145]]]],[11,R[4656],R[5502],E,110,[[],[R[2145]]]],[11,R[4656],R[5503],E,113,[[],[R[2145]]]],[11,R[4656],R[5504],E,118,[[],[R[2145]]]],[11,R[4656],R[5505],E,120,[[],[R[2145]]]],[11,R[4656],R[5506],E,122,[[],[R[2145]]]],[11,R[4656],R[5507],E,124,[[],[R[2145]]]],[11,"new",R[5481],E,19,[[[R[2145]]],["reader"]]],[11,"new",R[5432],E,24,[[[R[2145]]],["reader"]]],[11,"new",R[5482],E,22,[[[R[2145]]],["reader"]]],[11,"new",R[5483],E,30,[[[R[2145]]],["reader"]]],[11,"new",R[5484],E,32,[[[R[2145]]],["reader"]]],[11,"new",R[5485],E,34,[[[R[2145]]],["reader"]]],[11,"new",R[5486],E,36,[[[R[2145]]],["reader"]]],[11,"new",R[5487],E,42,[[[R[2145]]],["reader"]]],[11,"new",R[5488],E,47,[[[R[2145]]],["reader"]]],[11,"new",R[5489],E,53,[[[R[2145]]],["reader"]]],[11,"new",R[5490],E,61,[[[R[2145]]],["reader"]]],[11,"new",R[5491],E,64,[[[R[2145]]],["reader"]]],[11,"new",R[5492],E,67,[[[R[2145]]],["reader"]]],[11,"new",R[5493],E,70,[[[R[2145]]],["reader"]]],[11,"new",R[5463],E,80,[[[R[2145]]],["reader"]]],[11,"new",R[5494],E,78,[[[R[2145]]],["reader"]]],[11,"new",R[5495],E,83,[[[R[2145]]],["reader"]]],[11,"new",R[5496],E,85,[[[R[2145]]],["reader"]]],[11,"new",R[5497],E,87,[[[R[2145]]],["reader"]]],[11,"new",R[5498],E,89,[[[R[2145]]],["reader"]]],[11,"new",R[5467],E,100,[[[R[2145]]],["reader"]]],[11,"new",R[5499],E,96,[[[R[2145]]],["reader"]]],[11,"new",R[5500],E,98,[[[R[2145]]],["reader"]]],[11,"new",R[5501],E,108,[[[R[2145]]],["reader"]]],[11,"new",R[5502],E,110,[[[R[2145]]],["reader"]]],[11,"new",R[5503],E,113,[[[R[2145]]],["reader"]]],[11,"new",R[5504],E,118,[[[R[2145]]],["reader"]]],[11,"new",R[5505],E,120,[[[R[2145]]],["reader"]]],[11,"new",R[5506],E,122,[[[R[2145]]],["reader"]]],[11,"new",R[5507],E,124,[[[R[2145]]],["reader"]]],[11,"new",R[5481],E,20,[[[R[2150]]],["builder"]]],[11,"new",R[5432],E,25,[[[R[2150]]],["builder"]]],[11,"new",R[5482],E,23,[[[R[2150]]],["builder"]]],[11,"new",R[5483],E,31,[[[R[2150]]],["builder"]]],[11,"new",R[5484],E,33,[[[R[2150]]],["builder"]]],[11,"new",R[5485],E,35,[[[R[2150]]],["builder"]]],[11,"new",R[5486],E,37,[[[R[2150]]],["builder"]]],[11,"new",R[5487],E,43,[[[R[2150]]],["builder"]]],[11,"new",R[5488],E,48,[[[R[2150]]],["builder"]]],[11,"new",R[5489],E,54,[[[R[2150]]],["builder"]]],[11,"new",R[5490],E,62,[[[R[2150]]],["builder"]]],[11,"new",R[5491],E,65,[[[R[2150]]],["builder"]]],[11,"new",R[5492],E,68,[[[R[2150]]],["builder"]]],[11,"new",R[5493],E,71,[[[R[2150]]],["builder"]]],[11,"new",R[5463],E,81,[[[R[2150]]],["builder"]]],[11,"new",R[5494],E,79,[[[R[2150]]],["builder"]]],[11,"new",R[5495],E,84,[[[R[2150]]],["builder"]]],[11,"new",R[5496],E,86,[[[R[2150]]],["builder"]]],[11,"new",R[5497],E,88,[[[R[2150]]],["builder"]]],[11,"new",R[5498],E,90,[[[R[2150]]],["builder"]]],[11,"new",R[5467],E,101,[[[R[2150]]],["builder"]]],[11,"new",R[5499],E,97,[[[R[2150]]],["builder"]]],[11,"new",R[5500],E,99,[[[R[2150]]],["builder"]]],[11,"new",R[5501],E,109,[[[R[2150]]],["builder"]]],[11,"new",R[5502],E,111,[[[R[2150]]],["builder"]]],[11,"new",R[5503],E,114,[[[R[2150]]],["builder"]]],[11,"new",R[5504],E,119,[[[R[2150]]],["builder"]]],[11,"new",R[5505],E,121,[[[R[2150]]],["builder"]]],[11,"new",R[5506],E,123,[[[R[2150]]],["builder"]]],[11,"new",R[5507],E,125,[[[R[2150]]],["builder"]]],[11,R[4657],R[5481],E,20,[[],[R[2151]]]],[11,R[4657],R[5432],E,25,[[],[R[2151]]]],[11,R[4657],R[5482],E,23,[[],[R[2151]]]],[11,R[4657],R[5483],E,31,[[],[R[2151]]]],[11,R[4657],R[5484],E,33,[[],[R[2151]]]],[11,R[4657],R[5485],E,35,[[],[R[2151]]]],[11,R[4657],R[5486],E,37,[[],[R[2151]]]],[11,R[4657],R[5487],E,43,[[],[R[2151]]]],[11,R[4657],R[5488],E,48,[[],[R[2151]]]],[11,R[4657],R[5489],E,54,[[],[R[2151]]]],[11,R[4657],R[5490],E,62,[[],[R[2151]]]],[11,R[4657],R[5491],E,65,[[],[R[2151]]]],[11,R[4657],R[5492],E,68,[[],[R[2151]]]],[11,R[4657],R[5493],E,71,[[],[R[2151]]]],[11,R[4657],R[5463],E,81,[[],[R[2151]]]],[11,R[4657],R[5494],E,79,[[],[R[2151]]]],[11,R[4657],R[5495],E,84,[[],[R[2151]]]],[11,R[4657],R[5496],E,86,[[],[R[2151]]]],[11,R[4657],R[5497],E,88,[[],[R[2151]]]],[11,R[4657],R[5498],E,90,[[],[R[2151]]]],[11,R[4657],R[5467],E,101,[[],[R[2151]]]],[11,R[4657],R[5499],E,97,[[],[R[2151]]]],[11,R[4657],R[5500],E,99,[[],[R[2151]]]],[11,R[4657],R[5501],E,109,[[],[R[2151]]]],[11,R[4657],R[5502],E,111,[[],[R[2151]]]],[11,R[4657],R[5503],E,114,[[],[R[2151]]]],[11,R[4657],R[5504],E,119,[[],[R[2151]]]],[11,R[4657],R[5505],E,121,[[],[R[2151]]]],[11,R[4657],R[5506],E,123,[[],[R[2151]]]],[11,R[4657],R[5507],E,125,[[],[R[2151]]]],[11,"imbue",R[5481],E,19,[[[R[4658]],["self"]]]],[11,"imbue",R[5432],E,24,[[[R[4658]],["self"]]]],[11,"imbue",R[5482],E,22,[[[R[4658]],["self"]]]],[11,"imbue",R[5483],E,30,[[[R[4658]],["self"]]]],[11,"imbue",R[5484],E,32,[[[R[4658]],["self"]]]],[11,"imbue",R[5485],E,34,[[[R[4658]],["self"]]]],[11,"imbue",R[5486],E,36,[[[R[4658]],["self"]]]],[11,"imbue",R[5487],E,42,[[[R[4658]],["self"]]]],[11,"imbue",R[5488],E,47,[[[R[4658]],["self"]]]],[11,"imbue",R[5489],E,53,[[[R[4658]],["self"]]]],[11,"imbue",R[5490],E,61,[[[R[4658]],["self"]]]],[11,"imbue",R[5491],E,64,[[[R[4658]],["self"]]]],[11,"imbue",R[5492],E,67,[[[R[4658]],["self"]]]],[11,"imbue",R[5493],E,70,[[[R[4658]],["self"]]]],[11,"imbue",R[5463],E,80,[[[R[4658]],["self"]]]],[11,"imbue",R[5494],E,78,[[[R[4658]],["self"]]]],[11,"imbue",R[5495],E,83,[[[R[4658]],["self"]]]],[11,"imbue",R[5496],E,85,[[[R[4658]],["self"]]]],[11,"imbue",R[5497],E,87,[[[R[4658]],["self"]]]],[11,"imbue",R[5498],E,89,[[[R[4658]],["self"]]]],[11,"imbue",R[5467],E,100,[[[R[4658]],["self"]]]],[11,"imbue",R[5499],E,96,[[[R[4658]],["self"]]]],[11,"imbue",R[5500],E,98,[[[R[4658]],["self"]]]],[11,"imbue",R[5501],E,108,[[[R[4658]],["self"]]]],[11,"imbue",R[5502],E,110,[[[R[4658]],["self"]]]],[11,"imbue",R[5503],E,113,[[[R[4658]],["self"]]]],[11,"imbue",R[5504],E,118,[[[R[4658]],["self"]]]],[11,"imbue",R[5505],E,120,[[[R[4658]],["self"]]]],[11,"imbue",R[5506],E,122,[[[R[4658]],["self"]]]],[11,"imbue",R[5507],E,124,[[[R[4658]],["self"]]]],[11,R[4659],R[5481],E,20,[[["self"],[R[4658]]]]],[11,R[4659],R[5432],E,25,[[["self"],[R[4658]]]]],[11,R[4659],R[5482],E,23,[[["self"],[R[4658]]]]],[11,R[4659],R[5483],E,31,[[["self"],[R[4658]]]]],[11,R[4659],R[5484],E,33,[[["self"],[R[4658]]]]],[11,R[4659],R[5485],E,35,[[["self"],[R[4658]]]]],[11,R[4659],R[5486],E,37,[[["self"],[R[4658]]]]],[11,R[4659],R[5487],E,43,[[["self"],[R[4658]]]]],[11,R[4659],R[5488],E,48,[[["self"],[R[4658]]]]],[11,R[4659],R[5489],E,54,[[["self"],[R[4658]]]]],[11,R[4659],R[5490],E,62,[[["self"],[R[4658]]]]],[11,R[4659],R[5491],E,65,[[["self"],[R[4658]]]]],[11,R[4659],R[5492],E,68,[[["self"],[R[4658]]]]],[11,R[4659],R[5493],E,71,[[["self"],[R[4658]]]]],[11,R[4659],R[5463],E,81,[[["self"],[R[4658]]]]],[11,R[4659],R[5494],E,79,[[["self"],[R[4658]]]]],[11,R[4659],R[5495],E,84,[[["self"],[R[4658]]]]],[11,R[4659],R[5496],E,86,[[["self"],[R[4658]]]]],[11,R[4659],R[5497],E,88,[[["self"],[R[4658]]]]],[11,R[4659],R[5498],E,90,[[["self"],[R[4658]]]]],[11,R[4659],R[5467],E,101,[[["self"],[R[4658]]]]],[11,R[4659],R[5499],E,97,[[["self"],[R[4658]]]]],[11,R[4659],R[5500],E,99,[[["self"],[R[4658]]]]],[11,R[4659],R[5501],E,109,[[["self"],[R[4658]]]]],[11,R[4659],R[5502],E,111,[[["self"],[R[4658]]]]],[11,R[4659],R[5503],E,114,[[["self"],[R[4658]]]]],[11,R[4659],R[5504],E,119,[[["self"],[R[4658]]]]],[11,R[4659],R[5505],E,121,[[["self"],[R[4658]]]]],[11,R[4659],R[5506],E,123,[[["self"],[R[4658]]]]],[11,R[4659],R[5507],E,125,[[["self"],[R[4658]]]]],[11,R[18],R[5430],E,17,[[],["u64"]]],[11,R[18],E,E,18,[[],["u64"]]],[11,R[18],R[5481],E,19,[[],["u64"]]],[11,R[18],E,E,20,[[],["u64"]]],[11,R[18],R[5432],E,24,[[],["u64"]]],[11,R[18],E,E,25,[[],["u64"]]],[11,R[18],R[5482],E,22,[[],["u64"]]],[11,R[18],E,E,23,[[],["u64"]]],[11,R[18],R[5438],E,27,[[],["u64"]]],[11,R[18],R[5483],E,30,[[],["u64"]]],[11,R[18],E,E,31,[[],["u64"]]],[11,R[18],R[5484],E,32,[[],["u64"]]],[11,R[18],E,E,33,[[],["u64"]]],[11,R[18],R[5485],E,34,[[],["u64"]]],[11,R[18],E,E,35,[[],["u64"]]],[11,R[18],R[5486],E,36,[[],["u64"]]],[11,R[18],E,E,37,[[],["u64"]]],[11,R[18],R[5441],E,39,[[],["u64"]]],[11,R[18],R[5487],E,42,[[],["u64"]]],[11,R[18],E,E,43,[[],["u64"]]],[11,R[18],R[5442],E,44,[[],["u64"]]],[11,R[18],R[5488],E,47,[[],["u64"]]],[11,R[18],E,E,48,[[],["u64"]]],[11,R[18],R[5447],E,49,[[],["u64"]]],[11,R[18],R[5489],E,53,[[],["u64"]]],[11,R[18],E,E,54,[[],["u64"]]],[11,R[18],R[5450],E,55,[[],["u64"]]],[11,R[18],R[5451],E,58,[[],["u64"]]],[11,R[18],R[5490],E,61,[[],["u64"]]],[11,R[18],E,E,62,[[],["u64"]]],[11,R[18],R[5491],E,64,[[],["u64"]]],[11,R[18],E,E,65,[[],["u64"]]],[11,R[18],R[5492],E,67,[[],["u64"]]],[11,R[18],E,E,68,[[],["u64"]]],[11,R[18],R[5493],E,70,[[],["u64"]]],[11,R[18],E,E,71,[[],["u64"]]],[11,R[18],R[5455],E,74,[[],["u64"]]],[11,R[18],R[5463],E,80,[[],["u64"]]],[11,R[18],E,E,81,[[],["u64"]]],[11,R[18],R[5494],E,78,[[],["u64"]]],[11,R[18],E,E,79,[[],["u64"]]],[11,R[18],R[5495],E,83,[[],["u64"]]],[11,R[18],E,E,84,[[],["u64"]]],[11,R[18],R[5496],E,85,[[],["u64"]]],[11,R[18],E,E,86,[[],["u64"]]],[11,R[18],R[5497],E,87,[[],["u64"]]],[11,R[18],E,E,88,[[],["u64"]]],[11,R[18],R[5498],E,89,[[],["u64"]]],[11,R[18],E,E,90,[[],["u64"]]],[11,R[18],R[5466],E,92,[[],["u64"]]],[11,R[18],R[5467],E,100,[[],["u64"]]],[11,R[18],E,E,101,[[],["u64"]]],[11,R[18],R[5499],E,96,[[],["u64"]]],[11,R[18],E,E,97,[[],["u64"]]],[11,R[18],R[5500],E,98,[[],["u64"]]],[11,R[18],E,E,99,[[],["u64"]]],[11,R[18],R[5469],E,102,[[],["u64"]]],[11,R[18],R[5470],E,105,[[],["u64"]]],[11,R[18],R[5501],E,108,[[],["u64"]]],[11,R[18],E,E,109,[[],["u64"]]],[11,R[18],R[5502],E,110,[[],["u64"]]],[11,R[18],E,E,111,[[],["u64"]]],[11,R[18],R[5503],E,113,[[],["u64"]]],[11,R[18],E,E,114,[[],["u64"]]],[11,R[18],R[5476],E,115,[[],["u64"]]],[11,R[18],R[5504],E,118,[[],["u64"]]],[11,R[18],E,E,119,[[],["u64"]]],[11,R[18],R[5505],E,120,[[],["u64"]]],[11,R[18],E,E,121,[[],["u64"]]],[11,R[18],R[5506],E,122,[[],["u64"]]],[11,R[18],E,E,123,[[],["u64"]]],[11,R[18],R[5507],E,124,[[],["u64"]]],[11,R[18],E,E,125,[[],["u64"]]],[11,R[5415],"hid_io",E,127,[[["self"]]]],[11,R[2289],R[5480],"Serializer for HIDIOPacketBuffer",12,[[["s"],["self"]],[R[12]]]]],"p":[[3,"Endpoint"],[4,"AuthLevel"],[3,"HIDIOQueue"],[3,R[5515]],[3,R[5516]],[3,R[5517]],[3,R[5518]],[3,R[5519]],[3,R[5520]],[3,R[5521]],[8,R[5522]],[3,"StubOutput"],[3,R[5523]],[4,R[5524]],[4,R[5525]],[4,R[5526]],[4,"HostOSID"],[4,R[5527]],[4,"NodeType"],[3,"Reader"],[3,"Builder"],[4,"Which"],[3,"Reader"],[3,"Builder"],[3,"Reader"],[3,"Builder"],[3,R[4571]],[3,"Client"],[3,R[5453]],[3,R[5440]],[3,"Reader"],[3,"Builder"],[3,"Reader"],[3,"Builder"],[3,"Reader"],[3,"Builder"],[3,"Reader"],[3,"Builder"],[8,"Server"],[3,"Client"],[3,R[5453]],[3,R[5440]],[3,"Reader"],[3,"Builder"],[3,"Client"],[3,R[5453]],[3,R[5440]],[3,"Reader"],[3,"Builder"],[3,"Client"],[3,R[5453]],[3,R[5440]],[4,"Which"],[3,"Reader"],[3,"Builder"],[3,"Client"],[3,R[5453]],[3,R[5440]],[3,"Client"],[3,R[5453]],[3,R[5440]],[3,"Reader"],[3,"Builder"],[3,R[4571]],[3,"Reader"],[3,"Builder"],[3,R[4571]],[3,"Reader"],[3,"Builder"],[3,R[4571]],[3,"Reader"],[3,"Builder"],[3,R[4571]],[8,"Server"],[3,"Client"],[3,R[5453]],[3,R[5440]],[4,"Which"],[3,"Reader"],[3,"Builder"],[3,"Reader"],[3,"Builder"],[3,R[4571]],[3,"Reader"],[3,"Builder"],[3,"Reader"],[3,"Builder"],[3,"Reader"],[3,"Builder"],[3,"Reader"],[3,"Builder"],[8,"Server"],[3,"Client"],[3,R[5453]],[3,R[5440]],[4,"Which"],[3,"Reader"],[3,"Builder"],[3,"Reader"],[3,"Builder"],[3,"Reader"],[3,"Builder"],[3,"Client"],[3,R[5453]],[3,R[5440]],[3,"Client"],[3,R[5453]],[3,R[5440]],[3,"Reader"],[3,"Builder"],[3,"Reader"],[3,"Builder"],[4,"Which"],[3,"Reader"],[3,"Builder"],[3,"Client"],[3,R[5453]],[3,R[5440]],[3,"Reader"],[3,"Builder"],[3,"Reader"],[3,"Builder"],[3,"Reader"],[3,"Builder"],[3,"Reader"],[3,"Builder"],[8,"Server"],[3,"RUNNING"],[3,R[5528]],[3,"Owned"],[3,R[4571]],[3,"Owned"],[3,"Owned"],[3,R[4571]],[3,"Owned"],[3,"Owned"],[3,R[4571]],[3,"Owned"],[3,R[4571]],[3,"Owned"],[3,R[4571]],[3,"Owned"],[3,R[4571]],[3,"Owned"],[3,"Owned"],[3,R[4571]],[3,"Owned"],[3,"Owned"],[3,R[4571]],[3,"Owned"],[3,"Owned"],[3,R[4571]],[3,"Owned"],[3,"Owned"],[3,"Owned"],[3,"Owned"],[3,"Owned"],[3,"Owned"],[3,"Owned"],[3,"Owned"],[3,"Owned"],[3,R[4571]],[3,"Owned"],[3,R[4571]],[3,"Owned"],[3,R[4571]],[3,"Owned"],[3,R[4571]],[3,"Owned"],[3,R[4571]],[3,"Owned"],[3,"Owned"],[3,R[4571]],[3,"Owned"],[3,R[4571]],[3,"Owned"],[3,R[4571]],[3,"Owned"],[3,"Owned"],[3,"Owned"],[3,R[4571]],[3,"Owned"],[3,R[4571]],[3,"Owned"],[3,R[4571]],[3,"Owned"],[3,"Owned"],[3,R[4571]],[3,"Owned"],[3,R[4571]],[3,"Owned"],[3,R[4571]],[3,"Owned"],[3,R[4571]]]};
searchIndex["hidapi"]={"doc":"This crate provides a rust abstraction over the features…","i":[[3,"HidApi","hidapi","Object for handling hidapi context and implementing RAII…",N,N],[3,R[4705],E,"Storage for device related information",N,N],[12,"path",E,E,0,N],[12,"vendor_id",E,E,0,N],[12,"product_id",E,E,0,N],[12,R[4706],E,E,0,N],[12,"release_number",E,E,0,N],[12,"manufacturer_string",E,E,0,N],[12,"product_string",E,E,0,N],[12,"usage_page",E,E,0,N],[12,"usage",E,E,0,N],[12,"interface_number",E,E,0,N],[3,"HidDevice",E,"Object for accessing HID device",N,N],[4,"HidError",E,E,N,N],[13,"HidApiError",E,E,1,N],[12,"message",R[4700],E,1,N],[13,"HidApiErrorEmptyWithCause","hidapi",E,1,N],[12,"cause",R[4700],E,1,N],[13,"HidApiErrorEmpty","hidapi",E,1,N],[13,"FromWideCharError",E,E,1,N],[12,"wide_char",R[4700],E,1,N],[13,"InitializationError","hidapi",E,1,N],[13,"OpenHidDeviceError",E,E,1,N],[13,"InvalidZeroSizeData",E,E,1,N],[13,"IncompleteSendError",E,E,1,N],[12,"sent",R[4700],E,1,N],[12,"all",E,E,1,N],[13,"SetBlockingModeError","hidapi",E,1,N],[12,"mode",R[4700],E,1,N],[13,"OpenHidDeviceWithDeviceInfoError","hidapi",E,1,N],[12,"device_info",R[4700],E,1,N],[6,"HidResult","hidapi",E,N,N],[11,"new",E,"Initializes the hidapi.",2,[[],[R[4701]]]],[11,"refresh_devices",E,"Refresh devices list and information about them (to access…",2,[[["self"]],[R[4701]]]],[11,"devices",E,"Returns list of objects containing information about…",2,[[["self"]],["vec"]]],[11,"open",E,"Open a HID device using a Vendor ID (VID) and Product ID…",2,[[["u16"],["self"]],[[R[4701],[R[4702]]],[R[4702]]]]],[11,"open_serial",E,"Open a HID device using a Vendor ID (VID), Product ID…",2,[[["str"],["u16"],["self"]],[[R[4701],[R[4702]]],[R[4702]]]]],[11,"open_path",E,"The path name be determined by inspecting the device list…",2,[[["cstr"],["self"]],[[R[4701],[R[4702]]],[R[4702]]]]],[11,"open_device",E,"Use the information contained in `HidDeviceInfo` to open…",0,[[["hidapi"],["self"]],[[R[4701],[R[4702]]],[R[4702]]]]],[11,"check_error",E,"Get the last error, which happened in the underlying…",3,[[["self"]],[[R[4701],["hiderror"]],["hiderror"]]]],[11,"write",E,"The first byte of `data` must contain the Report ID. For…",3,[[["self"]],[[R[4701],[R[9]]],[R[9]]]]],[11,"read",E,R[4703],3,[[["self"]],[[R[4701],[R[9]]],[R[9]]]]],[11,R[1378],E,R[4703],3,[[["i32"],["self"]],[[R[4701],[R[9]]],[R[9]]]]],[11,"send_feature_report",E,"Send a Feature report to the device. Feature reports are…",3,[[["self"]],[R[4701]]]],[11,"get_feature_report",E,"Set the first byte of `buf` to the 'Report ID' of the…",3,[[["self"]],[[R[4701],[R[9]]],[R[9]]]]],[11,"set_blocking_mode",E,"Set the device handle to be in blocking or in non-blocking…",3,[[["self"],["bool"]],[R[4701]]]],[11,"get_manufacturer_string",E,R[4704],3,[[["self"]],[[R[4701],[R[52]]],[R[52],["string"]]]]],[11,"get_product_string",E,R[4704],3,[[["self"]],[[R[4701],[R[52]]],[R[52],["string"]]]]],[11,"get_serial_number_string",E,"Get The Serial Number String from a HID device.",3,[[["self"]],[[R[4701],[R[52]]],[R[52],["string"]]]]],[11,"get_indexed_string",E,"Get a string from a HID device, based on its string index.",3,[[["i32"],["self"]],[[R[4701],[R[52]]],[R[52],["string"]]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[[T],["self"]]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[170],E,E,1,[[["self"]],["string"]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"as_fail",E,E,1,[[["self"]],["fail"]]],[11,"clone",E,E,0,[[["self"]],["hiddeviceinfo"]]],[11,"drop",E,E,3,[[["self"]]]],[11,"fmt",E,E,1,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,0,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,1,[[[R[29]],["self"]],[R[12]]]],[11,"name",E,E,1,[[["self"]],[["str"],[R[52],["str"]]]]],[11,"cause",E,E,1,[[["self"]],[["fail"],[R[52],["fail"]]]]],[11,R[1406],E,E,1,[[["self"]],[[R[1406]],[R[52],[R[1406]]]]]]],"p":[[3,R[4705]],[4,"HidError"],[3,"HidApi"],[3,"HidDevice"]]};
searchIndex["install_service"]={"doc":E,"i":[],"p":[]};
searchIndex["iovec"]={"doc":R[1337],"i":[[3,"IoVec","iovec",R[1337],N,N],[0,"unix",E,"IoVec extensions for Unix platforms.",N,N],[5,"as_os_slice","iovec::unix","Convert a slice of `IoVec` refs to a slice of `libc::iovec`.",N,[[]]],[5,"as_os_slice_mut",E,"Convert a mutable slice of `IoVec` refs to a mutable slice…",N,[[]]],[17,"MAX_LENGTH","iovec","Max length of an `IoVec` slice.",N,N],[11,"from_bytes",E,E,0,[[],[[R[52],["iovec"]],["iovec"]]]],[11,"from_bytes_mut",E,E,0,[[],[["iovec"],[R[52],["iovec"]]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,R[54],E,E,0,[[["self"]]]],[11,"deref",E,E,0,[[["self"]]]]],"p":[[3,"IoVec"]]};
searchIndex["libc"]={"doc":"libc - Raw FFI bindings to platforms' system libraries","i":[[4,"c_void","libc","Equivalent to C's `void` type when used as a [pointer].",N,N],[3,"group",E,E,N,N],[12,"gr_name",E,E,0,N],[12,"gr_passwd",E,E,0,N],[12,"gr_gid",E,E,0,N],[12,"gr_mem",E,E,0,N],[3,"utimbuf",E,E,N,N],[12,"actime",E,E,1,N],[12,"modtime",E,E,1,N],[3,"timeval",E,E,N,N],[12,"tv_sec",E,E,2,N],[12,"tv_usec",E,E,2,N],[3,R[777],E,E,N,N],[12,"tv_sec",E,E,3,N],[12,"tv_nsec",E,E,3,N],[3,"rlimit",E,E,N,N],[12,"rlim_cur",E,E,4,N],[12,"rlim_max",E,E,4,N],[3,"rusage",E,E,N,N],[12,"ru_utime",E,E,5,N],[12,"ru_stime",E,E,5,N],[12,"ru_maxrss",E,E,5,N],[12,"ru_ixrss",E,E,5,N],[12,"ru_idrss",E,E,5,N],[12,"ru_isrss",E,E,5,N],[12,"ru_minflt",E,E,5,N],[12,"ru_majflt",E,E,5,N],[12,"ru_nswap",E,E,5,N],[12,"ru_inblock",E,E,5,N],[12,"ru_oublock",E,E,5,N],[12,"ru_msgsnd",E,E,5,N],[12,"ru_msgrcv",E,E,5,N],[12,"ru_nsignals",E,E,5,N],[12,"ru_nvcsw",E,E,5,N],[12,"ru_nivcsw",E,E,5,N],[3,R[744],E,E,N,N],[12,"ipv6mr_multiaddr",E,E,6,N],[12,"ipv6mr_interface",E,E,6,N],[3,"hostent",E,E,N,N],[12,"h_name",E,E,7,N],[12,"h_aliases",E,E,7,N],[12,"h_addrtype",E,E,7,N],[12,"h_length",E,E,7,N],[12,"h_addr_list",E,E,7,N],[3,"iovec",E,E,N,N],[12,"iov_base",E,E,8,N],[12,"iov_len",E,E,8,N],[3,"pollfd",E,E,N,N],[12,"fd",E,E,9,N],[12,"events",E,E,9,N],[12,"revents",E,E,9,N],[3,"winsize",E,E,N,N],[12,"ws_row",E,E,10,N],[12,"ws_col",E,E,10,N],[12,"ws_xpixel",E,E,10,N],[12,"ws_ypixel",E,E,10,N],[3,"linger",E,E,N,N],[12,"l_onoff",E,E,11,N],[12,"l_linger",E,E,11,N],[3,"sigval",E,E,N,N],[12,"sival_ptr",E,E,12,N],[3,R[745],E,E,N,N],[12,"it_interval",E,E,13,N],[12,"it_value",E,E,13,N],[3,"tms",E,E,N,N],[12,"tms_utime",E,E,14,N],[12,"tms_stime",E,E,14,N],[12,"tms_cutime",E,E,14,N],[12,"tms_cstime",E,E,14,N],[3,"servent",E,E,N,N],[12,"s_name",E,E,15,N],[12,"s_aliases",E,E,15,N],[12,"s_port",E,E,15,N],[12,"s_proto",E,E,15,N],[3,R[778],E,E,N,N],[12,"p_name",E,E,16,N],[12,"p_aliases",E,E,16,N],[12,"p_proto",E,E,16,N],[3,R[779],E,E,N,N],[12,"sa_len",E,E,17,N],[12,"sa_family",E,E,17,N],[12,"sa_data",E,E,17,N],[3,R[746],E,E,N,N],[12,"sin6_len",E,E,18,N],[12,R[1888],E,E,18,N],[12,"sin6_port",E,E,18,N],[12,R[1889],E,E,18,N],[12,"sin6_addr",E,E,18,N],[12,R[1890],E,E,18,N],[3,"passwd",E,E,N,N],[12,"pw_name",E,E,19,N],[12,"pw_passwd",E,E,19,N],[12,"pw_uid",E,E,19,N],[12,"pw_gid",E,E,19,N],[12,"pw_change",E,E,19,N],[12,"pw_class",E,E,19,N],[12,"pw_gecos",E,E,19,N],[12,"pw_dir",E,E,19,N],[12,"pw_shell",E,E,19,N],[12,"pw_expire",E,E,19,N],[3,"ifaddrs",E,E,N,N],[12,"ifa_next",E,E,20,N],[12,"ifa_name",E,E,20,N],[12,"ifa_flags",E,E,20,N],[12,"ifa_addr",E,E,20,N],[12,"ifa_netmask",E,E,20,N],[12,"ifa_dstaddr",E,E,20,N],[12,"ifa_data",E,E,20,N],[3,"fd_set",E,E,N,N],[3,"tm",E,E,N,N],[12,"tm_sec",E,E,21,N],[12,"tm_min",E,E,21,N],[12,"tm_hour",E,E,21,N],[12,"tm_mday",E,E,21,N],[12,"tm_mon",E,E,21,N],[12,"tm_year",E,E,21,N],[12,"tm_wday",E,E,21,N],[12,"tm_yday",E,E,21,N],[12,"tm_isdst",E,E,21,N],[12,"tm_gmtoff",E,E,21,N],[12,"tm_zone",E,E,21,N],[3,"msghdr",E,E,N,N],[12,"msg_name",E,E,22,N],[12,R[1884],E,E,22,N],[12,"msg_iov",E,E,22,N],[12,"msg_iovlen",E,E,22,N],[12,R[1885],E,E,22,N],[12,R[1886],E,E,22,N],[12,"msg_flags",E,E,22,N],[3,"cmsghdr",E,E,N,N],[12,"cmsg_len",E,E,23,N],[12,"cmsg_level",E,E,23,N],[12,"cmsg_type",E,E,23,N],[3,"fsid_t",E,E,N,N],[3,R[742],E,E,N,N],[12,"if_index",E,E,24,N],[12,"if_name",E,E,24,N],[3,R[747],E,E,N,N],[12,"sun_len",E,E,25,N],[12,"sun_family",E,E,25,N],[12,"sun_path",E,E,25,N],[3,"utsname",E,E,N,N],[12,"sysname",E,E,26,N],[12,"nodename",E,E,26,N],[12,"release",E,E,26,N],[12,"version",E,E,26,N],[12,"machine",E,E,26,N],[3,"ip_mreq",E,E,N,N],[12,"imr_multiaddr",E,E,27,N],[12,"imr_interface",E,E,27,N],[3,"aiocb",E,E,N,N],[12,"aio_fildes",E,E,28,N],[12,"aio_offset",E,E,28,N],[12,"aio_buf",E,E,28,N],[12,"aio_nbytes",E,E,28,N],[12,"aio_reqprio",E,E,28,N],[12,"aio_sigevent",E,E,28,N],[12,"aio_lio_opcode",E,E,28,N],[3,"glob_t",E,E,N,N],[12,"gl_pathc",E,E,29,N],[12,"gl_offs",E,E,29,N],[12,"gl_pathv",E,E,29,N],[3,R[780],E,E,N,N],[12,"ai_flags",E,E,30,N],[12,"ai_family",E,E,30,N],[12,"ai_socktype",E,E,30,N],[12,"ai_protocol",E,E,30,N],[12,"ai_addrlen",E,E,30,N],[12,"ai_canonname",E,E,30,N],[12,"ai_addr",E,E,30,N],[12,"ai_next",E,E,30,N],[3,R[743],E,E,N,N],[12,"numer",E,E,31,N],[12,"denom",E,E,31,N],[3,"stat",E,E,N,N],[12,"st_dev",E,E,32,N],[12,"st_mode",E,E,32,N],[12,"st_nlink",E,E,32,N],[12,"st_ino",E,E,32,N],[12,"st_uid",E,E,32,N],[12,"st_gid",E,E,32,N],[12,"st_rdev",E,E,32,N],[12,"st_atime",E,E,32,N],[12,R[1905],E,E,32,N],[12,"st_mtime",E,E,32,N],[12,R[1906],E,E,32,N],[12,"st_ctime",E,E,32,N],[12,R[1907],E,E,32,N],[12,R[1908],E,E,32,N],[12,R[1909],E,E,32,N],[12,"st_size",E,E,32,N],[12,"st_blocks",E,E,32,N],[12,"st_blksize",E,E,32,N],[12,"st_flags",E,E,32,N],[12,"st_gen",E,E,32,N],[12,"st_lspare",E,E,32,N],[12,"st_qspare",E,E,32,N],[3,R[748],E,E,N,N],[3,R[749],E,E,N,N],[3,R[750],E,E,N,N],[3,R[751],E,E,N,N],[12,"si_signo",E,E,33,N],[12,"si_errno",E,E,33,N],[12,"si_code",E,E,33,N],[12,"si_pid",E,E,33,N],[12,"si_uid",E,E,33,N],[12,"si_status",E,E,33,N],[12,"si_addr",E,E,33,N],[3,R[741],E,E,N,N],[12,"sa_sigaction",E,E,34,N],[12,"sa_mask",E,E,34,N],[12,"sa_flags",E,E,34,N],[3,"stack_t",E,E,N,N],[12,"ss_sp",E,E,35,N],[12,"ss_size",E,E,35,N],[12,"ss_flags",E,E,35,N],[3,R[781],E,E,N,N],[12,"fst_flags",E,E,36,N],[12,"fst_posmode",E,E,36,N],[12,"fst_offset",E,E,36,N],[12,"fst_length",E,E,36,N],[12,"fst_bytesalloc",E,E,36,N],[3,R[752],E,E,N,N],[12,"ra_offset",E,E,37,N],[12,"ra_count",E,E,37,N],[3,"statvfs",E,E,N,N],[12,"f_bsize",E,E,38,N],[12,"f_frsize",E,E,38,N],[12,"f_blocks",E,E,38,N],[12,"f_bfree",E,E,38,N],[12,"f_bavail",E,E,38,N],[12,"f_files",E,E,38,N],[12,"f_ffree",E,E,38,N],[12,"f_favail",E,E,38,N],[12,"f_fsid",E,E,38,N],[12,"f_flag",E,E,38,N],[12,"f_namemax",E,E,38,N],[3,"Dl_info",E,E,N,N],[12,"dli_fname",E,E,39,N],[12,"dli_fbase",E,E,39,N],[12,"dli_sname",E,E,39,N],[12,"dli_saddr",E,E,39,N],[3,R[753],E,E,N,N],[12,"sin_len",E,E,40,N],[12,R[740],E,E,40,N],[12,"sin_port",E,E,40,N],[12,"sin_addr",E,E,40,N],[12,"sin_zero",E,E,40,N],[3,R[754],E,E,N,N],[12,"ident",E,E,41,N],[12,"filter",E,E,41,N],[12,"flags",E,E,41,N],[12,"fflags",E,E,41,N],[12,"data",E,E,41,N],[12,"udata",E,E,41,N],[12,"ext",E,E,41,N],[3,"dqblk",E,E,N,N],[12,"dqb_bhardlimit",E,E,42,N],[12,"dqb_bsoftlimit",E,E,42,N],[12,"dqb_curbytes",E,E,42,N],[12,"dqb_ihardlimit",E,E,42,N],[12,"dqb_isoftlimit",E,E,42,N],[12,"dqb_curinodes",E,E,42,N],[12,"dqb_btime",E,E,42,N],[12,"dqb_itime",E,E,42,N],[12,"dqb_id",E,E,42,N],[12,"dqb_spare",E,E,42,N],[3,R[755],E,E,N,N],[12,"ifm_msglen",E,E,43,N],[12,"ifm_version",E,E,43,N],[12,"ifm_type",E,E,43,N],[12,"ifm_addrs",E,E,43,N],[12,"ifm_flags",E,E,43,N],[12,"ifm_index",E,E,43,N],[12,"ifm_data",E,E,43,N],[3,"termios",E,E,N,N],[12,"c_iflag",E,E,44,N],[12,"c_oflag",E,E,44,N],[12,"c_cflag",E,E,44,N],[12,"c_lflag",E,E,44,N],[12,"c_cc",E,E,44,N],[12,"c_ispeed",E,E,44,N],[12,"c_ospeed",E,E,44,N],[3,"flock",E,E,N,N],[12,"l_start",E,E,45,N],[12,"l_len",E,E,45,N],[12,"l_pid",E,E,45,N],[12,"l_type",E,E,45,N],[12,"l_whence",E,E,45,N],[3,"sf_hdtr",E,E,N,N],[12,"headers",E,E,46,N],[12,"hdr_cnt",E,E,46,N],[12,"trailers",E,E,46,N],[12,"trl_cnt",E,E,46,N],[3,"lconv",E,E,N,N],[12,"decimal_point",E,E,47,N],[12,"thousands_sep",E,E,47,N],[12,"grouping",E,E,47,N],[12,"int_curr_symbol",E,E,47,N],[12,"currency_symbol",E,E,47,N],[12,"mon_decimal_point",E,E,47,N],[12,"mon_thousands_sep",E,E,47,N],[12,"mon_grouping",E,E,47,N],[12,"positive_sign",E,E,47,N],[12,"negative_sign",E,E,47,N],[12,"int_frac_digits",E,E,47,N],[12,"frac_digits",E,E,47,N],[12,"p_cs_precedes",E,E,47,N],[12,"p_sep_by_space",E,E,47,N],[12,"n_cs_precedes",E,E,47,N],[12,"n_sep_by_space",E,E,47,N],[12,"p_sign_posn",E,E,47,N],[12,"n_sign_posn",E,E,47,N],[12,"int_p_cs_precedes",E,E,47,N],[12,"int_n_cs_precedes",E,E,47,N],[12,"int_p_sep_by_space",E,E,47,N],[12,"int_n_sep_by_space",E,E,47,N],[12,"int_p_sign_posn",E,E,47,N],[12,"int_n_sign_posn",E,E,47,N],[3,R[782],E,E,N,N],[12,"sigev_notify",E,E,48,N],[12,"sigev_signo",E,E,48,N],[12,"sigev_value",E,E,48,N],[12,"sigev_notify_attributes",E,E,48,N],[3,R[756],E,E,N,N],[12,"pti_virtual_size",E,E,49,N],[12,"pti_resident_size",E,E,49,N],[12,"pti_total_user",E,E,49,N],[12,"pti_total_system",E,E,49,N],[12,"pti_threads_user",E,E,49,N],[12,"pti_threads_system",E,E,49,N],[12,"pti_policy",E,E,49,N],[12,"pti_faults",E,E,49,N],[12,"pti_pageins",E,E,49,N],[12,"pti_cow_faults",E,E,49,N],[12,"pti_messages_sent",E,E,49,N],[12,"pti_messages_received",E,E,49,N],[12,"pti_syscalls_mach",E,E,49,N],[12,"pti_syscalls_unix",E,E,49,N],[12,"pti_csw",E,E,49,N],[12,"pti_threadnum",E,E,49,N],[12,"pti_numrunning",E,E,49,N],[12,"pti_priority",E,E,49,N],[3,R[757],E,E,N,N],[12,"pbi_flags",E,E,50,N],[12,"pbi_status",E,E,50,N],[12,"pbi_xstatus",E,E,50,N],[12,"pbi_pid",E,E,50,N],[12,"pbi_ppid",E,E,50,N],[12,"pbi_uid",E,E,50,N],[12,"pbi_gid",E,E,50,N],[12,"pbi_ruid",E,E,50,N],[12,"pbi_rgid",E,E,50,N],[12,"pbi_svuid",E,E,50,N],[12,"pbi_svgid",E,E,50,N],[12,"rfu_1",E,E,50,N],[12,"pbi_comm",E,E,50,N],[12,"pbi_name",E,E,50,N],[12,"pbi_nfiles",E,E,50,N],[12,"pbi_pgid",E,E,50,N],[12,"pbi_pjobc",E,E,50,N],[12,"e_tdev",E,E,50,N],[12,"e_tpgid",E,E,50,N],[12,"pbi_nice",E,E,50,N],[12,"pbi_start_tvsec",E,E,50,N],[12,"pbi_start_tvusec",E,E,50,N],[3,R[758],E,E,N,N],[12,"pbsd",E,E,51,N],[12,"ptinfo",E,E,51,N],[3,R[759],E,E,N,N],[12,"xsu_total",E,E,52,N],[12,"xsu_avail",E,E,52,N],[12,"xsu_used",E,E,52,N],[12,"xsu_pagesize",E,E,52,N],[12,"xsu_encrypted",E,E,52,N],[3,"xucred",E,E,N,N],[12,"cr_version",E,E,53,N],[12,"cr_uid",E,E,53,N],[12,"cr_ngroups",E,E,53,N],[12,"cr_groups",E,E,53,N],[3,R[760],E,E,N,N],[12,"magic",E,E,54,N],[12,"cputype",E,E,54,N],[12,R[738],E,E,54,N],[12,"filetype",E,E,54,N],[12,"ncmds",E,E,54,N],[12,R[739],E,E,54,N],[12,"flags",E,E,54,N],[3,R[761],E,E,N,N],[12,"magic",E,E,55,N],[12,"cputype",E,E,55,N],[12,R[738],E,E,55,N],[12,"filetype",E,E,55,N],[12,"ncmds",E,E,55,N],[12,R[739],E,E,55,N],[12,"flags",E,E,55,N],[12,"reserved",E,E,55,N],[3,R[762],E,E,N,N],[12,"cmd",E,E,56,N],[12,"cmdsize",E,E,56,N],[12,"segname",E,E,56,N],[12,"vmaddr",E,E,56,N],[12,"vmsize",E,E,56,N],[12,"fileoff",E,E,56,N],[12,"filesize",E,E,56,N],[12,"maxprot",E,E,56,N],[12,"initprot",E,E,56,N],[12,"nsects",E,E,56,N],[12,"flags",E,E,56,N],[3,R[763],E,E,N,N],[12,"cmd",E,E,57,N],[12,"cmdsize",E,E,57,N],[12,"segname",E,E,57,N],[12,"vmaddr",E,E,57,N],[12,"vmsize",E,E,57,N],[12,"fileoff",E,E,57,N],[12,"filesize",E,E,57,N],[12,"maxprot",E,E,57,N],[12,"initprot",E,E,57,N],[12,"nsects",E,E,57,N],[12,"flags",E,E,57,N],[3,R[764],E,E,N,N],[12,"cmd",E,E,58,N],[12,"cmdsize",E,E,58,N],[3,R[765],E,E,N,N],[12,"sdl_len",E,E,59,N],[12,"sdl_family",E,E,59,N],[12,"sdl_index",E,E,59,N],[12,"sdl_type",E,E,59,N],[12,"sdl_nlen",E,E,59,N],[12,"sdl_alen",E,E,59,N],[12,"sdl_slen",E,E,59,N],[12,"sdl_data",E,E,59,N],[3,R[766],E,E,N,N],[12,"sin_len",E,E,60,N],[12,R[740],E,E,60,N],[12,"sin_port",E,E,60,N],[12,"sin_addr",E,E,60,N],[12,"sin_srcaddr",E,E,60,N],[12,"sin_tos",E,E,60,N],[12,"sin_other",E,E,60,N],[3,R[767],E,E,N,N],[12,"sc_len",E,E,61,N],[12,"sc_family",E,E,61,N],[12,"ss_sysaddr",E,E,61,N],[12,"sc_id",E,E,61,N],[12,"sc_unit",E,E,61,N],[12,"sc_reserved",E,E,61,N],[3,R[768],E,E,N,N],[12,"ipi_ifindex",E,E,62,N],[12,"ipi_spec_dst",E,E,62,N],[12,"ipi_addr",E,E,62,N],[3,R[769],E,E,N,N],[12,"ipi6_addr",E,E,63,N],[12,"ipi6_ifindex",E,E,63,N],[3,R[783],E,E,N,N],[12,"uid",E,E,64,N],[12,"gid",E,E,64,N],[12,"cuid",E,E,64,N],[12,"cgid",E,E,64,N],[12,"mode",E,E,64,N],[12,"_seq",E,E,64,N],[12,"_key",E,E,64,N],[3,"sembuf",E,E,N,N],[12,"sem_num",E,E,65,N],[12,"sem_op",E,E,65,N],[12,"sem_flg",E,E,65,N],[3,"arphdr",E,E,N,N],[12,"ar_hrd",E,E,66,N],[12,"ar_pro",E,E,66,N],[12,"ar_hln",E,E,66,N],[12,"ar_pln",E,E,66,N],[12,"ar_op",E,E,66,N],[3,"in_addr",E,E,N,N],[12,"s_addr",E,E,67,N],[3,"kevent",E,E,N,N],[12,"ident",E,E,68,N],[12,"filter",E,E,68,N],[12,"flags",E,E,68,N],[12,"fflags",E,E,68,N],[12,"data",E,E,68,N],[12,"udata",E,E,68,N],[3,R[784],E,E,N,N],[12,"sem_perm",E,E,69,N],[12,"sem_base",E,E,69,N],[12,"sem_nsems",E,E,69,N],[12,"sem_otime",E,E,69,N],[12,"sem_pad1",E,E,69,N],[12,"sem_ctime",E,E,69,N],[12,"sem_pad2",E,E,69,N],[12,"sem_pad3",E,E,69,N],[3,R[785],E,E,N,N],[12,"shm_perm",E,E,70,N],[12,"shm_segsz",E,E,70,N],[12,"shm_lpid",E,E,70,N],[12,"shm_cpid",E,E,70,N],[12,"shm_nattch",E,E,70,N],[12,"shm_atime",E,E,70,N],[12,"shm_dtime",E,E,70,N],[12,"shm_ctime",E,E,70,N],[12,"shm_internal",E,E,70,N],[3,R[770],E,E,N,N],[12,"pth_user_time",E,E,71,N],[12,"pth_system_time",E,E,71,N],[12,"pth_cpu_usage",E,E,71,N],[12,"pth_policy",E,E,71,N],[12,"pth_run_state",E,E,71,N],[12,"pth_flags",E,E,71,N],[12,"pth_sleep_time",E,E,71,N],[12,"pth_curpri",E,E,71,N],[12,"pth_priority",E,E,71,N],[12,"pth_maxpriority",E,E,71,N],[12,"pth_name",E,E,71,N],[3,"statfs",E,E,N,N],[12,"f_bsize",E,E,72,N],[12,"f_iosize",E,E,72,N],[12,"f_blocks",E,E,72,N],[12,"f_bfree",E,E,72,N],[12,"f_bavail",E,E,72,N],[12,"f_files",E,E,72,N],[12,"f_ffree",E,E,72,N],[12,"f_fsid",E,E,72,N],[12,"f_owner",E,E,72,N],[12,"f_type",E,E,72,N],[12,"f_flags",E,E,72,N],[12,"f_fssubtype",E,E,72,N],[12,"f_fstypename",E,E,72,N],[12,"f_mntonname",E,E,72,N],[12,"f_mntfromname",E,E,72,N],[12,"f_reserved",E,E,72,N],[3,"dirent",E,E,N,N],[12,"d_ino",E,E,73,N],[12,"d_seekoff",E,E,73,N],[12,"d_reclen",E,E,73,N],[12,"d_namlen",E,E,73,N],[12,"d_type",E,E,73,N],[12,"d_name",E,E,73,N],[3,R[771],E,E,N,N],[3,R[772],E,E,N,N],[3,R[773],E,E,N,N],[3,R[774],E,E,N,N],[12,"ss_len",E,E,74,N],[12,"ss_family",E,E,74,N],[3,"utmpx",E,E,N,N],[12,"ut_user",E,E,75,N],[12,"ut_id",E,E,75,N],[12,"ut_line",E,E,75,N],[12,"ut_pid",E,E,75,N],[12,"ut_type",E,E,75,N],[12,"ut_tv",E,E,75,N],[12,"ut_host",E,E,75,N],[3,R[775],E,E,N,N],[12,"tv_sec",E,E,76,N],[12,"tv_usec",E,E,76,N],[3,"if_data",E,E,N,N],[12,"ifi_type",E,E,77,N],[12,"ifi_typelen",E,E,77,N],[12,"ifi_physical",E,E,77,N],[12,"ifi_addrlen",E,E,77,N],[12,"ifi_hdrlen",E,E,77,N],[12,"ifi_recvquota",E,E,77,N],[12,"ifi_xmitquota",E,E,77,N],[12,"ifi_unused1",E,E,77,N],[12,"ifi_mtu",E,E,77,N],[12,"ifi_metric",E,E,77,N],[12,"ifi_baudrate",E,E,77,N],[12,"ifi_ipackets",E,E,77,N],[12,"ifi_ierrors",E,E,77,N],[12,"ifi_opackets",E,E,77,N],[12,"ifi_oerrors",E,E,77,N],[12,"ifi_collisions",E,E,77,N],[12,"ifi_ibytes",E,E,77,N],[12,"ifi_obytes",E,E,77,N],[12,"ifi_imcasts",E,E,77,N],[12,"ifi_omcasts",E,E,77,N],[12,"ifi_iqdrops",E,E,77,N],[12,"ifi_noproto",E,E,77,N],[12,"ifi_recvtiming",E,E,77,N],[12,"ifi_xmittiming",E,E,77,N],[12,"ifi_lastchange",E,E,77,N],[12,"ifi_unused2",E,E,77,N],[12,"ifi_hwassist",E,E,77,N],[12,"ifi_reserved1",E,E,77,N],[12,"ifi_reserved2",E,E,77,N],[3,"bpf_hdr",E,E,N,N],[12,"bh_tstamp",E,E,78,N],[12,"bh_caplen",E,E,78,N],[12,"bh_datalen",E,E,78,N],[12,"bh_hdrlen",E,E,78,N],[3,R[776],E,E,N,N],[3,R[786],E,E,N,N],[12,"s6_addr",E,E,79,N],[19,"semun",E,E,N,N],[12,"val",E,E,80,N],[12,"buf",E,E,80,N],[12,"array",E,E,80,N],[4,"DIR",E,E,N,N],[4,R[787],E,E,N,N],[4,"FILE",E,E,N,N],[4,"fpos_t",E,E,N,N],[4,R[788],E,E,N,N],[5,"CMSG_FIRSTHDR",E,E,N,[[]]],[5,"FD_CLR",E,E,N,[[["c_int"]]]],[5,"FD_ISSET",E,E,N,[[["c_int"]],["bool"]]],[5,"FD_SET",E,E,N,[[["c_int"]]]],[5,"FD_ZERO",E,E,N,[[]]],[5,"WTERMSIG",E,E,N,[[["c_int"]],["c_int"]]],[5,"WIFEXITED",E,E,N,[[["c_int"]],["bool"]]],[5,"WEXITSTATUS",E,E,N,[[["c_int"]],["c_int"]]],[5,"WCOREDUMP",E,E,N,[[["c_int"]],["bool"]]],[5,"QCMD",E,E,N,[[["c_int"]],["c_int"]]],[5,"CMSG_NXTHDR",E,E,N,[[]]],[5,"CMSG_DATA",E,E,N,[[]]],[5,"CMSG_SPACE",E,E,N,[[["c_uint"]],["c_uint"]]],[5,"CMSG_LEN",E,E,N,[[["c_uint"]],["c_uint"]]],[5,"WSTOPSIG",E,E,N,[[["c_int"]],["c_int"]]],[5,"_WSTATUS",E,E,N,[[["c_int"]],["c_int"]]],[5,"WIFCONTINUED",E,E,N,[[["c_int"]],["bool"]]],[5,"WIFSIGNALED",E,E,N,[[["c_int"]],["bool"]]],[5,"WIFSTOPPED",E,E,N,[[["c_int"]],["bool"]]],[5,"isalnum",E,E,N,N],[5,"isalpha",E,E,N,N],[5,"iscntrl",E,E,N,N],[5,"isdigit",E,E,N,N],[5,"isgraph",E,E,N,N],[5,"islower",E,E,N,N],[5,"isprint",E,E,N,N],[5,"ispunct",E,E,N,N],[5,"isspace",E,E,N,N],[5,"isupper",E,E,N,N],[5,"isxdigit",E,E,N,N],[5,"tolower",E,E,N,N],[5,"toupper",E,E,N,N],[5,"fopen",E,E,N,N],[5,"freopen",E,E,N,N],[5,"fflush",E,E,N,N],[5,"fclose",E,E,N,N],[5,"remove",E,E,N,N],[5,"rename",E,E,N,N],[5,"tmpfile",E,E,N,N],[5,"setvbuf",E,E,N,N],[5,"setbuf",E,E,N,N],[5,"getchar",E,E,N,N],[5,"putchar",E,E,N,N],[5,"fgetc",E,E,N,N],[5,"fgets",E,E,N,N],[5,"fputc",E,E,N,N],[5,"fputs",E,E,N,N],[5,"puts",E,E,N,N],[5,"ungetc",E,E,N,N],[5,"fread",E,E,N,N],[5,"fwrite",E,E,N,N],[5,"fseek",E,E,N,N],[5,"ftell",E,E,N,N],[5,"rewind",E,E,N,N],[5,"fgetpos",E,E,N,N],[5,"fsetpos",E,E,N,N],[5,"feof",E,E,N,N],[5,"ferror",E,E,N,N],[5,"perror",E,E,N,N],[5,"atoi",E,E,N,N],[5,"strtod",E,E,N,N],[5,"strtol",E,E,N,N],[5,"strtoul",E,E,N,N],[5,"calloc",E,E,N,N],[5,"malloc",E,E,N,N],[5,"realloc",E,E,N,N],[5,"free",E,E,N,N],[5,"abort",E,E,N,N],[5,"exit",E,E,N,N],[5,"_exit",E,E,N,N],[5,"atexit",E,E,N,N],[5,"system",E,E,N,N],[5,"getenv",E,E,N,N],[5,"strcpy",E,E,N,N],[5,"strncpy",E,E,N,N],[5,"strcat",E,E,N,N],[5,"strncat",E,E,N,N],[5,"strcmp",E,E,N,N],[5,"strncmp",E,E,N,N],[5,"strcoll",E,E,N,N],[5,"strchr",E,E,N,N],[5,"strrchr",E,E,N,N],[5,"strspn",E,E,N,N],[5,"strcspn",E,E,N,N],[5,"strdup",E,E,N,N],[5,"strpbrk",E,E,N,N],[5,"strstr",E,E,N,N],[5,"strcasecmp",E,E,N,N],[5,"strncasecmp",E,E,N,N],[5,"strlen",E,E,N,N],[5,"strnlen",E,E,N,N],[5,"strerror",E,E,N,N],[5,"strtok",E,E,N,N],[5,"strxfrm",E,E,N,N],[5,"wcslen",E,E,N,N],[5,"wcstombs",E,E,N,N],[5,"memchr",E,E,N,N],[5,"memcmp",E,E,N,N],[5,"memcpy",E,E,N,N],[5,"memmove",E,E,N,N],[5,"memset",E,E,N,N],[5,"getpwnam",E,E,N,N],[5,"getpwuid",E,E,N,N],[5,"fprintf",E,E,N,N],[5,"printf",E,E,N,N],[5,"snprintf",E,E,N,N],[5,"sprintf",E,E,N,N],[5,"fscanf",E,E,N,N],[5,"scanf",E,E,N,N],[5,"sscanf",E,E,N,N],[5,"getchar_unlocked",E,E,N,N],[5,"putchar_unlocked",E,E,N,N],[5,"socket",E,E,N,N],[5,"connect",E,E,N,N],[5,"listen",E,E,N,N],[5,"accept",E,E,N,N],[5,R[1895],E,E,N,N],[5,R[1896],E,E,N,N],[5,R[1894],E,E,N,N],[5,"socketpair",E,E,N,N],[5,"sendto",E,E,N,N],[5,R[2344],E,E,N,N],[5,"chmod",E,E,N,N],[5,"fchmod",E,E,N,N],[5,"fstat",E,E,N,N],[5,"mkdir",E,E,N,N],[5,"stat",E,E,N,N],[5,"pclose",E,E,N,N],[5,"fdopen",E,E,N,N],[5,"fileno",E,E,N,N],[5,"open",E,E,N,N],[5,"creat",E,E,N,N],[5,"fcntl",E,E,N,N],[5,"opendir",E,E,N,N],[5,"fdopendir",E,E,N,N],[5,"readdir",E,E,N,N],[5,"readdir_r",E,E,N,N],[5,"closedir",E,E,N,N],[5,"rewinddir",E,E,N,N],[5,"openat",E,E,N,N],[5,"fchmodat",E,E,N,N],[5,"fchown",E,E,N,N],[5,"fchownat",E,E,N,N],[5,"fstatat",E,E,N,N],[5,"linkat",E,E,N,N],[5,"mkdirat",E,E,N,N],[5,"readlinkat",E,E,N,N],[5,"renameat",E,E,N,N],[5,"symlinkat",E,E,N,N],[5,"unlinkat",E,E,N,N],[5,"access",E,E,N,N],[5,"alarm",E,E,N,N],[5,"chdir",E,E,N,N],[5,"fchdir",E,E,N,N],[5,"chown",E,E,N,N],[5,"lchown",E,E,N,N],[5,"close",E,E,N,N],[5,"dup",E,E,N,N],[5,"dup2",E,E,N,N],[5,"execl",E,E,N,N],[5,"execle",E,E,N,N],[5,"execlp",E,E,N,N],[5,"execv",E,E,N,N],[5,"execve",E,E,N,N],[5,"execvp",E,E,N,N],[5,"fork",E,E,N,N],[5,"fpathconf",E,E,N,N],[5,"getcwd",E,E,N,N],[5,"getegid",E,E,N,N],[5,"geteuid",E,E,N,N],[5,"getgid",E,E,N,N],[5,"getgroups",E,E,N,N],[5,"getlogin",E,E,N,N],[5,"getopt",E,E,N,N],[5,"getpgid",E,E,N,N],[5,"getpgrp",E,E,N,N],[5,"getpid",E,E,N,N],[5,"getppid",E,E,N,N],[5,"getuid",E,E,N,N],[5,"isatty",E,E,N,N],[5,"link",E,E,N,N],[5,"lseek",E,E,N,N],[5,"pathconf",E,E,N,N],[5,"pause",E,E,N,N],[5,"pipe",E,E,N,N],[5,"posix_memalign",E,E,N,N],[5,"read",E,E,N,N],[5,"rmdir",E,E,N,N],[5,"seteuid",E,E,N,N],[5,"setegid",E,E,N,N],[5,"setgid",E,E,N,N],[5,"setpgid",E,E,N,N],[5,"setsid",E,E,N,N],[5,"setuid",E,E,N,N],[5,"sleep",E,E,N,N],[5,"nanosleep",E,E,N,N],[5,"tcgetpgrp",E,E,N,N],[5,"tcsetpgrp",E,E,N,N],[5,"ttyname",E,E,N,N],[5,"unlink",E,E,N,N],[5,"wait",E,E,N,N],[5,"waitpid",E,E,N,N],[5,"write",E,E,N,N],[5,"pread",E,E,N,N],[5,"pwrite",E,E,N,N],[5,"umask",E,E,N,N],[5,"utime",E,E,N,N],[5,"kill",E,E,N,N],[5,"killpg",E,E,N,N],[5,"mlock",E,E,N,N],[5,"munlock",E,E,N,N],[5,"mlockall",E,E,N,N],[5,"munlockall",E,E,N,N],[5,"mmap",E,E,N,N],[5,"munmap",E,E,N,N],[5,R[1793],E,E,N,N],[5,"if_indextoname",E,E,N,N],[5,"lstat",E,E,N,N],[5,"fsync",E,E,N,N],[5,"setenv",E,E,N,N],[5,"unsetenv",E,E,N,N],[5,"symlink",E,E,N,N],[5,R[817],E,E,N,N],[5,"ftruncate",E,E,N,N],[5,"signal",E,E,N,N],[5,"getrlimit",E,E,N,N],[5,"setrlimit",E,E,N,N],[5,"getrusage",E,E,N,N],[5,"realpath",E,E,N,N],[5,"flock",E,E,N,N],[5,"gettimeofday",E,E,N,N],[5,"times",E,E,N,N],[5,R[1872],E,E,N,N],[5,"pthread_join",E,E,N,N],[5,"pthread_exit",E,E,N,N],[5,"pthread_attr_init",E,E,N,N],[5,"pthread_attr_destroy",E,E,N,N],[5,"pthread_attr_setstacksize",E,E,N,N],[5,"pthread_attr_setdetachstate",E,E,N,N],[5,"pthread_detach",E,E,N,N],[5,"sched_yield",E,E,N,N],[5,"pthread_key_create",E,E,N,N],[5,"pthread_key_delete",E,E,N,N],[5,"pthread_getspecific",E,E,N,N],[5,"pthread_setspecific",E,E,N,N],[5,"pthread_mutex_init",E,E,N,N],[5,"pthread_mutex_destroy",E,E,N,N],[5,"pthread_mutex_lock",E,E,N,N],[5,"pthread_mutex_trylock",E,E,N,N],[5,"pthread_mutex_unlock",E,E,N,N],[5,"pthread_mutexattr_init",E,E,N,N],[5,"pthread_mutexattr_destroy",E,E,N,N],[5,"pthread_mutexattr_settype",E,E,N,N],[5,"pthread_cond_init",E,E,N,N],[5,"pthread_cond_wait",E,E,N,N],[5,"pthread_cond_timedwait",E,E,N,N],[5,"pthread_cond_signal",E,E,N,N],[5,"pthread_cond_broadcast",E,E,N,N],[5,"pthread_cond_destroy",E,E,N,N],[5,"pthread_condattr_init",E,E,N,N],[5,"pthread_condattr_destroy",E,E,N,N],[5,"pthread_rwlock_init",E,E,N,N],[5,"pthread_rwlock_destroy",E,E,N,N],[5,"pthread_rwlock_rdlock",E,E,N,N],[5,"pthread_rwlock_tryrdlock",E,E,N,N],[5,"pthread_rwlock_wrlock",E,E,N,N],[5,"pthread_rwlock_trywrlock",E,E,N,N],[5,"pthread_rwlock_unlock",E,E,N,N],[5,"pthread_rwlockattr_init",E,E,N,N],[5,"pthread_rwlockattr_destroy",E,E,N,N],[5,"strerror_r",E,E,N,N],[5,R[1893],E,E,N,N],[5,"raise",E,E,N,N],[5,R[741],E,E,N,N],[5,"utimes",E,E,N,N],[5,"dlopen",E,E,N,N],[5,"dlerror",E,E,N,N],[5,"dlsym",E,E,N,N],[5,"dlclose",E,E,N,N],[5,"dladdr",E,E,N,N],[5,"getaddrinfo",E,E,N,N],[5,"freeaddrinfo",E,E,N,N],[5,"gai_strerror",E,E,N,N],[5,"res_init",E,E,N,N],[5,"gmtime_r",E,E,N,N],[5,"localtime_r",E,E,N,N],[5,"mktime",E,E,N,N],[5,"time",E,E,N,N],[5,"gmtime",E,E,N,N],[5,"localtime",E,E,N,N],[5,"difftime",E,E,N,N],[5,"mknod",E,E,N,N],[5,R[1935],E,E,N,N],[5,"getservbyname",E,E,N,N],[5,"getprotobyname",E,E,N,N],[5,"getprotobynumber",E,E,N,N],[5,"chroot",E,E,N,N],[5,"usleep",E,E,N,N],[5,"send",E,E,N,N],[5,"recv",E,E,N,N],[5,"putenv",E,E,N,N],[5,"poll",E,E,N,N],[5,"select",E,E,N,N],[5,"setlocale",E,E,N,N],[5,"localeconv",E,E,N,N],[5,"sem_wait",E,E,N,N],[5,"sem_trywait",E,E,N,N],[5,"sem_post",E,E,N,N],[5,"statvfs",E,E,N,N],[5,"fstatvfs",E,E,N,N],[5,"readlink",E,E,N,N],[5,"sigemptyset",E,E,N,N],[5,"sigaddset",E,E,N,N],[5,"sigfillset",E,E,N,N],[5,"sigdelset",E,E,N,N],[5,"sigismember",E,E,N,N],[5,R[1879],E,E,N,N],[5,"sigpending",E,E,N,N],[5,"timegm",E,E,N,N],[5,"getsid",E,E,N,N],[5,"sysconf",E,E,N,N],[5,"mkfifo",E,E,N,N],[5,"pselect",E,E,N,N],[5,"fseeko",E,E,N,N],[5,"ftello",E,E,N,N],[5,"tcdrain",E,E,N,N],[5,R[1914],E,E,N,N],[5,R[1915],E,E,N,N],[5,R[1916],E,E,N,N],[5,R[1917],E,E,N,N],[5,"tcgetattr",E,E,N,N],[5,"tcsetattr",E,E,N,N],[5,"tcflow",E,E,N,N],[5,"tcflush",E,E,N,N],[5,"tcgetsid",E,E,N,N],[5,R[1918],E,E,N,N],[5,"mkstemp",E,E,N,N],[5,"mkdtemp",E,E,N,N],[5,"tmpnam",E,E,N,N],[5,"openlog",E,E,N,N],[5,"closelog",E,E,N,N],[5,"setlogmask",E,E,N,N],[5,"syslog",E,E,N,N],[5,"nice",E,E,N,N],[5,"grantpt",E,E,N,N],[5,R[1809],E,E,N,N],[5,"ptsname",E,E,N,N],[5,"unlockpt",E,E,N,N],[5,"strcasestr",E,E,N,N],[5,"getline",E,E,N,N],[5,"cfmakeraw",E,E,N,N],[5,"cfsetspeed",E,E,N,N],[5,"abs",E,E,N,N],[5,"atof",E,E,N,N],[5,"labs",E,E,N,N],[5,"rand",E,E,N,N],[5,"srand",E,E,N,N],[5,"getifaddrs",E,E,N,N],[5,"freeifaddrs",E,E,N,N],[5,"setgroups",E,E,N,N],[5,"ioctl",E,E,N,N],[5,"kqueue",E,E,N,N],[5,"unmount",E,E,N,N],[5,"syscall",E,E,N,N],[5,"getpwent",E,E,N,N],[5,"setpwent",E,E,N,N],[5,"endpwent",E,E,N,N],[5,"setgrent",E,E,N,N],[5,"endgrent",E,E,N,N],[5,"getgrent",E,E,N,N],[5,"getprogname",E,E,N,N],[5,"setprogname",E,E,N,N],[5,"getloadavg",E,E,N,N],[5,R[742],E,E,N,N],[5,"if_freenameindex",E,E,N,N],[5,"getpeereid",E,E,N,N],[5,"glob",E,E,N,N],[5,"globfree",E,E,N,N],[5,"posix_madvise",E,E,N,N],[5,"shm_unlink",E,E,N,N],[5,"seekdir",E,E,N,N],[5,"telldir",E,E,N,N],[5,"madvise",E,E,N,N],[5,"msync",E,E,N,N],[5,"recvfrom",E,E,N,N],[5,"mkstemps",E,E,N,N],[5,"futimes",E,E,N,N],[5,"nl_langinfo",E,E,N,N],[5,"bind",E,E,N,N],[5,"writev",E,E,N,N],[5,"readv",E,E,N,N],[5,"sendmsg",E,E,N,N],[5,"recvmsg",E,E,N,N],[5,"sync",E,E,N,N],[5,"getgrgid_r",E,E,N,N],[5,"sigaltstack",E,E,N,N],[5,"sem_close",E,E,N,N],[5,"getdtablesize",E,E,N,N],[5,"getgrnam_r",E,E,N,N],[5,R[1878],E,E,N,N],[5,"sem_open",E,E,N,N],[5,"getgrnam",E,E,N,N],[5,"pthread_cancel",E,E,N,N],[5,"pthread_kill",E,E,N,N],[5,"sem_unlink",E,E,N,N],[5,"getpwnam_r",E,E,N,N],[5,"getpwuid_r",E,E,N,N],[5,"sigwait",E,E,N,N],[5,"pthread_atfork",E,E,N,N],[5,"getgrgid",E,E,N,N],[5,"popen",E,E,N,N],[5,"faccessat",E,E,N,N],[5,"pthread_create",E,E,N,N],[5,"acct",E,E,N,N],[5,"daemon",E,E,N,N],[5,"sem_destroy",E,E,N,N],[5,"sem_init",E,E,N,N],[5,"aio_read",E,E,N,N],[5,"aio_write",E,E,N,N],[5,"aio_fsync",E,E,N,N],[5,"aio_error",E,E,N,N],[5,"aio_return",E,E,N,N],[5,R[1813],E,E,N,N],[5,"aio_cancel",E,E,N,N],[5,"chflags",E,E,N,N],[5,"fchflags",E,E,N,N],[5,"clock_getres",E,E,N,N],[5,"clock_gettime",E,E,N,N],[5,"lio_listio",E,E,N,N],[5,"dirfd",E,E,N,N],[5,"lutimes",E,E,N,N],[5,"getutxent",E,E,N,N],[5,"getutxid",E,E,N,N],[5,"getutxline",E,E,N,N],[5,"pututxline",E,E,N,N],[5,"setutxent",E,E,N,N],[5,"endutxent",E,E,N,N],[5,"utmpxname",E,E,N,N],[5,"getnameinfo",E,E,N,N],[5,"mincore",E,E,N,N],[5,"sysctlnametomib",E,E,N,N],[5,"mprotect",E,E,N,N],[5,"semget",E,E,N,N],[5,"semctl",E,E,N,N],[5,"semop",E,E,N,N],[5,"shm_open",E,E,N,N],[5,"ftok",E,E,N,N],[5,"shmat",E,E,N,N],[5,"shmdt",E,E,N,N],[5,"shmctl",E,E,N,N],[5,"shmget",E,E,N,N],[5,"sysctl",E,E,N,N],[5,"sysctlbyname",E,E,N,N],[5,"mach_absolute_time",E,E,N,N],[5,R[743],E,E,N,N],[5,"pthread_setname_np",E,E,N,N],[5,"pthread_get_stackaddr_np",E,E,N,N],[5,"pthread_get_stacksize_np",E,E,N,N],[5,"pthread_condattr_setpshared",E,E,N,N],[5,"pthread_condattr_getpshared",E,E,N,N],[5,"pthread_mutexattr_setpshared",E,E,N,N],[5,"pthread_mutexattr_getpshared",E,E,N,N],[5,"pthread_rwlockattr_getpshared",E,E,N,N],[5,"pthread_rwlockattr_setpshared",E,E,N,N],[5,"__error",E,E,N,N],[5,R[1406],E,E,N,N],[5,"statfs",E,E,N,N],[5,"fstatfs",E,E,N,N],[5,"kevent",E,E,N,N],[5,"kevent64",E,E,N,N],[5,"mount",E,E,N,N],[5,"ptrace",E,E,N,N],[5,"quotactl",E,E,N,N],[5,R[1934],E,E,N,N],[5,"sendfile",E,E,N,N],[5,"futimens",E,E,N,N],[5,"utimensat",E,E,N,N],[5,"openpty",E,E,N,N],[5,"forkpty",E,E,N,N],[5,"duplocale",E,E,N,N],[5,"freelocale",E,E,N,N],[5,"localeconv_l",E,E,N,N],[5,"newlocale",E,E,N,N],[5,"uselocale",E,E,N,N],[5,"querylocale",E,E,N,N],[5,"getpriority",E,E,N,N],[5,"setpriority",E,E,N,N],[5,"getdomainname",E,E,N,N],[5,"setdomainname",E,E,N,N],[5,"getxattr",E,E,N,N],[5,"fgetxattr",E,E,N,N],[5,"setxattr",E,E,N,N],[5,"fsetxattr",E,E,N,N],[5,"listxattr",E,E,N,N],[5,"flistxattr",E,E,N,N],[5,"removexattr",E,E,N,N],[5,"renamex_np",E,E,N,N],[5,"renameatx_np",E,E,N,N],[5,"fremovexattr",E,E,N,N],[5,"getgrouplist",E,E,N,N],[5,"initgroups",E,E,N,N],[5,"waitid",E,E,N,N],[5,"brk",E,E,N,N],[5,"sbrk",E,E,N,N],[5,"settimeofday",E,E,N,N],[5,"_dyld_image_count",E,E,N,N],[5,"_dyld_get_image_header",E,E,N,N],[5,"_dyld_get_image_vmaddr_slide",E,E,N,N],[5,"_dyld_get_image_name",E,E,N,N],[5,"posix_spawn",E,E,N,N],[5,"posix_spawnp",E,E,N,N],[5,"posix_spawnattr_init",E,E,N,N],[5,"posix_spawnattr_destroy",E,E,N,N],[5,"posix_spawnattr_getsigdefault",E,E,N,N],[5,"posix_spawnattr_setsigdefault",E,E,N,N],[5,"posix_spawnattr_getsigmask",E,E,N,N],[5,"posix_spawnattr_setsigmask",E,E,N,N],[5,"posix_spawnattr_getflags",E,E,N,N],[5,"posix_spawnattr_setflags",E,E,N,N],[5,"posix_spawnattr_getpgroup",E,E,N,N],[5,"posix_spawnattr_setpgroup",E,E,N,N],[5,"posix_spawn_file_actions_init",E,E,N,N],[5,"posix_spawn_file_actions_destroy",E,E,N,N],[5,"posix_spawn_file_actions_addopen",E,E,N,N],[5,"posix_spawn_file_actions_addclose",E,E,N,N],[5,"posix_spawn_file_actions_adddup2",E,E,N,N],[5,"uname",E,E,N,N],[5,"exchangedata",E,E,N,N],[6,"int8_t",E,E,N,N],[6,"int16_t",E,E,N,N],[6,"int32_t",E,E,N,N],[6,"int64_t",E,E,N,N],[6,"uint8_t",E,E,N,N],[6,"uint16_t",E,E,N,N],[6,"uint32_t",E,E,N,N],[6,"uint64_t",E,E,N,N],[6,"c_schar",E,E,N,N],[6,"c_uchar",E,E,N,N],[6,"c_short",E,E,N,N],[6,"c_ushort",E,E,N,N],[6,"c_int",E,E,N,N],[6,"c_uint",E,E,N,N],[6,"c_float",E,E,N,N],[6,"c_double",E,E,N,N],[6,"c_longlong",E,E,N,N],[6,"c_ulonglong",E,E,N,N],[6,"intmax_t",E,E,N,N],[6,"uintmax_t",E,E,N,N],[6,"size_t",E,E,N,N],[6,"ptrdiff_t",E,E,N,N],[6,"intptr_t",E,E,N,N],[6,"uintptr_t",E,E,N,N],[6,"ssize_t",E,E,N,N],[6,"pid_t",E,E,N,N],[6,"uid_t",E,E,N,N],[6,"gid_t",E,E,N,N],[6,"in_addr_t",E,E,N,N],[6,"in_port_t",E,E,N,N],[6,"sighandler_t",E,E,N,N],[6,"cc_t",E,E,N,N],[6,"wchar_t",E,E,N,N],[6,"off_t",E,E,N,N],[6,"useconds_t",E,E,N,N],[6,"blkcnt_t",E,E,N,N],[6,"socklen_t",E,E,N,N],[6,R[1887],E,E,N,N],[6,"pthread_t",E,E,N,N],[6,"nfds_t",E,E,N,N],[6,"c_char",E,E,N,N],[6,"clock_t",E,E,N,N],[6,"time_t",E,E,N,N],[6,R[1924],E,E,N,N],[6,"dev_t",E,E,N,N],[6,"ino_t",E,E,N,N],[6,"mode_t",E,E,N,N],[6,"nlink_t",E,E,N,N],[6,"blksize_t",E,E,N,N],[6,"rlim_t",E,E,N,N],[6,"mach_timebase_info_data_t",E,E,N,N],[6,"pthread_key_t",E,E,N,N],[6,"sigset_t",E,E,N,N],[6,"clockid_t",E,E,N,N],[6,R[1911],E,E,N,N],[6,R[1912],E,E,N,N],[6,"speed_t",E,E,N,N],[6,R[1921],E,E,N,N],[6,"nl_item",E,E,N,N],[6,"id_t",E,E,N,N],[6,"sem_t",E,E,N,N],[6,"idtype_t",E,E,N,N],[6,"integer_t",E,E,N,N],[6,"cpu_type_t",E,E,N,N],[6,"cpu_subtype_t",E,E,N,N],[6,"vm_prot_t",E,E,N,N],[6,"posix_spawnattr_t",E,E,N,N],[6,"posix_spawn_file_actions_t",E,E,N,N],[6,"key_t",E,E,N,N],[6,"shmatt_t",E,E,N,N],[6,"vm_size_t",E,E,N,N],[6,"c_long",E,E,N,N],[6,"c_ulong",E,E,N,N],[6,"boolean_t",E,E,N,N],[17,"INT_MIN",E,E,N,N],[17,"INT_MAX",E,E,N,N],[17,"SIG_DFL",E,E,N,N],[17,"SIG_IGN",E,E,N,N],[17,"SIG_ERR",E,E,N,N],[17,"DT_UNKNOWN",E,E,N,N],[17,"DT_FIFO",E,E,N,N],[17,"DT_CHR",E,E,N,N],[17,"DT_DIR",E,E,N,N],[17,"DT_BLK",E,E,N,N],[17,"DT_REG",E,E,N,N],[17,"DT_LNK",E,E,N,N],[17,"DT_SOCK",E,E,N,N],[17,"FD_CLOEXEC",E,E,N,N],[17,"USRQUOTA",E,E,N,N],[17,"GRPQUOTA",E,E,N,N],[17,"SIGIOT",E,E,N,N],[17,"S_ISUID",E,E,N,N],[17,"S_ISGID",E,E,N,N],[17,"S_ISVTX",E,E,N,N],[17,"IF_NAMESIZE",E,E,N,N],[17,"IFNAMSIZ",E,E,N,N],[17,"LOG_EMERG",E,E,N,N],[17,"LOG_ALERT",E,E,N,N],[17,"LOG_CRIT",E,E,N,N],[17,"LOG_ERR",E,E,N,N],[17,"LOG_WARNING",E,E,N,N],[17,"LOG_NOTICE",E,E,N,N],[17,"LOG_INFO",E,E,N,N],[17,"LOG_DEBUG",E,E,N,N],[17,"LOG_KERN",E,E,N,N],[17,"LOG_USER",E,E,N,N],[17,"LOG_MAIL",E,E,N,N],[17,"LOG_DAEMON",E,E,N,N],[17,"LOG_AUTH",E,E,N,N],[17,"LOG_SYSLOG",E,E,N,N],[17,"LOG_LPR",E,E,N,N],[17,"LOG_NEWS",E,E,N,N],[17,"LOG_UUCP",E,E,N,N],[17,"LOG_LOCAL0",E,E,N,N],[17,"LOG_LOCAL1",E,E,N,N],[17,"LOG_LOCAL2",E,E,N,N],[17,"LOG_LOCAL3",E,E,N,N],[17,"LOG_LOCAL4",E,E,N,N],[17,"LOG_LOCAL5",E,E,N,N],[17,"LOG_LOCAL6",E,E,N,N],[17,"LOG_LOCAL7",E,E,N,N],[17,"LOG_PID",E,E,N,N],[17,"LOG_CONS",E,E,N,N],[17,"LOG_ODELAY",E,E,N,N],[17,"LOG_NDELAY",E,E,N,N],[17,"LOG_NOWAIT",E,E,N,N],[17,"LOG_PRIMASK",E,E,N,N],[17,"LOG_FACMASK",E,E,N,N],[17,"PRIO_PROCESS",E,E,N,N],[17,"PRIO_PGRP",E,E,N,N],[17,"PRIO_USER",E,E,N,N],[17,"PRIO_MIN",E,E,N,N],[17,"PRIO_MAX",E,E,N,N],[17,"IPPROTO_ICMP",E,E,N,N],[17,"IPPROTO_ICMPV6",E,E,N,N],[17,"IPPROTO_TCP",E,E,N,N],[17,"IPPROTO_UDP",E,E,N,N],[17,"IPPROTO_IP",E,E,N,N],[17,"IPPROTO_IPV6",E,E,N,N],[17,"INADDR_LOOPBACK",E,E,N,N],[17,"INADDR_ANY",E,E,N,N],[17,"INADDR_BROADCAST",E,E,N,N],[17,"INADDR_NONE",E,E,N,N],[17,"ARPOP_REQUEST",E,E,N,N],[17,"ARPOP_REPLY",E,E,N,N],[17,"ATF_COM",E,E,N,N],[17,"ATF_PERM",E,E,N,N],[17,"ATF_PUBL",E,E,N,N],[17,"ATF_USETRAILERS",E,E,N,N],[17,"LC_ALL",E,E,N,N],[17,"LC_COLLATE",E,E,N,N],[17,"LC_CTYPE",E,E,N,N],[17,"LC_MONETARY",E,E,N,N],[17,"LC_NUMERIC",E,E,N,N],[17,"LC_TIME",E,E,N,N],[17,"LC_MESSAGES",E,E,N,N],[17,"FIOCLEX",E,E,N,N],[17,"FIONBIO",E,E,N,N],[17,"PATH_MAX",E,E,N,N],[17,"SA_ONSTACK",E,E,N,N],[17,"SA_SIGINFO",E,E,N,N],[17,"SA_RESTART",E,E,N,N],[17,R[1882],E,E,N,N],[17,R[1880],E,E,N,N],[17,"SA_NODEFER",E,E,N,N],[17,R[1881],E,E,N,N],[17,"SS_ONSTACK",E,E,N,N],[17,"SS_DISABLE",E,E,N,N],[17,"SIGCHLD",E,E,N,N],[17,"SIGBUS",E,E,N,N],[17,"SIGUSR1",E,E,N,N],[17,"SIGUSR2",E,E,N,N],[17,"SIGCONT",E,E,N,N],[17,"SIGSTOP",E,E,N,N],[17,"SIGTSTP",E,E,N,N],[17,"SIGURG",E,E,N,N],[17,"SIGIO",E,E,N,N],[17,"SIGSYS",E,E,N,N],[17,"SIGTTIN",E,E,N,N],[17,"SIGTTOU",E,E,N,N],[17,"SIGXCPU",E,E,N,N],[17,"SIGXFSZ",E,E,N,N],[17,"SIGVTALRM",E,E,N,N],[17,"SIGPROF",E,E,N,N],[17,"SIGWINCH",E,E,N,N],[17,"SIGINFO",E,E,N,N],[17,R[1875],E,E,N,N],[17,"SIG_BLOCK",E,E,N,N],[17,R[1874],E,E,N,N],[17,"IP_TOS",E,E,N,N],[17,"IP_MULTICAST_IF",E,E,N,N],[17,"IP_MULTICAST_TTL",E,E,N,N],[17,"IP_MULTICAST_LOOP",E,E,N,N],[17,"IPV6_UNICAST_HOPS",E,E,N,N],[17,"IPV6_MULTICAST_IF",E,E,N,N],[17,"IPV6_MULTICAST_HOPS",E,E,N,N],[17,"IPV6_MULTICAST_LOOP",E,E,N,N],[17,"IPV6_V6ONLY",E,E,N,N],[17,"IPTOS_ECN_NOTECT",E,E,N,N],[17,"IPTOS_ECN_MASK",E,E,N,N],[17,"IPTOS_ECN_ECT1",E,E,N,N],[17,"IPTOS_ECN_ECT0",E,E,N,N],[17,"IPTOS_ECN_CE",E,E,N,N],[17,"ST_RDONLY",E,E,N,N],[17,"SCM_RIGHTS",E,E,N,N],[17,"NCCS",E,E,N,N],[17,"O_ACCMODE",E,E,N,N],[17,"O_RDONLY",E,E,N,N],[17,"O_WRONLY",E,E,N,N],[17,"O_RDWR",E,E,N,N],[17,"O_APPEND",E,E,N,N],[17,"O_CREAT",E,E,N,N],[17,"O_TRUNC",E,E,N,N],[17,"O_EXCL",E,E,N,N],[17,"O_ASYNC",E,E,N,N],[17,"O_SYNC",E,E,N,N],[17,"O_NONBLOCK",E,E,N,N],[17,"O_NOFOLLOW",E,E,N,N],[17,"O_SHLOCK",E,E,N,N],[17,"O_EXLOCK",E,E,N,N],[17,"O_FSYNC",E,E,N,N],[17,"O_NDELAY",E,E,N,N],[17,"F_GETOWN",E,E,N,N],[17,"F_SETOWN",E,E,N,N],[17,"F_RDLCK",E,E,N,N],[17,"F_UNLCK",E,E,N,N],[17,"F_WRLCK",E,E,N,N],[17,"MNT_FORCE",E,E,N,N],[17,"Q_SYNC",E,E,N,N],[17,"Q_QUOTAON",E,E,N,N],[17,"Q_QUOTAOFF",E,E,N,N],[17,"TCIOFF",E,E,N,N],[17,"TCION",E,E,N,N],[17,"TCOOFF",E,E,N,N],[17,"TCOON",E,E,N,N],[17,"TCIFLUSH",E,E,N,N],[17,"TCOFLUSH",E,E,N,N],[17,"TCIOFLUSH",E,E,N,N],[17,"TCSANOW",E,E,N,N],[17,"TCSADRAIN",E,E,N,N],[17,"TCSAFLUSH",E,E,N,N],[17,"VEOF",E,E,N,N],[17,"VEOL",E,E,N,N],[17,"VEOL2",E,E,N,N],[17,"VERASE",E,E,N,N],[17,"VWERASE",E,E,N,N],[17,"VKILL",E,E,N,N],[17,"VREPRINT",E,E,N,N],[17,"VINTR",E,E,N,N],[17,"VQUIT",E,E,N,N],[17,"VSUSP",E,E,N,N],[17,"VDSUSP",E,E,N,N],[17,"VSTART",E,E,N,N],[17,"VSTOP",E,E,N,N],[17,"VLNEXT",E,E,N,N],[17,"VDISCARD",E,E,N,N],[17,"VMIN",E,E,N,N],[17,"VTIME",E,E,N,N],[17,"VSTATUS",E,E,N,N],[17,R[1913],E,E,N,N],[17,"IGNBRK",E,E,N,N],[17,"BRKINT",E,E,N,N],[17,"IGNPAR",E,E,N,N],[17,"PARMRK",E,E,N,N],[17,"INPCK",E,E,N,N],[17,"ISTRIP",E,E,N,N],[17,"INLCR",E,E,N,N],[17,"IGNCR",E,E,N,N],[17,"ICRNL",E,E,N,N],[17,"IXON",E,E,N,N],[17,"IXOFF",E,E,N,N],[17,"IXANY",E,E,N,N],[17,"IMAXBEL",E,E,N,N],[17,"OPOST",E,E,N,N],[17,"ONLCR",E,E,N,N],[17,"OXTABS",E,E,N,N],[17,"ONOEOT",E,E,N,N],[17,"CIGNORE",E,E,N,N],[17,"CSIZE",E,E,N,N],[17,"CS5",E,E,N,N],[17,"CS6",E,E,N,N],[17,"CS7",E,E,N,N],[17,"CS8",E,E,N,N],[17,"CSTOPB",E,E,N,N],[17,"CREAD",E,E,N,N],[17,"PARENB",E,E,N,N],[17,"PARODD",E,E,N,N],[17,"HUPCL",E,E,N,N],[17,"CLOCAL",E,E,N,N],[17,"ECHOKE",E,E,N,N],[17,"ECHOE",E,E,N,N],[17,"ECHOK",E,E,N,N],[17,"ECHO",E,E,N,N],[17,"ECHONL",E,E,N,N],[17,"ECHOPRT",E,E,N,N],[17,"ECHOCTL",E,E,N,N],[17,"ISIG",E,E,N,N],[17,"ICANON",E,E,N,N],[17,"ALTWERASE",E,E,N,N],[17,"IEXTEN",E,E,N,N],[17,"EXTPROC",E,E,N,N],[17,"TOSTOP",E,E,N,N],[17,"FLUSHO",E,E,N,N],[17,"NOKERNINFO",E,E,N,N],[17,"PENDIN",E,E,N,N],[17,"NOFLSH",E,E,N,N],[17,"MDMBUF",E,E,N,N],[17,"WNOHANG",E,E,N,N],[17,"WUNTRACED",E,E,N,N],[17,"RTLD_LAZY",E,E,N,N],[17,"RTLD_NOW",E,E,N,N],[17,"RTLD_NEXT",E,E,N,N],[17,"RTLD_DEFAULT",E,E,N,N],[17,"RTLD_SELF",E,E,N,N],[17,"LOG_CRON",E,E,N,N],[17,"LOG_AUTHPRIV",E,E,N,N],[17,"LOG_FTP",E,E,N,N],[17,"LOG_PERROR",E,E,N,N],[17,"TCP_NODELAY",E,E,N,N],[17,"TCP_MAXSEG",E,E,N,N],[17,"PIPE_BUF",E,E,N,N],[17,"POLLIN",E,E,N,N],[17,"POLLPRI",E,E,N,N],[17,"POLLOUT",E,E,N,N],[17,"POLLERR",E,E,N,N],[17,"POLLHUP",E,E,N,N],[17,"POLLNVAL",E,E,N,N],[17,"POLLRDNORM",E,E,N,N],[17,"POLLWRNORM",E,E,N,N],[17,"POLLRDBAND",E,E,N,N],[17,"POLLWRBAND",E,E,N,N],[17,"_UTX_USERSIZE",E,E,N,N],[17,"_UTX_LINESIZE",E,E,N,N],[17,"_UTX_IDSIZE",E,E,N,N],[17,"_UTX_HOSTSIZE",E,E,N,N],[17,"EMPTY",E,E,N,N],[17,"RUN_LVL",E,E,N,N],[17,"BOOT_TIME",E,E,N,N],[17,"OLD_TIME",E,E,N,N],[17,"NEW_TIME",E,E,N,N],[17,"INIT_PROCESS",E,E,N,N],[17,"LOGIN_PROCESS",E,E,N,N],[17,"USER_PROCESS",E,E,N,N],[17,"DEAD_PROCESS",E,E,N,N],[17,"ACCOUNTING",E,E,N,N],[17,"SIGNATURE",E,E,N,N],[17,"SHUTDOWN_TIME",E,E,N,N],[17,"LC_COLLATE_MASK",E,E,N,N],[17,"LC_CTYPE_MASK",E,E,N,N],[17,"LC_MESSAGES_MASK",E,E,N,N],[17,"LC_MONETARY_MASK",E,E,N,N],[17,"LC_NUMERIC_MASK",E,E,N,N],[17,"LC_TIME_MASK",E,E,N,N],[17,"LC_ALL_MASK",E,E,N,N],[17,"CODESET",E,E,N,N],[17,"D_T_FMT",E,E,N,N],[17,"D_FMT",E,E,N,N],[17,"T_FMT",E,E,N,N],[17,"T_FMT_AMPM",E,E,N,N],[17,"AM_STR",E,E,N,N],[17,"PM_STR",E,E,N,N],[17,"DAY_1",E,E,N,N],[17,"DAY_2",E,E,N,N],[17,"DAY_3",E,E,N,N],[17,"DAY_4",E,E,N,N],[17,"DAY_5",E,E,N,N],[17,"DAY_6",E,E,N,N],[17,"DAY_7",E,E,N,N],[17,"ABDAY_1",E,E,N,N],[17,"ABDAY_2",E,E,N,N],[17,"ABDAY_3",E,E,N,N],[17,"ABDAY_4",E,E,N,N],[17,"ABDAY_5",E,E,N,N],[17,"ABDAY_6",E,E,N,N],[17,"ABDAY_7",E,E,N,N],[17,"MON_1",E,E,N,N],[17,"MON_2",E,E,N,N],[17,"MON_3",E,E,N,N],[17,"MON_4",E,E,N,N],[17,"MON_5",E,E,N,N],[17,"MON_6",E,E,N,N],[17,"MON_7",E,E,N,N],[17,"MON_8",E,E,N,N],[17,"MON_9",E,E,N,N],[17,"MON_10",E,E,N,N],[17,"MON_11",E,E,N,N],[17,"MON_12",E,E,N,N],[17,"ABMON_1",E,E,N,N],[17,"ABMON_2",E,E,N,N],[17,"ABMON_3",E,E,N,N],[17,"ABMON_4",E,E,N,N],[17,"ABMON_5",E,E,N,N],[17,"ABMON_6",E,E,N,N],[17,"ABMON_7",E,E,N,N],[17,"ABMON_8",E,E,N,N],[17,"ABMON_9",E,E,N,N],[17,"ABMON_10",E,E,N,N],[17,"ABMON_11",E,E,N,N],[17,"ABMON_12",E,E,N,N],[17,"CLOCK_REALTIME",E,E,N,N],[17,"CLOCK_MONOTONIC",E,E,N,N],[17,"CLOCK_PROCESS_CPUTIME_ID",E,E,N,N],[17,"CLOCK_THREAD_CPUTIME_ID",E,E,N,N],[17,"ERA",E,E,N,N],[17,"ERA_D_FMT",E,E,N,N],[17,"ERA_D_T_FMT",E,E,N,N],[17,"ERA_T_FMT",E,E,N,N],[17,"ALT_DIGITS",E,E,N,N],[17,"RADIXCHAR",E,E,N,N],[17,"THOUSEP",E,E,N,N],[17,"YESEXPR",E,E,N,N],[17,"NOEXPR",E,E,N,N],[17,"YESSTR",E,E,N,N],[17,"NOSTR",E,E,N,N],[17,"CRNCYSTR",E,E,N,N],[17,"D_MD_ORDER",E,E,N,N],[17,"EXIT_FAILURE",E,E,N,N],[17,"EXIT_SUCCESS",E,E,N,N],[17,"RAND_MAX",E,E,N,N],[17,"EOF",E,E,N,N],[17,"SEEK_SET",E,E,N,N],[17,"SEEK_CUR",E,E,N,N],[17,"SEEK_END",E,E,N,N],[17,"_IOFBF",E,E,N,N],[17,"_IONBF",E,E,N,N],[17,"_IOLBF",E,E,N,N],[17,"BUFSIZ",E,E,N,N],[17,"FOPEN_MAX",E,E,N,N],[17,"FILENAME_MAX",E,E,N,N],[17,"L_tmpnam",E,E,N,N],[17,"TMP_MAX",E,E,N,N],[17,"_PC_LINK_MAX",E,E,N,N],[17,"_PC_MAX_CANON",E,E,N,N],[17,"_PC_MAX_INPUT",E,E,N,N],[17,"_PC_NAME_MAX",E,E,N,N],[17,"_PC_PATH_MAX",E,E,N,N],[17,"_PC_PIPE_BUF",E,E,N,N],[17,"_PC_CHOWN_RESTRICTED",E,E,N,N],[17,"_PC_NO_TRUNC",E,E,N,N],[17,"_PC_VDISABLE",E,E,N,N],[17,"O_DSYNC",E,E,N,N],[17,"O_NOCTTY",E,E,N,N],[17,"O_CLOEXEC",E,E,N,N],[17,R[1776],E,E,N,N],[17,"S_IFIFO",E,E,N,N],[17,"S_IFCHR",E,E,N,N],[17,"S_IFBLK",E,E,N,N],[17,"S_IFDIR",E,E,N,N],[17,"S_IFREG",E,E,N,N],[17,"S_IFLNK",E,E,N,N],[17,"S_IFSOCK",E,E,N,N],[17,"S_IFMT",E,E,N,N],[17,"S_IEXEC",E,E,N,N],[17,"S_IWRITE",E,E,N,N],[17,"S_IREAD",E,E,N,N],[17,"S_IRWXU",E,E,N,N],[17,"S_IXUSR",E,E,N,N],[17,"S_IWUSR",E,E,N,N],[17,"S_IRUSR",E,E,N,N],[17,"S_IRWXG",E,E,N,N],[17,"S_IXGRP",E,E,N,N],[17,"S_IWGRP",E,E,N,N],[17,"S_IRGRP",E,E,N,N],[17,"S_IRWXO",E,E,N,N],[17,"S_IXOTH",E,E,N,N],[17,"S_IWOTH",E,E,N,N],[17,"S_IROTH",E,E,N,N],[17,"F_OK",E,E,N,N],[17,"R_OK",E,E,N,N],[17,"W_OK",E,E,N,N],[17,"X_OK",E,E,N,N],[17,"STDIN_FILENO",E,E,N,N],[17,"STDOUT_FILENO",E,E,N,N],[17,"STDERR_FILENO",E,E,N,N],[17,"F_LOCK",E,E,N,N],[17,"F_TEST",E,E,N,N],[17,"F_TLOCK",E,E,N,N],[17,"F_ULOCK",E,E,N,N],[17,"F_GETLK",E,E,N,N],[17,"F_SETLK",E,E,N,N],[17,"F_SETLKW",E,E,N,N],[17,"SIGHUP",E,E,N,N],[17,"SIGINT",E,E,N,N],[17,"SIGQUIT",E,E,N,N],[17,"SIGILL",E,E,N,N],[17,"SIGABRT",E,E,N,N],[17,"SIGEMT",E,E,N,N],[17,"SIGFPE",E,E,N,N],[17,"SIGKILL",E,E,N,N],[17,"SIGSEGV",E,E,N,N],[17,"SIGPIPE",E,E,N,N],[17,"SIGALRM",E,E,N,N],[17,"SIGTERM",E,E,N,N],[17,"PROT_NONE",E,E,N,N],[17,"PROT_READ",E,E,N,N],[17,"PROT_WRITE",E,E,N,N],[17,"PROT_EXEC",E,E,N,N],[17,"PT_TRACE_ME",E,E,N,N],[17,"PT_READ_I",E,E,N,N],[17,"PT_READ_D",E,E,N,N],[17,"PT_READ_U",E,E,N,N],[17,"PT_WRITE_I",E,E,N,N],[17,"PT_WRITE_D",E,E,N,N],[17,"PT_WRITE_U",E,E,N,N],[17,"PT_CONTINUE",E,E,N,N],[17,"PT_KILL",E,E,N,N],[17,"PT_STEP",E,E,N,N],[17,"PT_ATTACH",E,E,N,N],[17,"PT_DETACH",E,E,N,N],[17,"PT_SIGEXC",E,E,N,N],[17,"PT_THUPDATE",E,E,N,N],[17,"PT_ATTACHEXC",E,E,N,N],[17,"PT_FORCEQUOTA",E,E,N,N],[17,"PT_DENY_ATTACH",E,E,N,N],[17,"PT_FIRSTMACH",E,E,N,N],[17,"MAP_FILE",E,E,N,N],[17,"MAP_SHARED",E,E,N,N],[17,R[1863],E,E,N,N],[17,"MAP_FIXED",E,E,N,N],[17,"MAP_ANON",E,E,N,N],[17,"MAP_ANONYMOUS",E,E,N,N],[17,"VM_FLAGS_FIXED",E,E,N,N],[17,"VM_FLAGS_ANYWHERE",E,E,N,N],[17,"VM_FLAGS_PURGABLE",E,E,N,N],[17,"VM_FLAGS_RANDOM_ADDR",E,E,N,N],[17,"VM_FLAGS_NO_CACHE",E,E,N,N],[17,"VM_FLAGS_RESILIENT_CODESIGN",E,E,N,N],[17,"VM_FLAGS_RESILIENT_MEDIA",E,E,N,N],[17,"VM_FLAGS_OVERWRITE",E,E,N,N],[17,"VM_FLAGS_SUPERPAGE_MASK",E,E,N,N],[17,"VM_FLAGS_RETURN_DATA_ADDR",E,E,N,N],[17,"VM_FLAGS_RETURN_4K_DATA_ADDR",E,E,N,N],[17,"VM_FLAGS_ALIAS_MASK",E,E,N,N],[17,"VM_FLAGS_USER_ALLOCATE",E,E,N,N],[17,"VM_FLAGS_USER_MAP",E,E,N,N],[17,"VM_FLAGS_USER_REMAP",E,E,N,N],[17,"VM_FLAGS_SUPERPAGE_SHIFT",E,E,N,N],[17,"SUPERPAGE_NONE",E,E,N,N],[17,"SUPERPAGE_SIZE_ANY",E,E,N,N],[17,"VM_FLAGS_SUPERPAGE_NONE",E,E,N,N],[17,"VM_FLAGS_SUPERPAGE_SIZE_ANY",E,E,N,N],[17,"SUPERPAGE_SIZE_2MB",E,E,N,N],[17,"VM_FLAGS_SUPERPAGE_SIZE_2MB",E,E,N,N],[17,"VM_MEMORY_MALLOC",E,E,N,N],[17,"VM_MEMORY_MALLOC_SMALL",E,E,N,N],[17,"VM_MEMORY_MALLOC_LARGE",E,E,N,N],[17,"VM_MEMORY_MALLOC_HUGE",E,E,N,N],[17,"VM_MEMORY_SBRK",E,E,N,N],[17,"VM_MEMORY_REALLOC",E,E,N,N],[17,"VM_MEMORY_MALLOC_TINY",E,E,N,N],[17,"VM_MEMORY_MALLOC_LARGE_REUSABLE",E,E,N,N],[17,"VM_MEMORY_MALLOC_LARGE_REUSED",E,E,N,N],[17,"VM_MEMORY_ANALYSIS_TOOL",E,E,N,N],[17,"VM_MEMORY_MALLOC_NANO",E,E,N,N],[17,"VM_MEMORY_MACH_MSG",E,E,N,N],[17,"VM_MEMORY_IOKIT",E,E,N,N],[17,"VM_MEMORY_STACK",E,E,N,N],[17,"VM_MEMORY_GUARD",E,E,N,N],[17,"VM_MEMORY_SHARED_PMAP",E,E,N,N],[17,"VM_MEMORY_DYLIB",E,E,N,N],[17,"VM_MEMORY_OBJC_DISPATCHERS",E,E,N,N],[17,"VM_MEMORY_UNSHARED_PMAP",E,E,N,N],[17,"VM_MEMORY_APPKIT",E,E,N,N],[17,"VM_MEMORY_FOUNDATION",E,E,N,N],[17,"VM_MEMORY_COREGRAPHICS",E,E,N,N],[17,"VM_MEMORY_CORESERVICES",E,E,N,N],[17,"VM_MEMORY_CARBON",E,E,N,N],[17,"VM_MEMORY_JAVA",E,E,N,N],[17,"VM_MEMORY_COREDATA",E,E,N,N],[17,"VM_MEMORY_COREDATA_OBJECTIDS",E,E,N,N],[17,"VM_MEMORY_ATS",E,E,N,N],[17,"VM_MEMORY_LAYERKIT",E,E,N,N],[17,"VM_MEMORY_CGIMAGE",E,E,N,N],[17,"VM_MEMORY_TCMALLOC",E,E,N,N],[17,"VM_MEMORY_COREGRAPHICS_DATA",E,E,N,N],[17,"VM_MEMORY_COREGRAPHICS_SHARED",E,E,N,N],[17,"VM_MEMORY_COREGRAPHICS_FRAMEBUFFERS",E,E,N,N],[17,"VM_MEMORY_COREGRAPHICS_BACKINGSTORES",E,E,N,N],[17,"VM_MEMORY_COREGRAPHICS_XALLOC",E,E,N,N],[17,"VM_MEMORY_COREGRAPHICS_MISC",E,E,N,N],[17,"VM_MEMORY_DYLD",E,E,N,N],[17,"VM_MEMORY_DYLD_MALLOC",E,E,N,N],[17,"VM_MEMORY_SQLITE",E,E,N,N],[17,"VM_MEMORY_JAVASCRIPT_CORE",E,E,N,N],[17,"VM_MEMORY_JAVASCRIPT_JIT_EXECUTABLE_ALLOCATOR",E,E,N,N],[17,"VM_MEMORY_JAVASCRIPT_JIT_REGISTER_FILE",E,E,N,N],[17,"VM_MEMORY_GLSL",E,E,N,N],[17,"VM_MEMORY_OPENCL",E,E,N,N],[17,"VM_MEMORY_COREIMAGE",E,E,N,N],[17,"VM_MEMORY_WEBCORE_PURGEABLE_BUFFERS",E,E,N,N],[17,"VM_MEMORY_IMAGEIO",E,E,N,N],[17,"VM_MEMORY_COREPROFILE",E,E,N,N],[17,"VM_MEMORY_ASSETSD",E,E,N,N],[17,"VM_MEMORY_OS_ALLOC_ONCE",E,E,N,N],[17,"VM_MEMORY_LIBDISPATCH",E,E,N,N],[17,"VM_MEMORY_ACCELERATE",E,E,N,N],[17,"VM_MEMORY_COREUI",E,E,N,N],[17,"VM_MEMORY_COREUIFILE",E,E,N,N],[17,"VM_MEMORY_GENEALOGY",E,E,N,N],[17,"VM_MEMORY_RAWCAMERA",E,E,N,N],[17,"VM_MEMORY_CORPSEINFO",E,E,N,N],[17,"VM_MEMORY_ASL",E,E,N,N],[17,"VM_MEMORY_SWIFT_RUNTIME",E,E,N,N],[17,"VM_MEMORY_SWIFT_METADATA",E,E,N,N],[17,"VM_MEMORY_DHMM",E,E,N,N],[17,"VM_MEMORY_SCENEKIT",E,E,N,N],[17,"VM_MEMORY_SKYWALK",E,E,N,N],[17,"VM_MEMORY_APPLICATION_SPECIFIC_1",E,E,N,N],[17,"VM_MEMORY_APPLICATION_SPECIFIC_16",E,E,N,N],[17,"MAP_FAILED",E,E,N,N],[17,R[1870],E,E,N,N],[17,"MCL_FUTURE",E,E,N,N],[17,"MS_ASYNC",E,E,N,N],[17,R[1867],E,E,N,N],[17,"MS_SYNC",E,E,N,N],[17,R[1868],E,E,N,N],[17,R[1869],E,E,N,N],[17,"EPERM",E,E,N,N],[17,"ENOENT",E,E,N,N],[17,"ESRCH",E,E,N,N],[17,"EINTR",E,E,N,N],[17,"EIO",E,E,N,N],[17,"ENXIO",E,E,N,N],[17,"E2BIG",E,E,N,N],[17,"ENOEXEC",E,E,N,N],[17,"EBADF",E,E,N,N],[17,"ECHILD",E,E,N,N],[17,"EDEADLK",E,E,N,N],[17,"ENOMEM",E,E,N,N],[17,"EACCES",E,E,N,N],[17,"EFAULT",E,E,N,N],[17,"ENOTBLK",E,E,N,N],[17,"EBUSY",E,E,N,N],[17,"EEXIST",E,E,N,N],[17,"EXDEV",E,E,N,N],[17,"ENODEV",E,E,N,N],[17,"ENOTDIR",E,E,N,N],[17,"EISDIR",E,E,N,N],[17,"EINVAL",E,E,N,N],[17,"ENFILE",E,E,N,N],[17,"EMFILE",E,E,N,N],[17,"ENOTTY",E,E,N,N],[17,"ETXTBSY",E,E,N,N],[17,"EFBIG",E,E,N,N],[17,"ENOSPC",E,E,N,N],[17,"ESPIPE",E,E,N,N],[17,"EROFS",E,E,N,N],[17,"EMLINK",E,E,N,N],[17,"EPIPE",E,E,N,N],[17,"EDOM",E,E,N,N],[17,"ERANGE",E,E,N,N],[17,"EAGAIN",E,E,N,N],[17,R[1771],E,E,N,N],[17,R[1752],E,E,N,N],[17,"EALREADY",E,E,N,N],[17,"ENOTSOCK",E,E,N,N],[17,R[1753],E,E,N,N],[17,"EMSGSIZE",E,E,N,N],[17,"EPROTOTYPE",E,E,N,N],[17,R[1754],E,E,N,N],[17,R[1755],E,E,N,N],[17,R[1756],E,E,N,N],[17,"ENOTSUP",E,E,N,N],[17,R[1757],E,E,N,N],[17,R[1758],E,E,N,N],[17,"EADDRINUSE",E,E,N,N],[17,R[1759],E,E,N,N],[17,"ENETDOWN",E,E,N,N],[17,R[1760],E,E,N,N],[17,"ENETRESET",E,E,N,N],[17,R[1761],E,E,N,N],[17,"ECONNRESET",E,E,N,N],[17,"ENOBUFS",E,E,N,N],[17,"EISCONN",E,E,N,N],[17,"ENOTCONN",E,E,N,N],[17,"ESHUTDOWN",E,E,N,N],[17,R[1762],E,E,N,N],[17,"ETIMEDOUT",E,E,N,N],[17,R[1763],E,E,N,N],[17,"ELOOP",E,E,N,N],[17,R[1764],E,E,N,N],[17,"EHOSTDOWN",E,E,N,N],[17,R[1765],E,E,N,N],[17,"ENOTEMPTY",E,E,N,N],[17,"EPROCLIM",E,E,N,N],[17,"EUSERS",E,E,N,N],[17,"EDQUOT",E,E,N,N],[17,"ESTALE",E,E,N,N],[17,"EREMOTE",E,E,N,N],[17,"EBADRPC",E,E,N,N],[17,R[1766],E,E,N,N],[17,R[1767],E,E,N,N],[17,R[1768],E,E,N,N],[17,R[1769],E,E,N,N],[17,"ENOLCK",E,E,N,N],[17,"ENOSYS",E,E,N,N],[17,"EFTYPE",E,E,N,N],[17,"EAUTH",E,E,N,N],[17,"ENEEDAUTH",E,E,N,N],[17,"EPWROFF",E,E,N,N],[17,"EDEVERR",E,E,N,N],[17,"EOVERFLOW",E,E,N,N],[17,"EBADEXEC",E,E,N,N],[17,"EBADARCH",E,E,N,N],[17,"ESHLIBVERS",E,E,N,N],[17,"EBADMACHO",E,E,N,N],[17,"ECANCELED",E,E,N,N],[17,"EIDRM",E,E,N,N],[17,"ENOMSG",E,E,N,N],[17,"EILSEQ",E,E,N,N],[17,"ENOATTR",E,E,N,N],[17,"EBADMSG",E,E,N,N],[17,"EMULTIHOP",E,E,N,N],[17,"ENODATA",E,E,N,N],[17,"ENOLINK",E,E,N,N],[17,"ENOSR",E,E,N,N],[17,"ENOSTR",E,E,N,N],[17,"EPROTO",E,E,N,N],[17,"ETIME",E,E,N,N],[17,"EOPNOTSUPP",E,E,N,N],[17,"ENOPOLICY",E,E,N,N],[17,R[1770],E,E,N,N],[17,"EOWNERDEAD",E,E,N,N],[17,"EQFULL",E,E,N,N],[17,"ELAST",E,E,N,N],[17,"EAI_AGAIN",E,E,N,N],[17,"EAI_BADFLAGS",E,E,N,N],[17,"EAI_FAIL",E,E,N,N],[17,"EAI_FAMILY",E,E,N,N],[17,"EAI_MEMORY",E,E,N,N],[17,"EAI_NODATA",E,E,N,N],[17,"EAI_NONAME",E,E,N,N],[17,"EAI_SERVICE",E,E,N,N],[17,"EAI_SOCKTYPE",E,E,N,N],[17,"EAI_SYSTEM",E,E,N,N],[17,"EAI_OVERFLOW",E,E,N,N],[17,"F_DUPFD",E,E,N,N],[17,R[1773],E,E,N,N],[17,"F_GETFD",E,E,N,N],[17,"F_SETFD",E,E,N,N],[17,"F_GETFL",E,E,N,N],[17,"F_SETFL",E,E,N,N],[17,"F_PREALLOCATE",E,E,N,N],[17,"F_RDADVISE",E,E,N,N],[17,"F_RDAHEAD",E,E,N,N],[17,"F_NOCACHE",E,E,N,N],[17,"F_GETPATH",E,E,N,N],[17,R[1774],E,E,N,N],[17,"F_FREEZE_FS",E,E,N,N],[17,"F_THAW_FS",E,E,N,N],[17,"F_GLOBAL_NOCACHE",E,E,N,N],[17,"F_NODIRECT",E,E,N,N],[17,"F_ALLOCATECONTIG",E,E,N,N],[17,"F_ALLOCATEALL",E,E,N,N],[17,"F_PEOFPOSMODE",E,E,N,N],[17,"F_VOLPOSMODE",E,E,N,N],[17,"AT_FDCWD",E,E,N,N],[17,"AT_EACCESS",E,E,N,N],[17,R[1775],E,E,N,N],[17,"AT_SYMLINK_FOLLOW",E,E,N,N],[17,"AT_REMOVEDIR",E,E,N,N],[17,"TIOCMODG",E,E,N,N],[17,"TIOCMODS",E,E,N,N],[17,"TIOCM_LE",E,E,N,N],[17,"TIOCM_DTR",E,E,N,N],[17,"TIOCM_RTS",E,E,N,N],[17,"TIOCM_ST",E,E,N,N],[17,"TIOCM_SR",E,E,N,N],[17,"TIOCM_CTS",E,E,N,N],[17,"TIOCM_CAR",E,E,N,N],[17,"TIOCM_CD",E,E,N,N],[17,"TIOCM_RNG",E,E,N,N],[17,"TIOCM_RI",E,E,N,N],[17,"TIOCM_DSR",E,E,N,N],[17,"TIOCEXCL",E,E,N,N],[17,"TIOCNXCL",E,E,N,N],[17,"TIOCFLUSH",E,E,N,N],[17,"TIOCGETD",E,E,N,N],[17,"TIOCSETD",E,E,N,N],[17,"TIOCIXON",E,E,N,N],[17,"TIOCIXOFF",E,E,N,N],[17,"TIOCSBRK",E,E,N,N],[17,"TIOCCBRK",E,E,N,N],[17,"TIOCSDTR",E,E,N,N],[17,"TIOCCDTR",E,E,N,N],[17,"TIOCGPGRP",E,E,N,N],[17,"TIOCSPGRP",E,E,N,N],[17,"TIOCOUTQ",E,E,N,N],[17,"TIOCSTI",E,E,N,N],[17,"TIOCNOTTY",E,E,N,N],[17,"TIOCPKT",E,E,N,N],[17,"TIOCPKT_DATA",E,E,N,N],[17,"TIOCPKT_FLUSHREAD",E,E,N,N],[17,"TIOCPKT_FLUSHWRITE",E,E,N,N],[17,"TIOCPKT_STOP",E,E,N,N],[17,"TIOCPKT_START",E,E,N,N],[17,"TIOCPKT_NOSTOP",E,E,N,N],[17,"TIOCPKT_DOSTOP",E,E,N,N],[17,"TIOCPKT_IOCTL",E,E,N,N],[17,"TIOCSTOP",E,E,N,N],[17,"TIOCSTART",E,E,N,N],[17,"TIOCMSET",E,E,N,N],[17,"TIOCMBIS",E,E,N,N],[17,"TIOCMBIC",E,E,N,N],[17,"TIOCMGET",E,E,N,N],[17,"TIOCREMOTE",E,E,N,N],[17,"TIOCGWINSZ",E,E,N,N],[17,"TIOCSWINSZ",E,E,N,N],[17,"TIOCUCNTL",E,E,N,N],[17,"TIOCSTAT",E,E,N,N],[17,"TIOCSCONS",E,E,N,N],[17,"TIOCCONS",E,E,N,N],[17,"TIOCSCTTY",E,E,N,N],[17,"TIOCEXT",E,E,N,N],[17,"TIOCSIG",E,E,N,N],[17,"TIOCDRAIN",E,E,N,N],[17,"TIOCMSDTRWAIT",E,E,N,N],[17,"TIOCMGDTRWAIT",E,E,N,N],[17,"TIOCSDRAINWAIT",E,E,N,N],[17,"TIOCGDRAINWAIT",E,E,N,N],[17,"TIOCDSIMICROCODE",E,E,N,N],[17,"TIOCPTYGRANT",E,E,N,N],[17,"TIOCPTYGNAME",E,E,N,N],[17,"TIOCPTYUNLK",E,E,N,N],[17,"FIONCLEX",E,E,N,N],[17,"FIONREAD",E,E,N,N],[17,"FIOASYNC",E,E,N,N],[17,"FIOSETOWN",E,E,N,N],[17,"FIOGETOWN",E,E,N,N],[17,"FIODTYPE",E,E,N,N],[17,"B0",E,E,N,N],[17,"B50",E,E,N,N],[17,"B75",E,E,N,N],[17,"B110",E,E,N,N],[17,"B134",E,E,N,N],[17,"B150",E,E,N,N],[17,"B200",E,E,N,N],[17,"B300",E,E,N,N],[17,"B600",E,E,N,N],[17,"B1200",E,E,N,N],[17,"B1800",E,E,N,N],[17,"B2400",E,E,N,N],[17,"B4800",E,E,N,N],[17,"B9600",E,E,N,N],[17,"B19200",E,E,N,N],[17,"B38400",E,E,N,N],[17,"B7200",E,E,N,N],[17,"B14400",E,E,N,N],[17,"B28800",E,E,N,N],[17,"B57600",E,E,N,N],[17,"B76800",E,E,N,N],[17,"B115200",E,E,N,N],[17,"B230400",E,E,N,N],[17,"EXTA",E,E,N,N],[17,"EXTB",E,E,N,N],[17,"SIGTRAP",E,E,N,N],[17,"GLOB_APPEND",E,E,N,N],[17,"GLOB_DOOFFS",E,E,N,N],[17,"GLOB_ERR",E,E,N,N],[17,"GLOB_MARK",E,E,N,N],[17,"GLOB_NOCHECK",E,E,N,N],[17,"GLOB_NOSORT",E,E,N,N],[17,"GLOB_NOESCAPE",E,E,N,N],[17,"GLOB_NOSPACE",E,E,N,N],[17,"GLOB_ABORTED",E,E,N,N],[17,"GLOB_NOMATCH",E,E,N,N],[17,"POSIX_MADV_NORMAL",E,E,N,N],[17,"POSIX_MADV_RANDOM",E,E,N,N],[17,"POSIX_MADV_SEQUENTIAL",E,E,N,N],[17,"POSIX_MADV_WILLNEED",E,E,N,N],[17,"POSIX_MADV_DONTNEED",E,E,N,N],[17,"_SC_IOV_MAX",E,E,N,N],[17,"_SC_GETGR_R_SIZE_MAX",E,E,N,N],[17,"_SC_GETPW_R_SIZE_MAX",E,E,N,N],[17,"_SC_LOGIN_NAME_MAX",E,E,N,N],[17,"_SC_MQ_PRIO_MAX",E,E,N,N],[17,"_SC_THREAD_ATTR_STACKADDR",E,E,N,N],[17,"_SC_THREAD_ATTR_STACKSIZE",E,E,N,N],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS",E,E,N,N],[17,"_SC_THREAD_KEYS_MAX",E,E,N,N],[17,"_SC_THREAD_PRIO_INHERIT",E,E,N,N],[17,"_SC_THREAD_PRIO_PROTECT",E,E,N,N],[17,"_SC_THREAD_PRIORITY_SCHEDULING",E,E,N,N],[17,"_SC_THREAD_PROCESS_SHARED",E,E,N,N],[17,"_SC_THREAD_SAFE_FUNCTIONS",E,E,N,N],[17,"_SC_THREAD_STACK_MIN",E,E,N,N],[17,"_SC_THREAD_THREADS_MAX",E,E,N,N],[17,"_SC_THREADS",E,E,N,N],[17,"_SC_TTY_NAME_MAX",E,E,N,N],[17,"_SC_ATEXIT_MAX",E,E,N,N],[17,"_SC_XOPEN_CRYPT",E,E,N,N],[17,"_SC_XOPEN_ENH_I18N",E,E,N,N],[17,"_SC_XOPEN_LEGACY",E,E,N,N],[17,"_SC_XOPEN_REALTIME",E,E,N,N],[17,"_SC_XOPEN_REALTIME_THREADS",E,E,N,N],[17,"_SC_XOPEN_SHM",E,E,N,N],[17,"_SC_XOPEN_UNIX",E,E,N,N],[17,"_SC_XOPEN_VERSION",E,E,N,N],[17,"_SC_XOPEN_XCU_VERSION",E,E,N,N],[17,"_SC_PHYS_PAGES",E,E,N,N],[17,"PTHREAD_PROCESS_PRIVATE",E,E,N,N],[17,"PTHREAD_PROCESS_SHARED",E,E,N,N],[17,"PTHREAD_CREATE_JOINABLE",E,E,N,N],[17,"PTHREAD_CREATE_DETACHED",E,E,N,N],[17,R[1932],E,E,N,N],[17,"RLIMIT_CPU",E,E,N,N],[17,"RLIMIT_FSIZE",E,E,N,N],[17,"RLIMIT_DATA",E,E,N,N],[17,"RLIMIT_STACK",E,E,N,N],[17,"RLIMIT_CORE",E,E,N,N],[17,"RLIMIT_AS",E,E,N,N],[17,"RLIMIT_RSS",E,E,N,N],[17,"RLIMIT_MEMLOCK",E,E,N,N],[17,"RLIMIT_NPROC",E,E,N,N],[17,"RLIMIT_NOFILE",E,E,N,N],[17,"RLIM_NLIMITS",E,E,N,N],[17,"_RLIMIT_POSIX_FLAG",E,E,N,N],[17,"RLIM_INFINITY",E,E,N,N],[17,"RUSAGE_SELF",E,E,N,N],[17,"RUSAGE_CHILDREN",E,E,N,N],[17,R[1853],E,E,N,N],[17,R[1854],E,E,N,N],[17,R[1855],E,E,N,N],[17,R[1856],E,E,N,N],[17,R[1857],E,E,N,N],[17,"MADV_FREE",E,E,N,N],[17,R[1858],E,E,N,N],[17,R[1859],E,E,N,N],[17,R[1860],E,E,N,N],[17,R[1861],E,E,N,N],[17,"MINCORE_INCORE",E,E,N,N],[17,"MINCORE_REFERENCED",E,E,N,N],[17,"MINCORE_MODIFIED",E,E,N,N],[17,"MINCORE_REFERENCED_OTHER",E,E,N,N],[17,"MINCORE_MODIFIED_OTHER",E,E,N,N],[17,"IPPROTO_HOPOPTS",E,"IP6 hop-by-hop options",N,N],[17,"IPPROTO_IGMP",E,"group mgmt protocol",N,N],[17,"IPPROTO_GGP",E,"gateway2 (deprecated)",N,N],[17,"IPPROTO_IPIP",E,"for compatibility",N,N],[17,"IPPROTO_ST",E,"Stream protocol II.",N,N],[17,"IPPROTO_EGP",E,"exterior gateway protocol",N,N],[17,"IPPROTO_PIGP",E,"private interior gateway",N,N],[17,"IPPROTO_RCCMON",E,"BBN RCC Monitoring",N,N],[17,"IPPROTO_NVPII",E,"network voice protocol",N,N],[17,"IPPROTO_PUP",E,"pup",N,N],[17,"IPPROTO_ARGUS",E,"Argus",N,N],[17,"IPPROTO_EMCON",E,"EMCON",N,N],[17,"IPPROTO_XNET",E,"Cross Net Debugger",N,N],[17,"IPPROTO_CHAOS",E,"Chaos",N,N],[17,"IPPROTO_MUX",E,"Multiplexing",N,N],[17,"IPPROTO_MEAS",E,"DCN Measurement Subsystems",N,N],[17,"IPPROTO_HMP",E,"Host Monitoring",N,N],[17,"IPPROTO_PRM",E,"Packet Radio Measurement",N,N],[17,"IPPROTO_IDP",E,"xns idp",N,N],[17,"IPPROTO_TRUNK1",E,"Trunk-1",N,N],[17,"IPPROTO_TRUNK2",E,"Trunk-2",N,N],[17,"IPPROTO_LEAF1",E,"Leaf-1",N,N],[17,"IPPROTO_LEAF2",E,"Leaf-2",N,N],[17,"IPPROTO_RDP",E,"Reliable Data",N,N],[17,"IPPROTO_IRTP",E,"Reliable Transaction",N,N],[17,"IPPROTO_TP",E,"tp-4 w/ class negotiation",N,N],[17,"IPPROTO_BLT",E,"Bulk Data Transfer",N,N],[17,"IPPROTO_NSP",E,"Network Services",N,N],[17,"IPPROTO_INP",E,"Merit Internodal",N,N],[17,"IPPROTO_SEP",E,"Sequential Exchange",N,N],[17,"IPPROTO_3PC",E,"Third Party Connect",N,N],[17,"IPPROTO_IDPR",E,"InterDomain Policy Routing",N,N],[17,"IPPROTO_XTP",E,"XTP",N,N],[17,"IPPROTO_DDP",E,"Datagram Delivery",N,N],[17,"IPPROTO_CMTP",E,"Control Message Transport",N,N],[17,"IPPROTO_TPXX",E,"TP++ Transport",N,N],[17,"IPPROTO_IL",E,"IL transport protocol",N,N],[17,"IPPROTO_SDRP",E,"Source Demand Routing",N,N],[17,"IPPROTO_ROUTING",E,"IP6 routing header",N,N],[17,"IPPROTO_FRAGMENT",E,"IP6 fragmentation header",N,N],[17,"IPPROTO_IDRP",E,"InterDomain Routing",N,N],[17,"IPPROTO_RSVP",E,"resource reservation",N,N],[17,"IPPROTO_GRE",E,"General Routing Encap.",N,N],[17,"IPPROTO_MHRP",E,"Mobile Host Routing",N,N],[17,"IPPROTO_BHA",E,"BHA",N,N],[17,"IPPROTO_ESP",E,"IP6 Encap Sec. Payload",N,N],[17,"IPPROTO_AH",E,"IP6 Auth Header",N,N],[17,"IPPROTO_INLSP",E,"Integ. Net Layer Security",N,N],[17,"IPPROTO_SWIPE",E,"IP with encryption",N,N],[17,"IPPROTO_NHRP",E,"Next Hop Resolution",N,N],[17,"IPPROTO_NONE",E,"IP6 no next header",N,N],[17,"IPPROTO_DSTOPTS",E,"IP6 destination option",N,N],[17,"IPPROTO_AHIP",E,"any host internal protocol",N,N],[17,"IPPROTO_CFTP",E,"CFTP",N,N],[17,"IPPROTO_HELLO",E,"\"hello\" routing protocol",N,N],[17,"IPPROTO_SATEXPAK",E,"SATNET/Backroom EXPAK",N,N],[17,"IPPROTO_KRYPTOLAN",E,"Kryptolan",N,N],[17,"IPPROTO_RVD",E,"Remote Virtual Disk",N,N],[17,"IPPROTO_IPPC",E,"Pluribus Packet Core",N,N],[17,"IPPROTO_ADFS",E,"Any distributed FS",N,N],[17,"IPPROTO_SATMON",E,"Satnet Monitoring",N,N],[17,"IPPROTO_VISA",E,"VISA Protocol",N,N],[17,"IPPROTO_IPCV",E,"Packet Core Utility",N,N],[17,"IPPROTO_CPNX",E,"Comp. Prot. Net. Executive",N,N],[17,"IPPROTO_CPHB",E,"Comp. Prot. HeartBeat",N,N],[17,"IPPROTO_WSN",E,"Wang Span Network",N,N],[17,"IPPROTO_PVP",E,"Packet Video Protocol",N,N],[17,"IPPROTO_BRSATMON",E,"BackRoom SATNET Monitoring",N,N],[17,"IPPROTO_ND",E,"Sun net disk proto (temp.)",N,N],[17,"IPPROTO_WBMON",E,"WIDEBAND Monitoring",N,N],[17,"IPPROTO_WBEXPAK",E,"WIDEBAND EXPAK",N,N],[17,"IPPROTO_EON",E,"ISO cnlp",N,N],[17,"IPPROTO_VMTP",E,"VMTP",N,N],[17,"IPPROTO_SVMTP",E,"Secure VMTP",N,N],[17,"IPPROTO_VINES",E,"Banyon VINES",N,N],[17,"IPPROTO_TTP",E,"TTP",N,N],[17,"IPPROTO_IGP",E,"NSFNET-IGP",N,N],[17,"IPPROTO_DGP",E,"dissimilar gateway prot.",N,N],[17,"IPPROTO_TCF",E,"TCF",N,N],[17,"IPPROTO_IGRP",E,"Cisco/GXS IGRP",N,N],[17,"IPPROTO_OSPFIGP",E,"OSPFIGP",N,N],[17,"IPPROTO_SRPC",E,"Strite RPC protocol",N,N],[17,"IPPROTO_LARP",E,"Locus Address Resoloution",N,N],[17,"IPPROTO_MTP",E,"Multicast Transport",N,N],[17,"IPPROTO_AX25",E,"AX.25 Frames",N,N],[17,"IPPROTO_IPEIP",E,"IP encapsulated in IP",N,N],[17,"IPPROTO_MICP",E,"Mobile Int.ing control",N,N],[17,"IPPROTO_SCCSP",E,"Semaphore Comm. security",N,N],[17,"IPPROTO_ETHERIP",E,"Ethernet IP encapsulation",N,N],[17,"IPPROTO_ENCAP",E,"encapsulation header",N,N],[17,"IPPROTO_APES",E,"any private encr. scheme",N,N],[17,"IPPROTO_GMTP",E,"GMTP",N,N],[17,"IPPROTO_PIM",E,"Protocol Independent Mcast",N,N],[17,"IPPROTO_IPCOMP",E,"payload compression (IPComp)",N,N],[17,"IPPROTO_PGM",E,"PGM",N,N],[17,"IPPROTO_SCTP",E,"SCTP",N,N],[17,"IPPROTO_DIVERT",E,"divert pseudo-protocol",N,N],[17,"IPPROTO_RAW",E,"raw IP packet",N,N],[17,"IPPROTO_MAX",E,E,N,N],[17,"IPPROTO_DONE",E,"last return value of *_input(), meaning \"all job for this…",N,N],[17,"AF_UNSPEC",E,E,N,N],[17,"AF_LOCAL",E,E,N,N],[17,"AF_UNIX",E,E,N,N],[17,"AF_INET",E,E,N,N],[17,"AF_IMPLINK",E,E,N,N],[17,"AF_PUP",E,E,N,N],[17,"AF_CHAOS",E,E,N,N],[17,"AF_NS",E,E,N,N],[17,"AF_ISO",E,E,N,N],[17,"AF_OSI",E,E,N,N],[17,"AF_ECMA",E,E,N,N],[17,"AF_DATAKIT",E,E,N,N],[17,"AF_CCITT",E,E,N,N],[17,"AF_SNA",E,E,N,N],[17,"AF_DECnet",E,E,N,N],[17,"AF_DLI",E,E,N,N],[17,"AF_LAT",E,E,N,N],[17,"AF_HYLINK",E,E,N,N],[17,"AF_APPLETALK",E,E,N,N],[17,"AF_ROUTE",E,E,N,N],[17,"AF_LINK",E,E,N,N],[17,"pseudo_AF_XTP",E,E,N,N],[17,"AF_COIP",E,E,N,N],[17,"AF_CNT",E,E,N,N],[17,"pseudo_AF_RTIP",E,E,N,N],[17,"AF_IPX",E,E,N,N],[17,"AF_SIP",E,E,N,N],[17,"pseudo_AF_PIP",E,E,N,N],[17,"AF_ISDN",E,E,N,N],[17,"AF_E164",E,E,N,N],[17,"pseudo_AF_KEY",E,E,N,N],[17,"AF_INET6",E,E,N,N],[17,"AF_NATM",E,E,N,N],[17,"AF_SYSTEM",E,E,N,N],[17,"AF_NETBIOS",E,E,N,N],[17,"AF_PPP",E,E,N,N],[17,"pseudo_AF_HDRCMPLT",E,E,N,N],[17,"AF_SYS_CONTROL",E,E,N,N],[17,"SYSPROTO_EVENT",E,E,N,N],[17,"SYSPROTO_CONTROL",E,E,N,N],[17,"PF_UNSPEC",E,E,N,N],[17,"PF_LOCAL",E,E,N,N],[17,"PF_UNIX",E,E,N,N],[17,"PF_INET",E,E,N,N],[17,"PF_IMPLINK",E,E,N,N],[17,"PF_PUP",E,E,N,N],[17,"PF_CHAOS",E,E,N,N],[17,"PF_NS",E,E,N,N],[17,"PF_ISO",E,E,N,N],[17,"PF_OSI",E,E,N,N],[17,"PF_ECMA",E,E,N,N],[17,"PF_DATAKIT",E,E,N,N],[17,"PF_CCITT",E,E,N,N],[17,"PF_SNA",E,E,N,N],[17,"PF_DECnet",E,E,N,N],[17,"PF_DLI",E,E,N,N],[17,"PF_LAT",E,E,N,N],[17,"PF_HYLINK",E,E,N,N],[17,"PF_APPLETALK",E,E,N,N],[17,"PF_ROUTE",E,E,N,N],[17,"PF_LINK",E,E,N,N],[17,"PF_XTP",E,E,N,N],[17,"PF_COIP",E,E,N,N],[17,"PF_CNT",E,E,N,N],[17,"PF_SIP",E,E,N,N],[17,"PF_IPX",E,E,N,N],[17,"PF_RTIP",E,E,N,N],[17,"PF_PIP",E,E,N,N],[17,"PF_ISDN",E,E,N,N],[17,"PF_KEY",E,E,N,N],[17,"PF_INET6",E,E,N,N],[17,"PF_NATM",E,E,N,N],[17,"PF_SYSTEM",E,E,N,N],[17,"PF_NETBIOS",E,E,N,N],[17,"PF_PPP",E,E,N,N],[17,"NET_RT_DUMP",E,E,N,N],[17,"NET_RT_FLAGS",E,E,N,N],[17,"NET_RT_IFLIST",E,E,N,N],[17,"SOMAXCONN",E,E,N,N],[17,"SOCK_MAXADDRLEN",E,E,N,N],[17,"SOCK_STREAM",E,E,N,N],[17,"SOCK_DGRAM",E,E,N,N],[17,"SOCK_RAW",E,E,N,N],[17,"SOCK_RDM",E,E,N,N],[17,"SOCK_SEQPACKET",E,E,N,N],[17,"IP_TTL",E,E,N,N],[17,"IP_HDRINCL",E,E,N,N],[17,"IP_RECVDSTADDR",E,E,N,N],[17,"IP_ADD_MEMBERSHIP",E,E,N,N],[17,"IP_DROP_MEMBERSHIP",E,E,N,N],[17,"IP_RECVIF",E,E,N,N],[17,"IP_PKTINFO",E,E,N,N],[17,"IP_RECVTOS",E,E,N,N],[17,"IPV6_JOIN_GROUP",E,E,N,N],[17,"IPV6_LEAVE_GROUP",E,E,N,N],[17,"IPV6_RECVTCLASS",E,E,N,N],[17,"IPV6_TCLASS",E,E,N,N],[17,"IPV6_PKTINFO",E,E,N,N],[17,"IPV6_RECVPKTINFO",E,E,N,N],[17,"TCP_NOPUSH",E,E,N,N],[17,"TCP_NOOPT",E,E,N,N],[17,"TCP_KEEPALIVE",E,E,N,N],[17,"SOL_LOCAL",E,E,N,N],[17,"LOCAL_PEERCRED",E,E,N,N],[17,"LOCAL_PEERPID",E,E,N,N],[17,"LOCAL_PEEREPID",E,E,N,N],[17,"LOCAL_PEERUUID",E,E,N,N],[17,"LOCAL_PEEREUUID",E,E,N,N],[17,"SOL_SOCKET",E,E,N,N],[17,"SO_DEBUG",E,E,N,N],[17,"SO_ACCEPTCONN",E,E,N,N],[17,"SO_REUSEADDR",E,E,N,N],[17,"SO_KEEPALIVE",E,E,N,N],[17,"SO_DONTROUTE",E,E,N,N],[17,"SO_BROADCAST",E,E,N,N],[17,"SO_USELOOPBACK",E,E,N,N],[17,"SO_LINGER",E,E,N,N],[17,"SO_OOBINLINE",E,E,N,N],[17,"SO_REUSEPORT",E,E,N,N],[17,"SO_TIMESTAMP",E,E,N,N],[17,"SO_TIMESTAMP_MONOTONIC",E,E,N,N],[17,"SO_DONTTRUNC",E,E,N,N],[17,"SO_WANTMORE",E,E,N,N],[17,"SO_WANTOOBFLAG",E,E,N,N],[17,"SO_SNDBUF",E,E,N,N],[17,"SO_RCVBUF",E,E,N,N],[17,"SO_SNDLOWAT",E,E,N,N],[17,"SO_RCVLOWAT",E,E,N,N],[17,"SO_SNDTIMEO",E,E,N,N],[17,"SO_RCVTIMEO",E,E,N,N],[17,"SO_ERROR",E,E,N,N],[17,"SO_TYPE",E,E,N,N],[17,"SO_LABEL",E,E,N,N],[17,"SO_PEERLABEL",E,E,N,N],[17,"SO_NREAD",E,E,N,N],[17,"SO_NKE",E,E,N,N],[17,"SO_NOSIGPIPE",E,E,N,N],[17,"SO_NOADDRERR",E,E,N,N],[17,"SO_NWRITE",E,E,N,N],[17,"SO_REUSESHAREUID",E,E,N,N],[17,"SO_NOTIFYCONFLICT",E,E,N,N],[17,"SO_RANDOMPORT",E,E,N,N],[17,"SO_NP_EXTENSIONS",E,E,N,N],[17,"MSG_OOB",E,E,N,N],[17,"MSG_PEEK",E,E,N,N],[17,"MSG_DONTROUTE",E,E,N,N],[17,"MSG_EOR",E,E,N,N],[17,"MSG_TRUNC",E,E,N,N],[17,"MSG_CTRUNC",E,E,N,N],[17,"MSG_WAITALL",E,E,N,N],[17,R[1902],E,E,N,N],[17,"MSG_EOF",E,E,N,N],[17,"MSG_FLUSH",E,E,N,N],[17,"MSG_HOLD",E,E,N,N],[17,"MSG_SEND",E,E,N,N],[17,"MSG_HAVEMORE",E,E,N,N],[17,"MSG_RCVMORE",E,E,N,N],[17,"SCM_TIMESTAMP",E,E,N,N],[17,"SCM_CREDS",E,E,N,N],[17,"IFF_UP",E,E,N,N],[17,R[1794],E,E,N,N],[17,"IFF_DEBUG",E,E,N,N],[17,R[1795],E,E,N,N],[17,R[1796],E,E,N,N],[17,R[1797],E,E,N,N],[17,R[1798],E,E,N,N],[17,"IFF_NOARP",E,E,N,N],[17,R[1799],E,E,N,N],[17,R[1800],E,E,N,N],[17,R[1801],E,E,N,N],[17,R[1802],E,E,N,N],[17,"IFF_LINK0",E,E,N,N],[17,"IFF_LINK1",E,E,N,N],[17,"IFF_LINK2",E,E,N,N],[17,R[1805],E,E,N,N],[17,R[1803],E,E,N,N],[17,"SHUT_RD",E,E,N,N],[17,"SHUT_WR",E,E,N,N],[17,"SHUT_RDWR",E,E,N,N],[17,"LOCK_SH",E,E,N,N],[17,"LOCK_EX",E,E,N,N],[17,"LOCK_NB",E,E,N,N],[17,"LOCK_UN",E,E,N,N],[17,"MAP_COPY",E,E,N,N],[17,"MAP_RENAME",E,E,N,N],[17,R[1864],E,E,N,N],[17,"MAP_NOEXTEND",E,E,N,N],[17,"MAP_HASSEMAPHORE",E,E,N,N],[17,R[1865],E,E,N,N],[17,"MAP_JIT",E,E,N,N],[17,"_SC_ARG_MAX",E,E,N,N],[17,"_SC_CHILD_MAX",E,E,N,N],[17,"_SC_CLK_TCK",E,E,N,N],[17,"_SC_NGROUPS_MAX",E,E,N,N],[17,"_SC_OPEN_MAX",E,E,N,N],[17,"_SC_JOB_CONTROL",E,E,N,N],[17,"_SC_SAVED_IDS",E,E,N,N],[17,"_SC_VERSION",E,E,N,N],[17,"_SC_BC_BASE_MAX",E,E,N,N],[17,"_SC_BC_DIM_MAX",E,E,N,N],[17,"_SC_BC_SCALE_MAX",E,E,N,N],[17,"_SC_BC_STRING_MAX",E,E,N,N],[17,"_SC_COLL_WEIGHTS_MAX",E,E,N,N],[17,"_SC_EXPR_NEST_MAX",E,E,N,N],[17,"_SC_LINE_MAX",E,E,N,N],[17,"_SC_RE_DUP_MAX",E,E,N,N],[17,"_SC_2_VERSION",E,E,N,N],[17,"_SC_2_C_BIND",E,E,N,N],[17,"_SC_2_C_DEV",E,E,N,N],[17,"_SC_2_CHAR_TERM",E,E,N,N],[17,"_SC_2_FORT_DEV",E,E,N,N],[17,"_SC_2_FORT_RUN",E,E,N,N],[17,"_SC_2_LOCALEDEF",E,E,N,N],[17,"_SC_2_SW_DEV",E,E,N,N],[17,"_SC_2_UPE",E,E,N,N],[17,"_SC_STREAM_MAX",E,E,N,N],[17,"_SC_TZNAME_MAX",E,E,N,N],[17,"_SC_ASYNCHRONOUS_IO",E,E,N,N],[17,"_SC_PAGESIZE",E,E,N,N],[17,"_SC_MEMLOCK",E,E,N,N],[17,"_SC_MEMLOCK_RANGE",E,E,N,N],[17,"_SC_MEMORY_PROTECTION",E,E,N,N],[17,"_SC_MESSAGE_PASSING",E,E,N,N],[17,"_SC_PRIORITIZED_IO",E,E,N,N],[17,"_SC_PRIORITY_SCHEDULING",E,E,N,N],[17,"_SC_REALTIME_SIGNALS",E,E,N,N],[17,"_SC_SEMAPHORES",E,E,N,N],[17,"_SC_FSYNC",E,E,N,N],[17,"_SC_SHARED_MEMORY_OBJECTS",E,E,N,N],[17,"_SC_SYNCHRONIZED_IO",E,E,N,N],[17,"_SC_TIMERS",E,E,N,N],[17,"_SC_AIO_LISTIO_MAX",E,E,N,N],[17,"_SC_AIO_MAX",E,E,N,N],[17,"_SC_AIO_PRIO_DELTA_MAX",E,E,N,N],[17,"_SC_DELAYTIMER_MAX",E,E,N,N],[17,"_SC_MQ_OPEN_MAX",E,E,N,N],[17,"_SC_MAPPED_FILES",E,E,N,N],[17,"_SC_RTSIG_MAX",E,E,N,N],[17,"_SC_SEM_NSEMS_MAX",E,E,N,N],[17,"_SC_SEM_VALUE_MAX",E,E,N,N],[17,"_SC_SIGQUEUE_MAX",E,E,N,N],[17,"_SC_TIMER_MAX",E,E,N,N],[17,"_SC_NPROCESSORS_CONF",E,E,N,N],[17,"_SC_NPROCESSORS_ONLN",E,E,N,N],[17,"_SC_2_PBS",E,E,N,N],[17,"_SC_2_PBS_ACCOUNTING",E,E,N,N],[17,"_SC_2_PBS_CHECKPOINT",E,E,N,N],[17,"_SC_2_PBS_LOCATE",E,E,N,N],[17,"_SC_2_PBS_MESSAGE",E,E,N,N],[17,"_SC_2_PBS_TRACK",E,E,N,N],[17,"_SC_ADVISORY_INFO",E,E,N,N],[17,"_SC_BARRIERS",E,E,N,N],[17,"_SC_CLOCK_SELECTION",E,E,N,N],[17,"_SC_CPUTIME",E,E,N,N],[17,"_SC_FILE_LOCKING",E,E,N,N],[17,"_SC_HOST_NAME_MAX",E,E,N,N],[17,"_SC_MONOTONIC_CLOCK",E,E,N,N],[17,"_SC_READER_WRITER_LOCKS",E,E,N,N],[17,"_SC_REGEXP",E,E,N,N],[17,"_SC_SHELL",E,E,N,N],[17,"_SC_SPAWN",E,E,N,N],[17,"_SC_SPIN_LOCKS",E,E,N,N],[17,"_SC_SPORADIC_SERVER",E,E,N,N],[17,"_SC_THREAD_CPUTIME",E,E,N,N],[17,"_SC_THREAD_SPORADIC_SERVER",E,E,N,N],[17,"_SC_TIMEOUTS",E,E,N,N],[17,"_SC_TRACE",E,E,N,N],[17,"_SC_TRACE_EVENT_FILTER",E,E,N,N],[17,"_SC_TRACE_INHERIT",E,E,N,N],[17,"_SC_TRACE_LOG",E,E,N,N],[17,"_SC_TYPED_MEMORY_OBJECTS",E,E,N,N],[17,"_SC_V6_ILP32_OFF32",E,E,N,N],[17,"_SC_V6_ILP32_OFFBIG",E,E,N,N],[17,"_SC_V6_LP64_OFF64",E,E,N,N],[17,"_SC_V6_LPBIG_OFFBIG",E,E,N,N],[17,"_SC_IPV6",E,E,N,N],[17,"_SC_RAW_SOCKETS",E,E,N,N],[17,"_SC_SYMLOOP_MAX",E,E,N,N],[17,"_SC_PAGE_SIZE",E,E,N,N],[17,"_SC_XOPEN_STREAMS",E,E,N,N],[17,"_SC_XBS5_ILP32_OFF32",E,E,N,N],[17,"_SC_XBS5_ILP32_OFFBIG",E,E,N,N],[17,"_SC_XBS5_LP64_OFF64",E,E,N,N],[17,"_SC_XBS5_LPBIG_OFFBIG",E,E,N,N],[17,"_SC_SS_REPL_MAX",E,E,N,N],[17,"_SC_TRACE_EVENT_NAME_MAX",E,E,N,N],[17,"_SC_TRACE_NAME_MAX",E,E,N,N],[17,"_SC_TRACE_SYS_MAX",E,E,N,N],[17,"_SC_TRACE_USER_EVENT_MAX",E,E,N,N],[17,"_SC_PASS_MAX",E,E,N,N],[17,"PTHREAD_MUTEX_NORMAL",E,E,N,N],[17,"PTHREAD_MUTEX_ERRORCHECK",E,E,N,N],[17,"PTHREAD_MUTEX_RECURSIVE",E,E,N,N],[17,"PTHREAD_MUTEX_DEFAULT",E,E,N,N],[17,"_PTHREAD_MUTEX_SIG_init",E,E,N,N],[17,"_PTHREAD_COND_SIG_init",E,E,N,N],[17,"_PTHREAD_RWLOCK_SIG_init",E,E,N,N],[17,"PTHREAD_MUTEX_INITIALIZER",E,E,N,N],[17,"PTHREAD_COND_INITIALIZER",E,E,N,N],[17,"PTHREAD_RWLOCK_INITIALIZER",E,E,N,N],[17,"SIGSTKSZ",E,E,N,N],[17,"FD_SETSIZE",E,E,N,N],[17,"ST_NOSUID",E,E,N,N],[17,R[1818],E,E,N,N],[17,R[1823],E,E,N,N],[17,"EVFILT_AIO",E,E,N,N],[17,R[1822],E,E,N,N],[17,R[1817],E,E,N,N],[17,R[1819],E,E,N,N],[17,R[1820],E,E,N,N],[17,R[1816],E,E,N,N],[17,"EVFILT_FS",E,E,N,N],[17,R[1821],E,E,N,N],[17,"EVFILT_VM",E,E,N,N],[17,"EV_ADD",E,E,N,N],[17,"EV_DELETE",E,E,N,N],[17,"EV_ENABLE",E,E,N,N],[17,"EV_DISABLE",E,E,N,N],[17,"EV_ONESHOT",E,E,N,N],[17,"EV_CLEAR",E,E,N,N],[17,"EV_RECEIPT",E,E,N,N],[17,R[1824],E,E,N,N],[17,"EV_FLAG0",E,E,N,N],[17,"EV_POLL",E,E,N,N],[17,"EV_FLAG1",E,E,N,N],[17,"EV_OOBAND",E,E,N,N],[17,"EV_ERROR",E,E,N,N],[17,"EV_EOF",E,E,N,N],[17,R[1825],E,E,N,N],[17,R[1845],E,E,N,N],[17,"NOTE_FFNOP",E,E,N,N],[17,"NOTE_FFAND",E,E,N,N],[17,"NOTE_FFOR",E,E,N,N],[17,R[1834],E,E,N,N],[17,R[1835],E,E,N,N],[17,R[1836],E,E,N,N],[17,"NOTE_LOWAT",E,E,N,N],[17,R[1830],E,E,N,N],[17,"NOTE_WRITE",E,E,N,N],[17,R[1833],E,E,N,N],[17,R[1829],E,E,N,N],[17,"NOTE_LINK",E,E,N,N],[17,R[1840],E,E,N,N],[17,R[1841],E,E,N,N],[17,"NOTE_NONE",E,E,N,N],[17,"NOTE_EXIT",E,E,N,N],[17,"NOTE_FORK",E,E,N,N],[17,"NOTE_EXEC",E,E,N,N],[17,"NOTE_REAP",E,E,N,N],[17,R[1843],E,E,N,N],[17,R[1832],E,E,N,N],[17,"NOTE_EXIT_DETAIL",E,E,N,N],[17,R[1839],E,E,N,N],[17,R[1838],E,E,N,N],[17,R[1831],E,E,N,N],[17,"NOTE_EXIT_DETAIL_MASK",E,E,N,N],[17,"NOTE_EXIT_DECRYPTFAIL",E,E,N,N],[17,"NOTE_EXIT_MEMORY",E,E,N,N],[17,"NOTE_EXIT_CSERROR",E,E,N,N],[17,R[1848],E,E,N,N],[17,R[1850],E,E,N,N],[17,R[1849],E,E,N,N],[17,R[1847],E,E,N,N],[17,R[1842],E,E,N,N],[17,R[1846],E,E,N,N],[17,R[1837],E,E,N,N],[17,R[1828],E,E,N,N],[17,"NOTE_LEEWAY",E,E,N,N],[17,"NOTE_CRITICAL",E,E,N,N],[17,"NOTE_BACKGROUND",E,E,N,N],[17,"NOTE_TRACK",E,E,N,N],[17,R[1844],E,E,N,N],[17,"NOTE_CHILD",E,E,N,N],[17,"OCRNL",E,E,N,N],[17,"ONOCR",E,E,N,N],[17,"ONLRET",E,E,N,N],[17,"OFILL",E,E,N,N],[17,"NLDLY",E,E,N,N],[17,"TABDLY",E,E,N,N],[17,"CRDLY",E,E,N,N],[17,"FFDLY",E,E,N,N],[17,"BSDLY",E,E,N,N],[17,"VTDLY",E,E,N,N],[17,"OFDEL",E,E,N,N],[17,"NL0",E,E,N,N],[17,"NL1",E,E,N,N],[17,"TAB0",E,E,N,N],[17,"TAB1",E,E,N,N],[17,"TAB2",E,E,N,N],[17,"CR0",E,E,N,N],[17,"CR1",E,E,N,N],[17,"CR2",E,E,N,N],[17,"CR3",E,E,N,N],[17,"FF0",E,E,N,N],[17,"FF1",E,E,N,N],[17,"BS0",E,E,N,N],[17,"BS1",E,E,N,N],[17,"TAB3",E,E,N,N],[17,"VT0",E,E,N,N],[17,"VT1",E,E,N,N],[17,"IUTF8",E,E,N,N],[17,"CRTSCTS",E,E,N,N],[17,"NI_MAXHOST",E,E,N,N],[17,"NI_MAXSERV",E,E,N,N],[17,"NI_NOFQDN",E,E,N,N],[17,"NI_NUMERICHOST",E,E,N,N],[17,"NI_NAMEREQD",E,E,N,N],[17,"NI_NUMERICSERV",E,E,N,N],[17,"NI_NUMERICSCOPE",E,E,N,N],[17,"NI_DGRAM",E,E,N,N],[17,"Q_GETQUOTA",E,E,N,N],[17,"Q_SETQUOTA",E,E,N,N],[17,"RENAME_SWAP",E,E,N,N],[17,"RENAME_EXCL",E,E,N,N],[17,"RTLD_LOCAL",E,E,N,N],[17,"RTLD_FIRST",E,E,N,N],[17,"RTLD_NODELETE",E,E,N,N],[17,"RTLD_NOLOAD",E,E,N,N],[17,"RTLD_GLOBAL",E,E,N,N],[17,"_WSTOPPED",E,E,N,N],[17,"LOG_NETINFO",E,E,N,N],[17,"LOG_REMOTEAUTH",E,E,N,N],[17,"LOG_INSTALL",E,E,N,N],[17,"LOG_RAS",E,E,N,N],[17,"LOG_LAUNCHD",E,E,N,N],[17,"LOG_NFACILITIES",E,E,N,N],[17,"CTLTYPE",E,E,N,N],[17,"CTLTYPE_NODE",E,E,N,N],[17,"CTLTYPE_INT",E,E,N,N],[17,"CTLTYPE_STRING",E,E,N,N],[17,"CTLTYPE_QUAD",E,E,N,N],[17,"CTLTYPE_OPAQUE",E,E,N,N],[17,"CTLTYPE_STRUCT",E,E,N,N],[17,"CTLFLAG_RD",E,E,N,N],[17,"CTLFLAG_WR",E,E,N,N],[17,"CTLFLAG_RW",E,E,N,N],[17,"CTLFLAG_NOLOCK",E,E,N,N],[17,"CTLFLAG_ANYBODY",E,E,N,N],[17,"CTLFLAG_SECURE",E,E,N,N],[17,"CTLFLAG_MASKED",E,E,N,N],[17,"CTLFLAG_NOAUTO",E,E,N,N],[17,"CTLFLAG_KERN",E,E,N,N],[17,"CTLFLAG_LOCKED",E,E,N,N],[17,"CTLFLAG_OID2",E,E,N,N],[17,"CTL_UNSPEC",E,E,N,N],[17,"CTL_KERN",E,E,N,N],[17,"CTL_VM",E,E,N,N],[17,"CTL_VFS",E,E,N,N],[17,"CTL_NET",E,E,N,N],[17,"CTL_DEBUG",E,E,N,N],[17,"CTL_HW",E,E,N,N],[17,"CTL_MACHDEP",E,E,N,N],[17,"CTL_USER",E,E,N,N],[17,"CTL_MAXID",E,E,N,N],[17,"KERN_OSTYPE",E,E,N,N],[17,"KERN_OSRELEASE",E,E,N,N],[17,"KERN_OSREV",E,E,N,N],[17,"KERN_VERSION",E,E,N,N],[17,"KERN_MAXVNODES",E,E,N,N],[17,"KERN_MAXPROC",E,E,N,N],[17,"KERN_MAXFILES",E,E,N,N],[17,"KERN_ARGMAX",E,E,N,N],[17,"KERN_SECURELVL",E,E,N,N],[17,"KERN_HOSTNAME",E,E,N,N],[17,"KERN_HOSTID",E,E,N,N],[17,"KERN_CLOCKRATE",E,E,N,N],[17,"KERN_VNODE",E,E,N,N],[17,"KERN_PROC",E,E,N,N],[17,"KERN_FILE",E,E,N,N],[17,"KERN_PROF",E,E,N,N],[17,"KERN_POSIX1",E,E,N,N],[17,"KERN_NGROUPS",E,E,N,N],[17,"KERN_JOB_CONTROL",E,E,N,N],[17,"KERN_SAVED_IDS",E,E,N,N],[17,"KERN_BOOTTIME",E,E,N,N],[17,"KERN_NISDOMAINNAME",E,E,N,N],[17,"KERN_DOMAINNAME",E,E,N,N],[17,"KERN_MAXPARTITIONS",E,E,N,N],[17,"KERN_KDEBUG",E,E,N,N],[17,"KERN_UPDATEINTERVAL",E,E,N,N],[17,"KERN_OSRELDATE",E,E,N,N],[17,"KERN_NTP_PLL",E,E,N,N],[17,"KERN_BOOTFILE",E,E,N,N],[17,"KERN_MAXFILESPERPROC",E,E,N,N],[17,"KERN_MAXPROCPERUID",E,E,N,N],[17,"KERN_DUMPDEV",E,E,N,N],[17,"KERN_IPC",E,E,N,N],[17,"KERN_DUMMY",E,E,N,N],[17,"KERN_PS_STRINGS",E,E,N,N],[17,"KERN_USRSTACK32",E,E,N,N],[17,"KERN_LOGSIGEXIT",E,E,N,N],[17,"KERN_SYMFILE",E,E,N,N],[17,"KERN_PROCARGS",E,E,N,N],[17,"KERN_NETBOOT",E,E,N,N],[17,"KERN_SYSV",E,E,N,N],[17,"KERN_AFFINITY",E,E,N,N],[17,"KERN_TRANSLATE",E,E,N,N],[17,"KERN_CLASSIC",E,E,N,N],[17,"KERN_EXEC",E,E,N,N],[17,"KERN_CLASSICHANDLER",E,E,N,N],[17,"KERN_AIOMAX",E,E,N,N],[17,"KERN_AIOPROCMAX",E,E,N,N],[17,"KERN_AIOTHREADS",E,E,N,N],[17,"KERN_COREFILE",E,E,N,N],[17,"KERN_COREDUMP",E,E,N,N],[17,"KERN_SUGID_COREDUMP",E,E,N,N],[17,"KERN_PROCDELAYTERM",E,E,N,N],[17,"KERN_SHREG_PRIVATIZABLE",E,E,N,N],[17,"KERN_LOW_PRI_WINDOW",E,E,N,N],[17,"KERN_LOW_PRI_DELAY",E,E,N,N],[17,"KERN_POSIX",E,E,N,N],[17,"KERN_USRSTACK64",E,E,N,N],[17,"KERN_NX_PROTECTION",E,E,N,N],[17,"KERN_TFP",E,E,N,N],[17,"KERN_PROCNAME",E,E,N,N],[17,"KERN_THALTSTACK",E,E,N,N],[17,"KERN_SPECULATIVE_READS",E,E,N,N],[17,"KERN_OSVERSION",E,E,N,N],[17,"KERN_SAFEBOOT",E,E,N,N],[17,"KERN_RAGEVNODE",E,E,N,N],[17,"KERN_TTY",E,E,N,N],[17,"KERN_CHECKOPENEVT",E,E,N,N],[17,"KERN_THREADNAME",E,E,N,N],[17,"KERN_MAXID",E,E,N,N],[17,"KERN_RAGE_PROC",E,E,N,N],[17,"KERN_RAGE_THREAD",E,E,N,N],[17,"KERN_UNRAGE_PROC",E,E,N,N],[17,"KERN_UNRAGE_THREAD",E,E,N,N],[17,"KERN_OPENEVT_PROC",E,E,N,N],[17,"KERN_UNOPENEVT_PROC",E,E,N,N],[17,"KERN_TFP_POLICY",E,E,N,N],[17,"KERN_TFP_POLICY_DENY",E,E,N,N],[17,"KERN_TFP_POLICY_DEFAULT",E,E,N,N],[17,"KERN_KDEFLAGS",E,E,N,N],[17,"KERN_KDDFLAGS",E,E,N,N],[17,"KERN_KDENABLE",E,E,N,N],[17,"KERN_KDSETBUF",E,E,N,N],[17,"KERN_KDGETBUF",E,E,N,N],[17,"KERN_KDSETUP",E,E,N,N],[17,"KERN_KDREMOVE",E,E,N,N],[17,"KERN_KDSETREG",E,E,N,N],[17,"KERN_KDGETREG",E,E,N,N],[17,"KERN_KDREADTR",E,E,N,N],[17,"KERN_KDPIDTR",E,E,N,N],[17,"KERN_KDTHRMAP",E,E,N,N],[17,"KERN_KDPIDEX",E,E,N,N],[17,"KERN_KDSETRTCDEC",E,E,N,N],[17,"KERN_KDGETENTROPY",E,E,N,N],[17,"KERN_KDWRITETR",E,E,N,N],[17,"KERN_KDWRITEMAP",E,E,N,N],[17,"KERN_KDENABLE_BG_TRACE",E,E,N,N],[17,"KERN_KDDISABLE_BG_TRACE",E,E,N,N],[17,"KERN_KDREADCURTHRMAP",E,E,N,N],[17,"KERN_KDSET_TYPEFILTER",E,E,N,N],[17,"KERN_KDBUFWAIT",E,E,N,N],[17,"KERN_KDCPUMAP",E,E,N,N],[17,"KERN_PROC_ALL",E,E,N,N],[17,"KERN_PROC_PID",E,E,N,N],[17,"KERN_PROC_PGRP",E,E,N,N],[17,"KERN_PROC_SESSION",E,E,N,N],[17,"KERN_PROC_TTY",E,E,N,N],[17,"KERN_PROC_UID",E,E,N,N],[17,"KERN_PROC_RUID",E,E,N,N],[17,"KERN_PROC_LCID",E,E,N,N],[17,"KIPC_MAXSOCKBUF",E,E,N,N],[17,"KIPC_SOCKBUF_WASTE",E,E,N,N],[17,"KIPC_SOMAXCONN",E,E,N,N],[17,"KIPC_MAX_LINKHDR",E,E,N,N],[17,"KIPC_MAX_PROTOHDR",E,E,N,N],[17,"KIPC_MAX_HDR",E,E,N,N],[17,"KIPC_MAX_DATALEN",E,E,N,N],[17,"KIPC_MBSTAT",E,E,N,N],[17,"KIPC_NMBCLUSTERS",E,E,N,N],[17,"KIPC_SOQLIMITCOMPAT",E,E,N,N],[17,"VM_METER",E,E,N,N],[17,"VM_LOADAVG",E,E,N,N],[17,"VM_MACHFACTOR",E,E,N,N],[17,"VM_SWAPUSAGE",E,E,N,N],[17,"VM_MAXID",E,E,N,N],[17,"HW_MACHINE",E,E,N,N],[17,"HW_MODEL",E,E,N,N],[17,"HW_NCPU",E,E,N,N],[17,"HW_BYTEORDER",E,E,N,N],[17,"HW_PHYSMEM",E,E,N,N],[17,"HW_USERMEM",E,E,N,N],[17,"HW_PAGESIZE",E,E,N,N],[17,"HW_DISKNAMES",E,E,N,N],[17,"HW_DISKSTATS",E,E,N,N],[17,"HW_EPOCH",E,E,N,N],[17,"HW_FLOATINGPT",E,E,N,N],[17,"HW_MACHINE_ARCH",E,E,N,N],[17,"HW_VECTORUNIT",E,E,N,N],[17,"HW_BUS_FREQ",E,E,N,N],[17,"HW_CPU_FREQ",E,E,N,N],[17,"HW_CACHELINE",E,E,N,N],[17,"HW_L1ICACHESIZE",E,E,N,N],[17,"HW_L1DCACHESIZE",E,E,N,N],[17,"HW_L2SETTINGS",E,E,N,N],[17,"HW_L2CACHESIZE",E,E,N,N],[17,"HW_L3SETTINGS",E,E,N,N],[17,"HW_L3CACHESIZE",E,E,N,N],[17,"HW_TB_FREQ",E,E,N,N],[17,"HW_MEMSIZE",E,E,N,N],[17,"HW_AVAILCPU",E,E,N,N],[17,"HW_MAXID",E,E,N,N],[17,"USER_CS_PATH",E,E,N,N],[17,"USER_BC_BASE_MAX",E,E,N,N],[17,"USER_BC_DIM_MAX",E,E,N,N],[17,"USER_BC_SCALE_MAX",E,E,N,N],[17,"USER_BC_STRING_MAX",E,E,N,N],[17,"USER_COLL_WEIGHTS_MAX",E,E,N,N],[17,"USER_EXPR_NEST_MAX",E,E,N,N],[17,"USER_LINE_MAX",E,E,N,N],[17,"USER_RE_DUP_MAX",E,E,N,N],[17,"USER_POSIX2_VERSION",E,E,N,N],[17,"USER_POSIX2_C_BIND",E,E,N,N],[17,"USER_POSIX2_C_DEV",E,E,N,N],[17,"USER_POSIX2_CHAR_TERM",E,E,N,N],[17,"USER_POSIX2_FORT_DEV",E,E,N,N],[17,"USER_POSIX2_FORT_RUN",E,E,N,N],[17,"USER_POSIX2_LOCALEDEF",E,E,N,N],[17,"USER_POSIX2_SW_DEV",E,E,N,N],[17,"USER_POSIX2_UPE",E,E,N,N],[17,"USER_STREAM_MAX",E,E,N,N],[17,"USER_TZNAME_MAX",E,E,N,N],[17,"USER_MAXID",E,E,N,N],[17,"CTL_DEBUG_NAME",E,E,N,N],[17,"CTL_DEBUG_VALUE",E,E,N,N],[17,"CTL_DEBUG_MAXID",E,E,N,N],[17,"PRIO_DARWIN_THREAD",E,E,N,N],[17,"PRIO_DARWIN_PROCESS",E,E,N,N],[17,"PRIO_DARWIN_BG",E,E,N,N],[17,"PRIO_DARWIN_NONUI",E,E,N,N],[17,"SEM_FAILED",E,E,N,N],[17,"AI_PASSIVE",E,E,N,N],[17,"AI_CANONNAME",E,E,N,N],[17,"AI_NUMERICHOST",E,E,N,N],[17,"AI_NUMERICSERV",E,E,N,N],[17,"AI_MASK",E,E,N,N],[17,"AI_ALL",E,E,N,N],[17,"AI_V4MAPPED_CFG",E,E,N,N],[17,"AI_ADDRCONFIG",E,E,N,N],[17,"AI_V4MAPPED",E,E,N,N],[17,"AI_DEFAULT",E,E,N,N],[17,"AI_UNUSABLE",E,E,N,N],[17,"SIGEV_NONE",E,E,N,N],[17,"SIGEV_SIGNAL",E,E,N,N],[17,"SIGEV_THREAD",E,E,N,N],[17,"AIO_CANCELED",E,E,N,N],[17,"AIO_NOTCANCELED",E,E,N,N],[17,"AIO_ALLDONE",E,E,N,N],[17,R[1929],E,E,N,N],[17,"LIO_NOP",E,E,N,N],[17,"LIO_WRITE",E,E,N,N],[17,"LIO_READ",E,E,N,N],[17,"LIO_WAIT",E,E,N,N],[17,"LIO_NOWAIT",E,E,N,N],[17,"WEXITED",E,E,N,N],[17,"WSTOPPED",E,E,N,N],[17,"WCONTINUED",E,E,N,N],[17,"WNOWAIT",E,E,N,N],[17,"P_ALL",E,E,N,N],[17,"P_PID",E,E,N,N],[17,"P_PGID",E,E,N,N],[17,"XATTR_NOFOLLOW",E,E,N,N],[17,"XATTR_CREATE",E,E,N,N],[17,"XATTR_REPLACE",E,E,N,N],[17,"XATTR_NOSECURITY",E,E,N,N],[17,"XATTR_NODEFAULT",E,E,N,N],[17,"XATTR_SHOWCOMPRESSION",E,E,N,N],[17,"NET_RT_IFLIST2",E,E,N,N],[17,"RTF_UP",E,E,N,N],[17,"RTF_GATEWAY",E,E,N,N],[17,"RTF_HOST",E,E,N,N],[17,"RTF_REJECT",E,E,N,N],[17,"RTF_DYNAMIC",E,E,N,N],[17,"RTF_MODIFIED",E,E,N,N],[17,"RTF_DONE",E,E,N,N],[17,"RTF_DELCLONE",E,E,N,N],[17,"RTF_CLONING",E,E,N,N],[17,"RTF_XRESOLVE",E,E,N,N],[17,"RTF_LLINFO",E,E,N,N],[17,"RTF_STATIC",E,E,N,N],[17,"RTF_BLACKHOLE",E,E,N,N],[17,"RTF_NOIFREF",E,E,N,N],[17,"RTF_PROTO2",E,E,N,N],[17,"RTF_PROTO1",E,E,N,N],[17,"RTF_PRCLONING",E,E,N,N],[17,"RTF_WASCLONED",E,E,N,N],[17,"RTF_PROTO3",E,E,N,N],[17,"RTF_PINNED",E,E,N,N],[17,"RTF_LOCAL",E,E,N,N],[17,"RTF_BROADCAST",E,E,N,N],[17,"RTF_MULTICAST",E,E,N,N],[17,"RTF_IFSCOPE",E,E,N,N],[17,"RTF_CONDEMNED",E,E,N,N],[17,"RTF_IFREF",E,E,N,N],[17,"RTF_PROXY",E,E,N,N],[17,"RTF_ROUTER",E,E,N,N],[17,"RTM_VERSION",E,E,N,N],[17,"RTM_ADD",E,E,N,N],[17,"RTM_DELETE",E,E,N,N],[17,"RTM_CHANGE",E,E,N,N],[17,"RTM_GET",E,E,N,N],[17,"RTM_LOSING",E,E,N,N],[17,"RTM_REDIRECT",E,E,N,N],[17,"RTM_MISS",E,E,N,N],[17,"RTM_LOCK",E,E,N,N],[17,"RTM_OLDADD",E,E,N,N],[17,"RTM_OLDDEL",E,E,N,N],[17,"RTM_RESOLVE",E,E,N,N],[17,"RTM_NEWADDR",E,E,N,N],[17,"RTM_DELADDR",E,E,N,N],[17,"RTM_IFINFO",E,E,N,N],[17,"RTM_NEWMADDR",E,E,N,N],[17,"RTM_DELMADDR",E,E,N,N],[17,"RTM_IFINFO2",E,E,N,N],[17,"RTM_NEWMADDR2",E,E,N,N],[17,"RTM_GET2",E,E,N,N],[17,"RTV_MTU",E,E,N,N],[17,"RTV_HOPCOUNT",E,E,N,N],[17,"RTV_EXPIRE",E,E,N,N],[17,"RTV_RPIPE",E,E,N,N],[17,"RTV_SPIPE",E,E,N,N],[17,"RTV_SSTHRESH",E,E,N,N],[17,"RTV_RTT",E,E,N,N],[17,"RTV_RTTVAR",E,E,N,N],[17,"RTA_DST",E,E,N,N],[17,"RTA_GATEWAY",E,E,N,N],[17,"RTA_NETMASK",E,E,N,N],[17,"RTA_GENMASK",E,E,N,N],[17,"RTA_IFP",E,E,N,N],[17,"RTA_IFA",E,E,N,N],[17,"RTA_AUTHOR",E,E,N,N],[17,"RTA_BRD",E,E,N,N],[17,"RTAX_DST",E,E,N,N],[17,"RTAX_GATEWAY",E,E,N,N],[17,"RTAX_NETMASK",E,E,N,N],[17,"RTAX_GENMASK",E,E,N,N],[17,"RTAX_IFP",E,E,N,N],[17,"RTAX_IFA",E,E,N,N],[17,"RTAX_AUTHOR",E,E,N,N],[17,"RTAX_BRD",E,E,N,N],[17,"RTAX_MAX",E,E,N,N],[17,"KERN_PROCARGS2",E,E,N,N],[17,"PROC_PIDTASKALLINFO",E,E,N,N],[17,"PROC_PIDTASKINFO",E,E,N,N],[17,"PROC_PIDTHREADINFO",E,E,N,N],[17,"MAXCOMLEN",E,E,N,N],[17,"MAXTHREADNAMESIZE",E,E,N,N],[17,"XUCRED_VERSION",E,E,N,N],[17,"LC_SEGMENT",E,E,N,N],[17,"LC_SEGMENT_64",E,E,N,N],[17,"MH_MAGIC",E,E,N,N],[17,"MH_MAGIC_64",E,E,N,N],[17,"UTUN_OPT_FLAGS",E,E,N,N],[17,"UTUN_OPT_IFNAME",E,E,N,N],[17,"DLT_NULL",E,E,N,N],[17,"DLT_EN10MB",E,E,N,N],[17,"DLT_EN3MB",E,E,N,N],[17,"DLT_AX25",E,E,N,N],[17,"DLT_PRONET",E,E,N,N],[17,"DLT_CHAOS",E,E,N,N],[17,"DLT_IEEE802",E,E,N,N],[17,"DLT_ARCNET",E,E,N,N],[17,"DLT_SLIP",E,E,N,N],[17,"DLT_PPP",E,E,N,N],[17,"DLT_FDDI",E,E,N,N],[17,"DLT_ATM_RFC1483",E,E,N,N],[17,"DLT_RAW",E,E,N,N],[17,"DLT_LOOP",E,E,N,N],[17,"BPF_ALIGNMENT",E,E,N,N],[17,"POSIX_SPAWN_RESETIDS",E,E,N,N],[17,"POSIX_SPAWN_SETPGROUP",E,E,N,N],[17,"POSIX_SPAWN_SETSIGDEF",E,E,N,N],[17,"POSIX_SPAWN_SETSIGMASK",E,E,N,N],[17,"POSIX_SPAWN_SETEXEC",E,E,N,N],[17,"POSIX_SPAWN_START_SUSPENDED",E,E,N,N],[17,"POSIX_SPAWN_CLOEXEC_DEFAULT",E,E,N,N],[17,"IPC_CREAT",E,E,N,N],[17,"IPC_EXCL",E,E,N,N],[17,"IPC_NOWAIT",E,E,N,N],[17,"IPC_PRIVATE",E,E,N,N],[17,"IPC_RMID",E,E,N,N],[17,"IPC_SET",E,E,N,N],[17,"IPC_STAT",E,E,N,N],[17,"IPC_R",E,E,N,N],[17,"IPC_W",E,E,N,N],[17,"IPC_M",E,E,N,N],[17,"SEM_UNDO",E,E,N,N],[17,"GETNCNT",E,E,N,N],[17,"GETPID",E,E,N,N],[17,"GETVAL",E,E,N,N],[17,"GETALL",E,E,N,N],[17,"GETZCNT",E,E,N,N],[17,"SETVAL",E,E,N,N],[17,"SETALL",E,E,N,N],[17,"SHM_RDONLY",E,E,N,N],[17,"SHM_RND",E,E,N,N],[17,"SHMLBA",E,E,N,N],[17,"SHM_R",E,E,N,N],[17,"SHM_W",E,E,N,N],[17,"UF_SETTABLE",E,E,N,N],[17,"UF_NODUMP",E,E,N,N],[17,"UF_IMMUTABLE",E,E,N,N],[17,"UF_APPEND",E,E,N,N],[17,"UF_OPAQUE",E,E,N,N],[17,"UF_COMPRESSED",E,E,N,N],[17,"UF_TRACKED",E,E,N,N],[17,"SF_SETTABLE",E,E,N,N],[17,"SF_ARCHIVED",E,E,N,N],[17,"SF_IMMUTABLE",E,E,N,N],[17,"SF_APPEND",E,E,N,N],[17,"UF_HIDDEN",E,E,N,N],[17,"__PTHREAD_MUTEX_SIZE__",E,E,N,N],[17,"__PTHREAD_COND_SIZE__",E,E,N,N],[17,"__PTHREAD_CONDATTR_SIZE__",E,E,N,N],[17,"__PTHREAD_RWLOCK_SIZE__",E,E,N,N],[17,"__PTHREAD_RWLOCKATTR_SIZE__",E,E,N,N],[17,"TIOCTIMESTAMP",E,E,N,N],[17,"TIOCDCDTIMESTAMP",E,E,N,N],[11,"from",E,E,81,[[[T]],[T]]],[11,R[11],E,E,81,[[[U]],[R[12]]]],[11,R[14],E,E,81,[[],[R[12]]]],[11,"into",E,E,81,[[],[U]]],[11,R[39],E,E,81,[[["self"]],[T]]],[11,R[13],E,E,81,[[["self"]],[T]]],[11,R[18],E,E,81,[[["self"]],[R[40]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,"into",E,E,0,[[],[U]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,"into",E,E,1,[[],[U]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,"into",E,E,2,[[],[U]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,"into",E,E,3,[[],[U]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,"into",E,E,4,[[],[U]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,"into",E,E,5,[[],[U]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[18],E,E,5,[[["self"]],[R[40]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[11],E,E,6,[[[U]],[R[12]]]],[11,R[14],E,E,6,[[],[R[12]]]],[11,"into",E,E,6,[[],[U]]],[11,R[39],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[18],E,E,6,[[["self"]],[R[40]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[11],E,E,7,[[[U]],[R[12]]]],[11,R[14],E,E,7,[[],[R[12]]]],[11,"into",E,E,7,[[],[U]]],[11,R[39],E,E,7,[[["self"]],[T]]],[11,R[13],E,E,7,[[["self"]],[T]]],[11,R[18],E,E,7,[[["self"]],[R[40]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[11],E,E,8,[[[U]],[R[12]]]],[11,R[14],E,E,8,[[],[R[12]]]],[11,"into",E,E,8,[[],[U]]],[11,R[39],E,E,8,[[["self"]],[T]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[18],E,E,8,[[["self"]],[R[40]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[11],E,E,9,[[[U]],[R[12]]]],[11,R[14],E,E,9,[[],[R[12]]]],[11,"into",E,E,9,[[],[U]]],[11,R[39],E,E,9,[[["self"]],[T]]],[11,R[13],E,E,9,[[["self"]],[T]]],[11,R[18],E,E,9,[[["self"]],[R[40]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[11],E,E,10,[[[U]],[R[12]]]],[11,R[14],E,E,10,[[],[R[12]]]],[11,"into",E,E,10,[[],[U]]],[11,R[39],E,E,10,[[["self"]],[T]]],[11,R[13],E,E,10,[[["self"]],[T]]],[11,R[18],E,E,10,[[["self"]],[R[40]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[11],E,E,11,[[[U]],[R[12]]]],[11,R[14],E,E,11,[[],[R[12]]]],[11,"into",E,E,11,[[],[U]]],[11,R[39],E,E,11,[[["self"]],[T]]],[11,R[13],E,E,11,[[["self"]],[T]]],[11,R[18],E,E,11,[[["self"]],[R[40]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[11],E,E,12,[[[U]],[R[12]]]],[11,R[14],E,E,12,[[],[R[12]]]],[11,"into",E,E,12,[[],[U]]],[11,R[39],E,E,12,[[["self"]],[T]]],[11,R[13],E,E,12,[[["self"]],[T]]],[11,R[18],E,E,12,[[["self"]],[R[40]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[11],E,E,13,[[[U]],[R[12]]]],[11,R[14],E,E,13,[[],[R[12]]]],[11,"into",E,E,13,[[],[U]]],[11,R[39],E,E,13,[[["self"]],[T]]],[11,R[13],E,E,13,[[["self"]],[T]]],[11,R[18],E,E,13,[[["self"]],[R[40]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[11],E,E,14,[[[U]],[R[12]]]],[11,R[14],E,E,14,[[],[R[12]]]],[11,"into",E,E,14,[[],[U]]],[11,R[39],E,E,14,[[["self"]],[T]]],[11,R[13],E,E,14,[[["self"]],[T]]],[11,R[18],E,E,14,[[["self"]],[R[40]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[11],E,E,15,[[[U]],[R[12]]]],[11,R[14],E,E,15,[[],[R[12]]]],[11,"into",E,E,15,[[],[U]]],[11,R[39],E,E,15,[[["self"]],[T]]],[11,R[13],E,E,15,[[["self"]],[T]]],[11,R[18],E,E,15,[[["self"]],[R[40]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[11],E,E,16,[[[U]],[R[12]]]],[11,R[14],E,E,16,[[],[R[12]]]],[11,"into",E,E,16,[[],[U]]],[11,R[39],E,E,16,[[["self"]],[T]]],[11,R[13],E,E,16,[[["self"]],[T]]],[11,R[18],E,E,16,[[["self"]],[R[40]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[11],E,E,17,[[[U]],[R[12]]]],[11,R[14],E,E,17,[[],[R[12]]]],[11,"into",E,E,17,[[],[U]]],[11,R[39],E,E,17,[[["self"]],[T]]],[11,R[13],E,E,17,[[["self"]],[T]]],[11,R[18],E,E,17,[[["self"]],[R[40]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[11],E,E,18,[[[U]],[R[12]]]],[11,R[14],E,E,18,[[],[R[12]]]],[11,"into",E,E,18,[[],[U]]],[11,R[39],E,E,18,[[["self"]],[T]]],[11,R[13],E,E,18,[[["self"]],[T]]],[11,R[18],E,E,18,[[["self"]],[R[40]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[11],E,E,19,[[[U]],[R[12]]]],[11,R[14],E,E,19,[[],[R[12]]]],[11,"into",E,E,19,[[],[U]]],[11,R[39],E,E,19,[[["self"]],[T]]],[11,R[13],E,E,19,[[["self"]],[T]]],[11,R[18],E,E,19,[[["self"]],[R[40]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[11],E,E,20,[[[U]],[R[12]]]],[11,R[14],E,E,20,[[],[R[12]]]],[11,"into",E,E,20,[[],[U]]],[11,R[39],E,E,20,[[["self"]],[T]]],[11,R[13],E,E,20,[[["self"]],[T]]],[11,R[18],E,E,20,[[["self"]],[R[40]]]],[11,"from",E,E,82,[[[T]],[T]]],[11,R[11],E,E,82,[[[U]],[R[12]]]],[11,R[14],E,E,82,[[],[R[12]]]],[11,"into",E,E,82,[[],[U]]],[11,R[39],E,E,82,[[["self"]],[T]]],[11,R[13],E,E,82,[[["self"]],[T]]],[11,R[18],E,E,82,[[["self"]],[R[40]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[11],E,E,21,[[[U]],[R[12]]]],[11,R[14],E,E,21,[[],[R[12]]]],[11,"into",E,E,21,[[],[U]]],[11,R[39],E,E,21,[[["self"]],[T]]],[11,R[13],E,E,21,[[["self"]],[T]]],[11,R[18],E,E,21,[[["self"]],[R[40]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[11],E,E,22,[[[U]],[R[12]]]],[11,R[14],E,E,22,[[],[R[12]]]],[11,"into",E,E,22,[[],[U]]],[11,R[39],E,E,22,[[["self"]],[T]]],[11,R[13],E,E,22,[[["self"]],[T]]],[11,R[18],E,E,22,[[["self"]],[R[40]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[11],E,E,23,[[[U]],[R[12]]]],[11,R[14],E,E,23,[[],[R[12]]]],[11,"into",E,E,23,[[],[U]]],[11,R[39],E,E,23,[[["self"]],[T]]],[11,R[13],E,E,23,[[["self"]],[T]]],[11,R[18],E,E,23,[[["self"]],[R[40]]]],[11,"from",E,E,83,[[[T]],[T]]],[11,R[11],E,E,83,[[[U]],[R[12]]]],[11,R[14],E,E,83,[[],[R[12]]]],[11,"into",E,E,83,[[],[U]]],[11,R[39],E,E,83,[[["self"]],[T]]],[11,R[13],E,E,83,[[["self"]],[T]]],[11,R[18],E,E,83,[[["self"]],[R[40]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[11],E,E,24,[[[U]],[R[12]]]],[11,R[14],E,E,24,[[],[R[12]]]],[11,"into",E,E,24,[[],[U]]],[11,R[39],E,E,24,[[["self"]],[T]]],[11,R[13],E,E,24,[[["self"]],[T]]],[11,R[18],E,E,24,[[["self"]],[R[40]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[11],E,E,25,[[[U]],[R[12]]]],[11,R[14],E,E,25,[[],[R[12]]]],[11,"into",E,E,25,[[],[U]]],[11,R[39],E,E,25,[[["self"]],[T]]],[11,R[13],E,E,25,[[["self"]],[T]]],[11,R[18],E,E,25,[[["self"]],[R[40]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[11],E,E,26,[[[U]],[R[12]]]],[11,R[14],E,E,26,[[],[R[12]]]],[11,"into",E,E,26,[[],[U]]],[11,R[39],E,E,26,[[["self"]],[T]]],[11,R[13],E,E,26,[[["self"]],[T]]],[11,R[18],E,E,26,[[["self"]],[R[40]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[11],E,E,27,[[[U]],[R[12]]]],[11,R[14],E,E,27,[[],[R[12]]]],[11,"into",E,E,27,[[],[U]]],[11,R[39],E,E,27,[[["self"]],[T]]],[11,R[13],E,E,27,[[["self"]],[T]]],[11,R[18],E,E,27,[[["self"]],[R[40]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[11],E,E,28,[[[U]],[R[12]]]],[11,R[14],E,E,28,[[],[R[12]]]],[11,"into",E,E,28,[[],[U]]],[11,R[39],E,E,28,[[["self"]],[T]]],[11,R[13],E,E,28,[[["self"]],[T]]],[11,R[18],E,E,28,[[["self"]],[R[40]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[11],E,E,29,[[[U]],[R[12]]]],[11,R[14],E,E,29,[[],[R[12]]]],[11,"into",E,E,29,[[],[U]]],[11,R[39],E,E,29,[[["self"]],[T]]],[11,R[13],E,E,29,[[["self"]],[T]]],[11,R[18],E,E,29,[[["self"]],[R[40]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[11],E,E,30,[[[U]],[R[12]]]],[11,R[14],E,E,30,[[],[R[12]]]],[11,"into",E,E,30,[[],[U]]],[11,R[39],E,E,30,[[["self"]],[T]]],[11,R[13],E,E,30,[[["self"]],[T]]],[11,R[18],E,E,30,[[["self"]],[R[40]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[11],E,E,31,[[[U]],[R[12]]]],[11,R[14],E,E,31,[[],[R[12]]]],[11,"into",E,E,31,[[],[U]]],[11,R[39],E,E,31,[[["self"]],[T]]],[11,R[13],E,E,31,[[["self"]],[T]]],[11,R[18],E,E,31,[[["self"]],[R[40]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[11],E,E,32,[[[U]],[R[12]]]],[11,R[14],E,E,32,[[],[R[12]]]],[11,"into",E,E,32,[[],[U]]],[11,R[39],E,E,32,[[["self"]],[T]]],[11,R[13],E,E,32,[[["self"]],[T]]],[11,R[18],E,E,32,[[["self"]],[R[40]]]],[11,"from",E,E,84,[[[T]],[T]]],[11,R[11],E,E,84,[[[U]],[R[12]]]],[11,R[14],E,E,84,[[],[R[12]]]],[11,"into",E,E,84,[[],[U]]],[11,R[39],E,E,84,[[["self"]],[T]]],[11,R[13],E,E,84,[[["self"]],[T]]],[11,R[18],E,E,84,[[["self"]],[R[40]]]],[11,"from",E,E,85,[[[T]],[T]]],[11,R[11],E,E,85,[[[U]],[R[12]]]],[11,R[14],E,E,85,[[],[R[12]]]],[11,"into",E,E,85,[[],[U]]],[11,R[39],E,E,85,[[["self"]],[T]]],[11,R[13],E,E,85,[[["self"]],[T]]],[11,R[18],E,E,85,[[["self"]],[R[40]]]],[11,"from",E,E,86,[[[T]],[T]]],[11,R[11],E,E,86,[[[U]],[R[12]]]],[11,R[14],E,E,86,[[],[R[12]]]],[11,"into",E,E,86,[[],[U]]],[11,R[39],E,E,86,[[["self"]],[T]]],[11,R[13],E,E,86,[[["self"]],[T]]],[11,R[18],E,E,86,[[["self"]],[R[40]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[11],E,E,33,[[[U]],[R[12]]]],[11,R[14],E,E,33,[[],[R[12]]]],[11,"into",E,E,33,[[],[U]]],[11,R[39],E,E,33,[[["self"]],[T]]],[11,R[13],E,E,33,[[["self"]],[T]]],[11,R[18],E,E,33,[[["self"]],[R[40]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[11],E,E,34,[[[U]],[R[12]]]],[11,R[14],E,E,34,[[],[R[12]]]],[11,"into",E,E,34,[[],[U]]],[11,R[39],E,E,34,[[["self"]],[T]]],[11,R[13],E,E,34,[[["self"]],[T]]],[11,R[18],E,E,34,[[["self"]],[R[40]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[11],E,E,35,[[[U]],[R[12]]]],[11,R[14],E,E,35,[[],[R[12]]]],[11,"into",E,E,35,[[],[U]]],[11,R[39],E,E,35,[[["self"]],[T]]],[11,R[13],E,E,35,[[["self"]],[T]]],[11,R[18],E,E,35,[[["self"]],[R[40]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[11],E,E,36,[[[U]],[R[12]]]],[11,R[14],E,E,36,[[],[R[12]]]],[11,"into",E,E,36,[[],[U]]],[11,R[39],E,E,36,[[["self"]],[T]]],[11,R[13],E,E,36,[[["self"]],[T]]],[11,R[18],E,E,36,[[["self"]],[R[40]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[11],E,E,37,[[[U]],[R[12]]]],[11,R[14],E,E,37,[[],[R[12]]]],[11,"into",E,E,37,[[],[U]]],[11,R[39],E,E,37,[[["self"]],[T]]],[11,R[13],E,E,37,[[["self"]],[T]]],[11,R[18],E,E,37,[[["self"]],[R[40]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[11],E,E,38,[[[U]],[R[12]]]],[11,R[14],E,E,38,[[],[R[12]]]],[11,"into",E,E,38,[[],[U]]],[11,R[39],E,E,38,[[["self"]],[T]]],[11,R[13],E,E,38,[[["self"]],[T]]],[11,R[18],E,E,38,[[["self"]],[R[40]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[11],E,E,39,[[[U]],[R[12]]]],[11,R[14],E,E,39,[[],[R[12]]]],[11,"into",E,E,39,[[],[U]]],[11,R[39],E,E,39,[[["self"]],[T]]],[11,R[13],E,E,39,[[["self"]],[T]]],[11,R[18],E,E,39,[[["self"]],[R[40]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[11],E,E,40,[[[U]],[R[12]]]],[11,R[14],E,E,40,[[],[R[12]]]],[11,"into",E,E,40,[[],[U]]],[11,R[39],E,E,40,[[["self"]],[T]]],[11,R[13],E,E,40,[[["self"]],[T]]],[11,R[18],E,E,40,[[["self"]],[R[40]]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[11],E,E,41,[[[U]],[R[12]]]],[11,R[14],E,E,41,[[],[R[12]]]],[11,"into",E,E,41,[[],[U]]],[11,R[39],E,E,41,[[["self"]],[T]]],[11,R[13],E,E,41,[[["self"]],[T]]],[11,R[18],E,E,41,[[["self"]],[R[40]]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[11],E,E,42,[[[U]],[R[12]]]],[11,R[14],E,E,42,[[],[R[12]]]],[11,"into",E,E,42,[[],[U]]],[11,R[39],E,E,42,[[["self"]],[T]]],[11,R[13],E,E,42,[[["self"]],[T]]],[11,R[18],E,E,42,[[["self"]],[R[40]]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[11],E,E,43,[[[U]],[R[12]]]],[11,R[14],E,E,43,[[],[R[12]]]],[11,"into",E,E,43,[[],[U]]],[11,R[39],E,E,43,[[["self"]],[T]]],[11,R[13],E,E,43,[[["self"]],[T]]],[11,R[18],E,E,43,[[["self"]],[R[40]]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[11],E,E,44,[[[U]],[R[12]]]],[11,R[14],E,E,44,[[],[R[12]]]],[11,"into",E,E,44,[[],[U]]],[11,R[39],E,E,44,[[["self"]],[T]]],[11,R[13],E,E,44,[[["self"]],[T]]],[11,R[18],E,E,44,[[["self"]],[R[40]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[11],E,E,45,[[[U]],[R[12]]]],[11,R[14],E,E,45,[[],[R[12]]]],[11,"into",E,E,45,[[],[U]]],[11,R[39],E,E,45,[[["self"]],[T]]],[11,R[13],E,E,45,[[["self"]],[T]]],[11,R[18],E,E,45,[[["self"]],[R[40]]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[11],E,E,46,[[[U]],[R[12]]]],[11,R[14],E,E,46,[[],[R[12]]]],[11,"into",E,E,46,[[],[U]]],[11,R[39],E,E,46,[[["self"]],[T]]],[11,R[13],E,E,46,[[["self"]],[T]]],[11,R[18],E,E,46,[[["self"]],[R[40]]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[11],E,E,47,[[[U]],[R[12]]]],[11,R[14],E,E,47,[[],[R[12]]]],[11,"into",E,E,47,[[],[U]]],[11,R[39],E,E,47,[[["self"]],[T]]],[11,R[13],E,E,47,[[["self"]],[T]]],[11,R[18],E,E,47,[[["self"]],[R[40]]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[11],E,E,48,[[[U]],[R[12]]]],[11,R[14],E,E,48,[[],[R[12]]]],[11,"into",E,E,48,[[],[U]]],[11,R[39],E,E,48,[[["self"]],[T]]],[11,R[13],E,E,48,[[["self"]],[T]]],[11,R[18],E,E,48,[[["self"]],[R[40]]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[11],E,E,49,[[[U]],[R[12]]]],[11,R[14],E,E,49,[[],[R[12]]]],[11,"into",E,E,49,[[],[U]]],[11,R[39],E,E,49,[[["self"]],[T]]],[11,R[13],E,E,49,[[["self"]],[T]]],[11,R[18],E,E,49,[[["self"]],[R[40]]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[11],E,E,50,[[[U]],[R[12]]]],[11,R[14],E,E,50,[[],[R[12]]]],[11,"into",E,E,50,[[],[U]]],[11,R[39],E,E,50,[[["self"]],[T]]],[11,R[13],E,E,50,[[["self"]],[T]]],[11,R[18],E,E,50,[[["self"]],[R[40]]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[11],E,E,51,[[[U]],[R[12]]]],[11,R[14],E,E,51,[[],[R[12]]]],[11,"into",E,E,51,[[],[U]]],[11,R[39],E,E,51,[[["self"]],[T]]],[11,R[13],E,E,51,[[["self"]],[T]]],[11,R[18],E,E,51,[[["self"]],[R[40]]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[11],E,E,52,[[[U]],[R[12]]]],[11,R[14],E,E,52,[[],[R[12]]]],[11,"into",E,E,52,[[],[U]]],[11,R[39],E,E,52,[[["self"]],[T]]],[11,R[13],E,E,52,[[["self"]],[T]]],[11,R[18],E,E,52,[[["self"]],[R[40]]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[11],E,E,53,[[[U]],[R[12]]]],[11,R[14],E,E,53,[[],[R[12]]]],[11,"into",E,E,53,[[],[U]]],[11,R[39],E,E,53,[[["self"]],[T]]],[11,R[13],E,E,53,[[["self"]],[T]]],[11,R[18],E,E,53,[[["self"]],[R[40]]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[11],E,E,54,[[[U]],[R[12]]]],[11,R[14],E,E,54,[[],[R[12]]]],[11,"into",E,E,54,[[],[U]]],[11,R[39],E,E,54,[[["self"]],[T]]],[11,R[13],E,E,54,[[["self"]],[T]]],[11,R[18],E,E,54,[[["self"]],[R[40]]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[11],E,E,55,[[[U]],[R[12]]]],[11,R[14],E,E,55,[[],[R[12]]]],[11,"into",E,E,55,[[],[U]]],[11,R[39],E,E,55,[[["self"]],[T]]],[11,R[13],E,E,55,[[["self"]],[T]]],[11,R[18],E,E,55,[[["self"]],[R[40]]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[11],E,E,56,[[[U]],[R[12]]]],[11,R[14],E,E,56,[[],[R[12]]]],[11,"into",E,E,56,[[],[U]]],[11,R[39],E,E,56,[[["self"]],[T]]],[11,R[13],E,E,56,[[["self"]],[T]]],[11,R[18],E,E,56,[[["self"]],[R[40]]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[11],E,E,57,[[[U]],[R[12]]]],[11,R[14],E,E,57,[[],[R[12]]]],[11,"into",E,E,57,[[],[U]]],[11,R[39],E,E,57,[[["self"]],[T]]],[11,R[13],E,E,57,[[["self"]],[T]]],[11,R[18],E,E,57,[[["self"]],[R[40]]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[11],E,E,58,[[[U]],[R[12]]]],[11,R[14],E,E,58,[[],[R[12]]]],[11,"into",E,E,58,[[],[U]]],[11,R[39],E,E,58,[[["self"]],[T]]],[11,R[13],E,E,58,[[["self"]],[T]]],[11,R[18],E,E,58,[[["self"]],[R[40]]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[11],E,E,59,[[[U]],[R[12]]]],[11,R[14],E,E,59,[[],[R[12]]]],[11,"into",E,E,59,[[],[U]]],[11,R[39],E,E,59,[[["self"]],[T]]],[11,R[13],E,E,59,[[["self"]],[T]]],[11,R[18],E,E,59,[[["self"]],[R[40]]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[11],E,E,60,[[[U]],[R[12]]]],[11,R[14],E,E,60,[[],[R[12]]]],[11,"into",E,E,60,[[],[U]]],[11,R[39],E,E,60,[[["self"]],[T]]],[11,R[13],E,E,60,[[["self"]],[T]]],[11,R[18],E,E,60,[[["self"]],[R[40]]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[11],E,E,61,[[[U]],[R[12]]]],[11,R[14],E,E,61,[[],[R[12]]]],[11,"into",E,E,61,[[],[U]]],[11,R[39],E,E,61,[[["self"]],[T]]],[11,R[13],E,E,61,[[["self"]],[T]]],[11,R[18],E,E,61,[[["self"]],[R[40]]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[11],E,E,62,[[[U]],[R[12]]]],[11,R[14],E,E,62,[[],[R[12]]]],[11,"into",E,E,62,[[],[U]]],[11,R[39],E,E,62,[[["self"]],[T]]],[11,R[13],E,E,62,[[["self"]],[T]]],[11,R[18],E,E,62,[[["self"]],[R[40]]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[11],E,E,63,[[[U]],[R[12]]]],[11,R[14],E,E,63,[[],[R[12]]]],[11,"into",E,E,63,[[],[U]]],[11,R[39],E,E,63,[[["self"]],[T]]],[11,R[13],E,E,63,[[["self"]],[T]]],[11,R[18],E,E,63,[[["self"]],[R[40]]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[11],E,E,64,[[[U]],[R[12]]]],[11,R[14],E,E,64,[[],[R[12]]]],[11,"into",E,E,64,[[],[U]]],[11,R[39],E,E,64,[[["self"]],[T]]],[11,R[13],E,E,64,[[["self"]],[T]]],[11,R[18],E,E,64,[[["self"]],[R[40]]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[11],E,E,65,[[[U]],[R[12]]]],[11,R[14],E,E,65,[[],[R[12]]]],[11,"into",E,E,65,[[],[U]]],[11,R[39],E,E,65,[[["self"]],[T]]],[11,R[13],E,E,65,[[["self"]],[T]]],[11,R[18],E,E,65,[[["self"]],[R[40]]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[11],E,E,66,[[[U]],[R[12]]]],[11,R[14],E,E,66,[[],[R[12]]]],[11,"into",E,E,66,[[],[U]]],[11,R[39],E,E,66,[[["self"]],[T]]],[11,R[13],E,E,66,[[["self"]],[T]]],[11,R[18],E,E,66,[[["self"]],[R[40]]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[11],E,E,67,[[[U]],[R[12]]]],[11,R[14],E,E,67,[[],[R[12]]]],[11,"into",E,E,67,[[],[U]]],[11,R[39],E,E,67,[[["self"]],[T]]],[11,R[13],E,E,67,[[["self"]],[T]]],[11,R[18],E,E,67,[[["self"]],[R[40]]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[11],E,E,68,[[[U]],[R[12]]]],[11,R[14],E,E,68,[[],[R[12]]]],[11,"into",E,E,68,[[],[U]]],[11,R[39],E,E,68,[[["self"]],[T]]],[11,R[13],E,E,68,[[["self"]],[T]]],[11,R[18],E,E,68,[[["self"]],[R[40]]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[11],E,E,69,[[[U]],[R[12]]]],[11,R[14],E,E,69,[[],[R[12]]]],[11,"into",E,E,69,[[],[U]]],[11,R[39],E,E,69,[[["self"]],[T]]],[11,R[13],E,E,69,[[["self"]],[T]]],[11,R[18],E,E,69,[[["self"]],[R[40]]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[11],E,E,70,[[[U]],[R[12]]]],[11,R[14],E,E,70,[[],[R[12]]]],[11,"into",E,E,70,[[],[U]]],[11,R[39],E,E,70,[[["self"]],[T]]],[11,R[13],E,E,70,[[["self"]],[T]]],[11,R[18],E,E,70,[[["self"]],[R[40]]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[11],E,E,71,[[[U]],[R[12]]]],[11,R[14],E,E,71,[[],[R[12]]]],[11,"into",E,E,71,[[],[U]]],[11,R[39],E,E,71,[[["self"]],[T]]],[11,R[13],E,E,71,[[["self"]],[T]]],[11,R[18],E,E,71,[[["self"]],[R[40]]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[11],E,E,72,[[[U]],[R[12]]]],[11,R[14],E,E,72,[[],[R[12]]]],[11,"into",E,E,72,[[],[U]]],[11,R[39],E,E,72,[[["self"]],[T]]],[11,R[13],E,E,72,[[["self"]],[T]]],[11,R[18],E,E,72,[[["self"]],[R[40]]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[11],E,E,73,[[[U]],[R[12]]]],[11,R[14],E,E,73,[[],[R[12]]]],[11,"into",E,E,73,[[],[U]]],[11,R[39],E,E,73,[[["self"]],[T]]],[11,R[13],E,E,73,[[["self"]],[T]]],[11,R[18],E,E,73,[[["self"]],[R[40]]]],[11,"from",E,E,87,[[[T]],[T]]],[11,R[11],E,E,87,[[[U]],[R[12]]]],[11,R[14],E,E,87,[[],[R[12]]]],[11,"into",E,E,87,[[],[U]]],[11,R[39],E,E,87,[[["self"]],[T]]],[11,R[13],E,E,87,[[["self"]],[T]]],[11,R[18],E,E,87,[[["self"]],[R[40]]]],[11,"from",E,E,88,[[[T]],[T]]],[11,R[11],E,E,88,[[[U]],[R[12]]]],[11,R[14],E,E,88,[[],[R[12]]]],[11,"into",E,E,88,[[],[U]]],[11,R[39],E,E,88,[[["self"]],[T]]],[11,R[13],E,E,88,[[["self"]],[T]]],[11,R[18],E,E,88,[[["self"]],[R[40]]]],[11,"from",E,E,89,[[[T]],[T]]],[11,R[11],E,E,89,[[[U]],[R[12]]]],[11,R[14],E,E,89,[[],[R[12]]]],[11,"into",E,E,89,[[],[U]]],[11,R[39],E,E,89,[[["self"]],[T]]],[11,R[13],E,E,89,[[["self"]],[T]]],[11,R[18],E,E,89,[[["self"]],[R[40]]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[11],E,E,74,[[[U]],[R[12]]]],[11,R[14],E,E,74,[[],[R[12]]]],[11,"into",E,E,74,[[],[U]]],[11,R[39],E,E,74,[[["self"]],[T]]],[11,R[13],E,E,74,[[["self"]],[T]]],[11,R[18],E,E,74,[[["self"]],[R[40]]]],[11,"from",E,E,75,[[[T]],[T]]],[11,R[11],E,E,75,[[[U]],[R[12]]]],[11,R[14],E,E,75,[[],[R[12]]]],[11,"into",E,E,75,[[],[U]]],[11,R[39],E,E,75,[[["self"]],[T]]],[11,R[13],E,E,75,[[["self"]],[T]]],[11,R[18],E,E,75,[[["self"]],[R[40]]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[11],E,E,76,[[[U]],[R[12]]]],[11,R[14],E,E,76,[[],[R[12]]]],[11,"into",E,E,76,[[],[U]]],[11,R[39],E,E,76,[[["self"]],[T]]],[11,R[13],E,E,76,[[["self"]],[T]]],[11,R[18],E,E,76,[[["self"]],[R[40]]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[11],E,E,77,[[[U]],[R[12]]]],[11,R[14],E,E,77,[[],[R[12]]]],[11,"into",E,E,77,[[],[U]]],[11,R[39],E,E,77,[[["self"]],[T]]],[11,R[13],E,E,77,[[["self"]],[T]]],[11,R[18],E,E,77,[[["self"]],[R[40]]]],[11,"from",E,E,78,[[[T]],[T]]],[11,R[11],E,E,78,[[[U]],[R[12]]]],[11,R[14],E,E,78,[[],[R[12]]]],[11,"into",E,E,78,[[],[U]]],[11,R[39],E,E,78,[[["self"]],[T]]],[11,R[13],E,E,78,[[["self"]],[T]]],[11,R[18],E,E,78,[[["self"]],[R[40]]]],[11,"from",E,E,90,[[[T]],[T]]],[11,R[11],E,E,90,[[[U]],[R[12]]]],[11,R[14],E,E,90,[[],[R[12]]]],[11,"into",E,E,90,[[],[U]]],[11,R[39],E,E,90,[[["self"]],[T]]],[11,R[13],E,E,90,[[["self"]],[T]]],[11,R[18],E,E,90,[[["self"]],[R[40]]]],[11,"from",E,E,79,[[[T]],[T]]],[11,R[11],E,E,79,[[[U]],[R[12]]]],[11,R[14],E,E,79,[[],[R[12]]]],[11,"into",E,E,79,[[],[U]]],[11,R[39],E,E,79,[[["self"]],[T]]],[11,R[13],E,E,79,[[["self"]],[T]]],[11,R[18],E,E,79,[[["self"]],[R[40]]]],[11,"from",E,E,80,[[[T]],[T]]],[11,R[11],E,E,80,[[[U]],[R[12]]]],[11,R[14],E,E,80,[[],[R[12]]]],[11,"into",E,E,80,[[],[U]]],[11,R[39],E,E,80,[[["self"]],[T]]],[11,R[13],E,E,80,[[["self"]],[T]]],[11,R[18],E,E,80,[[["self"]],[R[40]]]],[11,"from",E,E,91,[[[T]],[T]]],[11,R[11],E,E,91,[[[U]],[R[12]]]],[11,R[14],E,E,91,[[],[R[12]]]],[11,"into",E,E,91,[[],[U]]],[11,R[39],E,E,91,[[["self"]],[T]]],[11,R[13],E,E,91,[[["self"]],[T]]],[11,R[18],E,E,91,[[["self"]],[R[40]]]],[11,"from",E,E,92,[[[T]],[T]]],[11,R[11],E,E,92,[[[U]],[R[12]]]],[11,R[14],E,E,92,[[],[R[12]]]],[11,"into",E,E,92,[[],[U]]],[11,R[39],E,E,92,[[["self"]],[T]]],[11,R[13],E,E,92,[[["self"]],[T]]],[11,R[18],E,E,92,[[["self"]],[R[40]]]],[11,"from",E,E,93,[[[T]],[T]]],[11,R[11],E,E,93,[[[U]],[R[12]]]],[11,R[14],E,E,93,[[],[R[12]]]],[11,"into",E,E,93,[[],[U]]],[11,R[39],E,E,93,[[["self"]],[T]]],[11,R[13],E,E,93,[[["self"]],[T]]],[11,R[18],E,E,93,[[["self"]],[R[40]]]],[11,"from",E,E,94,[[[T]],[T]]],[11,R[11],E,E,94,[[[U]],[R[12]]]],[11,R[14],E,E,94,[[],[R[12]]]],[11,"into",E,E,94,[[],[U]]],[11,R[39],E,E,94,[[["self"]],[T]]],[11,R[13],E,E,94,[[["self"]],[T]]],[11,R[18],E,E,94,[[["self"]],[R[40]]]],[11,"from",E,E,95,[[[T]],[T]]],[11,R[11],E,E,95,[[[U]],[R[12]]]],[11,R[14],E,E,95,[[],[R[12]]]],[11,"into",E,E,95,[[],[U]]],[11,R[39],E,E,95,[[["self"]],[T]]],[11,R[13],E,E,95,[[["self"]],[T]]],[11,R[18],E,E,95,[[["self"]],[R[40]]]],[11,"fmt",E,E,81,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"clone",E,E,91,[[["self"]],["dir"]]],[11,"clone",E,E,92,[[["self"]],[R[787]]]],[11,"clone",E,E,0,[[["self"]],["group"]]],[11,"clone",E,E,1,[[["self"]],["utimbuf"]]],[11,"clone",E,E,2,[[["self"]],["timeval"]]],[11,"clone",E,E,3,[[["self"]],[R[777]]]],[11,"clone",E,E,4,[[["self"]],["rlimit"]]],[11,"clone",E,E,5,[[["self"]],["rusage"]]],[11,"clone",E,E,6,[[["self"]],[R[744]]]],[11,"clone",E,E,7,[[["self"]],["hostent"]]],[11,"clone",E,E,8,[[["self"]],["iovec"]]],[11,"clone",E,E,9,[[["self"]],["pollfd"]]],[11,"clone",E,E,10,[[["self"]],["winsize"]]],[11,"clone",E,E,11,[[["self"]],["linger"]]],[11,"clone",E,E,12,[[["self"]],["sigval"]]],[11,"clone",E,E,13,[[["self"]],[R[745]]]],[11,"clone",E,E,14,[[["self"]],["tms"]]],[11,"clone",E,E,15,[[["self"]],["servent"]]],[11,"clone",E,E,16,[[["self"]],[R[778]]]],[11,"clone",E,E,93,[[["self"]],["file"]]],[11,"clone",E,E,94,[[["self"]],["fpos_t"]]],[11,"clone",E,E,17,[[["self"]],[R[779]]]],[11,"clone",E,E,18,[[["self"]],[R[746]]]],[11,"clone",E,E,19,[[["self"]],["passwd"]]],[11,"clone",E,E,20,[[["self"]],["ifaddrs"]]],[11,"clone",E,E,82,[[["self"]],["fd_set"]]],[11,"clone",E,E,21,[[["self"]],["tm"]]],[11,"clone",E,E,22,[[["self"]],["msghdr"]]],[11,"clone",E,E,23,[[["self"]],["cmsghdr"]]],[11,"clone",E,E,83,[[["self"]],["fsid_t"]]],[11,"clone",E,E,24,[[["self"]],[R[742]]]],[11,"clone",E,E,25,[[["self"]],[R[747]]]],[11,"clone",E,E,26,[[["self"]],["utsname"]]],[11,"clone",E,E,95,[[["self"]],[R[788]]]],[11,"clone",E,E,27,[[["self"]],["ip_mreq"]]],[11,"clone",E,E,28,[[["self"]],["aiocb"]]],[11,"clone",E,E,29,[[["self"]],["glob_t"]]],[11,"clone",E,E,30,[[["self"]],[R[780]]]],[11,"clone",E,E,31,[[["self"]],[R[743]]]],[11,"clone",E,E,32,[[["self"]],["stat"]]],[11,"clone",E,E,84,[[["self"]],[R[748]]]],[11,"clone",E,E,85,[[["self"]],[R[749]]]],[11,"clone",E,E,86,[[["self"]],[R[750]]]],[11,"clone",E,E,33,[[["self"]],[R[751]]]],[11,"clone",E,E,34,[[["self"]],[R[741]]]],[11,"clone",E,E,35,[[["self"]],["stack_t"]]],[11,"clone",E,E,36,[[["self"]],[R[781]]]],[11,"clone",E,E,37,[[["self"]],[R[752]]]],[11,"clone",E,E,38,[[["self"]],["statvfs"]]],[11,"clone",E,E,39,[[["self"]],["dl_info"]]],[11,"clone",E,E,40,[[["self"]],[R[753]]]],[11,"clone",E,E,41,[[["self"]],[R[754]]]],[11,"clone",E,E,42,[[["self"]],["dqblk"]]],[11,"clone",E,E,43,[[["self"]],[R[755]]]],[11,"clone",E,E,44,[[["self"]],["termios"]]],[11,"clone",E,E,45,[[["self"]],["flock"]]],[11,"clone",E,E,46,[[["self"]],["sf_hdtr"]]],[11,"clone",E,E,47,[[["self"]],["lconv"]]],[11,"clone",E,E,48,[[["self"]],[R[782]]]],[11,"clone",E,E,49,[[["self"]],[R[756]]]],[11,"clone",E,E,50,[[["self"]],[R[757]]]],[11,"clone",E,E,51,[[["self"]],[R[758]]]],[11,"clone",E,E,52,[[["self"]],[R[759]]]],[11,"clone",E,E,53,[[["self"]],["xucred"]]],[11,"clone",E,E,54,[[["self"]],[R[760]]]],[11,"clone",E,E,55,[[["self"]],[R[761]]]],[11,"clone",E,E,56,[[["self"]],[R[762]]]],[11,"clone",E,E,57,[[["self"]],[R[763]]]],[11,"clone",E,E,58,[[["self"]],[R[764]]]],[11,"clone",E,E,59,[[["self"]],[R[765]]]],[11,"clone",E,E,60,[[["self"]],[R[766]]]],[11,"clone",E,E,61,[[["self"]],[R[767]]]],[11,"clone",E,E,62,[[["self"]],[R[768]]]],[11,"clone",E,E,63,[[["self"]],[R[769]]]],[11,"clone",E,E,64,[[["self"]],[R[783]]]],[11,"clone",E,E,65,[[["self"]],["sembuf"]]],[11,"clone",E,E,66,[[["self"]],["arphdr"]]],[11,"clone",E,E,67,[[["self"]],["in_addr"]]],[11,"clone",E,E,68,[[["self"]],["kevent"]]],[11,"clone",E,E,69,[[["self"]],[R[784]]]],[11,"clone",E,E,70,[[["self"]],[R[785]]]],[11,"clone",E,E,71,[[["self"]],[R[770]]]],[11,"clone",E,E,72,[[["self"]],["statfs"]]],[11,"clone",E,E,73,[[["self"]],["dirent"]]],[11,"clone",E,E,87,[[["self"]],[R[771]]]],[11,"clone",E,E,88,[[["self"]],[R[772]]]],[11,"clone",E,E,89,[[["self"]],[R[773]]]],[11,"clone",E,E,74,[[["self"]],[R[774]]]],[11,"clone",E,E,75,[[["self"]],["utmpx"]]],[11,"clone",E,E,80,[[["self"]],["semun"]]],[11,"clone",E,E,76,[[["self"]],[R[775]]]],[11,"clone",E,E,77,[[["self"]],["if_data"]]],[11,"clone",E,E,78,[[["self"]],["bpf_hdr"]]],[11,"clone",E,E,90,[[["self"]],[R[776]]]],[11,"clone",E,E,79,[[["self"]],[R[786]]]]],"p":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,R[777]],[3,"rlimit"],[3,"rusage"],[3,R[744]],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,R[745]],[3,"tms"],[3,"servent"],[3,R[778]],[3,R[779]],[3,R[746]],[3,"passwd"],[3,"ifaddrs"],[3,"tm"],[3,"msghdr"],[3,"cmsghdr"],[3,R[742]],[3,R[747]],[3,"utsname"],[3,"ip_mreq"],[3,"aiocb"],[3,"glob_t"],[3,R[780]],[3,R[743]],[3,"stat"],[3,R[751]],[3,R[741]],[3,"stack_t"],[3,R[781]],[3,R[752]],[3,"statvfs"],[3,"Dl_info"],[3,R[753]],[3,R[754]],[3,"dqblk"],[3,R[755]],[3,"termios"],[3,"flock"],[3,"sf_hdtr"],[3,"lconv"],[3,R[782]],[3,R[756]],[3,R[757]],[3,R[758]],[3,R[759]],[3,"xucred"],[3,R[760]],[3,R[761]],[3,R[762]],[3,R[763]],[3,R[764]],[3,R[765]],[3,R[766]],[3,R[767]],[3,R[768]],[3,R[769]],[3,R[783]],[3,"sembuf"],[3,"arphdr"],[3,"in_addr"],[3,"kevent"],[3,R[784]],[3,R[785]],[3,R[770]],[3,"statfs"],[3,"dirent"],[3,R[774]],[3,"utmpx"],[3,R[775]],[3,"if_data"],[3,"bpf_hdr"],[3,R[786]],[19,"semun"],[4,"c_void"],[3,"fd_set"],[3,"fsid_t"],[3,R[748]],[3,R[749]],[3,R[750]],[3,R[771]],[3,R[772]],[3,R[773]],[3,R[776]],[4,"DIR"],[4,R[787]],[4,"FILE"],[4,"fpos_t"],[4,R[788]]]};
searchIndex["lock_api"]={"doc":"This library provides type-safe and fully-featured `Mutex`…","i":[[3,"GuardSend","lock_api",R[1182],N,N],[3,R[1273],E,R[1182],N,N],[3,"Mutex",E,R[4437],N,N],[3,R[4438],E,R[4439],N,N],[3,R[1252],E,R[4436],N,N],[3,R[1253],E,R[4441],N,N],[3,R[1254],E,R[4442],N,N],[3,R[1255],E,R[4440],N,N],[3,"RwLock",E,R[4445],N,N],[3,R[1256],E,R[4446],N,N],[3,R[1257],E,R[4448],N,N],[3,R[1258],E,R[4447],N,N],[3,R[1259],E,R[4443],N,N],[3,R[1260],E,R[4444],N,N],[11,"new",E,"Creates a new mutex in an unlocked state ready for use.",0,[[[T]],["mutex"]]],[11,R[46],E,R[1191],0,[[],[T]]],[11,"lock",E,"Acquires a mutex, blocking the current thread until it is…",0,[[["self"]],[R[1183]]]],[11,"try_lock",E,R[1192],0,[[["self"]],[[R[52],[R[1183]]],[R[1183]]]]],[11,R[111],E,R[1194],0,[[["self"]],[T]]],[11,R[1195],E,R[1196],0,[[["self"]]]],[11,"raw",E,R[1197],0,[[["self"]],["r"]]],[11,R[1198],E,"Forcibly unlocks the mutex using a fair unlock procotol.",0,[[["self"]]]],[11,R[1199],E,R[1184],0,[[["self"]],[[R[52],[R[1183]]],[R[1183]]]]],[11,R[1200],E,R[1184],0,[[["self"]],[[R[52],[R[1183]]],[R[1183]]]]],[11,"mutex",E,"Returns a reference to the original `Mutex` object.",1,[[["self"]],["mutex"]]],[11,"map",E,R[1187],1,[[["f"]],[[R[1185]],["sized"]]]],[11,"try_map",E,R[1188],1,[[["f"]],[[R[12],[R[1185]]],[R[1185]]]]],[11,"unlocked",E,R[1186],1,[[["self"],["f"]],[U]]],[11,R[1189],E,R[1190],1,[[]]],[11,R[1203],E,R[1186],1,[[["self"],["f"]],[U]]],[11,"bump",E,R[1204],1,[[["self"]]]],[11,"map",E,R[1187],2,[[["f"]],[[R[1185]],["sized"]]]],[11,"try_map",E,R[1188],2,[[["f"]],[[R[12],[R[1185]]],[R[1185]]]]],[11,R[1189],E,R[1190],2,[[]]],[11,"new",E,"Creates a new reentrant mutex in an unlocked state ready…",3,[[[T]],[R[1201]]]],[11,R[46],E,R[1191],3,[[],[T]]],[11,"lock",E,"Acquires a reentrant mutex, blocking the current thread…",3,[[["self"]],[R[1193]]]],[11,"try_lock",E,R[1192],3,[[["self"]],[[R[52],[R[1193]]],[R[1193]]]]],[11,R[111],E,R[1194],3,[[["self"]],[T]]],[11,R[1195],E,R[1196],3,[[["self"]]]],[11,"raw",E,R[1197],3,[[["self"]],["r"]]],[11,R[1198],E,"Forcibly unlocks the mutex using a fair unlock protocol.",3,[[["self"]]]],[11,R[1199],E,R[1184],3,[[["self"]],[[R[52],[R[1193]]],[R[1193]]]]],[11,R[1200],E,R[1184],3,[[["self"]],[[R[52],[R[1193]]],[R[1193]]]]],[11,"remutex",E,"Returns a reference to the original `ReentrantMutex` object.",4,[[["self"]],[R[1201]]]],[11,"map",E,R[1205],4,[[["f"]],[[R[1202]],["sized"]]]],[11,"try_map",E,R[1206],4,[[["f"]],[[R[12],[R[1202]]],[R[1202]]]]],[11,"unlocked",E,R[1186],4,[[["self"],["f"]],[U]]],[11,R[1189],E,R[1190],4,[[]]],[11,R[1203],E,R[1186],4,[[["self"],["f"]],[U]]],[11,"bump",E,R[1204],4,[[["self"]]]],[11,"map",E,R[1205],5,[[["f"]],[[R[1202]],["sized"]]]],[11,"try_map",E,R[1206],5,[[["f"]],[[R[12],[R[1202]]],[R[1202]]]]],[11,R[1189],E,R[1190],5,[[]]],[11,"new",E,"Creates a new instance of an `RwLock<T>` which is unlocked.",6,[[[T]],["rwlock"]]],[11,R[46],E,"Consumes this `RwLock`, returning the underlying data.",6,[[],[T]]],[11,"read",E,R[1211],6,[[["self"]],[R[1207]]]],[11,"try_read",E,R[1212],6,[[["self"]],[[R[1207]],[R[52],[R[1207]]]]]],[11,"write",E,"Locks this `RwLock` with exclusive write access, blocking…",6,[[["self"]],[R[1208]]]],[11,"try_write",E,"Attempts to lock this `RwLock` with exclusive write access.",6,[[["self"]],[[R[52],[R[1208]]],[R[1208]]]]],[11,R[111],E,R[1194],6,[[["self"]],[T]]],[11,"force_unlock_read",E,"Forcibly unlocks a read lock.",6,[[["self"]]]],[11,"force_unlock_write",E,"Forcibly unlocks a write lock.",6,[[["self"]]]],[11,"raw",E,"Returns the underlying raw reader-writer lock object.",6,[[["self"]],["r"]]],[11,"force_unlock_read_fair",E,"Forcibly unlocks a read lock using a fair unlock procotol.",6,[[["self"]]]],[11,"force_unlock_write_fair",E,"Forcibly unlocks a write lock using a fair unlock procotol.",6,[[["self"]]]],[11,"try_read_for",E,R[1209],6,[[["self"]],[[R[1207]],[R[52],[R[1207]]]]]],[11,"try_read_until",E,R[1209],6,[[["self"]],[[R[1207]],[R[52],[R[1207]]]]]],[11,"try_write_for",E,R[1210],6,[[["self"]],[[R[52],[R[1208]]],[R[1208]]]]],[11,"try_write_until",E,R[1210],6,[[["self"]],[[R[52],[R[1208]]],[R[1208]]]]],[11,"read_recursive",E,R[1211],6,[[["self"]],[R[1207]]]],[11,"try_read_recursive",E,R[1212],6,[[["self"]],[[R[1207]],[R[52],[R[1207]]]]]],[11,"try_read_recursive_for",E,R[1209],6,[[["self"]],[[R[1207]],[R[52],[R[1207]]]]]],[11,"try_read_recursive_until",E,R[1209],6,[[["self"]],[[R[1207]],[R[52],[R[1207]]]]]],[11,"upgradable_read",E,"Locks this `RwLock` with upgradable read access, blocking…",6,[[["self"]],[R[1213]]]],[11,"try_upgradable_read",E,R[1214],6,[[["self"]],[[R[1213]],[R[52],[R[1213]]]]]],[11,"try_upgradable_read_for",E,R[1214],6,[[["self"]],[[R[1213]],[R[52],[R[1213]]]]]],[11,"try_upgradable_read_until",E,R[1214],6,[[["self"]],[[R[1213]],[R[52],[R[1213]]]]]],[11,"rwlock",E,R[1217],7,[[["self"]],["rwlock"]]],[11,"map",E,R[1222],7,[[["f"]],[[R[1215]],["sized"]]]],[11,"try_map",E,R[1223],7,[[["f"]],[[R[1215]],[R[12],[R[1215]]]]]],[11,"unlocked",E,R[1216],7,[[["self"],["f"]],[U]]],[11,R[1189],E,R[1219],7,[[]]],[11,R[1203],E,R[1216],7,[[["self"],["f"]],[U]]],[11,"bump",E,R[1220],7,[[["self"]]]],[11,"rwlock",E,R[1217],8,[[["self"]],["rwlock"]]],[11,"map",E,R[1224],8,[[["f"]],[[R[1218]],["sized"]]]],[11,"try_map",E,R[1225],8,[[["f"]],[[R[1218]],[R[12],[R[1218]]]]]],[11,"unlocked",E,R[1216],8,[[["self"],["f"]],[U]]],[11,R[1229],E,R[1226],8,[[],[R[1207]]]],[11,R[1238],E,"Atomically downgrades a write lock into an upgradable read…",8,[[],[R[1213]]]],[11,R[1189],E,R[1219],8,[[]]],[11,R[1203],E,R[1216],8,[[["self"],["f"]],[U]]],[11,"bump",E,R[1220],8,[[["self"]]]],[11,"rwlock",E,R[1217],9,[[["self"]],["rwlock"]]],[11,"unlocked",E,R[1216],9,[[["self"],["f"]],[U]]],[11,"upgrade",E,"Atomically upgrades an upgradable read lock lock into a…",9,[[],[R[1208]]]],[11,R[1236],E,R[1221],9,[[],[[R[12],[R[1208]]],[R[1208]]]]],[11,R[1189],E,R[1219],9,[[]]],[11,R[1203],E,R[1216],9,[[["self"],["f"]],[U]]],[11,"bump",E,R[1220],9,[[["self"]]]],[11,R[1229],E,"Atomically downgrades an upgradable read lock lock into a…",9,[[],[R[1207]]]],[11,R[1240],E,R[1221],9,[[],[[R[12],[R[1208]]],[R[1208]]]]],[11,R[1242],E,R[1221],9,[[],[[R[12],[R[1208]]],[R[1208]]]]],[11,"map",E,R[1222],10,[[["f"]],[[R[1215]],["sized"]]]],[11,"try_map",E,R[1223],10,[[["f"]],[[R[1215]],[R[12],[R[1215]]]]]],[11,R[1189],E,R[1219],10,[[]]],[11,"map",E,R[1224],11,[[["f"]],[[R[1218]],["sized"]]]],[11,"try_map",E,R[1225],11,[[["f"]],[[R[1218]],[R[12],[R[1218]]]]]],[11,R[1229],E,R[1226],11,[[],[R[1215]]]],[11,R[1189],E,R[1219],11,[[]]],[8,"RawMutex",E,"Basic operations for a mutex.",N,N],[18,"INIT",E,R[1243],12,N],[16,R[1227],E,R[1228],12,N],[10,"lock",E,"Acquires this mutex, blocking the current thread until it…",12,[[["self"]]]],[10,"try_lock",E,"Attempts to acquire this mutex without blocking.",12,[[["self"]],["bool"]]],[10,"unlock",E,"Unlocks this mutex.",12,[[["self"]]]],[8,R[1261],E,"Additional methods for mutexes which support fair unlocking.",N,N],[10,R[1189],E,"Unlocks this mutex using a fair unlock protocol.",13,[[["self"]]]],[11,"bump",E,R[1204],13,[[["self"]]]],[8,R[1262],E,"Additional methods for mutexes which support locking with…",N,N],[16,"Duration",E,R[1230],14,N],[16,"Instant",E,R[1231],14,N],[10,R[1199],E,R[1184],14,[[["self"]],["bool"]]],[10,R[1200],E,R[1184],14,[[["self"]],["bool"]]],[8,R[1263],E,"Helper trait which returns a non-zero thread ID.",N,N],[18,"INIT",E,R[1244],15,N],[10,R[4449],E,"Returns a non-zero thread ID which identifies the current…",15,[[["self"]],[R[9]]]],[8,R[4474],E,"Basic operations for a reader-writer lock.",N,N],[18,"INIT",E,R[1245],16,N],[16,R[1227],E,R[1228],16,N],[10,R[4453],E,"Acquires a shared lock, blocking the current thread until…",16,[[["self"]]]],[10,R[4454],E,"Attempts to acquire a shared lock without blocking.",16,[[["self"]],["bool"]]],[10,R[4455],E,"Releases a shared lock.",16,[[["self"]]]],[10,R[4450],E,"Acquires an exclusive lock, blocking the current thread…",16,[[["self"]]]],[10,R[4451],E,"Attempts to acquire an exclusive lock without blocking.",16,[[["self"]],["bool"]]],[10,R[4452],E,"Releases an exclusive lock.",16,[[["self"]]]],[8,R[1264],E,"Additional methods for RwLocks which support fair unlocking.",N,N],[10,R[4456],E,"Releases a shared lock using a fair unlock protocol.",17,[[["self"]]]],[10,R[4457],E,"Releases an exclusive lock using a fair unlock protocol.",17,[[["self"]]]],[11,R[1246],E,R[1247],17,[[["self"]]]],[11,R[1248],E,R[1249],17,[[["self"]]]],[8,R[1265],E,R[1235],N,N],[10,R[1229],E,"Atomically downgrades an exclusive lock into a shared lock…",18,[[["self"]]]],[8,R[1266],E,"Additional methods for RwLocks which support locking with…",N,N],[16,"Duration",E,R[1230],19,N],[16,"Instant",E,R[1231],19,N],[10,R[4458],E,R[1232],19,[[["self"]],["bool"]]],[10,R[4459],E,R[1232],19,[[["self"]],["bool"]]],[10,R[4460],E,R[1233],19,[[["self"]],["bool"]]],[10,R[4461],E,R[1233],19,[[["self"]],["bool"]]],[8,R[1267],E,R[1234],N,N],[10,R[4462],E,"Acquires a shared lock without deadlocking in case of a…",20,[[["self"]]]],[10,R[4463],E,"Attempts to acquire a shared lock without deadlocking in…",20,[[["self"]],["bool"]]],[8,R[1268],E,R[1234],N,N],[10,R[4464],E,R[1232],21,[[["self"]],["bool"]]],[10,R[4465],E,R[1232],21,[[["self"]],["bool"]]],[8,R[1269],E,R[1235],N,N],[10,R[4466],E,"Acquires an upgradable lock, blocking the current thread…",22,[[["self"]]]],[10,R[4467],E,"Attempts to acquire an upgradable lock without blocking.",22,[[["self"]],["bool"]]],[10,R[4468],E,"Releases an upgradable lock.",22,[[["self"]]]],[10,"upgrade",E,"Upgrades an upgradable lock to an exclusive lock.",22,[[["self"]]]],[10,R[1236],E,R[1241],22,[[["self"]],["bool"]]],[8,R[1270],E,R[1237],N,N],[10,R[4469],E,"Releases an upgradable lock using a fair unlock protocol.",23,[[["self"]]]],[11,R[1250],E,R[1251],23,[[["self"]]]],[8,R[1271],E,R[1237],N,N],[10,R[4470],E,"Downgrades an upgradable lock to a shared lock.",24,[[["self"]]]],[10,R[1238],E,"Downgrades an exclusive lock to an upgradable lock.",24,[[["self"]]]],[8,R[1272],E,R[1237],N,N],[10,R[4472],E,R[1239],25,[[["self"]],["bool"]]],[10,R[4471],E,R[1239],25,[[["self"]],["bool"]]],[10,R[1240],E,R[1241],25,[[["self"]],["bool"]]],[10,R[1242],E,R[1241],25,[[["self"]],["bool"]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[11],E,E,26,[[[U]],[R[12]]]],[11,R[14],E,E,26,[[],[R[12]]]],[11,"into",E,E,26,[[],[U]]],[11,R[39],E,E,26,[[["self"]],[T]]],[11,R[13],E,E,26,[[["self"]],[T]]],[11,R[18],E,E,26,[[["self"]],[R[40]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[11],E,E,27,[[[U]],[R[12]]]],[11,R[14],E,E,27,[[],[R[12]]]],[11,"into",E,E,27,[[],[U]]],[11,R[39],E,E,27,[[["self"]],[T]]],[11,R[13],E,E,27,[[["self"]],[T]]],[11,R[18],E,E,27,[[["self"]],[R[40]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,"into",E,E,0,[[],[U]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,"into",E,E,1,[[],[U]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,"into",E,E,2,[[],[U]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,"into",E,E,3,[[],[U]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,"into",E,E,4,[[],[U]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,"into",E,E,5,[[],[U]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[18],E,E,5,[[["self"]],[R[40]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[11],E,E,6,[[[U]],[R[12]]]],[11,R[14],E,E,6,[[],[R[12]]]],[11,"into",E,E,6,[[],[U]]],[11,R[39],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[18],E,E,6,[[["self"]],[R[40]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[11],E,E,7,[[[U]],[R[12]]]],[11,R[14],E,E,7,[[],[R[12]]]],[11,"into",E,E,7,[[],[U]]],[11,R[39],E,E,7,[[["self"]],[T]]],[11,R[13],E,E,7,[[["self"]],[T]]],[11,R[18],E,E,7,[[["self"]],[R[40]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[11],E,E,8,[[[U]],[R[12]]]],[11,R[14],E,E,8,[[],[R[12]]]],[11,"into",E,E,8,[[],[U]]],[11,R[39],E,E,8,[[["self"]],[T]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[18],E,E,8,[[["self"]],[R[40]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[11],E,E,9,[[[U]],[R[12]]]],[11,R[14],E,E,9,[[],[R[12]]]],[11,"into",E,E,9,[[],[U]]],[11,R[39],E,E,9,[[["self"]],[T]]],[11,R[13],E,E,9,[[["self"]],[T]]],[11,R[18],E,E,9,[[["self"]],[R[40]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[11],E,E,10,[[[U]],[R[12]]]],[11,R[14],E,E,10,[[],[R[12]]]],[11,"into",E,E,10,[[],[U]]],[11,R[39],E,E,10,[[["self"]],[T]]],[11,R[13],E,E,10,[[["self"]],[T]]],[11,R[18],E,E,10,[[["self"]],[R[40]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[11],E,E,11,[[[U]],[R[12]]]],[11,R[14],E,E,11,[[],[R[12]]]],[11,"into",E,E,11,[[],[U]]],[11,R[39],E,E,11,[[["self"]],[T]]],[11,R[13],E,E,11,[[["self"]],[T]]],[11,R[18],E,E,11,[[["self"]],[R[40]]]],[11,R[54],E,E,1,[[["self"]],[T]]],[11,R[54],E,E,2,[[["self"]],[T]]],[11,R[54],E,E,8,[[["self"]],[T]]],[11,R[54],E,E,11,[[["self"]],[T]]],[11,"from",E,E,0,[[[T]],["mutex"]]],[11,"from",E,E,3,[[[T]],[R[1201]]]],[11,"from",E,E,6,[[[T]],["rwlock"]]],[11,"fmt",E,E,0,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,3,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,6,[[[R[29]],["self"]],[R[12]]]],[11,"deref",E,E,1,[[["self"]],[T]]],[11,"deref",E,E,2,[[["self"]],[T]]],[11,"deref",E,E,4,[[["self"]],[T]]],[11,"deref",E,E,5,[[["self"]],[T]]],[11,"deref",E,E,7,[[["self"]],[T]]],[11,"deref",E,E,8,[[["self"]],[T]]],[11,"deref",E,E,9,[[["self"]],[T]]],[11,"deref",E,E,10,[[["self"]],[T]]],[11,"deref",E,E,11,[[["self"]],[T]]],[11,"drop",E,E,1,[[["self"]]]],[11,"drop",E,E,2,[[["self"]]]],[11,"drop",E,E,4,[[["self"]]]],[11,"drop",E,E,5,[[["self"]]]],[11,"drop",E,E,7,[[["self"]]]],[11,"drop",E,E,8,[[["self"]]]],[11,"drop",E,E,9,[[["self"]]]],[11,"drop",E,E,10,[[["self"]]]],[11,"drop",E,E,11,[[["self"]]]],[11,R[79],E,E,0,[[],["mutex"]]],[11,R[79],E,E,3,[[],[R[1201]]]],[11,R[79],E,E,6,[[],["rwlock"]]],[18,"INIT",E,R[1243],12,N],[11,"bump",E,R[1204],13,[[["self"]]]],[18,"INIT",E,R[1244],15,N],[18,"INIT",E,R[1245],16,N],[11,R[1246],E,R[1247],17,[[["self"]]]],[11,R[1248],E,R[1249],17,[[["self"]]]],[11,R[1250],E,R[1251],23,[[["self"]]]]],"p":[[3,"Mutex"],[3,R[4438]],[3,R[1252]],[3,R[1253]],[3,R[1254]],[3,R[1255]],[3,"RwLock"],[3,R[1256]],[3,R[1257]],[3,R[1258]],[3,R[1259]],[3,R[1260]],[8,"RawMutex"],[8,R[1261]],[8,R[1262]],[8,R[1263]],[8,R[4474]],[8,R[1264]],[8,R[1265]],[8,R[1266]],[8,R[1267]],[8,R[1268]],[8,R[1269]],[8,R[1270]],[8,R[1271]],[8,R[1272]],[3,"GuardSend"],[3,R[1273]]]};
searchIndex["log"]={"doc":"A lightweight logging facade.","i":[[3,"Record","log",R[4413],N,N],[3,R[409],E,"Builder for `Record`.",N,N],[3,R[465],E,"Metadata about a log message.",N,N],[3,R[410],E,"Builder for `Metadata`.",N,N],[3,R[411],E,"The type returned by [`set_logger`] if [`set_logger`] has…",N,N],[3,R[412],E,"The type returned by [`from_str`] when the string doesn't…",N,N],[4,"Level",E,R[4414],N,N],[13,"Error",E,R[466],0,N],[13,"Warn",E,R[467],0,N],[13,"Info",E,R[468],0,N],[13,"Debug",E,R[469],0,N],[13,"Trace",E,R[470],0,N],[4,R[408],E,R[4415],N,N],[13,"Off",E,R[4416],1,N],[13,"Error",E,R[4417],1,N],[13,"Warn",E,R[4418],1,N],[13,"Info",E,R[4419],1,N],[13,"Debug",E,R[4420],1,N],[13,"Trace",E,R[4421],1,N],[5,"set_max_level",E,"Sets the global maximum log level.",N,[[[R[396]]]]],[5,"max_level",E,"Returns the current maximum log level.",N,[[],[R[396]]]],[5,"set_boxed_logger",E,"Sets the global logger to a `Box<Log>`.",N,[[["log"],["box",["log"]]],[[R[12],[R[397]]],[R[397]]]]],[5,"set_logger",E,"Sets the global logger to a `&'static Log`.",N,[[["log"]],[[R[12],[R[397]]],[R[397]]]]],[5,"logger",E,"Returns a reference to the logger.",N,[[],["log"]]],[17,"STATIC_MAX_LEVEL",E,"The statically resolved maximum log level.",N,N],[8,"Log",E,"A trait encapsulating the operations required of a logger.",N,N],[10,"enabled",E,"Determines if a log message with the specified metadata…",2,[[[R[398]],["self"]],["bool"]]],[10,"log",E,"Logs the `Record`.",2,[[["self"],["record"]]]],[10,"flush",E,R[4422],2,[[["self"]]]],[11,"max",E,R[4423],0,[[],["level"]]],[11,R[4424],E,R[4425],0,[[["self"]],[R[396]]]],[11,"max",E,R[4426],1,[[],[R[396]]]],[11,"to_level",E,R[4427],1,[[["self"]],[[R[52],["level"]],["level"]]]],[11,"builder",E,R[402],3,[[],[R[399]]]],[11,"args",E,R[4428],3,[[["self"]],[R[400]]]],[11,R[398],E,R[4429],3,[[["self"]],[R[398]]]],[11,"level",E,R[403],3,[[["self"]],["level"]]],[11,"target",E,R[404],3,[[["self"]],["str"]]],[11,R[401],E,R[4430],3,[[["self"]],[["str"],[R[52],["str"]]]]],[11,"file",E,R[4431],3,[[["self"]],[["str"],[R[52],["str"]]]]],[11,"line",E,R[4432],3,[[["self"]],[["u32"],[R[52],["u32"]]]]],[11,"new",E,"Construct new `RecordBuilder`.",4,[[],[R[399]]]],[11,"args",E,"Set `args`.",4,[[["self"],[R[400]]],[R[399]]]],[11,R[398],E,"Set `metadata`. Construct a `Metadata` object with…",4,[[[R[398]],["self"]],[R[399]]]],[11,"level",E,"Set `Metadata::level`.",4,[[["self"],["level"]],[R[399]]]],[11,"target",E,"Set `Metadata::target`",4,[[["str"],["self"]],[R[399]]]],[11,R[401],E,"Set `module_path`",4,[[["str"],["self"],[R[52],["str"]]],[R[399]]]],[11,"file",E,"Set `file`",4,[[["str"],["self"],[R[52],["str"]]],[R[399]]]],[11,"line",E,"Set `line`",4,[[["u32"],["self"],[R[52],["u32"]]],[R[399]]]],[11,"build",E,"Invoke the builder and return a `Record`",4,[[["self"]],["record"]]],[11,"builder",E,R[402],5,[[],[R[405]]]],[11,"level",E,R[403],5,[[["self"]],["level"]]],[11,"target",E,R[404],5,[[["self"]],["str"]]],[11,"new",E,"Construct a new `MetadataBuilder`.",6,[[],[R[405]]]],[11,"level",E,"Setter for `level`.",6,[[["self"],["level"]],[R[405]]]],[11,"target",E,"Setter for `target`.",6,[[["str"],["self"]],[R[405]]]],[11,"build",E,"Returns a `Metadata` object.",6,[[["self"]],[R[398]]]],[14,"log",E,"The standard logging macro.",N,N],[14,"error",E,"Logs a message at the error level.",N,N],[14,"warn",E,"Logs a message at the warn level.",N,N],[14,"info",E,"Logs a message at the info level.",N,N],[14,"debug",E,"Logs a message at the debug level.",N,N],[14,"trace",E,"Logs a message at the trace level.",N,N],[14,"log_enabled",E,"Determines if a message logged at the specified level in…",N,N],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[17],E,E,3,[[[T],["self"]]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[16],E,E,5,[[["self"]],[T]]],[11,R[17],E,E,5,[[[T],["self"]]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,R[18],E,E,5,[[["self"]],[R[40]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[11],E,E,6,[[[U]],[R[12]]]],[11,R[39],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[],[R[12]]]],[11,R[18],E,E,6,[[["self"]],[R[40]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[170],E,E,7,[[["self"]],["string"]]],[11,R[11],E,E,7,[[[U]],[R[12]]]],[11,R[39],E,E,7,[[["self"]],[T]]],[11,R[13],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[],[R[12]]]],[11,R[18],E,E,7,[[["self"]],[R[40]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[170],E,E,8,[[["self"]],["string"]]],[11,R[11],E,E,8,[[[U]],[R[12]]]],[11,R[39],E,E,8,[[["self"]],[T]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[],[R[12]]]],[11,R[18],E,E,8,[[["self"]],[R[40]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[[T],["self"]]]],[11,R[170],E,E,0,[[["self"]],["string"]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,[[[T],["self"]]]],[11,R[170],E,E,1,[[["self"]],["string"]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"eq",E,E,0,[[["self"],["level"]],["bool"]]],[11,"eq",E,E,0,[[[R[396]],["self"]],["bool"]]],[11,"eq",E,E,1,[[[R[396]],["self"]],["bool"]]],[11,"eq",E,E,1,[[["self"],["level"]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[398]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[398]]],["bool"]]],[11,"eq",E,E,6,[[["self"],[R[405]]],["bool"]]],[11,"ne",E,E,6,[[["self"],[R[405]]],["bool"]]],[11,"eq",E,E,8,[[["self"],[R[406]]],["bool"]]],[11,"ne",E,E,8,[[["self"],[R[406]]],["bool"]]],[11,"clone",E,E,0,[[["self"]],["level"]]],[11,"clone",E,E,1,[[["self"]],[R[396]]]],[11,"clone",E,E,3,[[["self"]],["record"]]],[11,"clone",E,E,5,[[["self"]],[R[398]]]],[11,"cmp",E,E,0,[[["self"],["level"]],[R[51]]]],[11,"cmp",E,E,1,[[[R[396]],["self"]],[R[51]]]],[11,"cmp",E,E,5,[[["self"],[R[398]]],[R[51]]]],[11,"cmp",E,E,6,[[["self"],[R[405]]],[R[51]]]],[11,R[264],E,E,0,[[["self"],["level"]],[[R[52],[R[51]]],[R[51]]]]],[11,"lt",E,E,0,[[["self"],["level"]],["bool"]]],[11,"le",E,E,0,[[["self"],["level"]],["bool"]]],[11,"gt",E,E,0,[[["self"],["level"]],["bool"]]],[11,"ge",E,E,0,[[["self"],["level"]],["bool"]]],[11,R[264],E,E,0,[[[R[396]],["self"]],[[R[52],[R[51]]],[R[51]]]]],[11,"lt",E,E,0,[[[R[396]],["self"]],["bool"]]],[11,"le",E,E,0,[[[R[396]],["self"]],["bool"]]],[11,"gt",E,E,0,[[[R[396]],["self"]],["bool"]]],[11,"ge",E,E,0,[[[R[396]],["self"]],["bool"]]],[11,R[264],E,E,1,[[[R[396]],["self"]],[[R[52],[R[51]]],[R[51]]]]],[11,"lt",E,E,1,[[[R[396]],["self"]],["bool"]]],[11,"le",E,E,1,[[[R[396]],["self"]],["bool"]]],[11,"gt",E,E,1,[[[R[396]],["self"]],["bool"]]],[11,"ge",E,E,1,[[[R[396]],["self"]],["bool"]]],[11,R[264],E,E,1,[[["self"],["level"]],[[R[52],[R[51]]],[R[51]]]]],[11,"lt",E,E,1,[[["self"],["level"]],["bool"]]],[11,"le",E,E,1,[[["self"],["level"]],["bool"]]],[11,"gt",E,E,1,[[["self"],["level"]],["bool"]]],[11,"ge",E,E,1,[[["self"],["level"]],["bool"]]],[11,R[264],E,E,5,[[["self"],[R[398]]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,5,[[["self"],[R[398]]],["bool"]]],[11,"le",E,E,5,[[["self"],[R[398]]],["bool"]]],[11,"gt",E,E,5,[[["self"],[R[398]]],["bool"]]],[11,"ge",E,E,5,[[["self"],[R[398]]],["bool"]]],[11,R[264],E,E,6,[[["self"],[R[405]]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,6,[[["self"],[R[405]]],["bool"]]],[11,"le",E,E,6,[[["self"],[R[405]]],["bool"]]],[11,"gt",E,E,6,[[["self"],[R[405]]],["bool"]]],[11,"ge",E,E,6,[[["self"],[R[405]]],["bool"]]],[11,R[407],E,E,0,[[["str"]],[[R[12],["level"]],["level"]]]],[11,R[407],E,E,1,[[["str"]],[[R[12],[R[396]]],[R[396]]]]],[11,"fmt",E,E,0,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,1,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,3,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,4,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,5,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,6,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,7,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,8,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,1,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,7,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,8,[[["self"],[R[29]]],[R[12]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"hash",E,E,5,[[["self"],["__h"]]]],[11,"hash",E,E,6,[[["self"],["__h"]]]],[11,R[30],E,E,7,[[["self"]],["str"]]],[11,R[30],E,E,8,[[["self"]],["str"]]]],"p":[[4,"Level"],[4,R[408]],[8,"Log"],[3,"Record"],[3,R[409]],[3,R[465]],[3,R[410]],[3,R[411]],[3,R[412]]]};
searchIndex["memchr"]={"doc":"The `memchr` crate provides heavily optimized routines for…","i":[[3,"Memchr","memchr","An iterator for `memchr`.",N,N],[3,"Memchr2",E,"An iterator for `memchr2`.",N,N],[3,"Memchr3",E,"An iterator for `memchr3`.",N,N],[5,"memchr_iter",E,R[1170],N,[[["u8"]],["memchr"]]],[5,"memchr2_iter",E,R[1169],N,[[["u8"]],["memchr2"]]],[5,"memchr3_iter",E,R[1169],N,[[["u8"]],["memchr3"]]],[5,"memrchr_iter",E,R[1170],N,[[["u8"]],[["rev",["memchr"]],["memchr"]]]],[5,"memrchr2_iter",E,R[1169],N,[[["u8"]],[["memchr2"],["rev",["memchr2"]]]]],[5,"memrchr3_iter",E,R[1169],N,[[["u8"]],[["rev",["memchr3"]],["memchr3"]]]],[5,"memchr",E,"Search for the first occurrence of a byte in a slice.",N,[[["u8"]],[[R[52],[R[9]]],[R[9]]]]],[5,"memchr2",E,"Like `memchr`, but searches for two bytes instead of one.",N,[[["u8"]],[[R[52],[R[9]]],[R[9]]]]],[5,"memchr3",E,"Like `memchr`, but searches for three bytes instead of one.",N,[[["u8"]],[[R[52],[R[9]]],[R[9]]]]],[5,"memrchr",E,"Search for the last occurrence of a byte in a slice.",N,[[["u8"]],[[R[52],[R[9]]],[R[9]]]]],[5,"memrchr2",E,"Like `memrchr`, but searches for two bytes instead of one.",N,[[["u8"]],[[R[52],[R[9]]],[R[9]]]]],[5,"memrchr3",E,"Like `memrchr`, but searches for three bytes instead of one.",N,[[["u8"]],[[R[52],[R[9]]],[R[9]]]]],[11,"new",E,R[1171],0,[[["u8"]],["memchr"]]],[11,"new",E,R[1171],1,[[["u8"]],["memchr2"]]],[11,"new",E,"Create a new `Memchr3` that's initialized to zero with a…",2,[[["u8"]],["memchr3"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[48],E,E,0,[[],["i"]]],[11,"into",E,E,0,[[],[U]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[48],E,E,1,[[],["i"]]],[11,"into",E,E,1,[[],[U]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[48],E,E,2,[[],["i"]]],[11,"into",E,E,2,[[],[U]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,R[49],E,E,0,[[["self"]],[R[52]]]],[11,R[49],E,E,1,[[["self"]],[R[52]]]],[11,R[49],E,E,2,[[["self"]],[R[52]]]],[11,"next",E,E,0,[[["self"]],[[R[52],[R[9]]],[R[9]]]]],[11,R[53],E,E,0,[[["self"]]]],[11,"next",E,E,1,[[["self"]],[[R[52],[R[9]]],[R[9]]]]],[11,R[53],E,E,1,[[["self"]]]],[11,"next",E,E,2,[[["self"]],[[R[52],[R[9]]],[R[9]]]]],[11,R[53],E,E,2,[[["self"]]]]],"p":[[3,"Memchr"],[3,"Memchr2"],[3,"Memchr3"]]};
searchIndex["mio"]={"doc":"A fast, low-level IO library for Rust focusing on…","i":[[3,"Poll","mio","Polls for readiness events on all registered values.",N,N],[3,R[2739],E,"Handle to a user space `Poll` registration.",N,N],[3,R[2740],E,"Updates the readiness state of the associated…",N,N],[3,"PollOpt",E,"Options supplied when registering an `Evented` handle with…",N,N],[3,"Ready",E,"A set of readiness event kinds",N,N],[3,"Token",E,"Associates readiness notifications with [`Evented`] handles.",N,N],[12,"0",E,E,0,N],[3,"Events",E,R[2732],N,N],[11,"empty",E,"Return a `PollOpt` representing no set options.",1,[[],["pollopt"]]],[11,"edge",E,"Return a `PollOpt` representing edge-triggered…",1,[[],["pollopt"]]],[11,"level",E,"Return a `PollOpt` representing level-triggered…",1,[[],["pollopt"]]],[11,"oneshot",E,"Return a `PollOpt` representing oneshot notifications.",1,[[],["pollopt"]]],[11,"is_edge",E,"Returns true if the options include edge-triggered…",1,[[["self"]],["bool"]]],[11,"is_level",E,"Returns true if the options include level-triggered…",1,[[["self"]],["bool"]]],[11,"is_oneshot",E,"Returns true if the options includes oneshot.",1,[[["self"]],["bool"]]],[11,R[473],E,R[2728],1,[[["pollopt"],["self"]],["bool"]]],[11,"insert",E,"Adds all options represented by `other` into `self`.",1,[[["self"],["pollopt"]]]],[11,"remove",E,R[2727],1,[[["self"],["pollopt"]]]],[11,"empty",E,"Returns the empty `Ready` set.",2,[[],["ready"]]],[11,"readable",E,"Returns a `Ready` representing readable readiness.",2,[[],["ready"]]],[11,"writable",E,"Returns a `Ready` representing writable readiness.",2,[[],["ready"]]],[11,"all",E,"Returns a `Ready` representing readiness for all operations.",2,[[],["ready"]]],[11,R[69],E,"Returns true if `Ready` is the empty set",2,[[["self"]],["bool"]]],[11,"is_readable",E,"Returns true if the value includes readable readiness",2,[[["self"]],["bool"]]],[11,"is_writable",E,"Returns true if the value includes writable readiness",2,[[["self"]],["bool"]]],[11,"insert",E,"Adds all readiness represented by `other` into `self`.",2,[[["self"],["into"]]]],[11,"remove",E,R[2727],2,[[["self"],["into"]]]],[11,R[473],E,R[2728],2,[[["self"],["into"]],["bool"]]],[11,R[2261],E,"Create a `Ready` instance using the given `usize`…",2,[[[R[9]]],["ready"]]],[11,"as_usize",E,"Returns a `usize` representation of the `Ready` value.",2,[[["self"]],[R[9]]]],[11,"new",E,"Return a new `Poll` handle.",3,[[],[[R[12],["poll"]],["poll"]]]],[11,R[540],E,"Register an `Evented` handle with the `Poll` instance.",3,[[["ready"],["e"],["token"],["pollopt"],["self"]],[R[12]]]],[11,R[2733],E,"Re-register an `Evented` handle with the `Poll` instance.",3,[[["ready"],["e"],["token"],["pollopt"],["self"]],[R[12]]]],[11,R[2734],E,"Deregister an `Evented` handle with the `Poll` instance.",3,[[["e"],["self"]],[R[12]]]],[11,"poll",E,"Wait for readiness events",3,[[[R[1358]],["events"],[R[52],[R[1358]]],["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,"poll_interruptible",E,"Like `poll`, but may be interrupted by a signal",3,[[[R[1358]],["events"],[R[52],[R[1358]]],["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,R[73],E,"Return a new `Events` capable of holding up to `capacity`…",4,[[[R[9]]],["events"]]],[11,R[74],E,"Returns the number of `Event` values that `self` can hold.",4,[[["self"]],[R[9]]]],[11,R[69],E,"Returns `true` if `self` contains no `Event` values.",4,[[["self"]],["bool"]]],[11,"iter",E,"Returns an iterator over the `Event` values.",4,[[["self"]],["iter"]]],[11,"clear",E,"Clearing all `Event` values from container explicitly.",4,[[["self"]]]],[11,"new2",E,"Create and return a new `Registration` and the associated…",5,[[]]],[11,"readiness",E,"Returns the registration's current readiness.",6,[[["self"]],["ready"]]],[11,"set_readiness",E,"Set the registration's readiness",6,[[["ready"],["self"]],[R[12]]]],[0,"net",E,"Networking primitives",N,N],[3,R[2741],"mio::net","A structure representing a socket server",N,N],[3,R[4669],E,"A non-blocking TCP stream between a local socket and a…",N,N],[3,R[4694],E,"A User Datagram Protocol socket.",N,N],[11,"connect",E,"Create a new TCP stream and issue a non-blocking connect…",7,[[[R[1897]]],[[R[1340]],[R[12],[R[1340]]]]]],[11,"connect_stream",E,R[4665],7,[[[R[1897]],[R[1340]]],[[R[1340]],[R[12],[R[1340]]]]]],[11,R[3576],E,"Creates a new `TcpStream` from a standard `net::TcpStream`.",7,[[[R[1340]]],[[R[1340]],[R[12],[R[1340]]]]]],[11,R[4667],E,"Returns the socket address of the remote peer of this TCP…",7,[[["self"]],[[R[1897]],[R[12],[R[1897]]]]]],[11,R[2731],E,"Returns the socket address of the local half of this TCP…",7,[[["self"]],[[R[1897]],[R[12],[R[1897]]]]]],[11,R[3570],E,R[2729],7,[[["self"]],[[R[1340]],[R[12],[R[1340]]]]]],[11,R[2344],E,R[3578],7,[[[R[2344]],["self"]],[R[12]]]],[11,R[2742],E,R[2743],7,[[["self"],["bool"]],[R[12]]]],[11,"nodelay",E,R[2744],7,[[["self"]],[["bool"],[R[12],["bool"]]]]],[11,R[1367],E,R[1368],7,[[["self"],[R[9]]],[R[12]]]],[11,R[1369],E,R[1370],7,[[["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,R[1371],E,R[1372],7,[[["self"],[R[9]]],[R[12]]]],[11,R[1373],E,R[1374],7,[[["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,R[2745],E,R[1353],7,[[[R[1358]],[R[52],[R[1358]]],["self"]],[R[12]]]],[11,R[4668],E,R[1354],7,[[["self"]],[[R[52],[R[1358]]],[R[12],[R[52]]]]]],[11,"set_ttl",E,R[1343],7,[[["u32"],["self"]],[R[12]]]],[11,"ttl",E,R[1361],7,[[["self"]],[["u32"],[R[12],["u32"]]]]],[11,R[1362],E,R[1344],7,[[["self"],["bool"]],[R[12]]]],[11,"only_v6",E,R[1363],7,[[["self"]],[["bool"],[R[12],["bool"]]]]],[11,R[2746],E,"Sets the value for the `SO_LINGER` option on this socket.",7,[[[R[1358]],[R[52],[R[1358]]],["self"]],[R[12]]]],[11,"linger",E,"Gets the value of the `SO_LINGER` option on this socket.",7,[[["self"]],[[R[52],[R[1358]]],[R[12],[R[52]]]]]],[11,R[1360],E,R[1349],7,[[["self"]],[[R[52],["error"]],[R[12],[R[52]]]]]],[11,"peek",E,R[2770],7,[[["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,"read_bufs",E,R[3579],7,[[["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,"write_bufs",E,R[3580],7,[[["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,"bind",E,"Convenience method to bind a new TCP listener to the…",8,[[[R[1897]]],[[R[12],[R[1339]]],[R[1339]]]]],[11,R[4511],E,"Creates a new `TcpListener` from an instance of a…",8,[[[R[1339]]],[[R[12],[R[1339]]],[R[1339]]]]],[11,"accept",E,"Accepts a new `TcpStream`.",8,[[["self"]],[R[12]]]],[11,"accept_std",E,"Accepts a new `std::net::TcpStream`.",8,[[["self"]],[R[12]]]],[11,R[2731],E,R[3574],8,[[["self"]],[[R[1897]],[R[12],[R[1897]]]]]],[11,R[3570],E,R[2729],8,[[["self"]],[[R[12],[R[1339]]],[R[1339]]]]],[11,"set_ttl",E,R[1343],8,[[["u32"],["self"]],[R[12]]]],[11,"ttl",E,R[1361],8,[[["self"]],[["u32"],[R[12],["u32"]]]]],[11,R[1362],E,R[1344],8,[[["self"],["bool"]],[R[12]]]],[11,"only_v6",E,R[1363],8,[[["self"]],[["bool"],[R[12],["bool"]]]]],[11,R[1360],E,R[1349],8,[[["self"]],[[R[52],["error"]],[R[12],[R[52]]]]]],[11,"bind",E,"Creates a UDP socket from the given address.",9,[[[R[1897]]],[[R[2730]],[R[12],[R[2730]]]]]],[11,"from_socket",E,"Creates a new mio-wrapped socket from an underlying and…",9,[[[R[2730]]],[[R[2730]],[R[12],[R[2730]]]]]],[11,R[2731],E,"Returns the socket address that this socket was created…",9,[[["self"]],[[R[1897]],[R[12],[R[1897]]]]]],[11,R[3570],E,R[2729],9,[[["self"]],[[R[2730]],[R[12],[R[2730]]]]]],[11,"send_to",E,R[4691],9,[[[R[1897]],["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,"recv_from",E,R[4693],9,[[["self"]],[R[12]]]],[11,"send",E,"Sends data on the socket to the address previously bound…",9,[[["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,"recv",E,"Receives data from the socket previously bound with…",9,[[["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,"connect",E,R[4689],9,[[[R[1897]],["self"]],[R[12]]]],[11,R[2747],E,R[2748],9,[[["self"],["bool"]],[R[12]]]],[11,R[2030],E,R[2749],9,[[["self"]],[["bool"],[R[12],["bool"]]]]],[11,R[2750],E,R[2751],9,[[["self"],["bool"]],[R[12]]]],[11,R[2752],E,R[2753],9,[[["self"]],[["bool"],[R[12],["bool"]]]]],[11,R[2754],E,R[2755],9,[[["u32"],["self"]],[R[12]]]],[11,R[2756],E,R[2757],9,[[["self"]],[["u32"],[R[12],["u32"]]]]],[11,R[2758],E,R[2759],9,[[["self"],["bool"]],[R[12]]]],[11,R[2760],E,R[2761],9,[[["self"]],[["bool"],[R[12],["bool"]]]]],[11,"set_ttl",E,R[1343],9,[[["u32"],["self"]],[R[12]]]],[11,"ttl",E,R[1361],9,[[["self"]],[["u32"],[R[12],["u32"]]]]],[11,R[2762],E,R[2763],9,[[[R[1898]],["self"]],[R[12]]]],[11,R[2764],E,R[2765],9,[[["u32"],[R[1904]],["self"]],[R[12]]]],[11,R[2766],E,R[2767],9,[[[R[1898]],["self"]],[R[12]]]],[11,R[2768],E,R[2769],9,[[["u32"],[R[1904]],["self"]],[R[12]]]],[11,R[1362],E,R[1344],9,[[["self"],["bool"]],[R[12]]]],[11,"only_v6",E,R[1363],9,[[["self"]],[["bool"],[R[12],["bool"]]]]],[11,R[1360],E,R[1349],9,[[["self"]],[[R[52],["error"]],[R[12],[R[52]]]]]],[0,"event","mio","Readiness event types and utilities.",N,N],[3,"Events",R[2735],R[2732],N,N],[3,"Iter",E,"[`Events`] iterator.",N,N],[3,"Event",E,"An readiness event returned by [`Poll::poll`].",N,N],[8,"Evented",E,"A value that may be registered with `Poll`",N,N],[10,R[540],E,"Register `self` with the given `Poll` instance.",10,[[["ready"],["poll"],["token"],["pollopt"],["self"]],[R[12]]]],[10,R[2733],E,"Re-register `self` with the given `Poll` instance.",10,[[["ready"],["poll"],["token"],["pollopt"],["self"]],[R[12]]]],[10,R[2734],E,"Deregister `self` from the given `Poll` instance",10,[[["poll"],["self"]],[R[12]]]],[0,"unix","mio","Unix only extensions",N,N],[3,"EventedFd",R[2736],"Adapter for `RawFd` providing an [`Evented`] implementation.",N,N],[12,"0",E,E,11,N],[3,"UnixReady",E,"Unix specific extensions to `Ready`",N,N],[11,"from","mio",E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,R[18],E,E,5,[[["self"]],[R[40]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[16],E,E,6,[[["self"]],[T]]],[11,R[17],E,E,6,[[[T],["self"]]]],[11,R[11],E,E,6,[[[U]],[R[12]]]],[11,R[39],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[],[R[12]]]],[11,R[18],E,E,6,[[["self"]],[R[40]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,[[[T],["self"]]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[17],E,E,2,[[[T],["self"]]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[[T],["self"]]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[48],E,E,4,[[],["i"]]],[11,"into",E,E,4,[[],[U]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,"from",R[2735],E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[16],E,E,12,[[["self"]],[T]]],[11,R[17],E,E,12,[[[T],["self"]]]],[11,R[11],E,E,12,[[[U]],[R[12]]]],[11,R[39],E,E,12,[[["self"]],[T]]],[11,R[13],E,E,12,[[["self"]],[T]]],[11,R[14],E,E,12,[[],[R[12]]]],[11,R[18],E,E,12,[[["self"]],[R[40]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[48],E,E,13,[[],["i"]]],[11,"into",E,E,13,[[],[U]]],[11,R[16],E,E,13,[[["self"]],[T]]],[11,R[17],E,E,13,[[[T],["self"]]]],[11,R[11],E,E,13,[[[U]],[R[12]]]],[11,R[39],E,E,13,[[["self"]],[T]]],[11,R[13],E,E,13,[[["self"]],[T]]],[11,R[14],E,E,13,[[],[R[12]]]],[11,R[18],E,E,13,[[["self"]],[R[40]]]],[11,"from",R[2736],E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[11],E,E,11,[[[U]],[R[12]]]],[11,R[39],E,E,11,[[["self"]],[T]]],[11,R[13],E,E,11,[[["self"]],[T]]],[11,R[14],E,E,11,[[],[R[12]]]],[11,R[18],E,E,11,[[["self"]],[R[40]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[16],E,E,14,[[["self"]],[T]]],[11,R[17],E,E,14,[[[T],["self"]]]],[11,R[11],E,E,14,[[[U]],[R[12]]]],[11,R[39],E,E,14,[[["self"]],[T]]],[11,R[13],E,E,14,[[["self"]],[T]]],[11,R[14],E,E,14,[[],[R[12]]]],[11,R[18],E,E,14,[[["self"]],[R[40]]]],[11,"from","mio::net",E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[11],E,E,8,[[[U]],[R[12]]]],[11,R[39],E,E,8,[[["self"]],[T]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[],[R[12]]]],[11,R[18],E,E,8,[[["self"]],[R[40]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[11],E,E,7,[[[U]],[R[12]]]],[11,R[39],E,E,7,[[["self"]],[T]]],[11,R[13],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[],[R[12]]]],[11,R[18],E,E,7,[[["self"]],[R[40]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[11],E,E,9,[[[U]],[R[12]]]],[11,R[39],E,E,9,[[["self"]],[T]]],[11,R[13],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[],[R[12]]]],[11,R[18],E,E,9,[[["self"]],[R[40]]]],[11,R[540],"mio",E,5,[[["ready"],["poll"],["token"],["pollopt"],["self"]],[R[12]]]],[11,R[2733],E,E,5,[[["ready"],["poll"],["token"],["pollopt"],["self"]],[R[12]]]],[11,R[2734],E,E,5,[[["poll"],["self"]],[R[12]]]],[11,R[540],R[2736],E,11,[[["ready"],["poll"],["token"],["pollopt"],["self"]],[R[12]]]],[11,R[2733],E,E,11,[[["ready"],["poll"],["token"],["pollopt"],["self"]],[R[12]]]],[11,R[2734],E,E,11,[[["poll"],["self"]],[R[12]]]],[11,R[540],"mio::net",E,7,[[["ready"],["poll"],["token"],["pollopt"],["self"]],[R[12]]]],[11,R[2733],E,E,7,[[["ready"],["poll"],["token"],["pollopt"],["self"]],[R[12]]]],[11,R[2734],E,E,7,[[["poll"],["self"]],[R[12]]]],[11,R[540],E,E,8,[[["ready"],["poll"],["token"],["pollopt"],["self"]],[R[12]]]],[11,R[2733],E,E,8,[[["ready"],["poll"],["token"],["pollopt"],["self"]],[R[12]]]],[11,R[2734],E,E,8,[[["poll"],["self"]],[R[12]]]],[11,R[540],E,E,9,[[["ready"],["poll"],["token"],["pollopt"],["self"]],[R[12]]]],[11,R[2733],E,E,9,[[["ready"],["poll"],["token"],["pollopt"],["self"]],[R[12]]]],[11,R[2734],E,E,9,[[["poll"],["self"]],[R[12]]]],[11,"eq","mio",E,1,[[["pollopt"],["self"]],["bool"]]],[11,"ne",E,E,1,[[["pollopt"],["self"]],["bool"]]],[11,"eq",E,E,2,[[["ready"],["self"]],["bool"]]],[11,"ne",E,E,2,[[["ready"],["self"]],["bool"]]],[11,"eq",R[2735],E,12,[[["event"],["self"]],["bool"]]],[11,"ne",E,E,12,[[["event"],["self"]],["bool"]]],[11,"eq",R[2736],E,14,[[[R[2737]],["self"]],["bool"]]],[11,"ne",E,E,14,[[[R[2737]],["self"]],["bool"]]],[11,"eq","mio",E,0,[[["self"],["token"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["token"]],["bool"]]],[11,"clone",E,E,1,[[["self"]],["pollopt"]]],[11,"clone",E,E,2,[[["self"]],["ready"]]],[11,"clone",R[2735],E,12,[[["self"]],["event"]]],[11,"clone","mio",E,6,[[["self"]],["setreadiness"]]],[11,"clone",R[2735],E,13,[[["self"]],["iter"]]],[11,"clone",R[2736],E,14,[[["self"]],[R[2737]]]],[11,"clone","mio",E,0,[[["self"]],["token"]]],[11,"cmp",E,E,1,[[["pollopt"],["self"]],[R[51]]]],[11,"cmp",E,E,2,[[["ready"],["self"]],[R[51]]]],[11,"cmp",R[2736],E,14,[[[R[2737]],["self"]],[R[51]]]],[11,"cmp","mio",E,0,[[["self"],["token"]],[R[51]]]],[11,"from",R[2736],E,14,[[["ready"]],[R[2737]]]],[11,"from","mio",E,2,[[[R[2737]]],["ready"]]],[11,"from",E,E,0,[[[R[9]]],["token"]]],[11,R[48],E,E,4,[[]]],[11,"drop",E,E,5,[[["self"]]]],[11,R[264],E,E,1,[[["pollopt"],["self"]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,1,[[["pollopt"],["self"]],["bool"]]],[11,"le",E,E,1,[[["pollopt"],["self"]],["bool"]]],[11,"gt",E,E,1,[[["pollopt"],["self"]],["bool"]]],[11,"ge",E,E,1,[[["pollopt"],["self"]],["bool"]]],[11,R[264],E,E,2,[[["ready"],["self"]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,2,[[["ready"],["self"]],["bool"]]],[11,"le",E,E,2,[[["ready"],["self"]],["bool"]]],[11,"gt",E,E,2,[[["ready"],["self"]],["bool"]]],[11,"ge",E,E,2,[[["ready"],["self"]],["bool"]]],[11,R[264],R[2736],E,14,[[[R[2737]],["self"]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,14,[[[R[2737]],["self"]],["bool"]]],[11,"le",E,E,14,[[[R[2737]],["self"]],["bool"]]],[11,"gt",E,E,14,[[[R[2737]],["self"]],["bool"]]],[11,"ge",E,E,14,[[[R[2737]],["self"]],["bool"]]],[11,R[264],"mio",E,0,[[["self"],["token"]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,0,[[["self"],["token"]],["bool"]]],[11,"le",E,E,0,[[["self"],["token"]],["bool"]]],[11,"gt",E,E,0,[[["self"],["token"]],["bool"]]],[11,"ge",E,E,0,[[["self"],["token"]],["bool"]]],[11,"next",R[2735],E,13,[[["self"]],[[R[52],["event"]],["event"]]]],[11,R[54],R[2736],E,14,[[["self"]],["ready"]]],[11,"fmt","mio",E,1,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,2,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[2735],E,12,[[[R[29]],["self"]],[R[12]]]],[11,"fmt","mio",E,3,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[2735],E,13,[[[R[29]],["self"]],[R[12]]]],[11,"fmt","mio",E,4,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,5,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,6,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[2736],E,11,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,14,[[["self"],[R[29]]],[R[12]]]],[11,"fmt","mio",E,0,[[[R[29]],["self"]],[R[12]]]],[11,"fmt","mio::net",E,7,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,8,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,9,[[["self"],[R[29]]],[R[12]]]],[11,"sub","mio",E,1,[[["pollopt"]],["pollopt"]]],[11,"sub",E,E,2,[[[T]],["ready"]]],[11,"sub",R[2736],E,14,[[[R[2737]]],[R[2737]]]],[11,R[1981],"mio",E,2,[[["self"],[T]]]],[11,"bitand",E,E,1,[[["pollopt"]],["pollopt"]]],[11,"bitand",E,E,2,[[[T]],["ready"]]],[11,"bitand",R[2736],E,14,[[[R[2737]]],[R[2737]]]],[11,"bitor","mio",E,1,[[["pollopt"]],["pollopt"]]],[11,"bitor",E,E,2,[[[T]],["ready"]]],[11,"bitor",R[2736],E,14,[[[R[2737]]],[R[2737]]]],[11,"bitxor","mio",E,1,[[["pollopt"]],["pollopt"]]],[11,"bitxor",E,E,2,[[[T]],["ready"]]],[11,"bitxor",R[2736],E,14,[[[R[2737]]],[R[2737]]]],[11,R[1986],"mio",E,2,[[["self"],[T]]]],[11,R[1988],E,E,2,[[["self"],[T]]]],[11,R[1990],E,E,2,[[["self"],[T]]]],[11,"deref",R[2736],E,14,[[["self"]],["ready"]]],[11,"hash","mio",E,0,[[["self"],["__h"]]]],[11,R[2738],"mio::net",E,7,[[],["rawfd"]]],[11,R[2738],E,E,8,[[],["rawfd"]]],[11,R[2738],E,E,9,[[],["rawfd"]]],[11,R[2452],"mio",E,3,[[["self"]],["rawfd"]]],[11,R[2452],"mio::net",E,7,[[["self"]],["rawfd"]]],[11,R[2452],E,E,8,[[["self"]],["rawfd"]]],[11,R[2452],E,E,9,[[["self"]],["rawfd"]]],[11,"read",E,E,7,[[["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,"write",E,E,7,[[["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,"flush",E,E,7,[[["self"]],[R[12]]]],[11,R[1385],E,E,7,[[["rawfd"]],[R[1340]]]],[11,R[1385],E,E,8,[[["rawfd"]],[R[1339]]]],[11,R[1385],E,E,9,[[["rawfd"]],[R[2730]]]],[11,"new",R[2735],"Creates a new `Event` containing `readiness` and `token`",12,[[["ready"],["token"]],["event"]]],[11,"readiness",E,"Returns the event's readiness.",12,[[["self"]],["ready"]]],[11,"token",E,"Returns the event's token.",12,[[["self"]],["token"]]],[11,"aio",R[2736],"Returns a `Ready` representing AIO completion readiness",14,[[],[R[2737]]]],[11,"error",E,"Returns a `Ready` representing error readiness.",14,[[],[R[2737]]]],[11,"hup",E,"Returns a `Ready` representing HUP readiness.",14,[[],[R[2737]]]],[11,"is_aio",E,"Returns true if `Ready` contains AIO readiness",14,[[["self"]],["bool"]]],[11,"is_error",E,"Returns true if the value includes error readiness",14,[[["self"]],["bool"]]],[11,"is_hup",E,"Returns true if the value includes HUP readiness",14,[[["self"]],["bool"]]]],"p":[[3,"Token"],[3,"PollOpt"],[3,"Ready"],[3,"Poll"],[3,"Events"],[3,R[2739]],[3,R[2740]],[3,R[4669]],[3,R[2741]],[3,R[4694]],[8,"Evented"],[3,"EventedFd"],[3,"Event"],[3,"Iter"],[3,"UnixReady"]]};
searchIndex["mio_uds"]={"doc":"MIO bindings for Unix Domain Sockets","i":[[3,R[4671],"mio_uds","A Unix stream socket.",N,N],[3,R[3582],E,"A structure representing a Unix domain socket server.",N,N],[3,R[3581],E,"A Unix datagram socket.",N,N],[11,"bind",E,"Creates a Unix datagram socket bound to the given path.",0,[[["asref",["path"]],["path"]],[[R[12],[R[3569]]],[R[3569]]]]],[11,"from_datagram",E,"Consumes a standard library `UnixDatagram` and returns a…",0,[[[R[3569]]],[[R[12],[R[3569]]],[R[3569]]]]],[11,"pair",E,"Create an unnamed pair of connected sockets.",0,[[],[R[12]]]],[11,"unbound",E,"Creates a Unix Datagram socket which is not bound to any…",0,[[],[[R[12],[R[3569]]],[R[3569]]]]],[11,"connect",E,R[4673],0,[[["asref",["path"]],["path"],["self"]],[R[12]]]],[11,R[3570],E,R[2729],0,[[["self"]],[[R[12],[R[3569]]],[R[3569]]]]],[11,R[2731],E,"Returns the address of this socket.",0,[[["self"]],[[R[12],[R[1897]]],[R[1897]]]]],[11,R[4667],E,R[4674],0,[[["self"]],[[R[12],[R[1897]]],[R[1897]]]]],[11,"recv_from",E,R[3571],0,[[["self"]],[R[12]]]],[11,"recv",E,R[3571],0,[[["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,"send_to",E,R[4675],0,[[["asref",["path"]],["path"],["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,"send",E,R[4676],0,[[["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,R[1360],E,R[3575],0,[[["self"]],[[R[52],["error"]],[R[12],[R[52]]]]]],[11,R[2344],E,R[4677],0,[[[R[2344]],["self"]],[R[12]]]],[11,"bind",E,"Creates a new `UnixListener` bound to the specified socket.",1,[[["asref",["path"]],["path"]],[[R[3572]],[R[12],[R[3572]]]]]],[11,"from_listener",E,"Consumes a standard library `UnixListener` and returns a…",1,[[[R[3572]]],[[R[3572]],[R[12],[R[3572]]]]]],[11,"accept",E,R[3573],1,[[["self"]],[[R[12],[R[52]]],[R[52]]]]],[11,"accept_std",E,R[3573],1,[[["self"]],[[R[12],[R[52]]],[R[52]]]]],[11,R[3570],E,R[2729],1,[[["self"]],[[R[3572]],[R[12],[R[3572]]]]]],[11,R[2731],E,R[3574],1,[[["self"]],[[R[12],[R[1897]]],[R[1897]]]]],[11,R[1360],E,R[3575],1,[[["self"]],[[R[52],["error"]],[R[12],[R[52]]]]]],[11,"connect",E,R[4682],2,[[["asref",["path"]],["path"]],[[R[12],[R[3577]]],[R[3577]]]]],[11,R[3576],E,"Consumes a standard library `UnixStream` and returns a…",2,[[[R[3577]]],[[R[12],[R[3577]]],[R[3577]]]]],[11,"pair",E,R[4672],2,[[],[R[12]]]],[11,R[3570],E,R[2729],2,[[["self"]],[[R[12],[R[3577]]],[R[3577]]]]],[11,R[2731],E,R[4684],2,[[["self"]],[[R[12],[R[1897]]],[R[1897]]]]],[11,R[4667],E,R[4685],2,[[["self"]],[[R[12],[R[1897]]],[R[1897]]]]],[11,R[1360],E,R[3575],2,[[["self"]],[[R[52],["error"]],[R[12],[R[52]]]]]],[11,R[2344],E,R[3578],2,[[[R[2344]],["self"]],[R[12]]]],[11,"read_bufs",E,R[3579],2,[[["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,"write_bufs",E,R[3580],2,[[["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"fmt",E,E,0,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,1,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,2,[[[R[29]],["self"]],[R[12]]]],[11,R[2738],E,E,0,[[],["i32"]]],[11,R[2738],E,E,1,[[],["i32"]]],[11,R[2738],E,E,2,[[],["i32"]]],[11,R[2452],E,E,0,[[["self"]],["i32"]]],[11,R[2452],E,E,1,[[["self"]],["i32"]]],[11,R[2452],E,E,2,[[["self"]],["i32"]]],[11,"read",E,E,2,[[["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,"write",E,E,2,[[["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,"flush",E,E,2,[[["self"]],[R[12]]]],[11,R[1385],E,E,0,[[["i32"]],[R[3569]]]],[11,R[1385],E,E,1,[[["i32"]],[R[3572]]]],[11,R[1385],E,E,2,[[["i32"]],[R[3577]]]],[11,R[540],E,E,0,[[["token"],["pollopt"],["poll"],["ready"],["self"]],[R[12]]]],[11,R[2733],E,E,0,[[["token"],["pollopt"],["poll"],["ready"],["self"]],[R[12]]]],[11,R[2734],E,E,0,[[["poll"],["self"]],[R[12]]]],[11,R[540],E,E,1,[[["token"],["pollopt"],["poll"],["ready"],["self"]],[R[12]]]],[11,R[2733],E,E,1,[[["token"],["pollopt"],["poll"],["ready"],["self"]],[R[12]]]],[11,R[2734],E,E,1,[[["poll"],["self"]],[R[12]]]],[11,R[540],E,E,2,[[["token"],["pollopt"],["poll"],["ready"],["self"]],[R[12]]]],[11,R[2733],E,E,2,[[["token"],["pollopt"],["poll"],["ready"],["self"]],[R[12]]]],[11,R[2734],E,E,2,[[["poll"],["self"]],[R[12]]]]],"p":[[3,R[3581]],[3,R[3582]],[3,R[4671]]]};
searchIndex["net2"]={"doc":"Extensions to `std::net` networking types.","i":[[3,"TcpBuilder","net2","An \"in progress\" TCP socket which has not yet been…",N,N],[3,"UdpBuilder",E,"An \"in progress\" UDP socket which has not yet been…",N,N],[11,"new_v4",E,"Constructs a new TcpBuilder with the `AF_INET` domain, the…",0,[[],[[R[12],[R[1338]]],[R[1338]]]]],[11,"new_v6",E,"Constructs a new TcpBuilder with the `AF_INET6` domain,…",0,[[],[[R[12],[R[1338]]],[R[1338]]]]],[11,"bind",E,R[1342],0,[[["self"],[T]],[[R[1338]],[R[12],[R[1338]]]]]],[11,"listen",E,"Mark a socket as ready to accept incoming connection…",0,[[["i32"],["self"]],[[R[12],[R[1339]]],[R[1339]]]]],[11,"connect",E,"Initiate a connection on this socket to the specified…",0,[[["self"],[T]],[[R[12],[R[1340]]],[R[1340]]]]],[11,"to_tcp_stream",E,"Converts this builder into a `TcpStream`",0,[[["self"]],[[R[12],[R[1340]]],[R[1340]]]]],[11,"to_tcp_listener",E,"Converts this builder into a `TcpListener`",0,[[["self"]],[[R[12],[R[1339]]],[R[1339]]]]],[11,R[2731],E,"Returns the address of the local half of this TCP socket.",0,[[["self"]],[[R[1897]],[R[12],[R[1897]]]]]],[11,"new_v4",E,"Constructs a new UdpBuilder with the `AF_INET` domain, the…",1,[[],[[R[12],[R[1341]]],[R[1341]]]]],[11,"new_v6",E,"Constructs a new UdpBuilder with the `AF_INET6` domain,…",1,[[],[[R[12],[R[1341]]],[R[1341]]]]],[11,"bind",E,R[1342],1,[[["self"],[T]],[[R[2730]],[R[12],[R[2730]]]]]],[11,"ttl",E,R[1343],0,[[["u32"],["self"]],[["self"],[R[12]]]]],[11,"only_v6",E,R[1344],0,[[["self"],["bool"]],[["self"],[R[12]]]]],[11,R[1345],E,R[1346],0,[[["self"],["bool"]],[["self"],[R[12]]]]],[11,R[1347],E,R[1348],0,[[["self"]],[["bool"],[R[12],["bool"]]]]],[11,R[1360],E,R[1349],0,[[["self"]],[[R[52],["error"]],[R[12],[R[52]]]]]],[11,"ttl",E,R[1343],1,[[["u32"],["self"]],[["self"],[R[12]]]]],[11,"only_v6",E,R[1344],1,[[["self"],["bool"]],[["self"],[R[12]]]]],[11,R[1345],E,R[1346],1,[[["self"],["bool"]],[["self"],[R[12]]]]],[11,R[1347],E,R[1348],1,[[["self"]],[["bool"],[R[12],["bool"]]]]],[11,R[1360],E,R[1349],1,[[["self"]],[[R[52],["error"]],[R[12],[R[52]]]]]],[0,"unix",E,"Unix-specific extensions to the `std::net` types.",N,N],[8,R[1386],"net2::unix","Unix-specific extensions for the `TcpBuilder` type in this…",N,N],[10,R[1384],E,R[1350],2,[[["self"],["bool"]],[["self"],[R[12]]]]],[10,R[1351],E,R[1352],2,[[["self"]],[["bool"],[R[12],["bool"]]]]],[8,R[1387],E,"Unix-specific extensions for the `UdpBuilder` type in this…",N,N],[10,R[1384],E,R[1350],3,[[["self"],["bool"]],[["self"],[R[12]]]]],[10,R[1351],E,R[1352],3,[[["self"]],[["bool"],[R[12],["bool"]]]]],[8,R[1388],"net2","Extension methods for the standard [`TcpStream`…",N,N],[10,R[2742],E,R[2743],4,[[["self"],["bool"]],[R[12]]]],[10,"nodelay",E,R[2744],4,[[["self"]],[["bool"],[R[12],["bool"]]]]],[10,R[1367],E,R[1368],4,[[["self"],[R[9]]],[R[12]]]],[10,R[1369],E,R[1370],4,[[["self"]],[[R[12],[R[9]]],[R[9]]]]],[10,R[1371],E,R[1372],4,[[["self"],[R[9]]],[R[12]]]],[10,R[1373],E,R[1374],4,[[["self"]],[[R[12],[R[9]]],[R[9]]]]],[10,"set_keepalive_ms",E,R[1353],4,[[["u32"],[R[52],["u32"]],["self"]],[R[12]]]],[10,"keepalive_ms",E,R[1354],4,[[["self"]],[[R[12],[R[52]]],[R[52],["u32"]]]]],[10,R[2745],E,R[1353],4,[[[R[1358]],[R[52],[R[1358]]],["self"]],[R[12]]]],[10,R[4668],E,R[1354],4,[[["self"]],[[R[52],[R[1358]]],[R[12],[R[52]]]]]],[10,R[1375],E,R[1355],4,[[["u32"],[R[52],["u32"]],["self"]],[R[12]]]],[10,R[1376],E,R[1355],4,[[[R[1358]],[R[52],[R[1358]]],["self"]],[R[12]]]],[10,R[1377],E,R[1356],4,[[["self"]],[[R[12],[R[52]]],[R[52],["u32"]]]]],[10,R[1378],E,R[1356],4,[[["self"]],[[R[52],[R[1358]]],[R[12],[R[52]]]]]],[10,R[1379],E,R[1357],4,[[["u32"],[R[52],["u32"]],["self"]],[R[12]]]],[10,R[1380],E,R[1357],4,[[[R[1358]],[R[52],[R[1358]]],["self"]],[R[12]]]],[10,R[1381],E,R[1359],4,[[["self"]],[[R[12],[R[52]]],[R[52],["u32"]]]]],[10,R[1382],E,R[1359],4,[[["self"]],[[R[52],[R[1358]]],[R[12],[R[52]]]]]],[10,"set_ttl",E,R[1343],4,[[["u32"],["self"]],[R[12]]]],[10,"ttl",E,R[1361],4,[[["self"]],[["u32"],[R[12],["u32"]]]]],[10,R[1362],E,R[1344],4,[[["self"],["bool"]],[R[12]]]],[10,"only_v6",E,R[1363],4,[[["self"]],[["bool"],[R[12],["bool"]]]]],[10,"connect",E,"Executes a `connect` operation on this socket,…",4,[[["self"],[R[1383]]],[R[12]]]],[10,R[1360],E,R[1349],4,[[["self"]],[[R[52],["error"]],[R[12],[R[52]]]]]],[10,R[1364],E,"Moves this TCP stream into or out of nonblocking mode.",4,[[["self"],["bool"]],[R[12]]]],[10,R[2746],E,R[1365],4,[[[R[1358]],[R[52],[R[1358]]],["self"]],[R[12]]]],[10,"linger",E,R[1366],4,[[["self"]],[[R[52],[R[1358]]],[R[12],[R[52]]]]]],[8,R[1389],E,"Extension methods for the standard [`TcpListener`…",N,N],[10,"set_ttl",E,R[1343],5,[[["u32"],["self"]],[R[12]]]],[10,"ttl",E,R[1361],5,[[["self"]],[["u32"],[R[12],["u32"]]]]],[10,R[1362],E,R[1344],5,[[["self"],["bool"]],[R[12]]]],[10,"only_v6",E,R[1363],5,[[["self"]],[["bool"],[R[12],["bool"]]]]],[10,R[1360],E,R[1349],5,[[["self"]],[[R[52],["error"]],[R[12],[R[52]]]]]],[10,R[1364],E,"Moves this TCP listener into or out of nonblocking mode.",5,[[["self"],["bool"]],[R[12]]]],[10,R[2746],E,R[1365],5,[[[R[1358]],[R[52],[R[1358]]],["self"]],[R[12]]]],[10,"linger",E,R[1366],5,[[["self"]],[[R[52],[R[1358]]],[R[12],[R[52]]]]]],[8,R[1390],E,"Extension methods for the standard [`UdpSocket`…",N,N],[10,R[1367],E,R[1368],6,[[["self"],[R[9]]],[R[12]]]],[10,R[1369],E,R[1370],6,[[["self"]],[[R[12],[R[9]]],[R[9]]]]],[10,R[1371],E,R[1372],6,[[["self"],[R[9]]],[R[12]]]],[10,R[1373],E,R[1374],6,[[["self"]],[[R[12],[R[9]]],[R[9]]]]],[10,R[2747],E,R[2748],6,[[["self"],["bool"]],[R[12]]]],[10,R[2030],E,R[2749],6,[[["self"]],[["bool"],[R[12],["bool"]]]]],[10,R[2750],E,R[2751],6,[[["self"],["bool"]],[R[12]]]],[10,R[2752],E,R[2753],6,[[["self"]],[["bool"],[R[12],["bool"]]]]],[10,R[2754],E,R[2755],6,[[["u32"],["self"]],[R[12]]]],[10,R[2756],E,R[2757],6,[[["self"]],[["u32"],[R[12],["u32"]]]]],[10,"set_multicast_hops_v6",E,"Sets the value of the `IPV6_MULTICAST_HOPS` option for…",6,[[["u32"],["self"]],[R[12]]]],[10,"multicast_hops_v6",E,"Gets the value of the `IPV6_MULTICAST_HOPS` option for…",6,[[["self"]],[["u32"],[R[12],["u32"]]]]],[10,R[2758],E,R[2759],6,[[["self"],["bool"]],[R[12]]]],[10,R[2760],E,R[2761],6,[[["self"]],[["bool"],[R[12],["bool"]]]]],[10,"set_multicast_if_v4",E,"Sets the value of the `IP_MULTICAST_IF` option for this…",6,[[[R[1898]],["self"]],[R[12]]]],[10,"multicast_if_v4",E,"Gets the value of the `IP_MULTICAST_IF` option for this…",6,[[["self"]],[[R[1898]],[R[12],[R[1898]]]]]],[10,"set_multicast_if_v6",E,"Sets the value of the `IPV6_MULTICAST_IF` option for this…",6,[[["u32"],["self"]],[R[12]]]],[10,"multicast_if_v6",E,"Gets the value of the `IPV6_MULTICAST_IF` option for this…",6,[[["self"]],[["u32"],[R[12],["u32"]]]]],[10,"set_ttl",E,R[1343],6,[[["u32"],["self"]],[R[12]]]],[10,"ttl",E,R[1361],6,[[["self"]],[["u32"],[R[12],["u32"]]]]],[10,"set_unicast_hops_v6",E,"Sets the value for the `IPV6_UNICAST_HOPS` option on this…",6,[[["u32"],["self"]],[R[12]]]],[10,"unicast_hops_v6",E,"Gets the value of the `IPV6_UNICAST_HOPS` option for this…",6,[[["self"]],[["u32"],[R[12],["u32"]]]]],[10,R[1362],E,R[1344],6,[[["self"],["bool"]],[R[12]]]],[10,"only_v6",E,R[1363],6,[[["self"]],[["bool"],[R[12],["bool"]]]]],[10,R[2762],E,R[2763],6,[[[R[1898]],["self"]],[R[12]]]],[10,R[2764],E,R[2765],6,[[["u32"],[R[1904]],["self"]],[R[12]]]],[10,R[2766],E,R[2767],6,[[[R[1898]],["self"]],[R[12]]]],[10,R[2768],E,R[2769],6,[[["u32"],[R[1904]],["self"]],[R[12]]]],[10,R[1375],E,R[1355],6,[[["u32"],[R[52],["u32"]],["self"]],[R[12]]]],[10,R[1376],E,R[1355],6,[[[R[1358]],[R[52],[R[1358]]],["self"]],[R[12]]]],[10,R[1377],E,R[1356],6,[[["self"]],[[R[12],[R[52]]],[R[52],["u32"]]]]],[10,R[1378],E,R[1356],6,[[["self"]],[[R[52],[R[1358]]],[R[12],[R[52]]]]]],[10,R[1379],E,R[1357],6,[[["u32"],[R[52],["u32"]],["self"]],[R[12]]]],[10,R[1380],E,R[1357],6,[[[R[1358]],[R[52],[R[1358]]],["self"]],[R[12]]]],[10,R[1381],E,R[1359],6,[[["self"]],[[R[12],[R[52]]],[R[52],["u32"]]]]],[10,R[1382],E,R[1359],6,[[["self"]],[[R[52],[R[1358]]],[R[12],[R[52]]]]]],[10,R[1360],E,R[1349],6,[[["self"]],[[R[52],["error"]],[R[12],[R[52]]]]]],[10,"connect",E,"Connects this UDP socket to a remote address, allowing the…",6,[[["self"],[R[1383]]],[R[12]]]],[10,"send",E,R[4690],6,[[["self"]],[[R[12],[R[9]]],[R[9]]]]],[10,"recv",E,R[2770],6,[[["self"]],[[R[12],[R[9]]],[R[9]]]]],[10,R[1364],E,"Moves this UDP socket into or out of nonblocking mode.",6,[[["self"],["bool"]],[R[12]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,R[1384],E,E,0,[[["self"],["bool"]],[["self"],[R[12]]]]],[11,R[1351],E,E,0,[[["self"]],[["bool"],[R[12],["bool"]]]]],[11,R[1384],E,E,1,[[["self"],["bool"]],[["self"],[R[12]]]]],[11,R[1351],E,E,1,[[["self"]],[["bool"],[R[12],["bool"]]]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,1,[[["self"],[R[29]]],[R[12]]]],[11,R[2452],E,E,0,[[["self"]],["c_int"]]],[11,R[2452],E,E,1,[[["self"]],["c_int"]]],[11,R[1385],E,E,0,[[["c_int"]],[R[1338]]]],[11,R[1385],E,E,1,[[["c_int"]],[R[1341]]]]],"p":[[3,"TcpBuilder"],[3,"UdpBuilder"],[8,R[1386]],[8,R[1387]],[8,R[1388]],[8,R[1389]],[8,R[1390]]]};
searchIndex["nix"]={"doc":"Rust friendly bindings to the various *nix system functions.","i":[[4,"Error","nix","Nix Error Type",N,N],[13,"Sys",E,E,0,N],[13,"InvalidPath",E,E,0,N],[13,R[2031],E,"The operation involved a conversion to Rust's native…",0,N],[13,"UnsupportedOperation",E,"The operation is not supported by Nix, in this instance…",0,N],[0,"errno",E,E,N,N],[4,"Errno",R[1965],E,N,N],[13,"UnknownErrno",E,E,1,N],[13,"EPERM",E,E,1,N],[13,"ENOENT",E,E,1,N],[13,"ESRCH",E,E,1,N],[13,"EINTR",E,E,1,N],[13,"EIO",E,E,1,N],[13,"ENXIO",E,E,1,N],[13,"E2BIG",E,E,1,N],[13,"ENOEXEC",E,E,1,N],[13,"EBADF",E,E,1,N],[13,"ECHILD",E,E,1,N],[13,"EDEADLK",E,E,1,N],[13,"ENOMEM",E,E,1,N],[13,"EACCES",E,E,1,N],[13,"EFAULT",E,E,1,N],[13,"ENOTBLK",E,E,1,N],[13,"EBUSY",E,E,1,N],[13,"EEXIST",E,E,1,N],[13,"EXDEV",E,E,1,N],[13,"ENODEV",E,E,1,N],[13,"ENOTDIR",E,E,1,N],[13,"EISDIR",E,E,1,N],[13,"EINVAL",E,E,1,N],[13,"ENFILE",E,E,1,N],[13,"EMFILE",E,E,1,N],[13,"ENOTTY",E,E,1,N],[13,"ETXTBSY",E,E,1,N],[13,"EFBIG",E,E,1,N],[13,"ENOSPC",E,E,1,N],[13,"ESPIPE",E,E,1,N],[13,"EROFS",E,E,1,N],[13,"EMLINK",E,E,1,N],[13,"EPIPE",E,E,1,N],[13,"EDOM",E,E,1,N],[13,"ERANGE",E,E,1,N],[13,"EAGAIN",E,E,1,N],[13,R[1752],E,E,1,N],[13,"EALREADY",E,E,1,N],[13,"ENOTSOCK",E,E,1,N],[13,R[1753],E,E,1,N],[13,"EMSGSIZE",E,E,1,N],[13,"EPROTOTYPE",E,E,1,N],[13,R[1754],E,E,1,N],[13,R[1755],E,E,1,N],[13,R[1756],E,E,1,N],[13,"ENOTSUP",E,E,1,N],[13,R[1757],E,E,1,N],[13,R[1758],E,E,1,N],[13,"EADDRINUSE",E,E,1,N],[13,R[1759],E,E,1,N],[13,"ENETDOWN",E,E,1,N],[13,R[1760],E,E,1,N],[13,"ENETRESET",E,E,1,N],[13,R[1761],E,E,1,N],[13,"ECONNRESET",E,E,1,N],[13,"ENOBUFS",E,E,1,N],[13,"EISCONN",E,E,1,N],[13,"ENOTCONN",E,E,1,N],[13,"ESHUTDOWN",E,E,1,N],[13,R[1762],E,E,1,N],[13,"ETIMEDOUT",E,E,1,N],[13,R[1763],E,E,1,N],[13,"ELOOP",E,E,1,N],[13,R[1764],E,E,1,N],[13,"EHOSTDOWN",E,E,1,N],[13,R[1765],E,E,1,N],[13,"ENOTEMPTY",E,E,1,N],[13,"EPROCLIM",E,E,1,N],[13,"EUSERS",E,E,1,N],[13,"EDQUOT",E,E,1,N],[13,"ESTALE",E,E,1,N],[13,"EREMOTE",E,E,1,N],[13,"EBADRPC",E,E,1,N],[13,R[1766],E,E,1,N],[13,R[1767],E,E,1,N],[13,R[1768],E,E,1,N],[13,R[1769],E,E,1,N],[13,"ENOLCK",E,E,1,N],[13,"ENOSYS",E,E,1,N],[13,"EFTYPE",E,E,1,N],[13,"EAUTH",E,E,1,N],[13,"ENEEDAUTH",E,E,1,N],[13,"EPWROFF",E,E,1,N],[13,"EDEVERR",E,E,1,N],[13,"EOVERFLOW",E,E,1,N],[13,"EBADEXEC",E,E,1,N],[13,"EBADARCH",E,E,1,N],[13,"ESHLIBVERS",E,E,1,N],[13,"EBADMACHO",E,E,1,N],[13,"ECANCELED",E,E,1,N],[13,"EIDRM",E,E,1,N],[13,"ENOMSG",E,E,1,N],[13,"EILSEQ",E,E,1,N],[13,"ENOATTR",E,E,1,N],[13,"EBADMSG",E,E,1,N],[13,"EMULTIHOP",E,E,1,N],[13,"ENODATA",E,E,1,N],[13,"ENOLINK",E,E,1,N],[13,"ENOSR",E,E,1,N],[13,"ENOSTR",E,E,1,N],[13,"EPROTO",E,E,1,N],[13,"ETIME",E,E,1,N],[13,"EOPNOTSUPP",E,E,1,N],[13,"ENOPOLICY",E,E,1,N],[13,R[1770],E,E,1,N],[13,"EOWNERDEAD",E,E,1,N],[13,"EQFULL",E,E,1,N],[5,"from_i32",E,E,N,[[["i32"]],["errno"]]],[5,"errno",E,"Returns the platform-specific value of errno",N,[[],["i32"]]],[17,"ELAST",E,E,N,N],[17,R[1771],E,E,N,N],[17,"EDEADLOCK",E,E,N,N],[17,"EL2NSYNC",E,E,N,N],[8,R[1993],E,"The sentinel value indicates that a function failed and…",N,N],[10,"sentinel",E,E,2,[[],["self"]]],[11,"last",E,E,1,[[],["self"]]],[11,"desc",E,E,1,[[],["str"]]],[11,"from_i32",E,E,1,[[["i32"]],["errno"]]],[11,"clear",E,E,1,[[]]],[11,R[12],E,"Returns `Ok(value)` if it does not contain the sentinel…",1,[[[R[1772]],["partialeq"]],[[R[12]],[R[1772]],["partialeq"]]]],[0,"features","nix","Feature tests for OS functionality",N,N],[5,"socket_atomic_cloexec","nix::features","Check if the OS supports atomic close-on-exec for sockets",N,[[],["bool"]]],[0,"fcntl","nix",E,N,N],[3,"AtFlags",R[1966],E,N,N],[3,"OFlag",E,"Configuration options for opened files.",N,N],[3,"FdFlag",E,"Additional configuration flags for `fcntl`'s `F_SETFD`.",N,N],[4,"FcntlArg",E,E,N,N],[13,"F_DUPFD",E,E,3,N],[13,R[1773],E,E,3,N],[13,"F_GETFD",E,E,3,N],[13,"F_SETFD",E,E,3,N],[13,"F_GETFL",E,E,3,N],[13,"F_SETFL",E,E,3,N],[13,"F_SETLK",E,E,3,N],[13,"F_SETLKW",E,E,3,N],[13,"F_GETLK",E,E,3,N],[13,R[1774],E,E,3,N],[4,"FlockArg",E,E,N,N],[13,"LockShared",E,E,4,N],[13,"LockExclusive",E,E,4,N],[13,"Unlock",E,E,4,N],[13,"LockSharedNonblock",E,E,4,N],[13,"LockExclusiveNonblock",E,E,4,N],[13,"UnlockNonblock",E,E,4,N],[5,"open",E,E,N,[[["mode"],["p"],["oflag"]],[[R[12],["rawfd"]],["rawfd"]]]],[5,"openat",E,E,N,[[["mode"],["p"],["oflag"],["rawfd"]],[[R[12],["rawfd"]],["rawfd"]]]],[5,"readlink",E,E,N,[[["p"]],[["osstr"],[R[12],["osstr"]]]]],[5,"readlinkat",E,E,N,[[["p"],["rawfd"]],[["osstr"],[R[12],["osstr"]]]]],[5,"fcntl",E,E,N,[[["fcntlarg"],["rawfd"]],[["c_int"],[R[12],["c_int"]]]]],[5,"flock",E,E,N,[[["flockarg"],["rawfd"]],[R[12]]]],[18,R[1775],E,E,5,N],[11,"empty",E,R[1777],5,[[],["atflags"]]],[11,"all",E,R[1778],5,[[],["atflags"]]],[11,"bits",E,R[1779],5,[[["self"]],["c_int"]]],[11,R[1807],E,R[1780],5,[[["c_int"]],[[R[52],["atflags"]],["atflags"]]]],[11,R[1781],E,R[1782],5,[[["c_int"]],["atflags"]]],[11,R[69],E,R[1783],5,[[["self"]],["bool"]]],[11,"is_all",E,R[1784],5,[[["self"]],["bool"]]],[11,R[1791],E,R[1785],5,[[["atflags"],["self"]],["bool"]]],[11,R[473],E,R[1786],5,[[["atflags"],["self"]],["bool"]]],[11,"insert",E,R[1787],5,[[["self"],["atflags"]]]],[11,"remove",E,R[1788],5,[[["self"],["atflags"]]]],[11,"toggle",E,R[1789],5,[[["self"],["atflags"]]]],[11,"set",E,R[1790],5,[[["self"],["atflags"],["bool"]]]],[18,"O_ACCMODE",E,"Mask for the access mode of the file.",6,N],[18,"O_APPEND",E,"Open the file in append-only mode.",6,N],[18,"O_ASYNC",E,"Generate a signal when input or output becomes possible.",6,N],[18,"O_CLOEXEC",E,"Closes the file descriptor once an `execve` call is made.",6,N],[18,"O_CREAT",E,"Create the file if it does not exist.",6,N],[18,R[1776],E,"If the specified path isn't a directory, fail.",6,N],[18,"O_DSYNC",E,"Implicitly follow each `write()` with an `fdatasync()`.",6,N],[18,"O_EXCL",E,"Error out if a file was not created.",6,N],[18,"O_EXLOCK",E,"Open with an exclusive file lock.",6,N],[18,"O_FSYNC",E,"Same as `O_SYNC`.",6,N],[18,"O_NOCTTY",E,"Don't attach the device as the process' controlling…",6,N],[18,"O_NDELAY",E,"Same as `O_NONBLOCK`.",6,N],[18,"O_NOFOLLOW",E,"`open()` will fail if the given path is a symbolic link.",6,N],[18,"O_NONBLOCK",E,"When possible, open the file in nonblocking mode.",6,N],[18,"O_RDONLY",E,"Only allow reading.",6,N],[18,"O_RDWR",E,"Allow both reading and writing.",6,N],[18,"O_SHLOCK",E,"Open with a shared file lock.",6,N],[18,"O_SYNC",E,"Implicitly follow each `write()` with an `fsync()`.",6,N],[18,"O_TRUNC",E,"Truncate an existing regular file to 0 length if it allows…",6,N],[18,"O_WRONLY",E,"Only allow writing.",6,N],[11,"empty",E,R[1777],6,[[],["oflag"]]],[11,"all",E,R[1778],6,[[],["oflag"]]],[11,"bits",E,R[1779],6,[[["self"]],["c_int"]]],[11,R[1807],E,R[1780],6,[[["c_int"]],[["oflag"],[R[52],["oflag"]]]]],[11,R[1781],E,R[1782],6,[[["c_int"]],["oflag"]]],[11,R[69],E,R[1783],6,[[["self"]],["bool"]]],[11,"is_all",E,R[1784],6,[[["self"]],["bool"]]],[11,R[1791],E,R[1785],6,[[["self"],["oflag"]],["bool"]]],[11,R[473],E,R[1786],6,[[["self"],["oflag"]],["bool"]]],[11,"insert",E,R[1787],6,[[["self"],["oflag"]]]],[11,"remove",E,R[1788],6,[[["self"],["oflag"]]]],[11,"toggle",E,R[1789],6,[[["self"],["oflag"]]]],[11,"set",E,R[1790],6,[[["self"],["bool"],["oflag"]]]],[18,"FD_CLOEXEC",E,"The file descriptor will automatically be closed during a…",7,N],[11,"empty",E,R[1777],7,[[],["fdflag"]]],[11,"all",E,R[1778],7,[[],["fdflag"]]],[11,"bits",E,R[1779],7,[[["self"]],["c_int"]]],[11,R[1807],E,R[1780],7,[[["c_int"]],[["fdflag"],[R[52],["fdflag"]]]]],[11,R[1781],E,R[1782],7,[[["c_int"]],["fdflag"]]],[11,R[69],E,R[1783],7,[[["self"]],["bool"]]],[11,"is_all",E,R[1784],7,[[["self"]],["bool"]]],[11,R[1791],E,R[1785],7,[[["fdflag"],["self"]],["bool"]]],[11,R[473],E,R[1786],7,[[["fdflag"],["self"]],["bool"]]],[11,"insert",E,R[1787],7,[[["fdflag"],["self"]]]],[11,"remove",E,R[1788],7,[[["fdflag"],["self"]]]],[11,"toggle",E,R[1789],7,[[["fdflag"],["self"]]]],[11,"set",E,R[1790],7,[[["fdflag"],["self"],["bool"]]]],[0,"ifaddrs","nix","Query network interface addresses",N,N],[3,R[1994],R[1942],"Describes a single address for an interface as returned by…",N,N],[12,"interface_name",E,"Name of the network interface",8,N],[12,"flags",E,"Flags as from `SIOCGIFFLAGS` ioctl",8,N],[12,"address",E,"Network address of this interface",8,N],[12,"netmask",E,"Netmask of this interface",8,N],[12,R[2030],E,"Broadcast address of this interface, if applicable",8,N],[12,R[5529],E,"Point-to-point destination address",8,N],[3,R[2014],E,"Holds the results of `getifaddrs`.",N,N],[5,"getifaddrs",E,"Get interface addresses using libc's `getifaddrs`",N,[[],[[R[12],[R[1792]]],[R[1792]]]]],[0,"net","nix","Functionality involving network interfaces",N,N],[0,"if_","nix::net","Network interface name resolution.",N,N],[3,R[1995],R[1943],"Standard interface flags, used by `getifaddrs`",N,N],[5,R[1793],E,"Resolve an interface into a interface number.",N,[[["p"]],[["c_uint"],[R[12],["c_uint"]]]]],[18,"IFF_UP",E,"Interface is running. (see `netdevice(7)`)",9,N],[18,R[1794],E,"Valid broadcast address set. (see `netdevice(7)`)",9,N],[18,"IFF_DEBUG",E,"Internal debugging flag. (see `netdevice(7)`)",9,N],[18,R[1795],E,"Interface is a loopback interface. (see `netdevice(7)`)",9,N],[18,R[1796],E,"Interface is a point-to-point link. (see `netdevice(7)`)",9,N],[18,R[1797],E,"Avoid use of trailers. (see `netdevice(7)`)",9,N],[18,R[1798],E,"Resources allocated. (see `netdevice(7)`)",9,N],[18,"IFF_NOARP",E,"No arp protocol, L2 destination address not set. (see…",9,N],[18,R[1799],E,"Interface is in promiscuous mode. (see `netdevice(7)`)",9,N],[18,R[1800],E,"Receive all multicast packets. (see `netdevice(7)`)",9,N],[18,R[1801],E,"transmission in progress, tx hardware queue is full",9,N],[18,R[1802],E,"Can't hear own transmissions.",9,N],[18,R[1803],E,"Supports multicast. (see `netdevice(7)`)",9,N],[18,"IFF_LINK0",E,R[1804],9,N],[18,"IFF_LINK1",E,R[1804],9,N],[18,"IFF_LINK2",E,R[1804],9,N],[18,R[1805],E,"Use alternate physical connection.",9,N],[11,"empty",E,R[1777],9,[[],[R[1806]]]],[11,"all",E,R[1778],9,[[],[R[1806]]]],[11,"bits",E,R[1779],9,[[["self"]],["c_int"]]],[11,R[1807],E,R[1780],9,[[["c_int"]],[[R[1806]],[R[52],[R[1806]]]]]],[11,R[1781],E,R[1782],9,[[["c_int"]],[R[1806]]]],[11,R[69],E,R[1783],9,[[["self"]],["bool"]]],[11,"is_all",E,R[1784],9,[[["self"]],["bool"]]],[11,R[1791],E,R[1785],9,[[[R[1806]],["self"]],["bool"]]],[11,R[473],E,R[1786],9,[[[R[1806]],["self"]],["bool"]]],[11,"insert",E,R[1787],9,[[["self"],[R[1806]]]]],[11,"remove",E,R[1788],9,[[["self"],[R[1806]]]]],[11,"toggle",E,R[1789],9,[[["self"],[R[1806]]]]],[11,"set",E,R[1790],9,[[["self"],[R[1806]],["bool"]]]],[0,"poll","nix","Wait for events to trigger on specific file descriptors",N,N],[3,"PollFd",R[1970],"This is a wrapper around `libc::pollfd`.",N,N],[3,"EventFlags",E,"These flags define the different events that can be…",N,N],[5,"poll",E,"`poll` waits for one of a set of file descriptors to…",N,[[["c_int"]],[[R[12],["c_int"]],["c_int"]]]],[11,"new",E,"Creates a new `PollFd` specifying the events of interest…",10,[[[R[1808]],["rawfd"]],["pollfd"]]],[11,"revents",E,"Returns the events that occured in the last call to `poll`…",10,[[["self"]],[[R[1808]],[R[52],[R[1808]]]]]],[18,"POLLIN",E,"There is data to read.",11,N],[18,"POLLPRI",E,"There is some exceptional condition on the file descriptor.",11,N],[18,"POLLOUT",E,"Writing is now possible, though a write larger that the…",11,N],[18,"POLLRDNORM",E,"Equivalent to `POLLIN`",11,N],[18,"POLLWRNORM",E,"Equivalent to `POLLOUT`",11,N],[18,"POLLRDBAND",E,"Priority band data can be read (generally unused on Linux).",11,N],[18,"POLLWRBAND",E,"Priority data may be written.",11,N],[18,"POLLERR",E,"Error condition (only returned in `PollFd::revents`;…",11,N],[18,"POLLHUP",E,"Hang up (only returned in `PollFd::revents`; ignored in…",11,N],[18,"POLLNVAL",E,"Invalid request: `fd` not open (only returned in…",11,N],[11,"empty",E,R[1777],11,[[],[R[1808]]]],[11,"all",E,R[1778],11,[[],[R[1808]]]],[11,"bits",E,R[1779],11,[[["self"]],["c_short"]]],[11,R[1807],E,R[1780],11,[[["c_short"]],[[R[1808]],[R[52],[R[1808]]]]]],[11,R[1781],E,R[1782],11,[[["c_short"]],[R[1808]]]],[11,R[69],E,R[1783],11,[[["self"]],["bool"]]],[11,"is_all",E,R[1784],11,[[["self"]],["bool"]]],[11,R[1791],E,R[1785],11,[[[R[1808]],["self"]],["bool"]]],[11,R[473],E,R[1786],11,[[[R[1808]],["self"]],["bool"]]],[11,"insert",E,R[1787],11,[[[R[1808]],["self"]]]],[11,"remove",E,R[1788],11,[[[R[1808]],["self"]]]],[11,"toggle",E,R[1789],11,[[[R[1808]],["self"]]]],[11,"set",E,R[1790],11,[[[R[1808]],["self"],["bool"]]]],[0,"pty","nix","Create master and slave virtual pseudo-terminals (PTYs)",N,N],[6,"SessionId",R[1992],E,N,N],[3,"Winsize",E,E,N,N],[12,"ws_row",E,E,12,N],[12,"ws_col",E,E,12,N],[12,"ws_xpixel",E,E,12,N],[12,"ws_ypixel",E,E,12,N],[3,R[1996],E,"Representation of a master/slave pty pair",N,N],[12,"master",E,"The master port in a virtual pty pair",13,N],[12,"slave",E,"The slave port in a virtual pty pair",13,N],[3,"PtyMaster",E,"Representation of the Master device in a master/slave pty…",N,N],[5,"grantpt",E,"Grant access to a slave pseudoterminal (see `grantpt(3)`)",N,[[[R[1810]]],[R[12]]]],[5,R[1809],E,"Open a pseudoterminal device (see `posix_openpt(3)`)",N,[[["oflag"]],[[R[1810]],[R[12],[R[1810]]]]]],[5,"ptsname",E,"Get the name of the slave pseudoterminal (see `ptsname(3)`)",N,[[[R[1810]]],[["string"],[R[12],["string"]]]]],[5,"unlockpt",E,"Unlock a pseudoterminal master/slave pseudoterminal pair…",N,[[[R[1810]]],[R[12]]]],[5,"openpty",E,"Create a new pseudoterminal, returning the slave and…",N,[[["into",[R[52]]],["into",[R[52]]],[R[52],["termios"]],[R[52],["winsize"]]],[[R[12],[R[1811]]],[R[1811]]]]],[0,"sys","nix",E,N,N],[0,"aio",R[1873],"POSIX Asynchronous I/O",N,N],[3,"AioCb",R[1944],"AIO Control Block.",N,N],[4,R[1997],E,"Mode for `AioCb::fsync`. Controls whether only data or…",N,N],[13,"O_SYNC",E,"do it like `fsync`",14,N],[13,"O_DSYNC",E,"on supported operating systems only, do it like `fdatasync`",14,N],[4,"LioOpcode",E,"When used with `lio_listio`, determines whether a given…",N,N],[13,"LIO_NOP",E,E,15,N],[13,"LIO_WRITE",E,E,15,N],[13,"LIO_READ",E,E,15,N],[4,"LioMode",E,"Mode for `lio_listio`",N,N],[13,"LIO_WAIT",E,"Requests that `lio_listio` block until all requested…",16,N],[13,"LIO_NOWAIT",E,"Requests that `lio_listio` return immediately",16,N],[4,R[1998],E,"Return values for `AioCb::cancel` and `aio_cancel_all`",N,N],[13,"AioCanceled",E,"All outstanding requests were canceled",17,N],[13,"AioNotCanceled",E,"Some requests were not canceled. Their status should be…",17,N],[13,"AioAllDone",E,"All of the requests have already finished",17,N],[4,"Buffer",E,"Owns (uniquely or shared) a memory buffer to keep it from…",N,N],[13,"None",E,"No buffer to own.",18,N],[13,"Phantom",E,"Keeps a reference to a slice",18,N],[13,"BoxedSlice",E,"Generic thing that keeps a buffer from dropping",18,N],[13,"BoxedMutSlice",E,"Generic thing that keeps a mutable buffer from dropping",18,N],[5,"aio_cancel_all",E,"Cancels outstanding AIO requests for a given file…",N,[[["rawfd"]],[[R[12],[R[1812]]],[R[1812]]]]],[5,R[1813],E,"Suspends the calling process until at least one of the…",N,[[[R[777]],[R[52],[R[777]]]],[R[12]]]],[11,"buffer",E,"Remove the inner `Buffer` and return it",19,[[["self"]],["buffer"]]],[11,"boxed_slice",E,"Remove the inner boxed slice, if any, and return it.",19,[[["self"]],[["box",[R[39]]],[R[52],["box"]]]]],[11,"boxed_mut_slice",E,"Remove the inner boxed mutable slice, if any, and return it.",19,[[["self"]],[["box",["borrowmut"]],[R[52],["box"]]]]],[11,"fd",E,"Returns the underlying file descriptor associated with the…",19,[[["self"]],["rawfd"]]],[11,"from_fd",E,"Constructs a new `AioCb` with no associated buffer.",19,[[[R[1814]],["c_int"],["rawfd"]],["aiocb"]]],[11,R[1925],E,"Constructs a new `AioCb` from a mutable slice.",19,[[["off_t"],[R[1815]],[R[1814]],["c_int"],["rawfd"]],["aiocb"]]],[11,"from_boxed_slice",E,"The safest and most flexible way to create an `AioCb`.",19,[[["off_t"],[R[39]],[R[1815]],[R[1814]],["c_int"],["box",[R[39]]],["rawfd"]],["aiocb"]]],[11,"from_boxed_mut_slice",E,"The safest and most flexible way to create an `AioCb` for…",19,[[["off_t"],[R[1815]],["box",["borrowmut"]],["borrowmut"],[R[1814]],["c_int"],["rawfd"]],["aiocb"]]],[11,"from_mut_ptr",E,"Constructs a new `AioCb` from a mutable raw pointer",19,[[["off_t"],[R[1815]],[R[1814]],[R[9]],["c_int"],["rawfd"]],["aiocb"]]],[11,R[732],E,"Constructs a new `AioCb` from a raw pointer.",19,[[["off_t"],[R[1815]],[R[1814]],[R[9]],["c_int"],["rawfd"]],["aiocb"]]],[11,R[2029],E,"Like `from_mut_slice`, but works on constant slices rather…",19,[[["off_t"],[R[1815]],[R[1814]],["c_int"],["rawfd"]],["aiocb"]]],[11,"set_sigev_notify",E,"Update the notification settings for an existing `aiocb`",19,[[["self"],[R[1814]]]]],[11,"cancel",E,"Cancels an outstanding AIO request.",19,[[["self"]],[[R[12],[R[1812]]],[R[1812]]]]],[11,"error",E,"Retrieve error status of an asynchronous operation.",19,[[["self"]],[R[12]]]],[11,"fsync",E,"An asynchronous version of `fsync(2)`.",19,[[["self"],[R[1968]]],[R[12]]]],[11,"lio_opcode",E,"Returns the `aiocb`'s `LioOpcode` field",19,[[["self"]],[[R[1815]],[R[52],[R[1815]]]]]],[11,"nbytes",E,"Returns the requested length of the aio operation in bytes",19,[[["self"]],[R[9]]]],[11,"offset",E,"Returns the file offset stored in the `AioCb`",19,[[["self"]],["off_t"]]],[11,"priority",E,"Returns the priority of the `AioCb`",19,[[["self"]],["c_int"]]],[11,"read",E,"Asynchronously reads from a file descriptor into a buffer",19,[[["self"]],[R[12]]]],[11,R[782],E,"Returns the `SigEvent` stored in the `AioCb`",19,[[["self"]],[R[782]]]],[11,"aio_return",E,"Retrieve return status of an asynchronous operation.",19,[[["self"]],[["isize"],[R[12],["isize"]]]]],[11,"write",E,"Asynchronously writes from a buffer to a file descriptor",19,[[["self"]],[R[12]]]],[0,"event",R[1873],E,N,N],[3,"KEvent",R[1945],E,N,N],[3,"EventFlag",E,E,N,N],[3,"FilterFlag",E,E,N,N],[4,R[1999],E,E,N,N],[13,"EVFILT_AIO",E,E,20,N],[13,"EVFILT_FS",E,E,20,N],[13,R[1816],E,E,20,N],[13,R[1817],E,E,20,N],[13,R[1818],E,E,20,N],[13,R[1819],E,E,20,N],[13,R[1820],E,E,20,N],[13,R[1821],E,E,20,N],[13,"EVFILT_VM",E,E,20,N],[13,R[1822],E,E,20,N],[13,R[1823],E,E,20,N],[5,"kqueue",E,E,N,[[],[[R[12],["rawfd"]],["rawfd"]]]],[5,"kevent",E,E,N,[[[R[9]],["rawfd"]],[[R[12],[R[9]]],[R[9]]]]],[5,"kevent_ts",E,E,N,[[[R[52],[R[777]]],[R[777]],["rawfd"]],[[R[12],[R[9]]],[R[9]]]]],[5,"ev_set",E,E,N,[[["intptr_t"],["kevent"],[R[1851]],[R[1852]],[R[1827]],[R[9]]]]],[6,R[1826],E,E,N,N],[18,"EV_ADD",E,E,21,N],[18,"EV_CLEAR",E,E,21,N],[18,"EV_DELETE",E,E,21,N],[18,"EV_DISABLE",E,E,21,N],[18,R[1824],E,E,21,N],[18,"EV_ENABLE",E,E,21,N],[18,"EV_EOF",E,E,21,N],[18,"EV_ERROR",E,E,21,N],[18,"EV_FLAG0",E,E,21,N],[18,"EV_FLAG1",E,E,21,N],[18,"EV_ONESHOT",E,E,21,N],[18,"EV_OOBAND",E,E,21,N],[18,"EV_POLL",E,E,21,N],[18,"EV_RECEIPT",E,E,21,N],[18,R[1825],E,E,21,N],[11,"empty",E,R[1777],21,[[],[R[1827]]]],[11,"all",E,R[1778],21,[[],[R[1827]]]],[11,"bits",E,R[1779],21,[[["self"]],[R[1826]]]],[11,R[1807],E,R[1780],21,[[[R[1826]]],[[R[52],[R[1827]]],[R[1827]]]]],[11,R[1781],E,R[1782],21,[[[R[1826]]],[R[1827]]]],[11,R[69],E,R[1783],21,[[["self"]],["bool"]]],[11,"is_all",E,R[1784],21,[[["self"]],["bool"]]],[11,R[1791],E,R[1785],21,[[["self"],[R[1827]]],["bool"]]],[11,R[473],E,R[1786],21,[[["self"],[R[1827]]],["bool"]]],[11,"insert",E,R[1787],21,[[["self"],[R[1827]]]]],[11,"remove",E,R[1788],21,[[["self"],[R[1827]]]]],[11,"toggle",E,R[1789],21,[[["self"],[R[1827]]]]],[11,"set",E,R[1790],21,[[["self"],["bool"],[R[1827]]]]],[18,R[1828],E,E,22,N],[18,R[1829],E,E,22,N],[18,"NOTE_CHILD",E,E,22,N],[18,R[1830],E,E,22,N],[18,"NOTE_EXEC",E,E,22,N],[18,"NOTE_EXIT",E,E,22,N],[18,R[1831],E,E,22,N],[18,R[1832],E,E,22,N],[18,R[1833],E,E,22,N],[18,"NOTE_FFAND",E,E,22,N],[18,R[1834],E,E,22,N],[18,R[1835],E,E,22,N],[18,R[1836],E,E,22,N],[18,"NOTE_FFNOP",E,E,22,N],[18,"NOTE_FFOR",E,E,22,N],[18,"NOTE_FORK",E,E,22,N],[18,"NOTE_LINK",E,E,22,N],[18,"NOTE_LOWAT",E,E,22,N],[18,"NOTE_NONE",E,E,22,N],[18,R[1837],E,E,22,N],[18,R[1838],E,E,22,N],[18,R[1839],E,E,22,N],[18,"NOTE_REAP",E,E,22,N],[18,R[1840],E,E,22,N],[18,R[1841],E,E,22,N],[18,R[1842],E,E,22,N],[18,R[1843],E,E,22,N],[18,"NOTE_TRACK",E,E,22,N],[18,R[1844],E,E,22,N],[18,R[1845],E,E,22,N],[18,R[1846],E,E,22,N],[18,R[1847],E,E,22,N],[18,R[1848],E,E,22,N],[18,R[1849],E,E,22,N],[18,R[1850],E,E,22,N],[18,"NOTE_WRITE",E,E,22,N],[11,"empty",E,R[1777],22,[[],[R[1851]]]],[11,"all",E,R[1778],22,[[],[R[1851]]]],[11,"bits",E,R[1779],22,[[["self"]],["u32"]]],[11,R[1807],E,R[1780],22,[[["u32"]],[[R[52],[R[1851]]],[R[1851]]]]],[11,R[1781],E,R[1782],22,[[["u32"]],[R[1851]]]],[11,R[69],E,R[1783],22,[[["self"]],["bool"]]],[11,"is_all",E,R[1784],22,[[["self"]],["bool"]]],[11,R[1791],E,R[1785],22,[[[R[1851]],["self"]],["bool"]]],[11,R[473],E,R[1786],22,[[[R[1851]],["self"]],["bool"]]],[11,"insert",E,R[1787],22,[[["self"],[R[1851]]]]],[11,"remove",E,R[1788],22,[[["self"],[R[1851]]]]],[11,"toggle",E,R[1789],22,[[["self"],[R[1851]]]]],[11,"set",E,R[1790],22,[[["self"],[R[1851]],["bool"]]]],[11,"new",E,E,23,[[["intptr_t"],["uintptr_t"],[R[1851]],[R[1852]],[R[1827]]],["kevent"]]],[11,"ident",E,E,23,[[["self"]],["uintptr_t"]]],[11,"filter",E,E,23,[[["self"]],[R[1852]]]],[11,"flags",E,E,23,[[["self"]],[R[1827]]]],[11,"fflags",E,E,23,[[["self"]],[R[1851]]]],[11,"data",E,E,23,[[["self"]],["intptr_t"]]],[11,"udata",E,E,23,[[["self"]],["intptr_t"]]],[0,"ioctl",R[1873],"Provide helpers for making ioctl system calls.",N,N],[0,"mman",E,E,N,N],[3,"ProtFlags",R[1946],"Desired memory protection of a memory mapping.",N,N],[3,"MapFlags",E,"Additional parameters for `mmap()`.",N,N],[3,"MsFlags",E,"Configuration flags for `msync`.",N,N],[3,R[2000],E,"Flags for `mlockall`.",N,N],[4,"MmapAdvise",E,"Usage information for a range of memory to allow for…",N,N],[13,R[1853],E,"No further special treatment. This is the default.",24,N],[13,R[1854],E,"Expect random page references.",24,N],[13,R[1855],E,"Expect sequential page references.",24,N],[13,R[1856],E,"Expect access in the near future.",24,N],[13,R[1857],E,"Do not expect access in the near future.",24,N],[13,"MADV_FREE",E,"Specify that the application no longer needs the pages in…",24,N],[13,R[1858],E,"Indicates that the application will not need the data in…",24,N],[13,R[1859],E,E,24,N],[13,R[1860],E,E,24,N],[13,R[1861],E,E,24,N],[5,"mlock",E,"Locks all memory pages that contain part of the address…",N,[[["size_t"]],[R[12]]]],[5,"munlock",E,"Unlocks all memory pages that contain part of the address…",N,[[["size_t"]],[R[12]]]],[5,"mlockall",E,"Locks all memory pages mapped into this process' address…",N,[[[R[1871]]],[R[12]]]],[5,"munlockall",E,"Unlocks all memory pages mapped into this process' address…",N,[[],[R[12]]]],[5,"mmap",E,"Calls to mmap are inherently unsafe, so they must be made…",N,[[["off_t"],[R[1866]],["size_t"],[R[1862]],["rawfd"]],[R[12]]]],[5,"munmap",E,E,N,[[["size_t"]],[R[12]]]],[5,"madvise",E,E,N,[[["size_t"],[R[1971]]],[R[12]]]],[5,"msync",E,E,N,[[["msflags"],["size_t"]],[R[12]]]],[5,"shm_open",E,E,N,[[["mode"],["p"],["oflag"]],[[R[12],["rawfd"]],["rawfd"]]]],[5,"shm_unlink",E,E,N,[[["p"]],[R[12]]]],[18,"PROT_NONE",E,"Pages cannot be accessed.",25,N],[18,"PROT_READ",E,"Pages can be read.",25,N],[18,"PROT_WRITE",E,"Pages can be written.",25,N],[18,"PROT_EXEC",E,"Pages can be executed",25,N],[11,"empty",E,R[1777],25,[[],[R[1862]]]],[11,"all",E,R[1778],25,[[],[R[1862]]]],[11,"bits",E,R[1779],25,[[["self"]],["c_int"]]],[11,R[1807],E,R[1780],25,[[["c_int"]],[[R[52],[R[1862]]],[R[1862]]]]],[11,R[1781],E,R[1782],25,[[["c_int"]],[R[1862]]]],[11,R[69],E,R[1783],25,[[["self"]],["bool"]]],[11,"is_all",E,R[1784],25,[[["self"]],["bool"]]],[11,R[1791],E,R[1785],25,[[["self"],[R[1862]]],["bool"]]],[11,R[473],E,R[1786],25,[[["self"],[R[1862]]],["bool"]]],[11,"insert",E,R[1787],25,[[["self"],[R[1862]]]]],[11,"remove",E,R[1788],25,[[["self"],[R[1862]]]]],[11,"toggle",E,R[1789],25,[[["self"],[R[1862]]]]],[11,"set",E,R[1790],25,[[["self"],["bool"],[R[1862]]]]],[18,"MAP_FILE",E,"Compatibility flag. Ignored.",26,N],[18,"MAP_SHARED",E,"Share this mapping. Mutually exclusive with `MAP_PRIVATE`.",26,N],[18,R[1863],E,"Create a private copy-on-write mapping. Mutually exclusive…",26,N],[18,"MAP_FIXED",E,"Place the mapping at exactly the address specified in…",26,N],[18,"MAP_ANON",E,"Synonym for `MAP_ANONYMOUS`.",26,N],[18,R[1864],E,"Do not reserve swap space for this mapping.",26,N],[18,R[1865],E,"Pages in this mapping are not retained in the kernel's…",26,N],[18,"MAP_JIT",E,E,26,N],[11,"empty",E,R[1777],26,[[],[R[1866]]]],[11,"all",E,R[1778],26,[[],[R[1866]]]],[11,"bits",E,R[1779],26,[[["self"]],["c_int"]]],[11,R[1807],E,R[1780],26,[[["c_int"]],[[R[1866]],[R[52],[R[1866]]]]]],[11,R[1781],E,R[1782],26,[[["c_int"]],[R[1866]]]],[11,R[69],E,R[1783],26,[[["self"]],["bool"]]],[11,"is_all",E,R[1784],26,[[["self"]],["bool"]]],[11,R[1791],E,R[1785],26,[[["self"],[R[1866]]],["bool"]]],[11,R[473],E,R[1786],26,[[["self"],[R[1866]]],["bool"]]],[11,"insert",E,R[1787],26,[[["self"],[R[1866]]]]],[11,"remove",E,R[1788],26,[[["self"],[R[1866]]]]],[11,"toggle",E,R[1789],26,[[["self"],[R[1866]]]]],[11,"set",E,R[1790],26,[[["self"],[R[1866]],["bool"]]]],[18,"MS_ASYNC",E,"Schedule an update but return immediately.",27,N],[18,R[1867],E,"Invalidate all cached data.",27,N],[18,R[1868],E,"Invalidate pages, but leave them mapped.",27,N],[18,R[1869],E,"Deactivate pages, but leave them mapped.",27,N],[18,"MS_SYNC",E,"Perform an update and wait for it to complete.",27,N],[11,"empty",E,R[1777],27,[[],["msflags"]]],[11,"all",E,R[1778],27,[[],["msflags"]]],[11,"bits",E,R[1779],27,[[["self"]],["c_int"]]],[11,R[1807],E,R[1780],27,[[["c_int"]],[[R[52],["msflags"]],["msflags"]]]],[11,R[1781],E,R[1782],27,[[["c_int"]],["msflags"]]],[11,R[69],E,R[1783],27,[[["self"]],["bool"]]],[11,"is_all",E,R[1784],27,[[["self"]],["bool"]]],[11,R[1791],E,R[1785],27,[[["self"],["msflags"]],["bool"]]],[11,R[473],E,R[1786],27,[[["self"],["msflags"]],["bool"]]],[11,"insert",E,R[1787],27,[[["self"],["msflags"]]]],[11,"remove",E,R[1788],27,[[["self"],["msflags"]]]],[11,"toggle",E,R[1789],27,[[["self"],["msflags"]]]],[11,"set",E,R[1790],27,[[["self"],["msflags"],["bool"]]]],[18,R[1870],E,"Lock pages that are currently mapped into the address…",28,N],[18,"MCL_FUTURE",E,"Lock pages which will become mapped into the address space…",28,N],[11,"empty",E,R[1777],28,[[],[R[1871]]]],[11,"all",E,R[1778],28,[[],[R[1871]]]],[11,"bits",E,R[1779],28,[[["self"]],["c_int"]]],[11,R[1807],E,R[1780],28,[[["c_int"]],[[R[52],[R[1871]]],[R[1871]]]]],[11,R[1781],E,R[1782],28,[[["c_int"]],[R[1871]]]],[11,R[69],E,R[1783],28,[[["self"]],["bool"]]],[11,"is_all",E,R[1784],28,[[["self"]],["bool"]]],[11,R[1791],E,R[1785],28,[[["self"],[R[1871]]],["bool"]]],[11,R[473],E,R[1786],28,[[["self"],[R[1871]]],["bool"]]],[11,"insert",E,R[1787],28,[[["self"],[R[1871]]]]],[11,"remove",E,R[1788],28,[[["self"],[R[1871]]]]],[11,"toggle",E,R[1789],28,[[["self"],[R[1871]]]]],[11,"set",E,R[1790],28,[[["self"],["bool"],[R[1871]]]]],[0,"pthread",R[1873],E,N,N],[5,R[1872],"nix::sys::pthread","Obtain ID of the calling thread (see `pthread_self(3)`",N,[[],["pthread"]]],[6,"Pthread",E,E,N,N],[0,"select",R[1873],E,N,N],[17,"FD_SETSIZE",R[1947],E,N,N],[3,"FdSet",E,E,N,N],[5,"select",E,"Monitors file descriptors for readiness",N,[[["e"],["w"],["n"],[T],["r"]],[["c_int"],[R[12],["c_int"]]]]],[5,"pselect",E,"Monitors file descriptors for readiness with an altered…",N,[[["e"],["s"],["w"],["n"],[T],["r"]],[["c_int"],[R[12],["c_int"]]]]],[11,"new",E,E,29,[[],["fdset"]]],[11,"insert",E,E,29,[[["self"],["rawfd"]]]],[11,"remove",E,E,29,[[["self"],["rawfd"]]]],[11,R[473],E,E,29,[[["self"],["rawfd"]],["bool"]]],[11,"clear",E,E,29,[[["self"]]]],[11,"highest",E,"Finds the highest file descriptor in the set.",29,[[["self"]],[[R[52],["rawfd"]],["rawfd"]]]],[0,"sendfile",R[1873],E,N,N],[5,"sendfile","nix::sys::sendfile","Read bytes from `in_fd` starting at `offset` and write up…",N,[[["off_t"],[R[52],["off_t"]],[R[52]],["rawfd"]]]],[0,"signal",R[1873],E,N,N],[3,"SigEvent",R[1877],"Used to request asynchronous notification of the…",N,N],[3,R[2015],E,E,N,N],[3,"SaFlags",E,E,N,N],[3,"SigSet",E,E,N,N],[3,"SigAction",E,"Action to take on receipt of a signal. Corresponds to…",N,N],[4,"Signal",E,E,N,N],[13,"SIGHUP",E,E,30,N],[13,"SIGINT",E,E,30,N],[13,"SIGQUIT",E,E,30,N],[13,"SIGILL",E,E,30,N],[13,"SIGTRAP",E,E,30,N],[13,"SIGABRT",E,E,30,N],[13,"SIGBUS",E,E,30,N],[13,"SIGFPE",E,E,30,N],[13,"SIGKILL",E,E,30,N],[13,"SIGUSR1",E,E,30,N],[13,"SIGSEGV",E,E,30,N],[13,"SIGUSR2",E,E,30,N],[13,"SIGPIPE",E,E,30,N],[13,"SIGALRM",E,E,30,N],[13,"SIGTERM",E,E,30,N],[13,"SIGCHLD",E,E,30,N],[13,"SIGCONT",E,E,30,N],[13,"SIGSTOP",E,E,30,N],[13,"SIGTSTP",E,E,30,N],[13,"SIGTTIN",E,E,30,N],[13,"SIGTTOU",E,E,30,N],[13,"SIGURG",E,E,30,N],[13,"SIGXCPU",E,E,30,N],[13,"SIGXFSZ",E,E,30,N],[13,"SIGVTALRM",E,E,30,N],[13,"SIGPROF",E,E,30,N],[13,"SIGWINCH",E,E,30,N],[13,"SIGIO",E,E,30,N],[13,"SIGSYS",E,E,30,N],[13,"SIGEMT",E,E,30,N],[13,"SIGINFO",E,E,30,N],[4,"SigmaskHow",E,E,N,N],[13,"SIG_BLOCK",E,E,31,N],[13,R[1874],E,E,31,N],[13,R[1875],E,E,31,N],[4,"SigHandler",E,"A signal handler.",N,N],[13,"SigDfl",E,"Default signal handling.",32,N],[13,"SigIgn",E,"Request that the signal be ignored.",32,N],[13,"Handler",E,R[1876],32,N],[13,"SigAction",E,R[1876],32,N],[4,R[2001],E,"Used to request asynchronous notification of certain…",N,N],[13,"SigevNone",E,"No notification will be delivered",33,N],[13,"SigevSignal",E,"The signal given by `signal` will be delivered to the…",33,N],[12,"signal","nix::sys::signal::SigevNotify",E,33,N],[12,"si_value",E,E,33,N],[5,R[741],R[1877],"Changes the action taken by a process on receipt of a…",N,[[["signal"],[R[741]]],[[R[12],[R[741]]],[R[741]]]]],[5,R[1878],E,"Manages the signal mask (set of blocked signals) for the…",N,[[[R[52],["sigset"]],["sigset"],[R[1883]],[R[52],["sigset"]],["sigset"]],[R[12]]]],[5,R[1879],E,"Examine and change blocked signals.",N,[[[R[52],["sigset"]],["sigset"],[R[1883]],[R[52],["sigset"]],["sigset"]],[R[12]]]],[5,"kill",E,E,N,[[["into",[R[52]]],[R[52],["signal"]],["pid"]],[R[12]]]],[5,"raise",E,E,N,[[["signal"]],[R[12]]]],[11,"new",E,"Note: this constructor does not allow the user to set the…",34,[[[R[1814]]],[R[782]]]],[11,R[782],E,E,34,[[["self"]],[R[782]]]],[17,"NSIG",E,E,N,N],[17,"SIGIOT",E,E,N,N],[17,"SIGPOLL",E,E,N,N],[17,"SIGUNUSED",E,E,N,N],[11,"iterator",E,E,30,[[],[R[1972]]]],[11,"from_c_int",E,E,30,[[["c_int"]],[["signal"],[R[12],["signal"]]]]],[18,R[1880],E,E,35,N],[18,R[1881],E,E,35,N],[18,"SA_NODEFER",E,E,35,N],[18,"SA_ONSTACK",E,E,35,N],[18,R[1882],E,E,35,N],[18,"SA_RESTART",E,E,35,N],[18,"SA_SIGINFO",E,E,35,N],[11,"empty",E,R[1777],35,[[],["saflags"]]],[11,"all",E,R[1778],35,[[],["saflags"]]],[11,"bits",E,R[1779],35,[[["self"]],["c_int"]]],[11,R[1807],E,R[1780],35,[[["c_int"]],[["saflags"],[R[52],["saflags"]]]]],[11,R[1781],E,R[1782],35,[[["c_int"]],["saflags"]]],[11,R[69],E,R[1783],35,[[["self"]],["bool"]]],[11,"is_all",E,R[1784],35,[[["self"]],["bool"]]],[11,R[1791],E,R[1785],35,[[["self"],["saflags"]],["bool"]]],[11,R[473],E,R[1786],35,[[["self"],["saflags"]],["bool"]]],[11,"insert",E,R[1787],35,[[["self"],["saflags"]]]],[11,"remove",E,R[1788],35,[[["self"],["saflags"]]]],[11,"toggle",E,R[1789],35,[[["self"],["saflags"]]]],[11,"set",E,R[1790],35,[[["self"],["saflags"],["bool"]]]],[11,"all",E,E,36,[[],["sigset"]]],[11,"empty",E,E,36,[[],["sigset"]]],[11,"add",E,E,36,[[["signal"],["self"]]]],[11,"clear",E,E,36,[[["self"]]]],[11,"remove",E,E,36,[[["signal"],["self"]]]],[11,R[473],E,E,36,[[["signal"],["self"]],["bool"]]],[11,"extend",E,E,36,[[["self"],["sigset"]]]],[11,"thread_get_mask",E,"Gets the currently blocked (masked) set of signals for the…",36,[[],[["sigset"],[R[12],["sigset"]]]]],[11,"thread_set_mask",E,"Sets the set of signals as the signal mask for the calling…",36,[[["self"]],[R[12]]]],[11,"thread_block",E,"Adds the set of signals to the signal mask for the calling…",36,[[["self"]],[R[12]]]],[11,"thread_unblock",E,"Removes the set of signals from the signal mask for the…",36,[[["self"]],[R[12]]]],[11,"thread_swap_mask",E,"Sets the set of signals as the signal mask, and returns…",36,[[[R[1883]],["self"]],[["sigset"],[R[12],["sigset"]]]]],[11,"wait",E,"Suspends execution of the calling thread until one of the…",36,[[["self"]],[["signal"],[R[12],["signal"]]]]],[11,"new",E,"Creates a new action.",37,[[[R[1969]],["sigset"],["saflags"]],[R[741]]]],[11,"flags",E,"Returns the flags set on the action.",37,[[["self"]],["saflags"]]],[11,"mask",E,"Returns the set of signals that are blocked during…",37,[[["self"]],["sigset"]]],[11,"handler",E,"Returns the action's handler.",37,[[["self"]],[R[1969]]]],[0,"socket",R[1873],"Socket interface functions",N,N],[3,"cmsghdr",R[1899],E,N,N],[12,"cmsg_len",E,E,38,N],[12,"cmsg_level",E,E,38,N],[12,"cmsg_type",E,E,38,N],[3,"msghdr",E,E,N,N],[12,"msg_name",E,E,39,N],[12,R[1884],E,E,39,N],[12,"msg_iov",E,E,39,N],[12,"msg_iovlen",E,E,39,N],[12,R[1885],E,E,39,N],[12,R[1886],E,E,39,N],[12,"msg_flags",E,E,39,N],[6,R[1887],E,E,N,N],[3,R[779],E,E,N,N],[12,"sa_len",E,E,40,N],[12,"sa_family",E,E,40,N],[12,"sa_data",E,E,40,N],[3,R[753],E,E,N,N],[12,"sin_len",E,E,41,N],[12,R[740],E,E,41,N],[12,"sin_port",E,E,41,N],[12,"sin_addr",E,E,41,N],[12,"sin_zero",E,E,41,N],[3,R[746],E,E,N,N],[12,"sin6_len",E,E,42,N],[12,R[1888],E,E,42,N],[12,"sin6_port",E,E,42,N],[12,R[1889],E,E,42,N],[12,"sin6_addr",E,E,42,N],[12,R[1890],E,E,42,N],[3,R[774],E,E,N,N],[12,"ss_len",E,E,43,N],[12,"ss_family",E,E,43,N],[3,R[747],E,E,N,N],[12,"sun_len",E,E,44,N],[12,"sun_family",E,E,44,N],[12,"sun_path",E,E,44,N],[3,"UnixAddr",E,"A wrapper around `sockaddr_un`.",N,N],[12,"0",E,E,45,N],[12,"1",E,E,45,N],[3,"Ipv4Addr",E,E,N,N],[12,"0",E,E,46,N],[3,"Ipv6Addr",E,E,N,N],[12,"0",E,E,47,N],[3,"LinkAddr",E,"Hardware Address",N,N],[12,"0",E,E,48,N],[3,"SockFlag",E,"Additional socket options",N,N],[3,"MsgFlags",E,"Flags for send/recv and their relatives",N,N],[3,R[2005],E,"Request for multicast socket operations",N,N],[3,R[2006],E,"Request for ipv6 multicast socket operations",N,N],[3,"CmsgSpace",E,"A structure used to make room in a cmsghdr passed to…",N,N],[3,"RecvMsg",E,E,N,N],[12,"bytes",E,E,49,N],[12,"address",E,E,49,N],[12,"flags",E,E,49,N],[3,R[2016],E,E,N,N],[4,R[2002],E,"These constants specify the protocol family to be used in…",N,N],[13,"Unix",E,"Local communication (see `unix(7)`)",50,N],[13,"Inet",E,"IPv4 Internet protocols (see `ip(7)`)",50,N],[13,"Inet6",E,"IPv6 Internet protocols (see `ipv6(7)`)",50,N],[13,"System",E,"KEXT Controls and Notifications",50,N],[13,"Ipx",E,"IPX - Novell protocols",50,N],[13,"AppleTalk",E,"AppleTalk",50,N],[13,"Decnet",E,E,50,N],[13,"Sna",E,E,50,N],[13,"Isdn",E,E,50,N],[13,"ImpLink",E,E,50,N],[13,"Pup",E,E,50,N],[13,"Chaos",E,E,50,N],[13,"Ns",E,E,50,N],[13,"Iso",E,E,50,N],[13,"Datakit",E,E,50,N],[13,"Ccitt",E,E,50,N],[13,"Dli",E,E,50,N],[13,"Lat",E,E,50,N],[13,"Hylink",E,E,50,N],[13,"Link",E,E,50,N],[13,"Coip",E,E,50,N],[13,"Cnt",E,E,50,N],[13,"Natm",E,E,50,N],[4,"SockAddr",E,"Represents a socket address",N,N],[13,"Inet",E,E,51,N],[13,"Unix",E,E,51,N],[13,"SysControl",E,E,51,N],[13,"Link",E,"Datalink address (MAC)",51,N],[4,"InetAddr",E,E,N,N],[13,"V4",E,E,52,N],[13,"V6",E,E,52,N],[4,"IpAddr",E,E,N,N],[13,"V4",E,E,53,N],[13,"V6",E,E,53,N],[4,"SockType",E,"These constants are used to specify the communication…",N,N],[13,"Stream",E,"Provides sequenced, reliable, two-way, connection- based…",54,N],[13,"Datagram",E,"Supports datagrams (connectionless, unreliable messages of…",54,N],[13,"SeqPacket",E,"Provides a sequenced, reliable, two-way connection- based…",54,N],[13,"Raw",E,"Provides raw network protocol access.",54,N],[13,"Rdm",E,"Provides a reliable datagram layer that does not guarantee…",54,N],[4,R[2003],E,"Constants used in `socket` and `socketpair` to specify the…",N,N],[13,"Tcp",E,"TCP protocol (ip(7))",55,N],[13,"Udp",E,"UDP protocol (ip(7))",55,N],[13,"KextEvent",E,"Allows applications and other KEXTs to be notified when…",55,N],[13,"KextControl",E,"Allows applications to configure and control a KEXT (ref)",55,N],[4,R[2004],E,"A type-safe wrapper around a single control message. More…",N,N],[13,"ScmRights",E,"A message of type `SCM_RIGHTS`, containing an array of…",56,N],[13,"ScmTimestamp",E,"A message of type `SCM_TIMESTAMP`, containing the time the…",56,N],[4,"SockLevel",E,"The protocol level at which to get / set socket options.…",N,N],[13,"Socket",E,E,57,N],[13,"Tcp",E,E,57,N],[13,"Ip",E,E,57,N],[13,"Ipv6",E,E,57,N],[13,"Udp",E,E,57,N],[4,R[4358],E,E,N,N],[13,"Read",E,"Further receptions will be disallowed.",58,N],[13,"Write",E,"Further  transmissions will be disallowed.",58,N],[13,"Both",E,"Further receptions and transmissions will be disallowed.",58,N],[5,"sendmsg",E,"Send data in scatter-gather vectors to a socket, possibly…",N,[[[R[52],[R[779]]],[R[779]],[R[1903]],["rawfd"]],[[R[12],[R[9]]],[R[9]]]]],[5,"recvmsg",E,"Receive message in scatter-gather vectors from a socket,…",N,[[["cmsgspace"],[R[52],["cmsgspace"]],[R[1903]],["rawfd"]],[[R[12],["recvmsg"]],["recvmsg"]]]],[5,"socket",E,"Create an endpoint for communication",N,[[[R[52],[R[1891]]],[R[1973]],[R[1901]],["into",[R[52]]],[R[1892]]],[[R[12],["rawfd"]],["rawfd"]]]],[5,"socketpair",E,"Create a pair of connected sockets",N,[[[R[52],[R[1891]]],[R[1973]],[R[1901]],["into",[R[52]]],[R[1892]]],[R[12]]]],[5,"listen",E,"Listen for connections on a socket",N,[[[R[9]],["rawfd"]],[R[12]]]],[5,"bind",E,"Bind a name to a socket",N,[[[R[779]],["rawfd"]],[R[12]]]],[5,"accept",E,"Accept a connection on a socket",N,[[["rawfd"]],[[R[12],["rawfd"]],["rawfd"]]]],[5,"connect",E,"Initiate a connection on a socket",N,[[[R[779]],["rawfd"]],[R[12]]]],[5,"recv",E,"Receive data from a connection-oriented socket. Returns…",N,[[[R[1903]],["rawfd"]],[[R[12],[R[9]]],[R[9]]]]],[5,"recvfrom",E,"Receive data from a connectionless or connection-oriented…",N,[[["rawfd"]],[R[12]]]],[5,"sendto",E,"Send a message to a socket",N,[[[R[1903]],[R[779]],["rawfd"]],[[R[12],[R[9]]],[R[9]]]]],[5,"send",E,"Send data to a connection-oriented socket. Returns the…",N,[[[R[1903]],["rawfd"]],[[R[12],[R[9]]],[R[9]]]]],[5,R[1893],E,"Get the current value for the requested socket option",N,[[[R[1893]],["rawfd"]],[R[12]]]],[5,R[1894],E,"Sets the value for the requested socket option",N,[[[R[1894]],["rawfd"]],[R[12]]]],[5,R[1895],E,"Get the address of the peer connected to the socket `fd`.",N,[[["rawfd"]],[[R[779]],[R[12],[R[779]]]]]],[5,R[1896],E,"Get the current address to which the socket `fd` is bound.",N,[[["rawfd"]],[[R[779]],[R[12],[R[779]]]]]],[5,"sockaddr_storage_to_addr",E,"Return the appropriate `SockAddr` type from a…",N,[[[R[774]],[R[9]]],[[R[779]],[R[12],[R[779]]]]]],[5,R[2344],E,"Shut down part of a full-duplex connection.",N,[[[R[2344]],["rawfd"]],[R[12]]]],[11,"len",E,"Total length of sockaddr",48,[[["self"]],[R[9]]]],[11,"family",E,"always == AF_LINK",48,[[["self"]],[R[1892]]]],[11,"ifindex",E,"interface index, if != 0, system given index for interface",48,[[["self"]],[R[9]]]],[11,"datalink_type",E,"Datalink type",48,[[["self"]],["u8"]]],[11,"nlen",E,E,48,[[["self"]],[R[9]]]],[11,"alen",E,"link level address length",48,[[["self"]],[R[9]]]],[11,"slen",E,"link layer selector length",48,[[["self"]],[R[9]]]],[11,R[69],E,"if link level address length == 0, or `sdl_data` not be…",48,[[["self"]],["bool"]]],[11,"addr",E,"Physical-layer address (MAC)",48,[[["self"]]]],[11,"from_i32",E,"Create a new `AddressFamily` from an integer value…",50,[[["i32"]],[[R[52],[R[1892]]],[R[1892]]]]],[11,R[4511],E,E,52,[[[R[1897]]],["inetaddr"]]],[11,"new",E,E,52,[[["ipaddr"],["u16"]],["inetaddr"]]],[11,"ip",E,"Gets the IP address associated with this socket address.",52,[[["self"]],["ipaddr"]]],[11,"port",E,"Gets the port number associated with this socket address",52,[[["self"]],["u16"]]],[11,"to_std",E,E,52,[[["self"]],[R[1897]]]],[11,"to_str",E,E,52,[[["self"]],["string"]]],[11,"new_v4",E,"Create a new IpAddr that contains an IPv4 address.",53,[[["u8"]],["ipaddr"]]],[11,"new_v6",E,"Create a new IpAddr that contains an IPv6 address.",53,[[["u16"]],["ipaddr"]]],[11,"new",E,E,46,[[["u8"]],[R[1898]]]],[11,R[4511],E,E,46,[[[R[1898]]],[R[1898]]]],[11,"any",E,E,46,[[],[R[1898]]]],[11,"octets",E,E,46,[[["self"]]]],[11,"to_std",E,E,46,[[["self"]],[R[1898]]]],[11,"new",E,E,47,[[["u16"]],[R[1904]]]],[11,R[4511],E,E,47,[[[R[1904]]],[R[1904]]]],[11,"segments",E,"Return the eight 16-bit segments that make up this address",47,[[["self"]]]],[11,"to_std",E,E,47,[[["self"]],[R[1904]]]],[11,"new",E,"Create a new sockaddr_un representing a filesystem path.",45,[[["p"]],[["unixaddr"],[R[12],["unixaddr"]]]]],[11,"path",E,"If this address represents a filesystem path, return that…",45,[[["self"]],[["path"],[R[52],["path"]]]]],[11,"new_inet",E,E,51,[[["inetaddr"]],[R[779]]]],[11,"new_unix",E,E,51,[[["p"]],[[R[779]],[R[12],[R[779]]]]]],[11,"new_sys_control",E,E,51,[[["u32"],["str"],["rawfd"]],[[R[779]],[R[12],[R[779]]]]]],[11,"family",E,E,51,[[["self"]],[R[1892]]]],[11,"to_str",E,E,51,[[["self"]],["string"]]],[11,"from_libc_sockaddr",E,"Creates a `SockAddr` struct from libc's sockaddr.",51,[[],[[R[52],[R[779]]],[R[779]]]]],[11,"as_ffi_pair",E,"Conversion from nix's SockAddr type to the underlying libc…",51,[[["self"]]]],[0,"sockopt",E,E,N,N],[3,"ReuseAddr",R[1948],E,N,N],[3,"ReusePort",E,E,N,N],[3,"TcpNoDelay",E,E,N,N],[3,"Linger",E,E,N,N],[3,R[2017],E,E,N,N],[3,R[2018],E,E,N,N],[3,R[2019],E,E,N,N],[3,R[2020],E,E,N,N],[3,R[2021],E,E,N,N],[3,R[2022],E,E,N,N],[3,R[2023],E,E,N,N],[3,R[2024],E,E,N,N],[3,"Broadcast",E,E,N,N],[3,"OobInline",E,E,N,N],[3,R[2025],E,E,N,N],[3,"KeepAlive",E,E,N,N],[3,R[2026],E,E,N,N],[3,"RcvBuf",E,E,N,N],[3,"SndBuf",E,E,N,N],[3,"SockType",E,E,N,N],[3,"AcceptConn",E,E,N,N],[3,R[2027],E,E,N,N],[8,"GetSockOpt",R[1899],R[1900],N,N],[16,"Val",E,E,59,N],[8,"SetSockOpt",E,R[1900],N,N],[16,"Val",E,E,60,N],[11,"empty",E,R[1777],61,[[],[R[1901]]]],[11,"all",E,R[1778],61,[[],[R[1901]]]],[11,"bits",E,R[1779],61,[[["self"]],["c_int"]]],[11,R[1807],E,R[1780],61,[[["c_int"]],[[R[1901]],[R[52],[R[1901]]]]]],[11,R[1781],E,R[1782],61,[[["c_int"]],[R[1901]]]],[11,R[69],E,R[1783],61,[[["self"]],["bool"]]],[11,"is_all",E,R[1784],61,[[["self"]],["bool"]]],[11,R[1791],E,R[1785],61,[[[R[1901]],["self"]],["bool"]]],[11,R[473],E,R[1786],61,[[[R[1901]],["self"]],["bool"]]],[11,"insert",E,R[1787],61,[[["self"],[R[1901]]]]],[11,"remove",E,R[1788],61,[[["self"],[R[1901]]]]],[11,"toggle",E,R[1789],61,[[["self"],[R[1901]]]]],[11,"set",E,R[1790],61,[[["self"],[R[1901]],["bool"]]]],[18,"MSG_OOB",E,"Sends or requests out-of-band data on sockets that support…",62,N],[18,"MSG_PEEK",E,"Peeks at an incoming message. The data is treated as…",62,N],[18,R[1902],E,"Enables nonblocking operation; if the operation would…",62,N],[18,"MSG_CTRUNC",E,"Receive flags: Control Data was discarded (buffer too small)",62,N],[18,"MSG_TRUNC",E,"For raw (`Packet`), Internet datagram (since Linux…",62,N],[18,"MSG_EOR",E,"Terminates a record (when this notion is supported, as for…",62,N],[11,"empty",E,R[1777],62,[[],[R[1903]]]],[11,"all",E,R[1778],62,[[],[R[1903]]]],[11,"bits",E,R[1779],62,[[["self"]],["c_int"]]],[11,R[1807],E,R[1780],62,[[["c_int"]],[[R[52],[R[1903]]],[R[1903]]]]],[11,R[1781],E,R[1782],62,[[["c_int"]],[R[1903]]]],[11,R[69],E,R[1783],62,[[["self"]],["bool"]]],[11,"is_all",E,R[1784],62,[[["self"]],["bool"]]],[11,R[1791],E,R[1785],62,[[["self"],[R[1903]]],["bool"]]],[11,R[473],E,R[1786],62,[[["self"],[R[1903]]],["bool"]]],[11,"insert",E,R[1787],62,[[["self"],[R[1903]]]]],[11,"remove",E,R[1788],62,[[["self"],[R[1903]]]]],[11,"toggle",E,R[1789],62,[[["self"],[R[1903]]]]],[11,"set",E,R[1790],62,[[["self"],["bool"],[R[1903]]]]],[11,"new",E,"Instantiate a new `IpMembershipRequest`",63,[[[R[1898]],[R[52],[R[1898]]]],["self"]]],[11,"new",E,"Instantiate a new `Ipv6MembershipRequest`",64,[[[R[1904]]],["self"]]],[11,"new",E,"Create a CmsgSpace. The structure is used only for space,…",65,[[],["self"]]],[11,"cmsgs",E,"Iterate over the valid control messages pointed to by this…",49,[[["self"]],["cmsgiterator"]]],[0,"stat",R[1873],E,N,N],[6,"dev_t",R[1949],E,N,N],[3,"FileStat",E,E,N,N],[12,"st_dev",E,E,66,N],[12,"st_mode",E,E,66,N],[12,"st_nlink",E,E,66,N],[12,"st_ino",E,E,66,N],[12,"st_uid",E,E,66,N],[12,"st_gid",E,E,66,N],[12,"st_rdev",E,E,66,N],[12,"st_atime",E,E,66,N],[12,R[1905],E,E,66,N],[12,"st_mtime",E,E,66,N],[12,R[1906],E,E,66,N],[12,"st_ctime",E,E,66,N],[12,R[1907],E,E,66,N],[12,R[1908],E,E,66,N],[12,R[1909],E,E,66,N],[12,"st_size",E,E,66,N],[12,"st_blocks",E,E,66,N],[12,"st_blksize",E,E,66,N],[12,"st_flags",E,E,66,N],[12,"st_gen",E,E,66,N],[12,"st_lspare",E,E,66,N],[12,"st_qspare",E,E,66,N],[5,"FileStat",E,E,N,[[],["i32"]]],[3,"SFlag",E,E,N,N],[3,"Mode",E,E,N,N],[4,R[2007],E,"Flags for `fchmodat` function.",N,N],[13,"FollowSymlink",E,E,67,N],[13,"NoFollowSymlink",E,E,67,N],[5,"mknod",E,E,N,[[["dev_t"],["mode"],["sflag"],["p"]],[R[12]]]],[5,"umask",E,E,N,[[["mode"]],["mode"]]],[5,"stat",E,E,N,[[["p"]],[[R[12],[R[1910]]],[R[1910]]]]],[5,"lstat",E,E,N,[[["p"]],[[R[12],[R[1910]]],[R[1910]]]]],[5,"fstat",E,E,N,[[["rawfd"]],[[R[12],[R[1910]]],[R[1910]]]]],[5,"fstatat",E,E,N,[[["p"],["atflags"],["rawfd"]],[[R[12],[R[1910]]],[R[1910]]]]],[5,"fchmod",E,"Change the file permission bits of the file specified by a…",N,[[["mode"],["rawfd"]],[R[12]]]],[5,"fchmodat",E,"Change the file permission bits.",N,[[[R[52],["rawfd"]],["mode"],["p"],[R[1974]],["rawfd"]],[R[12]]]],[18,"S_IFIFO",E,E,68,N],[18,"S_IFCHR",E,E,68,N],[18,"S_IFDIR",E,E,68,N],[18,"S_IFBLK",E,E,68,N],[18,"S_IFREG",E,E,68,N],[18,"S_IFLNK",E,E,68,N],[18,"S_IFSOCK",E,E,68,N],[18,"S_IFMT",E,E,68,N],[11,"empty",E,R[1777],68,[[],["sflag"]]],[11,"all",E,R[1778],68,[[],["sflag"]]],[11,"bits",E,R[1779],68,[[["self"]],["mode_t"]]],[11,R[1807],E,R[1780],68,[[["mode_t"]],[["sflag"],[R[52],["sflag"]]]]],[11,R[1781],E,R[1782],68,[[["mode_t"]],["sflag"]]],[11,R[69],E,R[1783],68,[[["self"]],["bool"]]],[11,"is_all",E,R[1784],68,[[["self"]],["bool"]]],[11,R[1791],E,R[1785],68,[[["sflag"],["self"]],["bool"]]],[11,R[473],E,R[1786],68,[[["sflag"],["self"]],["bool"]]],[11,"insert",E,R[1787],68,[[["self"],["sflag"]]]],[11,"remove",E,R[1788],68,[[["self"],["sflag"]]]],[11,"toggle",E,R[1789],68,[[["self"],["sflag"]]]],[11,"set",E,R[1790],68,[[["self"],["sflag"],["bool"]]]],[18,"S_IRWXU",E,E,69,N],[18,"S_IRUSR",E,E,69,N],[18,"S_IWUSR",E,E,69,N],[18,"S_IXUSR",E,E,69,N],[18,"S_IRWXG",E,E,69,N],[18,"S_IRGRP",E,E,69,N],[18,"S_IWGRP",E,E,69,N],[18,"S_IXGRP",E,E,69,N],[18,"S_IRWXO",E,E,69,N],[18,"S_IROTH",E,E,69,N],[18,"S_IWOTH",E,E,69,N],[18,"S_IXOTH",E,E,69,N],[18,"S_ISUID",E,E,69,N],[18,"S_ISGID",E,E,69,N],[18,"S_ISVTX",E,E,69,N],[11,"empty",E,R[1777],69,[[],["mode"]]],[11,"all",E,R[1778],69,[[],["mode"]]],[11,"bits",E,R[1779],69,[[["self"]],["mode_t"]]],[11,R[1807],E,R[1780],69,[[["mode_t"]],[["mode"],[R[52],["mode"]]]]],[11,R[1781],E,R[1782],69,[[["mode_t"]],["mode"]]],[11,R[69],E,R[1783],69,[[["self"]],["bool"]]],[11,"is_all",E,R[1784],69,[[["self"]],["bool"]]],[11,R[1791],E,R[1785],69,[[["mode"],["self"]],["bool"]]],[11,R[473],E,R[1786],69,[[["mode"],["self"]],["bool"]]],[11,"insert",E,R[1787],69,[[["mode"],["self"]]]],[11,"remove",E,R[1788],69,[[["mode"],["self"]]]],[11,"toggle",E,R[1789],69,[[["mode"],["self"]]]],[11,"set",E,R[1790],69,[[["mode"],["self"],["bool"]]]],[0,"statfs",R[1873],E,N,N],[5,"statfs","nix::sys::statfs",E,N,[[["statfs"],["p"]],[R[12]]]],[5,"fstatfs",E,E,N,[[["statfs"],[T]],[R[12]]]],[0,"statvfs",R[1873],"Get filesystem statistics",N,N],[3,"FsFlags",R[1950],"File system mount Flags",N,N],[3,"Statvfs",E,"Wrapper around the POSIX `statvfs` struct",N,N],[5,"statvfs",E,"Return a `Statvfs` object with information about the `path`",N,[[["p"]],[[R[12],["statvfs"]],["statvfs"]]]],[5,"fstatvfs",E,"Return a `Statvfs` object with information about `fd`",N,[[[T]],[[R[12],["statvfs"]],["statvfs"]]]],[18,"ST_RDONLY",E,"Read Only",70,N],[18,"ST_NOSUID",E,"Do not allow the set-uid bits to have an effect",70,N],[11,"empty",E,R[1777],70,[[],["fsflags"]]],[11,"all",E,R[1778],70,[[],["fsflags"]]],[11,"bits",E,R[1779],70,[[["self"]],["c_ulong"]]],[11,R[1807],E,R[1780],70,[[["c_ulong"]],[["fsflags"],[R[52],["fsflags"]]]]],[11,R[1781],E,R[1782],70,[[["c_ulong"]],["fsflags"]]],[11,R[69],E,R[1783],70,[[["self"]],["bool"]]],[11,"is_all",E,R[1784],70,[[["self"]],["bool"]]],[11,R[1791],E,R[1785],70,[[["fsflags"],["self"]],["bool"]]],[11,R[473],E,R[1786],70,[[["fsflags"],["self"]],["bool"]]],[11,"insert",E,R[1787],70,[[["self"],["fsflags"]]]],[11,"remove",E,R[1788],70,[[["self"],["fsflags"]]]],[11,"toggle",E,R[1789],70,[[["self"],["fsflags"]]]],[11,"set",E,R[1790],70,[[["self"],["fsflags"],["bool"]]]],[11,"block_size",E,"get the file system block size",71,[[["self"]],["c_ulong"]]],[11,"fragment_size",E,"Get the fundamental file system block size",71,[[["self"]],["c_ulong"]]],[11,"blocks",E,"Get the number of blocks.",71,[[["self"]],[R[1911]]]],[11,"blocks_free",E,"Get the number of free blocks in the file system",71,[[["self"]],[R[1911]]]],[11,"blocks_available",E,"Get the number of free blocks for unprivileged users",71,[[["self"]],[R[1911]]]],[11,"files",E,"Get the total number of file inodes",71,[[["self"]],[R[1912]]]],[11,"files_free",E,"Get the number of free file inodes",71,[[["self"]],[R[1912]]]],[11,"files_available",E,"Get the number of free file inodes for unprivileged users",71,[[["self"]],[R[1912]]]],[11,"filesystem_id",E,"Get the file system id",71,[[["self"]],["c_ulong"]]],[11,"flags",E,"Get the mount flags",71,[[["self"]],["fsflags"]]],[11,"name_max",E,"Get the maximum filename length",71,[[["self"]],["c_ulong"]]],[0,"termios",R[1873],"An interface for controlling asynchronous communication…",N,N],[17,"NCCS",R[1951],E,N,N],[17,R[1913],E,E,N,N],[3,"Termios",E,"Stores settings for the termios API",N,N],[12,"input_flags",E,"Input mode flags (see `termios.c_iflag` documentation)",72,N],[12,"output_flags",E,"Output mode flags (see `termios.c_oflag` documentation)",72,N],[12,"control_flags",E,"Control mode flags (see `termios.c_cflag` documentation)",72,N],[12,"local_flags",E,"Local mode flags (see `termios.c_lflag` documentation)",72,N],[12,"control_chars",E,"Control characters (see `termios.c_cc` documentation)",72,N],[3,"InputFlags",E,"Flags for configuring the input mode of a terminal",N,N],[3,R[2009],E,"Flags for configuring the output mode of a terminal",N,N],[3,R[2010],E,"Flags for setting the control mode of a terminal",N,N],[3,"LocalFlags",E,"Flags for setting any local modes",N,N],[4,"BaudRate",E,"Baud rates supported by the system.",N,N],[13,"B0",E,E,73,N],[13,"B50",E,E,73,N],[13,"B75",E,E,73,N],[13,"B110",E,E,73,N],[13,"B134",E,E,73,N],[13,"B150",E,E,73,N],[13,"B200",E,E,73,N],[13,"B300",E,E,73,N],[13,"B600",E,E,73,N],[13,"B1200",E,E,73,N],[13,"B1800",E,E,73,N],[13,"B2400",E,E,73,N],[13,"B4800",E,E,73,N],[13,"B7200",E,E,73,N],[13,"B9600",E,E,73,N],[13,"B14400",E,E,73,N],[13,"B19200",E,E,73,N],[13,"B28800",E,E,73,N],[13,"B38400",E,E,73,N],[13,"B57600",E,E,73,N],[13,"B76800",E,E,73,N],[13,"B115200",E,E,73,N],[13,"B230400",E,E,73,N],[4,"SetArg",E,"Specify when a port configuration change should occur.",N,N],[13,"TCSANOW",E,"The change will occur immediately",74,N],[13,"TCSADRAIN",E,"The change occurs after all output has been written",74,N],[13,"TCSAFLUSH",E,"Same as `TCSADRAIN`, but will also flush the input buffer",74,N],[4,"FlushArg",E,"Specify a combination of the input and output buffers to…",N,N],[13,"TCIFLUSH",E,"Flush data that was received but not read",75,N],[13,"TCOFLUSH",E,"Flush data written but not transmitted",75,N],[13,"TCIOFLUSH",E,"Flush both received data not read and written data not…",75,N],[4,"FlowArg",E,"Specify how transmission flow should be altered",N,N],[13,"TCOOFF",E,"Suspend transmission",76,N],[13,"TCOON",E,"Resume transmission",76,N],[13,"TCIOFF",E,"Transmit a STOP character, which should disable a…",76,N],[13,"TCION",E,"Transmit a START character, which should re-enable a…",76,N],[4,R[2008],E,"Indices into the `termios.c_cc` array for special…",N,N],[13,"VDISCARD",E,E,77,N],[13,"VDSUSP",E,E,77,N],[13,"VEOF",E,E,77,N],[13,"VEOL",E,E,77,N],[13,"VEOL2",E,E,77,N],[13,"VERASE",E,E,77,N],[13,"VINTR",E,E,77,N],[13,"VKILL",E,E,77,N],[13,"VLNEXT",E,E,77,N],[13,"VMIN",E,E,77,N],[13,"VQUIT",E,E,77,N],[13,"VREPRINT",E,E,77,N],[13,"VSTART",E,E,77,N],[13,"VSTATUS",E,E,77,N],[13,"VSTOP",E,E,77,N],[13,"VSUSP",E,E,77,N],[13,"VTIME",E,E,77,N],[13,"VWERASE",E,E,77,N],[5,R[1914],E,"Get input baud rate (see cfgetispeed(3p)).",N,[[["termios"]],["u32"]]],[5,R[1915],E,"Get output baud rate (see cfgetospeed(3p)).",N,[[["termios"]],["u32"]]],[5,R[1916],E,"Set input baud rate (see cfsetispeed(3p)).",N,[[["u32"],["termios"],["into",["u32"]]],[R[12]]]],[5,R[1917],E,"Set output baud rate (see cfsetospeed(3p)).",N,[[["u32"],["termios"],["into",["u32"]]],[R[12]]]],[5,"cfsetspeed",E,"Set both the input and output baud rates (see termios(3)).",N,[[["u32"],["termios"],["into",["u32"]]],[R[12]]]],[5,"cfmakeraw",E,"Configures the port to something like the \"raw\" mode of…",N,[[["termios"]]]],[5,"tcgetattr",E,"Return the configuration of a port tcgetattr(3p)).",N,[[["rawfd"]],[[R[12],["termios"]],["termios"]]]],[5,"tcsetattr",E,"Set the configuration for a terminal (see tcsetattr(3p)).",N,[[["termios"],["setarg"],["rawfd"]],[R[12]]]],[5,"tcdrain",E,"Block until all output data is written (see tcdrain(3p)).",N,[[["rawfd"]],[R[12]]]],[5,"tcflow",E,"Suspend or resume the transmission or reception of data…",N,[[["flowarg"],["rawfd"]],[R[12]]]],[5,"tcflush",E,"Discard data in the output or input queue (see tcflush(3p)).",N,[[["flusharg"],["rawfd"]],[R[12]]]],[5,R[1918],E,"Send a break for a specific duration (see tcsendbreak(3p)).",N,[[["c_int"],["rawfd"]],[R[12]]]],[5,"tcgetsid",E,"Get the session controlled by the given terminal (see…",N,[[["rawfd"]],[["pid"],[R[12],["pid"]]]]],[18,"IGNBRK",E,E,78,N],[18,"BRKINT",E,E,78,N],[18,"IGNPAR",E,E,78,N],[18,"PARMRK",E,E,78,N],[18,"INPCK",E,E,78,N],[18,"ISTRIP",E,E,78,N],[18,"INLCR",E,E,78,N],[18,"IGNCR",E,E,78,N],[18,"ICRNL",E,E,78,N],[18,"IXON",E,E,78,N],[18,"IXOFF",E,E,78,N],[18,"IXANY",E,E,78,N],[18,"IMAXBEL",E,E,78,N],[18,"IUTF8",E,E,78,N],[11,"empty",E,R[1777],78,[[],[R[1919]]]],[11,"all",E,R[1778],78,[[],[R[1919]]]],[11,"bits",E,R[1779],78,[[["self"]],[R[1921]]]],[11,R[1807],E,R[1780],78,[[[R[1921]]],[[R[1919]],[R[52],[R[1919]]]]]],[11,R[1781],E,R[1782],78,[[[R[1921]]],[R[1919]]]],[11,R[69],E,R[1783],78,[[["self"]],["bool"]]],[11,"is_all",E,R[1784],78,[[["self"]],["bool"]]],[11,R[1791],E,R[1785],78,[[[R[1919]],["self"]],["bool"]]],[11,R[473],E,R[1786],78,[[[R[1919]],["self"]],["bool"]]],[11,"insert",E,R[1787],78,[[["self"],[R[1919]]]]],[11,"remove",E,R[1788],78,[[["self"],[R[1919]]]]],[11,"toggle",E,R[1789],78,[[["self"],[R[1919]]]]],[11,"set",E,R[1790],78,[[["self"],[R[1919]],["bool"]]]],[18,"OPOST",E,E,79,N],[18,"ONLCR",E,E,79,N],[18,"OCRNL",E,E,79,N],[18,"ONOCR",E,E,79,N],[18,"ONLRET",E,E,79,N],[18,"OFILL",E,E,79,N],[18,"OFDEL",E,E,79,N],[18,"NL0",E,E,79,N],[18,"NL1",E,E,79,N],[18,"CR0",E,E,79,N],[18,"CR1",E,E,79,N],[18,"CR2",E,E,79,N],[18,"CR3",E,E,79,N],[18,"TAB0",E,E,79,N],[18,"TAB1",E,E,79,N],[18,"TAB2",E,E,79,N],[18,"TAB3",E,E,79,N],[18,"BS0",E,E,79,N],[18,"BS1",E,E,79,N],[18,"VT0",E,E,79,N],[18,"VT1",E,E,79,N],[18,"FF0",E,E,79,N],[18,"FF1",E,E,79,N],[18,"OXTABS",E,E,79,N],[18,"ONOEOT",E,E,79,N],[18,"NLDLY",E,E,79,N],[18,"CRDLY",E,E,79,N],[18,"TABDLY",E,E,79,N],[18,"BSDLY",E,E,79,N],[18,"VTDLY",E,E,79,N],[18,"FFDLY",E,E,79,N],[11,"empty",E,R[1777],79,[[],[R[1920]]]],[11,"all",E,R[1778],79,[[],[R[1920]]]],[11,"bits",E,R[1779],79,[[["self"]],[R[1921]]]],[11,R[1807],E,R[1780],79,[[[R[1921]]],[[R[1920]],[R[52],[R[1920]]]]]],[11,R[1781],E,R[1782],79,[[[R[1921]]],[R[1920]]]],[11,R[69],E,R[1783],79,[[["self"]],["bool"]]],[11,"is_all",E,R[1784],79,[[["self"]],["bool"]]],[11,R[1791],E,R[1785],79,[[[R[1920]],["self"]],["bool"]]],[11,R[473],E,R[1786],79,[[[R[1920]],["self"]],["bool"]]],[11,"insert",E,R[1787],79,[[["self"],[R[1920]]]]],[11,"remove",E,R[1788],79,[[["self"],[R[1920]]]]],[11,"toggle",E,R[1789],79,[[["self"],[R[1920]]]]],[11,"set",E,R[1790],79,[[["self"],[R[1920]],["bool"]]]],[18,"CIGNORE",E,E,80,N],[18,"CS5",E,E,80,N],[18,"CS6",E,E,80,N],[18,"CS7",E,E,80,N],[18,"CS8",E,E,80,N],[18,"CSTOPB",E,E,80,N],[18,"CREAD",E,E,80,N],[18,"PARENB",E,E,80,N],[18,"PARODD",E,E,80,N],[18,"HUPCL",E,E,80,N],[18,"CLOCAL",E,E,80,N],[18,"CRTSCTS",E,E,80,N],[18,"MDMBUF",E,E,80,N],[18,"CSIZE",E,E,80,N],[11,"empty",E,R[1777],80,[[],[R[1922]]]],[11,"all",E,R[1778],80,[[],[R[1922]]]],[11,"bits",E,R[1779],80,[[["self"]],[R[1921]]]],[11,R[1807],E,R[1780],80,[[[R[1921]]],[[R[1922]],[R[52],[R[1922]]]]]],[11,R[1781],E,R[1782],80,[[[R[1921]]],[R[1922]]]],[11,R[69],E,R[1783],80,[[["self"]],["bool"]]],[11,"is_all",E,R[1784],80,[[["self"]],["bool"]]],[11,R[1791],E,R[1785],80,[[[R[1922]],["self"]],["bool"]]],[11,R[473],E,R[1786],80,[[[R[1922]],["self"]],["bool"]]],[11,"insert",E,R[1787],80,[[[R[1922]],["self"]]]],[11,"remove",E,R[1788],80,[[[R[1922]],["self"]]]],[11,"toggle",E,R[1789],80,[[[R[1922]],["self"]]]],[11,"set",E,R[1790],80,[[[R[1922]],["self"],["bool"]]]],[18,"ECHOKE",E,E,81,N],[18,"ECHOE",E,E,81,N],[18,"ECHOK",E,E,81,N],[18,"ECHO",E,E,81,N],[18,"ECHONL",E,E,81,N],[18,"ECHOPRT",E,E,81,N],[18,"ECHOCTL",E,E,81,N],[18,"ISIG",E,E,81,N],[18,"ICANON",E,E,81,N],[18,"ALTWERASE",E,E,81,N],[18,"IEXTEN",E,E,81,N],[18,"EXTPROC",E,E,81,N],[18,"TOSTOP",E,E,81,N],[18,"FLUSHO",E,E,81,N],[18,"NOKERNINFO",E,E,81,N],[18,"PENDIN",E,E,81,N],[18,"NOFLSH",E,E,81,N],[11,"empty",E,R[1777],81,[[],[R[1923]]]],[11,"all",E,R[1778],81,[[],[R[1923]]]],[11,"bits",E,R[1779],81,[[["self"]],[R[1921]]]],[11,R[1807],E,R[1780],81,[[[R[1921]]],[[R[1923]],[R[52],[R[1923]]]]]],[11,R[1781],E,R[1782],81,[[[R[1921]]],[R[1923]]]],[11,R[69],E,R[1783],81,[[["self"]],["bool"]]],[11,"is_all",E,R[1784],81,[[["self"]],["bool"]]],[11,R[1791],E,R[1785],81,[[[R[1923]],["self"]],["bool"]]],[11,R[473],E,R[1786],81,[[[R[1923]],["self"]],["bool"]]],[11,"insert",E,R[1787],81,[[[R[1923]],["self"]]]],[11,"remove",E,R[1788],81,[[[R[1923]],["self"]]]],[11,"toggle",E,R[1789],81,[[[R[1923]],["self"]]]],[11,"set",E,R[1790],81,[[[R[1923]],["self"],["bool"]]]],[0,"time",R[1873],E,N,N],[3,"TimeSpec",R[1952],E,N,N],[3,"TimeVal",E,E,N,N],[8,R[2011],E,E,N,N],[11,"zero",E,E,82,[[],["self"]]],[11,"hours",E,E,82,[[["i64"]],["self"]]],[11,"minutes",E,E,82,[[["i64"]],["self"]]],[10,"seconds",E,E,82,[[["i64"]],["self"]]],[10,R[1958],E,E,82,[[["i64"]],["self"]]],[10,R[1959],E,E,82,[[["i64"]],["self"]]],[10,R[1960],E,E,82,[[["i64"]],["self"]]],[11,"num_hours",E,E,82,[[["self"]],["i64"]]],[11,R[2028],E,E,82,[[["self"]],["i64"]]],[10,R[1961],E,E,82,[[["self"]],["i64"]]],[10,R[1962],E,E,82,[[["self"]],["i64"]]],[10,R[1963],E,E,82,[[["self"]],["i64"]]],[10,R[1964],E,E,82,[[["self"]],["i64"]]],[11,"tv_sec",E,E,83,[[["self"]],["time_t"]]],[11,"tv_nsec",E,E,83,[[["self"]],["c_long"]]],[11,"tv_sec",E,E,84,[[["self"]],["time_t"]]],[11,"tv_usec",E,E,84,[[["self"]],[R[1924]]]],[0,"uio",R[1873],E,N,N],[3,"IoVec",R[1953],E,N,N],[5,"writev",E,E,N,[[["rawfd"]],[[R[12],[R[9]]],[R[9]]]]],[5,"readv",E,E,N,[[["rawfd"]],[[R[12],[R[9]]],[R[9]]]]],[5,"pwrite",E,E,N,[[["off_t"],["rawfd"]],[[R[12],[R[9]]],[R[9]]]]],[5,"pread",E,E,N,[[["off_t"],["rawfd"]],[[R[12],[R[9]]],[R[9]]]]],[11,R[818],E,E,85,[[["self"]]]],[11,R[2029],E,E,85,[[],["iovec"]]],[11,R[1925],E,E,85,[[],["iovec"]]],[0,"utsname",R[1873],E,N,N],[3,"UtsName",R[1954],E,N,N],[5,"uname",E,E,N,[[],["utsname"]]],[11,"sysname",E,E,86,[[["self"]],["str"]]],[11,"nodename",E,E,86,[[["self"]],["str"]]],[11,"release",E,E,86,[[["self"]],["str"]]],[11,"version",E,E,86,[[["self"]],["str"]]],[11,"machine",E,E,86,[[["self"]],["str"]]],[0,"wait",R[1873],E,N,N],[3,R[2012],R[1955],E,N,N],[4,"WaitStatus",E,"Possible return values from `wait()` or `waitpid()`.",N,N],[13,"Exited",E,"The process exited normally (as with `exit()` or returning…",87,N],[13,"Signaled",E,"The process was killed by the given signal. The third…",87,N],[13,"Stopped",E,"The process is alive, but was stopped by the given signal.…",87,N],[13,"Continued",E,"The process was previously stopped but has resumed…",87,N],[13,"StillAlive",E,"There are currently no state changes to report in any…",87,N],[5,"waitpid",E,E,N,[[[R[52],[R[1926]]],[R[52],["pid"]],[R[1926]],["into",[R[52]]]],[[R[1927]],[R[12],[R[1927]]]]]],[5,"wait",E,E,N,[[],[[R[1927]],[R[12],[R[1927]]]]]],[18,"WNOHANG",E,E,88,N],[18,"WUNTRACED",E,E,88,N],[18,"WEXITED",E,E,88,N],[18,"WCONTINUED",E,E,88,N],[18,"WSTOPPED",E,E,88,N],[18,"WNOWAIT",E,"Don't reap, just poll status.",88,N],[11,"empty",E,R[1777],88,[[],[R[1926]]]],[11,"all",E,R[1778],88,[[],[R[1926]]]],[11,"bits",E,R[1779],88,[[["self"]],["c_int"]]],[11,R[1807],E,R[1780],88,[[["c_int"]],[[R[1926]],[R[52],[R[1926]]]]]],[11,R[1781],E,R[1782],88,[[["c_int"]],[R[1926]]]],[11,R[69],E,R[1783],88,[[["self"]],["bool"]]],[11,"is_all",E,R[1784],88,[[["self"]],["bool"]]],[11,R[1791],E,R[1785],88,[[[R[1926]],["self"]],["bool"]]],[11,R[473],E,R[1786],88,[[[R[1926]],["self"]],["bool"]]],[11,"insert",E,R[1787],88,[[["self"],[R[1926]]]]],[11,"remove",E,R[1788],88,[[["self"],[R[1926]]]]],[11,"toggle",E,R[1789],88,[[["self"],[R[1926]]]]],[11,"set",E,R[1790],88,[[["self"],[R[1926]],["bool"]]]],[11,"pid",E,"Extracts the PID from the WaitStatus unless it equals…",87,[[["self"]],[[R[52],["pid"]],["pid"]]]],[11,"from_raw",E,"Convert a raw `wstatus` as returned by `waitpid`/`wait`…",87,[[["i32"],["pid"]],[[R[1927]],[R[12],[R[1927]]]]]],[0,"unistd","nix","Safe wrappers around functions found in libc \"unistd.h\"…",N,N],[3,"Uid",R[1928],"User identifier",N,N],[3,"Gid",E,"Group identifier",N,N],[3,"Pid",E,"Process identifier",N,N],[4,"ForkResult",E,"Represents the successful result of calling `fork`",N,N],[13,"Parent",E,E,89,N],[12,"child","nix::unistd::ForkResult",E,89,N],[13,"Child",R[1928],E,89,N],[4,"Whence",E,"Directive that tells [`lseek`] and [`lseek64`] what the…",N,N],[13,"SeekSet",E,"Specify an offset relative to the start of the file.",90,N],[13,"SeekCur",E,"Specify an offset relative to the current file location.",90,N],[13,"SeekEnd",E,"Specify an offset relative to the end of the file.",90,N],[4,R[2013],E,"Variable names for `pathconf`",N,N],[13,"LINK_MAX",E,"Maximum number of links to a single file.",91,N],[13,"MAX_CANON",E,"Maximum number of bytes in a terminal canonical input line.",91,N],[13,"MAX_INPUT",E,"Minimum number of bytes for which space is available in a…",91,N],[13,"NAME_MAX",E,"Maximum number of bytes in a filename (not including the…",91,N],[13,"PATH_MAX",E,"Maximum number of bytes the implementation will store as a…",91,N],[13,"PIPE_BUF",E,"Maximum number of bytes that is guaranteed to be atomic…",91,N],[13,"_POSIX_CHOWN_RESTRICTED",E,"The use of `chown` and `fchown` is restricted to a process…",91,N],[13,"_POSIX_NO_TRUNC",E,"Pathname components longer than {NAME_MAX} generate an…",91,N],[13,R[1913],E,"This symbol shall be defined to be the value of a…",91,N],[4,"SysconfVar",E,"Variable names for `sysconf`",N,N],[13,R[1929],E,"Maximum number of I/O operations in a single list I/O call…",92,N],[13,"AIO_MAX",E,"Maximum number of outstanding asynchronous I/O operations…",92,N],[13,"AIO_PRIO_DELTA_MAX",E,"The maximum amount by which a process can decrease its…",92,N],[13,"ARG_MAX",E,"Maximum length of argument to the exec functions including…",92,N],[13,"ATEXIT_MAX",E,"Maximum number of functions that may be registered with…",92,N],[13,"BC_BASE_MAX",E,"Maximum obase values allowed by the bc utility.",92,N],[13,"BC_DIM_MAX",E,"Maximum number of elements permitted in an array by the bc…",92,N],[13,"BC_SCALE_MAX",E,"Maximum scale value allowed by the bc utility.",92,N],[13,"BC_STRING_MAX",E,"Maximum length of a string constant accepted by the bc…",92,N],[13,"CHILD_MAX",E,"Maximum number of simultaneous processes per real user ID.",92,N],[13,"COLL_WEIGHTS_MAX",E,"Maximum number of weights that can be assigned to an entry…",92,N],[13,"DELAYTIMER_MAX",E,"Maximum number of timer expiration overruns.",92,N],[13,"EXPR_NEST_MAX",E,"Maximum number of expressions that can be nested within…",92,N],[13,"HOST_NAME_MAX",E,"Maximum length of a host name (not including the…",92,N],[13,"IOV_MAX",E,"Maximum number of iovec structures that one process has…",92,N],[13,"LINE_MAX",E,"Unless otherwise noted, the maximum length, in bytes, of a…",92,N],[13,"LOGIN_NAME_MAX",E,"Maximum length of a login name.",92,N],[13,"NGROUPS_MAX",E,"Maximum number of simultaneous supplementary group IDs per…",92,N],[13,"GETGR_R_SIZE_MAX",E,"Initial size of `getgrgid_r` and `getgrnam_r` data buffers",92,N],[13,"GETPW_R_SIZE_MAX",E,"Initial size of `getpwuid_r` and `getpwnam_r` data buffers",92,N],[13,"MQ_OPEN_MAX",E,"The maximum number of open message queue descriptors a…",92,N],[13,"MQ_PRIO_MAX",E,"The maximum number of message priorities supported by the…",92,N],[13,"OPEN_MAX",E,"A value one greater than the maximum value that the system…",92,N],[13,"_POSIX_ADVISORY_INFO",E,"The implementation supports the Advisory Information option.",92,N],[13,"_POSIX_BARRIERS",E,"The implementation supports barriers.",92,N],[13,"_POSIX_ASYNCHRONOUS_IO",E,"The implementation supports asynchronous input and output.",92,N],[13,"_POSIX_CLOCK_SELECTION",E,"The implementation supports clock selection.",92,N],[13,"_POSIX_CPUTIME",E,"The implementation supports the Process CPU-Time Clocks…",92,N],[13,"_POSIX_FSYNC",E,"The implementation supports the File Synchronization option.",92,N],[13,"_POSIX_IPV6",E,"The implementation supports the IPv6 option.",92,N],[13,"_POSIX_JOB_CONTROL",E,"The implementation supports job control.",92,N],[13,"_POSIX_MAPPED_FILES",E,"The implementation supports memory mapped Files.",92,N],[13,"_POSIX_MEMLOCK",E,"The implementation supports the Process Memory Locking…",92,N],[13,"_POSIX_MEMLOCK_RANGE",E,"The implementation supports the Range Memory Locking option.",92,N],[13,"_POSIX_MEMORY_PROTECTION",E,"The implementation supports memory protection.",92,N],[13,"_POSIX_MESSAGE_PASSING",E,"The implementation supports the Message Passing option.",92,N],[13,"_POSIX_MONOTONIC_CLOCK",E,"The implementation supports the Monotonic Clock option.",92,N],[13,"_POSIX_PRIORITIZED_IO",E,"The implementation supports the Prioritized Input and…",92,N],[13,"_POSIX_PRIORITY_SCHEDULING",E,"The implementation supports the Process Scheduling option.",92,N],[13,"_POSIX_RAW_SOCKETS",E,"The implementation supports the Raw Sockets option.",92,N],[13,"_POSIX_READER_WRITER_LOCKS",E,"The implementation supports read-write locks.",92,N],[13,"_POSIX_REALTIME_SIGNALS",E,"The implementation supports realtime signals.",92,N],[13,"_POSIX_REGEXP",E,"The implementation supports the Regular Expression…",92,N],[13,"_POSIX_SAVED_IDS",E,"Each process has a saved set-user-ID and a saved…",92,N],[13,"_POSIX_SEMAPHORES",E,"The implementation supports semaphores.",92,N],[13,"_POSIX_SHARED_MEMORY_OBJECTS",E,"The implementation supports the Shared Memory Objects…",92,N],[13,"_POSIX_SHELL",E,"The implementation supports the POSIX shell.",92,N],[13,"_POSIX_SPAWN",E,"The implementation supports the Spawn option.",92,N],[13,"_POSIX_SPIN_LOCKS",E,"The implementation supports spin locks.",92,N],[13,"_POSIX_SPORADIC_SERVER",E,"The implementation supports the Process Sporadic Server…",92,N],[13,"_POSIX_SS_REPL_MAX",E,E,92,N],[13,"_POSIX_SYNCHRONIZED_IO",E,"The implementation supports the Synchronized Input and…",92,N],[13,"_POSIX_THREAD_ATTR_STACKADDR",E,"The implementation supports the Thread Stack Address…",92,N],[13,"_POSIX_THREAD_ATTR_STACKSIZE",E,"The implementation supports the Thread Stack Size…",92,N],[13,"_POSIX_THREAD_CPUTIME",E,"The implementation supports the Thread CPU-Time Clocks…",92,N],[13,"_POSIX_THREAD_PRIO_INHERIT",E,R[1930],92,N],[13,"_POSIX_THREAD_PRIO_PROTECT",E,R[1930],92,N],[13,"_POSIX_THREAD_PRIORITY_SCHEDULING",E,"The implementation supports the Thread Execution…",92,N],[13,"_POSIX_THREAD_PROCESS_SHARED",E,"The implementation supports the Thread Process-Shared…",92,N],[13,"_POSIX_THREAD_SAFE_FUNCTIONS",E,"The implementation supports thread-safe functions.",92,N],[13,"_POSIX_THREAD_SPORADIC_SERVER",E,"The implementation supports the Thread Sporadic Server…",92,N],[13,"_POSIX_THREADS",E,"The implementation supports threads.",92,N],[13,"_POSIX_TIMEOUTS",E,"The implementation supports timeouts.",92,N],[13,"_POSIX_TIMERS",E,"The implementation supports timers.",92,N],[13,"_POSIX_TRACE",E,"The implementation supports the Trace option.",92,N],[13,"_POSIX_TRACE_EVENT_FILTER",E,"The implementation supports the Trace Event Filter option.",92,N],[13,"_POSIX_TRACE_EVENT_NAME_MAX",E,E,92,N],[13,"_POSIX_TRACE_INHERIT",E,"The implementation supports the Trace Inherit option.",92,N],[13,"_POSIX_TRACE_LOG",E,"The implementation supports the Trace Log option.",92,N],[13,"_POSIX_TRACE_NAME_MAX",E,E,92,N],[13,"_POSIX_TRACE_SYS_MAX",E,E,92,N],[13,"_POSIX_TRACE_USER_EVENT_MAX",E,E,92,N],[13,"_POSIX_TYPED_MEMORY_OBJECTS",E,"The implementation supports the Typed Memory Objects option.",92,N],[13,"_POSIX_VERSION",E,"Integer value indicating version of this standard…",92,N],[13,"_POSIX_V6_ILP32_OFF32",E,R[1931],92,N],[13,"_POSIX_V6_ILP32_OFFBIG",E,R[1931],92,N],[13,"_POSIX_V6_LP64_OFF64",E,R[1931],92,N],[13,"_POSIX_V6_LPBIG_OFFBIG",E,R[1931],92,N],[13,"_POSIX2_C_BIND",E,"The implementation supports the C-Language Binding option.",92,N],[13,"_POSIX2_C_DEV",E,"The implementation supports the C-Language Development…",92,N],[13,"_POSIX2_CHAR_TERM",E,"The implementation supports the Terminal Characteristics…",92,N],[13,"_POSIX2_FORT_DEV",E,"The implementation supports the FORTRAN Development…",92,N],[13,"_POSIX2_FORT_RUN",E,"The implementation supports the FORTRAN Runtime Utilities…",92,N],[13,"_POSIX2_LOCALEDEF",E,"The implementation supports the creation of locales by the…",92,N],[13,"_POSIX2_PBS",E,"The implementation supports the Batch Environment Services…",92,N],[13,"_POSIX2_PBS_ACCOUNTING",E,"The implementation supports the Batch Accounting option.",92,N],[13,"_POSIX2_PBS_CHECKPOINT",E,"The implementation supports the Batch Checkpoint/Restart…",92,N],[13,"_POSIX2_PBS_LOCATE",E,"The implementation supports the Locate Batch Job Request…",92,N],[13,"_POSIX2_PBS_MESSAGE",E,"The implementation supports the Batch Job Message Request…",92,N],[13,"_POSIX2_PBS_TRACK",E,"The implementation supports the Track Batch Job Request…",92,N],[13,"_POSIX2_SW_DEV",E,"The implementation supports the Software Development…",92,N],[13,"_POSIX2_UPE",E,"The implementation supports the User Portability Utilities…",92,N],[13,"_POSIX2_VERSION",E,"Integer value indicating version of the Shell and…",92,N],[13,"PAGE_SIZE",E,"The size of a system page in bytes.",92,N],[13,"PTHREAD_DESTRUCTOR_ITERATIONS",E,E,92,N],[13,"PTHREAD_KEYS_MAX",E,E,92,N],[13,R[1932],E,E,92,N],[13,"PTHREAD_THREADS_MAX",E,E,92,N],[13,"RE_DUP_MAX",E,E,92,N],[13,"RTSIG_MAX",E,E,92,N],[13,"SEM_NSEMS_MAX",E,E,92,N],[13,"SEM_VALUE_MAX",E,E,92,N],[13,"SIGQUEUE_MAX",E,E,92,N],[13,"STREAM_MAX",E,E,92,N],[13,"SYMLOOP_MAX",E,E,92,N],[13,"TIMER_MAX",E,E,92,N],[13,"TTY_NAME_MAX",E,E,92,N],[13,"TZNAME_MAX",E,E,92,N],[13,"_XOPEN_CRYPT",E,"The implementation supports the X/Open Encryption Option…",92,N],[13,"_XOPEN_ENH_I18N",E,"The implementation supports the Issue 4, Version 2…",92,N],[13,"_XOPEN_LEGACY",E,E,92,N],[13,"_XOPEN_REALTIME",E,"The implementation supports the X/Open Realtime Option…",92,N],[13,"_XOPEN_REALTIME_THREADS",E,"The implementation supports the X/Open Realtime Threads…",92,N],[13,"_XOPEN_SHM",E,"The implementation supports the Issue 4, Version 2 Shared…",92,N],[13,"_XOPEN_STREAMS",E,"The implementation supports the XSI STREAMS Option Group.",92,N],[13,"_XOPEN_UNIX",E,"The implementation supports the XSI option",92,N],[13,"_XOPEN_VERSION",E,"Integer value indicating version of the X/Open Portability…",92,N],[5,"fork",E,"Create a new child process duplicating the parent process…",N,[[],[[R[1976]],[R[12],[R[1976]]]]]],[5,"getpid",E,"Get the pid of this process (see getpid(2)).",N,[[],["pid"]]],[5,"getppid",E,"Get the pid of this processes' parent (see getpid(2)).",N,[[],["pid"]]],[5,"setpgid",E,"Set a process group ID (see setpgid(2)).",N,[[["pid"]],[R[12]]]],[5,"getpgid",E,E,N,[[[R[52],["pid"]],["pid"]],[["pid"],[R[12],["pid"]]]]],[5,"setsid",E,"Create new session and set process group id (see setsid(2)).",N,[[],[["pid"],[R[12],["pid"]]]]],[5,"getsid",E,"Get the process group ID of a session leader getsid(2).",N,[[[R[52],["pid"]],["pid"]],[["pid"],[R[12],["pid"]]]]],[5,"tcgetpgrp",E,"Get the terminal foreground process group (see…",N,[[["c_int"]],[["pid"],[R[12],["pid"]]]]],[5,"tcsetpgrp",E,"Set the terminal foreground process group (see…",N,[[["c_int"],["pid"]],[R[12]]]],[5,"getpgrp",E,"Get the group id of the calling process (see getpgrp(3)).",N,[[],["pid"]]],[5,"dup",E,"Create a copy of the specified file descriptor (see dup(2)).",N,[[["rawfd"]],[[R[12],["rawfd"]],["rawfd"]]]],[5,"dup2",E,"Create a copy of the specified file descriptor using the…",N,[[["rawfd"]],[[R[12],["rawfd"]],["rawfd"]]]],[5,"dup3",E,"Create a new copy of the specified file descriptor using…",N,[[["oflag"],["rawfd"]],[[R[12],["rawfd"]],["rawfd"]]]],[5,"chdir",E,"Change the current working directory of the calling…",N,[[["p"]],[R[12]]]],[5,"fchdir",E,"Change the current working directory of the process to the…",N,[[["rawfd"]],[R[12]]]],[5,"mkdir",E,"Creates new directory `path` with access rights `mode`.…",N,[[["mode"],["p"]],[R[12]]]],[5,"mkfifo",E,"Creates new fifo special file (named pipe) with path…",N,[[["mode"],["p"]],[R[12]]]],[5,"getcwd",E,"Returns the current directory as a `PathBuf`",N,[[],[[R[12],["pathbuf"]],["pathbuf"]]]],[5,"chown",E,"Change the ownership of the file at `path` to be owned by…",N,[[["uid"],[R[52],["gid"]],["gid"],[R[52],["uid"]],["p"]],[R[12]]]],[5,"execv",E,R[1933],N,[[["cstring"]],[[R[12],["void"]],["void"]]]],[5,"execve",E,R[1933],N,[[["cstring"]],[[R[12],["void"]],["void"]]]],[5,"execvp",E,"Replace the current process image with a new one and…",N,[[["cstring"]],[[R[12],["void"]],["void"]]]],[5,"daemon",E,"Daemonize this process by detaching from the controlling…",N,[[["bool"]],[R[12]]]],[5,R[1934],E,"Set the system host name (see sethostname(2)).",N,[[["asref",["osstr"]],["osstr"]],[R[12]]]],[5,R[1935],E,"Get the host name and store it in the provided buffer,…",N,[[],[["cstr"],[R[12],["cstr"]]]]],[5,"close",E,"Close a raw file descriptor",N,[[["rawfd"]],[R[12]]]],[5,"read",E,"Read from a raw file descriptor.",N,[[["rawfd"]],[[R[12],[R[9]]],[R[9]]]]],[5,"write",E,"Write to a raw file descriptor.",N,[[["rawfd"]],[[R[12],[R[9]]],[R[9]]]]],[5,"lseek",E,"Move the read/write file offset.",N,[[["whence"],["off_t"],["rawfd"]],[["off_t"],[R[12],["off_t"]]]]],[5,"pipe",E,"Create an interprocess channel.",N,[[],[R[12]]]],[5,"pipe2",E,"Like `pipe`, but allows setting certain file descriptor…",N,[[["oflag"]],[R[12]]]],[5,"ftruncate",E,"Truncate a file to a specified length",N,[[["off_t"],["rawfd"]],[R[12]]]],[5,"isatty",E,E,N,[[["rawfd"]],[[R[12],["bool"]],["bool"]]]],[5,"unlink",E,"Remove a directory entry",N,[[["p"]],[R[12]]]],[5,"chroot",E,E,N,[[["p"]],[R[12]]]],[5,"fsync",E,"Synchronize changes to a file",N,[[["rawfd"]],[R[12]]]],[5,"getuid",E,"Get a real user ID",N,[[],["uid"]]],[5,"geteuid",E,"Get the effective user ID",N,[[],["uid"]]],[5,"getgid",E,"Get the real group ID",N,[[],["gid"]]],[5,"getegid",E,"Get the effective group ID",N,[[],["gid"]]],[5,"setuid",E,R[1936],N,[[["uid"]],[R[12]]]],[5,"setgid",E,R[1936],N,[[["gid"]],[R[12]]]],[5,"pause",E,"Suspend the thread until a signal is received.",N,[[]]],[5,"sleep",E,"Suspend execution for an interval of time",N,[[["c_uint"]],["c_uint"]]],[5,"mkstemp",E,"Creates a regular file which persists even after process…",N,[[["p"]],[R[12]]]],[5,"fpathconf",E,"Like `pathconf`, but works with file descriptors instead…",N,[[[R[1937]],["rawfd"]],[[R[52],["c_long"]],[R[12],[R[52]]]]]],[5,"pathconf",E,"Get path-dependent configurable system variables (see…",N,[[["p"],[R[1937]]],[[R[52],["c_long"]],[R[12],[R[52]]]]]],[5,"sysconf",E,"Get configurable system variables (see sysconf(3))",N,[[[R[1977]]],[[R[52],["c_long"]],[R[12],[R[52]]]]]],[0,"alarm",E,"Alarm signal scheduling.",N,N],[5,"set","nix::unistd::alarm","Schedule an alarm signal.",N,[[["c_uint"]],[["c_uint"],[R[52],["c_uint"]]]]],[5,"cancel",E,"Cancel an previously set alarm signal.",N,[[],[["c_uint"],[R[52],["c_uint"]]]]],[17,"ROOT",R[1928],"Constant for UID = 0",N,N],[11,"from_raw",E,"Creates `Uid` from raw `uid_t`.",93,[[["uid_t"]],["self"]]],[11,"current",E,"Returns Uid of calling process. This is practically a more…",93,[[],["self"]]],[11,"effective",E,"Returns effective Uid of calling process. This is…",93,[[],["self"]]],[11,"is_root",E,"Returns true if the `Uid` represents privileged user -…",93,[[["self"]],["bool"]]],[11,"from_raw",E,"Creates `Gid` from raw `gid_t`.",94,[[["gid_t"]],["self"]]],[11,"current",E,"Returns Gid of calling process. This is practically a more…",94,[[],["self"]]],[11,"effective",E,"Returns effective Gid of calling process. This is…",94,[[],["self"]]],[11,"from_raw",E,"Creates `Pid` from raw `pid_t`.",95,[[["pid_t"]],["self"]]],[11,"this",E,"Returns PID of calling process",95,[[],["self"]]],[11,"parent",E,"Returns PID of parent of calling process",95,[[],["self"]]],[11,"is_child",E,"Return `true` if this is the child process of the `fork()`",89,[[["self"]],["bool"]]],[11,"is_parent",E,"Returns `true` if this is the parent process of the `fork()`",89,[[["self"]],["bool"]]],[6,"Result","nix","Nix Result Type",N,N],[8,"NixPath",E,E,N,N],[10,"len",E,E,96,[[["self"]],[R[9]]]],[10,"with_nix_path",E,E,96,[[["self"],["f"]],[R[12]]]],[11,"from_errno",E,"Create a nix Error from a given errno",0,[[["errno"]],["error"]]],[11,"last",E,"Get the current errno and convert it to a nix Error",0,[[],["error"]]],[11,"invalid_argument",E,"Create a new invalid argument error (`EINVAL`)",0,[[],["error"]]],[14,"request_code_none",E,R[1938],N,N],[14,"request_code_write_int",E,R[1938],N,N],[14,"request_code_read",E,"Generate an ioctl request code for a command that reads.",N,N],[14,"request_code_write",E,"Generate an ioctl request code for a command that writes.",N,N],[14,"request_code_readwrite",E,"Generate an ioctl request code for a command that reads…",N,N],[14,"ioctl_none",E,"Generates a wrapper function for an ioctl that passes no…",N,N],[14,"ioctl_none_bad",E,"Generates a wrapper function for a \"bad\" ioctl that passes…",N,N],[14,"ioctl_read",E,"Generates a wrapper function for an ioctl that reads data…",N,N],[14,"ioctl_read_bad",E,R[1940],N,N],[14,"ioctl_write_ptr",E,"Generates a wrapper function for an ioctl that writes data…",N,N],[14,"ioctl_write_ptr_bad",E,R[1939],N,N],[14,"ioctl_write_int",E,"Generates a wrapper function for a ioctl that writes an…",N,N],[14,"ioctl_write_int_bad",E,R[1939],N,N],[14,"ioctl_readwrite",E,R[1941],N,N],[14,"ioctl_readwrite_bad",E,R[1940],N,N],[14,"ioctl_read_buf",E,"Generates a wrapper function for an ioctl that reads an…",N,N],[14,"ioctl_write_buf",E,"Generates a wrapper function for an ioctl that writes an…",N,N],[14,"ioctl_readwrite_buf",E,R[1941],N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[[T],["self"]]]],[11,R[170],E,E,0,[[["self"]],["string"]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",R[1965],E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,[[[T],["self"]]]],[11,R[170],E,E,1,[[["self"]],["string"]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",R[1966],E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[16],E,E,5,[[["self"]],[T]]],[11,R[17],E,E,5,[[[T],["self"]]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,R[18],E,E,5,[[["self"]],[R[40]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[16],E,E,6,[[["self"]],[T]]],[11,R[17],E,E,6,[[[T],["self"]]]],[11,R[11],E,E,6,[[[U]],[R[12]]]],[11,R[39],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[],[R[12]]]],[11,R[18],E,E,6,[[["self"]],[R[40]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[16],E,E,7,[[["self"]],[T]]],[11,R[17],E,E,7,[[[T],["self"]]]],[11,R[11],E,E,7,[[[U]],[R[12]]]],[11,R[39],E,E,7,[[["self"]],[T]]],[11,R[13],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[],[R[12]]]],[11,R[18],E,E,7,[[["self"]],[R[40]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[16],E,E,4,[[["self"]],[T]]],[11,R[17],E,E,4,[[[T],["self"]]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,"from",R[1942],E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[16],E,E,8,[[["self"]],[T]]],[11,R[17],E,E,8,[[[T],["self"]]]],[11,R[11],E,E,8,[[[U]],[R[12]]]],[11,R[39],E,E,8,[[["self"]],[T]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[],[R[12]]]],[11,R[18],E,E,8,[[["self"]],[R[40]]]],[11,"from",E,E,97,[[[T]],[T]]],[11,R[48],E,E,97,[[],["i"]]],[11,"into",E,E,97,[[],[U]]],[11,R[11],E,E,97,[[[U]],[R[12]]]],[11,R[39],E,E,97,[[["self"]],[T]]],[11,R[13],E,E,97,[[["self"]],[T]]],[11,R[14],E,E,97,[[],[R[12]]]],[11,R[18],E,E,97,[[["self"]],[R[40]]]],[11,"from",R[1943],E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[16],E,E,9,[[["self"]],[T]]],[11,R[17],E,E,9,[[[T],["self"]]]],[11,R[11],E,E,9,[[[U]],[R[12]]]],[11,R[39],E,E,9,[[["self"]],[T]]],[11,R[13],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[],[R[12]]]],[11,R[18],E,E,9,[[["self"]],[R[40]]]],[11,"from",R[1970],E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[16],E,E,10,[[["self"]],[T]]],[11,R[17],E,E,10,[[[T],["self"]]]],[11,R[11],E,E,10,[[[U]],[R[12]]]],[11,R[39],E,E,10,[[["self"]],[T]]],[11,R[13],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[],[R[12]]]],[11,R[18],E,E,10,[[["self"]],[R[40]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[16],E,E,11,[[["self"]],[T]]],[11,R[17],E,E,11,[[[T],["self"]]]],[11,R[11],E,E,11,[[[U]],[R[12]]]],[11,R[39],E,E,11,[[["self"]],[T]]],[11,R[13],E,E,11,[[["self"]],[T]]],[11,R[14],E,E,11,[[],[R[12]]]],[11,R[18],E,E,11,[[["self"]],[R[40]]]],[11,"from",R[1992],E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[16],E,E,12,[[["self"]],[T]]],[11,R[17],E,E,12,[[[T],["self"]]]],[11,R[11],E,E,12,[[[U]],[R[12]]]],[11,R[39],E,E,12,[[["self"]],[T]]],[11,R[13],E,E,12,[[["self"]],[T]]],[11,R[14],E,E,12,[[],[R[12]]]],[11,R[18],E,E,12,[[["self"]],[R[40]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[16],E,E,13,[[["self"]],[T]]],[11,R[17],E,E,13,[[[T],["self"]]]],[11,R[11],E,E,13,[[[U]],[R[12]]]],[11,R[39],E,E,13,[[["self"]],[T]]],[11,R[13],E,E,13,[[["self"]],[T]]],[11,R[14],E,E,13,[[],[R[12]]]],[11,R[18],E,E,13,[[["self"]],[R[40]]]],[11,"from",E,E,98,[[[T]],[T]]],[11,"into",E,E,98,[[],[U]]],[11,R[11],E,E,98,[[[U]],[R[12]]]],[11,R[39],E,E,98,[[["self"]],[T]]],[11,R[13],E,E,98,[[["self"]],[T]]],[11,R[14],E,E,98,[[],[R[12]]]],[11,R[18],E,E,98,[[["self"]],[R[40]]]],[11,"from",R[1944],E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[11],E,E,19,[[[U]],[R[12]]]],[11,R[39],E,E,19,[[["self"]],[T]]],[11,R[13],E,E,19,[[["self"]],[T]]],[11,R[14],E,E,19,[[],[R[12]]]],[11,R[18],E,E,19,[[["self"]],[R[40]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[16],E,E,14,[[["self"]],[T]]],[11,R[17],E,E,14,[[[T],["self"]]]],[11,R[11],E,E,14,[[[U]],[R[12]]]],[11,R[39],E,E,14,[[["self"]],[T]]],[11,R[13],E,E,14,[[["self"]],[T]]],[11,R[14],E,E,14,[[],[R[12]]]],[11,R[18],E,E,14,[[["self"]],[R[40]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[16],E,E,15,[[["self"]],[T]]],[11,R[17],E,E,15,[[[T],["self"]]]],[11,R[11],E,E,15,[[[U]],[R[12]]]],[11,R[39],E,E,15,[[["self"]],[T]]],[11,R[13],E,E,15,[[["self"]],[T]]],[11,R[14],E,E,15,[[],[R[12]]]],[11,R[18],E,E,15,[[["self"]],[R[40]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[16],E,E,16,[[["self"]],[T]]],[11,R[17],E,E,16,[[[T],["self"]]]],[11,R[11],E,E,16,[[[U]],[R[12]]]],[11,R[39],E,E,16,[[["self"]],[T]]],[11,R[13],E,E,16,[[["self"]],[T]]],[11,R[14],E,E,16,[[],[R[12]]]],[11,R[18],E,E,16,[[["self"]],[R[40]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[16],E,E,17,[[["self"]],[T]]],[11,R[17],E,E,17,[[[T],["self"]]]],[11,R[11],E,E,17,[[[U]],[R[12]]]],[11,R[39],E,E,17,[[["self"]],[T]]],[11,R[13],E,E,17,[[["self"]],[T]]],[11,R[14],E,E,17,[[],[R[12]]]],[11,R[18],E,E,17,[[["self"]],[R[40]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[11],E,E,18,[[[U]],[R[12]]]],[11,R[39],E,E,18,[[["self"]],[T]]],[11,R[13],E,E,18,[[["self"]],[T]]],[11,R[14],E,E,18,[[],[R[12]]]],[11,R[18],E,E,18,[[["self"]],[R[40]]]],[11,"from",R[1945],E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[16],E,E,23,[[["self"]],[T]]],[11,R[17],E,E,23,[[[T],["self"]]]],[11,R[11],E,E,23,[[[U]],[R[12]]]],[11,R[39],E,E,23,[[["self"]],[T]]],[11,R[13],E,E,23,[[["self"]],[T]]],[11,R[14],E,E,23,[[],[R[12]]]],[11,R[18],E,E,23,[[["self"]],[R[40]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[16],E,E,21,[[["self"]],[T]]],[11,R[17],E,E,21,[[[T],["self"]]]],[11,R[11],E,E,21,[[[U]],[R[12]]]],[11,R[39],E,E,21,[[["self"]],[T]]],[11,R[13],E,E,21,[[["self"]],[T]]],[11,R[14],E,E,21,[[],[R[12]]]],[11,R[18],E,E,21,[[["self"]],[R[40]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[16],E,E,22,[[["self"]],[T]]],[11,R[17],E,E,22,[[[T],["self"]]]],[11,R[11],E,E,22,[[[U]],[R[12]]]],[11,R[39],E,E,22,[[["self"]],[T]]],[11,R[13],E,E,22,[[["self"]],[T]]],[11,R[14],E,E,22,[[],[R[12]]]],[11,R[18],E,E,22,[[["self"]],[R[40]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[16],E,E,20,[[["self"]],[T]]],[11,R[17],E,E,20,[[[T],["self"]]]],[11,R[11],E,E,20,[[[U]],[R[12]]]],[11,R[39],E,E,20,[[["self"]],[T]]],[11,R[13],E,E,20,[[["self"]],[T]]],[11,R[14],E,E,20,[[],[R[12]]]],[11,R[18],E,E,20,[[["self"]],[R[40]]]],[11,"from",R[1946],E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[16],E,E,25,[[["self"]],[T]]],[11,R[17],E,E,25,[[[T],["self"]]]],[11,R[11],E,E,25,[[[U]],[R[12]]]],[11,R[39],E,E,25,[[["self"]],[T]]],[11,R[13],E,E,25,[[["self"]],[T]]],[11,R[14],E,E,25,[[],[R[12]]]],[11,R[18],E,E,25,[[["self"]],[R[40]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[16],E,E,26,[[["self"]],[T]]],[11,R[17],E,E,26,[[[T],["self"]]]],[11,R[11],E,E,26,[[[U]],[R[12]]]],[11,R[39],E,E,26,[[["self"]],[T]]],[11,R[13],E,E,26,[[["self"]],[T]]],[11,R[14],E,E,26,[[],[R[12]]]],[11,R[18],E,E,26,[[["self"]],[R[40]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[16],E,E,27,[[["self"]],[T]]],[11,R[17],E,E,27,[[[T],["self"]]]],[11,R[11],E,E,27,[[[U]],[R[12]]]],[11,R[39],E,E,27,[[["self"]],[T]]],[11,R[13],E,E,27,[[["self"]],[T]]],[11,R[14],E,E,27,[[],[R[12]]]],[11,R[18],E,E,27,[[["self"]],[R[40]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[16],E,E,28,[[["self"]],[T]]],[11,R[17],E,E,28,[[[T],["self"]]]],[11,R[11],E,E,28,[[[U]],[R[12]]]],[11,R[39],E,E,28,[[["self"]],[T]]],[11,R[13],E,E,28,[[["self"]],[T]]],[11,R[14],E,E,28,[[],[R[12]]]],[11,R[18],E,E,28,[[["self"]],[R[40]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[16],E,E,24,[[["self"]],[T]]],[11,R[17],E,E,24,[[[T],["self"]]]],[11,R[11],E,E,24,[[[U]],[R[12]]]],[11,R[39],E,E,24,[[["self"]],[T]]],[11,R[13],E,E,24,[[["self"]],[T]]],[11,R[14],E,E,24,[[],[R[12]]]],[11,R[18],E,E,24,[[["self"]],[R[40]]]],[11,"from",R[1947],E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[16],E,E,29,[[["self"]],[T]]],[11,R[17],E,E,29,[[[T],["self"]]]],[11,R[11],E,E,29,[[[U]],[R[12]]]],[11,R[39],E,E,29,[[["self"]],[T]]],[11,R[13],E,E,29,[[["self"]],[T]]],[11,R[14],E,E,29,[[],[R[12]]]],[11,R[18],E,E,29,[[["self"]],[R[40]]]],[11,"from",R[1877],E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[16],E,E,34,[[["self"]],[T]]],[11,R[17],E,E,34,[[[T],["self"]]]],[11,R[11],E,E,34,[[[U]],[R[12]]]],[11,R[39],E,E,34,[[["self"]],[T]]],[11,R[13],E,E,34,[[["self"]],[T]]],[11,R[14],E,E,34,[[],[R[12]]]],[11,R[18],E,E,34,[[["self"]],[R[40]]]],[11,"from",E,E,99,[[[T]],[T]]],[11,R[48],E,E,99,[[],["i"]]],[11,"into",E,E,99,[[],[U]]],[11,R[16],E,E,99,[[["self"]],[T]]],[11,R[17],E,E,99,[[[T],["self"]]]],[11,R[11],E,E,99,[[[U]],[R[12]]]],[11,R[39],E,E,99,[[["self"]],[T]]],[11,R[13],E,E,99,[[["self"]],[T]]],[11,R[14],E,E,99,[[],[R[12]]]],[11,R[18],E,E,99,[[["self"]],[R[40]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[16],E,E,35,[[["self"]],[T]]],[11,R[17],E,E,35,[[[T],["self"]]]],[11,R[11],E,E,35,[[[U]],[R[12]]]],[11,R[39],E,E,35,[[["self"]],[T]]],[11,R[13],E,E,35,[[["self"]],[T]]],[11,R[14],E,E,35,[[],[R[12]]]],[11,R[18],E,E,35,[[["self"]],[R[40]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,R[16],E,E,36,[[["self"]],[T]]],[11,R[17],E,E,36,[[[T],["self"]]]],[11,R[11],E,E,36,[[[U]],[R[12]]]],[11,R[39],E,E,36,[[["self"]],[T]]],[11,R[13],E,E,36,[[["self"]],[T]]],[11,R[14],E,E,36,[[],[R[12]]]],[11,R[18],E,E,36,[[["self"]],[R[40]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,"into",E,E,37,[[],[U]]],[11,R[16],E,E,37,[[["self"]],[T]]],[11,R[17],E,E,37,[[[T],["self"]]]],[11,R[11],E,E,37,[[[U]],[R[12]]]],[11,R[39],E,E,37,[[["self"]],[T]]],[11,R[13],E,E,37,[[["self"]],[T]]],[11,R[14],E,E,37,[[],[R[12]]]],[11,R[18],E,E,37,[[["self"]],[R[40]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[16],E,E,30,[[["self"]],[T]]],[11,R[17],E,E,30,[[[T],["self"]]]],[11,R[11],E,E,30,[[[U]],[R[12]]]],[11,R[39],E,E,30,[[["self"]],[T]]],[11,R[13],E,E,30,[[["self"]],[T]]],[11,R[14],E,E,30,[[],[R[12]]]],[11,R[18],E,E,30,[[["self"]],[R[40]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[16],E,E,31,[[["self"]],[T]]],[11,R[17],E,E,31,[[[T],["self"]]]],[11,R[11],E,E,31,[[[U]],[R[12]]]],[11,R[39],E,E,31,[[["self"]],[T]]],[11,R[13],E,E,31,[[["self"]],[T]]],[11,R[14],E,E,31,[[],[R[12]]]],[11,R[18],E,E,31,[[["self"]],[R[40]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[16],E,E,32,[[["self"]],[T]]],[11,R[17],E,E,32,[[[T],["self"]]]],[11,R[11],E,E,32,[[[U]],[R[12]]]],[11,R[39],E,E,32,[[["self"]],[T]]],[11,R[13],E,E,32,[[["self"]],[T]]],[11,R[14],E,E,32,[[],[R[12]]]],[11,R[18],E,E,32,[[["self"]],[R[40]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[16],E,E,33,[[["self"]],[T]]],[11,R[17],E,E,33,[[[T],["self"]]]],[11,R[11],E,E,33,[[[U]],[R[12]]]],[11,R[39],E,E,33,[[["self"]],[T]]],[11,R[13],E,E,33,[[["self"]],[T]]],[11,R[14],E,E,33,[[],[R[12]]]],[11,R[18],E,E,33,[[["self"]],[R[40]]]],[11,"from",R[1899],E,38,[[[T]],[T]]],[11,"into",E,E,38,[[],[U]]],[11,R[16],E,E,38,[[["self"]],[T]]],[11,R[17],E,E,38,[[[T],["self"]]]],[11,R[11],E,E,38,[[[U]],[R[12]]]],[11,R[39],E,E,38,[[["self"]],[T]]],[11,R[13],E,E,38,[[["self"]],[T]]],[11,R[14],E,E,38,[[],[R[12]]]],[11,R[18],E,E,38,[[["self"]],[R[40]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,R[16],E,E,39,[[["self"]],[T]]],[11,R[17],E,E,39,[[[T],["self"]]]],[11,R[11],E,E,39,[[[U]],[R[12]]]],[11,R[39],E,E,39,[[["self"]],[T]]],[11,R[13],E,E,39,[[["self"]],[T]]],[11,R[14],E,E,39,[[],[R[12]]]],[11,R[18],E,E,39,[[["self"]],[R[40]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,"into",E,E,40,[[],[U]]],[11,R[16],E,E,40,[[["self"]],[T]]],[11,R[17],E,E,40,[[[T],["self"]]]],[11,R[11],E,E,40,[[[U]],[R[12]]]],[11,R[39],E,E,40,[[["self"]],[T]]],[11,R[13],E,E,40,[[["self"]],[T]]],[11,R[14],E,E,40,[[],[R[12]]]],[11,R[18],E,E,40,[[["self"]],[R[40]]]],[11,"from",E,E,41,[[[T]],[T]]],[11,"into",E,E,41,[[],[U]]],[11,R[16],E,E,41,[[["self"]],[T]]],[11,R[17],E,E,41,[[[T],["self"]]]],[11,R[11],E,E,41,[[[U]],[R[12]]]],[11,R[39],E,E,41,[[["self"]],[T]]],[11,R[13],E,E,41,[[["self"]],[T]]],[11,R[14],E,E,41,[[],[R[12]]]],[11,R[18],E,E,41,[[["self"]],[R[40]]]],[11,"from",E,E,42,[[[T]],[T]]],[11,"into",E,E,42,[[],[U]]],[11,R[16],E,E,42,[[["self"]],[T]]],[11,R[17],E,E,42,[[[T],["self"]]]],[11,R[11],E,E,42,[[[U]],[R[12]]]],[11,R[39],E,E,42,[[["self"]],[T]]],[11,R[13],E,E,42,[[["self"]],[T]]],[11,R[14],E,E,42,[[],[R[12]]]],[11,R[18],E,E,42,[[["self"]],[R[40]]]],[11,"from",E,E,43,[[[T]],[T]]],[11,"into",E,E,43,[[],[U]]],[11,R[16],E,E,43,[[["self"]],[T]]],[11,R[17],E,E,43,[[[T],["self"]]]],[11,R[11],E,E,43,[[[U]],[R[12]]]],[11,R[39],E,E,43,[[["self"]],[T]]],[11,R[13],E,E,43,[[["self"]],[T]]],[11,R[14],E,E,43,[[],[R[12]]]],[11,R[18],E,E,43,[[["self"]],[R[40]]]],[11,"from",E,E,44,[[[T]],[T]]],[11,"into",E,E,44,[[],[U]]],[11,R[16],E,E,44,[[["self"]],[T]]],[11,R[17],E,E,44,[[[T],["self"]]]],[11,R[11],E,E,44,[[[U]],[R[12]]]],[11,R[39],E,E,44,[[["self"]],[T]]],[11,R[13],E,E,44,[[["self"]],[T]]],[11,R[14],E,E,44,[[],[R[12]]]],[11,R[18],E,E,44,[[["self"]],[R[40]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,"into",E,E,45,[[],[U]]],[11,R[16],E,E,45,[[["self"]],[T]]],[11,R[17],E,E,45,[[[T],["self"]]]],[11,R[170],E,E,45,[[["self"]],["string"]]],[11,R[11],E,E,45,[[[U]],[R[12]]]],[11,R[39],E,E,45,[[["self"]],[T]]],[11,R[13],E,E,45,[[["self"]],[T]]],[11,R[14],E,E,45,[[],[R[12]]]],[11,R[18],E,E,45,[[["self"]],[R[40]]]],[11,"from",E,E,46,[[[T]],[T]]],[11,"into",E,E,46,[[],[U]]],[11,R[16],E,E,46,[[["self"]],[T]]],[11,R[17],E,E,46,[[[T],["self"]]]],[11,R[170],E,E,46,[[["self"]],["string"]]],[11,R[11],E,E,46,[[[U]],[R[12]]]],[11,R[39],E,E,46,[[["self"]],[T]]],[11,R[13],E,E,46,[[["self"]],[T]]],[11,R[14],E,E,46,[[],[R[12]]]],[11,R[18],E,E,46,[[["self"]],[R[40]]]],[11,"from",E,E,47,[[[T]],[T]]],[11,"into",E,E,47,[[],[U]]],[11,R[16],E,E,47,[[["self"]],[T]]],[11,R[17],E,E,47,[[[T],["self"]]]],[11,R[170],E,E,47,[[["self"]],["string"]]],[11,R[11],E,E,47,[[[U]],[R[12]]]],[11,R[39],E,E,47,[[["self"]],[T]]],[11,R[13],E,E,47,[[["self"]],[T]]],[11,R[14],E,E,47,[[],[R[12]]]],[11,R[18],E,E,47,[[["self"]],[R[40]]]],[11,"from",E,E,48,[[[T]],[T]]],[11,"into",E,E,48,[[],[U]]],[11,R[16],E,E,48,[[["self"]],[T]]],[11,R[17],E,E,48,[[[T],["self"]]]],[11,R[170],E,E,48,[[["self"]],["string"]]],[11,R[11],E,E,48,[[[U]],[R[12]]]],[11,R[39],E,E,48,[[["self"]],[T]]],[11,R[13],E,E,48,[[["self"]],[T]]],[11,R[14],E,E,48,[[],[R[12]]]],[11,R[18],E,E,48,[[["self"]],[R[40]]]],[11,"from",E,E,61,[[[T]],[T]]],[11,"into",E,E,61,[[],[U]]],[11,R[16],E,E,61,[[["self"]],[T]]],[11,R[17],E,E,61,[[[T],["self"]]]],[11,R[11],E,E,61,[[[U]],[R[12]]]],[11,R[39],E,E,61,[[["self"]],[T]]],[11,R[13],E,E,61,[[["self"]],[T]]],[11,R[14],E,E,61,[[],[R[12]]]],[11,R[18],E,E,61,[[["self"]],[R[40]]]],[11,"from",E,E,62,[[[T]],[T]]],[11,"into",E,E,62,[[],[U]]],[11,R[16],E,E,62,[[["self"]],[T]]],[11,R[17],E,E,62,[[[T],["self"]]]],[11,R[11],E,E,62,[[[U]],[R[12]]]],[11,R[39],E,E,62,[[["self"]],[T]]],[11,R[13],E,E,62,[[["self"]],[T]]],[11,R[14],E,E,62,[[],[R[12]]]],[11,R[18],E,E,62,[[["self"]],[R[40]]]],[11,"from",E,E,63,[[[T]],[T]]],[11,"into",E,E,63,[[],[U]]],[11,R[16],E,E,63,[[["self"]],[T]]],[11,R[17],E,E,63,[[[T],["self"]]]],[11,R[11],E,E,63,[[[U]],[R[12]]]],[11,R[39],E,E,63,[[["self"]],[T]]],[11,R[13],E,E,63,[[["self"]],[T]]],[11,R[14],E,E,63,[[],[R[12]]]],[11,R[18],E,E,63,[[["self"]],[R[40]]]],[11,"from",E,E,64,[[[T]],[T]]],[11,"into",E,E,64,[[],[U]]],[11,R[16],E,E,64,[[["self"]],[T]]],[11,R[17],E,E,64,[[[T],["self"]]]],[11,R[11],E,E,64,[[[U]],[R[12]]]],[11,R[39],E,E,64,[[["self"]],[T]]],[11,R[13],E,E,64,[[["self"]],[T]]],[11,R[14],E,E,64,[[],[R[12]]]],[11,R[18],E,E,64,[[["self"]],[R[40]]]],[11,"from",E,E,65,[[[T]],[T]]],[11,"into",E,E,65,[[],[U]]],[11,R[11],E,E,65,[[[U]],[R[12]]]],[11,R[39],E,E,65,[[["self"]],[T]]],[11,R[13],E,E,65,[[["self"]],[T]]],[11,R[14],E,E,65,[[],[R[12]]]],[11,R[18],E,E,65,[[["self"]],[R[40]]]],[11,"from",E,E,49,[[[T]],[T]]],[11,"into",E,E,49,[[],[U]]],[11,R[11],E,E,49,[[[U]],[R[12]]]],[11,R[39],E,E,49,[[["self"]],[T]]],[11,R[13],E,E,49,[[["self"]],[T]]],[11,R[14],E,E,49,[[],[R[12]]]],[11,R[18],E,E,49,[[["self"]],[R[40]]]],[11,"from",E,E,100,[[[T]],[T]]],[11,R[48],E,E,100,[[],["i"]]],[11,"into",E,E,100,[[],[U]]],[11,R[11],E,E,100,[[[U]],[R[12]]]],[11,R[39],E,E,100,[[["self"]],[T]]],[11,R[13],E,E,100,[[["self"]],[T]]],[11,R[14],E,E,100,[[],[R[12]]]],[11,R[18],E,E,100,[[["self"]],[R[40]]]],[11,"from",E,E,50,[[[T]],[T]]],[11,"into",E,E,50,[[],[U]]],[11,R[16],E,E,50,[[["self"]],[T]]],[11,R[17],E,E,50,[[[T],["self"]]]],[11,R[11],E,E,50,[[[U]],[R[12]]]],[11,R[39],E,E,50,[[["self"]],[T]]],[11,R[13],E,E,50,[[["self"]],[T]]],[11,R[14],E,E,50,[[],[R[12]]]],[11,R[18],E,E,50,[[["self"]],[R[40]]]],[11,"from",E,E,51,[[[T]],[T]]],[11,"into",E,E,51,[[],[U]]],[11,R[16],E,E,51,[[["self"]],[T]]],[11,R[17],E,E,51,[[[T],["self"]]]],[11,R[170],E,E,51,[[["self"]],["string"]]],[11,R[11],E,E,51,[[[U]],[R[12]]]],[11,R[39],E,E,51,[[["self"]],[T]]],[11,R[13],E,E,51,[[["self"]],[T]]],[11,R[14],E,E,51,[[],[R[12]]]],[11,R[18],E,E,51,[[["self"]],[R[40]]]],[11,"from",E,E,52,[[[T]],[T]]],[11,"into",E,E,52,[[],[U]]],[11,R[16],E,E,52,[[["self"]],[T]]],[11,R[17],E,E,52,[[[T],["self"]]]],[11,R[170],E,E,52,[[["self"]],["string"]]],[11,R[11],E,E,52,[[[U]],[R[12]]]],[11,R[39],E,E,52,[[["self"]],[T]]],[11,R[13],E,E,52,[[["self"]],[T]]],[11,R[14],E,E,52,[[],[R[12]]]],[11,R[18],E,E,52,[[["self"]],[R[40]]]],[11,"from",E,E,53,[[[T]],[T]]],[11,"into",E,E,53,[[],[U]]],[11,R[16],E,E,53,[[["self"]],[T]]],[11,R[17],E,E,53,[[[T],["self"]]]],[11,R[170],E,E,53,[[["self"]],["string"]]],[11,R[11],E,E,53,[[[U]],[R[12]]]],[11,R[39],E,E,53,[[["self"]],[T]]],[11,R[13],E,E,53,[[["self"]],[T]]],[11,R[14],E,E,53,[[],[R[12]]]],[11,R[18],E,E,53,[[["self"]],[R[40]]]],[11,"from",E,E,54,[[[T]],[T]]],[11,"into",E,E,54,[[],[U]]],[11,R[16],E,E,54,[[["self"]],[T]]],[11,R[17],E,E,54,[[[T],["self"]]]],[11,R[11],E,E,54,[[[U]],[R[12]]]],[11,R[39],E,E,54,[[["self"]],[T]]],[11,R[13],E,E,54,[[["self"]],[T]]],[11,R[14],E,E,54,[[],[R[12]]]],[11,R[18],E,E,54,[[["self"]],[R[40]]]],[11,"from",E,E,55,[[[T]],[T]]],[11,"into",E,E,55,[[],[U]]],[11,R[16],E,E,55,[[["self"]],[T]]],[11,R[17],E,E,55,[[[T],["self"]]]],[11,R[11],E,E,55,[[[U]],[R[12]]]],[11,R[39],E,E,55,[[["self"]],[T]]],[11,R[13],E,E,55,[[["self"]],[T]]],[11,R[14],E,E,55,[[],[R[12]]]],[11,R[18],E,E,55,[[["self"]],[R[40]]]],[11,"from",E,E,56,[[[T]],[T]]],[11,"into",E,E,56,[[],[U]]],[11,R[11],E,E,56,[[[U]],[R[12]]]],[11,R[39],E,E,56,[[["self"]],[T]]],[11,R[13],E,E,56,[[["self"]],[T]]],[11,R[14],E,E,56,[[],[R[12]]]],[11,R[18],E,E,56,[[["self"]],[R[40]]]],[11,"from",E,E,57,[[[T]],[T]]],[11,"into",E,E,57,[[],[U]]],[11,R[16],E,E,57,[[["self"]],[T]]],[11,R[17],E,E,57,[[[T],["self"]]]],[11,R[11],E,E,57,[[[U]],[R[12]]]],[11,R[39],E,E,57,[[["self"]],[T]]],[11,R[13],E,E,57,[[["self"]],[T]]],[11,R[14],E,E,57,[[],[R[12]]]],[11,R[18],E,E,57,[[["self"]],[R[40]]]],[11,"from",E,E,58,[[[T]],[T]]],[11,"into",E,E,58,[[],[U]]],[11,R[16],E,E,58,[[["self"]],[T]]],[11,R[17],E,E,58,[[[T],["self"]]]],[11,R[11],E,E,58,[[[U]],[R[12]]]],[11,R[39],E,E,58,[[["self"]],[T]]],[11,R[13],E,E,58,[[["self"]],[T]]],[11,R[14],E,E,58,[[],[R[12]]]],[11,R[18],E,E,58,[[["self"]],[R[40]]]],[11,"from",R[1948],E,101,[[[T]],[T]]],[11,"into",E,E,101,[[],[U]]],[11,R[16],E,E,101,[[["self"]],[T]]],[11,R[17],E,E,101,[[[T],["self"]]]],[11,R[11],E,E,101,[[[U]],[R[12]]]],[11,R[39],E,E,101,[[["self"]],[T]]],[11,R[13],E,E,101,[[["self"]],[T]]],[11,R[14],E,E,101,[[],[R[12]]]],[11,R[18],E,E,101,[[["self"]],[R[40]]]],[11,"from",E,E,102,[[[T]],[T]]],[11,"into",E,E,102,[[],[U]]],[11,R[16],E,E,102,[[["self"]],[T]]],[11,R[17],E,E,102,[[[T],["self"]]]],[11,R[11],E,E,102,[[[U]],[R[12]]]],[11,R[39],E,E,102,[[["self"]],[T]]],[11,R[13],E,E,102,[[["self"]],[T]]],[11,R[14],E,E,102,[[],[R[12]]]],[11,R[18],E,E,102,[[["self"]],[R[40]]]],[11,"from",E,E,103,[[[T]],[T]]],[11,"into",E,E,103,[[],[U]]],[11,R[16],E,E,103,[[["self"]],[T]]],[11,R[17],E,E,103,[[[T],["self"]]]],[11,R[11],E,E,103,[[[U]],[R[12]]]],[11,R[39],E,E,103,[[["self"]],[T]]],[11,R[13],E,E,103,[[["self"]],[T]]],[11,R[14],E,E,103,[[],[R[12]]]],[11,R[18],E,E,103,[[["self"]],[R[40]]]],[11,"from",E,E,104,[[[T]],[T]]],[11,"into",E,E,104,[[],[U]]],[11,R[16],E,E,104,[[["self"]],[T]]],[11,R[17],E,E,104,[[[T],["self"]]]],[11,R[11],E,E,104,[[[U]],[R[12]]]],[11,R[39],E,E,104,[[["self"]],[T]]],[11,R[13],E,E,104,[[["self"]],[T]]],[11,R[14],E,E,104,[[],[R[12]]]],[11,R[18],E,E,104,[[["self"]],[R[40]]]],[11,"from",E,E,105,[[[T]],[T]]],[11,"into",E,E,105,[[],[U]]],[11,R[16],E,E,105,[[["self"]],[T]]],[11,R[17],E,E,105,[[[T],["self"]]]],[11,R[11],E,E,105,[[[U]],[R[12]]]],[11,R[39],E,E,105,[[["self"]],[T]]],[11,R[13],E,E,105,[[["self"]],[T]]],[11,R[14],E,E,105,[[],[R[12]]]],[11,R[18],E,E,105,[[["self"]],[R[40]]]],[11,"from",E,E,106,[[[T]],[T]]],[11,"into",E,E,106,[[],[U]]],[11,R[16],E,E,106,[[["self"]],[T]]],[11,R[17],E,E,106,[[[T],["self"]]]],[11,R[11],E,E,106,[[[U]],[R[12]]]],[11,R[39],E,E,106,[[["self"]],[T]]],[11,R[13],E,E,106,[[["self"]],[T]]],[11,R[14],E,E,106,[[],[R[12]]]],[11,R[18],E,E,106,[[["self"]],[R[40]]]],[11,"from",E,E,107,[[[T]],[T]]],[11,"into",E,E,107,[[],[U]]],[11,R[16],E,E,107,[[["self"]],[T]]],[11,R[17],E,E,107,[[[T],["self"]]]],[11,R[11],E,E,107,[[[U]],[R[12]]]],[11,R[39],E,E,107,[[["self"]],[T]]],[11,R[13],E,E,107,[[["self"]],[T]]],[11,R[14],E,E,107,[[],[R[12]]]],[11,R[18],E,E,107,[[["self"]],[R[40]]]],[11,"from",E,E,108,[[[T]],[T]]],[11,"into",E,E,108,[[],[U]]],[11,R[16],E,E,108,[[["self"]],[T]]],[11,R[17],E,E,108,[[[T],["self"]]]],[11,R[11],E,E,108,[[[U]],[R[12]]]],[11,R[39],E,E,108,[[["self"]],[T]]],[11,R[13],E,E,108,[[["self"]],[T]]],[11,R[14],E,E,108,[[],[R[12]]]],[11,R[18],E,E,108,[[["self"]],[R[40]]]],[11,"from",E,E,109,[[[T]],[T]]],[11,"into",E,E,109,[[],[U]]],[11,R[16],E,E,109,[[["self"]],[T]]],[11,R[17],E,E,109,[[[T],["self"]]]],[11,R[11],E,E,109,[[[U]],[R[12]]]],[11,R[39],E,E,109,[[["self"]],[T]]],[11,R[13],E,E,109,[[["self"]],[T]]],[11,R[14],E,E,109,[[],[R[12]]]],[11,R[18],E,E,109,[[["self"]],[R[40]]]],[11,"from",E,E,110,[[[T]],[T]]],[11,"into",E,E,110,[[],[U]]],[11,R[16],E,E,110,[[["self"]],[T]]],[11,R[17],E,E,110,[[[T],["self"]]]],[11,R[11],E,E,110,[[[U]],[R[12]]]],[11,R[39],E,E,110,[[["self"]],[T]]],[11,R[13],E,E,110,[[["self"]],[T]]],[11,R[14],E,E,110,[[],[R[12]]]],[11,R[18],E,E,110,[[["self"]],[R[40]]]],[11,"from",E,E,111,[[[T]],[T]]],[11,"into",E,E,111,[[],[U]]],[11,R[16],E,E,111,[[["self"]],[T]]],[11,R[17],E,E,111,[[[T],["self"]]]],[11,R[11],E,E,111,[[[U]],[R[12]]]],[11,R[39],E,E,111,[[["self"]],[T]]],[11,R[13],E,E,111,[[["self"]],[T]]],[11,R[14],E,E,111,[[],[R[12]]]],[11,R[18],E,E,111,[[["self"]],[R[40]]]],[11,"from",E,E,112,[[[T]],[T]]],[11,"into",E,E,112,[[],[U]]],[11,R[16],E,E,112,[[["self"]],[T]]],[11,R[17],E,E,112,[[[T],["self"]]]],[11,R[11],E,E,112,[[[U]],[R[12]]]],[11,R[39],E,E,112,[[["self"]],[T]]],[11,R[13],E,E,112,[[["self"]],[T]]],[11,R[14],E,E,112,[[],[R[12]]]],[11,R[18],E,E,112,[[["self"]],[R[40]]]],[11,"from",E,E,113,[[[T]],[T]]],[11,"into",E,E,113,[[],[U]]],[11,R[16],E,E,113,[[["self"]],[T]]],[11,R[17],E,E,113,[[[T],["self"]]]],[11,R[11],E,E,113,[[[U]],[R[12]]]],[11,R[39],E,E,113,[[["self"]],[T]]],[11,R[13],E,E,113,[[["self"]],[T]]],[11,R[14],E,E,113,[[],[R[12]]]],[11,R[18],E,E,113,[[["self"]],[R[40]]]],[11,"from",E,E,114,[[[T]],[T]]],[11,"into",E,E,114,[[],[U]]],[11,R[16],E,E,114,[[["self"]],[T]]],[11,R[17],E,E,114,[[[T],["self"]]]],[11,R[11],E,E,114,[[[U]],[R[12]]]],[11,R[39],E,E,114,[[["self"]],[T]]],[11,R[13],E,E,114,[[["self"]],[T]]],[11,R[14],E,E,114,[[],[R[12]]]],[11,R[18],E,E,114,[[["self"]],[R[40]]]],[11,"from",E,E,115,[[[T]],[T]]],[11,"into",E,E,115,[[],[U]]],[11,R[16],E,E,115,[[["self"]],[T]]],[11,R[17],E,E,115,[[[T],["self"]]]],[11,R[11],E,E,115,[[[U]],[R[12]]]],[11,R[39],E,E,115,[[["self"]],[T]]],[11,R[13],E,E,115,[[["self"]],[T]]],[11,R[14],E,E,115,[[],[R[12]]]],[11,R[18],E,E,115,[[["self"]],[R[40]]]],[11,"from",E,E,116,[[[T]],[T]]],[11,"into",E,E,116,[[],[U]]],[11,R[16],E,E,116,[[["self"]],[T]]],[11,R[17],E,E,116,[[[T],["self"]]]],[11,R[11],E,E,116,[[[U]],[R[12]]]],[11,R[39],E,E,116,[[["self"]],[T]]],[11,R[13],E,E,116,[[["self"]],[T]]],[11,R[14],E,E,116,[[],[R[12]]]],[11,R[18],E,E,116,[[["self"]],[R[40]]]],[11,"from",E,E,117,[[[T]],[T]]],[11,"into",E,E,117,[[],[U]]],[11,R[16],E,E,117,[[["self"]],[T]]],[11,R[17],E,E,117,[[[T],["self"]]]],[11,R[11],E,E,117,[[[U]],[R[12]]]],[11,R[39],E,E,117,[[["self"]],[T]]],[11,R[13],E,E,117,[[["self"]],[T]]],[11,R[14],E,E,117,[[],[R[12]]]],[11,R[18],E,E,117,[[["self"]],[R[40]]]],[11,"from",E,E,118,[[[T]],[T]]],[11,"into",E,E,118,[[],[U]]],[11,R[16],E,E,118,[[["self"]],[T]]],[11,R[17],E,E,118,[[[T],["self"]]]],[11,R[11],E,E,118,[[[U]],[R[12]]]],[11,R[39],E,E,118,[[["self"]],[T]]],[11,R[13],E,E,118,[[["self"]],[T]]],[11,R[14],E,E,118,[[],[R[12]]]],[11,R[18],E,E,118,[[["self"]],[R[40]]]],[11,"from",E,E,119,[[[T]],[T]]],[11,"into",E,E,119,[[],[U]]],[11,R[16],E,E,119,[[["self"]],[T]]],[11,R[17],E,E,119,[[[T],["self"]]]],[11,R[11],E,E,119,[[[U]],[R[12]]]],[11,R[39],E,E,119,[[["self"]],[T]]],[11,R[13],E,E,119,[[["self"]],[T]]],[11,R[14],E,E,119,[[],[R[12]]]],[11,R[18],E,E,119,[[["self"]],[R[40]]]],[11,"from",E,E,120,[[[T]],[T]]],[11,"into",E,E,120,[[],[U]]],[11,R[16],E,E,120,[[["self"]],[T]]],[11,R[17],E,E,120,[[[T],["self"]]]],[11,R[11],E,E,120,[[[U]],[R[12]]]],[11,R[39],E,E,120,[[["self"]],[T]]],[11,R[13],E,E,120,[[["self"]],[T]]],[11,R[14],E,E,120,[[],[R[12]]]],[11,R[18],E,E,120,[[["self"]],[R[40]]]],[11,"from",E,E,121,[[[T]],[T]]],[11,"into",E,E,121,[[],[U]]],[11,R[16],E,E,121,[[["self"]],[T]]],[11,R[17],E,E,121,[[[T],["self"]]]],[11,R[11],E,E,121,[[[U]],[R[12]]]],[11,R[39],E,E,121,[[["self"]],[T]]],[11,R[13],E,E,121,[[["self"]],[T]]],[11,R[14],E,E,121,[[],[R[12]]]],[11,R[18],E,E,121,[[["self"]],[R[40]]]],[11,"from",E,E,122,[[[T]],[T]]],[11,"into",E,E,122,[[],[U]]],[11,R[16],E,E,122,[[["self"]],[T]]],[11,R[17],E,E,122,[[[T],["self"]]]],[11,R[11],E,E,122,[[[U]],[R[12]]]],[11,R[39],E,E,122,[[["self"]],[T]]],[11,R[13],E,E,122,[[["self"]],[T]]],[11,R[14],E,E,122,[[],[R[12]]]],[11,R[18],E,E,122,[[["self"]],[R[40]]]],[11,"from",R[1949],E,66,[[[T]],[T]]],[11,"into",E,E,66,[[],[U]]],[11,R[16],E,E,66,[[["self"]],[T]]],[11,R[17],E,E,66,[[[T],["self"]]]],[11,R[11],E,E,66,[[[U]],[R[12]]]],[11,R[39],E,E,66,[[["self"]],[T]]],[11,R[13],E,E,66,[[["self"]],[T]]],[11,R[14],E,E,66,[[],[R[12]]]],[11,R[18],E,E,66,[[["self"]],[R[40]]]],[11,"from",E,E,68,[[[T]],[T]]],[11,"into",E,E,68,[[],[U]]],[11,R[16],E,E,68,[[["self"]],[T]]],[11,R[17],E,E,68,[[[T],["self"]]]],[11,R[11],E,E,68,[[[U]],[R[12]]]],[11,R[39],E,E,68,[[["self"]],[T]]],[11,R[13],E,E,68,[[["self"]],[T]]],[11,R[14],E,E,68,[[],[R[12]]]],[11,R[18],E,E,68,[[["self"]],[R[40]]]],[11,"from",E,E,69,[[[T]],[T]]],[11,"into",E,E,69,[[],[U]]],[11,R[16],E,E,69,[[["self"]],[T]]],[11,R[17],E,E,69,[[[T],["self"]]]],[11,R[11],E,E,69,[[[U]],[R[12]]]],[11,R[39],E,E,69,[[["self"]],[T]]],[11,R[13],E,E,69,[[["self"]],[T]]],[11,R[14],E,E,69,[[],[R[12]]]],[11,R[18],E,E,69,[[["self"]],[R[40]]]],[11,"from",E,E,67,[[[T]],[T]]],[11,"into",E,E,67,[[],[U]]],[11,R[16],E,E,67,[[["self"]],[T]]],[11,R[17],E,E,67,[[[T],["self"]]]],[11,R[11],E,E,67,[[[U]],[R[12]]]],[11,R[39],E,E,67,[[["self"]],[T]]],[11,R[13],E,E,67,[[["self"]],[T]]],[11,R[14],E,E,67,[[],[R[12]]]],[11,R[18],E,E,67,[[["self"]],[R[40]]]],[11,"from",R[1950],E,70,[[[T]],[T]]],[11,"into",E,E,70,[[],[U]]],[11,R[16],E,E,70,[[["self"]],[T]]],[11,R[17],E,E,70,[[[T],["self"]]]],[11,R[11],E,E,70,[[[U]],[R[12]]]],[11,R[39],E,E,70,[[["self"]],[T]]],[11,R[13],E,E,70,[[["self"]],[T]]],[11,R[14],E,E,70,[[],[R[12]]]],[11,R[18],E,E,70,[[["self"]],[R[40]]]],[11,"from",E,E,71,[[[T]],[T]]],[11,"into",E,E,71,[[],[U]]],[11,R[16],E,E,71,[[["self"]],[T]]],[11,R[17],E,E,71,[[[T],["self"]]]],[11,R[11],E,E,71,[[[U]],[R[12]]]],[11,R[39],E,E,71,[[["self"]],[T]]],[11,R[13],E,E,71,[[["self"]],[T]]],[11,R[14],E,E,71,[[],[R[12]]]],[11,R[18],E,E,71,[[["self"]],[R[40]]]],[11,"from",R[1951],E,72,[[[T]],[T]]],[11,"into",E,E,72,[[],[U]]],[11,R[16],E,E,72,[[["self"]],[T]]],[11,R[17],E,E,72,[[[T],["self"]]]],[11,R[11],E,E,72,[[[U]],[R[12]]]],[11,R[39],E,E,72,[[["self"]],[T]]],[11,R[13],E,E,72,[[["self"]],[T]]],[11,R[14],E,E,72,[[],[R[12]]]],[11,R[18],E,E,72,[[["self"]],[R[40]]]],[11,"from",E,E,78,[[[T]],[T]]],[11,"into",E,E,78,[[],[U]]],[11,R[16],E,E,78,[[["self"]],[T]]],[11,R[17],E,E,78,[[[T],["self"]]]],[11,R[11],E,E,78,[[[U]],[R[12]]]],[11,R[39],E,E,78,[[["self"]],[T]]],[11,R[13],E,E,78,[[["self"]],[T]]],[11,R[14],E,E,78,[[],[R[12]]]],[11,R[18],E,E,78,[[["self"]],[R[40]]]],[11,"from",E,E,79,[[[T]],[T]]],[11,"into",E,E,79,[[],[U]]],[11,R[16],E,E,79,[[["self"]],[T]]],[11,R[17],E,E,79,[[[T],["self"]]]],[11,R[11],E,E,79,[[[U]],[R[12]]]],[11,R[39],E,E,79,[[["self"]],[T]]],[11,R[13],E,E,79,[[["self"]],[T]]],[11,R[14],E,E,79,[[],[R[12]]]],[11,R[18],E,E,79,[[["self"]],[R[40]]]],[11,"from",E,E,80,[[[T]],[T]]],[11,"into",E,E,80,[[],[U]]],[11,R[16],E,E,80,[[["self"]],[T]]],[11,R[17],E,E,80,[[[T],["self"]]]],[11,R[11],E,E,80,[[[U]],[R[12]]]],[11,R[39],E,E,80,[[["self"]],[T]]],[11,R[13],E,E,80,[[["self"]],[T]]],[11,R[14],E,E,80,[[],[R[12]]]],[11,R[18],E,E,80,[[["self"]],[R[40]]]],[11,"from",E,E,81,[[[T]],[T]]],[11,"into",E,E,81,[[],[U]]],[11,R[16],E,E,81,[[["self"]],[T]]],[11,R[17],E,E,81,[[[T],["self"]]]],[11,R[11],E,E,81,[[[U]],[R[12]]]],[11,R[39],E,E,81,[[["self"]],[T]]],[11,R[13],E,E,81,[[["self"]],[T]]],[11,R[14],E,E,81,[[],[R[12]]]],[11,R[18],E,E,81,[[["self"]],[R[40]]]],[11,"from",E,E,73,[[[T]],[T]]],[11,"into",E,E,73,[[],[U]]],[11,R[16],E,E,73,[[["self"]],[T]]],[11,R[17],E,E,73,[[[T],["self"]]]],[11,R[11],E,E,73,[[[U]],[R[12]]]],[11,R[39],E,E,73,[[["self"]],[T]]],[11,R[13],E,E,73,[[["self"]],[T]]],[11,R[14],E,E,73,[[],[R[12]]]],[11,R[18],E,E,73,[[["self"]],[R[40]]]],[11,"from",E,E,74,[[[T]],[T]]],[11,"into",E,E,74,[[],[U]]],[11,R[16],E,E,74,[[["self"]],[T]]],[11,R[17],E,E,74,[[[T],["self"]]]],[11,R[11],E,E,74,[[[U]],[R[12]]]],[11,R[39],E,E,74,[[["self"]],[T]]],[11,R[13],E,E,74,[[["self"]],[T]]],[11,R[14],E,E,74,[[],[R[12]]]],[11,R[18],E,E,74,[[["self"]],[R[40]]]],[11,"from",E,E,75,[[[T]],[T]]],[11,"into",E,E,75,[[],[U]]],[11,R[16],E,E,75,[[["self"]],[T]]],[11,R[17],E,E,75,[[[T],["self"]]]],[11,R[11],E,E,75,[[[U]],[R[12]]]],[11,R[39],E,E,75,[[["self"]],[T]]],[11,R[13],E,E,75,[[["self"]],[T]]],[11,R[14],E,E,75,[[],[R[12]]]],[11,R[18],E,E,75,[[["self"]],[R[40]]]],[11,"from",E,E,76,[[[T]],[T]]],[11,"into",E,E,76,[[],[U]]],[11,R[16],E,E,76,[[["self"]],[T]]],[11,R[17],E,E,76,[[[T],["self"]]]],[11,R[11],E,E,76,[[[U]],[R[12]]]],[11,R[39],E,E,76,[[["self"]],[T]]],[11,R[13],E,E,76,[[["self"]],[T]]],[11,R[14],E,E,76,[[],[R[12]]]],[11,R[18],E,E,76,[[["self"]],[R[40]]]],[11,"from",E,E,77,[[[T]],[T]]],[11,"into",E,E,77,[[],[U]]],[11,R[16],E,E,77,[[["self"]],[T]]],[11,R[17],E,E,77,[[[T],["self"]]]],[11,R[11],E,E,77,[[[U]],[R[12]]]],[11,R[39],E,E,77,[[["self"]],[T]]],[11,R[13],E,E,77,[[["self"]],[T]]],[11,R[14],E,E,77,[[],[R[12]]]],[11,R[18],E,E,77,[[["self"]],[R[40]]]],[11,"from",R[1952],E,83,[[[T]],[T]]],[11,"into",E,E,83,[[],[U]]],[11,R[16],E,E,83,[[["self"]],[T]]],[11,R[17],E,E,83,[[[T],["self"]]]],[11,R[170],E,E,83,[[["self"]],["string"]]],[11,R[11],E,E,83,[[[U]],[R[12]]]],[11,R[39],E,E,83,[[["self"]],[T]]],[11,R[13],E,E,83,[[["self"]],[T]]],[11,R[14],E,E,83,[[],[R[12]]]],[11,R[18],E,E,83,[[["self"]],[R[40]]]],[11,"from",E,E,84,[[[T]],[T]]],[11,"into",E,E,84,[[],[U]]],[11,R[16],E,E,84,[[["self"]],[T]]],[11,R[17],E,E,84,[[[T],["self"]]]],[11,R[170],E,E,84,[[["self"]],["string"]]],[11,R[11],E,E,84,[[[U]],[R[12]]]],[11,R[39],E,E,84,[[["self"]],[T]]],[11,R[13],E,E,84,[[["self"]],[T]]],[11,R[14],E,E,84,[[],[R[12]]]],[11,R[18],E,E,84,[[["self"]],[R[40]]]],[11,"from",R[1953],E,85,[[[T]],[T]]],[11,"into",E,E,85,[[],[U]]],[11,R[11],E,E,85,[[[U]],[R[12]]]],[11,R[39],E,E,85,[[["self"]],[T]]],[11,R[13],E,E,85,[[["self"]],[T]]],[11,R[14],E,E,85,[[],[R[12]]]],[11,R[18],E,E,85,[[["self"]],[R[40]]]],[11,"from",R[1954],E,86,[[[T]],[T]]],[11,"into",E,E,86,[[],[U]]],[11,R[16],E,E,86,[[["self"]],[T]]],[11,R[17],E,E,86,[[[T],["self"]]]],[11,R[11],E,E,86,[[[U]],[R[12]]]],[11,R[39],E,E,86,[[["self"]],[T]]],[11,R[13],E,E,86,[[["self"]],[T]]],[11,R[14],E,E,86,[[],[R[12]]]],[11,R[18],E,E,86,[[["self"]],[R[40]]]],[11,"from",R[1955],E,88,[[[T]],[T]]],[11,"into",E,E,88,[[],[U]]],[11,R[16],E,E,88,[[["self"]],[T]]],[11,R[17],E,E,88,[[[T],["self"]]]],[11,R[11],E,E,88,[[[U]],[R[12]]]],[11,R[39],E,E,88,[[["self"]],[T]]],[11,R[13],E,E,88,[[["self"]],[T]]],[11,R[14],E,E,88,[[],[R[12]]]],[11,R[18],E,E,88,[[["self"]],[R[40]]]],[11,"from",E,E,87,[[[T]],[T]]],[11,"into",E,E,87,[[],[U]]],[11,R[16],E,E,87,[[["self"]],[T]]],[11,R[17],E,E,87,[[[T],["self"]]]],[11,R[11],E,E,87,[[[U]],[R[12]]]],[11,R[39],E,E,87,[[["self"]],[T]]],[11,R[13],E,E,87,[[["self"]],[T]]],[11,R[14],E,E,87,[[],[R[12]]]],[11,R[18],E,E,87,[[["self"]],[R[40]]]],[11,"from",R[1928],E,93,[[[T]],[T]]],[11,"into",E,E,93,[[],[U]]],[11,R[16],E,E,93,[[["self"]],[T]]],[11,R[17],E,E,93,[[[T],["self"]]]],[11,R[170],E,E,93,[[["self"]],["string"]]],[11,R[11],E,E,93,[[[U]],[R[12]]]],[11,R[39],E,E,93,[[["self"]],[T]]],[11,R[13],E,E,93,[[["self"]],[T]]],[11,R[14],E,E,93,[[],[R[12]]]],[11,R[18],E,E,93,[[["self"]],[R[40]]]],[11,"from",E,E,94,[[[T]],[T]]],[11,"into",E,E,94,[[],[U]]],[11,R[16],E,E,94,[[["self"]],[T]]],[11,R[17],E,E,94,[[[T],["self"]]]],[11,R[170],E,E,94,[[["self"]],["string"]]],[11,R[11],E,E,94,[[[U]],[R[12]]]],[11,R[39],E,E,94,[[["self"]],[T]]],[11,R[13],E,E,94,[[["self"]],[T]]],[11,R[14],E,E,94,[[],[R[12]]]],[11,R[18],E,E,94,[[["self"]],[R[40]]]],[11,"from",E,E,95,[[[T]],[T]]],[11,"into",E,E,95,[[],[U]]],[11,R[16],E,E,95,[[["self"]],[T]]],[11,R[17],E,E,95,[[[T],["self"]]]],[11,R[170],E,E,95,[[["self"]],["string"]]],[11,R[11],E,E,95,[[[U]],[R[12]]]],[11,R[39],E,E,95,[[["self"]],[T]]],[11,R[13],E,E,95,[[["self"]],[T]]],[11,R[14],E,E,95,[[],[R[12]]]],[11,R[18],E,E,95,[[["self"]],[R[40]]]],[11,"from",E,E,89,[[[T]],[T]]],[11,"into",E,E,89,[[],[U]]],[11,R[16],E,E,89,[[["self"]],[T]]],[11,R[17],E,E,89,[[[T],["self"]]]],[11,R[11],E,E,89,[[[U]],[R[12]]]],[11,R[39],E,E,89,[[["self"]],[T]]],[11,R[13],E,E,89,[[["self"]],[T]]],[11,R[14],E,E,89,[[],[R[12]]]],[11,R[18],E,E,89,[[["self"]],[R[40]]]],[11,"from",E,E,90,[[[T]],[T]]],[11,"into",E,E,90,[[],[U]]],[11,R[16],E,E,90,[[["self"]],[T]]],[11,R[17],E,E,90,[[[T],["self"]]]],[11,R[11],E,E,90,[[[U]],[R[12]]]],[11,R[39],E,E,90,[[["self"]],[T]]],[11,R[13],E,E,90,[[["self"]],[T]]],[11,R[14],E,E,90,[[],[R[12]]]],[11,R[18],E,E,90,[[["self"]],[R[40]]]],[11,"from",E,E,91,[[[T]],[T]]],[11,"into",E,E,91,[[],[U]]],[11,R[16],E,E,91,[[["self"]],[T]]],[11,R[17],E,E,91,[[[T],["self"]]]],[11,R[11],E,E,91,[[[U]],[R[12]]]],[11,R[39],E,E,91,[[["self"]],[T]]],[11,R[13],E,E,91,[[["self"]],[T]]],[11,R[14],E,E,91,[[],[R[12]]]],[11,R[18],E,E,91,[[["self"]],[R[40]]]],[11,"from",E,E,92,[[[T]],[T]]],[11,"into",E,E,92,[[],[U]]],[11,R[16],E,E,92,[[["self"]],[T]]],[11,R[17],E,E,92,[[[T],["self"]]]],[11,R[11],E,E,92,[[[U]],[R[12]]]],[11,R[39],E,E,92,[[["self"]],[T]]],[11,R[13],E,E,92,[[["self"]],[T]]],[11,R[14],E,E,92,[[],[R[12]]]],[11,R[18],E,E,92,[[["self"]],[R[40]]]],[11,"clone",R[1899],E,41,[[["self"]],[R[753]]]],[11,"clone",E,E,42,[[["self"]],[R[746]]]],[11,"clone",R[1949],E,66,[[["self"]],["stat"]]],[11,"clone",R[1899],E,43,[[["self"]],[R[774]]]],[11,"clone",E,E,40,[[["self"]],[R[779]]]],[11,"clone",E,E,38,[[["self"]],["cmsghdr"]]],[11,"clone",E,E,44,[[["self"]],[R[747]]]],[11,"clone",E,E,39,[[["self"]],["msghdr"]]],[11,"clone",R[1992],E,12,[[["self"]],["winsize"]]],[11,"get",R[1948],E,101,[[["self"],["rawfd"]],[[R[12],["bool"]],["bool"]]]],[11,"get",E,E,102,[[["self"],["rawfd"]],[[R[12],["bool"]],["bool"]]]],[11,"get",E,E,103,[[["self"],["rawfd"]],[[R[12],["bool"]],["bool"]]]],[11,"get",E,E,104,[[["self"],["rawfd"]],[["linger"],[R[12],["linger"]]]]],[11,"get",E,E,109,[[["self"],["rawfd"]],[["u8"],[R[12],["u8"]]]]],[11,"get",E,E,110,[[["self"],["rawfd"]],[[R[12],["bool"]],["bool"]]]],[11,"get",E,E,111,[[["self"],["rawfd"]],[[R[12],["timeval"]],["timeval"]]]],[11,"get",E,E,112,[[["self"],["rawfd"]],[[R[12],["timeval"]],["timeval"]]]],[11,"get",E,E,113,[[["self"],["rawfd"]],[[R[12],["bool"]],["bool"]]]],[11,"get",E,E,114,[[["self"],["rawfd"]],[[R[12],["bool"]],["bool"]]]],[11,"get",E,E,115,[[["self"],["rawfd"]],[["i32"],[R[12],["i32"]]]]],[11,"get",E,E,116,[[["self"],["rawfd"]],[[R[12],["bool"]],["bool"]]]],[11,"get",E,E,117,[[["self"],["rawfd"]],[["u32"],[R[12],["u32"]]]]],[11,"get",E,E,118,[[["self"],["rawfd"]],[[R[12],[R[9]]],[R[9]]]]],[11,"get",E,E,119,[[["self"],["rawfd"]],[[R[12],[R[9]]],[R[9]]]]],[11,"get",E,E,120,[[["self"],["rawfd"]],[[R[1973]],[R[12],[R[1973]]]]]],[11,"get",E,E,121,[[["self"],["rawfd"]],[[R[12],["bool"]],["bool"]]]],[11,"get",E,E,122,[[["self"],["rawfd"]],[[R[12],["bool"]],["bool"]]]],[11,"set",E,E,101,[[["bool"],["self"],["rawfd"]],[R[12]]]],[11,"set",E,E,102,[[["bool"],["self"],["rawfd"]],[R[12]]]],[11,"set",E,E,103,[[["bool"],["self"],["rawfd"]],[R[12]]]],[11,"set",E,E,104,[[["linger"],["self"],["rawfd"]],[R[12]]]],[11,"set",E,E,105,[[["self"],[R[1956]],["rawfd"]],[R[12]]]],[11,"set",E,E,106,[[["self"],[R[1956]],["rawfd"]],[R[12]]]],[11,"set",E,E,107,[[[R[1957]],["self"],["rawfd"]],[R[12]]]],[11,"set",E,E,108,[[[R[1957]],["self"],["rawfd"]],[R[12]]]],[11,"set",E,E,109,[[["u8"],["self"],["rawfd"]],[R[12]]]],[11,"set",E,E,110,[[["bool"],["self"],["rawfd"]],[R[12]]]],[11,"set",E,E,111,[[["timeval"],["self"],["rawfd"]],[R[12]]]],[11,"set",E,E,112,[[["timeval"],["self"],["rawfd"]],[R[12]]]],[11,"set",E,E,113,[[["bool"],["self"],["rawfd"]],[R[12]]]],[11,"set",E,E,114,[[["bool"],["self"],["rawfd"]],[R[12]]]],[11,"set",E,E,116,[[["bool"],["self"],["rawfd"]],[R[12]]]],[11,"set",E,E,117,[[["u32"],["self"],["rawfd"]],[R[12]]]],[11,"set",E,E,118,[[["self"],[R[9]],["rawfd"]],[R[12]]]],[11,"set",E,E,119,[[["self"],[R[9]],["rawfd"]],[R[12]]]],[11,"set",E,E,122,[[["bool"],["self"],["rawfd"]],[R[12]]]],[11,"seconds",R[1952],E,83,[[["i64"]],[R[777]]]],[11,R[1958],E,E,83,[[["i64"]],[R[777]]]],[11,R[1959],E,"Makes a new `TimeSpec` with given number of microseconds.",83,[[["i64"]],[R[777]]]],[11,R[1960],E,"Makes a new `TimeSpec` with given number of nanoseconds.",83,[[["i64"]],[R[777]]]],[11,R[1961],E,E,83,[[["self"]],["i64"]]],[11,R[1962],E,E,83,[[["self"]],["i64"]]],[11,R[1963],E,E,83,[[["self"]],["i64"]]],[11,R[1964],E,E,83,[[["self"]],["i64"]]],[11,"seconds",E,E,84,[[["i64"]],["timeval"]]],[11,R[1958],E,E,84,[[["i64"]],["timeval"]]],[11,R[1959],E,"Makes a new `TimeVal` with given number of microseconds.",84,[[["i64"]],["timeval"]]],[11,R[1960],E,"Makes a new `TimeVal` with given number of nanoseconds.…",84,[[["i64"]],["timeval"]]],[11,R[1961],E,E,84,[[["self"]],["i64"]]],[11,R[1962],E,E,84,[[["self"]],["i64"]]],[11,R[1963],E,E,84,[[["self"]],["i64"]]],[11,R[1964],E,E,84,[[["self"]],["i64"]]],[11,"eq",R[1965],E,1,[[["self"],["errno"]],["bool"]]],[11,"eq",R[1966],E,5,[[["self"],["atflags"]],["bool"]]],[11,"ne",E,E,5,[[["self"],["atflags"]],["bool"]]],[11,"eq",E,E,6,[[["oflag"],["self"]],["bool"]]],[11,"ne",E,E,6,[[["oflag"],["self"]],["bool"]]],[11,"eq",E,E,7,[[["self"],["fdflag"]],["bool"]]],[11,"ne",E,E,7,[[["self"],["fdflag"]],["bool"]]],[11,"eq",R[1942],E,8,[[[R[1967]],["self"]],["bool"]]],[11,"ne",E,E,8,[[[R[1967]],["self"]],["bool"]]],[11,"eq",E,E,97,[[[R[1792]],["self"]],["bool"]]],[11,"ne",E,E,97,[[[R[1792]],["self"]],["bool"]]],[11,"eq",R[1943],E,9,[[[R[1806]],["self"]],["bool"]]],[11,"ne",E,E,9,[[[R[1806]],["self"]],["bool"]]],[11,"eq",R[1970],E,11,[[[R[1808]],["self"]],["bool"]]],[11,"ne",E,E,11,[[[R[1808]],["self"]],["bool"]]],[11,"eq",R[1944],E,14,[[["self"],[R[1968]]],["bool"]]],[11,"eq",E,E,15,[[[R[1815]],["self"]],["bool"]]],[11,"eq",E,E,16,[[["liomode"],["self"]],["bool"]]],[11,"eq",E,E,17,[[["self"],[R[1812]]],["bool"]]],[11,"eq",R[1945],E,20,[[["self"],[R[1852]]],["bool"]]],[11,"eq",E,E,21,[[[R[1827]],["self"]],["bool"]]],[11,"ne",E,E,21,[[[R[1827]],["self"]],["bool"]]],[11,"eq",E,E,22,[[["self"],[R[1851]]],["bool"]]],[11,"ne",E,E,22,[[["self"],[R[1851]]],["bool"]]],[11,"eq",R[1946],E,25,[[["self"],[R[1862]]],["bool"]]],[11,"ne",E,E,25,[[["self"],[R[1862]]],["bool"]]],[11,"eq",E,E,26,[[["self"],[R[1866]]],["bool"]]],[11,"ne",E,E,26,[[["self"],[R[1866]]],["bool"]]],[11,"eq",E,E,24,[[[R[1971]],["self"]],["bool"]]],[11,"eq",E,E,27,[[["self"],["msflags"]],["bool"]]],[11,"ne",E,E,27,[[["self"],["msflags"]],["bool"]]],[11,"eq",E,E,28,[[[R[1871]],["self"]],["bool"]]],[11,"ne",E,E,28,[[[R[1871]],["self"]],["bool"]]],[11,"eq",R[1877],E,30,[[["self"],["signal"]],["bool"]]],[11,"eq",E,E,35,[[["saflags"],["self"]],["bool"]]],[11,"ne",E,E,35,[[["saflags"],["self"]],["bool"]]],[11,"eq",E,E,31,[[["self"],[R[1883]]],["bool"]]],[11,"eq",E,E,32,[[[R[1969]],["self"]],["bool"]]],[11,"ne",E,E,32,[[[R[1969]],["self"]],["bool"]]],[11,"eq",E,E,33,[[["self"],[R[1814]]],["bool"]]],[11,"ne",E,E,33,[[["self"],[R[1814]]],["bool"]]],[11,"eq",R[1899],E,50,[[[R[1892]],["self"]],["bool"]]],[11,"eq",E,E,52,[[["inetaddr"],["self"]],["bool"]]],[11,"eq",E,E,46,[[[R[1898]],["self"]],["bool"]]],[11,"eq",E,E,45,[[["self"],["unixaddr"]],["bool"]]],[11,"eq",E,E,51,[[["self"],[R[779]]],["bool"]]],[11,"eq",E,E,48,[[["self"]],["bool"]]],[11,"eq",E,E,54,[[[R[1973]],["self"]],["bool"]]],[11,"eq",E,E,55,[[[R[1891]],["self"]],["bool"]]],[11,"eq",E,E,61,[[["self"],[R[1901]]],["bool"]]],[11,"ne",E,E,61,[[["self"],[R[1901]]],["bool"]]],[11,"eq",E,E,62,[[[R[1903]],["self"]],["bool"]]],[11,"ne",E,E,62,[[[R[1903]],["self"]],["bool"]]],[11,"eq",E,E,63,[[["self"]],["bool"]]],[11,"eq",E,E,64,[[["self"]],["bool"]]],[11,"eq",E,E,57,[[["socklevel"],["self"]],["bool"]]],[11,"eq",E,E,58,[[["self"],[R[2344]]],["bool"]]],[11,"eq",R[1949],E,68,[[["sflag"],["self"]],["bool"]]],[11,"ne",E,E,68,[[["sflag"],["self"]],["bool"]]],[11,"eq",E,E,69,[[["self"],["mode"]],["bool"]]],[11,"ne",E,E,69,[[["self"],["mode"]],["bool"]]],[11,"eq",R[1950],E,70,[[["fsflags"],["self"]],["bool"]]],[11,"ne",E,E,70,[[["fsflags"],["self"]],["bool"]]],[11,"eq",R[1951],E,73,[[["baudrate"],["self"]],["bool"]]],[11,"eq",E,E,74,[[["self"],["setarg"]],["bool"]]],[11,"eq",E,E,75,[[["self"],["flusharg"]],["bool"]]],[11,"eq",E,E,76,[[["flowarg"],["self"]],["bool"]]],[11,"eq",E,E,77,[[[R[1975]],["self"]],["bool"]]],[11,"eq",E,E,78,[[[R[1919]],["self"]],["bool"]]],[11,"ne",E,E,78,[[[R[1919]],["self"]],["bool"]]],[11,"eq",E,E,79,[[[R[1920]],["self"]],["bool"]]],[11,"ne",E,E,79,[[[R[1920]],["self"]],["bool"]]],[11,"eq",E,E,80,[[[R[1922]],["self"]],["bool"]]],[11,"ne",E,E,80,[[[R[1922]],["self"]],["bool"]]],[11,"eq",E,E,81,[[["self"],[R[1923]]],["bool"]]],[11,"ne",E,E,81,[[["self"],[R[1923]]],["bool"]]],[11,"eq",R[1952],E,83,[[["self"],[R[777]]],["bool"]]],[11,"eq",E,E,84,[[["timeval"],["self"]],["bool"]]],[11,"eq",R[1955],E,88,[[["self"],[R[1926]]],["bool"]]],[11,"ne",E,E,88,[[["self"],[R[1926]]],["bool"]]],[11,"eq",E,E,87,[[[R[1927]],["self"]],["bool"]]],[11,"ne",E,E,87,[[[R[1927]],["self"]],["bool"]]],[11,"eq",R[1928],E,93,[[["self"],["uid"]],["bool"]]],[11,"ne",E,E,93,[[["self"],["uid"]],["bool"]]],[11,"eq",E,E,94,[[["gid"],["self"]],["bool"]]],[11,"ne",E,E,94,[[["gid"],["self"]],["bool"]]],[11,"eq",E,E,95,[[["self"],["pid"]],["bool"]]],[11,"ne",E,E,95,[[["self"],["pid"]],["bool"]]],[11,"eq",E,E,91,[[[R[1937]],["self"]],["bool"]]],[11,"eq",E,E,92,[[[R[1977]],["self"]],["bool"]]],[11,"eq","nix",E,0,[[["error"],["self"]],["bool"]]],[11,"ne",E,E,0,[[["error"],["self"]],["bool"]]],[11,"clone",R[1965],E,1,[[["self"]],["errno"]]],[11,"clone",R[1966],E,5,[[["self"]],["atflags"]]],[11,"clone",E,E,6,[[["self"]],["oflag"]]],[11,"clone",E,E,7,[[["self"]],["fdflag"]]],[11,"clone",E,E,4,[[["self"]],["flockarg"]]],[11,"clone",R[1942],E,8,[[["self"]],[R[1967]]]],[11,"clone",R[1943],E,9,[[["self"]],[R[1806]]]],[11,"clone",R[1970],E,10,[[["self"]],["pollfd"]]],[11,"clone",E,E,11,[[["self"]],[R[1808]]]],[11,"clone",R[1992],E,13,[[["self"]],[R[1811]]]],[11,"clone",R[1944],E,14,[[["self"]],[R[1968]]]],[11,"clone",E,E,15,[[["self"]],[R[1815]]]],[11,"clone",E,E,16,[[["self"]],["liomode"]]],[11,"clone",E,E,17,[[["self"]],[R[1812]]]],[11,"clone",R[1945],E,23,[[["self"]],["kevent"]]],[11,"clone",E,E,20,[[["self"]],[R[1852]]]],[11,"clone",E,E,21,[[["self"]],[R[1827]]]],[11,"clone",E,E,22,[[["self"]],[R[1851]]]],[11,"clone",R[1946],E,25,[[["self"]],[R[1862]]]],[11,"clone",E,E,26,[[["self"]],[R[1866]]]],[11,"clone",E,E,24,[[["self"]],[R[1971]]]],[11,"clone",E,E,27,[[["self"]],["msflags"]]],[11,"clone",E,E,28,[[["self"]],[R[1871]]]],[11,"clone",R[1947],E,29,[[["self"]],["fdset"]]],[11,"clone",R[1877],E,30,[[["self"]],["signal"]]],[11,"clone",E,E,99,[[["self"]],[R[1972]]]],[11,"clone",E,E,35,[[["self"]],["saflags"]]],[11,"clone",E,E,31,[[["self"]],[R[1883]]]],[11,"clone",E,E,36,[[["self"]],["sigset"]]],[11,"clone",E,E,32,[[["self"]],[R[1969]]]],[11,"clone",E,E,37,[[["self"]],[R[741]]]],[11,"clone",E,E,33,[[["self"]],[R[1814]]]],[11,"clone",E,E,34,[[["self"]],[R[782]]]],[11,"clone",R[1899],E,50,[[["self"]],[R[1892]]]],[11,"clone",E,E,52,[[["self"]],["inetaddr"]]],[11,"clone",E,E,53,[[["self"]],["ipaddr"]]],[11,"clone",E,E,46,[[["self"]],[R[1898]]]],[11,"clone",E,E,47,[[["self"]],[R[1904]]]],[11,"clone",E,E,45,[[["self"]],["unixaddr"]]],[11,"clone",E,E,51,[[["self"]],[R[779]]]],[11,"clone",E,E,48,[[["self"]],["linkaddr"]]],[11,"clone",R[1948],E,101,[[["self"]],["reuseaddr"]]],[11,"clone",E,E,102,[[["self"]],["reuseport"]]],[11,"clone",E,E,103,[[["self"]],["tcpnodelay"]]],[11,"clone",E,E,104,[[["self"]],["linger"]]],[11,"clone",E,E,105,[[["self"]],["ipaddmembership"]]],[11,"clone",E,E,106,[[["self"]],["ipdropmembership"]]],[11,"clone",E,E,107,[[["self"]],["ipv6addmembership"]]],[11,"clone",E,E,108,[[["self"]],["ipv6dropmembership"]]],[11,"clone",E,E,109,[[["self"]],["ipmulticastttl"]]],[11,"clone",E,E,110,[[["self"]],["ipmulticastloop"]]],[11,"clone",E,E,111,[[["self"]],["receivetimeout"]]],[11,"clone",E,E,112,[[["self"]],["sendtimeout"]]],[11,"clone",E,E,113,[[["self"]],[R[2030]]]],[11,"clone",E,E,114,[[["self"]],["oobinline"]]],[11,"clone",E,E,115,[[["self"]],["socketerror"]]],[11,"clone",E,E,116,[[["self"]],[R[4668]]]],[11,"clone",E,E,117,[[["self"]],["tcpkeepalive"]]],[11,"clone",E,E,118,[[["self"]],["rcvbuf"]]],[11,"clone",E,E,119,[[["self"]],["sndbuf"]]],[11,"clone",E,E,120,[[["self"]],[R[1973]]]],[11,"clone",E,E,121,[[["self"]],["acceptconn"]]],[11,"clone",E,E,122,[[["self"]],["receivetimestamp"]]],[11,"clone",R[1899],E,54,[[["self"]],[R[1973]]]],[11,"clone",E,E,55,[[["self"]],[R[1891]]]],[11,"clone",E,E,61,[[["self"]],[R[1901]]]],[11,"clone",E,E,62,[[["self"]],[R[1903]]]],[11,"clone",E,E,63,[[["self"]],[R[1956]]]],[11,"clone",E,E,64,[[["self"]],[R[1957]]]],[11,"clone",E,E,57,[[["self"]],["socklevel"]]],[11,"clone",E,E,58,[[["self"]],[R[2344]]]],[11,"clone",R[1949],E,68,[[["self"]],["sflag"]]],[11,"clone",E,E,69,[[["self"]],["mode"]]],[11,"clone",E,E,67,[[["self"]],[R[1974]]]],[11,"clone",R[1950],E,70,[[["self"]],["fsflags"]]],[11,"clone",E,E,71,[[["self"]],["statvfs"]]],[11,"clone",R[1951],E,72,[[["self"]],["termios"]]],[11,"clone",E,E,73,[[["self"]],["baudrate"]]],[11,"clone",E,E,74,[[["self"]],["setarg"]]],[11,"clone",E,E,75,[[["self"]],["flusharg"]]],[11,"clone",E,E,76,[[["self"]],["flowarg"]]],[11,"clone",E,E,77,[[["self"]],[R[1975]]]],[11,"clone",E,E,78,[[["self"]],[R[1919]]]],[11,"clone",E,E,79,[[["self"]],[R[1920]]]],[11,"clone",E,E,80,[[["self"]],[R[1922]]]],[11,"clone",E,E,81,[[["self"]],[R[1923]]]],[11,"clone",R[1952],E,83,[[["self"]],[R[777]]]],[11,"clone",E,E,84,[[["self"]],["timeval"]]],[11,"clone",R[1954],E,86,[[["self"]],["utsname"]]],[11,"clone",R[1955],E,88,[[["self"]],[R[1926]]]],[11,"clone",E,E,87,[[["self"]],[R[1927]]]],[11,"clone",R[1928],E,93,[[["self"]],["uid"]]],[11,"clone",E,E,94,[[["self"]],["gid"]]],[11,"clone",E,E,95,[[["self"]],["pid"]]],[11,"clone",E,E,89,[[["self"]],[R[1976]]]],[11,"clone",E,E,90,[[["self"]],["whence"]]],[11,"clone",E,E,91,[[["self"]],[R[1937]]]],[11,"clone",E,E,92,[[["self"]],[R[1977]]]],[11,"clone","nix",E,0,[[["self"]],["error"]]],[11,"cmp",R[1966],E,5,[[["self"],["atflags"]],[R[51]]]],[11,"cmp",E,E,6,[[["oflag"],["self"]],[R[51]]]],[11,"cmp",E,E,7,[[["self"],["fdflag"]],[R[51]]]],[11,"cmp",R[1943],E,9,[[[R[1806]],["self"]],[R[51]]]],[11,"cmp",R[1970],E,11,[[[R[1808]],["self"]],[R[51]]]],[11,"cmp",R[1944],E,14,[[["self"],[R[1968]]],[R[51]]]],[11,"cmp",E,E,15,[[[R[1815]],["self"]],[R[51]]]],[11,"cmp",E,E,16,[[["liomode"],["self"]],[R[51]]]],[11,"cmp",R[1945],E,20,[[["self"],[R[1852]]],[R[51]]]],[11,"cmp",E,E,21,[[[R[1827]],["self"]],[R[51]]]],[11,"cmp",E,E,22,[[["self"],[R[1851]]],[R[51]]]],[11,"cmp",R[1946],E,25,[[["self"],[R[1862]]],[R[51]]]],[11,"cmp",E,E,26,[[["self"],[R[1866]]],[R[51]]]],[11,"cmp",E,E,24,[[[R[1971]],["self"]],[R[51]]]],[11,"cmp",E,E,27,[[["self"],["msflags"]],[R[51]]]],[11,"cmp",E,E,28,[[[R[1871]],["self"]],[R[51]]]],[11,"cmp",R[1877],E,30,[[["self"],["signal"]],[R[51]]]],[11,"cmp",E,E,35,[[["saflags"],["self"]],[R[51]]]],[11,"cmp",E,E,31,[[["self"],[R[1883]]],[R[51]]]],[11,"cmp",R[1899],E,61,[[["self"],[R[1901]]],[R[51]]]],[11,"cmp",E,E,62,[[[R[1903]],["self"]],[R[51]]]],[11,"cmp",R[1949],E,68,[[["sflag"],["self"]],[R[51]]]],[11,"cmp",E,E,69,[[["self"],["mode"]],[R[51]]]],[11,"cmp",R[1950],E,70,[[["fsflags"],["self"]],[R[51]]]],[11,"cmp",R[1951],E,73,[[["baudrate"],["self"]],[R[51]]]],[11,"cmp",E,E,74,[[["self"],["setarg"]],[R[51]]]],[11,"cmp",E,E,75,[[["self"],["flusharg"]],[R[51]]]],[11,"cmp",E,E,76,[[["flowarg"],["self"]],[R[51]]]],[11,"cmp",E,E,77,[[[R[1975]],["self"]],[R[51]]]],[11,"cmp",E,E,78,[[[R[1919]],["self"]],[R[51]]]],[11,"cmp",E,E,79,[[[R[1920]],["self"]],[R[51]]]],[11,"cmp",E,E,80,[[[R[1922]],["self"]],[R[51]]]],[11,"cmp",E,E,81,[[["self"],[R[1923]]],[R[51]]]],[11,"cmp",R[1952],E,83,[[["self"],[R[777]]],[R[51]]]],[11,"cmp",E,E,84,[[["timeval"],["self"]],[R[51]]]],[11,"cmp",R[1955],E,88,[[["self"],[R[1926]]],[R[51]]]],[11,"from",R[1877],E,34,[[[R[782]]],["self"]]],[11,"from",R[1951],E,72,[[["termios"]],["self"]]],[11,"from",E,E,73,[[["speed_t"]],["baudrate"]]],[11,"from","nix",E,123,[[["pid"]],["self"]]],[11,"from",E,E,0,[[["errno"]],["error"]]],[11,"from",E,E,0,[[[R[2249]]],["error"]]],[11,"extend",R[1966],E,5,[[["self"],[R[50]]]]],[11,"extend",E,E,6,[[["self"],[R[50]]]]],[11,"extend",E,E,7,[[[R[50]],["self"]]]],[11,"extend",R[1943],E,9,[[["self"],[R[50]]]]],[11,"extend",R[1970],E,11,[[["self"],[R[50]]]]],[11,"extend",R[1945],E,21,[[[R[50]],["self"]]]],[11,"extend",E,E,22,[[["self"],[R[50]]]]],[11,"extend",R[1946],E,25,[[[R[50]],["self"]]]],[11,"extend",E,E,26,[[["self"],[R[50]]]]],[11,"extend",E,E,27,[[[R[50]],["self"]]]],[11,"extend",E,E,28,[[[R[50]],["self"]]]],[11,"extend",R[1877],E,35,[[["self"],[R[50]]]]],[11,"extend",R[1899],E,61,[[[R[50]],["self"]]]],[11,"extend",E,E,62,[[["self"],[R[50]]]]],[11,"extend",R[1949],E,68,[[["self"],[R[50]]]]],[11,"extend",E,E,69,[[["self"],[R[50]]]]],[11,"extend",R[1950],E,70,[[["self"],[R[50]]]]],[11,"extend",R[1951],E,78,[[["self"],[R[50]]]]],[11,"extend",E,E,79,[[[R[50]],["self"]]]],[11,"extend",E,E,80,[[[R[50]],["self"]]]],[11,"extend",E,E,81,[[["self"],[R[50]]]]],[11,"extend",R[1955],E,88,[[["self"],[R[50]]]]],[11,"drop",R[1942],E,97,[[["self"]]]],[11,"drop",R[1992],E,98,[[["self"]]]],[11,"drop",R[1944],"If the `AioCb` has no remaining state in the kernel, just…",19,[[["self"]]]],[11,R[264],R[1966],E,5,[[["self"],["atflags"]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,5,[[["self"],["atflags"]],["bool"]]],[11,"le",E,E,5,[[["self"],["atflags"]],["bool"]]],[11,"gt",E,E,5,[[["self"],["atflags"]],["bool"]]],[11,"ge",E,E,5,[[["self"],["atflags"]],["bool"]]],[11,R[264],E,E,6,[[["oflag"],["self"]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,6,[[["oflag"],["self"]],["bool"]]],[11,"le",E,E,6,[[["oflag"],["self"]],["bool"]]],[11,"gt",E,E,6,[[["oflag"],["self"]],["bool"]]],[11,"ge",E,E,6,[[["oflag"],["self"]],["bool"]]],[11,R[264],E,E,7,[[["self"],["fdflag"]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,7,[[["self"],["fdflag"]],["bool"]]],[11,"le",E,E,7,[[["self"],["fdflag"]],["bool"]]],[11,"gt",E,E,7,[[["self"],["fdflag"]],["bool"]]],[11,"ge",E,E,7,[[["self"],["fdflag"]],["bool"]]],[11,R[264],R[1943],E,9,[[[R[1806]],["self"]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,9,[[[R[1806]],["self"]],["bool"]]],[11,"le",E,E,9,[[[R[1806]],["self"]],["bool"]]],[11,"gt",E,E,9,[[[R[1806]],["self"]],["bool"]]],[11,"ge",E,E,9,[[[R[1806]],["self"]],["bool"]]],[11,R[264],R[1970],E,11,[[[R[1808]],["self"]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,11,[[[R[1808]],["self"]],["bool"]]],[11,"le",E,E,11,[[[R[1808]],["self"]],["bool"]]],[11,"gt",E,E,11,[[[R[1808]],["self"]],["bool"]]],[11,"ge",E,E,11,[[[R[1808]],["self"]],["bool"]]],[11,R[264],R[1944],E,14,[[["self"],[R[1968]]],[[R[51]],[R[52],[R[51]]]]]],[11,R[264],E,E,15,[[[R[1815]],["self"]],[[R[51]],[R[52],[R[51]]]]]],[11,R[264],E,E,16,[[["liomode"],["self"]],[[R[51]],[R[52],[R[51]]]]]],[11,R[264],R[1945],E,20,[[["self"],[R[1852]]],[[R[51]],[R[52],[R[51]]]]]],[11,R[264],E,E,21,[[[R[1827]],["self"]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,21,[[[R[1827]],["self"]],["bool"]]],[11,"le",E,E,21,[[[R[1827]],["self"]],["bool"]]],[11,"gt",E,E,21,[[[R[1827]],["self"]],["bool"]]],[11,"ge",E,E,21,[[[R[1827]],["self"]],["bool"]]],[11,R[264],E,E,22,[[["self"],[R[1851]]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,22,[[["self"],[R[1851]]],["bool"]]],[11,"le",E,E,22,[[["self"],[R[1851]]],["bool"]]],[11,"gt",E,E,22,[[["self"],[R[1851]]],["bool"]]],[11,"ge",E,E,22,[[["self"],[R[1851]]],["bool"]]],[11,R[264],R[1946],E,25,[[["self"],[R[1862]]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,25,[[["self"],[R[1862]]],["bool"]]],[11,"le",E,E,25,[[["self"],[R[1862]]],["bool"]]],[11,"gt",E,E,25,[[["self"],[R[1862]]],["bool"]]],[11,"ge",E,E,25,[[["self"],[R[1862]]],["bool"]]],[11,R[264],E,E,26,[[["self"],[R[1866]]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,26,[[["self"],[R[1866]]],["bool"]]],[11,"le",E,E,26,[[["self"],[R[1866]]],["bool"]]],[11,"gt",E,E,26,[[["self"],[R[1866]]],["bool"]]],[11,"ge",E,E,26,[[["self"],[R[1866]]],["bool"]]],[11,R[264],E,E,24,[[[R[1971]],["self"]],[[R[51]],[R[52],[R[51]]]]]],[11,R[264],E,E,27,[[["self"],["msflags"]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,27,[[["self"],["msflags"]],["bool"]]],[11,"le",E,E,27,[[["self"],["msflags"]],["bool"]]],[11,"gt",E,E,27,[[["self"],["msflags"]],["bool"]]],[11,"ge",E,E,27,[[["self"],["msflags"]],["bool"]]],[11,R[264],E,E,28,[[[R[1871]],["self"]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,28,[[[R[1871]],["self"]],["bool"]]],[11,"le",E,E,28,[[[R[1871]],["self"]],["bool"]]],[11,"gt",E,E,28,[[[R[1871]],["self"]],["bool"]]],[11,"ge",E,E,28,[[[R[1871]],["self"]],["bool"]]],[11,R[264],R[1877],E,30,[[["self"],["signal"]],[[R[51]],[R[52],[R[51]]]]]],[11,R[264],E,E,35,[[["saflags"],["self"]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,35,[[["saflags"],["self"]],["bool"]]],[11,"le",E,E,35,[[["saflags"],["self"]],["bool"]]],[11,"gt",E,E,35,[[["saflags"],["self"]],["bool"]]],[11,"ge",E,E,35,[[["saflags"],["self"]],["bool"]]],[11,R[264],E,E,31,[[["self"],[R[1883]]],[[R[51]],[R[52],[R[51]]]]]],[11,R[264],R[1899],E,61,[[["self"],[R[1901]]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,61,[[["self"],[R[1901]]],["bool"]]],[11,"le",E,E,61,[[["self"],[R[1901]]],["bool"]]],[11,"gt",E,E,61,[[["self"],[R[1901]]],["bool"]]],[11,"ge",E,E,61,[[["self"],[R[1901]]],["bool"]]],[11,R[264],E,E,62,[[[R[1903]],["self"]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,62,[[[R[1903]],["self"]],["bool"]]],[11,"le",E,E,62,[[[R[1903]],["self"]],["bool"]]],[11,"gt",E,E,62,[[[R[1903]],["self"]],["bool"]]],[11,"ge",E,E,62,[[[R[1903]],["self"]],["bool"]]],[11,R[264],R[1949],E,68,[[["sflag"],["self"]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,68,[[["sflag"],["self"]],["bool"]]],[11,"le",E,E,68,[[["sflag"],["self"]],["bool"]]],[11,"gt",E,E,68,[[["sflag"],["self"]],["bool"]]],[11,"ge",E,E,68,[[["sflag"],["self"]],["bool"]]],[11,R[264],E,E,69,[[["self"],["mode"]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,69,[[["self"],["mode"]],["bool"]]],[11,"le",E,E,69,[[["self"],["mode"]],["bool"]]],[11,"gt",E,E,69,[[["self"],["mode"]],["bool"]]],[11,"ge",E,E,69,[[["self"],["mode"]],["bool"]]],[11,R[264],R[1950],E,70,[[["fsflags"],["self"]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,70,[[["fsflags"],["self"]],["bool"]]],[11,"le",E,E,70,[[["fsflags"],["self"]],["bool"]]],[11,"gt",E,E,70,[[["fsflags"],["self"]],["bool"]]],[11,"ge",E,E,70,[[["fsflags"],["self"]],["bool"]]],[11,R[264],R[1951],E,73,[[["baudrate"],["self"]],[[R[51]],[R[52],[R[51]]]]]],[11,R[264],E,E,74,[[["self"],["setarg"]],[[R[51]],[R[52],[R[51]]]]]],[11,R[264],E,E,75,[[["self"],["flusharg"]],[[R[51]],[R[52],[R[51]]]]]],[11,R[264],E,E,76,[[["flowarg"],["self"]],[[R[51]],[R[52],[R[51]]]]]],[11,R[264],E,E,77,[[[R[1975]],["self"]],[[R[51]],[R[52],[R[51]]]]]],[11,R[264],E,E,78,[[[R[1919]],["self"]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,78,[[[R[1919]],["self"]],["bool"]]],[11,"le",E,E,78,[[[R[1919]],["self"]],["bool"]]],[11,"gt",E,E,78,[[[R[1919]],["self"]],["bool"]]],[11,"ge",E,E,78,[[[R[1919]],["self"]],["bool"]]],[11,R[264],E,E,79,[[[R[1920]],["self"]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,79,[[[R[1920]],["self"]],["bool"]]],[11,"le",E,E,79,[[[R[1920]],["self"]],["bool"]]],[11,"gt",E,E,79,[[[R[1920]],["self"]],["bool"]]],[11,"ge",E,E,79,[[[R[1920]],["self"]],["bool"]]],[11,R[264],E,E,80,[[[R[1922]],["self"]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,80,[[[R[1922]],["self"]],["bool"]]],[11,"le",E,E,80,[[[R[1922]],["self"]],["bool"]]],[11,"gt",E,E,80,[[[R[1922]],["self"]],["bool"]]],[11,"ge",E,E,80,[[[R[1922]],["self"]],["bool"]]],[11,R[264],E,E,81,[[["self"],[R[1923]]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,81,[[["self"],[R[1923]]],["bool"]]],[11,"le",E,E,81,[[["self"],[R[1923]]],["bool"]]],[11,"gt",E,E,81,[[["self"],[R[1923]]],["bool"]]],[11,"ge",E,E,81,[[["self"],[R[1923]]],["bool"]]],[11,R[264],R[1952],E,83,[[["self"],[R[777]]],[[R[52],[R[51]]],[R[51]]]]],[11,R[264],E,E,84,[[["timeval"],["self"]],[[R[52],[R[51]]],[R[51]]]]],[11,R[264],R[1955],E,88,[[["self"],[R[1926]]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,88,[[["self"],[R[1926]]],["bool"]]],[11,"le",E,E,88,[[["self"],[R[1926]]],["bool"]]],[11,"gt",E,E,88,[[["self"],[R[1926]]],["bool"]]],[11,"ge",E,E,88,[[["self"],[R[1926]]],["bool"]]],[11,"next",R[1942],E,97,[[["self"]],[R[52]]]],[11,"next",R[1877],E,99,[[["self"]],[["signal"],[R[52],["signal"]]]]],[11,"next",R[1899],E,100,[[["self"]],[[R[1978]],[R[52],[R[1978]]]]]],[11,"as_ref",R[1877],E,36,[[["self"]],["sigset_t"]]],[11,"as_ref",R[1952],E,83,[[["self"]],[R[777]]]],[11,"as_ref",E,E,84,[[["self"]],["timeval"]]],[11,R[79],R[1950],E,70,[[],["fsflags"]]],[11,"fmt",R[1966],E,5,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,6,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,7,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1943],E,9,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1970],E,11,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1945],E,21,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,22,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1946],E,25,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,26,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,27,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,28,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1877],E,35,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1899],E,61,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,62,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1949],E,68,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,69,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1950],E,70,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1951],E,78,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,79,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,80,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,81,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1955],E,88,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1965],E,1,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1966],E,5,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,6,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,7,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1942],E,8,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,97,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1943],E,9,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1970],E,10,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,11,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1992],E,98,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1944],E,14,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,15,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,16,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,17,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,18,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,19,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[1945],E,20,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,21,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,22,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1946],E,25,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,26,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,24,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,27,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,28,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1877],E,30,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,35,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,31,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,32,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,33,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,34,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[1899],E,50,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,52,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,53,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,46,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,47,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,45,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,51,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,48,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[1948],E,101,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,102,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,103,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,104,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,105,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,106,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,107,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,108,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,109,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,110,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,111,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,112,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,113,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,114,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,115,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,116,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,117,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,118,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,119,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,120,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,121,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,122,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1899],E,54,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,55,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,61,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,62,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,63,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,64,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,57,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,58,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1949],E,68,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,69,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,67,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1950],E,70,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1951],E,73,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,74,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,75,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,76,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,77,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,78,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,79,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,80,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,81,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1952],E,83,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,84,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[1955],E,88,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,87,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1928],E,93,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,94,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,95,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,89,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,90,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,91,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,92,[[[R[29]],["self"]],[R[12]]]],[11,"fmt","nix",E,0,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1965],E,1,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[1899],E,52,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,53,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,46,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,47,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,45,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,51,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,48,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[1952],E,83,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,84,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[1928],E,93,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,94,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,95,[[["self"],[R[29]]],[R[12]]]],[11,"fmt","nix",E,0,[[["self"],[R[29]]],[R[12]]]],[11,"sub",R[1966],R[1979],5,[[["atflags"]],["atflags"]]],[11,"sub",E,R[1979],6,[[["oflag"]],["oflag"]]],[11,"sub",E,R[1979],7,[[["fdflag"]],["fdflag"]]],[11,"sub",R[1943],R[1979],9,[[[R[1806]]],[R[1806]]]],[11,"sub",R[1970],R[1979],11,[[[R[1808]]],[R[1808]]]],[11,"sub",R[1945],R[1979],21,[[[R[1827]]],[R[1827]]]],[11,"sub",E,R[1979],22,[[[R[1851]]],[R[1851]]]],[11,"sub",R[1946],R[1979],25,[[[R[1862]]],[R[1862]]]],[11,"sub",E,R[1979],26,[[[R[1866]]],[R[1866]]]],[11,"sub",E,R[1979],27,[[["msflags"]],["msflags"]]],[11,"sub",E,R[1979],28,[[[R[1871]]],[R[1871]]]],[11,"sub",R[1877],R[1979],35,[[["saflags"]],["saflags"]]],[11,"sub",R[1899],R[1979],61,[[[R[1901]]],[R[1901]]]],[11,"sub",E,R[1979],62,[[[R[1903]]],[R[1903]]]],[11,"sub",R[1949],R[1979],68,[[["sflag"]],["sflag"]]],[11,"sub",E,R[1979],69,[[["mode"]],["mode"]]],[11,"sub",R[1950],R[1979],70,[[["fsflags"]],["fsflags"]]],[11,"sub",R[1951],R[1979],78,[[[R[1919]]],[R[1919]]]],[11,"sub",E,R[1979],79,[[[R[1920]]],[R[1920]]]],[11,"sub",E,R[1979],80,[[[R[1922]]],[R[1922]]]],[11,"sub",E,R[1979],81,[[[R[1923]]],[R[1923]]]],[11,"sub",R[1952],E,83,[[[R[777]]],[R[777]]]],[11,"sub",E,E,84,[[["timeval"]],["timeval"]]],[11,"sub",R[1955],R[1979],88,[[[R[1926]]],[R[1926]]]],[11,"div",R[1952],E,83,[[["i32"]],[R[777]]]],[11,"div",E,E,84,[[["i32"]],["timeval"]]],[11,"add",E,E,83,[[[R[777]]],[R[777]]]],[11,"add",E,E,84,[[["timeval"]],["timeval"]]],[11,"mul",E,E,83,[[["i32"]],[R[777]]]],[11,"mul",E,E,84,[[["i32"]],["timeval"]]],[11,"neg",E,E,83,[[],[R[777]]]],[11,"neg",E,E,84,[[],["timeval"]]],[11,R[1981],R[1966],R[1980],5,[[["self"],["atflags"]]]],[11,R[1981],E,R[1980],6,[[["self"],["oflag"]]]],[11,R[1981],E,R[1980],7,[[["fdflag"],["self"]]]],[11,R[1981],R[1943],R[1980],9,[[["self"],[R[1806]]]]],[11,R[1981],R[1970],R[1980],11,[[[R[1808]],["self"]]]],[11,R[1981],R[1945],R[1980],21,[[["self"],[R[1827]]]]],[11,R[1981],E,R[1980],22,[[["self"],[R[1851]]]]],[11,R[1981],R[1946],R[1980],25,[[["self"],[R[1862]]]]],[11,R[1981],E,R[1980],26,[[["self"],[R[1866]]]]],[11,R[1981],E,R[1980],27,[[["self"],["msflags"]]]],[11,R[1981],E,R[1980],28,[[["self"],[R[1871]]]]],[11,R[1981],R[1877],R[1980],35,[[["self"],["saflags"]]]],[11,R[1981],R[1899],R[1980],61,[[["self"],[R[1901]]]]],[11,R[1981],E,R[1980],62,[[["self"],[R[1903]]]]],[11,R[1981],R[1949],R[1980],68,[[["self"],["sflag"]]]],[11,R[1981],E,R[1980],69,[[["mode"],["self"]]]],[11,R[1981],R[1950],R[1980],70,[[["self"],["fsflags"]]]],[11,R[1981],R[1951],R[1980],78,[[["self"],[R[1919]]]]],[11,R[1981],E,R[1980],79,[[["self"],[R[1920]]]]],[11,R[1981],E,R[1980],80,[[[R[1922]],["self"]]]],[11,R[1981],E,R[1980],81,[[[R[1923]],["self"]]]],[11,R[1981],R[1955],R[1980],88,[[["self"],[R[1926]]]]],[11,"not",R[1966],R[1982],5,[[],["atflags"]]],[11,"not",E,R[1982],6,[[],["oflag"]]],[11,"not",E,R[1982],7,[[],["fdflag"]]],[11,"not",R[1943],R[1982],9,[[],[R[1806]]]],[11,"not",R[1970],R[1982],11,[[],[R[1808]]]],[11,"not",R[1945],R[1982],21,[[],[R[1827]]]],[11,"not",E,R[1982],22,[[],[R[1851]]]],[11,"not",R[1946],R[1982],25,[[],[R[1862]]]],[11,"not",E,R[1982],26,[[],[R[1866]]]],[11,"not",E,R[1982],27,[[],["msflags"]]],[11,"not",E,R[1982],28,[[],[R[1871]]]],[11,"not",R[1877],R[1982],35,[[],["saflags"]]],[11,"not",R[1899],R[1982],61,[[],[R[1901]]]],[11,"not",E,R[1982],62,[[],[R[1903]]]],[11,"not",R[1949],R[1982],68,[[],["sflag"]]],[11,"not",E,R[1982],69,[[],["mode"]]],[11,"not",R[1950],R[1982],70,[[],["fsflags"]]],[11,"not",R[1951],R[1982],78,[[],[R[1919]]]],[11,"not",E,R[1982],79,[[],[R[1920]]]],[11,"not",E,R[1982],80,[[],[R[1922]]]],[11,"not",E,R[1982],81,[[],[R[1923]]]],[11,"not",R[1955],R[1982],88,[[],[R[1926]]]],[11,"bitand",R[1966],R[1983],5,[[["atflags"]],["atflags"]]],[11,"bitand",E,R[1983],6,[[["oflag"]],["oflag"]]],[11,"bitand",E,R[1983],7,[[["fdflag"]],["fdflag"]]],[11,"bitand",R[1943],R[1983],9,[[[R[1806]]],[R[1806]]]],[11,"bitand",R[1970],R[1983],11,[[[R[1808]]],[R[1808]]]],[11,"bitand",R[1945],R[1983],21,[[[R[1827]]],[R[1827]]]],[11,"bitand",E,R[1983],22,[[[R[1851]]],[R[1851]]]],[11,"bitand",R[1946],R[1983],25,[[[R[1862]]],[R[1862]]]],[11,"bitand",E,R[1983],26,[[[R[1866]]],[R[1866]]]],[11,"bitand",E,R[1983],27,[[["msflags"]],["msflags"]]],[11,"bitand",E,R[1983],28,[[[R[1871]]],[R[1871]]]],[11,"bitand",R[1877],R[1983],35,[[["saflags"]],["saflags"]]],[11,"bitand",R[1899],R[1983],61,[[[R[1901]]],[R[1901]]]],[11,"bitand",E,R[1983],62,[[[R[1903]]],[R[1903]]]],[11,"bitand",R[1949],R[1983],68,[[["sflag"]],["sflag"]]],[11,"bitand",E,R[1983],69,[[["mode"]],["mode"]]],[11,"bitand",R[1950],R[1983],70,[[["fsflags"]],["fsflags"]]],[11,"bitand",R[1951],R[1983],78,[[[R[1919]]],[R[1919]]]],[11,"bitand",E,R[1983],79,[[[R[1920]]],[R[1920]]]],[11,"bitand",E,R[1983],80,[[[R[1922]]],[R[1922]]]],[11,"bitand",E,R[1983],81,[[[R[1923]]],[R[1923]]]],[11,"bitand",R[1955],R[1983],88,[[[R[1926]]],[R[1926]]]],[11,"bitor",R[1966],R[1984],5,[[["atflags"]],["atflags"]]],[11,"bitor",E,R[1984],6,[[["oflag"]],["oflag"]]],[11,"bitor",E,R[1984],7,[[["fdflag"]],["fdflag"]]],[11,"bitor",R[1943],R[1984],9,[[[R[1806]]],[R[1806]]]],[11,"bitor",R[1970],R[1984],11,[[[R[1808]]],[R[1808]]]],[11,"bitor",R[1945],R[1984],21,[[[R[1827]]],[R[1827]]]],[11,"bitor",E,R[1984],22,[[[R[1851]]],[R[1851]]]],[11,"bitor",R[1946],R[1984],25,[[[R[1862]]],[R[1862]]]],[11,"bitor",E,R[1984],26,[[[R[1866]]],[R[1866]]]],[11,"bitor",E,R[1984],27,[[["msflags"]],["msflags"]]],[11,"bitor",E,R[1984],28,[[[R[1871]]],[R[1871]]]],[11,"bitor",R[1877],R[1984],35,[[["saflags"]],["saflags"]]],[11,"bitor",R[1899],R[1984],61,[[[R[1901]]],[R[1901]]]],[11,"bitor",E,R[1984],62,[[[R[1903]]],[R[1903]]]],[11,"bitor",R[1949],R[1984],68,[[["sflag"]],["sflag"]]],[11,"bitor",E,R[1984],69,[[["mode"]],["mode"]]],[11,"bitor",R[1950],R[1984],70,[[["fsflags"]],["fsflags"]]],[11,"bitor",R[1951],R[1984],78,[[[R[1919]]],[R[1919]]]],[11,"bitor",E,R[1984],79,[[[R[1920]]],[R[1920]]]],[11,"bitor",E,R[1984],80,[[[R[1922]]],[R[1922]]]],[11,"bitor",E,R[1984],81,[[[R[1923]]],[R[1923]]]],[11,"bitor",R[1955],R[1984],88,[[[R[1926]]],[R[1926]]]],[11,"bitxor",R[1966],R[1985],5,[[["atflags"]],["atflags"]]],[11,"bitxor",E,R[1985],6,[[["oflag"]],["oflag"]]],[11,"bitxor",E,R[1985],7,[[["fdflag"]],["fdflag"]]],[11,"bitxor",R[1943],R[1985],9,[[[R[1806]]],[R[1806]]]],[11,"bitxor",R[1970],R[1985],11,[[[R[1808]]],[R[1808]]]],[11,"bitxor",R[1945],R[1985],21,[[[R[1827]]],[R[1827]]]],[11,"bitxor",E,R[1985],22,[[[R[1851]]],[R[1851]]]],[11,"bitxor",R[1946],R[1985],25,[[[R[1862]]],[R[1862]]]],[11,"bitxor",E,R[1985],26,[[[R[1866]]],[R[1866]]]],[11,"bitxor",E,R[1985],27,[[["msflags"]],["msflags"]]],[11,"bitxor",E,R[1985],28,[[[R[1871]]],[R[1871]]]],[11,"bitxor",R[1877],R[1985],35,[[["saflags"]],["saflags"]]],[11,"bitxor",R[1899],R[1985],61,[[[R[1901]]],[R[1901]]]],[11,"bitxor",E,R[1985],62,[[[R[1903]]],[R[1903]]]],[11,"bitxor",R[1949],R[1985],68,[[["sflag"]],["sflag"]]],[11,"bitxor",E,R[1985],69,[[["mode"]],["mode"]]],[11,"bitxor",R[1950],R[1985],70,[[["fsflags"]],["fsflags"]]],[11,"bitxor",R[1951],R[1985],78,[[[R[1919]]],[R[1919]]]],[11,"bitxor",E,R[1985],79,[[[R[1920]]],[R[1920]]]],[11,"bitxor",E,R[1985],80,[[[R[1922]]],[R[1922]]]],[11,"bitxor",E,R[1985],81,[[[R[1923]]],[R[1923]]]],[11,"bitxor",R[1955],R[1985],88,[[[R[1926]]],[R[1926]]]],[11,R[1986],R[1966],R[1987],5,[[["self"],["atflags"]]]],[11,R[1986],E,R[1987],6,[[["self"],["oflag"]]]],[11,R[1986],E,R[1987],7,[[["fdflag"],["self"]]]],[11,R[1986],R[1943],R[1987],9,[[["self"],[R[1806]]]]],[11,R[1986],R[1970],R[1987],11,[[[R[1808]],["self"]]]],[11,R[1986],R[1945],R[1987],21,[[["self"],[R[1827]]]]],[11,R[1986],E,R[1987],22,[[["self"],[R[1851]]]]],[11,R[1986],R[1946],R[1987],25,[[["self"],[R[1862]]]]],[11,R[1986],E,R[1987],26,[[["self"],[R[1866]]]]],[11,R[1986],E,R[1987],27,[[["self"],["msflags"]]]],[11,R[1986],E,R[1987],28,[[["self"],[R[1871]]]]],[11,R[1986],R[1877],R[1987],35,[[["self"],["saflags"]]]],[11,R[1986],R[1899],R[1987],61,[[["self"],[R[1901]]]]],[11,R[1986],E,R[1987],62,[[["self"],[R[1903]]]]],[11,R[1986],R[1949],R[1987],68,[[["self"],["sflag"]]]],[11,R[1986],E,R[1987],69,[[["mode"],["self"]]]],[11,R[1986],R[1950],R[1987],70,[[["self"],["fsflags"]]]],[11,R[1986],R[1951],R[1987],78,[[["self"],[R[1919]]]]],[11,R[1986],E,R[1987],79,[[["self"],[R[1920]]]]],[11,R[1986],E,R[1987],80,[[[R[1922]],["self"]]]],[11,R[1986],E,R[1987],81,[[[R[1923]],["self"]]]],[11,R[1986],R[1955],R[1987],88,[[["self"],[R[1926]]]]],[11,R[1988],R[1966],R[1989],5,[[["self"],["atflags"]]]],[11,R[1988],E,R[1989],6,[[["self"],["oflag"]]]],[11,R[1988],E,R[1989],7,[[["fdflag"],["self"]]]],[11,R[1988],R[1943],R[1989],9,[[["self"],[R[1806]]]]],[11,R[1988],R[1970],R[1989],11,[[[R[1808]],["self"]]]],[11,R[1988],R[1945],R[1989],21,[[["self"],[R[1827]]]]],[11,R[1988],E,R[1989],22,[[["self"],[R[1851]]]]],[11,R[1988],R[1946],R[1989],25,[[["self"],[R[1862]]]]],[11,R[1988],E,R[1989],26,[[["self"],[R[1866]]]]],[11,R[1988],E,R[1989],27,[[["self"],["msflags"]]]],[11,R[1988],E,R[1989],28,[[["self"],[R[1871]]]]],[11,R[1988],R[1877],R[1989],35,[[["self"],["saflags"]]]],[11,R[1988],R[1899],R[1989],61,[[["self"],[R[1901]]]]],[11,R[1988],E,R[1989],62,[[["self"],[R[1903]]]]],[11,R[1988],R[1949],R[1989],68,[[["self"],["sflag"]]]],[11,R[1988],E,R[1989],69,[[["mode"],["self"]]]],[11,R[1988],R[1950],R[1989],70,[[["self"],["fsflags"]]]],[11,R[1988],R[1951],R[1989],78,[[["self"],[R[1919]]]]],[11,R[1988],E,R[1989],79,[[["self"],[R[1920]]]]],[11,R[1988],E,R[1989],80,[[[R[1922]],["self"]]]],[11,R[1988],E,R[1989],81,[[[R[1923]],["self"]]]],[11,R[1988],R[1955],R[1989],88,[[["self"],[R[1926]]]]],[11,R[1990],R[1966],R[1991],5,[[["self"],["atflags"]]]],[11,R[1990],E,R[1991],6,[[["self"],["oflag"]]]],[11,R[1990],E,R[1991],7,[[["fdflag"],["self"]]]],[11,R[1990],R[1943],R[1991],9,[[["self"],[R[1806]]]]],[11,R[1990],R[1970],R[1991],11,[[[R[1808]],["self"]]]],[11,R[1990],R[1945],R[1991],21,[[["self"],[R[1827]]]]],[11,R[1990],E,R[1991],22,[[["self"],[R[1851]]]]],[11,R[1990],R[1946],R[1991],25,[[["self"],[R[1862]]]]],[11,R[1990],E,R[1991],26,[[["self"],[R[1866]]]]],[11,R[1990],E,R[1991],27,[[["self"],["msflags"]]]],[11,R[1990],E,R[1991],28,[[["self"],[R[1871]]]]],[11,R[1990],R[1877],R[1991],35,[[["self"],["saflags"]]]],[11,R[1990],R[1899],R[1991],61,[[["self"],[R[1901]]]]],[11,R[1990],E,R[1991],62,[[["self"],[R[1903]]]]],[11,R[1990],R[1949],R[1991],68,[[["self"],["sflag"]]]],[11,R[1990],E,R[1991],69,[[["mode"],["self"]]]],[11,R[1990],R[1950],R[1991],70,[[["self"],["fsflags"]]]],[11,R[1990],R[1951],R[1991],78,[[["self"],[R[1919]]]]],[11,R[1990],E,R[1991],79,[[["self"],[R[1920]]]]],[11,R[1990],E,R[1991],80,[[[R[1922]],["self"]]]],[11,R[1990],E,R[1991],81,[[[R[1923]],["self"]]]],[11,R[1990],R[1955],R[1991],88,[[["self"],[R[1926]]]]],[11,"hash",R[1966],E,5,[[["self"],["__h"]]]],[11,"hash",E,E,6,[[["self"],["__h"]]]],[11,"hash",E,E,7,[[["self"],["__h"]]]],[11,"hash",R[1942],E,8,[[["self"],["__h"]]]],[11,"hash",E,E,97,[[["self"],["__h"]]]],[11,"hash",R[1943],E,9,[[["self"],["__h"]]]],[11,"hash",R[1970],E,11,[[["self"],["__h"]]]],[11,"hash",R[1944],E,14,[[["self"],["__h"]]]],[11,"hash",E,E,15,[[["self"],["__h"]]]],[11,"hash",E,E,16,[[["self"],["__h"]]]],[11,"hash",R[1945],E,20,[[["self"],["__h"]]]],[11,"hash",E,E,21,[[["self"],["__h"]]]],[11,"hash",E,E,22,[[["self"],["__h"]]]],[11,"hash",R[1946],E,25,[[["self"],["__h"]]]],[11,"hash",E,E,26,[[["self"],["__h"]]]],[11,"hash",E,E,24,[[["self"],["__h"]]]],[11,"hash",E,E,27,[[["self"],["__h"]]]],[11,"hash",E,E,28,[[["self"],["__h"]]]],[11,"hash",R[1877],E,30,[[["self"],["__h"]]]],[11,"hash",E,E,35,[[["self"],["__h"]]]],[11,"hash",E,E,31,[[["self"],["__h"]]]],[11,"hash",R[1899],E,50,[[["self"],["__h"]]]],[11,"hash",E,E,52,[[["h"],["self"]]]],[11,"hash",E,E,46,[[["h"],["self"]]]],[11,"hash",E,E,45,[[["h"],["self"]]]],[11,"hash",E,E,51,[[["h"],["self"]]]],[11,"hash",E,E,48,[[["h"],["self"]]]],[11,"hash",E,E,55,[[["self"],["__h"]]]],[11,"hash",E,E,61,[[["self"],["__h"]]]],[11,"hash",E,E,62,[[["self"],["__h"]]]],[11,"hash",E,E,57,[[["self"],["__h"]]]],[11,"hash",E,E,58,[[["self"],["__h"]]]],[11,"hash",R[1949],E,68,[[["self"],["__h"]]]],[11,"hash",E,E,69,[[["self"],["__h"]]]],[11,"hash",R[1950],E,70,[[["self"],["__h"]]]],[11,"hash",R[1951],E,73,[[["self"],["__h"]]]],[11,"hash",E,E,74,[[["self"],["__h"]]]],[11,"hash",E,E,75,[[["self"],["__h"]]]],[11,"hash",E,E,76,[[["self"],["__h"]]]],[11,"hash",E,E,77,[[["self"],["__h"]]]],[11,"hash",E,E,78,[[["self"],["__h"]]]],[11,"hash",E,E,79,[[["self"],["__h"]]]],[11,"hash",E,E,80,[[["self"],["__h"]]]],[11,"hash",E,E,81,[[["self"],["__h"]]]],[11,"hash",R[1955],E,88,[[["self"],["__h"]]]],[11,"hash",R[1928],E,93,[[["self"],["__h"]]]],[11,"hash",E,E,94,[[["self"],["__h"]]]],[11,"hash",E,E,95,[[["self"],["__h"]]]],[11,"hash",E,E,91,[[["self"],["__h"]]]],[11,"hash",E,E,92,[[["self"],["__h"]]]],[11,R[187],R[1966],E,5,[[[R[50]]],["atflags"]]],[11,R[187],E,E,6,[[[R[50]]],["oflag"]]],[11,R[187],E,E,7,[[[R[50]]],["fdflag"]]],[11,R[187],R[1943],E,9,[[[R[50]]],[R[1806]]]],[11,R[187],R[1970],E,11,[[[R[50]]],[R[1808]]]],[11,R[187],R[1945],E,21,[[[R[50]]],[R[1827]]]],[11,R[187],E,E,22,[[[R[50]]],[R[1851]]]],[11,R[187],R[1946],E,25,[[[R[50]]],[R[1862]]]],[11,R[187],E,E,26,[[[R[50]]],[R[1866]]]],[11,R[187],E,E,27,[[[R[50]]],["msflags"]]],[11,R[187],E,E,28,[[[R[50]]],[R[1871]]]],[11,R[187],R[1877],E,35,[[[R[50]]],["saflags"]]],[11,R[187],R[1899],E,61,[[[R[50]]],[R[1901]]]],[11,R[187],E,E,62,[[[R[50]]],[R[1903]]]],[11,R[187],R[1949],E,68,[[[R[50]]],["sflag"]]],[11,R[187],E,E,69,[[[R[50]]],["mode"]]],[11,R[187],R[1950],E,70,[[[R[50]]],["fsflags"]]],[11,R[187],R[1951],E,78,[[[R[50]]],[R[1919]]]],[11,R[187],E,E,79,[[[R[50]]],[R[1920]]]],[11,R[187],E,E,80,[[[R[50]]],[R[1922]]]],[11,R[187],E,E,81,[[[R[50]]],[R[1923]]]],[11,R[187],R[1955],E,88,[[[R[50]]],[R[1926]]]],[11,"fmt",R[1966],E,5,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,6,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,7,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1943],E,9,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1970],E,11,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1945],E,21,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,22,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1946],E,25,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,26,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,27,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,28,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1877],E,35,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1899],E,61,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,62,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1949],E,68,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,69,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1950],E,70,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1951],E,78,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,79,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,80,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,81,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1955],E,88,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1966],E,5,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,6,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,7,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1943],E,9,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1970],E,11,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1945],E,21,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,22,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1946],E,25,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,26,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,27,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,28,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1877],E,35,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1899],E,61,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,62,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1949],E,68,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,69,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1950],E,70,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1951],E,78,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,79,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,80,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,81,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1955],E,88,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1966],E,5,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,6,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,7,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1943],E,9,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1970],E,11,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1945],E,21,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,22,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1946],E,25,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,26,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,27,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,28,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1877],E,35,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1899],E,61,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,62,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1949],E,68,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,69,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1950],E,70,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1951],E,78,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,79,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,80,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,81,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1955],E,88,[[[R[29]],["self"]],[R[12]]]],[11,R[2738],R[1992],E,98,[[],["rawfd"]]],[11,R[30],R[1965],E,1,[[["self"]],["str"]]],[11,R[30],"nix",E,0,[[["self"]],["str"]]],[11,R[2452],R[1992],E,98,[[["self"]],["rawfd"]]]],"p":[[4,"Error"],[4,"Errno"],[8,R[1993]],[4,"FcntlArg"],[4,"FlockArg"],[3,"AtFlags"],[3,"OFlag"],[3,"FdFlag"],[3,R[1994]],[3,R[1995]],[3,"PollFd"],[3,"EventFlags"],[3,"Winsize"],[3,R[1996]],[4,R[1997]],[4,"LioOpcode"],[4,"LioMode"],[4,R[1998]],[4,"Buffer"],[3,"AioCb"],[4,R[1999]],[3,"EventFlag"],[3,"FilterFlag"],[3,"KEvent"],[4,"MmapAdvise"],[3,"ProtFlags"],[3,"MapFlags"],[3,"MsFlags"],[3,R[2000]],[3,"FdSet"],[4,"Signal"],[4,"SigmaskHow"],[4,"SigHandler"],[4,R[2001]],[3,"SigEvent"],[3,"SaFlags"],[3,"SigSet"],[3,"SigAction"],[3,"cmsghdr"],[3,"msghdr"],[3,R[779]],[3,R[753]],[3,R[746]],[3,R[774]],[3,R[747]],[3,"UnixAddr"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[3,"LinkAddr"],[3,"RecvMsg"],[4,R[2002]],[4,"SockAddr"],[4,"InetAddr"],[4,"IpAddr"],[4,"SockType"],[4,R[2003]],[4,R[2004]],[4,"SockLevel"],[4,R[4358]],[8,"GetSockOpt"],[8,"SetSockOpt"],[3,"SockFlag"],[3,"MsgFlags"],[3,R[2005]],[3,R[2006]],[3,"CmsgSpace"],[3,"FileStat"],[4,R[2007]],[3,"SFlag"],[3,"Mode"],[3,"FsFlags"],[3,"Statvfs"],[3,"Termios"],[4,"BaudRate"],[4,"SetArg"],[4,"FlushArg"],[4,"FlowArg"],[4,R[2008]],[3,"InputFlags"],[3,R[2009]],[3,R[2010]],[3,"LocalFlags"],[8,R[2011]],[3,"TimeSpec"],[3,"TimeVal"],[3,"IoVec"],[3,"UtsName"],[4,"WaitStatus"],[3,R[2012]],[4,"ForkResult"],[4,"Whence"],[4,R[2013]],[4,"SysconfVar"],[3,"Uid"],[3,"Gid"],[3,"Pid"],[8,"NixPath"],[3,R[2014]],[3,"PtyMaster"],[3,R[2015]],[3,R[2016]],[3,"ReuseAddr"],[3,"ReusePort"],[3,"TcpNoDelay"],[3,"Linger"],[3,R[2017]],[3,R[2018]],[3,R[2019]],[3,R[2020]],[3,R[2021]],[3,R[2022]],[3,R[2023]],[3,R[2024]],[3,"Broadcast"],[3,"OobInline"],[3,R[2025]],[3,"KeepAlive"],[3,R[2026]],[3,"RcvBuf"],[3,"SndBuf"],[3,"SockType"],[3,"AcceptConn"],[3,R[2027]],[6,"SessionId"]]};
searchIndex["nodrop"]={"doc":"The nodrop crate has the following cargo feature flags:","i":[[3,"NoDrop","nodrop","A type holding T that will not call its destructor on drop",N,N],[11,"new",E,"Create a new NoDrop.",0,[[[T]],["nodrop"]]],[11,R[46],E,"Extract the inner value.",0,[[],[T]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,"into",E,E,0,[[],[U]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,R[54],E,E,0,[[["self"]],[T]]],[11,"deref",E,E,0,[[["self"]],[T]]],[11,"drop",E,E,0,[[["self"]]]]],"p":[[3,"NoDrop"]]};
searchIndex["num_cpus"]={"doc":"A crate with utilities to determine the number of CPUs…","i":[[5,"get","num_cpus","Returns the number of available CPUs of the current system.",N,[[],[R[9]]]],[5,"get_physical",E,"Returns the number of physical cores of the current system.",N,[[],[R[9]]]]],"p":[]};
searchIndex["open"]={"doc":"Use this library to open a path or URL using the program…","i":[[5,"that","open",E,N,[[["asref",["osstr"]],["sized"],["osstr"]],[[R[12],[R[309]]],[R[309]]]]]],"p":[]};
searchIndex["quote"]={"doc":"This crate provides the [`quote!`] macro for turning Rust…","i":[[8,R[2097],"quote","TokenStream extension trait with methods for appending…",N,N],[10,"append",E,R[2094],0,[[["self"],[U]]]],[10,"append_all",E,R[2094],0,[[["self"],["i"]]]],[10,"append_separated",E,R[2094],0,[[["self"],[U],["i"]]]],[10,"append_terminated",E,R[2094],0,[[["self"],[U],["i"]]]],[8,"ToTokens",E,"Types that can be interpolated inside a [`quote!`]…",N,N],[10,R[3216],E,"Write `self` to the given `TokenStream`.",1,[[[R[790]],["self"]]]],[11,R[2095],E,R[2096],1,[[],[R[790]]]],[14,"quote",E,"The whole point.",N,N],[14,"quote_spanned",E,"Same as `quote!`, but applies a given span to all tokens…",N,N],[11,R[2095],E,R[2096],1,[[],[R[790]]]]],"p":[[8,R[2097]],[8,"ToTokens"]]};
searchIndex["rand"]={"doc":"Utilities for random number generation","i":[[8,"RngCore","rand",R[355],N,N],[10,R[19],E,R[356],0,[[["self"]],["u32"]]],[10,R[20],E,R[357],0,[[["self"]],["u64"]]],[10,R[21],E,R[358],0,[[["self"]]]],[10,R[22],E,R[359],0,[[["self"]],[["error"],[R[12],["error"]]]]],[8,R[360],E,R[361],N,N],[8,R[36],E,R[362],N,N],[16,"Seed",E,R[363],1,N],[10,R[23],E,R[364],1,[[],["self"]]],[11,R[24],E,R[365],1,[[["u64"]],["self"]]],[11,R[25],E,R[366],1,[[["r"]],[["error"],[R[12],["error"]]]]],[4,R[32],E,R[314],N,N],[13,R[315],E,R[316],2,N],[13,R[317],E,R[318],2,N],[13,R[319],E,R[320],2,N],[13,R[89],E,R[321],2,N],[3,"Error",E,R[311],N,N],[12,"kind",E,R[312],3,N],[12,"msg",E,R[313],3,N],[5,"thread_rng",E,"Retrieve the lazily-initialized thread-local random number…",N,[[],["threadrng"]]],[5,"random",E,"Generates a random value using the thread-local random…",N,[[],[T]]],[0,"distributions",E,"Generating random samples from probability distributions.",N,N],[3,R[2509],R[2477],"Sample a `char`, uniformly distributed over ASCII letters…",N,N],[3,"Uniform",E,R[2474],N,N],[3,R[2510],E,R[2473],N,N],[3,"Open01",E,R[2473],N,N],[3,"Bernoulli",E,"The Bernoulli distribution.",N,N],[3,R[2500],E,"A distribution using weighted sampling to pick a…",N,N],[3,R[2501],E,"Samples uniformly from the surface of the unit sphere in…",N,N],[3,"UnitCircle",E,"Samples uniformly from the edge of the unit circle in two…",N,N],[3,"Gamma",E,"The Gamma distribution `Gamma(shape, scale)` distribution.",N,N],[3,"ChiSquared",E,"The chi-squared distribution `χ²(k)`, where `k` is the…",N,N],[3,"FisherF",E,"The Fisher F distribution `F(m, n)`.",N,N],[3,"StudentT",E,"The Student t distribution, `t(nu)`, where `nu` is the…",N,N],[3,"Beta",E,"The Beta distribution with shape parameters `alpha` and…",N,N],[3,"Normal",E,"The normal distribution `N(mean, std_dev**2)`.",N,N],[3,"LogNormal",E,"The log-normal distribution `ln N(mean, std_dev**2)`.",N,N],[3,R[2511],E,"Samples floating-point numbers according to the normal…",N,N],[3,"Exp",E,"The exponential distribution `Exp(lambda)`.",N,N],[3,"Exp1",E,"Samples floating-point numbers according to the…",N,N],[3,"Pareto",E,"Samples floating-point numbers according to the Pareto…",N,N],[3,"Poisson",E,"The Poisson distribution `Poisson(lambda)`.",N,N],[3,"Binomial",E,"The binomial distribution `Binomial(n, p)`.",N,N],[3,"Cauchy",E,"The Cauchy distribution `Cauchy(median, scale)`.",N,N],[3,"Dirichlet",E,"The dirichelet distribution `Dirichlet(alpha)`.",N,N],[3,"Triangular",E,"The triangular distribution.",N,N],[3,"Weibull",E,"Samples floating-point numbers according to the Weibull…",N,N],[3,"DistIter",E,"An iterator that generates random values of `T` with…",N,N],[3,"Standard",E,"A generic random value distribution, implemented for many…",N,N],[3,"Weighted",E,"A value with a particular weight for use with…",N,N],[12,"weight",E,"The numerical weight of this item",4,N],[12,"item",E,"The actual item which is being weighted",4,N],[3,R[2503],E,"A distribution that selects from a finite collection of…",N,N],[4,R[2496],E,"Error type returned from `WeightedIndex::new`.",N,N],[13,"NoItem",E,"The provided iterator contained no items.",5,N],[13,"NegativeWeight",E,"A weight lower than zero was used.",5,N],[13,"AllWeightsZero",E,"All items in the provided iterator had a weight of zero.",5,N],[0,"uniform",E,"A distribution uniformly sampling numbers within a given…",N,N],[3,"Uniform",R[2486],R[2474],N,N],[3,"UniformInt",E,"The back-end implementing [`UniformSampler`] for integer…",N,N],[3,R[2512],E,"The back-end implementing [`UniformSampler`] for…",N,N],[3,R[2513],E,"The back-end implementing [`UniformSampler`] for `Duration`.",N,N],[8,R[2497],E,"Helper trait for creating objects using the correct…",N,N],[16,"Sampler",E,"The `UniformSampler` implementation supporting type `X`.",6,N],[8,R[2498],E,"Helper trait handling actual uniform sampling.",N,N],[16,"X",E,"The type sampled by this implementation.",7,N],[10,"new",E,"Construct self, with inclusive lower bound and exclusive…",7,[[["b1"],["b2"]],["self"]]],[10,R[2475],E,"Construct self, with inclusive bounds `[low, high]`.",7,[[["b1"],["b2"]],["self"]]],[10,"sample",E,"Sample a value.",7,[[["r"],["self"]]]],[11,R[2492],E,"Sample a single value uniformly from a range with…",7,[[["b1"],["r"],["b2"]]]],[8,R[2499],E,"Helper trait similar to [`Borrow`] but implemented only…",N,N],[10,R[39],E,"Immutably borrows from an owned value. See…",8,[[["self"]],["borrowed"]]],[11,"new",E,R[2476],9,[[["b1"],["b2"]],["uniform"]]],[11,R[2475],E,R[2476],9,[[["b1"],["b2"]],["uniform"]]],[11,"new",R[2477],"Construct a new `Bernoulli` with the given probability of…",10,[[["f64"]],["bernoulli"]]],[11,"from_ratio",E,"Construct a new `Bernoulli` with the probability of…",10,[[["u32"]],["bernoulli"]]],[11,"new",E,"Creates a new a `WeightedIndex` [`Distribution`] using the…",11,[[["i"]],[[R[12],[R[2478],R[2479]]],[R[2478]],[R[2479]]]]],[11,"new",E,"Construct a new `UnitSphereSurface` distribution.",12,[[],[R[2493]]]],[11,"new",E,"Construct a new `UnitCircle` distribution.",13,[[],["unitcircle"]]],[11,"new",E,"Construct an object representing the `Gamma(shape, scale)`…",14,[[["f64"]],["gamma"]]],[11,"new",E,"Create a new chi-squared distribution with…",15,[[["f64"]],["chisquared"]]],[11,"new",E,"Create a new `FisherF` distribution, with the given…",16,[[["f64"]],["fisherf"]]],[11,"new",E,"Create a new Student t distribution with `n` degrees of…",17,[[["f64"]],["studentt"]]],[11,"new",E,"Construct an object representing the `Beta(alpha, beta)`…",18,[[["f64"]],["beta"]]],[11,"new",E,"Construct a new `Normal` distribution with the given mean…",19,[[["f64"]],["normal"]]],[11,"new",E,"Construct a new `LogNormal` distribution with the given…",20,[[["f64"]],["lognormal"]]],[11,"new",E,"Construct a new `Exp` with the given shape parameter…",21,[[["f64"]],["exp"]]],[11,"new",E,"Construct a new Pareto distribution with given `scale` and…",22,[[["f64"]],["pareto"]]],[11,"new",E,"Construct a new `Poisson` with the given shape parameter…",23,[[["f64"]],["poisson"]]],[11,"new",E,"Construct a new `Binomial` with the given shape parameters…",24,[[["f64"],["u64"]],["binomial"]]],[11,"new",E,"Construct a new `Cauchy` with the given shape parameters…",25,[[["f64"]],["cauchy"]]],[11,"new",E,"Construct a new `Dirichlet` with the given alpha parameter…",26,[[["vec",["f64"]],["into",["vec"]]],["dirichlet"]]],[11,"new_with_param",E,"Construct a new `Dirichlet` with the given shape parameter…",26,[[["f64"],[R[9]]],["dirichlet"]]],[11,"new",E,"Construct a new `Triangular` with minimum `min`, maximum…",27,[[["f64"]],["triangular"]]],[11,"new",E,"Construct a new `Weibull` distribution with given `scale`…",28,[[["f64"]],["weibull"]]],[8,R[2502],E,"Types (distributions) that can be used to create a random…",N,N],[10,"sample",E,"Generate a random value of `T`, using `rng` as the source…",29,[[["r"],["self"]],[T]]],[11,R[2480],E,"Create an iterator that generates random values of `T`,…",29,[[["self"],["r"]],["distiter"]]],[11,"new",E,"Create a new `WeightedChoice`.",30,[[],["weightedchoice"]]],[0,"prelude","rand","Convenience re-export of common members",N,N],[0,"prng",E,"Pseudo-random number generators.",N,N],[0,"rngs",E,"Random number generators and adapters for common usage:",N,N],[3,R[2538],R[2487],R[2519],N,N],[4,R[2520],E,R[2521],N,N],[13,"NoTimer",E,R[2522],31,N],[13,R[2523],E,R[2524],31,N],[13,R[2525],E,R[2526],31,N],[13,R[2527],E,R[2528],31,N],[13,R[2529],E,R[2530],31,N],[3,"OsRng",E,R[2517],N,N],[3,"EntropyRng",E,"An interface returning random data from external…",N,N],[3,"SmallRng",E,"An RNG recommended when small state, cheap initialization…",N,N],[3,"StdRng",E,"The standard RNG. The PRNG algorithm in `StdRng` is chosen…",N,N],[3,"ThreadRng",E,"The type returned by [`thread_rng`], essentially just a…",N,N],[0,"adapter",E,"Wrappers / adapters forming RNGs",N,N],[3,"ReadRng",R[2489],"An RNG that reads random bytes straight from any type…",N,N],[3,R[2504],E,"A wrapper around any PRNG that implements…",N,N],[11,"new",E,"Create a new `ReadRng` from a `Read`.",32,[[["r"]],["readrng"]]],[11,"new",E,"Create a new `ReseedingRng` from an existing PRNG,…",33,[[["rsdr"],["u64"],["r"]],["self"]]],[11,"reseed",E,"Reseed the internal PRNG.",33,[[["self"]],[["error"],[R[12],["error"]]]]],[11,"new",R[2487],"Create a new `EntropyRng`.",34,[[],["self"]]],[0,"mock",E,"Mock random number generator",N,N],[3,"StepRng",R[2490],"A simple implementation of `RngCore` for testing purposes.",N,N],[11,"new",E,"Create a `StepRng`, yielding an arithmetic sequence…",35,[[["u64"]],["self"]]],[0,"seq","rand","Functions for randomly accessing and sampling sequences.",N,N],[3,R[2514],R[2495],"Iterator over multiple choices, as returned by…",N,N],[5,R[2480],E,"Randomly sample `amount` elements from a finite iterator.",N,[[["r"],["i"],[R[9]]],[["vec"],[R[12],["vec","vec"]]]]],[5,"sample_slice",E,"Randomly sample exactly `amount` values from `slice`.",N,[[["r"],[R[9]]],["vec"]]],[5,"sample_slice_ref",E,"Randomly sample exactly `amount` references from `slice`.",N,[[["r"],[R[9]]],[[T],["vec"]]]],[0,"index",E,"Index sampling",N,N],[4,"IndexVec",R[2491],"A vector of indices.",N,N],[4,R[2515],E,"Return type of `IndexVec::iter`.",N,N],[4,R[2516],E,"Return type of `IndexVec::into_iter`.",N,N],[5,"sample",E,"Randomly sample exactly `amount` distinct indices from…",N,[[["r"],[R[9]]],["indexvec"]]],[11,"len",E,"Returns the number of indices",36,[[["self"]],[R[9]]]],[11,"index",E,"Return the value at the given `index`.",36,[[["self"],[R[9]]],[R[9]]]],[11,"into_vec",E,"Return result as a `Vec<usize>`. Conversion may or may not…",36,[[],[["vec",[R[9]]],[R[9]]]]],[11,"iter",E,"Iterate over the indices as a sequence of `usize` values",36,[[["self"]],["indexveciter"]]],[11,R[48],E,"Convert into an iterator over the indices as a sequence of…",36,[[],[R[2494]]]],[8,R[2505],R[2495],"Extension trait on slices, providing random mutation and…",N,N],[16,"Item",E,"The element type.",37,N],[10,"choose",E,"Returns a reference to one random element of the slice, or…",37,[[["r"],["self"]],[R[52]]]],[10,"choose_mut",E,"Returns a mutable reference to one random element of the…",37,[[["r"],["self"]],[R[52]]]],[10,R[2481],E,"Produces an iterator that chooses `amount` elements from…",37,[[["r"],["self"],[R[9]]],["slicechooseiter"]]],[10,"choose_weighted",E,"Similar to [`choose`], where the likelihood of each…",37,[[["r"],["self"],["f"]],[[R[2479]],[R[12],[R[2479]]]]]],[10,"choose_weighted_mut",E,"Similar to [`choose_mut`], where the likelihood of each…",37,[[["r"],["self"],["f"]],[[R[12],[R[2479]]],[R[2479]]]]],[10,"shuffle",E,R[2485],37,[[["r"],["self"]]]],[10,"partial_shuffle",E,"Shuffle a slice in place, but exit early.",37,[[["r"],["self"],[R[9]]]]],[8,R[2506],E,"Extension trait on iterators, providing random sampling…",N,N],[11,"choose",E,"Choose one element at random from the iterator. If you…",38,[[["r"]],[R[52]]]],[11,"choose_multiple_fill",E,R[2482],38,[[["r"]],[R[9]]]],[11,R[2481],E,R[2482],38,[[["r"],[R[9]]],["vec"]]],[8,"Rng","rand","An automatically-implemented extension trait on…",N,N],[11,"gen",E,"Return a random value supporting the [`Standard`]…",39,[[["self"]],[T]]],[11,"gen_range",E,"Generate a random value in the range [`low`, `high`), i.e.…",39,[[["b1"],["self"],["b2"]],["sampleuniform"]]],[11,"sample",E,"Sample a new value, using the given distribution.",39,[[["self"],[R[2483]]],[T]]],[11,R[2480],E,"Create an iterator that generates values using the given…",39,[[["d"],["self"]],[["distiter"],[R[2483]]]]],[11,"fill",E,R[2484],39,[[["self"],[T]]]],[11,"try_fill",E,R[2484],39,[[["self"],[T]],[["error"],[R[12],["error"]]]]],[11,"gen_bool",E,"Return a bool with a probability `p` of being true.",39,[[["self"],["f64"]],["bool"]]],[11,"gen_ratio",E,"Return a bool with a probability of…",39,[[["u32"],["self"]],["bool"]]],[11,"choose",E,"Return a random element from `values`.",39,[[["self"]],[[R[52]],[T]]]],[11,"choose_mut",E,"Return a mutable pointer to a random element from `values`.",39,[[["self"]],[[T],[R[52]]]]],[11,"shuffle",E,R[2485],39,[[["self"]]]],[8,R[2507],E,"Trait for casting types to byte slices",N,N],[10,"as_byte_slice_mut",E,"Return a mutable reference to self as a byte slice",40,[[["self"]]]],[10,"to_le",E,"Call `to_le` on each element (i.e. byte-swap on Big Endian…",40,[[["self"]]]],[8,R[2508],E,"A convenience extension to [`SeedableRng`] allowing…",N,N],[10,R[2488],E,"Creates a new instance, automatically seeded with fresh…",41,[[],["self"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[17],E,E,2,[[[T],["self"]]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[170],E,E,3,[[["self"]],["string"]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"from",R[2477],E,42,[[[T]],[T]]],[11,"into",E,E,42,[[],[U]]],[11,R[11],E,E,42,[[[U]],[R[12]]]],[11,R[39],E,E,42,[[["self"]],[T]]],[11,R[13],E,E,42,[[["self"]],[T]]],[11,R[14],E,E,42,[[],[R[12]]]],[11,R[18],E,E,42,[[["self"]],[R[40]]]],[11,"from",R[2486],E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[16],E,E,9,[[["self"]],[T]]],[11,R[17],E,E,9,[[[T],["self"]]]],[11,R[11],E,E,9,[[[U]],[R[12]]]],[11,R[39],E,E,9,[[["self"]],[T]]],[11,R[13],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[],[R[12]]]],[11,R[18],E,E,9,[[["self"]],[R[40]]]],[11,"from",R[2477],E,43,[[[T]],[T]]],[11,"into",E,E,43,[[],[U]]],[11,R[16],E,E,43,[[["self"]],[T]]],[11,R[17],E,E,43,[[[T],["self"]]]],[11,R[11],E,E,43,[[[U]],[R[12]]]],[11,R[39],E,E,43,[[["self"]],[T]]],[11,R[13],E,E,43,[[["self"]],[T]]],[11,R[14],E,E,43,[[],[R[12]]]],[11,R[18],E,E,43,[[["self"]],[R[40]]]],[11,"from",E,E,44,[[[T]],[T]]],[11,"into",E,E,44,[[],[U]]],[11,R[16],E,E,44,[[["self"]],[T]]],[11,R[17],E,E,44,[[[T],["self"]]]],[11,R[11],E,E,44,[[[U]],[R[12]]]],[11,R[39],E,E,44,[[["self"]],[T]]],[11,R[13],E,E,44,[[["self"]],[T]]],[11,R[14],E,E,44,[[],[R[12]]]],[11,R[18],E,E,44,[[["self"]],[R[40]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[16],E,E,10,[[["self"]],[T]]],[11,R[17],E,E,10,[[[T],["self"]]]],[11,R[11],E,E,10,[[[U]],[R[12]]]],[11,R[39],E,E,10,[[["self"]],[T]]],[11,R[13],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[],[R[12]]]],[11,R[18],E,E,10,[[["self"]],[R[40]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[16],E,E,11,[[["self"]],[T]]],[11,R[17],E,E,11,[[[T],["self"]]]],[11,R[11],E,E,11,[[[U]],[R[12]]]],[11,R[39],E,E,11,[[["self"]],[T]]],[11,R[13],E,E,11,[[["self"]],[T]]],[11,R[14],E,E,11,[[],[R[12]]]],[11,R[18],E,E,11,[[["self"]],[R[40]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[16],E,E,12,[[["self"]],[T]]],[11,R[17],E,E,12,[[[T],["self"]]]],[11,R[11],E,E,12,[[[U]],[R[12]]]],[11,R[39],E,E,12,[[["self"]],[T]]],[11,R[13],E,E,12,[[["self"]],[T]]],[11,R[14],E,E,12,[[],[R[12]]]],[11,R[18],E,E,12,[[["self"]],[R[40]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[16],E,E,13,[[["self"]],[T]]],[11,R[17],E,E,13,[[[T],["self"]]]],[11,R[11],E,E,13,[[[U]],[R[12]]]],[11,R[39],E,E,13,[[["self"]],[T]]],[11,R[13],E,E,13,[[["self"]],[T]]],[11,R[14],E,E,13,[[],[R[12]]]],[11,R[18],E,E,13,[[["self"]],[R[40]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[16],E,E,14,[[["self"]],[T]]],[11,R[17],E,E,14,[[[T],["self"]]]],[11,R[11],E,E,14,[[[U]],[R[12]]]],[11,R[39],E,E,14,[[["self"]],[T]]],[11,R[13],E,E,14,[[["self"]],[T]]],[11,R[14],E,E,14,[[],[R[12]]]],[11,R[18],E,E,14,[[["self"]],[R[40]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[16],E,E,15,[[["self"]],[T]]],[11,R[17],E,E,15,[[[T],["self"]]]],[11,R[11],E,E,15,[[[U]],[R[12]]]],[11,R[39],E,E,15,[[["self"]],[T]]],[11,R[13],E,E,15,[[["self"]],[T]]],[11,R[14],E,E,15,[[],[R[12]]]],[11,R[18],E,E,15,[[["self"]],[R[40]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[16],E,E,16,[[["self"]],[T]]],[11,R[17],E,E,16,[[[T],["self"]]]],[11,R[11],E,E,16,[[[U]],[R[12]]]],[11,R[39],E,E,16,[[["self"]],[T]]],[11,R[13],E,E,16,[[["self"]],[T]]],[11,R[14],E,E,16,[[],[R[12]]]],[11,R[18],E,E,16,[[["self"]],[R[40]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[16],E,E,17,[[["self"]],[T]]],[11,R[17],E,E,17,[[[T],["self"]]]],[11,R[11],E,E,17,[[[U]],[R[12]]]],[11,R[39],E,E,17,[[["self"]],[T]]],[11,R[13],E,E,17,[[["self"]],[T]]],[11,R[14],E,E,17,[[],[R[12]]]],[11,R[18],E,E,17,[[["self"]],[R[40]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[16],E,E,18,[[["self"]],[T]]],[11,R[17],E,E,18,[[[T],["self"]]]],[11,R[11],E,E,18,[[[U]],[R[12]]]],[11,R[39],E,E,18,[[["self"]],[T]]],[11,R[13],E,E,18,[[["self"]],[T]]],[11,R[14],E,E,18,[[],[R[12]]]],[11,R[18],E,E,18,[[["self"]],[R[40]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[16],E,E,19,[[["self"]],[T]]],[11,R[17],E,E,19,[[[T],["self"]]]],[11,R[11],E,E,19,[[[U]],[R[12]]]],[11,R[39],E,E,19,[[["self"]],[T]]],[11,R[13],E,E,19,[[["self"]],[T]]],[11,R[14],E,E,19,[[],[R[12]]]],[11,R[18],E,E,19,[[["self"]],[R[40]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[16],E,E,20,[[["self"]],[T]]],[11,R[17],E,E,20,[[[T],["self"]]]],[11,R[11],E,E,20,[[[U]],[R[12]]]],[11,R[39],E,E,20,[[["self"]],[T]]],[11,R[13],E,E,20,[[["self"]],[T]]],[11,R[14],E,E,20,[[],[R[12]]]],[11,R[18],E,E,20,[[["self"]],[R[40]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,"into",E,E,45,[[],[U]]],[11,R[16],E,E,45,[[["self"]],[T]]],[11,R[17],E,E,45,[[[T],["self"]]]],[11,R[11],E,E,45,[[[U]],[R[12]]]],[11,R[39],E,E,45,[[["self"]],[T]]],[11,R[13],E,E,45,[[["self"]],[T]]],[11,R[14],E,E,45,[[],[R[12]]]],[11,R[18],E,E,45,[[["self"]],[R[40]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[16],E,E,21,[[["self"]],[T]]],[11,R[17],E,E,21,[[[T],["self"]]]],[11,R[11],E,E,21,[[[U]],[R[12]]]],[11,R[39],E,E,21,[[["self"]],[T]]],[11,R[13],E,E,21,[[["self"]],[T]]],[11,R[14],E,E,21,[[],[R[12]]]],[11,R[18],E,E,21,[[["self"]],[R[40]]]],[11,"from",E,E,46,[[[T]],[T]]],[11,"into",E,E,46,[[],[U]]],[11,R[16],E,E,46,[[["self"]],[T]]],[11,R[17],E,E,46,[[[T],["self"]]]],[11,R[11],E,E,46,[[[U]],[R[12]]]],[11,R[39],E,E,46,[[["self"]],[T]]],[11,R[13],E,E,46,[[["self"]],[T]]],[11,R[14],E,E,46,[[],[R[12]]]],[11,R[18],E,E,46,[[["self"]],[R[40]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[16],E,E,22,[[["self"]],[T]]],[11,R[17],E,E,22,[[[T],["self"]]]],[11,R[11],E,E,22,[[[U]],[R[12]]]],[11,R[39],E,E,22,[[["self"]],[T]]],[11,R[13],E,E,22,[[["self"]],[T]]],[11,R[14],E,E,22,[[],[R[12]]]],[11,R[18],E,E,22,[[["self"]],[R[40]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[16],E,E,23,[[["self"]],[T]]],[11,R[17],E,E,23,[[[T],["self"]]]],[11,R[11],E,E,23,[[[U]],[R[12]]]],[11,R[39],E,E,23,[[["self"]],[T]]],[11,R[13],E,E,23,[[["self"]],[T]]],[11,R[14],E,E,23,[[],[R[12]]]],[11,R[18],E,E,23,[[["self"]],[R[40]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[16],E,E,24,[[["self"]],[T]]],[11,R[17],E,E,24,[[[T],["self"]]]],[11,R[11],E,E,24,[[[U]],[R[12]]]],[11,R[39],E,E,24,[[["self"]],[T]]],[11,R[13],E,E,24,[[["self"]],[T]]],[11,R[14],E,E,24,[[],[R[12]]]],[11,R[18],E,E,24,[[["self"]],[R[40]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[16],E,E,25,[[["self"]],[T]]],[11,R[17],E,E,25,[[[T],["self"]]]],[11,R[11],E,E,25,[[[U]],[R[12]]]],[11,R[39],E,E,25,[[["self"]],[T]]],[11,R[13],E,E,25,[[["self"]],[T]]],[11,R[14],E,E,25,[[],[R[12]]]],[11,R[18],E,E,25,[[["self"]],[R[40]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[16],E,E,26,[[["self"]],[T]]],[11,R[17],E,E,26,[[[T],["self"]]]],[11,R[11],E,E,26,[[[U]],[R[12]]]],[11,R[39],E,E,26,[[["self"]],[T]]],[11,R[13],E,E,26,[[["self"]],[T]]],[11,R[14],E,E,26,[[],[R[12]]]],[11,R[18],E,E,26,[[["self"]],[R[40]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[16],E,E,27,[[["self"]],[T]]],[11,R[17],E,E,27,[[[T],["self"]]]],[11,R[11],E,E,27,[[[U]],[R[12]]]],[11,R[39],E,E,27,[[["self"]],[T]]],[11,R[13],E,E,27,[[["self"]],[T]]],[11,R[14],E,E,27,[[],[R[12]]]],[11,R[18],E,E,27,[[["self"]],[R[40]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[16],E,E,28,[[["self"]],[T]]],[11,R[17],E,E,28,[[[T],["self"]]]],[11,R[11],E,E,28,[[[U]],[R[12]]]],[11,R[39],E,E,28,[[["self"]],[T]]],[11,R[13],E,E,28,[[["self"]],[T]]],[11,R[14],E,E,28,[[],[R[12]]]],[11,R[18],E,E,28,[[["self"]],[R[40]]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[48],E,E,47,[[],["i"]]],[11,"into",E,E,47,[[],[U]]],[11,R[11],E,E,47,[[[U]],[R[12]]]],[11,R[39],E,E,47,[[["self"]],[T]]],[11,R[13],E,E,47,[[["self"]],[T]]],[11,R[14],E,E,47,[[],[R[12]]]],[11,R[18],E,E,47,[[["self"]],[R[40]]]],[11,"from",E,E,48,[[[T]],[T]]],[11,"into",E,E,48,[[],[U]]],[11,R[16],E,E,48,[[["self"]],[T]]],[11,R[17],E,E,48,[[[T],["self"]]]],[11,R[11],E,E,48,[[[U]],[R[12]]]],[11,R[39],E,E,48,[[["self"]],[T]]],[11,R[13],E,E,48,[[["self"]],[T]]],[11,R[14],E,E,48,[[],[R[12]]]],[11,R[18],E,E,48,[[["self"]],[R[40]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[16],E,E,4,[[["self"]],[T]]],[11,R[17],E,E,4,[[[T],["self"]]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[11],E,E,30,[[[U]],[R[12]]]],[11,R[39],E,E,30,[[["self"]],[T]]],[11,R[13],E,E,30,[[["self"]],[T]]],[11,R[14],E,E,30,[[],[R[12]]]],[11,R[18],E,E,30,[[["self"]],[R[40]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[16],E,E,5,[[["self"]],[T]]],[11,R[17],E,E,5,[[[T],["self"]]]],[11,R[170],E,E,5,[[["self"]],["string"]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,R[18],E,E,5,[[["self"]],[R[40]]]],[11,"from",R[2486],E,49,[[[T]],[T]]],[11,"into",E,E,49,[[],[U]]],[11,R[16],E,E,49,[[["self"]],[T]]],[11,R[17],E,E,49,[[[T],["self"]]]],[11,R[11],E,E,49,[[[U]],[R[12]]]],[11,R[39],E,E,49,[[["self"]],[T]]],[11,R[13],E,E,49,[[["self"]],[T]]],[11,R[14],E,E,49,[[],[R[12]]]],[11,R[18],E,E,49,[[["self"]],[R[40]]]],[11,"from",E,E,50,[[[T]],[T]]],[11,"into",E,E,50,[[],[U]]],[11,R[16],E,E,50,[[["self"]],[T]]],[11,R[17],E,E,50,[[[T],["self"]]]],[11,R[11],E,E,50,[[[U]],[R[12]]]],[11,R[39],E,E,50,[[["self"]],[T]]],[11,R[13],E,E,50,[[["self"]],[T]]],[11,R[14],E,E,50,[[],[R[12]]]],[11,R[18],E,E,50,[[["self"]],[R[40]]]],[11,"from",E,E,51,[[[T]],[T]]],[11,"into",E,E,51,[[],[U]]],[11,R[16],E,E,51,[[["self"]],[T]]],[11,R[17],E,E,51,[[[T],["self"]]]],[11,R[11],E,E,51,[[[U]],[R[12]]]],[11,R[39],E,E,51,[[["self"]],[T]]],[11,R[13],E,E,51,[[["self"]],[T]]],[11,R[14],E,E,51,[[],[R[12]]]],[11,R[18],E,E,51,[[["self"]],[R[40]]]],[11,"from",R[2487],E,52,[[[T]],[T]]],[11,"into",E,E,52,[[],[U]]],[11,R[16],E,E,52,[[["self"]],[T]]],[11,R[17],E,E,52,[[[T],["self"]]]],[11,R[11],E,E,52,[[[U]],[R[12]]]],[11,R[39],E,E,52,[[["self"]],[T]]],[11,R[13],E,E,52,[[["self"]],[T]]],[11,R[14],E,E,52,[[],[R[12]]]],[11,R[18],E,E,52,[[["self"]],[R[40]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[16],E,E,31,[[["self"]],[T]]],[11,R[17],E,E,31,[[[T],["self"]]]],[11,R[170],E,E,31,[[["self"]],["string"]]],[11,R[11],E,E,31,[[[U]],[R[12]]]],[11,R[39],E,E,31,[[["self"]],[T]]],[11,R[13],E,E,31,[[["self"]],[T]]],[11,R[14],E,E,31,[[],[R[12]]]],[11,R[18],E,E,31,[[["self"]],[R[40]]]],[11,"from",E,E,53,[[[T]],[T]]],[11,"into",E,E,53,[[],[U]]],[11,R[16],E,E,53,[[["self"]],[T]]],[11,R[17],E,E,53,[[[T],["self"]]]],[11,R[11],E,E,53,[[[U]],[R[12]]]],[11,R[39],E,E,53,[[["self"]],[T]]],[11,R[13],E,E,53,[[["self"]],[T]]],[11,R[14],E,E,53,[[],[R[12]]]],[11,R[18],E,E,53,[[["self"]],[R[40]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[11],E,E,34,[[[U]],[R[12]]]],[11,R[39],E,E,34,[[["self"]],[T]]],[11,R[13],E,E,34,[[["self"]],[T]]],[11,R[14],E,E,34,[[],[R[12]]]],[11,R[18],E,E,34,[[["self"]],[R[40]]]],[11,R[2488],E,E,54,[[],["r"]]],[11,"from",E,E,54,[[[T]],[T]]],[11,"into",E,E,54,[[],[U]]],[11,R[16],E,E,54,[[["self"]],[T]]],[11,R[17],E,E,54,[[[T],["self"]]]],[11,R[11],E,E,54,[[[U]],[R[12]]]],[11,R[39],E,E,54,[[["self"]],[T]]],[11,R[13],E,E,54,[[["self"]],[T]]],[11,R[14],E,E,54,[[],[R[12]]]],[11,R[18],E,E,54,[[["self"]],[R[40]]]],[11,R[2488],E,E,55,[[],["r"]]],[11,"from",E,E,55,[[[T]],[T]]],[11,"into",E,E,55,[[],[U]]],[11,R[16],E,E,55,[[["self"]],[T]]],[11,R[17],E,E,55,[[[T],["self"]]]],[11,R[11],E,E,55,[[[U]],[R[12]]]],[11,R[39],E,E,55,[[["self"]],[T]]],[11,R[13],E,E,55,[[["self"]],[T]]],[11,R[14],E,E,55,[[],[R[12]]]],[11,R[18],E,E,55,[[["self"]],[R[40]]]],[11,"from",E,E,56,[[[T]],[T]]],[11,"into",E,E,56,[[],[U]]],[11,R[16],E,E,56,[[["self"]],[T]]],[11,R[17],E,E,56,[[[T],["self"]]]],[11,R[11],E,E,56,[[[U]],[R[12]]]],[11,R[39],E,E,56,[[["self"]],[T]]],[11,R[13],E,E,56,[[["self"]],[T]]],[11,R[14],E,E,56,[[],[R[12]]]],[11,R[18],E,E,56,[[["self"]],[R[40]]]],[11,"from",R[2489],E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[11],E,E,32,[[[U]],[R[12]]]],[11,R[39],E,E,32,[[["self"]],[T]]],[11,R[13],E,E,32,[[["self"]],[T]]],[11,R[14],E,E,32,[[],[R[12]]]],[11,R[18],E,E,32,[[["self"]],[R[40]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[16],E,E,33,[[["self"]],[T]]],[11,R[17],E,E,33,[[[T],["self"]]]],[11,R[11],E,E,33,[[[U]],[R[12]]]],[11,R[39],E,E,33,[[["self"]],[T]]],[11,R[13],E,E,33,[[["self"]],[T]]],[11,R[14],E,E,33,[[],[R[12]]]],[11,R[18],E,E,33,[[["self"]],[R[40]]]],[11,"from",R[2490],E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[16],E,E,35,[[["self"]],[T]]],[11,R[17],E,E,35,[[[T],["self"]]]],[11,R[11],E,E,35,[[[U]],[R[12]]]],[11,R[39],E,E,35,[[["self"]],[T]]],[11,R[13],E,E,35,[[["self"]],[T]]],[11,R[14],E,E,35,[[],[R[12]]]],[11,R[18],E,E,35,[[["self"]],[R[40]]]],[11,"from",R[2495],E,57,[[[T]],[T]]],[11,R[48],E,E,57,[[],["i"]]],[11,"into",E,E,57,[[],[U]]],[11,R[11],E,E,57,[[[U]],[R[12]]]],[11,R[39],E,E,57,[[["self"]],[T]]],[11,R[13],E,E,57,[[["self"]],[T]]],[11,R[14],E,E,57,[[],[R[12]]]],[11,R[18],E,E,57,[[["self"]],[R[40]]]],[11,"from",R[2491],E,36,[[[T]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,R[16],E,E,36,[[["self"]],[T]]],[11,R[17],E,E,36,[[[T],["self"]]]],[11,R[11],E,E,36,[[[U]],[R[12]]]],[11,R[39],E,E,36,[[["self"]],[T]]],[11,R[13],E,E,36,[[["self"]],[T]]],[11,R[14],E,E,36,[[],[R[12]]]],[11,R[18],E,E,36,[[["self"]],[R[40]]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[48],E,E,58,[[],["i"]]],[11,"into",E,E,58,[[],[U]]],[11,R[11],E,E,58,[[[U]],[R[12]]]],[11,R[39],E,E,58,[[["self"]],[T]]],[11,R[13],E,E,58,[[["self"]],[T]]],[11,R[14],E,E,58,[[],[R[12]]]],[11,R[18],E,E,58,[[["self"]],[R[40]]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[48],E,E,59,[[],["i"]]],[11,"into",E,E,59,[[],[U]]],[11,R[16],E,E,59,[[["self"]],[T]]],[11,R[17],E,E,59,[[[T],["self"]]]],[11,R[11],E,E,59,[[[U]],[R[12]]]],[11,R[39],E,E,59,[[["self"]],[T]]],[11,R[13],E,E,59,[[["self"]],[T]]],[11,R[14],E,E,59,[[],[R[12]]]],[11,R[18],E,E,59,[[["self"]],[R[40]]]],[11,R[19],R[2487],E,52,[[["self"]],["u32"]]],[11,R[20],E,E,52,[[["self"]],["u64"]]],[11,R[21],E,E,52,[[["self"]]]],[11,R[22],E,E,52,[[["self"]],[["error"],[R[12],["error"]]]]],[11,R[30],E,E,31,[[["self"]],["str"]]],[11,"from","rand",E,3,[[[R[1335]]],["error"]]],[11,"fmt",R[2487],E,31,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,52,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"clone",E,E,31,[[["self"]],[R[1335]]]],[11,"clone",E,E,52,[[["self"]],[R[1336]]]],[11,"eq",E,E,31,[[[R[1335]],["self"]],["bool"]]],[11,"fmt",E,E,31,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"clone","rand",E,2,[[["self"]],[R[1]]]],[11,"fmt",E,E,3,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,2,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,3,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,R[30],E,E,3,[[["self"]],["str"]]],[11,"cause",E,E,3,[[["self"]],[[R[52],["error"]],["error"]]]],[11,"eq",E,E,2,[[[R[1]],["self"]],["bool"]]],[11,"read",E,E,0,[[["self"]],[[R[12],[R[9],"error"]],[R[9]],["error"]]]],[11,"clone",R[2487],E,53,[[["self"]],["osrng"]]],[11,"fmt",E,E,53,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,R[19],E,E,53,[[["self"]],["u32"]]],[11,R[20],E,E,53,[[["self"]],["u64"]]],[11,R[21],E,E,53,[[["self"]]]],[11,R[22],E,E,53,[[["self"]],[["error"],[R[12],["error"]]]]],[11,"new",R[2486],E,49,[[["b1"],["b2"]],["self"]]],[11,R[2475],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,R[2492],E,E,49,[[["b1"],["r"],["b2"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[2475],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,R[2492],E,E,49,[[["b1"],["r"],["b2"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[2475],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,R[2492],E,E,49,[[["b1"],["r"],["b2"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[2475],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,R[2492],E,E,49,[[["b1"],["r"],["b2"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[2475],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,R[2492],E,E,49,[[["b1"],["r"],["b2"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[2475],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,R[2492],E,E,49,[[["b1"],["r"],["b2"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[2475],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,R[2492],E,E,49,[[["b1"],["r"],["b2"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[2475],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,R[2492],E,E,49,[[["b1"],["r"],["b2"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[2475],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,R[2492],E,E,49,[[["b1"],["r"],["b2"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[2475],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,R[2492],E,E,49,[[["b1"],["r"],["b2"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[2475],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,R[2492],E,E,49,[[["b1"],["r"],["b2"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[2475],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,R[2492],E,E,49,[[["b1"],["r"],["b2"]]]],[11,"new",E,E,50,[[["b1"],["b2"]],["self"]]],[11,R[2475],E,E,50,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,50,[[["r"],["self"]]]],[11,R[2492],E,E,50,[[["b1"],["r"],["b2"]]]],[11,"new",E,E,50,[[["b1"],["b2"]],["self"]]],[11,R[2475],E,E,50,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,50,[[["r"],["self"]]]],[11,R[2492],E,E,50,[[["b1"],["r"],["b2"]]]],[11,"new",E,E,51,[[["b1"],["b2"]],["self"]]],[11,R[2475],E,E,51,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,51,[[["r"],["self"]],[R[1358]]]],[11,"sample",E,E,9,[[["r"],["self"]],["x"]]],[11,"sample",R[2477],E,10,[[["r"],["self"]],["bool"]]],[11,"sample",E,E,11,[[["r"],["self"]],[R[9]]]],[11,"sample",E,E,12,[[["r"],["self"]]]],[11,"sample",E,E,13,[[["r"],["self"]]]],[11,"sample",E,E,14,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,15,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,16,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,17,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,18,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,45,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,19,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,20,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,46,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,21,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,22,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,23,[[["r"],["self"]],["u64"]]],[11,"sample",E,E,24,[[["r"],["self"]],["u64"]]],[11,"sample",E,E,25,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,26,[[["r"],["self"]],[["vec",["f64"]],["f64"]]]],[11,"sample",E,E,27,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,28,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,48,[[["r"],["self"]],["f32"]]],[11,"sample",E,E,43,[[["r"],["self"]],["f32"]]],[11,"sample",E,E,44,[[["r"],["self"]],["f32"]]],[11,"sample",E,E,48,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,43,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,44,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,48,[[["r"],["self"]],["u8"]]],[11,"sample",E,E,48,[[["r"],["self"]],["u16"]]],[11,"sample",E,E,48,[[["r"],["self"]],["u32"]]],[11,"sample",E,E,48,[[["r"],["self"]],["u64"]]],[11,"sample",E,E,48,[[["r"],["self"]],["u128"]]],[11,"sample",E,E,48,[[["r"],["self"]],[R[9]]]],[11,"sample",E,E,48,[[["r"],["self"]],["i8"]]],[11,"sample",E,E,48,[[["r"],["self"]],["i16"]]],[11,"sample",E,E,48,[[["r"],["self"]],["i32"]]],[11,"sample",E,E,48,[[["r"],["self"]],["i64"]]],[11,"sample",E,E,48,[[["r"],["self"]],["i128"]]],[11,"sample",E,E,48,[[["r"],["self"]],["isize"]]],[11,"sample",E,E,48,[[["r"],["self"]],["char"]]],[11,"sample",E,E,42,[[["r"],["self"]],["char"]]],[11,"sample",E,E,48,[[["r"],["self"]],["bool"]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]],[R[52]]]],[11,"sample",E,E,48,[[["r"],["self"]],["wrapping"]]],[11,"sample",E,E,30,[[["r"],["self"]],[T]]],[11,"eq",E,E,5,[[[R[2479]],["self"]],["bool"]]],[11,"eq",R[2491],E,36,[[["self"],["indexvec"]],["bool"]]],[11,"clone",R[2486],E,9,[[["self"]],["uniform"]]],[11,"clone",E,E,49,[[["self"]],["uniformint"]]],[11,"clone",E,E,50,[[["self"]],["uniformfloat"]]],[11,"clone",E,E,51,[[["self"]],["uniformduration"]]],[11,"clone",R[2477],E,10,[[["self"]],["bernoulli"]]],[11,"clone",E,E,11,[[["self"]],[R[2478]]]],[11,"clone",E,E,5,[[["self"]],[R[2479]]]],[11,"clone",E,E,12,[[["self"]],[R[2493]]]],[11,"clone",E,E,13,[[["self"]],["unitcircle"]]],[11,"clone",E,E,14,[[["self"]],["gamma"]]],[11,"clone",E,E,15,[[["self"]],["chisquared"]]],[11,"clone",E,E,16,[[["self"]],["fisherf"]]],[11,"clone",E,E,17,[[["self"]],["studentt"]]],[11,"clone",E,E,18,[[["self"]],["beta"]]],[11,"clone",E,E,45,[[["self"]],["standardnormal"]]],[11,"clone",E,E,19,[[["self"]],["normal"]]],[11,"clone",E,E,20,[[["self"]],["lognormal"]]],[11,"clone",E,E,46,[[["self"]],["exp1"]]],[11,"clone",E,E,21,[[["self"]],["exp"]]],[11,"clone",E,E,22,[[["self"]],["pareto"]]],[11,"clone",E,E,23,[[["self"]],["poisson"]]],[11,"clone",E,E,24,[[["self"]],["binomial"]]],[11,"clone",E,E,25,[[["self"]],["cauchy"]]],[11,"clone",E,E,26,[[["self"]],["dirichlet"]]],[11,"clone",E,E,27,[[["self"]],["triangular"]]],[11,"clone",E,E,28,[[["self"]],["weibull"]]],[11,"clone",E,E,43,[[["self"]],["openclosed01"]]],[11,"clone",E,E,44,[[["self"]],["open01"]]],[11,"clone",E,E,48,[[["self"]],["standard"]]],[11,"clone",E,E,4,[[["self"]],["weighted"]]],[11,"clone",R[2489],E,33,[[["self"]],["reseedingrng"]]],[11,"clone",R[2490],E,35,[[["self"]],["steprng"]]],[11,"clone",R[2487],E,54,[[["self"]],["smallrng"]]],[11,"clone",E,E,55,[[["self"]],["stdrng"]]],[11,"clone",E,E,56,[[["self"]],["threadrng"]]],[11,"clone",R[2491],E,36,[[["self"]],["indexvec"]]],[11,"clone",E,E,59,[[["self"]],[R[2494]]]],[11,"from",R[2486],E,9,[[["range"]],["uniform"]]],[11,"from",E,E,9,[[["rangeinclusive"]],["uniform"]]],[11,"from",R[2491],E,36,[[["u32"],["vec",["u32"]]],["self"]]],[11,"from",E,E,36,[[["vec",[R[9]]],[R[9]]],["self"]]],[11,"next",R[2477],E,47,[[["self"]],[R[52]]]],[11,R[53],E,E,47,[[["self"]]]],[11,"next",R[2491],E,58,[[["self"]],[[R[52],[R[9]]],[R[9]]]]],[11,R[53],E,E,58,[[["self"]]]],[11,"next",E,E,59,[[["self"]],[R[52]]]],[11,R[53],E,E,59,[[["self"]]]],[11,"next",R[2495],E,57,[[["self"]],[R[52]]]],[11,R[53],E,E,57,[[["self"]]]],[11,"len",E,E,57,[[["self"]],[R[9]]]],[11,R[79],R[2487],E,34,[[],["self"]]],[11,R[79],E,E,56,[[],["threadrng"]]],[11,"fmt",R[2486],E,9,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,49,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,50,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,51,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[2477],E,10,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,11,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,5,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,12,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,13,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,14,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,15,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,16,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,17,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,18,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,45,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,19,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,20,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,46,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,21,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,22,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,23,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,24,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,25,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,26,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,27,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,28,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,43,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,44,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,42,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,47,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,48,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,4,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,30,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[2489],E,32,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,33,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[2487],E,34,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[2490],E,35,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[2487],E,54,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,55,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,56,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[2491],E,36,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,58,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,59,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[2495],E,57,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[2477],E,5,[[["self"],[R[29]]],[R[12]]]],[11,R[30],E,E,5,[[["self"]],["str"]]],[11,"cause",E,E,5,[[["self"]],[[R[52],["error"]],["error"]]]],[11,R[19],R[2489],E,32,[[["self"]],["u32"]]],[11,R[20],E,E,32,[[["self"]],["u64"]]],[11,R[21],E,E,32,[[["self"]]]],[11,R[22],E,E,32,[[["self"]],[["error"],[R[12],["error"]]]]],[11,R[19],E,E,33,[[["self"]],["u32"]]],[11,R[20],E,E,33,[[["self"]],["u64"]]],[11,R[21],E,E,33,[[["self"]]]],[11,R[22],E,E,33,[[["self"]],[["error"],[R[12],["error"]]]]],[11,R[19],R[2487],E,34,[[["self"]],["u32"]]],[11,R[20],E,E,34,[[["self"]],["u64"]]],[11,R[21],E,E,34,[[["self"]]]],[11,R[22],E,E,34,[[["self"]],[["error"],[R[12],["error"]]]]],[11,R[19],R[2490],E,35,[[["self"]],["u32"]]],[11,R[20],E,E,35,[[["self"]],["u64"]]],[11,R[21],E,E,35,[[["self"]]]],[11,R[22],E,E,35,[[["self"]],[["error"],[R[12],["error"]]]]],[11,R[19],R[2487],E,54,[[["self"]],["u32"]]],[11,R[20],E,E,54,[[["self"]],["u64"]]],[11,R[21],E,E,54,[[["self"]]]],[11,R[22],E,E,54,[[["self"]],[["error"],[R[12],["error"]]]]],[11,R[19],E,E,55,[[["self"]],["u32"]]],[11,R[20],E,E,55,[[["self"]],["u64"]]],[11,R[21],E,E,55,[[["self"]]]],[11,R[22],E,E,55,[[["self"]],[["error"],[R[12],["error"]]]]],[11,R[19],E,E,56,[[["self"]],["u32"]]],[11,R[20],E,E,56,[[["self"]],["u64"]]],[11,R[21],E,E,56,[[["self"]]]],[11,R[22],E,E,56,[[["self"]],[["error"],[R[12],["error"]]]]],[11,R[23],E,E,54,[[],["self"]]],[11,R[25],E,E,54,[[[R[26]]],[["error"],[R[12],["error"]]]]],[11,R[23],E,E,55,[[],["self"]]],[11,R[25],E,E,55,[[[R[26]]],[["error"],[R[12],["error"]]]]],[11,R[322],"rand",R[323],2,[[],["bool"]]],[11,R[324],E,R[325],2,[[],["bool"]]],[11,R[30],E,R[326],2,[[],["str"]]],[11,"new",E,R[327],3,[[[R[1]],["str"]],["error"]]],[11,R[328],E,R[329],3,[[["e"],[R[1]],["str"]],["error"]]],[11,R[330],E,R[331],3,[[["self"]],[[R[52],["box"]],["box",["error"]]]]],[11,"new",R[2487],R[2531],52,[[],[[R[12],[R[1336],R[1335]]],[R[1335]],[R[1336]]]]],[11,R[2532],E,R[2533],52,[[],[R[1336]]]],[11,"set_rounds",E,R[2534],52,[[["self"],["u8"]]]],[11,"test_timer",E,R[2535],52,[[["self"]],[[R[1335]],[R[12],["u8",R[1335]]],["u8"]]]],[11,R[2536],E,R[2537],52,[[["self"],["bool"]],["i64"]]],[11,"new",E,R[2518],53,[[],[["error"],[R[12],["osrng","error"]],["osrng"]]]]],"p":[[8,"RngCore"],[8,R[36]],[4,R[32]],[3,"Error"],[3,"Weighted"],[4,R[2496]],[8,R[2497]],[8,R[2498]],[8,R[2499]],[3,"Uniform"],[3,"Bernoulli"],[3,R[2500]],[3,R[2501]],[3,"UnitCircle"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"Beta"],[3,"Normal"],[3,"LogNormal"],[3,"Exp"],[3,"Pareto"],[3,"Poisson"],[3,"Binomial"],[3,"Cauchy"],[3,"Dirichlet"],[3,"Triangular"],[3,"Weibull"],[8,R[2502]],[3,R[2503]],[4,R[2520]],[3,"ReadRng"],[3,R[2504]],[3,"EntropyRng"],[3,"StepRng"],[4,"IndexVec"],[8,R[2505]],[8,R[2506]],[8,"Rng"],[8,R[2507]],[8,R[2508]],[3,R[2509]],[3,R[2510]],[3,"Open01"],[3,R[2511]],[3,"Exp1"],[3,"DistIter"],[3,"Standard"],[3,"UniformInt"],[3,R[2512]],[3,R[2513]],[3,R[2538]],[3,"OsRng"],[3,"SmallRng"],[3,"StdRng"],[3,"ThreadRng"],[3,R[2514]],[4,R[2515]],[4,R[2516]]]};
searchIndex["rand_hc"]={"doc":"The HC128 random number generator.","i":[[3,"Hc128Rng","rand_hc",R[1332],N,N],[3,"Hc128Core",E,"The core of `Hc128Rng`, used with `BlockRng`.",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,"into",E,E,0,[[],[U]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[[T],["self"]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,"into",E,E,1,[[],[U]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,[[[T],["self"]]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,1,[[[R[29]],["self"]],[R[12]]]],[11,"clone",E,E,0,[[["self"]],["hc128rng"]]],[11,"clone",E,E,1,[[["self"]],["hc128core"]]],[11,R[19],E,E,0,[[["self"]],["u32"]]],[11,R[20],E,E,0,[[["self"]],["u64"]]],[11,R[21],E,E,0,[[["self"]]]],[11,R[22],E,E,0,[[["self"]],[["error"],[R[12],["error"]]]]],[11,R[23],E,E,0,[[],["self"]]],[11,R[25],E,E,0,[[[R[26]]],[["error"],[R[12],["error"]]]]],[11,R[23],E,"Create an HC-128 random number generator with a seed. The…",1,[[],["self"]]],[11,R[2093],E,E,1,[[["self"]]]]],"p":[[3,"Hc128Rng"],[3,"Hc128Core"]]};
searchIndex["rand_os"]={"doc":"Interface to the random number generator of the operating…","i":[[3,"OsRng","rand_os",R[2517],N,N],[11,"new",E,R[2518],0,[[],[["osrng"],[R[12],["osrng","error"]],["error"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[[T],["self"]]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"clone",E,E,0,[[["self"]],["osrng"]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[R[12]]]],[11,R[19],E,E,0,[[["self"]],["u32"]]],[11,R[20],E,E,0,[[["self"]],["u64"]]],[11,R[21],E,E,0,[[["self"]]]],[11,R[22],E,E,0,[[["self"]],[[R[12],["error"]],["error"]]]]],"p":[[3,"OsRng"]]};
searchIndex["rand_pcg"]={"doc":"The PCG random number generators.","i":[[3,"Lcg64Xsh32","rand_pcg","A PCG random number generator (XSH RR 64/32 (LCG) variant).",N,N],[3,R[1333],E,"A PCG random number generator (XSL 128/64 (MCG) variant).",N,N],[11,"new",E,"Construct an instance compatible with PCG seed and stream.",0,[[["u64"]],["self"]]],[11,"new",E,"Construct an instance compatible with PCG seed.",1,[[["u128"]],["self"]]],[6,"Pcg32",E,"`Lcg64Xsh32` is also officially known as `pcg32`.",N,N],[6,"Pcg64Mcg",E,"A friendly name for `Mcg128Xsl64`.",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,"into",E,E,0,[[],[U]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[[T],["self"]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,"into",E,E,1,[[],[U]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,[[[T],["self"]]]],[11,"fmt",E,E,0,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,1,[[[R[29]],["self"]],[R[12]]]],[11,"clone",E,E,0,[[["self"]],["lcg64xsh32"]]],[11,"clone",E,E,1,[[["self"]],["mcg128xsl64"]]],[11,R[19],E,E,0,[[["self"]],["u32"]]],[11,R[20],E,E,0,[[["self"]],["u64"]]],[11,R[21],E,E,0,[[["self"]]]],[11,R[22],E,E,0,[[["self"]],[[R[12],["error"]],["error"]]]],[11,R[19],E,E,1,[[["self"]],["u32"]]],[11,R[20],E,E,1,[[["self"]],["u64"]]],[11,R[21],E,E,1,[[["self"]]]],[11,R[22],E,E,1,[[["self"]],[[R[12],["error"]],["error"]]]],[11,R[23],E,E,0,[[],["self"]]],[11,R[23],E,E,1,[[],["self"]]]],"p":[[3,"Lcg64Xsh32"],[3,R[1333]]]};
searchIndex["regex"]={"doc":"This crate provides a library for parsing, compiling, and…","i":[[3,R[3440],"regex",R[3441],N,N],[3,R[3442],E,R[3443],N,N],[3,"RegexSet",E,R[3458],N,N],[3,R[3547],E,R[3459],N,N],[3,R[3460],E,R[3461],N,N],[3,R[3462],E,R[3463],N,N],[3,"Regex",E,"A compiled regular expression for matching Unicode strings.",N,N],[3,"Match",E,R[3444],N,N],[3,"Captures",E,"Captures represents a group of captured strings for a…",N,N],[3,R[3450],E,R[3451],N,N],[3,"Matches",E,R[3445],N,N],[3,R[3446],E,R[3447],N,N],[3,R[3454],E,R[3455],N,N],[3,R[3452],E,R[3453],N,N],[3,R[3456],E,R[3457],N,N],[3,"NoExpand",E,"`NoExpand` indicates literal string replacement.",N,N],[12,"0",E,E,0,N],[3,"Split",E,R[3448],N,N],[3,"SplitN",E,R[3449],N,N],[4,"Error",E,"An error that occurred during parsing or compiling a…",N,N],[13,"Syntax",E,"A syntax error.",1,N],[13,"CompiledTooBig",E,"The compiled program exceeded the set size limit. The…",1,N],[5,"escape",E,R[3548],N,[[["str"]],["string"]]],[0,"bytes",E,"Match regular expressions on arbitrary bytes.",N,N],[3,R[3440],R[3476],R[3441],N,N],[3,R[3442],E,R[3443],N,N],[3,"Match",E,R[3444],N,N],[3,"Regex",E,"A compiled regular expression for matching arbitrary bytes.",N,N],[3,"Matches",E,R[3445],N,N],[3,R[3446],E,R[3447],N,N],[3,"Split",E,R[3448],N,N],[3,"SplitN",E,R[3449],N,N],[3,R[3450],E,R[3451],N,N],[3,R[3452],E,R[3453],N,N],[3,"Captures",E,"Captures represents a group of captured byte strings for a…",N,N],[3,R[3454],E,R[3455],N,N],[3,R[3456],E,R[3457],N,N],[3,"NoExpand",E,"`NoExpand` indicates literal byte string replacement.",N,N],[12,"0",E,E,2,N],[3,"RegexSet",E,R[3458],N,N],[3,R[3547],E,R[3459],N,N],[3,R[3460],E,R[3461],N,N],[3,R[3462],E,R[3463],N,N],[8,"Replacer",E,R[3540],N,N],[10,R[3541],E,R[3542],3,[[[R[3505]],["self"],["vec"]]]],[11,R[3480],E,R[3481],3,[[["self"]],[[R[52],["cow"]],["cow"]]]],[11,"by_ref",E,R[3482],3,[[["self"]],[R[3483]]]],[11,"new",E,R[3465],4,[[["str"]],[R[3464]]]],[11,"build",E,R[3466],4,[[["self"]],[["regex"],["error"],[R[12],["regex","error"]]]]],[11,R[647],E,R[3467],4,[[["self"],["bool"]],[R[3464]]]],[11,R[648],E,R[3468],4,[[["self"],["bool"]],[R[3464]]]],[11,R[649],E,R[3469],4,[[["self"],["bool"]],[R[3464]]]],[11,R[650],E,R[3470],4,[[["self"],["bool"]],[R[3464]]]],[11,R[645],E,R[3471],4,[[["self"],["bool"]],[R[3464]]]],[11,"unicode",E,R[3472],4,[[["self"],["bool"]],[R[3464]]]],[11,"octal",E,R[643],4,[[["self"],["bool"]],[R[3464]]]],[11,R[3478],E,R[3473],4,[[["self"],[R[9]]],[R[3464]]]],[11,R[3474],E,R[3475],4,[[["self"],[R[9]]],[R[3464]]]],[11,R[641],E,R[642],4,[[["u32"],["self"]],[R[3464]]]],[11,"new","regex",R[3465],5,[[["str"]],[R[3464]]]],[11,"build",E,R[3466],5,[[["self"]],[["regex"],["error"],[R[12],["regex","error"]]]]],[11,R[647],E,R[3467],5,[[["self"],["bool"]],[R[3464]]]],[11,R[648],E,R[3468],5,[[["self"],["bool"]],[R[3464]]]],[11,R[649],E,R[3469],5,[[["self"],["bool"]],[R[3464]]]],[11,R[650],E,R[3470],5,[[["self"],["bool"]],[R[3464]]]],[11,R[645],E,R[3471],5,[[["self"],["bool"]],[R[3464]]]],[11,"unicode",E,R[3472],5,[[["self"],["bool"]],[R[3464]]]],[11,"octal",E,R[643],5,[[["self"],["bool"]],[R[3464]]]],[11,R[3478],E,R[3473],5,[[["self"],[R[9]]],[R[3464]]]],[11,R[3474],E,R[3475],5,[[["self"],[R[9]]],[R[3464]]]],[11,R[641],E,R[642],5,[[["u32"],["self"]],[R[3464]]]],[11,"new",R[3476],R[3465],6,[[["i"]],[R[3477]]]],[11,"build",E,R[3479],6,[[["self"]],[[R[12],[R[3486],"error"]],[R[3486]],["error"]]]],[11,R[647],E,R[3467],6,[[["self"],["bool"]],[R[3477]]]],[11,R[648],E,R[3468],6,[[["self"],["bool"]],[R[3477]]]],[11,R[649],E,R[3469],6,[[["self"],["bool"]],[R[3477]]]],[11,R[650],E,R[3470],6,[[["self"],["bool"]],[R[3477]]]],[11,R[645],E,R[3471],6,[[["self"],["bool"]],[R[3477]]]],[11,"unicode",E,R[3472],6,[[["self"],["bool"]],[R[3477]]]],[11,"octal",E,R[643],6,[[["self"],["bool"]],[R[3477]]]],[11,R[3478],E,R[3473],6,[[["self"],[R[9]]],[R[3477]]]],[11,R[3474],E,R[3475],6,[[["self"],[R[9]]],[R[3477]]]],[11,R[641],E,R[642],6,[[["u32"],["self"]],[R[3477]]]],[11,"new","regex",R[3465],7,[[["i"]],[R[3477]]]],[11,"build",E,R[3479],7,[[["self"]],[["error"],[R[3486]],[R[12],[R[3486],"error"]]]]],[11,R[647],E,R[3467],7,[[["self"],["bool"]],[R[3477]]]],[11,R[648],E,R[3468],7,[[["self"],["bool"]],[R[3477]]]],[11,R[649],E,R[3469],7,[[["self"],["bool"]],[R[3477]]]],[11,R[650],E,R[3470],7,[[["self"],["bool"]],[R[3477]]]],[11,R[645],E,R[3471],7,[[["self"],["bool"]],[R[3477]]]],[11,"unicode",E,R[3472],7,[[["self"],["bool"]],[R[3477]]]],[11,"octal",E,R[643],7,[[["self"],["bool"]],[R[3477]]]],[11,R[3478],E,R[3473],7,[[["self"],[R[9]]],[R[3477]]]],[11,R[3474],E,R[3475],7,[[["self"],[R[9]]],[R[3477]]]],[11,R[641],E,R[642],7,[[["u32"],["self"]],[R[3477]]]],[11,R[3480],R[3476],R[3481],3,[[["self"]],[[R[52],["cow"]],["cow"]]]],[11,"by_ref",E,R[3482],3,[[["self"]],[R[3483]]]],[11,"start",E,R[3497],8,[[["self"]],[R[9]]]],[11,"end",E,R[3498],8,[[["self"]],[R[9]]]],[11,"as_bytes",E,R[3499],8,[[["self"]]]],[11,"new",E,R[3500],9,[[["str"]],[["regex"],["error"],[R[12],["regex","error"]]]]],[11,"is_match",E,R[3501],9,[[["self"]],["bool"]]],[11,"find",E,R[3502],9,[[["self"]],[["match"],[R[52],["match"]]]]],[11,"find_iter",E,R[3503],9,[[["self"]],["matches"]]],[11,R[3505],E,R[3504],9,[[["self"]],[[R[52],[R[3505]]],[R[3505]]]]],[11,R[3506],E,R[3507],9,[[["self"]],[R[3508]]]],[11,"split",E,R[3509],9,[[["self"]],["split"]]],[11,"splitn",E,R[3510],9,[[["self"],[R[9]]],["splitn"]]],[11,"replace",E,R[3511],9,[[["self"],["replacer"]],["cow"]]],[11,R[3512],E,R[3513],9,[[["self"],["replacer"]],["cow"]]],[11,"replacen",E,R[3514],9,[[["self"],["replacer"],[R[9]]],["cow"]]],[11,R[3515],E,R[3516],9,[[["self"]],[[R[52],[R[9]]],[R[9]]]]],[11,R[3517],E,R[3518],9,[[["self"],[R[9]]],[[R[52],[R[9]]],[R[9]]]]],[11,R[3519],E,R[3520],9,[[["self"],[R[9]]],["bool"]]],[11,"find_at",E,R[3521],9,[[["self"],[R[9]]],[["match"],[R[52],["match"]]]]],[11,R[3522],E,R[3523],9,[[[R[3484]],["self"]],[["match"],[R[52],["match"]]]]],[11,R[3524],E,"Returns the same as `captures_read`, but starts the search…",9,[[[R[3484]],["self"],[R[9]]],[["match"],[R[52],["match"]]]]],[11,"as_str",E,R[3525],9,[[["self"]],["str"]]],[11,R[3526],E,R[3527],9,[[["self"]],[R[3528]]]],[11,R[3529],E,R[3530],9,[[["self"]],[R[9]]]],[11,R[3531],E,R[3532],9,[[["self"]],[R[3484]]]],[11,"get",E,R[3533],10,[[["self"],[R[9]]],[R[52]]]],[11,"len",E,R[3534],10,[[["self"]],[R[9]]]],[11,"get",E,R[3535],11,[[["self"],[R[9]]],[["match"],[R[52],["match"]]]]],[11,"name",E,R[3536],11,[[["str"],["self"]],[["match"],[R[52],["match"]]]]],[11,"iter",E,R[3455],11,[[["self"]],[R[3537]]]],[11,"expand",E,R[3538],11,[[["self"],["vec"]]]],[11,"len",E,R[3539],11,[[["self"]],[R[9]]]],[11,"new","regex",R[3485],12,[[["i"]],[["error"],[R[3486]],[R[12],[R[3486],"error"]]]]],[11,"is_match",E,R[3487],12,[[["str"],["self"]],["bool"]]],[11,"matches",E,R[3488],12,[[["str"],["self"]],[R[3543]]]],[11,"len",E,R[3489],12,[[["self"]],[R[9]]]],[11,"patterns",E,R[3490],12,[[["self"]]]],[11,R[3491],E,R[3492],13,[[["self"]],["bool"]]],[11,"matched",E,R[3493],13,[[["self"],[R[9]]],["bool"]]],[11,"len",E,R[3494],13,[[["self"]],[R[9]]]],[11,"iter",E,R[3495],13,[[["self"]],[R[3496]]]],[11,"new",R[3476],R[3485],14,[[["i"]],[[R[12],[R[3486],"error"]],[R[3486]],["error"]]]],[11,"is_match",E,R[3487],14,[[["self"]],["bool"]]],[11,"matches",E,R[3488],14,[[["self"]],[R[3543]]]],[11,"len",E,R[3489],14,[[["self"]],[R[9]]]],[11,"patterns",E,R[3490],14,[[["self"]]]],[11,R[3491],E,R[3492],15,[[["self"]],["bool"]]],[11,"matched",E,R[3493],15,[[["self"],[R[9]]],["bool"]]],[11,"len",E,R[3494],15,[[["self"]],[R[9]]]],[11,"iter",E,R[3495],15,[[["self"]],[R[3496]]]],[11,"start","regex",R[3497],16,[[["self"]],[R[9]]]],[11,"end",E,R[3498],16,[[["self"]],[R[9]]]],[11,"as_str",E,R[3499],16,[[["self"]],["str"]]],[11,"new",E,R[3500],17,[[["str"]],[["regex"],["error"],[R[12],["regex","error"]]]]],[11,"is_match",E,R[3501],17,[[["str"],["self"]],["bool"]]],[11,"find",E,R[3502],17,[[["str"],["self"]],[[R[52],["match"]],["match"]]]],[11,"find_iter",E,R[3503],17,[[["self"],["str"]],["matches"]]],[11,R[3505],E,R[3504],17,[[["str"],["self"]],[[R[52],[R[3505]]],[R[3505]]]]],[11,R[3506],E,R[3507],17,[[["self"],["str"]],[R[3508]]]],[11,"split",E,R[3509],17,[[["self"],["str"]],["split"]]],[11,"splitn",E,R[3510],17,[[["self"],["str"],[R[9]]],["splitn"]]],[11,"replace",E,R[3511],17,[[["replacer"],["str"],["self"]],[["str"],["cow",["str"]]]]],[11,R[3512],E,R[3513],17,[[["replacer"],["str"],["self"]],[["str"],["cow",["str"]]]]],[11,"replacen",E,R[3514],17,[[["replacer"],["str"],["self"],[R[9]]],[["str"],["cow",["str"]]]]],[11,R[3515],E,R[3516],17,[[["str"],["self"]],[[R[52],[R[9]]],[R[9]]]]],[11,R[3517],E,R[3518],17,[[["str"],["self"],[R[9]]],[[R[52],[R[9]]],[R[9]]]]],[11,R[3519],E,R[3520],17,[[["str"],["self"],[R[9]]],["bool"]]],[11,"find_at",E,R[3521],17,[[["str"],["self"],[R[9]]],[[R[52],["match"]],["match"]]]],[11,R[3522],E,R[3523],17,[[["str"],["self"],[R[3484]]],[[R[52],["match"]],["match"]]]],[11,R[3524],E,"Returns the same as captures, but starts the search at the…",17,[[["str"],["self"],[R[3484]],[R[9]]],[[R[52],["match"]],["match"]]]],[11,"as_str",E,R[3525],17,[[["self"]],["str"]]],[11,R[3526],E,R[3527],17,[[["self"]],[R[3528]]]],[11,R[3529],E,R[3530],17,[[["self"]],[R[9]]]],[11,R[3531],E,R[3532],17,[[["self"]],[R[3484]]]],[11,"get",E,R[3533],18,[[["self"],[R[9]]],[R[52]]]],[11,"len",E,R[3534],18,[[["self"]],[R[9]]]],[11,"get",E,R[3535],19,[[["self"],[R[9]]],[[R[52],["match"]],["match"]]]],[11,"name",E,R[3536],19,[[["str"],["self"]],[[R[52],["match"]],["match"]]]],[11,"iter",E,R[3455],19,[[["self"]],[R[3537]]]],[11,"expand",E,R[3538],19,[[["string"],["str"],["self"]]]],[11,"len",E,R[3539],19,[[["self"]],[R[9]]]],[8,"Replacer",E,R[3540],N,N],[10,R[3541],E,R[3542],20,[[["string"],[R[3505]],["self"]]]],[11,R[3480],E,R[3546],20,[[["self"]],[[R[52],["cow"]],["cow",["str"]]]]],[11,"by_ref",E,R[3482],20,[[["self"]],[R[3483]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,R[18],E,E,5,[[["self"]],[R[40]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[11],E,E,7,[[[U]],[R[12]]]],[11,R[39],E,E,7,[[["self"]],[T]]],[11,R[13],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[],[R[12]]]],[11,R[18],E,E,7,[[["self"]],[R[40]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[16],E,E,12,[[["self"]],[T]]],[11,R[17],E,E,12,[[[T],["self"]]]],[11,R[11],E,E,12,[[[U]],[R[12]]]],[11,R[39],E,E,12,[[["self"]],[T]]],[11,R[13],E,E,12,[[["self"]],[T]]],[11,R[14],E,E,12,[[],[R[12]]]],[11,R[18],E,E,12,[[["self"]],[R[40]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[48],E,E,13,[[],["i"]]],[11,"into",E,E,13,[[],[U]]],[11,R[16],E,E,13,[[["self"]],[T]]],[11,R[17],E,E,13,[[[T],["self"]]]],[11,R[11],E,E,13,[[[U]],[R[12]]]],[11,R[39],E,E,13,[[["self"]],[T]]],[11,R[13],E,E,13,[[["self"]],[T]]],[11,R[14],E,E,13,[[],[R[12]]]],[11,R[18],E,E,13,[[["self"]],[R[40]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[48],E,E,21,[[],["i"]]],[11,"into",E,E,21,[[],[U]]],[11,R[11],E,E,21,[[[U]],[R[12]]]],[11,R[39],E,E,21,[[["self"]],[T]]],[11,R[13],E,E,21,[[["self"]],[T]]],[11,R[14],E,E,21,[[],[R[12]]]],[11,R[18],E,E,21,[[["self"]],[R[40]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[48],E,E,22,[[],["i"]]],[11,"into",E,E,22,[[],[U]]],[11,R[16],E,E,22,[[["self"]],[T]]],[11,R[17],E,E,22,[[[T],["self"]]]],[11,R[11],E,E,22,[[[U]],[R[12]]]],[11,R[39],E,E,22,[[["self"]],[T]]],[11,R[13],E,E,22,[[["self"]],[T]]],[11,R[14],E,E,22,[[],[R[12]]]],[11,R[18],E,E,22,[[["self"]],[R[40]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[16],E,E,17,[[["self"]],[T]]],[11,R[17],E,E,17,[[[T],["self"]]]],[11,R[170],E,E,17,[[["self"]],["string"]]],[11,R[11],E,E,17,[[[U]],[R[12]]]],[11,R[39],E,E,17,[[["self"]],[T]]],[11,R[13],E,E,17,[[["self"]],[T]]],[11,R[14],E,E,17,[[],[R[12]]]],[11,R[18],E,E,17,[[["self"]],[R[40]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[16],E,E,16,[[["self"]],[T]]],[11,R[17],E,E,16,[[[T],["self"]]]],[11,R[11],E,E,16,[[[U]],[R[12]]]],[11,R[39],E,E,16,[[["self"]],[T]]],[11,R[13],E,E,16,[[["self"]],[T]]],[11,R[14],E,E,16,[[],[R[12]]]],[11,R[18],E,E,16,[[["self"]],[R[40]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[11],E,E,19,[[[U]],[R[12]]]],[11,R[39],E,E,19,[[["self"]],[T]]],[11,R[13],E,E,19,[[["self"]],[T]]],[11,R[14],E,E,19,[[],[R[12]]]],[11,R[18],E,E,19,[[["self"]],[R[40]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[48],E,E,23,[[],["i"]]],[11,"into",E,E,23,[[],[U]]],[11,R[11],E,E,23,[[[U]],[R[12]]]],[11,R[39],E,E,23,[[["self"]],[T]]],[11,R[13],E,E,23,[[["self"]],[T]]],[11,R[14],E,E,23,[[],[R[12]]]],[11,R[18],E,E,23,[[["self"]],[R[40]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[48],E,E,24,[[],["i"]]],[11,"into",E,E,24,[[],[U]]],[11,R[11],E,E,24,[[[U]],[R[12]]]],[11,R[39],E,E,24,[[["self"]],[T]]],[11,R[13],E,E,24,[[["self"]],[T]]],[11,R[14],E,E,24,[[],[R[12]]]],[11,R[18],E,E,24,[[["self"]],[R[40]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[48],E,E,25,[[],["i"]]],[11,"into",E,E,25,[[],[U]]],[11,R[11],E,E,25,[[[U]],[R[12]]]],[11,R[39],E,E,25,[[["self"]],[T]]],[11,R[13],E,E,25,[[["self"]],[T]]],[11,R[14],E,E,25,[[],[R[12]]]],[11,R[18],E,E,25,[[["self"]],[R[40]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[48],E,E,26,[[],["i"]]],[11,"into",E,E,26,[[],[U]]],[11,R[11],E,E,26,[[[U]],[R[12]]]],[11,R[39],E,E,26,[[["self"]],[T]]],[11,R[13],E,E,26,[[["self"]],[T]]],[11,R[14],E,E,26,[[],[R[12]]]],[11,R[18],E,E,26,[[["self"]],[R[40]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[16],E,E,18,[[["self"]],[T]]],[11,R[17],E,E,18,[[[T],["self"]]]],[11,R[11],E,E,18,[[[U]],[R[12]]]],[11,R[39],E,E,18,[[["self"]],[T]]],[11,R[13],E,E,18,[[["self"]],[T]]],[11,R[14],E,E,18,[[],[R[12]]]],[11,R[18],E,E,18,[[["self"]],[R[40]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[11],E,E,27,[[[U]],[R[12]]]],[11,R[39],E,E,27,[[["self"]],[T]]],[11,R[13],E,E,27,[[["self"]],[T]]],[11,R[14],E,E,27,[[],[R[12]]]],[11,R[18],E,E,27,[[["self"]],[R[40]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[48],E,E,28,[[],["i"]]],[11,"into",E,E,28,[[],[U]]],[11,R[11],E,E,28,[[[U]],[R[12]]]],[11,R[39],E,E,28,[[["self"]],[T]]],[11,R[13],E,E,28,[[["self"]],[T]]],[11,R[14],E,E,28,[[],[R[12]]]],[11,R[18],E,E,28,[[["self"]],[R[40]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[48],E,E,29,[[],["i"]]],[11,"into",E,E,29,[[],[U]]],[11,R[11],E,E,29,[[[U]],[R[12]]]],[11,R[39],E,E,29,[[["self"]],[T]]],[11,R[13],E,E,29,[[["self"]],[T]]],[11,R[14],E,E,29,[[],[R[12]]]],[11,R[18],E,E,29,[[["self"]],[R[40]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,[[[T],["self"]]]],[11,R[170],E,E,1,[[["self"]],["string"]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",R[3476],E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[11],E,E,6,[[[U]],[R[12]]]],[11,R[39],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[],[R[12]]]],[11,R[18],E,E,6,[[["self"]],[R[40]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[16],E,E,8,[[["self"]],[T]]],[11,R[17],E,E,8,[[[T],["self"]]]],[11,R[11],E,E,8,[[[U]],[R[12]]]],[11,R[39],E,E,8,[[["self"]],[T]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[],[R[12]]]],[11,R[18],E,E,8,[[["self"]],[R[40]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[16],E,E,9,[[["self"]],[T]]],[11,R[17],E,E,9,[[[T],["self"]]]],[11,R[170],E,E,9,[[["self"]],["string"]]],[11,R[11],E,E,9,[[[U]],[R[12]]]],[11,R[39],E,E,9,[[["self"]],[T]]],[11,R[13],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[],[R[12]]]],[11,R[18],E,E,9,[[["self"]],[R[40]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[48],E,E,30,[[],["i"]]],[11,"into",E,E,30,[[],[U]]],[11,R[11],E,E,30,[[[U]],[R[12]]]],[11,R[39],E,E,30,[[["self"]],[T]]],[11,R[13],E,E,30,[[["self"]],[T]]],[11,R[14],E,E,30,[[],[R[12]]]],[11,R[18],E,E,30,[[["self"]],[R[40]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[48],E,E,31,[[],["i"]]],[11,"into",E,E,31,[[],[U]]],[11,R[11],E,E,31,[[[U]],[R[12]]]],[11,R[39],E,E,31,[[["self"]],[T]]],[11,R[13],E,E,31,[[["self"]],[T]]],[11,R[14],E,E,31,[[],[R[12]]]],[11,R[18],E,E,31,[[["self"]],[R[40]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[48],E,E,32,[[],["i"]]],[11,"into",E,E,32,[[],[U]]],[11,R[11],E,E,32,[[[U]],[R[12]]]],[11,R[39],E,E,32,[[["self"]],[T]]],[11,R[13],E,E,32,[[["self"]],[T]]],[11,R[14],E,E,32,[[],[R[12]]]],[11,R[18],E,E,32,[[["self"]],[R[40]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[48],E,E,33,[[],["i"]]],[11,"into",E,E,33,[[],[U]]],[11,R[11],E,E,33,[[[U]],[R[12]]]],[11,R[39],E,E,33,[[["self"]],[T]]],[11,R[13],E,E,33,[[["self"]],[T]]],[11,R[14],E,E,33,[[],[R[12]]]],[11,R[18],E,E,33,[[["self"]],[R[40]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[48],E,E,34,[[],["i"]]],[11,"into",E,E,34,[[],[U]]],[11,R[11],E,E,34,[[[U]],[R[12]]]],[11,R[39],E,E,34,[[["self"]],[T]]],[11,R[13],E,E,34,[[["self"]],[T]]],[11,R[14],E,E,34,[[],[R[12]]]],[11,R[18],E,E,34,[[["self"]],[R[40]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[16],E,E,10,[[["self"]],[T]]],[11,R[17],E,E,10,[[[T],["self"]]]],[11,R[11],E,E,10,[[[U]],[R[12]]]],[11,R[39],E,E,10,[[["self"]],[T]]],[11,R[13],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[],[R[12]]]],[11,R[18],E,E,10,[[["self"]],[R[40]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[11],E,E,11,[[[U]],[R[12]]]],[11,R[39],E,E,11,[[["self"]],[T]]],[11,R[13],E,E,11,[[["self"]],[T]]],[11,R[14],E,E,11,[[],[R[12]]]],[11,R[18],E,E,11,[[["self"]],[R[40]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[48],E,E,35,[[],["i"]]],[11,"into",E,E,35,[[],[U]]],[11,R[11],E,E,35,[[[U]],[R[12]]]],[11,R[39],E,E,35,[[["self"]],[T]]],[11,R[13],E,E,35,[[["self"]],[T]]],[11,R[14],E,E,35,[[],[R[12]]]],[11,R[18],E,E,35,[[["self"]],[R[40]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,R[11],E,E,36,[[[U]],[R[12]]]],[11,R[39],E,E,36,[[["self"]],[T]]],[11,R[13],E,E,36,[[["self"]],[T]]],[11,R[14],E,E,36,[[],[R[12]]]],[11,R[18],E,E,36,[[["self"]],[R[40]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[16],E,E,14,[[["self"]],[T]]],[11,R[17],E,E,14,[[[T],["self"]]]],[11,R[11],E,E,14,[[[U]],[R[12]]]],[11,R[39],E,E,14,[[["self"]],[T]]],[11,R[13],E,E,14,[[["self"]],[T]]],[11,R[14],E,E,14,[[],[R[12]]]],[11,R[18],E,E,14,[[["self"]],[R[40]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[48],E,E,15,[[],["i"]]],[11,"into",E,E,15,[[],[U]]],[11,R[16],E,E,15,[[["self"]],[T]]],[11,R[17],E,E,15,[[[T],["self"]]]],[11,R[11],E,E,15,[[[U]],[R[12]]]],[11,R[39],E,E,15,[[["self"]],[T]]],[11,R[13],E,E,15,[[["self"]],[T]]],[11,R[14],E,E,15,[[],[R[12]]]],[11,R[18],E,E,15,[[["self"]],[R[40]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[48],E,E,37,[[],["i"]]],[11,"into",E,E,37,[[],[U]]],[11,R[11],E,E,37,[[[U]],[R[12]]]],[11,R[39],E,E,37,[[["self"]],[T]]],[11,R[13],E,E,37,[[["self"]],[T]]],[11,R[14],E,E,37,[[],[R[12]]]],[11,R[18],E,E,37,[[["self"]],[R[40]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[48],E,E,38,[[],["i"]]],[11,"into",E,E,38,[[],[U]]],[11,R[16],E,E,38,[[["self"]],[T]]],[11,R[17],E,E,38,[[[T],["self"]]]],[11,R[11],E,E,38,[[[U]],[R[12]]]],[11,R[39],E,E,38,[[["self"]],[T]]],[11,R[13],E,E,38,[[["self"]],[T]]],[11,R[14],E,E,38,[[],[R[12]]]],[11,R[18],E,E,38,[[["self"]],[R[40]]]],[11,R[3541],E,E,36,[[[R[3505]],["self"],["vec"]]]],[11,R[3480],E,E,36,[[["self"]],[[R[52],["cow"]],["cow"]]]],[11,R[3541],E,E,2,[[[R[3505]],["self"],["vec"]]]],[11,R[3480],E,E,2,[[["self"]],[[R[52],["cow"]],["cow"]]]],[11,R[3541],"regex",E,27,[[["string"],[R[3505]],["self"]]]],[11,R[3480],E,E,27,[[["self"]],[["cow",["str"]],[R[52],["cow"]]]]],[11,R[3541],E,E,0,[[["string"],[R[3505]],["self"]]]],[11,R[3480],E,E,0,[[["self"]],[["cow",["str"]],[R[52],["cow"]]]]],[11,"eq",E,E,1,[[["error"],["self"]],["bool"]]],[11,"ne",E,E,1,[[["error"],["self"]],["bool"]]],[11,"eq",R[3476],E,8,[[["self"],["match"]],["bool"]]],[11,"ne",E,E,8,[[["self"],["match"]],["bool"]]],[11,"eq","regex",E,16,[[["match"],["self"]],["bool"]]],[11,"ne",E,E,16,[[["match"],["self"]],["bool"]]],[11,R[49],E,E,21,[[["self"]],[[R[52],[R[9]]],[R[9]]]]],[11,R[49],E,E,22,[[["self"]],[[R[52],[R[9]]],[R[9]]]]],[11,R[49],R[3476],E,37,[[["self"]],[[R[52],[R[9]]],[R[9]]]]],[11,R[49],E,E,38,[[["self"]],[[R[52],[R[9]]],[R[9]]]]],[11,"clone","regex",E,1,[[["self"]],["error"]]],[11,"clone",R[3476],E,8,[[["self"]],["match"]]],[11,"clone",E,E,9,[[["self"]],["regex"]]],[11,"clone",E,E,10,[[["self"]],[R[3484]]]],[11,"clone","regex",E,12,[[["self"]],[R[3486]]]],[11,"clone",E,E,13,[[["self"]],[R[3543]]]],[11,"clone",E,E,22,[[["self"]],[R[3496]]]],[11,"clone",R[3476],E,14,[[["self"]],[R[3486]]]],[11,"clone",E,E,15,[[["self"]],[R[3543]]]],[11,"clone",E,E,38,[[["self"]],[R[3496]]]],[11,"clone","regex",E,16,[[["self"]],["match"]]],[11,"clone",E,E,17,[[["self"]],["regex"]]],[11,"clone",E,E,18,[[["self"]],[R[3484]]]],[11,R[48],E,E,13,[[]]],[11,R[48],R[3476],E,15,[[]]],[11,"next",E,E,30,[[["self"]],[["match"],[R[52],["match"]]]]],[11,"next",E,E,31,[[["self"]],[[R[52],[R[3505]]],[R[3505]]]]],[11,"next",E,E,32,[[["self"]],[R[52]]]],[11,"next",E,E,33,[[["self"]],[R[52]]]],[11,"next",E,E,34,[[["self"]],[[R[52],["str"]],[R[52],[R[52]]]]]],[11,R[53],E,E,34,[[["self"]]]],[11,"next",E,E,35,[[["self"]],[[R[52],[R[52]]],[R[52],["match"]]]]],[11,"next","regex",E,21,[[["self"]],[[R[52],[R[9]]],[R[9]]]]],[11,R[53],E,E,21,[[["self"]]]],[11,"next",E,E,22,[[["self"]],[[R[52],[R[9]]],[R[9]]]]],[11,R[53],E,E,22,[[["self"]]]],[11,"next",R[3476],E,37,[[["self"]],[[R[52],[R[9]]],[R[9]]]]],[11,R[53],E,E,37,[[["self"]]]],[11,"next",E,E,38,[[["self"]],[[R[52],[R[9]]],[R[9]]]]],[11,R[53],E,E,38,[[["self"]]]],[11,"next","regex",E,23,[[["self"]],[[R[52],["str"]],[R[52],[R[52]]]]]],[11,R[53],E,E,23,[[["self"]]]],[11,"next",E,E,28,[[["self"]],[["str"],[R[52],["str"]]]]],[11,"next",E,E,29,[[["self"]],[["str"],[R[52],["str"]]]]],[11,"next",E,E,26,[[["self"]],[[R[52],[R[52]]],[R[52],["match"]]]]],[11,"next",E,E,25,[[["self"]],[[R[52],[R[3505]]],[R[3505]]]]],[11,"next",E,E,24,[[["self"]],[[R[52],["match"]],["match"]]]],[11,R[407],R[3476],R[3544],9,[[["str"]],[["regex"],["error"],[R[12],["regex","error"]]]]],[11,R[407],"regex",R[3544],17,[[["str"]],[["regex"],["error"],[R[12],["regex","error"]]]]],[11,"fmt",E,E,1,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[3476],E,8,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,R[3545],9,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,10,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,11,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,36,[[[R[29]],["self"]],[R[12]]]],[11,"fmt","regex",E,13,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,12,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[3476],E,15,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,14,[[["self"],[R[29]]],[R[12]]]],[11,"fmt","regex",E,16,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,R[3545],17,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,18,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,19,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,27,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,1,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[3476],R[3545],9,[[["self"],[R[29]]],[R[12]]]],[11,"fmt","regex",R[3545],17,[[["self"],[R[29]]],[R[12]]]],[11,"index",R[3476],E,11,[[["self"],[R[9]]]]],[11,"index",E,E,11,[[["str"],["self"]]]],[11,"index","regex",E,19,[[["self"],[R[9]]],["str"]]],[11,"index",E,E,19,[[["str"],["self"]],["str"]]],[11,R[30],E,E,1,[[["self"]],["str"]]],[11,"cause",E,E,1,[[["self"]],[[R[52],["error"]],["error"]]]],[11,R[3480],E,R[3546],20,[[["self"]],[[R[52],["cow"]],["cow",["str"]]]]],[11,"by_ref",E,R[3482],20,[[["self"]],[R[3483]]]]],"p":[[3,"NoExpand"],[4,"Error"],[3,"NoExpand"],[8,"Replacer"],[3,R[3440]],[3,R[3440]],[3,R[3442]],[3,R[3442]],[3,"Match"],[3,"Regex"],[3,R[3452]],[3,"Captures"],[3,"RegexSet"],[3,R[3547]],[3,"RegexSet"],[3,R[3547]],[3,"Match"],[3,"Regex"],[3,R[3452]],[3,"Captures"],[8,"Replacer"],[3,R[3460]],[3,R[3462]],[3,R[3450]],[3,"Matches"],[3,R[3446]],[3,R[3454]],[3,R[3456]],[3,"Split"],[3,"SplitN"],[3,"Matches"],[3,R[3446]],[3,"Split"],[3,"SplitN"],[3,R[3450]],[3,R[3454]],[3,R[3456]],[3,R[3460]],[3,R[3462]]]};
searchIndex["ring"]={"doc":"Safe, fast, small crypto using Rust with BoringSSL's…","i":[[0,"aead","ring","Authenticated Encryption with Associated Data (AEAD).",N,N],[3,R[2073],R[2058],"A key for authenticating and decrypting (“opening”)…",N,N],[3,R[2072],E,"A key for encrypting and signing (“sealing”) data.",N,N],[3,R[2074],E,"An AEAD Algorithm.",N,N],[5,R[2034],E,"Authenticates and decrypts (“opens”) data in place.",N,[[[R[2035]],[R[9]]],[[R[2032]],[R[12],[R[2032]]]]]],[5,R[2033],E,"Encrypts and signs (“seals”) data in place.",N,[[[R[2037]],[R[9]]],[[R[2032]],[R[12],[R[9],R[2032]]],[R[9]]]]],[0,"chacha20_poly1305_openssh",E,"The [chacha20-poly1305@openssh.com] AEAD-ish construct.",N,N],[3,R[2072],R[2059],"A key for sealing packets.",N,N],[3,R[2073],E,"A key for opening packets.",N,N],[17,"KEY_LEN",E,"The length of key.",N,N],[17,"TAG_LEN",E,R[2039],N,N],[17,"PACKET_LENGTH_LEN",E,"The length in bytes of the `packet_length` field in a SSH…",N,N],[11,"new",E,"Constructs a new `SealingKey`.",0,[[],[R[2037]]]],[11,R[2033],E,"Seals (encrypts and signs) a packet.",0,[[["u32"],["self"]]]],[11,"new",E,"Constructs a new `OpeningKey`.",1,[[],[R[2035]]]],[11,"decrypt_packet_length",E,"Returns the decrypted, but unauthenticated, packet length.",1,[[["u32"],["self"]]]],[11,R[2034],E,"Opens (authenticates and decrypts) a packet.",1,[[["u32"],["self"]],[[R[2032]],[R[12],[R[2032]]]]]],[7,R[3677],R[2058],"ChaCha20-Poly1305 as described in [RFC 7539].",N,N],[7,R[3675],E,"AES-128 in GCM mode with 128-bit tags and 96 bit nonces.",N,N],[7,R[3676],E,"AES-256 in GCM mode with 128-bit tags and 96 bit nonces.",N,N],[17,"MAX_TAG_LEN",E,"The maximum length of a tag for the algorithms in this…",N,N],[11,"new",E,"Create a new opening key.",2,[[[R[2036]]],[[R[2032]],[R[2035]],[R[12],[R[2035],R[2032]]]]]],[11,R[2036],E,R[2038],2,[[["self"]],[R[2036]]]],[11,"new",E,"C analogs: `EVP_AEAD_CTX_init_with_direction` with…",3,[[[R[2036]]],[[R[2032]],[R[2037]],[R[12],[R[2037],R[2032]]]]]],[11,R[2036],E,R[2038],3,[[["self"]],[R[2036]]]],[11,"key_len",E,"The length of the key.",4,[[["self"]],[R[9]]]],[11,"tag_len",E,R[2039],4,[[["self"]],[R[9]]]],[11,"nonce_len",E,"The length of the nonces.",4,[[["self"]],[R[9]]]],[0,"agreement","ring","Key Agreement: ECDH, including X25519.",N,N],[3,R[2074],R[2060],"A key agreement algorithm.",N,N],[3,R[2075],E,"An ephemeral private key for use (only) with…",N,N],[5,"agree_ephemeral",E,"Performs a key agreement with an ephemeral private key and…",N,[[[R[2036]],[R[2040]],["input"],["e"],["f"]],[R[12]]]],[7,"ECDH_P256",E,"ECDH using the NSA Suite B P-256 (secp256r1) curve.",N,N],[7,"ECDH_P384",E,"ECDH using the NSA Suite B P-384 (secp384r1) curve.",N,N],[7,"X25519",E,"X25519 (ECDH using Curve25519) as described in [RFC 7748].",N,N],[17,"PUBLIC_KEY_MAX_LEN",E,"The maximum length, in bytes, of an encoded public key.",N,N],[11,R[2093],E,"Generate a new ephemeral private key for the given…",5,[[[R[2042]],[R[2036]]],[[R[12],[R[2040],R[2032]]],[R[2040]],[R[2032]]]]],[11,R[2036],E,"The key exchange algorithm.",5,[[["self"]],[R[2036]]]],[11,"public_key_len",E,"The size in bytes of the encoded public key.",5,[[["self"]],[R[9]]]],[11,"compute_public_key",E,"Computes the public key from the private key's value and…",5,[[["self"]],[[R[2032]],[R[12],[R[2032]]]]]],[0,"constant_time","ring","Constant-time operations.",N,N],[5,"verify_slices_are_equal","ring::constant_time","Returns `Ok(())` if `a == b` and `Err(error::Unspecified)`…",N,[[],[[R[2032]],[R[12],[R[2032]]]]]],[0,"digest","ring","SHA-2 and the legacy SHA-1 digest algorithm.",N,N],[3,"Context",R[2061],"A context for multi-step (Init-Update-Finish) digest…",N,N],[12,R[2036],E,"The context's algorithm.",6,N],[3,"Digest",E,"A calculated digest value.",N,N],[3,R[2074],E,"A digest algorithm.",N,N],[12,"output_len",E,"C analog: `EVP_MD_size`",7,N],[12,"chaining_len",E,"The size of the chaining value of the digest function, in…",7,N],[12,"block_len",E,"C analog: `EVP_MD_block_size`",7,N],[5,"digest",E,"Returns the digest of `data` using the given digest…",N,[[[R[2036]]],["digest"]]],[7,"SHA1",E,"SHA-1 as specified in [FIPS 180-4]. Deprecated.",N,N],[7,"SHA256",E,"SHA-256 as specified in [FIPS 180-4].",N,N],[7,"SHA384",E,"SHA-384 as specified in [FIPS 180-4].",N,N],[7,"SHA512",E,"SHA-512 as specified in [FIPS 180-4].",N,N],[7,"SHA512_256",E,"SHA-512/256 as specified in [FIPS 180-4].",N,N],[17,"MAX_BLOCK_LEN",E,"The maximum block length (`Algorithm::block_len`) of all…",N,N],[17,"MAX_OUTPUT_LEN",E,"The maximum output length (`Algorithm::output_len`) of all…",N,N],[17,"MAX_CHAINING_LEN",E,"The maximum chaining length (`Algorithm::chaining_len`) of…",N,N],[17,"SHA1_OUTPUT_LEN",E,"The length of the output of SHA-1, in bytes.",N,N],[17,"SHA256_OUTPUT_LEN",E,"The length of the output of SHA-256, in bytes.",N,N],[17,"SHA384_OUTPUT_LEN",E,"The length of the output of SHA-384, in bytes.",N,N],[17,"SHA512_OUTPUT_LEN",E,"The length of the output of SHA-512, in bytes.",N,N],[17,"SHA512_256_OUTPUT_LEN",E,"The length of the output of SHA-512/256, in bytes.",N,N],[11,"new",E,"Constructs a new context.",6,[[[R[2036]]],["context"]]],[11,"update",E,"Updates the digest with all the data in `data`. `update`…",6,[[["self"]]]],[11,"finish",E,"Finalizes the digest calculation and returns the digest…",6,[[],["digest"]]],[11,R[2036],E,"The algorithm that this context is using.",6,[[["self"]],[R[2036]]]],[11,R[2036],E,"The algorithm that was used to calculate the digest value.",8,[[["self"]],[R[2036]]]],[0,"error","ring","Error reporting.",N,N],[3,R[2089],R[2062],"An error with absolutely no details.",N,N],[0,"hkdf","ring","HMAC-based Extract-and-Expand Key Derivation Function.",N,N],[5,"extract_and_expand","ring::hkdf","Fills `out` with the output of the HKDF Extract-and-Expand…",N,[[[R[2041]]]]],[5,"extract",E,"The HKDF-Extract operation.",N,[[[R[2041]]],[R[2041]]]],[5,"expand",E,"Fills `out` with the output of the HKDF-Expand operation…",N,[[[R[2041]]]]],[0,"hmac","ring","HMAC is specified in [RFC 2104].",N,N],[3,R[2092],R[2066],"An HMAC signature.",N,N],[3,R[4114],E,"A key to use for HMAC signing.",N,N],[3,R[2076],E,"A context for multi-step (Init-Update-Finish) HMAC signing.",N,N],[3,R[2077],E,"A key to use for HMAC authentication.",N,N],[5,"sign",E,"Calculates the HMAC of `data` using the key `key` in one…",N,[[[R[2041]]],[R[2047]]]],[5,"verify",E,"Calculates the HMAC of `data` using the key `key`, and…",N,[[[R[2044]]],[[R[2032]],[R[12],[R[2032]]]]]],[5,"verify_with_own_key",E,"Calculates the HMAC of `data` using the signing key `key`,…",N,[[[R[2041]]],[[R[2032]],[R[12],[R[2032]]]]]],[5,"recommended_key_len",E,"Returns the recommended key length for HMAC using the…",N,[[[R[2036]]],[R[9]]]],[11,R[2093],E,R[2043],9,[[[R[2042]],[R[2036]]],[[R[2032]],[R[2041]],[R[12],[R[2041],R[2032]]]]]],[11,"generate_serializable",E,R[2043],9,[[[R[2042]],[R[2036]]],[[R[2032]],[R[2041]],[R[12],[R[2041],R[2032]]]]]],[11,"new",E,"Construct an HMAC signing key using the given digest…",9,[[[R[2036]]],[R[2041]]]],[11,R[2045],E,R[2046],9,[[["self"]],[R[2036]]]],[11,"with_key",E,"Constructs a new HMAC signing context using the given…",10,[[[R[2041]]],[R[2067]]]],[11,"update",E,"Updates the HMAC with all the data in `data`. `update` may…",10,[[["self"]]]],[11,"sign",E,"Finalizes the HMAC calculation and returns the HMAC value.…",10,[[],[R[2047]]]],[11,"new",E,"Construct an HMAC verification key using the given digest…",11,[[[R[2036]]],[R[2044]]]],[11,R[2045],E,R[2046],11,[[["self"]],[R[2036]]]],[0,"pbkdf2","ring","PBKDF2 derivation and verification.",N,N],[5,"derive","ring::pbkdf2","Fills `out` with the key derived using PBKDF2 with the…",N,[[["u32"],[R[2036]]]]],[5,"verify",E,"Verifies that a previously-derived (e.g., using `derive`)…",N,[[["u32"],[R[2036]]],[[R[2032]],[R[12],[R[2032]]]]]],[0,"rand","ring","Cryptographic pseudo-random number generation.",N,N],[3,R[2079],R[2065],"A secure random number generator where the random values…",N,N],[8,R[2078],E,"A secure random number generator.",N,N],[10,"fill",E,"Fills `dest` with random bytes.",12,[[["self"]],[[R[2032]],[R[12],[R[2032]]]]]],[11,"new",E,"Constructs a new `SystemRandom`.",13,[[],["systemrandom"]]],[0,R[2047],"ring","Public key signatures: signing and verification.",N,N],[3,R[2087],R[2048],"An ECDSA key pair, used for signing.",N,N],[3,R[2088],E,"An ECDSA verification algorithm.",N,N],[3,R[2086],E,"Parameters for EdDSA signing and verification.",N,N],[3,R[2085],E,"An Ed25519 key pair, for signing.",N,N],[3,"RSAKeyPair",E,"An RSA key pair, used for signing. Feature: `rsa_signing`.",N,N],[3,R[2091],E,"State used for RSA Signing. Feature: `rsa_signing`.",N,N],[3,R[2090],E,"Parameters for RSA verification.",N,N],[3,R[2092],E,"A public key signature returned from a signing operation.",N,N],[3,"KeyPair",E,"A key pair for signing.",N,N],[5,"key_pair_from_pkcs8",E,"Returns a key for signing that is parsed from a PKCS#8…",N,[[["input"],["signingalgorithm"]],[[R[12],["keypair",R[2032]]],[R[2032]],["keypair"]]]],[5,"sign",E,"Returns a signature of the given data using the given key.…",N,[[[R[2042]],["input"],["keypair"]],[[R[2032]],[R[2047]],[R[12],[R[2047],R[2032]]]]]],[5,"verify",E,R[2055],N,[[["input"],["verificationalgorithm"]],[[R[2032]],[R[12],[R[2032]]]]]],[0,"primitive",E,"Lower-level verification primitives. Usage of…",N,N],[5,"verify_rsa","ring::signature::primitive","Lower-level API for the verification of RSA signatures.",N,[[["rsaparameters"],["input"]],[[R[2032]],[R[12],[R[2032]]]]]],[7,"ECDSA_P256_SHA256_ASN1_SIGNING",R[2048],R[2049],N,N],[7,"ECDSA_P256_SHA256_FIXED_SIGNING",E,R[2050],N,N],[7,"ECDSA_P384_SHA384_ASN1_SIGNING",E,R[2049],N,N],[7,"ECDSA_P384_SHA384_FIXED_SIGNING",E,R[2050],N,N],[7,"ECDSA_P256_SHA256_ASN1",E,R[2052],N,N],[7,"ECDSA_P256_SHA256_FIXED",E,R[2053],N,N],[7,"ECDSA_P256_SHA384_ASN1",E,R[2051],N,N],[7,"ECDSA_P384_SHA256_ASN1",E,R[2051],N,N],[7,"ECDSA_P384_SHA384_ASN1",E,R[2052],N,N],[7,"ECDSA_P384_SHA384_FIXED",E,R[2053],N,N],[7,"ED25519",E,"Verification of [Ed25519] signatures.",N,N],[7,R[3667],E,"PKCS#1 1.5 padding using SHA-256 for RSA signatures.",N,N],[7,R[3668],E,"PKCS#1 1.5 padding using SHA-384 for RSA signatures.",N,N],[7,R[3669],E,"PKCS#1 1.5 padding using SHA-512 for RSA signatures.",N,N],[7,R[3670],E,"RSA PSS padding using SHA-256 for RSA signatures.",N,N],[7,R[3671],E,"RSA PSS padding using SHA-384 for RSA signatures.",N,N],[7,R[3672],E,"RSA PSS padding using SHA-512 for RSA signatures.",N,N],[7,R[2915],E,R[2054],N,N],[7,R[2916],E,R[2054],N,N],[7,R[2917],E,R[2054],N,N],[7,R[2918],E,R[2054],N,N],[7,R[2919],E,"Verification of signatures using RSA keys of 3072-8192…",N,N],[7,"RSA_PSS_2048_8192_SHA256",E,R[2054],N,N],[7,"RSA_PSS_2048_8192_SHA384",E,R[2054],N,N],[7,"RSA_PSS_2048_8192_SHA512",E,R[2054],N,N],[17,"ED25519_PUBLIC_KEY_LEN",E,"The length of an Ed25519 public key.",N,N],[17,"ED25519_PKCS8_V2_LEN",E,"The length of a Ed25519 PKCS#8 (v2) private key generated…",N,N],[8,"RSAEncoding",E,"An RSA signature encoding as described in [RFC 3447…",N,N],[8,R[2080],E,"An algorithm for signing.",N,N],[10,R[2071],E,"Parses the key out of the given PKCS#8 document, verifying…",14,[[["input"],["self"]],[[R[12],["keypair",R[2032]]],[R[2032]],["keypair"]]]],[8,R[2081],E,"A signature verification algorithm.",N,N],[10,"verify",E,R[2055],15,[[["input"],["self"]],[[R[2032]],[R[12],[R[2032]]]]]],[0,"test","ring","Testing framework.",N,N],[3,"TestCase",R[2063],"A test case. A test case consists of a set of named…",N,N],[5,"compile_time_assert_clone",E,"`compile_time_assert_clone::<T>();` fails to compile if…",N,[[]]],[5,"compile_time_assert_copy",E,"`compile_time_assert_copy::<T>();` fails to compile if `T`…",N,[[]]],[5,"compile_time_assert_send",E,"`compile_time_assert_send::<T>();` fails to compile if `T`…",N,[[]]],[5,"compile_time_assert_sync",E,"`compile_time_assert_sync::<T>();` fails to compile if `T`…",N,[[]]],[5,"compile_time_assert_debug",E,"`compile_time_assert_debug::<T>();` fails to compile if…",N,[[]]],[5,"ring_src_path",E,"Returns the path for ring source code root.",N,[[],["pathbuf"]]],[5,"from_file",E,"Reads test cases out of the file with the path given by…",N,[[["str"],["f"]]]],[5,"from_hex",E,"Decode an string of hex digits into a sequence of bytes.…",N,[[["str"]],[["string"],[R[12],["vec","string"]],["vec",["u8"]]]]],[0,"rand",E,"Deterministic implementations of `ring::rand::SecureRandom`.",N,N],[3,R[2082],R[2064],R[2056],N,N],[12,"byte",E,E,16,N],[3,R[2083],E,R[2056],N,N],[12,"bytes",E,E,17,N],[3,R[2084],E,"An implementation of `SecureRandom` where each slice in…",N,N],[12,"bytes",E,"The value.",18,N],[12,"current",E,E,18,N],[11,"consume_bool",R[2063],"Maps the string \"true\" to true and the string \"false\" to…",19,[[["str"],["self"]],["bool"]]],[11,"consume_digest_alg",E,"Maps the strings \"SHA1\", \"SHA256\", \"SHA384\", and \"SHA512\"…",19,[[["str"],["self"]],[[R[52],[R[2036]]],[R[2036]]]]],[11,"consume_bytes",E,"Returns the value of an attribute that is encoded as a…",19,[[["str"],["self"]],[["u8"],["vec",["u8"]]]]],[11,"consume_usize",E,R[2057],19,[[["str"],["self"]],[R[9]]]],[11,"consume_usize_bits",E,R[2057],19,[[["str"],["self"]],["bitlength"]]],[11,"consume_string",E,"Returns the raw value of an attribute, without any…",19,[[["str"],["self"]],["string"]]],[11,"consume_optional_string",E,"Like `consume_string()` except it returns `None` if the…",19,[[["str"],["self"]],[["string"],[R[52],["string"]]]]],[11,"from",R[2058],E,2,[[[T]],[T]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,"into",E,E,2,[[],[U]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,"into",E,E,3,[[],[U]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,"into",E,E,4,[[],[U]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,"from",R[2059],E,0,[[[T]],[T]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,"into",E,E,0,[[],[U]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,"into",E,E,1,[[],[U]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",R[2060],E,20,[[[T]],[T]]],[11,R[11],E,E,20,[[[U]],[R[12]]]],[11,R[14],E,E,20,[[],[R[12]]]],[11,"into",E,E,20,[[],[U]]],[11,R[39],E,E,20,[[["self"]],[T]]],[11,R[13],E,E,20,[[["self"]],[T]]],[11,R[18],E,E,20,[[["self"]],[R[40]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,"into",E,E,5,[[],[U]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[18],E,E,5,[[["self"]],[R[40]]]],[11,"from",R[2061],E,6,[[[T]],[T]]],[11,R[11],E,E,6,[[[U]],[R[12]]]],[11,R[14],E,E,6,[[],[R[12]]]],[11,"into",E,E,6,[[],[U]]],[11,R[39],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[18],E,E,6,[[["self"]],[R[40]]]],[11,R[16],E,E,6,[[["self"]],[T]]],[11,R[17],E,E,6,[[[T],["self"]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[11],E,E,8,[[[U]],[R[12]]]],[11,R[14],E,E,8,[[],[R[12]]]],[11,"into",E,E,8,[[],[U]]],[11,R[39],E,E,8,[[["self"]],[T]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[18],E,E,8,[[["self"]],[R[40]]]],[11,R[16],E,E,8,[[["self"]],[T]]],[11,R[17],E,E,8,[[[T],["self"]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[11],E,E,7,[[[U]],[R[12]]]],[11,R[14],E,E,7,[[],[R[12]]]],[11,"into",E,E,7,[[],[U]]],[11,R[39],E,E,7,[[["self"]],[T]]],[11,R[13],E,E,7,[[["self"]],[T]]],[11,R[18],E,E,7,[[["self"]],[R[40]]]],[11,"from",R[2048],E,21,[[[T]],[T]]],[11,R[11],E,E,21,[[[U]],[R[12]]]],[11,R[14],E,E,21,[[],[R[12]]]],[11,"into",E,E,21,[[],[U]]],[11,R[39],E,E,21,[[["self"]],[T]]],[11,R[13],E,E,21,[[["self"]],[T]]],[11,R[18],E,E,21,[[["self"]],[R[40]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[11],E,E,22,[[[U]],[R[12]]]],[11,R[14],E,E,22,[[],[R[12]]]],[11,"into",E,E,22,[[],[U]]],[11,R[39],E,E,22,[[["self"]],[T]]],[11,R[13],E,E,22,[[["self"]],[T]]],[11,R[18],E,E,22,[[["self"]],[R[40]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[11],E,E,23,[[[U]],[R[12]]]],[11,R[14],E,E,23,[[],[R[12]]]],[11,"into",E,E,23,[[],[U]]],[11,R[39],E,E,23,[[["self"]],[T]]],[11,R[13],E,E,23,[[["self"]],[T]]],[11,R[18],E,E,23,[[["self"]],[R[40]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[11],E,E,24,[[[U]],[R[12]]]],[11,R[14],E,E,24,[[],[R[12]]]],[11,"into",E,E,24,[[],[U]]],[11,R[39],E,E,24,[[["self"]],[T]]],[11,R[13],E,E,24,[[["self"]],[T]]],[11,R[18],E,E,24,[[["self"]],[R[40]]]],[11,"from",R[2062],E,25,[[[T]],[T]]],[11,R[11],E,E,25,[[[U]],[R[12]]]],[11,R[14],E,E,25,[[],[R[12]]]],[11,"into",E,E,25,[[],[U]]],[11,R[39],E,E,25,[[["self"]],[T]]],[11,R[13],E,E,25,[[["self"]],[T]]],[11,R[18],E,E,25,[[["self"]],[R[40]]]],[11,R[16],E,E,25,[[["self"]],[T]]],[11,R[17],E,E,25,[[[T],["self"]]]],[11,R[170],E,E,25,[[["self"]],["string"]]],[11,"from",R[2066],E,26,[[[T]],[T]]],[11,R[11],E,E,26,[[[U]],[R[12]]]],[11,R[14],E,E,26,[[],[R[12]]]],[11,"into",E,E,26,[[],[U]]],[11,R[39],E,E,26,[[["self"]],[T]]],[11,R[13],E,E,26,[[["self"]],[T]]],[11,R[18],E,E,26,[[["self"]],[R[40]]]],[11,R[16],E,E,26,[[["self"]],[T]]],[11,R[17],E,E,26,[[[T],["self"]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[11],E,E,9,[[[U]],[R[12]]]],[11,R[14],E,E,9,[[],[R[12]]]],[11,"into",E,E,9,[[],[U]]],[11,R[39],E,E,9,[[["self"]],[T]]],[11,R[13],E,E,9,[[["self"]],[T]]],[11,R[18],E,E,9,[[["self"]],[R[40]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[11],E,E,10,[[[U]],[R[12]]]],[11,R[14],E,E,10,[[],[R[12]]]],[11,"into",E,E,10,[[],[U]]],[11,R[39],E,E,10,[[["self"]],[T]]],[11,R[13],E,E,10,[[["self"]],[T]]],[11,R[18],E,E,10,[[["self"]],[R[40]]]],[11,R[16],E,E,10,[[["self"]],[T]]],[11,R[17],E,E,10,[[[T],["self"]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[11],E,E,11,[[[U]],[R[12]]]],[11,R[14],E,E,11,[[],[R[12]]]],[11,"into",E,E,11,[[],[U]]],[11,R[39],E,E,11,[[["self"]],[T]]],[11,R[13],E,E,11,[[["self"]],[T]]],[11,R[18],E,E,11,[[["self"]],[R[40]]]],[11,"from",R[2065],E,13,[[[T]],[T]]],[11,R[11],E,E,13,[[[U]],[R[12]]]],[11,R[14],E,E,13,[[],[R[12]]]],[11,"into",E,E,13,[[],[U]]],[11,R[39],E,E,13,[[["self"]],[T]]],[11,R[13],E,E,13,[[["self"]],[T]]],[11,R[18],E,E,13,[[["self"]],[R[40]]]],[11,"from",R[2048],E,27,[[[T]],[T]]],[11,R[11],E,E,27,[[[U]],[R[12]]]],[11,R[14],E,E,27,[[],[R[12]]]],[11,"into",E,E,27,[[],[U]]],[11,R[39],E,E,27,[[["self"]],[T]]],[11,R[13],E,E,27,[[["self"]],[T]]],[11,R[18],E,E,27,[[["self"]],[R[40]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[11],E,E,28,[[[U]],[R[12]]]],[11,R[14],E,E,28,[[],[R[12]]]],[11,"into",E,E,28,[[],[U]]],[11,R[39],E,E,28,[[["self"]],[T]]],[11,R[13],E,E,28,[[["self"]],[T]]],[11,R[18],E,E,28,[[["self"]],[R[40]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[11],E,E,29,[[[U]],[R[12]]]],[11,R[14],E,E,29,[[],[R[12]]]],[11,"into",E,E,29,[[],[U]]],[11,R[39],E,E,29,[[["self"]],[T]]],[11,R[13],E,E,29,[[["self"]],[T]]],[11,R[18],E,E,29,[[["self"]],[R[40]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[11],E,E,30,[[[U]],[R[12]]]],[11,R[14],E,E,30,[[],[R[12]]]],[11,"into",E,E,30,[[],[U]]],[11,R[39],E,E,30,[[["self"]],[T]]],[11,R[13],E,E,30,[[["self"]],[T]]],[11,R[18],E,E,30,[[["self"]],[R[40]]]],[11,R[16],E,E,30,[[["self"]],[T]]],[11,R[17],E,E,30,[[[T],["self"]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[11],E,E,31,[[[U]],[R[12]]]],[11,R[14],E,E,31,[[],[R[12]]]],[11,"into",E,E,31,[[],[U]]],[11,R[39],E,E,31,[[["self"]],[T]]],[11,R[13],E,E,31,[[["self"]],[T]]],[11,R[18],E,E,31,[[["self"]],[R[40]]]],[11,"from",R[2063],E,19,[[[T]],[T]]],[11,R[11],E,E,19,[[[U]],[R[12]]]],[11,R[14],E,E,19,[[],[R[12]]]],[11,"into",E,E,19,[[],[U]]],[11,R[39],E,E,19,[[["self"]],[T]]],[11,R[13],E,E,19,[[["self"]],[T]]],[11,R[18],E,E,19,[[["self"]],[R[40]]]],[11,"from",R[2064],E,16,[[[T]],[T]]],[11,R[11],E,E,16,[[[U]],[R[12]]]],[11,R[14],E,E,16,[[],[R[12]]]],[11,"into",E,E,16,[[],[U]]],[11,R[39],E,E,16,[[["self"]],[T]]],[11,R[13],E,E,16,[[["self"]],[T]]],[11,R[18],E,E,16,[[["self"]],[R[40]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[11],E,E,17,[[[U]],[R[12]]]],[11,R[14],E,E,17,[[],[R[12]]]],[11,"into",E,E,17,[[],[U]]],[11,R[39],E,E,17,[[["self"]],[T]]],[11,R[13],E,E,17,[[["self"]],[T]]],[11,R[18],E,E,17,[[["self"]],[R[40]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[11],E,E,18,[[[U]],[R[12]]]],[11,R[14],E,E,18,[[],[R[12]]]],[11,"into",E,E,18,[[],[U]]],[11,R[39],E,E,18,[[["self"]],[T]]],[11,R[13],E,E,18,[[["self"]],[T]]],[11,R[18],E,E,18,[[["self"]],[R[40]]]],[11,"fill",R[2065],E,13,[[["self"]],[[R[2032]],[R[12],[R[2032]]]]]],[11,"fill",R[2064],E,16,[[["self"]],[[R[2032]],[R[12],[R[2032]]]]]],[11,"fill",E,E,17,[[["self"]],[[R[2032]],[R[12],[R[2032]]]]]],[11,"fill",E,E,18,[[["self"]],[[R[2032]],[R[12],[R[2032]]]]]],[11,"verify",R[2048],E,22,[[["input"],["self"]],[[R[2032]],[R[12],[R[2032]]]]]],[11,"verify",E,E,24,[[["input"],["self"]],[[R[2032]],[R[12],[R[2032]]]]]],[11,"verify",E,E,27,[[["input"],["self"]],[[R[2032]],[R[12],[R[2032]]]]]],[11,"eq",R[2058],E,4,[[["self"]],["bool"]]],[11,"eq",R[2060],E,20,[[[R[2036]],["self"]],["bool"]]],[11,"ne",E,E,20,[[[R[2036]],["self"]],["bool"]]],[11,"eq",R[2061],E,7,[[["self"]],["bool"]]],[11,"eq",R[2062],E,25,[[[R[2032]],["self"]],["bool"]]],[11,"from",E,E,25,[[[R[67]]],["self"]]],[11,"fmt",R[2058],E,4,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[2060],E,20,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[2061],E,8,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,7,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[2048],E,22,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,23,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,24,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[2062],E,25,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[2066],E,26,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,9,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,10,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[2048],E,27,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,28,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,31,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[2063],E,19,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[2064],E,16,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,17,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,18,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[2062],E,25,[[[R[29]],["self"]],[R[12]]]],[11,"drop",R[2064],E,18,[[["self"]]]],[11,"clone",R[2061],E,6,[[["self"]],["context"]]],[11,"clone",E,E,8,[[["self"]],["digest"]]],[11,"clone",R[2062],E,25,[[["self"]],[R[2032]]]],[11,"clone",R[2066],E,26,[[["self"]],[R[2047]]]],[11,"clone",E,E,10,[[["self"]],[R[2067]]]],[11,"clone",R[2048],E,30,[[["self"]],[R[2047]]]],[11,"as_ref",R[2061],E,8,[[["self"]]]],[11,"as_ref",R[2066],E,26,[[["self"]]]],[11,"as_ref",R[2048],E,30,[[["self"]]]],[11,"cause",R[2062],E,25,[[["self"]],[[R[52],["error"]],["error"]]]],[11,R[30],E,E,25,[[["self"]],["str"]]],[11,R[2069],R[2048],R[2070],21,[[[R[2042]]],[[R[2032]],[R[12],[R[2032]]]]]],[11,R[2071],E,R[2068],21,[[["input"]],[[R[2032]],[R[12],[R[2032]]]]]],[11,"from_pkcs8_maybe_unchecked",E,R[2068],21,[[["input"]],[[R[2032]],[R[12],[R[2032]]]]]],[11,"from_seed_and_public_key",E,"Constructs an Ed25519 key pair from the private key seed…",21,[[["input"]],[[R[2032]],[R[12],[R[2032]]]]]],[11,"from_seed_unchecked",E,"Constructs a Ed25519 key pair from the private key seed…",21,[[["input"]],[[R[2032]],[R[12],[R[2032]]]]]],[11,"public_key_bytes",E,"Returns a reference to the little-endian-encoded public…",21,[[["self"]]]],[11,"sign",E,"Returns the signature of the message `msg`.",21,[[["self"]],[R[2047]]]],[11,R[2069],E,R[2070],23,[[[R[2042]],[R[2036]]],[["document"],[R[2032]],[R[12],["document",R[2032]]]]]],[11,R[2071],E,"Constructs an ECDSA key pair by parsing an unencrypted…",23,[[["input"],[R[2036]]],[[R[2032]],[R[12],[R[2032]]]]]],[11,"from_private_key_and_public_key",E,"Constructs an ECDSA key pair directly from the…",23,[[["input"],[R[2036]]],[[R[2032]],[R[12],[R[2032]]]]]],[11,"sign",E,"Deprecated.",23,[[[R[2042]],["input"],["self"]],[[R[12],[R[2047],R[2032]]],[R[2032]],[R[2047]]]]],[11,R[2071],E,"Parses an unencrypted PKCS#8-encoded RSA private key.",28,[[["input"]],[[R[2032]],[R[12],[R[2032]]]]]],[11,"from_der",E,"Parses an RSA private key that is not inside a PKCS#8…",28,[[["input"]],[[R[2032]],[R[12],[R[2032]]]]]],[11,"public_modulus_len",E,"Returns the length in bytes of the key pair's public…",28,[[["self"]],[R[9]]]],[11,"new",E,"Construct a signing state appropriate for use with the…",29,[[["keypair"],["arc",["keypair"]]],[[R[2032]],[R[12],[R[2032]]]]]],[11,"key_pair",E,"The key pair. This can be used, for example, to access the…",29,[[["self"]],["keypair"]]],[11,"sign",E,"Sign `msg`. `msg` is digested using the digest algorithm…",29,[[["rsaencoding"],[R[2042]],["self"]],[[R[2032]],[R[12],[R[2032]]]]]]],"p":[[3,R[2072]],[3,R[2073]],[3,R[2073]],[3,R[2072]],[3,R[2074]],[3,R[2075]],[3,"Context"],[3,R[2074]],[3,"Digest"],[3,R[4114]],[3,R[2076]],[3,R[2077]],[8,R[2078]],[3,R[2079]],[8,R[2080]],[8,R[2081]],[3,R[2082]],[3,R[2083]],[3,R[2084]],[3,"TestCase"],[3,R[2074]],[3,R[2085]],[3,R[2086]],[3,R[2087]],[3,R[2088]],[3,R[2089]],[3,R[2092]],[3,R[2090]],[3,"RSAKeyPair"],[3,R[2091]],[3,R[2092]],[3,"KeyPair"]]};
searchIndex["rustls"]={"doc":"Rustls - a modern TLS library Rustls is a TLS library that…","i":[[3,"Stream","rustls",R[3659],N,N],[12,"sess",E,R[3660],0,N],[12,"sock",E,R[3661],0,N],[3,R[4249],E,R[3659],N,N],[12,"sess",E,R[3660],1,N],[12,"sock",E,R[3661],1,N],[3,R[4250],E,"A container for root certificates able to provide a…",N,N],[12,"roots",E,"The list of roots.",2,N],[3,R[4329],E,"An implementor of `StoresClientSessions` which does nothing.",N,N],[3,R[4261],E,"An implementor of `StoresClientSessions` that stores…",N,N],[3,R[4251],E,"Common configuration for (typically) all connections made…",N,N],[12,R[3662],E,R[3663],3,N],[12,"root_store",E,"Collection of root certificates.",3,N],[12,R[3665],E,"Which ALPN protocols we include in our client hello. If…",3,N],[12,"session_persistence",E,"How we store session data or tickets.",3,N],[12,"mtu",E,R[3664],3,N],[12,"client_auth_cert_resolver",E,"How to decide what client auth certificate/keys to use.",3,N],[12,"enable_tickets",E,"Whether to support RFC5077 tickets. You must provide a…",3,N],[12,"versions",E,"Supported versions, in no particular order. The default is…",3,N],[12,"ct_logs",E,"Collection of certificate transparency logs. If this…",3,N],[12,"enable_sni",E,"Whether to send the Server Name Indication (SNI) extension…",3,N],[12,"key_log",E,R[3666],3,N],[12,"enable_early_data",E,"Whether to send data on the first flight (\"early data\") in…",3,N],[3,R[4262],E,"This represents a single TLS client session.",N,N],[3,R[4330],E,"Something which never stores sessions.",N,N],[3,R[4258],E,"An implementor of `StoresServerSessions` that stores…",N,N],[3,R[4252],E,"Common configuration for a set of server sessions.",N,N],[12,R[3662],E,R[3663],4,N],[12,"ignore_client_order",E,"Ignore the client's ciphersuite order. Instead, choose the…",4,N],[12,"mtu",E,R[3664],4,N],[12,"session_storage",E,"How to store client sessions.",4,N],[12,"ticketer",E,"How to produce tickets.",4,N],[12,"cert_resolver",E,"How to choose a server cert and key.",4,N],[12,R[3665],E,"Protocol names we support, most preferred first. If empty…",4,N],[12,"versions",E,"Supported protocol versions, in no particular order. The…",4,N],[12,"key_log",E,R[3666],4,N],[3,R[4260],E,"This represents a single TLS server session.",N,N],[3,R[4259],E,"Something that resolves do different cert chains/keys…",N,N],[3,"Ticketer",E,"A concrete, safe ticket creation mechanism.",N,N],[3,R[4257],E,"Turns off client authentication.",N,N],[3,R[4255],E,"A `ClientCertVerifier` that will ensure that every client…",N,N],[3,R[4256],E,"A `ClientCertVerifier` that will allow both anonymous and…",N,N],[3,R[4253],E,"A cipher suite supported by rustls.",N,N],[12,"suite",E,"The TLS enumeration naming this cipher suite.",5,N],[12,"kx",E,"How to exchange/agree keys.",5,N],[12,"bulk",E,"How to do bulk encryption.",5,N],[12,"hash",E,"How to do hashing.",5,N],[12,"sign",E,"How to sign messages.",5,N],[12,"enc_key_len",E,"Encryption key length, for the bulk algorithm.",5,N],[12,"fixed_iv_len",E,"How long the fixed part of the 'IV' is.",5,N],[12,"explicit_nonce_len",E,"This is a non-standard extension which extends the key…",5,N],[3,R[3697],E,"This type contains a single certificate by value.",N,N],[12,"0",E,E,6,N],[3,"PrivateKey",E,"This type contains a private key by value.",N,N],[12,"0",E,E,7,N],[3,"NoKeyLog",E,"KeyLog that does exactly nothing.",N,N],[3,"KeyLogFile",E,"`KeyLog` implementation that opens a file whose name is…",N,N],[4,R[3696],E,E,N,N],[13,"SSLv2",E,E,8,N],[13,"SSLv3",E,E,8,N],[13,"TLSv1_0",E,E,8,N],[13,"TLSv1_1",E,E,8,N],[13,"TLSv1_2",E,E,8,N],[13,"TLSv1_3",E,E,8,N],[13,"Unknown",E,E,8,N],[4,R[4072],E,E,N,N],[13,R[4073],E,E,9,N],[13,R[4074],E,E,9,N],[13,R[3667],E,E,9,N],[13,R[4075],E,E,9,N],[13,R[3668],E,E,9,N],[13,R[4076],E,E,9,N],[13,R[3669],E,E,9,N],[13,R[4077],E,E,9,N],[13,R[3670],E,E,9,N],[13,R[3671],E,E,9,N],[13,R[3672],E,E,9,N],[13,"ED25519",E,E,9,N],[13,"ED448",E,E,9,N],[13,"Unknown",E,E,9,N],[4,R[3699],E,E,N,N],[13,R[3700],E,E,10,N],[13,R[3701],E,E,10,N],[13,R[3702],E,E,10,N],[13,R[3703],E,E,10,N],[13,R[3704],E,E,10,N],[13,R[3705],E,E,10,N],[13,R[3706],E,E,10,N],[13,R[3707],E,E,10,N],[13,R[3708],E,E,10,N],[13,R[3709],E,E,10,N],[13,R[3710],E,E,10,N],[13,R[3711],E,E,10,N],[13,R[3712],E,E,10,N],[13,R[3713],E,E,10,N],[13,R[3714],E,E,10,N],[13,R[3715],E,E,10,N],[13,R[3716],E,E,10,N],[13,R[3717],E,E,10,N],[13,R[3718],E,E,10,N],[13,R[3719],E,E,10,N],[13,R[3720],E,E,10,N],[13,R[3721],E,E,10,N],[13,R[3722],E,E,10,N],[13,R[3723],E,E,10,N],[13,R[3724],E,E,10,N],[13,R[3725],E,E,10,N],[13,R[3726],E,E,10,N],[13,R[3727],E,E,10,N],[13,R[3728],E,E,10,N],[13,R[3729],E,E,10,N],[13,R[3730],E,E,10,N],[13,R[3731],E,E,10,N],[13,R[3732],E,E,10,N],[13,R[3733],E,E,10,N],[13,R[3734],E,E,10,N],[13,R[3735],E,E,10,N],[13,R[3736],E,E,10,N],[13,R[3737],E,E,10,N],[13,R[3738],E,E,10,N],[13,R[3739],E,E,10,N],[13,R[3740],E,E,10,N],[13,R[3741],E,E,10,N],[13,R[3742],E,E,10,N],[13,R[3743],E,E,10,N],[13,R[3744],E,E,10,N],[13,R[3745],E,E,10,N],[13,R[3746],E,E,10,N],[13,R[3747],E,E,10,N],[13,R[3748],E,E,10,N],[13,R[3749],E,E,10,N],[13,R[3750],E,E,10,N],[13,R[3751],E,E,10,N],[13,R[3752],E,E,10,N],[13,R[3753],E,E,10,N],[13,R[3754],E,E,10,N],[13,R[3755],E,E,10,N],[13,R[3756],E,E,10,N],[13,R[3757],E,E,10,N],[13,R[3758],E,E,10,N],[13,R[3759],E,E,10,N],[13,R[3760],E,E,10,N],[13,R[3761],E,E,10,N],[13,R[3762],E,E,10,N],[13,R[3763],E,E,10,N],[13,R[3764],E,E,10,N],[13,R[3765],E,E,10,N],[13,R[3766],E,E,10,N],[13,R[3767],E,E,10,N],[13,R[3768],E,E,10,N],[13,R[3769],E,E,10,N],[13,R[3770],E,E,10,N],[13,R[3771],E,E,10,N],[13,R[3772],E,E,10,N],[13,R[3773],E,E,10,N],[13,R[3774],E,E,10,N],[13,R[3775],E,E,10,N],[13,R[3776],E,E,10,N],[13,R[3777],E,E,10,N],[13,R[3778],E,E,10,N],[13,R[3779],E,E,10,N],[13,R[3780],E,E,10,N],[13,R[3781],E,E,10,N],[13,R[3782],E,E,10,N],[13,R[3783],E,E,10,N],[13,R[3784],E,E,10,N],[13,R[3785],E,E,10,N],[13,R[3786],E,E,10,N],[13,R[3787],E,E,10,N],[13,R[3788],E,E,10,N],[13,R[3789],E,E,10,N],[13,R[3790],E,E,10,N],[13,R[3791],E,E,10,N],[13,R[3792],E,E,10,N],[13,R[3793],E,E,10,N],[13,R[3794],E,E,10,N],[13,R[3795],E,E,10,N],[13,R[3796],E,E,10,N],[13,R[3797],E,E,10,N],[13,R[3798],E,E,10,N],[13,R[3799],E,E,10,N],[13,R[3800],E,E,10,N],[13,R[3801],E,E,10,N],[13,R[3802],E,E,10,N],[13,R[3803],E,E,10,N],[13,R[3804],E,E,10,N],[13,R[3805],E,E,10,N],[13,R[3806],E,E,10,N],[13,R[3807],E,E,10,N],[13,R[3808],E,E,10,N],[13,R[3809],E,E,10,N],[13,R[3810],E,E,10,N],[13,R[3811],E,E,10,N],[13,R[3812],E,E,10,N],[13,R[3813],E,E,10,N],[13,R[3814],E,E,10,N],[13,R[3815],E,E,10,N],[13,R[3816],E,E,10,N],[13,R[3817],E,E,10,N],[13,R[3818],E,E,10,N],[13,R[3819],E,E,10,N],[13,R[3820],E,E,10,N],[13,R[3821],E,E,10,N],[13,R[3822],E,E,10,N],[13,R[3823],E,E,10,N],[13,R[3824],E,E,10,N],[13,R[3825],E,E,10,N],[13,R[3826],E,E,10,N],[13,R[3827],E,E,10,N],[13,R[3828],E,E,10,N],[13,R[3829],E,E,10,N],[13,R[3830],E,E,10,N],[13,R[3831],E,E,10,N],[13,R[3832],E,E,10,N],[13,R[3833],E,E,10,N],[13,R[3834],E,E,10,N],[13,R[3835],E,E,10,N],[13,R[3836],E,E,10,N],[13,R[3837],E,E,10,N],[13,R[3838],E,E,10,N],[13,R[3839],E,E,10,N],[13,R[3840],E,E,10,N],[13,R[3841],E,E,10,N],[13,R[3842],E,E,10,N],[13,R[3843],E,E,10,N],[13,R[3844],E,E,10,N],[13,R[3845],E,E,10,N],[13,R[3846],E,E,10,N],[13,R[3847],E,E,10,N],[13,R[3848],E,E,10,N],[13,R[3849],E,E,10,N],[13,R[3850],E,E,10,N],[13,R[3851],E,E,10,N],[13,R[3852],E,E,10,N],[13,R[3853],E,E,10,N],[13,R[3854],E,E,10,N],[13,R[3855],E,E,10,N],[13,R[3856],E,E,10,N],[13,R[3857],E,E,10,N],[13,R[3858],E,E,10,N],[13,R[3859],E,E,10,N],[13,R[3860],E,E,10,N],[13,R[3861],E,E,10,N],[13,R[3862],E,E,10,N],[13,R[3863],E,E,10,N],[13,R[3864],E,E,10,N],[13,R[3865],E,E,10,N],[13,R[3866],E,E,10,N],[13,R[3867],E,E,10,N],[13,R[3868],E,E,10,N],[13,R[3869],E,E,10,N],[13,R[3870],E,E,10,N],[13,R[3871],E,E,10,N],[13,R[3872],E,E,10,N],[13,R[3873],E,E,10,N],[13,R[3874],E,E,10,N],[13,R[3875],E,E,10,N],[13,R[3876],E,E,10,N],[13,R[3877],E,E,10,N],[13,R[3878],E,E,10,N],[13,R[3879],E,E,10,N],[13,R[3880],E,E,10,N],[13,R[3881],E,E,10,N],[13,R[3882],E,E,10,N],[13,R[3883],E,E,10,N],[13,R[3884],E,E,10,N],[13,R[3885],E,E,10,N],[13,R[3886],E,E,10,N],[13,R[3887],E,E,10,N],[13,R[3888],E,E,10,N],[13,R[3889],E,E,10,N],[13,R[3890],E,E,10,N],[13,R[3891],E,E,10,N],[13,R[3892],E,E,10,N],[13,R[3893],E,E,10,N],[13,R[3894],E,E,10,N],[13,R[3895],E,E,10,N],[13,R[3896],E,E,10,N],[13,R[3897],E,E,10,N],[13,R[3898],E,E,10,N],[13,R[3899],E,E,10,N],[13,R[3900],E,E,10,N],[13,R[3901],E,E,10,N],[13,R[3902],E,E,10,N],[13,R[3903],E,E,10,N],[13,R[3904],E,E,10,N],[13,R[3905],E,E,10,N],[13,R[3906],E,E,10,N],[13,R[3907],E,E,10,N],[13,R[3908],E,E,10,N],[13,R[3909],E,E,10,N],[13,R[3910],E,E,10,N],[13,R[3911],E,E,10,N],[13,R[3912],E,E,10,N],[13,R[3913],E,E,10,N],[13,R[3914],E,E,10,N],[13,R[3915],E,E,10,N],[13,R[3916],E,E,10,N],[13,R[3917],E,E,10,N],[13,R[3918],E,E,10,N],[13,R[3919],E,E,10,N],[13,R[3920],E,E,10,N],[13,R[3921],E,E,10,N],[13,R[3922],E,E,10,N],[13,R[3923],E,E,10,N],[13,R[3924],E,E,10,N],[13,R[3925],E,E,10,N],[13,R[3926],E,E,10,N],[13,R[3927],E,E,10,N],[13,R[3928],E,E,10,N],[13,R[3929],E,E,10,N],[13,R[3930],E,E,10,N],[13,R[3931],E,E,10,N],[13,R[3932],E,E,10,N],[13,R[3933],E,E,10,N],[13,R[3934],E,E,10,N],[13,R[3935],E,E,10,N],[13,R[3936],E,E,10,N],[13,R[3937],E,E,10,N],[13,R[3938],E,E,10,N],[13,R[3939],E,E,10,N],[13,R[3940],E,E,10,N],[13,R[3941],E,E,10,N],[13,R[3942],E,E,10,N],[13,R[3943],E,E,10,N],[13,R[3944],E,E,10,N],[13,R[3945],E,E,10,N],[13,R[3946],E,E,10,N],[13,R[3947],E,E,10,N],[13,R[3948],E,E,10,N],[13,R[3949],E,E,10,N],[13,R[3950],E,E,10,N],[13,R[3951],E,E,10,N],[13,R[3952],E,E,10,N],[13,R[3953],E,E,10,N],[13,R[3954],E,E,10,N],[13,R[3955],E,E,10,N],[13,R[3956],E,E,10,N],[13,R[3957],E,E,10,N],[13,R[3958],E,E,10,N],[13,R[3959],E,E,10,N],[13,R[3960],E,E,10,N],[13,R[3961],E,E,10,N],[13,R[3962],E,E,10,N],[13,R[3963],E,E,10,N],[13,R[3964],E,E,10,N],[13,R[3965],E,E,10,N],[13,R[3966],E,E,10,N],[13,R[3967],E,E,10,N],[13,R[3968],E,E,10,N],[13,R[3969],E,E,10,N],[13,R[3970],E,E,10,N],[13,R[3971],E,E,10,N],[13,R[3972],E,E,10,N],[13,R[3973],E,E,10,N],[13,R[3974],E,E,10,N],[13,R[3975],E,E,10,N],[13,R[3976],E,E,10,N],[13,R[3977],E,E,10,N],[13,R[3978],E,E,10,N],[13,R[3979],E,E,10,N],[13,R[3980],E,E,10,N],[13,R[3981],E,E,10,N],[13,R[3982],E,E,10,N],[13,R[3983],E,E,10,N],[13,R[3984],E,E,10,N],[13,R[3985],E,E,10,N],[13,R[3986],E,E,10,N],[13,R[3987],E,E,10,N],[13,R[3988],E,E,10,N],[13,R[3989],E,E,10,N],[13,R[3990],E,E,10,N],[13,R[3991],E,E,10,N],[13,R[3992],E,E,10,N],[13,R[3993],E,E,10,N],[13,R[3994],E,E,10,N],[13,R[3995],E,E,10,N],[13,R[3996],E,E,10,N],[13,R[3997],E,E,10,N],[13,R[3998],E,E,10,N],[13,R[3999],E,E,10,N],[13,R[4000],E,E,10,N],[13,R[4001],E,E,10,N],[13,R[4002],E,E,10,N],[13,R[4003],E,E,10,N],[13,R[4004],E,E,10,N],[13,R[4005],E,E,10,N],[13,R[4006],E,E,10,N],[13,R[4007],E,E,10,N],[13,R[4008],E,E,10,N],[13,R[4009],E,E,10,N],[13,R[4010],E,E,10,N],[13,R[4011],E,E,10,N],[13,R[4012],E,E,10,N],[13,R[4013],E,E,10,N],[13,R[4014],E,E,10,N],[13,R[4015],E,E,10,N],[13,R[4016],E,E,10,N],[13,R[4017],E,E,10,N],[13,R[4018],E,E,10,N],[13,R[4019],E,E,10,N],[13,R[4020],E,E,10,N],[13,R[4021],E,E,10,N],[13,R[4022],E,E,10,N],[13,R[4023],E,E,10,N],[13,R[4024],E,E,10,N],[13,R[4025],E,E,10,N],[13,R[4026],E,E,10,N],[13,R[4027],E,E,10,N],[13,R[4028],E,E,10,N],[13,R[4029],E,E,10,N],[13,R[4030],E,E,10,N],[13,R[4031],E,E,10,N],[13,R[4032],E,E,10,N],[13,R[4033],E,E,10,N],[13,R[4034],E,E,10,N],[13,R[4035],E,E,10,N],[13,R[4036],E,E,10,N],[13,R[4037],E,E,10,N],[13,R[4038],E,E,10,N],[13,R[4039],E,E,10,N],[13,R[4040],E,E,10,N],[13,R[4041],E,E,10,N],[13,R[4042],E,E,10,N],[13,R[4043],E,E,10,N],[13,R[4044],E,E,10,N],[13,R[4045],E,E,10,N],[13,R[4046],E,E,10,N],[13,R[4047],E,E,10,N],[13,R[4048],E,E,10,N],[13,R[4049],E,E,10,N],[13,R[4050],E,E,10,N],[13,R[4051],E,E,10,N],[13,R[4052],E,E,10,N],[13,R[4053],E,E,10,N],[13,R[4054],E,E,10,N],[13,R[4055],E,E,10,N],[13,R[4056],E,E,10,N],[13,R[4057],E,E,10,N],[13,R[4058],E,E,10,N],[13,R[4059],E,E,10,N],[13,R[4060],E,E,10,N],[13,R[4061],E,E,10,N],[13,R[4062],E,E,10,N],[13,R[4063],E,E,10,N],[13,R[4064],E,E,10,N],[13,R[4065],E,E,10,N],[13,R[4066],E,E,10,N],[13,R[4067],E,E,10,N],[13,R[4068],E,E,10,N],[13,R[4069],E,E,10,N],[13,R[4070],E,E,10,N],[13,R[4071],E,E,10,N],[13,"Unknown",E,E,10,N],[4,"TLSError",E,"rustls reports protocol errors using this type.",N,N],[13,"InappropriateMessage",E,"We received a TLS message that isn't valid right now.…",11,N],[12,R[3673],R[3674],"Which types we expected",11,N],[12,"got_type",E,"What type we received",11,N],[13,"InappropriateHandshakeMessage","rustls","We received a TLS handshake message that isn't valid right…",11,N],[12,R[3673],R[3674],"Which handshake type we expected",11,N],[12,"got_type",E,"What handshake type we received",11,N],[13,"CorruptMessage","rustls","The peer sent us a syntactically incorrect TLS message.",11,N],[13,"CorruptMessagePayload",E,"The peer sent us a TLS message with invalid contents.",11,N],[13,"NoCertificatesPresented",E,"The peer didn't give us any certificates.",11,N],[13,R[3698],E,"We couldn't decrypt a message.  This is invariably fatal.",11,N],[13,"PeerIncompatibleError",E,"The peer doesn't support a protocol version/feature we…",11,N],[13,"PeerMisbehavedError",E,"The peer deviated from the standard TLS protocol. The…",11,N],[13,"AlertReceived",E,"We received a fatal alert.  This means the peer is unhappy.",11,N],[13,"WebPKIError",E,"The presented certificate chain is invalid.",11,N],[13,"InvalidSCT",E,"The presented SCT(s) were invalid.",11,N],[13,"General",E,"A catch-all error for unlikely errors.",11,N],[13,"FailedToGetCurrentTime",E,"We failed to figure out what time it currently is.",11,N],[13,"InvalidDNSName",E,"A syntactically-invalid DNS hostname was given.",11,N],[13,"HandshakeNotComplete",E,"This function doesn't work until the TLS handshake is…",11,N],[13,"PeerSentOversizedRecord",E,"The peer sent an oversized record/fragment.",11,N],[4,R[4254],E,"Bulk symmetric encryption scheme used by a cipher suite.",N,N],[13,R[3675],E,"AES with 128-bit keys in Galois counter mode.",12,N],[13,R[3676],E,"AES with 256-bit keys in Galois counter mode.",12,N],[13,R[3677],E,"Chacha20 for confidentiality with poly1305 for authenticity.",12,N],[11,"get_u16",E,E,8,[[["self"]],["u16"]]],[11,"get_u16",E,E,10,[[["self"]],["u16"]]],[11,"get_u16",E,E,9,[[["self"]],["u16"]]],[11,"new",E,"Make a new Stream using the Session `sess` and socket-like…",0,[[[T],["s"]],["stream"]]],[11,"new",E,"Make a new StreamOwned taking the Session `sess` and…",1,[[["s"],[T]],["streamowned"]]],[11,"empty",E,"Make a new, empty `RootCertStore`.",2,[[],[R[3678]]]],[11,R[69],E,"Return true if there are no certificates.",2,[[["self"]],["bool"]]],[11,"len",E,"Say how many certificates are in the container.",2,[[["self"]],[R[9]]]],[11,"get_subjects",E,"Return the Subject Names for certificates in the container.",2,[[["self"]],[R[4243]]]],[11,"add",E,"Add a single DER-encoded certificate to the store.",2,[[["self"],[R[3686]]],[[R[12],["error"]],["error"]]]],[11,"add_server_trust_anchors",E,"Adds all the given TrustAnchors `anchors`. This does not…",2,[[[R[4348]],["self"]]]],[11,"add_pem_file",E,"Parse a PEM file and add all certificates found inside.…",2,[[["self"],["bufread"]],[R[12]]]],[11,"new",E,"Construct a new `AllowAnyAuthenticatedClient`.",13,[[[R[3678]]],[["arc",[R[3679]]],[R[3679]]]]],[11,"new",E,"Construct a new `AllowAnyAnonymousOrAuthenticatedClient`.",14,[[[R[3678]]],[["arc",[R[3679]]],[R[3679]]]]],[11,"new",E,"Constructs a `NoClientAuth` and wraps it in an `Arc`.",15,[[],[["arc",[R[3679]]],[R[3679]]]]],[11,"get_hash",E,"Which hash function to use with this suite.",5,[[["self"]],[R[2036]]]],[11,"do_client_kx",E,"We have parameters and a verified public key in…",5,[[["self"]],[[R[3680]],[R[52],[R[3680]]]]]],[11,"start_server_kx",E,"Start the KX process with the given group. This generates…",5,[[["self"],[R[4213]]],[[R[3681]],[R[52],[R[3681]]]]]],[11,"resolve_sig_schemes",E,"Resolve the set of supported `SignatureScheme`s from the…",5,[[["self"]],[["vec",[R[3682]]],[R[3682]]]]],[11,"get_aead_alg",E,"Which AEAD algorithm to use for this suite.",5,[[["self"]],[R[2036]]]],[11,"key_block_len",E,"Length of key block that needs to be output by the key…",5,[[["self"]],[R[9]]]],[11,"usable_for_version",E,"Return true if this suite is usable for TLS `version`.",5,[[[R[4120]],["self"]],["bool"]]],[11,"can_resume_to",E,"Can a session using suite self resume using suite new_suite?",5,[[["self"],[R[4121]]],["bool"]]],[11,"new",E,"Make the recommended Ticketer. This produces tickets with…",16,[[],[["arc",[R[3683]]],[R[3683]]]]],[11,"new",E,"Make a new ServerSessionMemoryCache. `size` is the maximum…",17,[[[R[9]]],[["arc",[R[3684]]],[R[3684]]]]],[11,"new",E,"Create a new and empty (ie, knows no certificates) resolver.",18,[[],["resolvesservercertusingsni"]]],[11,"add",E,"Add a new `sign::CertifiedKey` to be used for the given…",18,[[["str"],["self"],[R[4116]]],[[R[12],[R[4115]]],[R[4115]]]]],[11,"new",E,"Make a `ServerConfig` with a default set of ciphersuites,…",4,[[["arc",[R[3679]]],[R[3679]]],[R[4224]]]],[11,R[3690],E,"Sets the session persistence layer to `persist`.",4,[[[R[3685]],["self"],["arc",[R[3685]]]]]],[11,"set_single_cert",E,"Sets a single certificate chain and matching private key.…",4,[[[R[3692]],["self"],["vec",[R[3686]]],[R[3686]]],[[R[12],[R[4115]]],[R[4115]]]]],[11,"set_single_cert_with_ocsp_and_sct",E,"Sets a single certificate chain, matching private key and…",4,[[[R[3692]],["self"],["vec",[R[3686]]],["u8"],[R[3686]],["vec",["u8"]]],[[R[12],[R[4115]]],[R[4115]]]]],[11,R[3688],E,R[3689],4,[[["self"]]]],[11,"new",E,"Make a new ServerSession. `config` controls how we behave…",19,[[["arc"]],[R[4500]]]],[11,"get_sni_hostname",E,"Retrieves the SNI hostname, if any, used to select the…",19,[[["self"]],[["str"],[R[52],["str"]]]]],[11,"new",E,"Make a new ClientSessionMemoryCache. `size` is the maximum…",20,[[[R[9]]],[[R[3687]],["arc",[R[3687]]]]]],[11,"new",E,"Make a `ClientConfig` with a default set of ciphersuites,…",3,[[],[R[4225]]]],[11,R[3688],E,R[3689],3,[[["self"]]]],[11,R[3690],E,"Sets persistence layer to `persist`.",3,[[["self"],[R[3691]],["arc",[R[3691]]]]]],[11,"set_mtu",E,"Sets MTU to `mtu`. If None, the default is used. If…",3,[[[R[52]],["self"]]]],[11,"set_single_client_cert",E,"Sets a single client authentication certificate and…",3,[[[R[3692]],["self"],["vec",[R[3686]]],[R[3686]]]]],[11,"new",E,"Make a new ClientSession. `config` controls how we behave…",21,[[["arc"],[R[2913]]],[R[4499]]]],[11,"early_data",E,"Returns an `io::Write` implementor you can write bytes to…",21,[[["self"]],[[R[52],[R[3693]]],[R[3693]]]]],[11,"is_early_data_accepted",E,"Returns True if the server signalled it will process early…",21,[[["self"]],["bool"]]],[11,"new",E,"Makes a new `KeyLogFile`. The environment variable is…",22,[[],["self"]]],[0,"internal",E,"Internal classes which may be useful outside the library.…",N,N],[0,"pemfile",R[3694],"Functions for parsing PEM files containing…",N,N],[5,"certs","rustls::internal::pemfile","Extract all the certificates from rd, and return a vec of…",N,[[["bufread"]],[["vec",[R[3686]]],[R[12],["vec"]]]]],[5,"rsa_private_keys",E,"Extract all RSA private keys from rd, and return a vec of…",N,[[["bufread"]],[[R[12],["vec"]],["vec",[R[3692]]]]]],[5,"pkcs8_private_keys",E,"Extract all PKCS8-encoded private keys from rd, and return…",N,[[["bufread"]],[[R[12],["vec"]],["vec",[R[3692]]]]]],[0,"msgs",R[3694],"Low-level TLS message parsing and encoding functions.",N,N],[0,"codec",R[3695],E,N,N],[3,"Reader",R[4122],"Read from a byte slice.",N,N],[3,"u24",E,E,N,N],[12,"0",E,E,23,N],[5,"decode_u8",E,E,N,[[],[["u8"],[R[52],["u8"]]]]],[5,"put_u16",E,E,N,[[["u16"]]]],[5,"decode_u16",E,E,N,[[],[[R[52],["u16"]],["u16"]]]],[5,"decode_u32",E,E,N,[[],[["u32"],[R[52],["u32"]]]]],[5,"put_u64",E,E,N,[[["u64"]]]],[5,"decode_u64",E,E,N,[[],[["u64"],[R[52],["u64"]]]]],[5,"encode_vec_u8",E,E,N,[[["vec"]]]],[5,"encode_vec_u16",E,E,N,[[["vec"]]]],[5,"encode_vec_u24",E,E,N,[[["vec"]]]],[5,"read_vec_u8",E,E,N,[[["reader"]],[["vec"],[R[52],["vec"]]]]],[5,"read_vec_u16",E,E,N,[[["reader"]],[["vec"],[R[52],["vec"]]]]],[5,"read_vec_u24_limited",E,E,N,[[["reader"],[R[9]]],[["vec"],[R[52],["vec"]]]]],[8,"Codec",E,"Things we can encode and read from a Reader.",N,N],[10,"encode",E,"Encode yourself by appending onto `bytes`.",24,[[["self"],["vec"]]]],[10,"read",E,"Decode yourself by fiddling with the `Reader`. Return Some…",24,[[["reader"]],[R[52]]]],[11,R[4228],E,R[4229],24,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"read_bytes",E,R[4230],24,[[],[R[52]]]],[0,"base",R[3695],E,N,N],[3,"Payload",R[4123],"An externally length'd payload",N,N],[12,"0",E,E,25,N],[3,"PayloadU24",E,"An arbitrary, unknown-content, u24-length-prefixed payload",N,N],[12,"0",E,E,26,N],[3,"PayloadU16",E,"An arbitrary, unknown-content, u16-length-prefixed payload",N,N],[12,"0",E,E,27,N],[3,"PayloadU8",E,"An arbitrary, unknown-content, u8-length-prefixed payload",N,N],[12,"0",E,E,28,N],[0,"enums",R[3695],E,N,N],[4,R[3696],R[4124],E,N,N],[13,"SSLv2",E,E,8,N],[13,"SSLv3",E,E,8,N],[13,"TLSv1_0",E,E,8,N],[13,"TLSv1_1",E,E,8,N],[13,"TLSv1_2",E,E,8,N],[13,"TLSv1_3",E,E,8,N],[13,"Unknown",E,E,8,N],[4,R[4263],E,E,N,N],[13,"NONE",E,E,29,N],[13,"MD5",E,E,29,N],[13,"SHA1",E,E,29,N],[13,"SHA224",E,E,29,N],[13,"SHA256",E,E,29,N],[13,"SHA384",E,E,29,N],[13,"SHA512",E,E,29,N],[13,"Unknown",E,E,29,N],[4,R[2927],E,E,N,N],[13,"Anonymous",E,E,30,N],[13,"RSA",E,E,30,N],[13,"DSA",E,E,30,N],[13,"ECDSA",E,E,30,N],[13,"Unknown",E,E,30,N],[4,R[4264],E,E,N,N],[13,"RSASign",E,E,31,N],[13,"DSSSign",E,E,31,N],[13,"RSAFixedDH",E,E,31,N],[13,"DSSFixedDH",E,E,31,N],[13,"RSAEphemeralDH",E,E,31,N],[13,"DSSEphemeralDH",E,E,31,N],[13,"FortezzaDMS",E,E,31,N],[13,"ECDSASign",E,E,31,N],[13,"RSAFixedECDH",E,E,31,N],[13,"ECDSAFixedECDH",E,E,31,N],[13,"Unknown",E,E,31,N],[4,R[4265],E,E,N,N],[13,"Null",E,E,32,N],[13,"Deflate",E,E,32,N],[13,"LSZ",E,E,32,N],[13,"Unknown",E,E,32,N],[4,R[4266],E,E,N,N],[13,R[4111],E,E,33,N],[13,"Alert",E,E,33,N],[13,"Handshake",E,E,33,N],[13,"ApplicationData",E,E,33,N],[13,"Heartbeat",E,E,33,N],[13,"Unknown",E,E,33,N],[4,R[4267],E,E,N,N],[13,R[4094],E,E,34,N],[13,R[4095],E,E,34,N],[13,R[4096],E,E,34,N],[13,R[4103],E,E,34,N],[13,R[4101],E,E,34,N],[13,R[4078],E,E,34,N],[13,R[4104],E,E,34,N],[13,R[3697],E,E,34,N],[13,R[4097],E,E,34,N],[13,R[4098],E,E,34,N],[13,R[4100],E,E,34,N],[13,R[4099],E,E,34,N],[13,R[4102],E,E,34,N],[13,"Finished",E,E,34,N],[13,"CertificateURL",E,E,34,N],[13,R[4083],E,E,34,N],[13,"KeyUpdate",E,E,34,N],[13,R[4105],E,E,34,N],[13,"Unknown",E,E,34,N],[4,"AlertLevel",E,E,N,N],[13,"Warning",E,E,35,N],[13,"Fatal",E,E,35,N],[13,"Unknown",E,E,35,N],[4,R[4268],E,E,N,N],[13,"CloseNotify",E,E,36,N],[13,"UnexpectedMessage",E,E,36,N],[13,"BadRecordMac",E,E,36,N],[13,"DecryptionFailed",E,E,36,N],[13,"RecordOverflow",E,E,36,N],[13,"DecompressionFailure",E,E,36,N],[13,"HandshakeFailure",E,E,36,N],[13,"NoCertificate",E,E,36,N],[13,"BadCertificate",E,E,36,N],[13,"UnsupportedCertificate",E,E,36,N],[13,"CertificateRevoked",E,E,36,N],[13,"CertificateExpired",E,E,36,N],[13,"CertificateUnknown",E,E,36,N],[13,"IllegalParameter",E,E,36,N],[13,"UnknownCA",E,E,36,N],[13,"AccessDenied",E,E,36,N],[13,R[2274],E,E,36,N],[13,R[3698],E,E,36,N],[13,"ExportRestriction",E,E,36,N],[13,R[3696],E,E,36,N],[13,"InsufficientSecurity",E,E,36,N],[13,"InternalError",E,E,36,N],[13,"InappropriateFallback",E,E,36,N],[13,"UserCanceled",E,E,36,N],[13,"NoRenegotiation",E,E,36,N],[13,"MissingExtension",E,E,36,N],[13,"UnsupportedExtension",E,E,36,N],[13,"CertificateUnobtainable",E,E,36,N],[13,"UnrecognisedName",E,E,36,N],[13,"BadCertificateStatusResponse",E,E,36,N],[13,"BadCertificateHashValue",E,E,36,N],[13,"UnknownPSKIdentity",E,E,36,N],[13,"CertificateRequired",E,E,36,N],[13,"NoApplicationProtocol",E,E,36,N],[13,"Unknown",E,E,36,N],[4,R[4269],E,E,N,N],[13,"Request",E,E,37,N],[13,"Response",E,E,37,N],[13,"Unknown",E,E,37,N],[4,R[4270],E,E,N,N],[13,R[4086],E,E,38,N],[13,"MaxFragmentLength",E,E,38,N],[13,"ClientCertificateUrl",E,E,38,N],[13,"TrustedCAKeys",E,E,38,N],[13,"TruncatedHMAC",E,E,38,N],[13,"StatusRequest",E,E,38,N],[13,"UserMapping",E,E,38,N],[13,"ClientAuthz",E,E,38,N],[13,"ServerAuthz",E,E,38,N],[13,"CertificateType",E,E,38,N],[13,"EllipticCurves",E,E,38,N],[13,R[4084],E,E,38,N],[13,"SRP",E,E,38,N],[13,R[4085],E,E,38,N],[13,"UseSRTP",E,E,38,N],[13,"Heartbeat",E,E,38,N],[13,"ALProtocolNegotiation",E,E,38,N],[13,"SCT",E,E,38,N],[13,"Padding",E,E,38,N],[13,"ExtendedMasterSecret",E,E,38,N],[13,"SessionTicket",E,E,38,N],[13,"PreSharedKey",E,E,38,N],[13,R[4093],E,E,38,N],[13,R[4087],E,E,38,N],[13,"Cookie",E,E,38,N],[13,R[4107],E,E,38,N],[13,"TicketEarlyDataInfo",E,E,38,N],[13,"CertificateAuthorities",E,E,38,N],[13,"OIDFilters",E,E,38,N],[13,"PostHandshakeAuth",E,E,38,N],[13,"SignatureAlgorithmsCert",E,E,38,N],[13,"KeyShare",E,E,38,N],[13,"NextProtocolNegotiation",E,E,38,N],[13,"ChannelId",E,E,38,N],[13,R[4090],E,E,38,N],[13,R[4089],E,E,38,N],[13,"Unknown",E,E,38,N],[4,R[4271],E,E,N,N],[13,"HostName",E,E,39,N],[13,"Unknown",E,E,39,N],[4,R[4272],E,E,N,N],[13,"sect163k1",E,E,40,N],[13,"sect163r1",E,E,40,N],[13,"sect163r2",E,E,40,N],[13,"sect193r1",E,E,40,N],[13,"sect193r2",E,E,40,N],[13,"sect233k1",E,E,40,N],[13,"sect233r1",E,E,40,N],[13,"sect239k1",E,E,40,N],[13,"sect283k1",E,E,40,N],[13,"sect283r1",E,E,40,N],[13,"sect409k1",E,E,40,N],[13,"sect409r1",E,E,40,N],[13,"sect571k1",E,E,40,N],[13,"sect571r1",E,E,40,N],[13,"secp160k1",E,E,40,N],[13,"secp160r1",E,E,40,N],[13,"secp160r2",E,E,40,N],[13,"secp192k1",E,E,40,N],[13,"secp192r1",E,E,40,N],[13,"secp224k1",E,E,40,N],[13,"secp224r1",E,E,40,N],[13,"secp256k1",E,E,40,N],[13,"secp256r1",E,E,40,N],[13,"secp384r1",E,E,40,N],[13,"secp521r1",E,E,40,N],[13,"brainpoolp256r1",E,E,40,N],[13,"brainpoolp384r1",E,E,40,N],[13,"brainpoolp512r1",E,E,40,N],[13,"X25519",E,E,40,N],[13,"X448",E,E,40,N],[13,"arbitrary_explicit_prime_curves",E,E,40,N],[13,"arbitrary_explicit_char2_curves",E,E,40,N],[13,"Unknown",E,E,40,N],[4,"NamedGroup",E,E,N,N],[13,"secp256r1",E,E,41,N],[13,"secp384r1",E,E,41,N],[13,"secp521r1",E,E,41,N],[13,"X25519",E,E,41,N],[13,"X448",E,E,41,N],[13,"FFDHE2048",E,E,41,N],[13,"FFDHE3072",E,E,41,N],[13,"FFDHE4096",E,E,41,N],[13,"FFDHE6144",E,E,41,N],[13,"FFDHE8192",E,E,41,N],[13,"Unknown",E,E,41,N],[4,R[3699],E,E,N,N],[13,R[3700],E,E,10,N],[13,R[3701],E,E,10,N],[13,R[3702],E,E,10,N],[13,R[3703],E,E,10,N],[13,R[3704],E,E,10,N],[13,R[3705],E,E,10,N],[13,R[3706],E,E,10,N],[13,R[3707],E,E,10,N],[13,R[3708],E,E,10,N],[13,R[3709],E,E,10,N],[13,R[3710],E,E,10,N],[13,R[3711],E,E,10,N],[13,R[3712],E,E,10,N],[13,R[3713],E,E,10,N],[13,R[3714],E,E,10,N],[13,R[3715],E,E,10,N],[13,R[3716],E,E,10,N],[13,R[3717],E,E,10,N],[13,R[3718],E,E,10,N],[13,R[3719],E,E,10,N],[13,R[3720],E,E,10,N],[13,R[3721],E,E,10,N],[13,R[3722],E,E,10,N],[13,R[3723],E,E,10,N],[13,R[3724],E,E,10,N],[13,R[3725],E,E,10,N],[13,R[3726],E,E,10,N],[13,R[3727],E,E,10,N],[13,R[3728],E,E,10,N],[13,R[3729],E,E,10,N],[13,R[3730],E,E,10,N],[13,R[3731],E,E,10,N],[13,R[3732],E,E,10,N],[13,R[3733],E,E,10,N],[13,R[3734],E,E,10,N],[13,R[3735],E,E,10,N],[13,R[3736],E,E,10,N],[13,R[3737],E,E,10,N],[13,R[3738],E,E,10,N],[13,R[3739],E,E,10,N],[13,R[3740],E,E,10,N],[13,R[3741],E,E,10,N],[13,R[3742],E,E,10,N],[13,R[3743],E,E,10,N],[13,R[3744],E,E,10,N],[13,R[3745],E,E,10,N],[13,R[3746],E,E,10,N],[13,R[3747],E,E,10,N],[13,R[3748],E,E,10,N],[13,R[3749],E,E,10,N],[13,R[3750],E,E,10,N],[13,R[3751],E,E,10,N],[13,R[3752],E,E,10,N],[13,R[3753],E,E,10,N],[13,R[3754],E,E,10,N],[13,R[3755],E,E,10,N],[13,R[3756],E,E,10,N],[13,R[3757],E,E,10,N],[13,R[3758],E,E,10,N],[13,R[3759],E,E,10,N],[13,R[3760],E,E,10,N],[13,R[3761],E,E,10,N],[13,R[3762],E,E,10,N],[13,R[3763],E,E,10,N],[13,R[3764],E,E,10,N],[13,R[3765],E,E,10,N],[13,R[3766],E,E,10,N],[13,R[3767],E,E,10,N],[13,R[3768],E,E,10,N],[13,R[3769],E,E,10,N],[13,R[3770],E,E,10,N],[13,R[3771],E,E,10,N],[13,R[3772],E,E,10,N],[13,R[3773],E,E,10,N],[13,R[3774],E,E,10,N],[13,R[3775],E,E,10,N],[13,R[3776],E,E,10,N],[13,R[3777],E,E,10,N],[13,R[3778],E,E,10,N],[13,R[3779],E,E,10,N],[13,R[3780],E,E,10,N],[13,R[3781],E,E,10,N],[13,R[3782],E,E,10,N],[13,R[3783],E,E,10,N],[13,R[3784],E,E,10,N],[13,R[3785],E,E,10,N],[13,R[3786],E,E,10,N],[13,R[3787],E,E,10,N],[13,R[3788],E,E,10,N],[13,R[3789],E,E,10,N],[13,R[3790],E,E,10,N],[13,R[3791],E,E,10,N],[13,R[3792],E,E,10,N],[13,R[3793],E,E,10,N],[13,R[3794],E,E,10,N],[13,R[3795],E,E,10,N],[13,R[3796],E,E,10,N],[13,R[3797],E,E,10,N],[13,R[3798],E,E,10,N],[13,R[3799],E,E,10,N],[13,R[3800],E,E,10,N],[13,R[3801],E,E,10,N],[13,R[3802],E,E,10,N],[13,R[3803],E,E,10,N],[13,R[3804],E,E,10,N],[13,R[3805],E,E,10,N],[13,R[3806],E,E,10,N],[13,R[3807],E,E,10,N],[13,R[3808],E,E,10,N],[13,R[3809],E,E,10,N],[13,R[3810],E,E,10,N],[13,R[3811],E,E,10,N],[13,R[3812],E,E,10,N],[13,R[3813],E,E,10,N],[13,R[3814],E,E,10,N],[13,R[3815],E,E,10,N],[13,R[3816],E,E,10,N],[13,R[3817],E,E,10,N],[13,R[3818],E,E,10,N],[13,R[3819],E,E,10,N],[13,R[3820],E,E,10,N],[13,R[3821],E,E,10,N],[13,R[3822],E,E,10,N],[13,R[3823],E,E,10,N],[13,R[3824],E,E,10,N],[13,R[3825],E,E,10,N],[13,R[3826],E,E,10,N],[13,R[3827],E,E,10,N],[13,R[3828],E,E,10,N],[13,R[3829],E,E,10,N],[13,R[3830],E,E,10,N],[13,R[3831],E,E,10,N],[13,R[3832],E,E,10,N],[13,R[3833],E,E,10,N],[13,R[3834],E,E,10,N],[13,R[3835],E,E,10,N],[13,R[3836],E,E,10,N],[13,R[3837],E,E,10,N],[13,R[3838],E,E,10,N],[13,R[3839],E,E,10,N],[13,R[3840],E,E,10,N],[13,R[3841],E,E,10,N],[13,R[3842],E,E,10,N],[13,R[3843],E,E,10,N],[13,R[3844],E,E,10,N],[13,R[3845],E,E,10,N],[13,R[3846],E,E,10,N],[13,R[3847],E,E,10,N],[13,R[3848],E,E,10,N],[13,R[3849],E,E,10,N],[13,R[3850],E,E,10,N],[13,R[3851],E,E,10,N],[13,R[3852],E,E,10,N],[13,R[3853],E,E,10,N],[13,R[3854],E,E,10,N],[13,R[3855],E,E,10,N],[13,R[3856],E,E,10,N],[13,R[3857],E,E,10,N],[13,R[3858],E,E,10,N],[13,R[3859],E,E,10,N],[13,R[3860],E,E,10,N],[13,R[3861],E,E,10,N],[13,R[3862],E,E,10,N],[13,R[3863],E,E,10,N],[13,R[3864],E,E,10,N],[13,R[3865],E,E,10,N],[13,R[3866],E,E,10,N],[13,R[3867],E,E,10,N],[13,R[3868],E,E,10,N],[13,R[3869],E,E,10,N],[13,R[3870],E,E,10,N],[13,R[3871],E,E,10,N],[13,R[3872],E,E,10,N],[13,R[3873],E,E,10,N],[13,R[3874],E,E,10,N],[13,R[3875],E,E,10,N],[13,R[3876],E,E,10,N],[13,R[3877],E,E,10,N],[13,R[3878],E,E,10,N],[13,R[3879],E,E,10,N],[13,R[3880],E,E,10,N],[13,R[3881],E,E,10,N],[13,R[3882],E,E,10,N],[13,R[3883],E,E,10,N],[13,R[3884],E,E,10,N],[13,R[3885],E,E,10,N],[13,R[3886],E,E,10,N],[13,R[3887],E,E,10,N],[13,R[3888],E,E,10,N],[13,R[3889],E,E,10,N],[13,R[3890],E,E,10,N],[13,R[3891],E,E,10,N],[13,R[3892],E,E,10,N],[13,R[3893],E,E,10,N],[13,R[3894],E,E,10,N],[13,R[3895],E,E,10,N],[13,R[3896],E,E,10,N],[13,R[3897],E,E,10,N],[13,R[3898],E,E,10,N],[13,R[3899],E,E,10,N],[13,R[3900],E,E,10,N],[13,R[3901],E,E,10,N],[13,R[3902],E,E,10,N],[13,R[3903],E,E,10,N],[13,R[3904],E,E,10,N],[13,R[3905],E,E,10,N],[13,R[3906],E,E,10,N],[13,R[3907],E,E,10,N],[13,R[3908],E,E,10,N],[13,R[3909],E,E,10,N],[13,R[3910],E,E,10,N],[13,R[3911],E,E,10,N],[13,R[3912],E,E,10,N],[13,R[3913],E,E,10,N],[13,R[3914],E,E,10,N],[13,R[3915],E,E,10,N],[13,R[3916],E,E,10,N],[13,R[3917],E,E,10,N],[13,R[3918],E,E,10,N],[13,R[3919],E,E,10,N],[13,R[3920],E,E,10,N],[13,R[3921],E,E,10,N],[13,R[3922],E,E,10,N],[13,R[3923],E,E,10,N],[13,R[3924],E,E,10,N],[13,R[3925],E,E,10,N],[13,R[3926],E,E,10,N],[13,R[3927],E,E,10,N],[13,R[3928],E,E,10,N],[13,R[3929],E,E,10,N],[13,R[3930],E,E,10,N],[13,R[3931],E,E,10,N],[13,R[3932],E,E,10,N],[13,R[3933],E,E,10,N],[13,R[3934],E,E,10,N],[13,R[3935],E,E,10,N],[13,R[3936],E,E,10,N],[13,R[3937],E,E,10,N],[13,R[3938],E,E,10,N],[13,R[3939],E,E,10,N],[13,R[3940],E,E,10,N],[13,R[3941],E,E,10,N],[13,R[3942],E,E,10,N],[13,R[3943],E,E,10,N],[13,R[3944],E,E,10,N],[13,R[3945],E,E,10,N],[13,R[3946],E,E,10,N],[13,R[3947],E,E,10,N],[13,R[3948],E,E,10,N],[13,R[3949],E,E,10,N],[13,R[3950],E,E,10,N],[13,R[3951],E,E,10,N],[13,R[3952],E,E,10,N],[13,R[3953],E,E,10,N],[13,R[3954],E,E,10,N],[13,R[3955],E,E,10,N],[13,R[3956],E,E,10,N],[13,R[3957],E,E,10,N],[13,R[3958],E,E,10,N],[13,R[3959],E,E,10,N],[13,R[3960],E,E,10,N],[13,R[3961],E,E,10,N],[13,R[3962],E,E,10,N],[13,R[3963],E,E,10,N],[13,R[3964],E,E,10,N],[13,R[3965],E,E,10,N],[13,R[3966],E,E,10,N],[13,R[3967],E,E,10,N],[13,R[3968],E,E,10,N],[13,R[3969],E,E,10,N],[13,R[3970],E,E,10,N],[13,R[3971],E,E,10,N],[13,R[3972],E,E,10,N],[13,R[3973],E,E,10,N],[13,R[3974],E,E,10,N],[13,R[3975],E,E,10,N],[13,R[3976],E,E,10,N],[13,R[3977],E,E,10,N],[13,R[3978],E,E,10,N],[13,R[3979],E,E,10,N],[13,R[3980],E,E,10,N],[13,R[3981],E,E,10,N],[13,R[3982],E,E,10,N],[13,R[3983],E,E,10,N],[13,R[3984],E,E,10,N],[13,R[3985],E,E,10,N],[13,R[3986],E,E,10,N],[13,R[3987],E,E,10,N],[13,R[3988],E,E,10,N],[13,R[3989],E,E,10,N],[13,R[3990],E,E,10,N],[13,R[3991],E,E,10,N],[13,R[3992],E,E,10,N],[13,R[3993],E,E,10,N],[13,R[3994],E,E,10,N],[13,R[3995],E,E,10,N],[13,R[3996],E,E,10,N],[13,R[3997],E,E,10,N],[13,R[3998],E,E,10,N],[13,R[3999],E,E,10,N],[13,R[4000],E,E,10,N],[13,R[4001],E,E,10,N],[13,R[4002],E,E,10,N],[13,R[4003],E,E,10,N],[13,R[4004],E,E,10,N],[13,R[4005],E,E,10,N],[13,R[4006],E,E,10,N],[13,R[4007],E,E,10,N],[13,R[4008],E,E,10,N],[13,R[4009],E,E,10,N],[13,R[4010],E,E,10,N],[13,R[4011],E,E,10,N],[13,R[4012],E,E,10,N],[13,R[4013],E,E,10,N],[13,R[4014],E,E,10,N],[13,R[4015],E,E,10,N],[13,R[4016],E,E,10,N],[13,R[4017],E,E,10,N],[13,R[4018],E,E,10,N],[13,R[4019],E,E,10,N],[13,R[4020],E,E,10,N],[13,R[4021],E,E,10,N],[13,R[4022],E,E,10,N],[13,R[4023],E,E,10,N],[13,R[4024],E,E,10,N],[13,R[4025],E,E,10,N],[13,R[4026],E,E,10,N],[13,R[4027],E,E,10,N],[13,R[4028],E,E,10,N],[13,R[4029],E,E,10,N],[13,R[4030],E,E,10,N],[13,R[4031],E,E,10,N],[13,R[4032],E,E,10,N],[13,R[4033],E,E,10,N],[13,R[4034],E,E,10,N],[13,R[4035],E,E,10,N],[13,R[4036],E,E,10,N],[13,R[4037],E,E,10,N],[13,R[4038],E,E,10,N],[13,R[4039],E,E,10,N],[13,R[4040],E,E,10,N],[13,R[4041],E,E,10,N],[13,R[4042],E,E,10,N],[13,R[4043],E,E,10,N],[13,R[4044],E,E,10,N],[13,R[4045],E,E,10,N],[13,R[4046],E,E,10,N],[13,R[4047],E,E,10,N],[13,R[4048],E,E,10,N],[13,R[4049],E,E,10,N],[13,R[4050],E,E,10,N],[13,R[4051],E,E,10,N],[13,R[4052],E,E,10,N],[13,R[4053],E,E,10,N],[13,R[4054],E,E,10,N],[13,R[4055],E,E,10,N],[13,R[4056],E,E,10,N],[13,R[4057],E,E,10,N],[13,R[4058],E,E,10,N],[13,R[4059],E,E,10,N],[13,R[4060],E,E,10,N],[13,R[4061],E,E,10,N],[13,R[4062],E,E,10,N],[13,R[4063],E,E,10,N],[13,R[4064],E,E,10,N],[13,R[4065],E,E,10,N],[13,R[4066],E,E,10,N],[13,R[4067],E,E,10,N],[13,R[4068],E,E,10,N],[13,R[4069],E,E,10,N],[13,R[4070],E,E,10,N],[13,R[4071],E,E,10,N],[13,"Unknown",E,E,10,N],[4,R[4273],E,E,N,N],[13,"Uncompressed",E,E,42,N],[13,"ANSIX962CompressedPrime",E,E,42,N],[13,"ANSIX962CompressedChar2",E,E,42,N],[13,"Unknown",E,E,42,N],[4,R[4274],E,E,N,N],[13,"PeerAllowedToSend",E,E,43,N],[13,"PeerNotAllowedToSend",E,E,43,N],[13,"Unknown",E,E,43,N],[4,R[4275],E,E,N,N],[13,"ExplicitPrime",E,E,44,N],[13,"ExplicitChar2",E,E,44,N],[13,R[4272],E,E,44,N],[13,"Unknown",E,E,44,N],[4,R[4072],E,E,N,N],[13,R[4073],E,E,9,N],[13,R[4074],E,E,9,N],[13,R[3667],E,E,9,N],[13,R[4075],E,E,9,N],[13,R[3668],E,E,9,N],[13,R[4076],E,E,9,N],[13,R[3669],E,E,9,N],[13,R[4077],E,E,9,N],[13,R[3670],E,E,9,N],[13,R[3671],E,E,9,N],[13,R[3672],E,E,9,N],[13,"ED25519",E,E,9,N],[13,"ED448",E,E,9,N],[13,"Unknown",E,E,9,N],[4,R[4276],E,E,N,N],[13,"PSK_KE",E,E,45,N],[13,"PSK_DHE_KE",E,E,45,N],[13,"Unknown",E,E,45,N],[4,R[4277],E,E,N,N],[13,"UpdateNotRequested",E,E,46,N],[13,"UpdateRequested",E,E,46,N],[13,"Unknown",E,E,46,N],[4,R[4278],E,E,N,N],[13,"OCSP",E,E,47,N],[13,"Unknown",E,E,47,N],[0,"alert",R[3695],E,N,N],[3,R[4279],R[4125],E,N,N],[12,"level",E,E,48,N],[12,R[30],E,E,48,N],[0,"handshake",R[3695],E,N,N],[3,"Random",R[4126],E,N,N],[3,"SessionID",E,E,N,N],[3,R[4280],E,E,N,N],[12,"typ",E,E,49,N],[12,"payload",E,E,49,N],[3,R[4086],E,E,N,N],[12,"typ",E,E,50,N],[12,"payload",E,E,50,N],[3,R[4281],E,E,N,N],[12,"group",E,E,51,N],[12,"payload",E,E,51,N],[3,R[4282],E,E,N,N],[12,"identity",E,E,52,N],[12,"obfuscated_ticket_age",E,E,52,N],[3,R[4283],E,E,N,N],[12,"identities",E,E,53,N],[12,"binders",E,E,53,N],[3,R[4284],E,E,N,N],[12,"responder_ids",E,E,54,N],[12,R[4079],E,E,54,N],[3,R[4285],E,E,N,N],[12,"client_version",E,E,55,N],[12,"random",E,E,55,N],[12,R[4081],E,E,55,N],[12,"cipher_suites",E,E,55,N],[12,"compression_methods",E,E,55,N],[12,R[4079],E,E,55,N],[3,R[4078],E,E,N,N],[12,R[4080],E,E,56,N],[12,R[4081],E,E,56,N],[12,R[4082],E,E,56,N],[12,R[4079],E,E,56,N],[3,R[4286],E,E,N,N],[12,R[4080],E,E,57,N],[12,"random",E,E,57,N],[12,R[4081],E,E,57,N],[12,R[4082],E,E,57,N],[12,"compression_method",E,E,57,N],[12,R[4079],E,E,57,N],[3,R[4287],E,E,N,N],[12,"cert",E,E,58,N],[12,"exts",E,E,58,N],[3,R[4288],E,E,N,N],[12,"context",E,E,59,N],[12,"list",E,E,59,N],[3,R[4289],E,E,N,N],[12,"curve_type",E,E,60,N],[12,"named_group",E,E,60,N],[3,R[4290],E,E,N,N],[12,"scheme",E,E,61,N],[12,"sig",E,E,61,N],[3,R[4291],E,E,N,N],[12,"public",E,E,62,N],[3,R[4292],E,E,N,N],[12,"curve_params",E,E,63,N],[12,"public",E,E,63,N],[3,R[4293],E,E,N,N],[12,"params",E,E,64,N],[12,"dss",E,E,64,N],[3,R[4294],E,E,N,N],[12,"certtypes",E,E,65,N],[12,"sigschemes",E,E,65,N],[12,"canames",E,E,65,N],[3,R[4295],E,E,N,N],[12,"context",E,E,66,N],[12,R[4079],E,E,66,N],[3,R[4296],E,E,N,N],[12,"lifetime_hint",E,E,67,N],[12,"ticket",E,E,67,N],[3,R[4297],E,E,N,N],[12,R[3075],E,E,68,N],[12,"age_add",E,E,68,N],[12,"nonce",E,E,68,N],[12,"ticket",E,E,68,N],[12,"exts",E,E,68,N],[3,R[4083],E,"Only supports OCSP",N,N],[12,"ocsp_response",E,E,69,N],[3,R[4298],E,E,N,N],[12,"typ",E,E,70,N],[12,"payload",E,E,70,N],[4,R[4299],E,E,N,N],[13,"HostName",E,E,71,N],[13,"Unknown",E,E,71,N],[4,R[4088],E,E,N,N],[13,"OCSP",E,E,72,N],[13,"Unknown",E,E,72,N],[4,R[4300],E,E,N,N],[13,R[4084],E,E,73,N],[13,R[4106],E,E,73,N],[13,R[4085],E,E,73,N],[13,R[4086],E,E,73,N],[13,"SessionTicketRequest",E,E,73,N],[13,"SessionTicketOffer",E,E,73,N],[13,"Protocols",E,E,73,N],[13,R[4087],E,E,73,N],[13,"KeyShare",E,E,73,N],[13,"PresharedKeyModes",E,E,73,N],[13,R[4091],E,E,73,N],[13,"Cookie",E,E,73,N],[13,"ExtendedMasterSecretRequest",E,E,73,N],[13,R[4088],E,E,73,N],[13,"SignedCertificateTimestampRequest",E,E,73,N],[13,R[4089],E,E,73,N],[13,R[4093],E,E,73,N],[13,"Unknown",E,E,73,N],[4,R[4301],E,E,N,N],[13,R[4084],E,E,74,N],[13,"ServerNameAck",E,E,74,N],[13,"SessionTicketAck",E,E,74,N],[13,R[4090],E,E,74,N],[13,"Protocols",E,E,74,N],[13,"KeyShare",E,E,74,N],[13,R[4091],E,E,74,N],[13,"ExtendedMasterSecretAck",E,E,74,N],[13,"CertificateStatusAck",E,E,74,N],[13,R[4092],E,E,74,N],[13,R[4087],E,E,74,N],[13,R[4089],E,E,74,N],[13,R[4093],E,E,74,N],[13,"Unknown",E,E,74,N],[4,R[4302],E,E,N,N],[13,"KeyShare",E,E,75,N],[13,"Cookie",E,E,75,N],[13,R[4087],E,E,75,N],[13,"Unknown",E,E,75,N],[4,R[4303],E,E,N,N],[13,R[4083],E,E,76,N],[13,R[4092],E,E,76,N],[13,"Unknown",E,E,76,N],[4,R[4304],E,E,N,N],[13,"BulkOnly",E,E,77,N],[13,"DH",E,E,77,N],[13,"DHE",E,E,77,N],[13,"RSA",E,E,77,N],[13,"ECDH",E,E,77,N],[13,"ECDHE",E,E,77,N],[4,R[4305],E,E,N,N],[13,"ECDHE",E,E,78,N],[13,"Unknown",E,E,78,N],[4,R[4306],E,E,N,N],[13,R[4085],E,E,79,N],[13,"AuthorityNames",E,E,79,N],[13,"Unknown",E,E,79,N],[4,R[4307],E,E,N,N],[13,R[4093],E,E,80,N],[13,"Unknown",E,E,80,N],[4,R[4308],E,E,N,N],[13,R[4094],E,E,81,N],[13,R[4095],E,E,81,N],[13,R[4096],E,E,81,N],[13,R[4078],E,E,81,N],[13,R[3697],E,E,81,N],[13,"CertificateTLS13",E,E,81,N],[13,R[4097],E,E,81,N],[13,R[4098],E,E,81,N],[13,"CertificateRequestTLS13",E,E,81,N],[13,R[4099],E,E,81,N],[13,R[4100],E,E,81,N],[13,R[4093],E,E,81,N],[13,R[4101],E,E,81,N],[13,R[4102],E,E,81,N],[13,R[4103],E,E,81,N],[13,"NewSessionTicketTLS13",E,E,81,N],[13,R[4104],E,E,81,N],[13,"KeyUpdate",E,E,81,N],[13,"Finished",E,E,81,N],[13,R[4083],E,E,81,N],[13,R[4105],E,E,81,N],[13,"Unknown",E,E,81,N],[6,R[4334],E,E,N,N],[6,R[4335],E,E,N,N],[6,R[4336],E,E,N,N],[6,R[4106],E,E,N,N],[6,R[4337],E,E,N,N],[6,R[4338],E,E,N,N],[6,R[4347],E,E,N,N],[6,R[4339],E,E,N,N],[6,"PresharedKeyBinder",E,E,N,N],[6,"PresharedKeyBinders",E,E,N,N],[6,"SCTList",E,E,N,N],[6,R[4107],E,E,N,N],[6,R[4340],E,E,N,N],[6,R[4341],E,E,N,N],[6,R[4342],E,E,N,N],[6,R[4343],E,E,N,N],[6,R[4104],E,E,N,N],[6,R[4344],E,E,N,N],[6,"DistinguishedName",E,E,N,N],[6,R[4118],E,E,N,N],[6,R[4345],E,E,N,N],[6,R[4346],E,E,N,N],[8,R[4309],E,E,N,N],[10,R[4181],E,E,82,[[],[R[4137]]]],[8,R[4310],E,E,N,N],[10,R[4181],E,E,83,[[],[R[4138]]]],[8,R[4311],E,E,N,N],[10,"sign",E,E,84,[[["self"]],[R[4108]]]],[10,"make",E,E,84,[[[R[4108]],[R[4182]]],[R[3682]]]],[8,R[4312],E,E,N,N],[10,R[4183],E,E,85,[[],[R[4109]]]],[10,R[4184],E,E,85,[[],[R[4109]]]],[8,R[4313],E,E,N,N],[10,R[4185],E,E,86,[[["self"]],[[R[52],[R[2913]]],[R[2913]]]]],[8,R[4314],E,E,N,N],[10,R[4186],E,E,87,[[],["self"]]],[10,"to_strings",E,E,87,[[["self"]],[["vec",["string"]],["string"]]]],[10,R[4187],E,E,87,[[["self"]],[["str"],[R[52],["str"]]]]],[8,R[4315],E,E,N,N],[10,R[4188],E,E,88,[[["self"]]]],[11,R[4231],E,R[4232],88,[[["self"]],["bool"]]],[11,R[4233],E,E,88,[[[R[4211]],["self"]],[[R[4110]],[R[52],[R[4110]]]]]],[11,R[4119],E,E,88,[[["self"]],[["str"],[R[52],["str"]]]]],[11,R[4234],E,E,88,[[["self"]],[[R[52],["vec"]],["vec",["u8"]]]]],[11,R[4235],E,E,88,[[["self"]],["bool"]]],[0,"ccs",R[3695],E,N,N],[3,R[4331],R[4127],E,N,N],[0,"message",R[3695],E,N,N],[3,"Message",R[4128],"A TLS frame, named TLSPlaintext in the standard. This type…",N,N],[12,"typ",E,E,89,N],[12,"version",E,E,89,N],[12,"payload",E,E,89,N],[3,R[4316],E,"A TLS frame, named TLSPlaintext in the standard.",N,N],[12,"typ",E,E,90,N],[12,"version",E,E,90,N],[12,"payload",E,E,90,N],[4,R[4317],E,E,N,N],[13,"Alert",E,E,91,N],[13,"Handshake",E,E,91,N],[13,R[4111],E,E,91,N],[13,"Opaque",E,E,91,N],[0,"persist",R[3695],E,N,N],[3,R[4332],R[4129],"Keys for session resumption and tickets. Matching value is…",N,N],[3,R[4318],E,E,N,N],[12,"version",E,E,92,N],[12,R[4082],E,E,92,N],[12,R[4081],E,E,92,N],[12,"ticket",E,E,92,N],[12,R[4112],E,E,92,N],[12,"epoch",E,E,92,N],[12,R[3075],E,E,92,N],[12,"age_add",E,E,92,N],[12,R[4113],E,E,92,N],[12,"max_early_data_size",E,E,92,N],[3,R[4319],E,E,N,N],[12,"sni",E,E,93,N],[12,"version",E,E,93,N],[12,R[4082],E,E,93,N],[12,R[4112],E,E,93,N],[12,R[4113],E,E,93,N],[12,"client_cert_chain",E,E,93,N],[6,"ServerSessionKey",E,E,N,N],[0,"deframer",R[3695],E,N,N],[3,R[4320],R[4130],"This deframer works to reconstruct TLS messages from…",N,N],[12,"frames",E,"Completed frames for output.",94,N],[12,"desynced",E,"Set to true if the peer is not talking TLS, but some other…",94,N],[0,"fragmenter",R[3695],E,N,N],[3,R[4333],R[4131],E,N,N],[17,"MAX_FRAGMENT_LEN",E,E,N,N],[17,"PACKET_OVERHEAD",E,E,N,N],[0,"hsjoiner",R[3695],E,N,N],[3,R[4321],R[4132],"This works to reconstruct TLS handshake messages from…",N,N],[12,"frames",E,"Completed handshake frames for output.",95,N],[0,"sign","rustls","Message signing interfaces and implementations.",N,N],[3,R[4322],R[4133],"A packaged-together certificate chain, matching…",N,N],[12,"cert",E,"The certificate chain.",96,N],[12,"key",E,"The certified key.",96,N],[12,"ocsp",E,"An optional OCSP response from the certificate issuer,…",96,N],[12,"sct_list",E,"An optional collection of SCTs from CT logs, proving the…",96,N],[3,R[4323],E,"A `SigningKey` for RSA-PKCS1 or RSA-PSS",N,N],[5,"any_supported_type",E,"Parse `der` as any supported key encoding/type, returning…",N,[[[R[3692]]],[["box",[R[2041]]],[R[12],["box"]]]]],[5,"any_ecdsa_type",E,"Parse `der` as any ECDSA key type, returning the first…",N,[[[R[3692]]],[["box",[R[2041]]],[R[12],["box"]]]]],[8,R[4114],E,"An abstract signing key.",N,N],[10,R[4201],E,"Choose a `SignatureScheme` from those offered.",97,[[["self"]],[[R[52],["box"]],["box",["signer"]]]]],[10,R[2036],E,"What kind of key we have.",97,[[["self"]],[R[4108]]]],[8,"Signer",E,"A thing that can sign a message.",N,N],[10,"sign",E,"Signs `message` using the selected scheme.",98,[[["self"]],[[R[12],["vec",R[4115]]],[R[4115]],["vec",["u8"]]]]],[10,"get_scheme",E,"Reveals which scheme will be used when you call `sign()`.",98,[[["self"]],[R[3682]]]],[11,"new",E,"Make a new CertifiedKey, with the given chain and key.",96,[[["box",[R[2041]]],["vec",[R[3686]]],["arc",["box"]],[R[3686]]],[R[4116]]]],[11,"end_entity_cert",E,"The end-entity certificate.",96,[[["self"]],[[R[12],[R[3686]]],[R[3686]]]]],[11,"take_cert",E,"Steal ownership of the certificate chain.",96,[[["self"]],[["vec",[R[3686]]],[R[3686]]]]],[11,"has_ocsp",E,"Return true if there's an OCSP response.",96,[[["self"]],["bool"]]],[11,"take_ocsp",E,"Steal ownership of the OCSP response.",96,[[["self"]],[[R[52],["vec"]],["vec",["u8"]]]]],[11,"has_sct_list",E,"Return true if there's an SCT list.",96,[[["self"]],["bool"]]],[11,"take_sct_list",E,"Steal ownership of the SCT list.",96,[[["self"]],[[R[52],["vec"]],["vec",["u8"]]]]],[11,"cross_check_end_entity_cert",E,"Check the certificate chain for validity: - it should be…",96,[[[R[52],[R[2913]]],["self"],[R[2913]]],[[R[12],[R[4115]]],[R[4115]]]]],[11,"new",E,"Make a new `RSASigningKey` from a DER encoding, in either…",99,[[[R[3692]]],[[R[4117]],[R[12],[R[4117]]]]]],[6,R[4118],"rustls",E,N,N],[7,"ALL_CIPHERSUITES",E,"A list of all the cipher suites supported by rustls.",N,N],[8,"Session",E,"Generalises `ClientSession` and `ServerSession`",N,N],[10,"read_tls",E,"Read TLS content from `rd`. This method does internal…",100,[[["self"],["read"]],[[R[12],[R[9],"error"]],["error"],[R[9]]]]],[10,"write_tls",E,R[4189],100,[[["write"],["self"]],[[R[12],[R[9],"error"]],["error"],[R[9]]]]],[10,R[4199],E,"Like `write_tls`, but writes potentially many records in…",100,[[["self"],["writev"]],[[R[12],[R[9],"error"]],["error"],[R[9]]]]],[10,R[4190],E,"Processes any new packets read by a previous call to…",100,[[["self"]],[[R[12],[R[4115]]],[R[4115]]]]],[10,R[4200],E,"Returns true if the caller should call `read_tls` as soon…",100,[[["self"]],["bool"]]],[10,R[4191],E,"Returns true if the caller should call `write_tls` as soon…",100,[[["self"]],["bool"]]],[10,R[4192],E,"Returns true if the session is currently perform the TLS…",100,[[["self"]],["bool"]]],[10,R[4193],E,"Sets a limit on the internal buffers used to buffer unsent…",100,[[["self"],[R[9]]]]],[10,R[4194],E,"Queues a close_notify fatal alert to be sent in the next…",100,[[["self"]]]],[10,R[4195],E,"Retrieves the certificate chain used by the peer to…",100,[[["self"]],[["vec",[R[3686]]],[R[52],["vec"]]]]],[10,R[4119],E,"Retrieves the protocol agreed with the peer via ALPN.",100,[[["self"]],[["str"],[R[52],["str"]]]]],[10,R[4196],E,"Retrieves the protocol version agreed with the peer.",100,[[["self"]],[[R[4120]],[R[52],[R[4120]]]]]],[10,R[4197],E,"Derives key material from the agreed session secrets.",100,[[["self"],[R[52]]],[[R[12],[R[4115]]],[R[4115]]]]],[10,R[4198],E,"Retrieves the ciphersuite agreed with the peer.",100,[[["self"]],[[R[52],[R[4121]]],[R[4121]]]]],[11,R[4247],E,R[4248],100,[[["self"],[T]],[["error"],[R[12],["error"]]]]],[8,R[4324],E,"A trait for the ability to store client session data. The…",N,N],[10,"put",E,"Stores a new `value` for `key`. Returns `true` if the…",101,[[["u8"],["self"],["vec",["u8"]]],["bool"]]],[10,"get",E,"Returns the latest value for `key`. Returns `None` if…",101,[[["self"]],[[R[52],["vec"]],["vec",["u8"]]]]],[8,R[4325],E,"A trait for the ability to choose a certificate chain and…",N,N],[10,"resolve",E,"With the server-supplied acceptable issuers in…",102,[[["self"]],[[R[4116]],[R[52],[R[4116]]]]]],[10,"has_certs",E,"Return true if any certificates at all are available.",102,[[["self"]],["bool"]]],[8,R[4326],E,"A trait for the ability to store server session data.",N,N],[10,"put",E,"Store session secrets encoded in `value` against `key`,…",103,[[["u8"],["self"],["vec",["u8"]]],["bool"]]],[10,"get",E,"Find a value with the given `key`. Return it, or None if…",103,[[["self"]],[[R[52],["vec"]],["vec",["u8"]]]]],[10,"take",E,"Find a value with the given `key`. Return it and delete…",103,[[["self"]],[[R[52],["vec"]],["vec",["u8"]]]]],[8,R[4327],E,"How to choose a certificate chain and signing key for use…",N,N],[10,"resolve",E,"Choose a certificate chain and matching key given any…",104,[[[R[52],[R[2913]]],["self"],[R[2913]]],[[R[4116]],[R[52],[R[4116]]]]]],[8,R[4328],E,"A trait for the ability to encrypt and decrypt tickets.",N,N],[10,"enabled",E,"Returns true if this implementation will encrypt/decrypt…",105,[[["self"]],["bool"]]],[10,"get_lifetime",E,"Returns the lifetime in seconds of tickets produced now.…",105,[[["self"]],["u32"]]],[10,"encrypt",E,"Encrypt and authenticate `plain`, returning the resulting…",105,[[["self"]],[[R[52],["vec"]],["vec",["u8"]]]]],[10,"decrypt",E,"Decrypt `cipher`, validating its authenticity protection…",105,[[["self"]],[[R[52],["vec"]],["vec",["u8"]]]]],[8,"KeyLog",E,"This trait represents the ability to do something useful…",N,N],[10,"log",E,"Log the given `secret`. `client_random` is provided for…",106,[[["str"],["self"]]]],[8,"WriteV",E,"This trait specifies rustls's precise requirements doing…",N,N],[10,"writev",E,"Writes as much data from `vbytes` as possible, returning…",107,[[["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[17],E,E,2,[[[T],["self"]]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",E,E,108,[[[T]],[T]]],[11,"into",E,E,108,[[],[U]]],[11,R[11],E,E,108,[[[U]],[R[12]]]],[11,R[39],E,E,108,[[["self"]],[T]]],[11,R[13],E,E,108,[[["self"]],[T]]],[11,R[14],E,E,108,[[],[R[12]]]],[11,R[18],E,E,108,[[["self"]],[R[40]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[11],E,E,20,[[[U]],[R[12]]]],[11,R[39],E,E,20,[[["self"]],[T]]],[11,R[13],E,E,20,[[["self"]],[T]]],[11,R[14],E,E,20,[[],[R[12]]]],[11,R[18],E,E,20,[[["self"]],[R[40]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[17],E,E,3,[[[T],["self"]]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[11],E,E,21,[[[U]],[R[12]]]],[11,R[39],E,E,21,[[["self"]],[T]]],[11,R[13],E,E,21,[[["self"]],[T]]],[11,R[14],E,E,21,[[],[R[12]]]],[11,R[18],E,E,21,[[["self"]],[R[40]]]],[11,"from",E,E,109,[[[T]],[T]]],[11,"into",E,E,109,[[],[U]]],[11,R[11],E,E,109,[[[U]],[R[12]]]],[11,R[39],E,E,109,[[["self"]],[T]]],[11,R[13],E,E,109,[[["self"]],[T]]],[11,R[14],E,E,109,[[],[R[12]]]],[11,R[18],E,E,109,[[["self"]],[R[40]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[11],E,E,17,[[[U]],[R[12]]]],[11,R[39],E,E,17,[[["self"]],[T]]],[11,R[13],E,E,17,[[["self"]],[T]]],[11,R[14],E,E,17,[[],[R[12]]]],[11,R[18],E,E,17,[[["self"]],[R[40]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[16],E,E,4,[[["self"]],[T]]],[11,R[17],E,E,4,[[[T],["self"]]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[11],E,E,19,[[[U]],[R[12]]]],[11,R[39],E,E,19,[[["self"]],[T]]],[11,R[13],E,E,19,[[["self"]],[T]]],[11,R[14],E,E,19,[[],[R[12]]]],[11,R[18],E,E,19,[[["self"]],[R[40]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[11],E,E,18,[[[U]],[R[12]]]],[11,R[39],E,E,18,[[["self"]],[T]]],[11,R[13],E,E,18,[[["self"]],[T]]],[11,R[14],E,E,18,[[],[R[12]]]],[11,R[18],E,E,18,[[["self"]],[R[40]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[11],E,E,16,[[[U]],[R[12]]]],[11,R[39],E,E,16,[[["self"]],[T]]],[11,R[13],E,E,16,[[["self"]],[T]]],[11,R[14],E,E,16,[[],[R[12]]]],[11,R[18],E,E,16,[[["self"]],[R[40]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[11],E,E,15,[[[U]],[R[12]]]],[11,R[39],E,E,15,[[["self"]],[T]]],[11,R[13],E,E,15,[[["self"]],[T]]],[11,R[14],E,E,15,[[],[R[12]]]],[11,R[18],E,E,15,[[["self"]],[R[40]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[11],E,E,13,[[[U]],[R[12]]]],[11,R[39],E,E,13,[[["self"]],[T]]],[11,R[13],E,E,13,[[["self"]],[T]]],[11,R[14],E,E,13,[[],[R[12]]]],[11,R[18],E,E,13,[[["self"]],[R[40]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[11],E,E,14,[[[U]],[R[12]]]],[11,R[39],E,E,14,[[["self"]],[T]]],[11,R[13],E,E,14,[[["self"]],[T]]],[11,R[14],E,E,14,[[],[R[12]]]],[11,R[18],E,E,14,[[["self"]],[R[40]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,R[18],E,E,5,[[["self"]],[R[40]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[16],E,E,6,[[["self"]],[T]]],[11,R[17],E,E,6,[[[T],["self"]]]],[11,R[11],E,E,6,[[[U]],[R[12]]]],[11,R[39],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[],[R[12]]]],[11,R[18],E,E,6,[[["self"]],[R[40]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[16],E,E,7,[[["self"]],[T]]],[11,R[17],E,E,7,[[[T],["self"]]]],[11,R[11],E,E,7,[[[U]],[R[12]]]],[11,R[39],E,E,7,[[["self"]],[T]]],[11,R[13],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[],[R[12]]]],[11,R[18],E,E,7,[[["self"]],[R[40]]]],[11,"from",E,E,110,[[[T]],[T]]],[11,"into",E,E,110,[[],[U]]],[11,R[11],E,E,110,[[[U]],[R[12]]]],[11,R[39],E,E,110,[[["self"]],[T]]],[11,R[13],E,E,110,[[["self"]],[T]]],[11,R[14],E,E,110,[[],[R[12]]]],[11,R[18],E,E,110,[[["self"]],[R[40]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[11],E,E,22,[[[U]],[R[12]]]],[11,R[39],E,E,22,[[["self"]],[T]]],[11,R[13],E,E,22,[[["self"]],[T]]],[11,R[14],E,E,22,[[],[R[12]]]],[11,R[18],E,E,22,[[["self"]],[R[40]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[16],E,E,8,[[["self"]],[T]]],[11,R[17],E,E,8,[[[T],["self"]]]],[11,R[11],E,E,8,[[[U]],[R[12]]]],[11,R[39],E,E,8,[[["self"]],[T]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[],[R[12]]]],[11,R[18],E,E,8,[[["self"]],[R[40]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[16],E,E,9,[[["self"]],[T]]],[11,R[17],E,E,9,[[[T],["self"]]]],[11,R[11],E,E,9,[[[U]],[R[12]]]],[11,R[39],E,E,9,[[["self"]],[T]]],[11,R[13],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[],[R[12]]]],[11,R[18],E,E,9,[[["self"]],[R[40]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[16],E,E,10,[[["self"]],[T]]],[11,R[17],E,E,10,[[[T],["self"]]]],[11,R[11],E,E,10,[[[U]],[R[12]]]],[11,R[39],E,E,10,[[["self"]],[T]]],[11,R[13],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[],[R[12]]]],[11,R[18],E,E,10,[[["self"]],[R[40]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[16],E,E,11,[[["self"]],[T]]],[11,R[17],E,E,11,[[[T],["self"]]]],[11,R[170],E,E,11,[[["self"]],["string"]]],[11,R[11],E,E,11,[[[U]],[R[12]]]],[11,R[39],E,E,11,[[["self"]],[T]]],[11,R[13],E,E,11,[[["self"]],[T]]],[11,R[14],E,E,11,[[],[R[12]]]],[11,R[18],E,E,11,[[["self"]],[R[40]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[11],E,E,12,[[[U]],[R[12]]]],[11,R[39],E,E,12,[[["self"]],[T]]],[11,R[13],E,E,12,[[["self"]],[T]]],[11,R[14],E,E,12,[[],[R[12]]]],[11,R[18],E,E,12,[[["self"]],[R[40]]]],[11,"from",R[4122],E,111,[[[T]],[T]]],[11,"into",E,E,111,[[],[U]]],[11,R[11],E,E,111,[[[U]],[R[12]]]],[11,R[39],E,E,111,[[["self"]],[T]]],[11,R[13],E,E,111,[[["self"]],[T]]],[11,R[14],E,E,111,[[],[R[12]]]],[11,R[18],E,E,111,[[["self"]],[R[40]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[11],E,E,23,[[[U]],[R[12]]]],[11,R[39],E,E,23,[[["self"]],[T]]],[11,R[13],E,E,23,[[["self"]],[T]]],[11,R[14],E,E,23,[[],[R[12]]]],[11,R[18],E,E,23,[[["self"]],[R[40]]]],[11,"from",R[4123],E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[16],E,E,25,[[["self"]],[T]]],[11,R[17],E,E,25,[[[T],["self"]]]],[11,R[11],E,E,25,[[[U]],[R[12]]]],[11,R[39],E,E,25,[[["self"]],[T]]],[11,R[13],E,E,25,[[["self"]],[T]]],[11,R[14],E,E,25,[[],[R[12]]]],[11,R[18],E,E,25,[[["self"]],[R[40]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[16],E,E,26,[[["self"]],[T]]],[11,R[17],E,E,26,[[[T],["self"]]]],[11,R[11],E,E,26,[[[U]],[R[12]]]],[11,R[39],E,E,26,[[["self"]],[T]]],[11,R[13],E,E,26,[[["self"]],[T]]],[11,R[14],E,E,26,[[],[R[12]]]],[11,R[18],E,E,26,[[["self"]],[R[40]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[16],E,E,27,[[["self"]],[T]]],[11,R[17],E,E,27,[[[T],["self"]]]],[11,R[11],E,E,27,[[[U]],[R[12]]]],[11,R[39],E,E,27,[[["self"]],[T]]],[11,R[13],E,E,27,[[["self"]],[T]]],[11,R[14],E,E,27,[[],[R[12]]]],[11,R[18],E,E,27,[[["self"]],[R[40]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[16],E,E,28,[[["self"]],[T]]],[11,R[17],E,E,28,[[[T],["self"]]]],[11,R[11],E,E,28,[[[U]],[R[12]]]],[11,R[39],E,E,28,[[["self"]],[T]]],[11,R[13],E,E,28,[[["self"]],[T]]],[11,R[14],E,E,28,[[],[R[12]]]],[11,R[18],E,E,28,[[["self"]],[R[40]]]],[11,"from",R[4124],E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[16],E,E,29,[[["self"]],[T]]],[11,R[17],E,E,29,[[[T],["self"]]]],[11,R[11],E,E,29,[[[U]],[R[12]]]],[11,R[39],E,E,29,[[["self"]],[T]]],[11,R[13],E,E,29,[[["self"]],[T]]],[11,R[14],E,E,29,[[],[R[12]]]],[11,R[18],E,E,29,[[["self"]],[R[40]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[16],E,E,30,[[["self"]],[T]]],[11,R[17],E,E,30,[[[T],["self"]]]],[11,R[11],E,E,30,[[[U]],[R[12]]]],[11,R[39],E,E,30,[[["self"]],[T]]],[11,R[13],E,E,30,[[["self"]],[T]]],[11,R[14],E,E,30,[[],[R[12]]]],[11,R[18],E,E,30,[[["self"]],[R[40]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[16],E,E,31,[[["self"]],[T]]],[11,R[17],E,E,31,[[[T],["self"]]]],[11,R[11],E,E,31,[[[U]],[R[12]]]],[11,R[39],E,E,31,[[["self"]],[T]]],[11,R[13],E,E,31,[[["self"]],[T]]],[11,R[14],E,E,31,[[],[R[12]]]],[11,R[18],E,E,31,[[["self"]],[R[40]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[16],E,E,32,[[["self"]],[T]]],[11,R[17],E,E,32,[[[T],["self"]]]],[11,R[11],E,E,32,[[[U]],[R[12]]]],[11,R[39],E,E,32,[[["self"]],[T]]],[11,R[13],E,E,32,[[["self"]],[T]]],[11,R[14],E,E,32,[[],[R[12]]]],[11,R[18],E,E,32,[[["self"]],[R[40]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[16],E,E,33,[[["self"]],[T]]],[11,R[17],E,E,33,[[[T],["self"]]]],[11,R[11],E,E,33,[[[U]],[R[12]]]],[11,R[39],E,E,33,[[["self"]],[T]]],[11,R[13],E,E,33,[[["self"]],[T]]],[11,R[14],E,E,33,[[],[R[12]]]],[11,R[18],E,E,33,[[["self"]],[R[40]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[16],E,E,34,[[["self"]],[T]]],[11,R[17],E,E,34,[[[T],["self"]]]],[11,R[11],E,E,34,[[[U]],[R[12]]]],[11,R[39],E,E,34,[[["self"]],[T]]],[11,R[13],E,E,34,[[["self"]],[T]]],[11,R[14],E,E,34,[[],[R[12]]]],[11,R[18],E,E,34,[[["self"]],[R[40]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[16],E,E,35,[[["self"]],[T]]],[11,R[17],E,E,35,[[[T],["self"]]]],[11,R[11],E,E,35,[[[U]],[R[12]]]],[11,R[39],E,E,35,[[["self"]],[T]]],[11,R[13],E,E,35,[[["self"]],[T]]],[11,R[14],E,E,35,[[],[R[12]]]],[11,R[18],E,E,35,[[["self"]],[R[40]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,R[16],E,E,36,[[["self"]],[T]]],[11,R[17],E,E,36,[[[T],["self"]]]],[11,R[11],E,E,36,[[[U]],[R[12]]]],[11,R[39],E,E,36,[[["self"]],[T]]],[11,R[13],E,E,36,[[["self"]],[T]]],[11,R[14],E,E,36,[[],[R[12]]]],[11,R[18],E,E,36,[[["self"]],[R[40]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,"into",E,E,37,[[],[U]]],[11,R[16],E,E,37,[[["self"]],[T]]],[11,R[17],E,E,37,[[[T],["self"]]]],[11,R[11],E,E,37,[[[U]],[R[12]]]],[11,R[39],E,E,37,[[["self"]],[T]]],[11,R[13],E,E,37,[[["self"]],[T]]],[11,R[14],E,E,37,[[],[R[12]]]],[11,R[18],E,E,37,[[["self"]],[R[40]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,"into",E,E,38,[[],[U]]],[11,R[16],E,E,38,[[["self"]],[T]]],[11,R[17],E,E,38,[[[T],["self"]]]],[11,R[11],E,E,38,[[[U]],[R[12]]]],[11,R[39],E,E,38,[[["self"]],[T]]],[11,R[13],E,E,38,[[["self"]],[T]]],[11,R[14],E,E,38,[[],[R[12]]]],[11,R[18],E,E,38,[[["self"]],[R[40]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,R[16],E,E,39,[[["self"]],[T]]],[11,R[17],E,E,39,[[[T],["self"]]]],[11,R[11],E,E,39,[[[U]],[R[12]]]],[11,R[39],E,E,39,[[["self"]],[T]]],[11,R[13],E,E,39,[[["self"]],[T]]],[11,R[14],E,E,39,[[],[R[12]]]],[11,R[18],E,E,39,[[["self"]],[R[40]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,"into",E,E,40,[[],[U]]],[11,R[16],E,E,40,[[["self"]],[T]]],[11,R[17],E,E,40,[[[T],["self"]]]],[11,R[11],E,E,40,[[[U]],[R[12]]]],[11,R[39],E,E,40,[[["self"]],[T]]],[11,R[13],E,E,40,[[["self"]],[T]]],[11,R[14],E,E,40,[[],[R[12]]]],[11,R[18],E,E,40,[[["self"]],[R[40]]]],[11,"from",E,E,41,[[[T]],[T]]],[11,"into",E,E,41,[[],[U]]],[11,R[16],E,E,41,[[["self"]],[T]]],[11,R[17],E,E,41,[[[T],["self"]]]],[11,R[11],E,E,41,[[[U]],[R[12]]]],[11,R[39],E,E,41,[[["self"]],[T]]],[11,R[13],E,E,41,[[["self"]],[T]]],[11,R[14],E,E,41,[[],[R[12]]]],[11,R[18],E,E,41,[[["self"]],[R[40]]]],[11,"from",E,E,42,[[[T]],[T]]],[11,"into",E,E,42,[[],[U]]],[11,R[16],E,E,42,[[["self"]],[T]]],[11,R[17],E,E,42,[[[T],["self"]]]],[11,R[11],E,E,42,[[[U]],[R[12]]]],[11,R[39],E,E,42,[[["self"]],[T]]],[11,R[13],E,E,42,[[["self"]],[T]]],[11,R[14],E,E,42,[[],[R[12]]]],[11,R[18],E,E,42,[[["self"]],[R[40]]]],[11,"from",E,E,43,[[[T]],[T]]],[11,"into",E,E,43,[[],[U]]],[11,R[16],E,E,43,[[["self"]],[T]]],[11,R[17],E,E,43,[[[T],["self"]]]],[11,R[11],E,E,43,[[[U]],[R[12]]]],[11,R[39],E,E,43,[[["self"]],[T]]],[11,R[13],E,E,43,[[["self"]],[T]]],[11,R[14],E,E,43,[[],[R[12]]]],[11,R[18],E,E,43,[[["self"]],[R[40]]]],[11,"from",E,E,44,[[[T]],[T]]],[11,"into",E,E,44,[[],[U]]],[11,R[16],E,E,44,[[["self"]],[T]]],[11,R[17],E,E,44,[[[T],["self"]]]],[11,R[11],E,E,44,[[[U]],[R[12]]]],[11,R[39],E,E,44,[[["self"]],[T]]],[11,R[13],E,E,44,[[["self"]],[T]]],[11,R[14],E,E,44,[[],[R[12]]]],[11,R[18],E,E,44,[[["self"]],[R[40]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,"into",E,E,45,[[],[U]]],[11,R[16],E,E,45,[[["self"]],[T]]],[11,R[17],E,E,45,[[[T],["self"]]]],[11,R[11],E,E,45,[[[U]],[R[12]]]],[11,R[39],E,E,45,[[["self"]],[T]]],[11,R[13],E,E,45,[[["self"]],[T]]],[11,R[14],E,E,45,[[],[R[12]]]],[11,R[18],E,E,45,[[["self"]],[R[40]]]],[11,"from",E,E,46,[[[T]],[T]]],[11,"into",E,E,46,[[],[U]]],[11,R[16],E,E,46,[[["self"]],[T]]],[11,R[17],E,E,46,[[[T],["self"]]]],[11,R[11],E,E,46,[[[U]],[R[12]]]],[11,R[39],E,E,46,[[["self"]],[T]]],[11,R[13],E,E,46,[[["self"]],[T]]],[11,R[14],E,E,46,[[],[R[12]]]],[11,R[18],E,E,46,[[["self"]],[R[40]]]],[11,"from",E,E,47,[[[T]],[T]]],[11,"into",E,E,47,[[],[U]]],[11,R[16],E,E,47,[[["self"]],[T]]],[11,R[17],E,E,47,[[[T],["self"]]]],[11,R[11],E,E,47,[[[U]],[R[12]]]],[11,R[39],E,E,47,[[["self"]],[T]]],[11,R[13],E,E,47,[[["self"]],[T]]],[11,R[14],E,E,47,[[],[R[12]]]],[11,R[18],E,E,47,[[["self"]],[R[40]]]],[11,"from",R[4125],E,48,[[[T]],[T]]],[11,"into",E,E,48,[[],[U]]],[11,R[11],E,E,48,[[[U]],[R[12]]]],[11,R[39],E,E,48,[[["self"]],[T]]],[11,R[13],E,E,48,[[["self"]],[T]]],[11,R[14],E,E,48,[[],[R[12]]]],[11,R[18],E,E,48,[[["self"]],[R[40]]]],[11,"from",R[4126],E,112,[[[T]],[T]]],[11,"into",E,E,112,[[],[U]]],[11,R[16],E,E,112,[[["self"]],[T]]],[11,R[17],E,E,112,[[[T],["self"]]]],[11,R[11],E,E,112,[[[U]],[R[12]]]],[11,R[39],E,E,112,[[["self"]],[T]]],[11,R[13],E,E,112,[[["self"]],[T]]],[11,R[14],E,E,112,[[],[R[12]]]],[11,R[18],E,E,112,[[["self"]],[R[40]]]],[11,"from",E,E,113,[[[T]],[T]]],[11,"into",E,E,113,[[],[U]]],[11,R[16],E,E,113,[[["self"]],[T]]],[11,R[17],E,E,113,[[[T],["self"]]]],[11,R[11],E,E,113,[[[U]],[R[12]]]],[11,R[39],E,E,113,[[["self"]],[T]]],[11,R[13],E,E,113,[[["self"]],[T]]],[11,R[14],E,E,113,[[],[R[12]]]],[11,R[18],E,E,113,[[["self"]],[R[40]]]],[11,"from",E,E,49,[[[T]],[T]]],[11,"into",E,E,49,[[],[U]]],[11,R[16],E,E,49,[[["self"]],[T]]],[11,R[17],E,E,49,[[[T],["self"]]]],[11,R[11],E,E,49,[[[U]],[R[12]]]],[11,R[39],E,E,49,[[["self"]],[T]]],[11,R[13],E,E,49,[[["self"]],[T]]],[11,R[14],E,E,49,[[],[R[12]]]],[11,R[18],E,E,49,[[["self"]],[R[40]]]],[11,"from",E,E,50,[[[T]],[T]]],[11,"into",E,E,50,[[],[U]]],[11,R[16],E,E,50,[[["self"]],[T]]],[11,R[17],E,E,50,[[[T],["self"]]]],[11,R[11],E,E,50,[[[U]],[R[12]]]],[11,R[39],E,E,50,[[["self"]],[T]]],[11,R[13],E,E,50,[[["self"]],[T]]],[11,R[14],E,E,50,[[],[R[12]]]],[11,R[18],E,E,50,[[["self"]],[R[40]]]],[11,"from",E,E,51,[[[T]],[T]]],[11,"into",E,E,51,[[],[U]]],[11,R[16],E,E,51,[[["self"]],[T]]],[11,R[17],E,E,51,[[[T],["self"]]]],[11,R[11],E,E,51,[[[U]],[R[12]]]],[11,R[39],E,E,51,[[["self"]],[T]]],[11,R[13],E,E,51,[[["self"]],[T]]],[11,R[14],E,E,51,[[],[R[12]]]],[11,R[18],E,E,51,[[["self"]],[R[40]]]],[11,"from",E,E,52,[[[T]],[T]]],[11,"into",E,E,52,[[],[U]]],[11,R[16],E,E,52,[[["self"]],[T]]],[11,R[17],E,E,52,[[[T],["self"]]]],[11,R[11],E,E,52,[[[U]],[R[12]]]],[11,R[39],E,E,52,[[["self"]],[T]]],[11,R[13],E,E,52,[[["self"]],[T]]],[11,R[14],E,E,52,[[],[R[12]]]],[11,R[18],E,E,52,[[["self"]],[R[40]]]],[11,"from",E,E,53,[[[T]],[T]]],[11,"into",E,E,53,[[],[U]]],[11,R[16],E,E,53,[[["self"]],[T]]],[11,R[17],E,E,53,[[[T],["self"]]]],[11,R[11],E,E,53,[[[U]],[R[12]]]],[11,R[39],E,E,53,[[["self"]],[T]]],[11,R[13],E,E,53,[[["self"]],[T]]],[11,R[14],E,E,53,[[],[R[12]]]],[11,R[18],E,E,53,[[["self"]],[R[40]]]],[11,"from",E,E,54,[[[T]],[T]]],[11,"into",E,E,54,[[],[U]]],[11,R[16],E,E,54,[[["self"]],[T]]],[11,R[17],E,E,54,[[[T],["self"]]]],[11,R[11],E,E,54,[[[U]],[R[12]]]],[11,R[39],E,E,54,[[["self"]],[T]]],[11,R[13],E,E,54,[[["self"]],[T]]],[11,R[14],E,E,54,[[],[R[12]]]],[11,R[18],E,E,54,[[["self"]],[R[40]]]],[11,"from",E,E,55,[[[T]],[T]]],[11,"into",E,E,55,[[],[U]]],[11,R[11],E,E,55,[[[U]],[R[12]]]],[11,R[39],E,E,55,[[["self"]],[T]]],[11,R[13],E,E,55,[[["self"]],[T]]],[11,R[14],E,E,55,[[],[R[12]]]],[11,R[18],E,E,55,[[["self"]],[R[40]]]],[11,"from",E,E,56,[[[T]],[T]]],[11,"into",E,E,56,[[],[U]]],[11,R[11],E,E,56,[[[U]],[R[12]]]],[11,R[39],E,E,56,[[["self"]],[T]]],[11,R[13],E,E,56,[[["self"]],[T]]],[11,R[14],E,E,56,[[],[R[12]]]],[11,R[18],E,E,56,[[["self"]],[R[40]]]],[11,"from",E,E,57,[[[T]],[T]]],[11,"into",E,E,57,[[],[U]]],[11,R[11],E,E,57,[[[U]],[R[12]]]],[11,R[39],E,E,57,[[["self"]],[T]]],[11,R[13],E,E,57,[[["self"]],[T]]],[11,R[14],E,E,57,[[],[R[12]]]],[11,R[18],E,E,57,[[["self"]],[R[40]]]],[11,"from",E,E,58,[[[T]],[T]]],[11,"into",E,E,58,[[],[U]]],[11,R[11],E,E,58,[[[U]],[R[12]]]],[11,R[39],E,E,58,[[["self"]],[T]]],[11,R[13],E,E,58,[[["self"]],[T]]],[11,R[14],E,E,58,[[],[R[12]]]],[11,R[18],E,E,58,[[["self"]],[R[40]]]],[11,"from",E,E,59,[[[T]],[T]]],[11,"into",E,E,59,[[],[U]]],[11,R[11],E,E,59,[[[U]],[R[12]]]],[11,R[39],E,E,59,[[["self"]],[T]]],[11,R[13],E,E,59,[[["self"]],[T]]],[11,R[14],E,E,59,[[],[R[12]]]],[11,R[18],E,E,59,[[["self"]],[R[40]]]],[11,"from",E,E,60,[[[T]],[T]]],[11,"into",E,E,60,[[],[U]]],[11,R[11],E,E,60,[[[U]],[R[12]]]],[11,R[39],E,E,60,[[["self"]],[T]]],[11,R[13],E,E,60,[[["self"]],[T]]],[11,R[14],E,E,60,[[],[R[12]]]],[11,R[18],E,E,60,[[["self"]],[R[40]]]],[11,"from",E,E,61,[[[T]],[T]]],[11,"into",E,E,61,[[],[U]]],[11,R[16],E,E,61,[[["self"]],[T]]],[11,R[17],E,E,61,[[[T],["self"]]]],[11,R[11],E,E,61,[[[U]],[R[12]]]],[11,R[39],E,E,61,[[["self"]],[T]]],[11,R[13],E,E,61,[[["self"]],[T]]],[11,R[14],E,E,61,[[],[R[12]]]],[11,R[18],E,E,61,[[["self"]],[R[40]]]],[11,"from",E,E,62,[[[T]],[T]]],[11,"into",E,E,62,[[],[U]]],[11,R[11],E,E,62,[[[U]],[R[12]]]],[11,R[39],E,E,62,[[["self"]],[T]]],[11,R[13],E,E,62,[[["self"]],[T]]],[11,R[14],E,E,62,[[],[R[12]]]],[11,R[18],E,E,62,[[["self"]],[R[40]]]],[11,"from",E,E,63,[[[T]],[T]]],[11,"into",E,E,63,[[],[U]]],[11,R[11],E,E,63,[[[U]],[R[12]]]],[11,R[39],E,E,63,[[["self"]],[T]]],[11,R[13],E,E,63,[[["self"]],[T]]],[11,R[14],E,E,63,[[],[R[12]]]],[11,R[18],E,E,63,[[["self"]],[R[40]]]],[11,"from",E,E,64,[[[T]],[T]]],[11,"into",E,E,64,[[],[U]]],[11,R[11],E,E,64,[[[U]],[R[12]]]],[11,R[39],E,E,64,[[["self"]],[T]]],[11,R[13],E,E,64,[[["self"]],[T]]],[11,R[14],E,E,64,[[],[R[12]]]],[11,R[18],E,E,64,[[["self"]],[R[40]]]],[11,"from",E,E,65,[[[T]],[T]]],[11,"into",E,E,65,[[],[U]]],[11,R[11],E,E,65,[[[U]],[R[12]]]],[11,R[39],E,E,65,[[["self"]],[T]]],[11,R[13],E,E,65,[[["self"]],[T]]],[11,R[14],E,E,65,[[],[R[12]]]],[11,R[18],E,E,65,[[["self"]],[R[40]]]],[11,"from",E,E,66,[[[T]],[T]]],[11,"into",E,E,66,[[],[U]]],[11,R[11],E,E,66,[[[U]],[R[12]]]],[11,R[39],E,E,66,[[["self"]],[T]]],[11,R[13],E,E,66,[[["self"]],[T]]],[11,R[14],E,E,66,[[],[R[12]]]],[11,R[18],E,E,66,[[["self"]],[R[40]]]],[11,"from",E,E,67,[[[T]],[T]]],[11,"into",E,E,67,[[],[U]]],[11,R[11],E,E,67,[[[U]],[R[12]]]],[11,R[39],E,E,67,[[["self"]],[T]]],[11,R[13],E,E,67,[[["self"]],[T]]],[11,R[14],E,E,67,[[],[R[12]]]],[11,R[18],E,E,67,[[["self"]],[R[40]]]],[11,"from",E,E,68,[[[T]],[T]]],[11,"into",E,E,68,[[],[U]]],[11,R[11],E,E,68,[[[U]],[R[12]]]],[11,R[39],E,E,68,[[["self"]],[T]]],[11,R[13],E,E,68,[[["self"]],[T]]],[11,R[14],E,E,68,[[],[R[12]]]],[11,R[18],E,E,68,[[["self"]],[R[40]]]],[11,"from",E,E,69,[[[T]],[T]]],[11,"into",E,E,69,[[],[U]]],[11,R[11],E,E,69,[[[U]],[R[12]]]],[11,R[39],E,E,69,[[["self"]],[T]]],[11,R[13],E,E,69,[[["self"]],[T]]],[11,R[14],E,E,69,[[],[R[12]]]],[11,R[18],E,E,69,[[["self"]],[R[40]]]],[11,"from",E,E,70,[[[T]],[T]]],[11,"into",E,E,70,[[],[U]]],[11,R[11],E,E,70,[[[U]],[R[12]]]],[11,R[39],E,E,70,[[["self"]],[T]]],[11,R[13],E,E,70,[[["self"]],[T]]],[11,R[14],E,E,70,[[],[R[12]]]],[11,R[18],E,E,70,[[["self"]],[R[40]]]],[11,"from",E,E,71,[[[T]],[T]]],[11,"into",E,E,71,[[],[U]]],[11,R[16],E,E,71,[[["self"]],[T]]],[11,R[17],E,E,71,[[[T],["self"]]]],[11,R[11],E,E,71,[[[U]],[R[12]]]],[11,R[39],E,E,71,[[["self"]],[T]]],[11,R[13],E,E,71,[[["self"]],[T]]],[11,R[14],E,E,71,[[],[R[12]]]],[11,R[18],E,E,71,[[["self"]],[R[40]]]],[11,"from",E,E,72,[[[T]],[T]]],[11,"into",E,E,72,[[],[U]]],[11,R[16],E,E,72,[[["self"]],[T]]],[11,R[17],E,E,72,[[[T],["self"]]]],[11,R[11],E,E,72,[[[U]],[R[12]]]],[11,R[39],E,E,72,[[["self"]],[T]]],[11,R[13],E,E,72,[[["self"]],[T]]],[11,R[14],E,E,72,[[],[R[12]]]],[11,R[18],E,E,72,[[["self"]],[R[40]]]],[11,"from",E,E,73,[[[T]],[T]]],[11,"into",E,E,73,[[],[U]]],[11,R[16],E,E,73,[[["self"]],[T]]],[11,R[17],E,E,73,[[[T],["self"]]]],[11,R[11],E,E,73,[[[U]],[R[12]]]],[11,R[39],E,E,73,[[["self"]],[T]]],[11,R[13],E,E,73,[[["self"]],[T]]],[11,R[14],E,E,73,[[],[R[12]]]],[11,R[18],E,E,73,[[["self"]],[R[40]]]],[11,"from",E,E,74,[[[T]],[T]]],[11,"into",E,E,74,[[],[U]]],[11,R[16],E,E,74,[[["self"]],[T]]],[11,R[17],E,E,74,[[[T],["self"]]]],[11,R[11],E,E,74,[[[U]],[R[12]]]],[11,R[39],E,E,74,[[["self"]],[T]]],[11,R[13],E,E,74,[[["self"]],[T]]],[11,R[14],E,E,74,[[],[R[12]]]],[11,R[18],E,E,74,[[["self"]],[R[40]]]],[11,"from",E,E,75,[[[T]],[T]]],[11,"into",E,E,75,[[],[U]]],[11,R[11],E,E,75,[[[U]],[R[12]]]],[11,R[39],E,E,75,[[["self"]],[T]]],[11,R[13],E,E,75,[[["self"]],[T]]],[11,R[14],E,E,75,[[],[R[12]]]],[11,R[18],E,E,75,[[["self"]],[R[40]]]],[11,"from",E,E,76,[[[T]],[T]]],[11,"into",E,E,76,[[],[U]]],[11,R[11],E,E,76,[[[U]],[R[12]]]],[11,R[39],E,E,76,[[["self"]],[T]]],[11,R[13],E,E,76,[[["self"]],[T]]],[11,R[14],E,E,76,[[],[R[12]]]],[11,R[18],E,E,76,[[["self"]],[R[40]]]],[11,"from",E,E,77,[[[T]],[T]]],[11,"into",E,E,77,[[],[U]]],[11,R[11],E,E,77,[[[U]],[R[12]]]],[11,R[39],E,E,77,[[["self"]],[T]]],[11,R[13],E,E,77,[[["self"]],[T]]],[11,R[14],E,E,77,[[],[R[12]]]],[11,R[18],E,E,77,[[["self"]],[R[40]]]],[11,"from",E,E,78,[[[T]],[T]]],[11,"into",E,E,78,[[],[U]]],[11,R[11],E,E,78,[[[U]],[R[12]]]],[11,R[39],E,E,78,[[["self"]],[T]]],[11,R[13],E,E,78,[[["self"]],[T]]],[11,R[14],E,E,78,[[],[R[12]]]],[11,R[18],E,E,78,[[["self"]],[R[40]]]],[11,"from",E,E,79,[[[T]],[T]]],[11,"into",E,E,79,[[],[U]]],[11,R[11],E,E,79,[[[U]],[R[12]]]],[11,R[39],E,E,79,[[["self"]],[T]]],[11,R[13],E,E,79,[[["self"]],[T]]],[11,R[14],E,E,79,[[],[R[12]]]],[11,R[18],E,E,79,[[["self"]],[R[40]]]],[11,"from",E,E,80,[[[T]],[T]]],[11,"into",E,E,80,[[],[U]]],[11,R[11],E,E,80,[[[U]],[R[12]]]],[11,R[39],E,E,80,[[["self"]],[T]]],[11,R[13],E,E,80,[[["self"]],[T]]],[11,R[14],E,E,80,[[],[R[12]]]],[11,R[18],E,E,80,[[["self"]],[R[40]]]],[11,"from",E,E,81,[[[T]],[T]]],[11,"into",E,E,81,[[],[U]]],[11,R[11],E,E,81,[[[U]],[R[12]]]],[11,R[39],E,E,81,[[["self"]],[T]]],[11,R[13],E,E,81,[[["self"]],[T]]],[11,R[14],E,E,81,[[],[R[12]]]],[11,R[18],E,E,81,[[["self"]],[R[40]]]],[11,"from",R[4127],E,114,[[[T]],[T]]],[11,"into",E,E,114,[[],[U]]],[11,R[11],E,E,114,[[[U]],[R[12]]]],[11,R[39],E,E,114,[[["self"]],[T]]],[11,R[13],E,E,114,[[["self"]],[T]]],[11,R[14],E,E,114,[[],[R[12]]]],[11,R[18],E,E,114,[[["self"]],[R[40]]]],[11,"from",R[4128],E,89,[[[T]],[T]]],[11,"into",E,E,89,[[],[U]]],[11,R[11],E,E,89,[[[U]],[R[12]]]],[11,R[39],E,E,89,[[["self"]],[T]]],[11,R[13],E,E,89,[[["self"]],[T]]],[11,R[14],E,E,89,[[],[R[12]]]],[11,R[18],E,E,89,[[["self"]],[R[40]]]],[11,"from",E,E,90,[[[T]],[T]]],[11,"into",E,E,90,[[],[U]]],[11,R[11],E,E,90,[[[U]],[R[12]]]],[11,R[39],E,E,90,[[["self"]],[T]]],[11,R[13],E,E,90,[[["self"]],[T]]],[11,R[14],E,E,90,[[],[R[12]]]],[11,R[18],E,E,90,[[["self"]],[R[40]]]],[11,"from",E,E,91,[[[T]],[T]]],[11,"into",E,E,91,[[],[U]]],[11,R[11],E,E,91,[[[U]],[R[12]]]],[11,R[39],E,E,91,[[["self"]],[T]]],[11,R[13],E,E,91,[[["self"]],[T]]],[11,R[14],E,E,91,[[],[R[12]]]],[11,R[18],E,E,91,[[["self"]],[R[40]]]],[11,"from",R[4129],E,115,[[[T]],[T]]],[11,"into",E,E,115,[[],[U]]],[11,R[11],E,E,115,[[[U]],[R[12]]]],[11,R[39],E,E,115,[[["self"]],[T]]],[11,R[13],E,E,115,[[["self"]],[T]]],[11,R[14],E,E,115,[[],[R[12]]]],[11,R[18],E,E,115,[[["self"]],[R[40]]]],[11,"from",E,E,92,[[[T]],[T]]],[11,"into",E,E,92,[[],[U]]],[11,R[11],E,E,92,[[[U]],[R[12]]]],[11,R[39],E,E,92,[[["self"]],[T]]],[11,R[13],E,E,92,[[["self"]],[T]]],[11,R[14],E,E,92,[[],[R[12]]]],[11,R[18],E,E,92,[[["self"]],[R[40]]]],[11,"from",E,E,93,[[[T]],[T]]],[11,"into",E,E,93,[[],[U]]],[11,R[11],E,E,93,[[[U]],[R[12]]]],[11,R[39],E,E,93,[[["self"]],[T]]],[11,R[13],E,E,93,[[["self"]],[T]]],[11,R[14],E,E,93,[[],[R[12]]]],[11,R[18],E,E,93,[[["self"]],[R[40]]]],[11,"from",R[4130],E,94,[[[T]],[T]]],[11,"into",E,E,94,[[],[U]]],[11,R[11],E,E,94,[[[U]],[R[12]]]],[11,R[39],E,E,94,[[["self"]],[T]]],[11,R[13],E,E,94,[[["self"]],[T]]],[11,R[14],E,E,94,[[],[R[12]]]],[11,R[18],E,E,94,[[["self"]],[R[40]]]],[11,"from",R[4131],E,116,[[[T]],[T]]],[11,"into",E,E,116,[[],[U]]],[11,R[11],E,E,116,[[[U]],[R[12]]]],[11,R[39],E,E,116,[[["self"]],[T]]],[11,R[13],E,E,116,[[["self"]],[T]]],[11,R[14],E,E,116,[[],[R[12]]]],[11,R[18],E,E,116,[[["self"]],[R[40]]]],[11,"from",R[4132],E,95,[[[T]],[T]]],[11,"into",E,E,95,[[],[U]]],[11,R[11],E,E,95,[[[U]],[R[12]]]],[11,R[39],E,E,95,[[["self"]],[T]]],[11,R[13],E,E,95,[[["self"]],[T]]],[11,R[14],E,E,95,[[],[R[12]]]],[11,R[18],E,E,95,[[["self"]],[R[40]]]],[11,"from",R[4133],E,96,[[[T]],[T]]],[11,"into",E,E,96,[[],[U]]],[11,R[16],E,E,96,[[["self"]],[T]]],[11,R[17],E,E,96,[[[T],["self"]]]],[11,R[11],E,E,96,[[[U]],[R[12]]]],[11,R[39],E,E,96,[[["self"]],[T]]],[11,R[13],E,E,96,[[["self"]],[T]]],[11,R[14],E,E,96,[[],[R[12]]]],[11,R[18],E,E,96,[[["self"]],[R[40]]]],[11,"from",E,E,99,[[[T]],[T]]],[11,"into",E,E,99,[[],[U]]],[11,R[11],E,E,99,[[[U]],[R[12]]]],[11,R[39],E,E,99,[[["self"]],[T]]],[11,R[13],E,E,99,[[["self"]],[T]]],[11,R[14],E,E,99,[[],[R[12]]]],[11,R[18],E,E,99,[[["self"]],[R[40]]]],[11,"encode",R[4122],E,23,[[["self"],["vec"]]]],[11,"read",E,E,23,[[["reader"]],[["u24"],[R[52],["u24"]]]]],[11,"encode",R[4123],E,25,[[["self"],["vec"]]]],[11,"read",E,E,25,[[["reader"]],[[R[52],["payload"]],["payload"]]]],[11,"encode","rustls",E,6,[[["self"],["vec"]]]],[11,"read",E,E,6,[[["reader"]],[[R[52],[R[3686]]],[R[3686]]]]],[11,"encode",R[4123],E,26,[[["self"],["vec"]]]],[11,"read",E,E,26,[[["reader"]],[[R[52],[R[4202]]],[R[4202]]]]],[11,"encode",E,E,27,[[["self"],["vec"]]]],[11,"read",E,E,27,[[["reader"]],[[R[52],[R[4203]]],[R[4203]]]]],[11,"encode",E,E,28,[[["self"],["vec"]]]],[11,"read",E,E,28,[[["reader"]],[[R[52],[R[4204]]],[R[4204]]]]],[11,"encode","rustls",E,8,[[["self"],["vec"]]]],[11,"read",E,E,8,[[["reader"]],[R[52]]]],[11,"encode",R[4124],E,29,[[["self"],["vec"]]]],[11,"read",E,E,29,[[["reader"]],[R[52]]]],[11,"encode",E,E,30,[[["self"],["vec"]]]],[11,"read",E,E,30,[[["reader"]],[R[52]]]],[11,"encode",E,E,31,[[["self"],["vec"]]]],[11,"read",E,E,31,[[["reader"]],[R[52]]]],[11,"encode",E,E,32,[[["self"],["vec"]]]],[11,"read",E,E,32,[[["reader"]],[R[52]]]],[11,"encode",E,E,33,[[["self"],["vec"]]]],[11,"read",E,E,33,[[["reader"]],[R[52]]]],[11,"encode",E,E,34,[[["self"],["vec"]]]],[11,"read",E,E,34,[[["reader"]],[R[52]]]],[11,"encode",E,E,35,[[["self"],["vec"]]]],[11,"read",E,E,35,[[["reader"]],[R[52]]]],[11,"encode",E,E,36,[[["self"],["vec"]]]],[11,"read",E,E,36,[[["reader"]],[R[52]]]],[11,"encode",E,E,37,[[["self"],["vec"]]]],[11,"read",E,E,37,[[["reader"]],[R[52]]]],[11,"encode",E,E,38,[[["self"],["vec"]]]],[11,"read",E,E,38,[[["reader"]],[R[52]]]],[11,"encode",E,E,39,[[["self"],["vec"]]]],[11,"read",E,E,39,[[["reader"]],[R[52]]]],[11,"encode",E,E,40,[[["self"],["vec"]]]],[11,"read",E,E,40,[[["reader"]],[R[52]]]],[11,"encode",E,E,41,[[["self"],["vec"]]]],[11,"read",E,E,41,[[["reader"]],[R[52]]]],[11,"encode","rustls",E,10,[[["self"],["vec"]]]],[11,"read",E,E,10,[[["reader"]],[R[52]]]],[11,"encode",R[4124],E,42,[[["self"],["vec"]]]],[11,"read",E,E,42,[[["reader"]],[R[52]]]],[11,"encode",E,E,43,[[["self"],["vec"]]]],[11,"read",E,E,43,[[["reader"]],[R[52]]]],[11,"encode",E,E,44,[[["self"],["vec"]]]],[11,"read",E,E,44,[[["reader"]],[R[52]]]],[11,"encode","rustls",E,9,[[["self"],["vec"]]]],[11,"read",E,E,9,[[["reader"]],[R[52]]]],[11,"encode",R[4124],E,45,[[["self"],["vec"]]]],[11,"read",E,E,45,[[["reader"]],[R[52]]]],[11,"encode",E,E,46,[[["self"],["vec"]]]],[11,"read",E,E,46,[[["reader"]],[R[52]]]],[11,"encode",E,E,47,[[["self"],["vec"]]]],[11,"read",E,E,47,[[["reader"]],[R[52]]]],[11,"encode",R[4125],E,48,[[["self"],["vec"]]]],[11,"read",E,E,48,[[["reader"]],[[R[4134]],[R[52],[R[4134]]]]]],[11,"encode","rustls",E,117,[[["self"],["vec"]]]],[11,"read",E,E,117,[[["reader"]],[[R[4135]],[R[52],[R[4135]]]]]],[11,"encode",E,E,118,[[["self"],["vec"]]]],[11,"read",E,E,118,[[["reader"]],[[R[4136]],[R[52],[R[4136]]]]]],[11,"encode",R[4126],E,112,[[["self"],["vec"]]]],[11,"read",E,E,112,[[["reader"]],[["random"],[R[52],["random"]]]]],[11,"encode",E,E,113,[[["self"],["vec"]]]],[11,"read",E,E,113,[[["reader"]],[[R[4236]],[R[52],[R[4236]]]]]],[11,"encode","rustls",E,119,[[["self"],["vec"]]]],[11,"read",E,E,119,[[["reader"]],[[R[4137]],[R[52],[R[4137]]]]]],[11,"encode",E,E,120,[[["self"],["vec"]]]],[11,"read",E,E,120,[[["reader"]],[[R[52],[R[4138]]],[R[4138]]]]],[11,"encode",E,E,121,[[["self"],["vec"]]]],[11,"read",E,E,121,[[["reader"]],[[R[52],[R[4109]]],[R[4109]]]]],[11,"encode",R[4126],E,50,[[["self"],["vec"]]]],[11,"read",E,E,50,[[["reader"]],[[R[4223]],[R[52],[R[4223]]]]]],[11,"encode","rustls",E,122,[[["self"],["vec"]]]],[11,"read",E,E,122,[[["reader"]],[[R[52],[R[4139]]],[R[4139]]]]],[11,"encode",R[4126],E,51,[[["self"],["vec"]]]],[11,"read",E,E,51,[[["reader"]],[[R[4140]],[R[52],[R[4140]]]]]],[11,"encode",E,E,52,[[["self"],["vec"]]]],[11,"read",E,E,52,[[["reader"]],[[R[52],[R[4141]]],[R[4141]]]]],[11,"encode","rustls",E,123,[[["self"],["vec"]]]],[11,"read",E,E,123,[[["reader"]],[[R[4142]],[R[52],[R[4142]]]]]],[11,"encode",R[4126],E,53,[[["self"],["vec"]]]],[11,"read",E,E,53,[[["reader"]],[[R[52],[R[4143]]],[R[4143]]]]],[11,"encode",E,E,54,[[["self"],["vec"]]]],[11,"read",E,E,54,[[["reader"]],[[R[52],[R[4144]]],[R[4144]]]]],[11,"encode",E,E,72,[[["self"],["vec"]]]],[11,"read",E,E,72,[[["reader"]],[[R[52],[R[4145]]],[R[4145]]]]],[11,"encode","rustls",E,124,[[["self"],["vec"]]]],[11,"read",E,E,124,[[["reader"]],[[R[52],[R[4146]]],[R[4146]]]]],[11,"encode",E,E,125,[[["self"],["vec"]]]],[11,"read",E,E,125,[[["reader"]],[[R[4147]],[R[52],[R[4147]]]]]],[11,"encode",E,E,126,[[["self"],["vec"]]]],[11,"read",E,E,126,[[["reader"]],[[R[52],[R[4148]]],[R[4148]]]]],[11,"encode",R[4126],E,73,[[["self"],["vec"]]]],[11,"read",E,E,73,[[["reader"]],[[R[52],[R[4149]]],[R[4149]]]]],[11,"encode",E,E,74,[[["self"],["vec"]]]],[11,"read",E,E,74,[[["reader"]],[[R[52],[R[4110]]],[R[4110]]]]],[11,"encode",E,E,55,[[["self"],["vec"]]]],[11,"read",E,E,55,[[["reader"]],[[R[4150]],[R[52],[R[4150]]]]]],[11,"encode",E,E,75,[[["self"],["vec"]]]],[11,"read",E,E,75,[[["reader"]],[[R[52],[R[4151]]],[R[4151]]]]],[11,"encode",E,E,56,[[["self"],["vec"]]]],[11,"read",E,E,56,[[["reader"]],[[R[52],[R[4152]]],[R[4152]]]]],[11,"encode",E,E,57,[[["self"],["vec"]]]],[11,"read",E,E,57,[[["reader"]],[[R[4153]],[R[52],[R[4153]]]]]],[11,"encode","rustls",E,127,[[["self"],["vec"]]]],[11,"read",E,E,127,[[["reader"]],[[R[4154]],[R[52],[R[4154]]]]]],[11,"encode",R[4126],E,76,[[["self"],["vec"]]]],[11,"read",E,E,76,[[["reader"]],[[R[4155]],[R[52],[R[4155]]]]]],[11,"encode","rustls",E,128,[[["self"],["vec"]]]],[11,"read",E,E,128,[[["reader"]],[[R[52],[R[4156]]],[R[4156]]]]],[11,"encode",R[4126],E,58,[[["self"],["vec"]]]],[11,"read",E,E,58,[[["reader"]],[[R[4157]],[R[52],[R[4157]]]]]],[11,"encode",E,E,59,[[["self"],["vec"]]]],[11,"read",E,E,59,[[["reader"]],[[R[52],[R[4158]]],[R[4158]]]]],[11,"encode",E,E,60,[[["self"],["vec"]]]],[11,"read",E,E,60,[[["reader"]],[[R[52],[R[4159]]],[R[4159]]]]],[11,"encode",E,E,61,[[["self"],["vec"]]]],[11,"read",E,E,61,[[["reader"]],[[R[4160]],[R[52],[R[4160]]]]]],[11,"encode",E,E,62,[[["self"],["vec"]]]],[11,"read",E,E,62,[[["reader"]],[[R[52],[R[4161]]],[R[4161]]]]],[11,"encode",E,E,63,[[["self"],["vec"]]]],[11,"read",E,E,63,[[["reader"]],[[R[52],[R[4162]]],[R[4162]]]]],[11,"encode",E,E,64,[[["self"],["vec"]]]],[11,"read",E,E,64,[[["reader"]],[[R[52],[R[4163]]],[R[4163]]]]],[11,"encode",E,E,78,[[["self"],["vec"]]]],[11,"read",E,E,78,[[["reader"]],[[R[4164]],[R[52],[R[4164]]]]]],[11,"encode","rustls",E,129,[[["self"],["vec"]]]],[11,"read",E,E,129,[[["reader"]],[[R[4165]],[R[52],[R[4165]]]]]],[11,"encode",E,E,130,[[["self"],["vec"]]]],[11,"read",E,E,130,[[["reader"]],[[R[52],[R[4166]]],[R[4166]]]]],[11,"encode",R[4126],E,65,[[["self"],["vec"]]]],[11,"read",E,E,65,[[["reader"]],[[R[4167]],[R[52],[R[4167]]]]]],[11,"encode",E,E,79,[[["self"],["vec"]]]],[11,"read",E,E,79,[[["reader"]],[[R[4168]],[R[52],[R[4168]]]]]],[11,"encode","rustls",E,131,[[["self"],["vec"]]]],[11,"read",E,E,131,[[["reader"]],[[R[52],[R[4169]]],[R[4169]]]]],[11,"encode",R[4126],E,66,[[["self"],["vec"]]]],[11,"read",E,E,66,[[["reader"]],[[R[52],[R[4170]]],[R[4170]]]]],[11,"encode",E,E,67,[[["self"],["vec"]]]],[11,"read",E,E,67,[[["reader"]],[[R[4171]],[R[52],[R[4171]]]]]],[11,"encode",E,E,80,[[["self"],["vec"]]]],[11,"read",E,E,80,[[["reader"]],[[R[52],[R[4172]]],[R[4172]]]]],[11,"encode","rustls",E,132,[[["self"],["vec"]]]],[11,"read",E,E,132,[[["reader"]],[[R[4173]],[R[52],[R[4173]]]]]],[11,"encode",R[4126],E,68,[[["self"],["vec"]]]],[11,"read",E,E,68,[[["reader"]],[[R[4174]],[R[52],[R[4174]]]]]],[11,"encode",E,E,69,[[["self"],["vec"]]]],[11,"read",E,E,69,[[["reader"]],[[R[4175]],[R[52],[R[4175]]]]]],[11,"encode",E,E,70,[[["self"],["vec"]]]],[11,"read",E,E,70,[[["reader"]],[[R[4176]],[R[52],[R[4176]]]]]],[11,"encode",R[4127],E,114,[[["self"],["vec"]]]],[11,"read",E,E,114,[[["reader"]],[[R[4177]],[R[52],[R[4177]]]]]],[11,"read",R[4128],E,89,[[["reader"]],[[R[52],["message"]],["message"]]]],[11,"encode",E,E,89,[[["self"],["vec"]]]],[11,"encode",R[4129],E,115,[[["self"],["vec"]]]],[11,"read",E,E,115,[[["reader"]],[[R[52],[R[4178]]],[R[4178]]]]],[11,"encode",E,E,92,[[["self"],["vec"]]]],[11,"read",E,E,92,[[["reader"]],[[R[4179]],[R[52],[R[4179]]]]]],[11,"encode",E,E,93,[[["self"],["vec"]]]],[11,"read",E,E,93,[[["reader"]],[[R[4180]],[R[52],[R[4180]]]]]],[11,R[4181],"rustls",E,119,[[],[R[4137]]]],[11,R[4181],E,E,120,[[],[R[4138]]]],[11,"sign",E,E,9,[[["self"]],[R[4108]]]],[11,"make",E,E,9,[[[R[4108]],[R[4182]]],[R[3682]]]],[11,R[4183],E,"Supported signature verification algorithms in decreasing…",121,[[],[R[4109]]]],[11,R[4184],E,E,121,[[],[R[4109]]]],[11,R[4185],E,E,122,[[["self"]],[[R[52],[R[2913]]],[R[2913]]]]],[11,R[4186],E,E,133,[[],[R[4237]]]],[11,"to_strings",E,E,133,[[["self"]],[["vec",["string"]],["string"]]]],[11,R[4187],E,E,133,[[["self"]],[["str"],[R[52],["str"]]]]],[11,R[4188],R[4126],E,57,[[["self"]]]],[11,R[4188],"rustls",E,129,[[["self"]]]],[11,"read_tls",E,E,19,[[["self"],["read"]],[[R[12],[R[9]]],[R[9]]]]],[11,"write_tls",E,R[4189],19,[[["write"],["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,R[4199],E,E,19,[[["self"],["writev"]],[[R[12],[R[9]]],[R[9]]]]],[11,R[4190],E,E,19,[[["self"]],[[R[12],[R[4115]]],[R[4115]]]]],[11,R[4200],E,E,19,[[["self"]],["bool"]]],[11,R[4191],E,E,19,[[["self"]],["bool"]]],[11,R[4192],E,E,19,[[["self"]],["bool"]]],[11,R[4193],E,E,19,[[["self"],[R[9]]]]],[11,R[4194],E,E,19,[[["self"]]]],[11,R[4195],E,E,19,[[["self"]],[["vec",[R[3686]]],[R[52],["vec"]]]]],[11,R[4119],E,E,19,[[["self"]],[["str"],[R[52],["str"]]]]],[11,R[4196],E,E,19,[[["self"]],[[R[4120]],[R[52],[R[4120]]]]]],[11,R[4197],E,E,19,[[["self"],[R[52]]],[[R[12],[R[4115]]],[R[4115]]]]],[11,R[4198],E,E,19,[[["self"]],[[R[52],[R[4121]]],[R[4121]]]]],[11,"read_tls",E,E,21,[[["self"],["read"]],[[R[12],[R[9]]],[R[9]]]]],[11,"write_tls",E,R[4189],21,[[["write"],["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,R[4199],E,E,21,[[["self"],["writev"]],[[R[12],[R[9]]],[R[9]]]]],[11,R[4190],E,E,21,[[["self"]],[[R[12],[R[4115]]],[R[4115]]]]],[11,R[4200],E,E,21,[[["self"]],["bool"]]],[11,R[4191],E,E,21,[[["self"]],["bool"]]],[11,R[4192],E,E,21,[[["self"]],["bool"]]],[11,R[4193],E,E,21,[[["self"],[R[9]]]]],[11,R[4194],E,E,21,[[["self"]]]],[11,R[4195],E,E,21,[[["self"]],[["vec",[R[3686]]],[R[52],["vec"]]]]],[11,R[4119],E,E,21,[[["self"]],[["str"],[R[52],["str"]]]]],[11,R[4196],E,E,21,[[["self"]],[[R[4120]],[R[52],[R[4120]]]]]],[11,R[4197],E,E,21,[[["self"],[R[52]]],[[R[12],[R[4115]]],[R[4115]]]]],[11,R[4198],E,E,21,[[["self"]],[[R[52],[R[4121]]],[R[4121]]]]],[11,"put",E,E,109,[[["u8"],["self"],["vec",["u8"]]],["bool"]]],[11,"get",E,E,109,[[["self"]],[[R[52],["vec"]],["vec",["u8"]]]]],[11,"take",E,E,109,[[["self"]],[[R[52],["vec"]],["vec",["u8"]]]]],[11,"put",E,E,17,[[["u8"],["self"],["vec",["u8"]]],["bool"]]],[11,"get",E,E,17,[[["self"]],[[R[52],["vec"]],["vec",["u8"]]]]],[11,"take",E,E,17,[[["self"]],[[R[52],["vec"]],["vec",["u8"]]]]],[11,"resolve",E,E,18,[[[R[52],[R[2913]]],["self"],[R[2913]]],[[R[4116]],[R[52],[R[4116]]]]]],[11,"put",E,E,108,[[["u8"],["self"],["vec",["u8"]]],["bool"]]],[11,"get",E,E,108,[[["self"]],[[R[52],["vec"]],["vec",["u8"]]]]],[11,"put",E,E,20,[[["u8"],["self"],["vec",["u8"]]],["bool"]]],[11,"get",E,E,20,[[["self"]],[[R[52],["vec"]],["vec",["u8"]]]]],[11,"log",E,E,110,[[["str"],["self"]]]],[11,"log",E,E,22,[[["str"],["self"]]]],[11,R[4201],R[4133],E,99,[[["self"]],[[R[52],["box"]],["box",["signer"]]]]],[11,R[2036],E,E,99,[[["self"]],[R[4108]]]],[11,"eq",R[4123],E,25,[[["payload"],["self"]],["bool"]]],[11,"ne",E,E,25,[[["payload"],["self"]],["bool"]]],[11,"eq",E,E,26,[[[R[4202]],["self"]],["bool"]]],[11,"ne",E,E,26,[[[R[4202]],["self"]],["bool"]]],[11,"eq",E,E,27,[[[R[4203]],["self"]],["bool"]]],[11,"ne",E,E,27,[[[R[4203]],["self"]],["bool"]]],[11,"eq",E,E,28,[[[R[4204]],["self"]],["bool"]]],[11,"ne",E,E,28,[[[R[4204]],["self"]],["bool"]]],[11,"eq","rustls",E,8,[[[R[4120]],["self"]],["bool"]]],[11,"ne",E,E,8,[[[R[4120]],["self"]],["bool"]]],[11,"eq",R[4124],E,29,[[[R[4182]],["self"]],["bool"]]],[11,"ne",E,E,29,[[[R[4182]],["self"]],["bool"]]],[11,"eq",E,E,30,[[[R[4108]],["self"]],["bool"]]],[11,"ne",E,E,30,[[[R[4108]],["self"]],["bool"]]],[11,"eq",E,E,31,[[["self"],[R[4205]]],["bool"]]],[11,"ne",E,E,31,[[["self"],[R[4205]]],["bool"]]],[11,"eq",E,E,32,[[[R[4206]],["self"]],["bool"]]],[11,"ne",E,E,32,[[[R[4206]],["self"]],["bool"]]],[11,"eq",E,E,33,[[[R[4207]],["self"]],["bool"]]],[11,"ne",E,E,33,[[[R[4207]],["self"]],["bool"]]],[11,"eq",E,E,34,[[[R[4208]],["self"]],["bool"]]],[11,"ne",E,E,34,[[[R[4208]],["self"]],["bool"]]],[11,"eq",E,E,35,[[[R[4221]],["self"]],["bool"]]],[11,"ne",E,E,35,[[[R[4221]],["self"]],["bool"]]],[11,"eq",E,E,36,[[["self"],[R[4209]]],["bool"]]],[11,"ne",E,E,36,[[["self"],[R[4209]]],["bool"]]],[11,"eq",E,E,37,[[[R[4210]],["self"]],["bool"]]],[11,"ne",E,E,37,[[[R[4210]],["self"]],["bool"]]],[11,"eq",E,E,38,[[["self"],[R[4211]]],["bool"]]],[11,"ne",E,E,38,[[["self"],[R[4211]]],["bool"]]],[11,"eq",E,E,39,[[[R[4212]],["self"]],["bool"]]],[11,"ne",E,E,39,[[[R[4212]],["self"]],["bool"]]],[11,"eq",E,E,40,[[[R[4222]],["self"]],["bool"]]],[11,"ne",E,E,40,[[[R[4222]],["self"]],["bool"]]],[11,"eq",E,E,41,[[[R[4213]],["self"]],["bool"]]],[11,"ne",E,E,41,[[[R[4213]],["self"]],["bool"]]],[11,"eq","rustls",E,10,[[[R[4214]],["self"]],["bool"]]],[11,"ne",E,E,10,[[[R[4214]],["self"]],["bool"]]],[11,"eq",R[4124],E,42,[[["self"],[R[4215]]],["bool"]]],[11,"ne",E,E,42,[[["self"],[R[4215]]],["bool"]]],[11,"eq",E,E,43,[[[R[4216]],["self"]],["bool"]]],[11,"ne",E,E,43,[[[R[4216]],["self"]],["bool"]]],[11,"eq",E,E,44,[[[R[4217]],["self"]],["bool"]]],[11,"ne",E,E,44,[[[R[4217]],["self"]],["bool"]]],[11,"eq","rustls",E,9,[[["self"],[R[3682]]],["bool"]]],[11,"ne",E,E,9,[[["self"],[R[3682]]],["bool"]]],[11,"eq",R[4124],E,45,[[["self"],[R[4218]]],["bool"]]],[11,"ne",E,E,45,[[["self"],[R[4218]]],["bool"]]],[11,"eq",E,E,46,[[[R[4219]],["self"]],["bool"]]],[11,"ne",E,E,46,[[[R[4219]],["self"]],["bool"]]],[11,"eq",E,E,47,[[[R[4220]],["self"]],["bool"]]],[11,"ne",E,E,47,[[[R[4220]],["self"]],["bool"]]],[11,"eq",R[4126],E,112,[[["random"],["self"]],["bool"]]],[11,"ne",E,E,112,[[["random"],["self"]],["bool"]]],[11,"eq",E,E,113,[[["self"]],["bool"]]],[11,"eq","rustls",E,11,[[[R[4115]],["self"]],["bool"]]],[11,"ne",E,E,11,[[[R[4115]],["self"]],["bool"]]],[11,"eq",E,E,12,[[["bulkalgorithm"],["self"]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[4121]]],["bool"]]],[11,"eq",E,E,7,[[["self"],[R[3692]]],["bool"]]],[11,"ne",E,E,7,[[["self"],[R[3692]]],["bool"]]],[11,"eq",E,E,6,[[[R[3686]],["self"]],["bool"]]],[11,"ne",E,E,6,[[[R[3686]],["self"]],["bool"]]],[11,"clone",R[4123],E,25,[[["self"]],["payload"]]],[11,"clone",E,E,26,[[["self"]],[R[4202]]]],[11,"clone",E,E,27,[[["self"]],[R[4203]]]],[11,"clone",E,E,28,[[["self"]],[R[4204]]]],[11,"clone","rustls",E,8,[[["self"]],[R[4120]]]],[11,"clone",R[4124],E,29,[[["self"]],[R[4182]]]],[11,"clone",E,E,30,[[["self"]],[R[4108]]]],[11,"clone",E,E,31,[[["self"]],[R[4205]]]],[11,"clone",E,E,32,[[["self"]],[R[4206]]]],[11,"clone",E,E,33,[[["self"]],[R[4207]]]],[11,"clone",E,E,34,[[["self"]],[R[4208]]]],[11,"clone",E,E,35,[[["self"]],[R[4221]]]],[11,"clone",E,E,36,[[["self"]],[R[4209]]]],[11,"clone",E,E,37,[[["self"]],[R[4210]]]],[11,"clone",E,E,38,[[["self"]],[R[4211]]]],[11,"clone",E,E,39,[[["self"]],[R[4212]]]],[11,"clone",E,E,40,[[["self"]],[R[4222]]]],[11,"clone",E,E,41,[[["self"]],[R[4213]]]],[11,"clone","rustls",E,10,[[["self"]],[R[4214]]]],[11,"clone",R[4124],E,42,[[["self"]],[R[4215]]]],[11,"clone",E,E,43,[[["self"]],[R[4216]]]],[11,"clone",E,E,44,[[["self"]],[R[4217]]]],[11,"clone","rustls",E,9,[[["self"]],[R[3682]]]],[11,"clone",R[4124],E,45,[[["self"]],[R[4218]]]],[11,"clone",E,E,46,[[["self"]],[R[4219]]]],[11,"clone",E,E,47,[[["self"]],[R[4220]]]],[11,"clone",R[4126],E,112,[[["self"]],["random"]]],[11,"clone",E,E,113,[[["self"]],[R[4236]]]],[11,"clone",E,E,49,[[["self"]],["unknownextension"]]],[11,"clone",E,E,71,[[["self"]],["servernamepayload"]]],[11,"clone",E,E,50,[[["self"]],[R[4223]]]],[11,"clone",E,E,51,[[["self"]],[R[4140]]]],[11,"clone",E,E,52,[[["self"]],[R[4141]]]],[11,"clone",E,E,53,[[["self"]],[R[4143]]]],[11,"clone",E,E,54,[[["self"]],[R[4144]]]],[11,"clone",E,E,72,[[["self"]],[R[4145]]]],[11,"clone",E,E,73,[[["self"]],[R[4149]]]],[11,"clone",E,E,74,[[["self"]],[R[4110]]]],[11,"clone",E,E,61,[[["self"]],[R[4160]]]],[11,"clone","rustls",E,11,[[["self"]],[R[4115]]]],[11,"clone",E,E,2,[[["self"]],[R[3678]]]],[11,"clone",E,E,4,[[["self"]],[R[4224]]]],[11,"clone",E,E,3,[[["self"]],[R[4225]]]],[11,"clone",E,E,7,[[["self"]],[R[3692]]]],[11,"clone",E,E,6,[[["self"]],[R[3686]]]],[11,"clone",R[4133],E,96,[[["self"]],[R[4116]]]],[11,"as_ref","rustls",E,6,[[["self"]]]],[11,"fmt",R[4122],E,23,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[4123],E,25,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,26,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,27,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,28,[[[R[29]],["self"]],[R[12]]]],[11,"fmt","rustls",E,8,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[4124],E,29,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,30,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,31,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,32,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,33,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,34,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,35,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,36,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,37,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,38,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,39,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,40,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,41,[[[R[29]],["self"]],[R[12]]]],[11,"fmt","rustls",E,10,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[4124],E,42,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,43,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,44,[[[R[29]],["self"]],[R[12]]]],[11,"fmt","rustls",E,9,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[4124],E,45,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,46,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,47,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[4125],E,48,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[4126],E,112,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,113,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,49,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,71,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,50,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,51,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,52,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,53,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,54,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,72,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,73,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,74,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,55,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,75,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,56,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,57,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,76,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,58,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,59,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,77,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,60,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,61,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,62,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,63,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,64,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,78,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,65,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,79,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,66,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,67,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,80,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,68,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,69,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,81,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,70,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[4127],E,114,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[4128],E,91,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,89,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,90,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[4129],E,115,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,92,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,93,[[[R[29]],["self"]],[R[12]]]],[11,"fmt","rustls",E,11,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,2,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,12,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,5,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,19,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,21,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,7,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,6,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,11,[[["self"],[R[29]]],[R[12]]]],[11,R[30],E,E,11,[[["self"]],["str"]]],[11,"read",E,E,0,[[["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,"read",E,E,1,[[["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,"read",E,R[4226],19,[[["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,"read",E,R[4226],21,[[["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,"write",E,E,0,[[["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,"flush",E,E,0,[[["self"]],[R[12]]]],[11,"write",E,E,1,[[["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,"flush",E,E,1,[[["self"]],[R[12]]]],[11,"write",E,R[4227],19,[[["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,"flush",E,E,19,[[["self"]],[R[12]]]],[11,"write",E,R[4227],21,[[["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,"flush",E,E,21,[[["self"]],[R[12]]]],[11,R[4228],R[4122],R[4229],24,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"read_bytes",E,R[4230],24,[[],[R[52]]]],[11,"init",E,E,111,[[],["reader"]]],[11,"rest",E,E,111,[[["self"]]]],[11,"take",E,E,111,[[["self"],[R[9]]],[R[52]]]],[11,"any_left",E,E,111,[[["self"]],["bool"]]],[11,"left",E,E,111,[[["self"]],[R[9]]]],[11,"used",E,E,111,[[["self"]],[R[9]]]],[11,"sub",E,E,111,[[["self"],[R[9]]],[[R[52],["reader"]],["reader"]]]],[11,"decode",E,E,23,[[],[["u24"],[R[52],["u24"]]]]],[11,"new",R[4123],E,25,[[["u8"],["vec",["u8"]]],["payload"]]],[11,"empty",E,E,25,[[],["payload"]]],[11,R[2029],E,E,25,[[],["payload"]]],[11,"new",E,E,26,[[["u8"],["vec",["u8"]]],[R[4202]]]],[11,"empty",E,E,26,[[],[R[4202]]]],[11,"new",E,E,27,[[["u8"],["vec",["u8"]]],[R[4203]]]],[11,"empty",E,E,27,[[],[R[4203]]]],[11,"new",E,E,28,[[["u8"],["vec",["u8"]]],[R[4204]]]],[11,"empty",E,E,28,[[],[R[4204]]]],[11,"get_u8",R[4124],E,29,[[["self"]],["u8"]]],[11,"get_u8",E,E,30,[[["self"]],["u8"]]],[11,"get_u8",E,E,31,[[["self"]],["u8"]]],[11,"get_u8",E,E,32,[[["self"]],["u8"]]],[11,"get_u8",E,E,33,[[["self"]],["u8"]]],[11,"get_u8",E,E,34,[[["self"]],["u8"]]],[11,"get_u8",E,E,35,[[["self"]],["u8"]]],[11,"get_u8",E,E,36,[[["self"]],["u8"]]],[11,"get_u8",E,E,37,[[["self"]],["u8"]]],[11,"get_u16",E,E,38,[[["self"]],["u16"]]],[11,"get_u8",E,E,39,[[["self"]],["u8"]]],[11,"get_u16",E,E,40,[[["self"]],["u16"]]],[11,"get_u16",E,E,41,[[["self"]],["u16"]]],[11,"get_u8",E,E,42,[[["self"]],["u8"]]],[11,"get_u8",E,E,43,[[["self"]],["u8"]]],[11,"get_u8",E,E,44,[[["self"]],["u8"]]],[11,"get_u8",E,E,45,[[["self"]],["u8"]]],[11,"get_u8",E,E,46,[[["self"]],["u8"]]],[11,"get_u8",E,E,47,[[["self"]],["u8"]]],[11,"length",R[4125],E,48,[[["self"]],[R[9]]]],[11,R[4231],R[4126],R[4232],88,[[["self"]],["bool"]]],[11,R[4233],E,E,88,[[[R[4211]],["self"]],[[R[4110]],[R[52],[R[4110]]]]]],[11,R[4119],E,E,88,[[["self"]],[["str"],[R[52],["str"]]]]],[11,R[4234],E,E,88,[[["self"]],[[R[52],["vec"]],["vec",["u8"]]]]],[11,R[4235],E,E,88,[[["self"]],["bool"]]],[11,R[2029],E,E,112,[[],["random"]]],[11,"write_slice",E,E,112,[[["self"]]]],[11,"new",E,E,113,[[],[R[4236]]]],[11,"empty",E,E,113,[[],[R[4236]]]],[11,"len",E,E,113,[[["self"]],[R[9]]]],[11,R[69],E,E,113,[[["self"]],["bool"]]],[11,"new",E,E,51,[[[R[4213]]],[R[4140]]]],[11,"new",E,E,52,[[["u32"],["u8"],["vec",["u8"]]],[R[4141]]]],[11,"new",E,"Make a new one with one entry.",53,[[["u8"],[R[4141]],["vec",["u8"]]],[R[4143]]]],[11,"build_ocsp",E,E,72,[[],[R[4145]]]],[11,R[4349],E,E,73,[[["self"]],[R[4211]]]],[11,"make_sni",E,"Make a basic SNI ServerNameRequest quoting `hostname`.",73,[[[R[2913]]],[R[4149]]]],[11,R[4349],E,E,74,[[["self"]],[R[4211]]]],[11,"make_alpn",E,E,74,[[["string"]],[R[4110]]]],[11,"make_empty_renegotiation_info",E,E,74,[[],[R[4110]]]],[11,"make_sct",E,E,74,[[["u8"],["vec",["u8"]]],[R[4110]]]],[11,R[4231],E,R[4232],55,[[["self"]],["bool"]]],[11,R[4233],E,E,55,[[[R[4211]],["self"]],[[R[4149]],[R[52],[R[4149]]]]]],[11,"get_sni_extension",E,E,55,[[["self"]],[[R[52],[R[4139]]],[R[4139]]]]],[11,R[4242],E,E,55,[[["self"]],[[R[4109]],[R[52],[R[4109]]]]]],[11,"get_namedgroups_extension",E,E,55,[[["self"]],[[R[4138]],[R[52],[R[4138]]]]]],[11,R[4238],E,E,55,[[["self"]],[[R[52],[R[4137]]],[R[4137]]]]],[11,"get_alpn_extension",E,E,55,[[["self"]],[[R[4237]],[R[52],[R[4237]]]]]],[11,R[4234],E,E,55,[[["self"]],[[R[52],["vec"]],["vec",["u8"]]]]],[11,"get_ticket_extension",E,E,55,[[["self"]],[[R[4149]],[R[52],[R[4149]]]]]],[11,"get_versions_extension",E,E,55,[[["self"]],[[R[4148]],[R[52],[R[4148]]]]]],[11,"get_keyshare_extension",E,E,55,[[["self"]],[[R[4147]],[R[52],[R[4147]]]]]],[11,"has_keyshare_extension_with_duplicates",E,E,55,[[["self"]],["bool"]]],[11,"get_psk",E,E,55,[[["self"]],[[R[52],[R[4143]]],[R[4143]]]]],[11,"check_psk_ext_is_last",E,E,55,[[["self"]],["bool"]]],[11,"get_psk_modes",E,E,55,[[["self"]],[[R[4146]],[R[52],[R[4146]]]]]],[11,"psk_mode_offered",E,E,55,[[["self"],[R[4218]]],["bool"]]],[11,"set_psk_binder",E,E,55,[[["self"],["u8"],["vec",["u8"]]]]],[11,"ems_support_offered",E,E,55,[[["self"]],["bool"]]],[11,R[4235],E,E,55,[[["self"]],["bool"]]],[11,R[4349],E,E,75,[[["self"]],[R[4211]]]],[11,R[4231],E,R[4232],56,[[["self"]],["bool"]]],[11,R[4241],E,E,56,[[["self"]],["bool"]]],[11,"get_requested_key_share_group",E,E,56,[[["self"]],[[R[4213]],[R[52],[R[4213]]]]]],[11,"get_cookie",E,E,56,[[["self"]],[[R[4203]],[R[52],[R[4203]]]]]],[11,R[4239],E,E,56,[[["self"]],[[R[4120]],[R[52],[R[4120]]]]]],[11,"get_key_share",E,E,57,[[["self"]],[[R[52],[R[4140]]],[R[4140]]]]],[11,"get_psk_index",E,E,57,[[["self"]],[[R[52],["u16"]],["u16"]]]],[11,R[4238],E,E,57,[[["self"]],[[R[52],[R[4137]]],[R[4137]]]]],[11,"ems_support_acked",E,E,57,[[["self"]],["bool"]]],[11,R[4240],E,E,57,[[["self"]],[["sctlist"],[R[52],["sctlist"]]]]],[11,R[4239],E,E,57,[[["self"]],[[R[4120]],[R[52],[R[4120]]]]]],[11,R[4349],E,E,76,[[["self"]],[R[4211]]]],[11,"make_sct",E,E,76,[[["u8"],["vec",["u8"]]],[R[4155]]]],[11,"get_cert_status",E,E,76,[[["self"]],[["vec"],[R[52],["vec"]]]]],[11,R[4240],E,E,76,[[["self"]],[["sctlist"],[R[52],["sctlist"]]]]],[11,"new",E,E,58,[[[R[3686]]],[R[4157]]]],[11,R[4231],E,E,58,[[["self"]],["bool"]]],[11,R[4241],E,E,58,[[["self"]],["bool"]]],[11,"get_ocsp_response",E,E,58,[[["self"]],[["vec"],[R[52],["vec"]]]]],[11,"get_scts",E,E,58,[[["self"]],[["sctlist"],[R[52],["sctlist"]]]]],[11,"new",E,E,59,[[],[R[4158]]]],[11,"any_entry_has_duplicate_extension",E,E,59,[[["self"]],["bool"]]],[11,"any_entry_has_unknown_extension",E,E,59,[[["self"]],["bool"]]],[11,"any_entry_has_extension",E,E,59,[[["self"]],["bool"]]],[11,"get_end_entity_ocsp",E,E,59,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"get_end_entity_scts",E,E,59,[[["self"]],[[R[52],["sctlist"]],["sctlist"]]]],[11,"convert",E,E,59,[[["self"]],[R[4154]]]],[11,"new",E,E,61,[[["u8"],["vec",["u8"]],[R[3682]]],[R[4160]]]],[11,"new",E,E,63,[[[R[4213]]],[R[4162]]]],[11,"unwrap_given_kxa",E,E,78,[[["self"],["keyexchangealgorithm"]],[[R[4164]],[R[52],[R[4164]]]]]],[11,"encode_params",E,E,78,[[["self"],["vec"]]]],[11,"get_sig",E,E,78,[[["self"]],[[R[4160]],[R[52],[R[4160]]]]]],[11,R[4349],E,E,79,[[["self"]],[R[4211]]]],[11,R[4233],E,E,66,[[[R[4211]],["self"]],[[R[52],[R[4168]]],[R[4168]]]]],[11,R[4242],E,E,66,[[["self"]],[[R[4109]],[R[52],[R[4109]]]]]],[11,"get_authorities_extension",E,E,66,[[["self"]],[[R[4243]],[R[52],[R[4243]]]]]],[11,"new",E,E,67,[[["u32"],["u8"],["vec",["u8"]]],[R[4171]]]],[11,R[4349],E,E,80,[[["self"]],[R[4211]]]],[11,"new",E,E,68,[[["u32"],["u8"],["vec",["u8"]]],[R[4174]]]],[11,R[4233],E,E,68,[[[R[4211]],["self"]],[[R[52],[R[4172]]],[R[4172]]]]],[11,"get_max_early_data_size",E,E,68,[[["self"]],[["u32"],[R[52],["u32"]]]]],[11,"new",E,E,69,[[["u8"],["vec",["u8"]]],[R[4175]]]],[11,"take_ocsp_response",E,E,69,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"length",E,E,70,[[["self"]],[R[9]]]],[11,"read_version",E,E,70,[[[R[4120]],["reader"]],[[R[4176]],[R[52],[R[4176]]]]]],[11,R[4245],E,E,70,[[],[R[4176]]]],[11,"get_encoding_for_binder_signing",E,E,70,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"build_handshake_hash",E,E,70,[[],[R[4176]]]],[11,"length",R[4127],E,114,[[["self"]],[R[9]]]],[11,"encode",R[4128],E,91,[[["self"],["vec"]]]],[11,"decode_given_type",E,E,91,[[[R[4120]],[R[4207]],["self"]],[[R[4244]],[R[52],[R[4244]]]]]],[11,"length",E,E,91,[[["self"]],[R[9]]]],[11,"new_opaque",E,E,91,[[["u8"],["vec",["u8"]]],[R[4244]]]],[11,"check_header",E,"Do some very lax checks on the header, and return None if…",89,[[],[[R[52],[R[9]]],[R[9]]]]],[11,"is_content_type",E,E,89,[[[R[4207]],["self"]],["bool"]]],[11,"is_handshake_type",E,E,89,[[[R[4208]],["self"]],["bool"]]],[11,"decode_payload",E,E,89,[[["self"]],["bool"]]],[11,"take_payload",E,E,89,[[],[["u8"],["vec",["u8"]]]]],[11,"take_opaque_payload",E,E,89,[[["self"]],[[R[52],["payload"]],["payload"]]]],[11,"into_opaque",E,E,89,[[],["message"]]],[11,"build_alert",E,E,89,[[[R[4209]],[R[4221]]],["message"]]],[11,R[4245],E,E,89,[[],["message"]]],[11,"to_borrowed",E,E,89,[[["self"]],["borrowmessage"]]],[11,"session_for_dns_name",R[4129],E,115,[[[R[2913]]],[R[4178]]]],[11,"hint_for_dns_name",E,E,115,[[[R[2913]]],[R[4178]]]],[11,"new",E,E,92,[[[R[4120]],[R[4214]],[R[4236]],["u8"],["vec",["u8"]]],[R[4179]]]],[11,R[4246],E,E,92,[[["self"]]]],[11,"set_times",E,E,92,[[["u32"],["self"],["u64"]]]],[11,"has_expired",E,E,92,[[["self"],["u64"]],["bool"]]],[11,"get_obfuscated_ticket_age",E,E,92,[[["self"],["u64"]],["u32"]]],[11,"take_ticket",E,E,92,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"set_max_early_data_size",E,E,92,[[["u32"],["self"]]]],[11,"new",E,E,93,[[[R[4120]],[R[4214]],[R[52]],["u8"],[R[52],["dnsname"]],["dnsname"],["vec",["u8"]]],[R[4180]]]],[11,R[4246],E,E,93,[[["self"]]]],[11,"new",R[4130],E,94,[[],["messagedeframer"]]],[11,"read",E,"Read some bytes from `rd`, and add them to our internal…",94,[[["self"],["read"]],[[R[12],[R[9]]],[R[9]]]]],[11,"has_pending",E,"Returns true if we have messages for the caller to…",94,[[["self"]],["bool"]]],[11,"new",R[4131],"Make a new fragmenter. `max_fragment_len` is the maximum…",116,[[[R[9]]],["messagefragmenter"]]],[11,"fragment",E,"Take the Message `msg` and re-fragment it into new…",116,[[["vecdeque"],["self"],["message"]]]],[11,"fragment_borrow",E,"Enqueue borrowed fragments of (version, typ, payload)…",116,[[[R[4120]],["vecdeque"],[R[4207]],["self"]]]],[11,"new",R[4132],"Make a new HandshakeJoiner.",95,[[],["handshakejoiner"]]],[11,"want_message",E,"Do we want to process this message?",95,[[["self"],["message"]],["bool"]]],[11,R[69],E,"Do we have any buffered data?",95,[[["self"]],["bool"]]],[11,"take_message",E,"Take the message, and join/split it as needed. Return the…",95,[[["self"],["message"]],[[R[52],[R[9]]],[R[9]]]]],[11,R[4247],"rustls",R[4248],100,[[["self"],[T]],[["error"],[R[12],["error"]]]]]],"p":[[3,"Stream"],[3,R[4249]],[3,R[4250]],[3,R[4251]],[3,R[4252]],[3,R[4253]],[3,R[3697]],[3,"PrivateKey"],[4,R[3696]],[4,R[4072]],[4,R[3699]],[4,"TLSError"],[4,R[4254]],[3,R[4255]],[3,R[4256]],[3,R[4257]],[3,"Ticketer"],[3,R[4258]],[3,R[4259]],[3,R[4260]],[3,R[4261]],[3,R[4262]],[3,"KeyLogFile"],[3,"u24"],[8,"Codec"],[3,"Payload"],[3,"PayloadU24"],[3,"PayloadU16"],[3,"PayloadU8"],[4,R[4263]],[4,R[2927]],[4,R[4264]],[4,R[4265]],[4,R[4266]],[4,R[4267]],[4,"AlertLevel"],[4,R[4268]],[4,R[4269]],[4,R[4270]],[4,R[4271]],[4,R[4272]],[4,"NamedGroup"],[4,R[4273]],[4,R[4274]],[4,R[4275]],[4,R[4276]],[4,R[4277]],[4,R[4278]],[3,R[4279]],[3,R[4280]],[3,R[4086]],[3,R[4281]],[3,R[4282]],[3,R[4283]],[3,R[4284]],[3,R[4285]],[3,R[4078]],[3,R[4286]],[3,R[4287]],[3,R[4288]],[3,R[4289]],[3,R[4290]],[3,R[4291]],[3,R[4292]],[3,R[4293]],[3,R[4294]],[3,R[4295]],[3,R[4296]],[3,R[4297]],[3,R[4083]],[3,R[4298]],[4,R[4299]],[4,R[4088]],[4,R[4300]],[4,R[4301]],[4,R[4302]],[4,R[4303]],[4,R[4304]],[4,R[4305]],[4,R[4306]],[4,R[4307]],[4,R[4308]],[8,R[4309]],[8,R[4310]],[8,R[4311]],[8,R[4312]],[8,R[4313]],[8,R[4314]],[8,R[4315]],[3,"Message"],[3,R[4316]],[4,R[4317]],[3,R[4318]],[3,R[4319]],[3,R[4320]],[3,R[4321]],[3,R[4322]],[8,R[4114]],[8,"Signer"],[3,R[4323]],[8,"Session"],[8,R[4324]],[8,R[4325]],[8,R[4326]],[8,R[4327]],[8,R[4328]],[8,"KeyLog"],[8,"WriteV"],[3,R[4329]],[3,R[4330]],[3,"NoKeyLog"],[3,"Reader"],[3,"Random"],[3,"SessionID"],[3,R[4331]],[3,R[4332]],[3,R[4333]],[6,R[4334]],[6,R[4335]],[6,R[4336]],[6,R[4106]],[6,R[4337]],[6,R[4338]],[6,R[4339]],[6,R[4107]],[6,R[4340]],[6,R[4341]],[6,R[4342]],[6,R[4343]],[6,R[4104]],[6,R[4344]],[6,R[4345]],[6,R[4346]],[6,R[4347]]]};
searchIndex["safemem"]={"doc":"Safe wrappers for memory-accessing functions like…","i":[[5,"copy_over","safemem","Copy `len` elements from `src_idx` to `dest_idx`. Ranges…",N,[[[R[9]]]]],[5,"write_bytes",E,"Safe wrapper for `std::ptr::write_bytes()`/`memset()`.",N,[[["u8"]]]],[5,"prepend",E,"Prepend `elems` to `vec`, resizing if necessary.",N,[[["vec"]]]]],"p":[]};
searchIndex["sct"]={"doc":"SCT.rs: SCT verification library This library implements…","i":[[3,"Log","sct","Describes a CT log",N,N],[12,R[30],E,"The operator's name/description of the log. This field is…",0,N],[12,"url",E,"The certificate submission url. This field is not used by…",0,N],[12,"operated_by",E,"Which entity operates the log. This field is not used by…",0,N],[12,"key",E,"Public key usable for verifying certificates. TODO: fixme…",0,N],[12,"id",E,"Key hash, which is SHA256 applied to the SPKI encoding.",0,N],[12,"max_merge_delay",E,"The log's maximum merge delay. This field is not used by…",0,N],[4,"Error",E,"How sct.rs reports errors.",N,N],[13,"MalformedSCT",E,"The SCT was somehow misencoded, truncated or otherwise…",1,N],[13,"InvalidSignature",E,"The SCT contained an invalid signature.",1,N],[13,"TimestampInFuture",E,"The SCT was signed in the future.  Clock skew?",1,N],[13,"UnsupportedSCTVersion",E,"The SCT had a version that this library does not handle.",1,N],[13,"UnknownLog",E,"The SCT was refers to an unknown log.",1,N],[5,"verify_sct",E,"Verifies that the SCT `sct` (a…",N,[[["u64"]],[["error"],[R[12],[R[9],"error"]],[R[9]]]]],[11,"should_be_fatal",E,"Applies a suggested policy for error handling:",1,[[["self"]],["bool"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,[[[T],["self"]]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"eq",E,E,1,[[["error"],["self"]],["bool"]]],[11,"clone",E,E,1,[[["self"]],["error"]]],[11,"fmt",E,E,0,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,1,[[[R[29]],["self"]],[R[12]]]]],"p":[[3,"Log"],[4,"Error"]]};
searchIndex["serde"]={"doc":"Serde","i":[[0,"de","serde","Generic data structure deserialization framework.",N,N],[3,"IgnoredAny",R[938],"An efficient way of discarding data from a deserializer.",N,N],[4,R[317],E,"`Unexpected` represents an unexpected invocation of any…",N,N],[13,"Bool",E,"The input contained a boolean value that was not expected.",0,N],[13,"Unsigned",E,"The input contained an unsigned integer `u8`, `u16`, `u32`…",0,N],[13,"Signed",E,"The input contained a signed integer `i8`, `i16`, `i32` or…",0,N],[13,"Float",E,"The input contained a floating point `f32` or `f64` that…",0,N],[13,"Char",E,"The input contained a `char` that was not expected.",0,N],[13,"Str",E,"The input contained a `&str` or `String` that was not…",0,N],[13,"Bytes",E,"The input contained a `&[u8]` or `Vec<u8>` that was not…",0,N],[13,"Unit",E,"The input contained a unit `()` that was not expected.",0,N],[13,"Option",E,"The input contained an `Option<T>` that was not expected.",0,N],[13,"NewtypeStruct",E,"The input contained a newtype struct that was not expected.",0,N],[13,"Seq",E,"The input contained a sequence that was not expected.",0,N],[13,"Map",E,"The input contained a map that was not expected.",0,N],[13,"Enum",E,"The input contained an enum that was not expected.",0,N],[13,"UnitVariant",E,"The input contained a unit variant that was not expected.",0,N],[13,"NewtypeVariant",E,"The input contained a newtype variant that was not expected.",0,N],[13,"TupleVariant",E,"The input contained a tuple variant that was not expected.",0,N],[13,"StructVariant",E,"The input contained a struct variant that was not expected.",0,N],[13,"Other",E,"A message stating what uncategorized thing the input…",0,N],[0,"value",E,"Building blocks for deserializing basic values using the…",N,N],[3,"Error",R[1106],"A minimal representation of all possible errors that can…",N,N],[3,R[1128],E,"A deserializer holding a `()`.",N,N],[3,R[1129],E,"A deserializer holding a `bool`.",N,N],[3,R[1130],E,"A deserializer holding an `i8`.",N,N],[3,R[1131],E,"A deserializer holding an `i16`.",N,N],[3,R[1132],E,"A deserializer holding an `i32`.",N,N],[3,R[1133],E,"A deserializer holding an `i64`.",N,N],[3,R[1134],E,"A deserializer holding an `isize`.",N,N],[3,R[1135],E,"A deserializer holding a `u8`.",N,N],[3,R[1136],E,"A deserializer holding a `u16`.",N,N],[3,R[1137],E,"A deserializer holding a `u64`.",N,N],[3,R[1138],E,"A deserializer holding a `usize`.",N,N],[3,R[1139],E,"A deserializer holding an `f32`.",N,N],[3,R[1140],E,"A deserializer holding an `f64`.",N,N],[3,R[1141],E,"A deserializer holding a `char`.",N,N],[3,R[1142],E,"A deserializer holding an `i128`.",N,N],[3,R[1143],E,"A deserializer holding a `u128`.",N,N],[3,R[1144],E,"A deserializer holding a `u32`.",N,N],[3,R[1145],E,"A deserializer holding a `&str`.",N,N],[3,R[1118],E,"A deserializer holding a `&str` with a lifetime tied to…",N,N],[3,R[1146],E,"A deserializer holding a `String`.",N,N],[3,R[1147],E,"A deserializer holding a `Cow<str>`.",N,N],[3,R[1119],E,"A deserializer holding a `&[u8]` with a lifetime tied to…",N,N],[3,R[1120],E,"A deserializer that iterates over a sequence.",N,N],[3,R[1121],E,"A deserializer holding a `SeqAccess`.",N,N],[3,R[1122],E,"A deserializer that iterates over a map.",N,N],[3,R[1123],E,"A deserializer holding a `MapAccess`.",N,N],[11,"new",E,"Create a new borrowed deserializer from the given string.",1,[[["str"]],["borrowedstrdeserializer"]]],[11,"new",E,"Create a new borrowed deserializer from the given byte…",2,[[],["borrowedbytesdeserializer"]]],[11,"new",E,"Construct a new `SeqDeserializer<I, E>`.",3,[[["i"]],["self"]]],[11,"end",E,R[937],3,[[],[R[12]]]],[11,"new",E,"Construct a new `SeqAccessDeserializer<A>`.",4,[[["a"]],["self"]]],[11,"new",E,"Construct a new `MapDeserializer<I, E>`.",5,[[["i"]],["self"]]],[11,"end",E,R[937],5,[[],[R[12]]]],[11,"new",E,"Construct a new `MapAccessDeserializer<A>`.",6,[[["a"]],["self"]]],[8,"Error",R[938],"The `Error` trait allows `Deserialize` implementations to…",N,N],[10,"custom",E,"Raised when there is general error when deserializing a…",7,[[[T]],["self"]]],[11,"invalid_type",E,"Raised when a `Deserialize` receives a type different from…",7,[[[R[939]],[R[940]]],["self"]]],[11,"invalid_value",E,"Raised when a `Deserialize` receives a value of the right…",7,[[[R[939]],[R[940]]],["self"]]],[11,"invalid_length",E,"Raised when deserializing a sequence or map and the input…",7,[[[R[9]],[R[940]]],["self"]]],[11,"unknown_variant",E,"Raised when a `Deserialize` enum type received a variant…",7,[[["str"]],["self"]]],[11,"unknown_field",E,"Raised when a `Deserialize` struct type received a field…",7,[[["str"]],["self"]]],[11,"missing_field",E,"Raised when a `Deserialize` struct type expected to…",7,[[["str"]],["self"]]],[11,"duplicate_field",E,"Raised when a `Deserialize` struct type received more than…",7,[[["str"]],["self"]]],[8,"Expected",E,"`Expected` represents an explanation of what data a…",N,N],[10,"fmt",E,"Format an explanation of what data was being expected.…",8,[[["self"],[R[29]]],[R[12]]]],[8,R[966],E,R[967],N,N],[10,R[941],E,R[968],9,[[["d"]],[R[12]]]],[8,"DeserializeOwned",E,"A data structure that can be deserialized without…",N,N],[8,R[1124],E,"`DeserializeSeed` is the stateful form of the…",N,N],[16,"Value",E,"The type produced by using this seed.",10,N],[10,R[941],E,"Equivalent to the more common `Deserialize::deserialize`…",10,[[["d"]],[R[12]]]],[8,R[952],E,R[969],N,N],[16,"Error",E,R[945],11,N],[10,R[970],E,R[971],11,[[["v"]],[R[12]]]],[10,R[972],E,R[973],11,[[["v"]],[R[12]]]],[10,R[974],E,R[975],11,[[["v"]],[R[12]]]],[10,R[976],E,R[977],11,[[["v"]],[R[12]]]],[10,R[978],E,R[979],11,[[["v"]],[R[12]]]],[10,R[980],E,R[981],11,[[["v"]],[R[12]]]],[11,R[982],E,R[983],11,[[["v"]],[R[12]]]],[10,R[984],E,R[985],11,[[["v"]],[R[12]]]],[10,R[986],E,R[987],11,[[["v"]],[R[12]]]],[10,R[988],E,R[989],11,[[["v"]],[R[12]]]],[10,R[990],E,R[991],11,[[["v"]],[R[12]]]],[11,R[992],E,R[993],11,[[["v"]],[R[12]]]],[10,R[994],E,R[995],11,[[["v"]],[R[12]]]],[10,R[996],E,R[997],11,[[["v"]],[R[12]]]],[10,R[998],E,R[999],11,[[["v"]],[R[12]]]],[10,R[1000],E,R[942],11,[[["v"]],[R[12]]]],[10,R[1001],E,R[942],11,[[["v"]],[R[12]]]],[10,R[1002],E,R[943],11,[[["v"]],[R[12]]]],[10,R[1003],E,R[943],11,[[["v"]],[R[12]]]],[10,R[1004],E,R[1005],11,[[["v"]],[R[12]]]],[10,R[1006],E,R[1007],11,[[["v"]],[R[12]]]],[10,R[1008],E,R[1009],11,[[["v"],["str"]],[R[12]]]],[10,R[1010],E,R[1011],11,[[["v"],["str"]],[R[12]]]],[10,R[1012],E,R[944],11,[[["v"]],[R[12]]]],[10,R[1013],E,R[944],11,[[["v"],[R[9]]],[R[12]]]],[10,R[1014],E,R[1015],11,[[["v"],[R[9]],["str"]],[R[12]]]],[10,R[1016],E,R[1017],11,[[["v"]],[R[12]]]],[10,R[1018],E,R[1019],11,[[["v"],["str"]],[R[12]]]],[10,R[1020],E,R[1021],11,[[["v"],["str"]],[R[12]]]],[10,R[1022],E,R[1023],11,[[["v"]],[R[12]]]],[10,R[1024],E,R[1025],11,[[["v"]],[R[12]]]],[11,R[953],E,R[1026],11,[[["self"]],["bool"]]],[8,"Visitor",E,"This trait represents a visitor that walks through a…",N,N],[16,"Value",E,"The value produced by this visitor.",12,N],[10,"expecting",E,"Format a message stating what data this Visitor expects to…",12,[[["self"],[R[29]]],[R[12]]]],[11,"visit_bool",E,"The input contains a boolean.",12,[[["bool"]],[R[12]]]],[11,"visit_i8",E,"The input contains an `i8`.",12,[[["i8"]],[R[12]]]],[11,"visit_i16",E,"The input contains an `i16`.",12,[[["i16"]],[R[12]]]],[11,"visit_i32",E,"The input contains an `i32`.",12,[[["i32"]],[R[12]]]],[11,"visit_i64",E,"The input contains an `i64`.",12,[[["i64"]],[R[12]]]],[11,"visit_i128",E,"The input contains a `i128`.",12,[[["i128"]],[R[12]]]],[11,"visit_u8",E,"The input contains a `u8`.",12,[[["u8"]],[R[12]]]],[11,"visit_u16",E,"The input contains a `u16`.",12,[[["u16"]],[R[12]]]],[11,"visit_u32",E,"The input contains a `u32`.",12,[[["u32"]],[R[12]]]],[11,"visit_u64",E,"The input contains a `u64`.",12,[[["u64"]],[R[12]]]],[11,"visit_u128",E,"The input contains a `u128`.",12,[[["u128"]],[R[12]]]],[11,"visit_f32",E,"The input contains an `f32`.",12,[[["f32"]],[R[12]]]],[11,"visit_f64",E,"The input contains an `f64`.",12,[[["f64"]],[R[12]]]],[11,"visit_char",E,"The input contains a `char`.",12,[[["char"]],[R[12]]]],[11,"visit_str",E,"The input contains a string. The lifetime of the string is…",12,[[["str"]],[R[12]]]],[11,"visit_borrowed_str",E,"The input contains a string that lives at least as long as…",12,[[["str"]],[R[12]]]],[11,"visit_string",E,"The input contains a string and ownership of the string is…",12,[[["string"]],[R[12]]]],[11,R[1108],E,"The input contains a byte array. The lifetime of the byte…",12,[[],[R[12]]]],[11,"visit_borrowed_bytes",E,"The input contains a byte array that lives at least as…",12,[[],[R[12]]]],[11,"visit_byte_buf",E,"The input contains a byte array and ownership of the byte…",12,[[["u8"],["vec",["u8"]]],[R[12]]]],[11,"visit_none",E,"The input contains an optional that is absent.",12,[[],[R[12]]]],[11,"visit_some",E,"The input contains an optional that is present.",12,[[["d"]],[R[12]]]],[11,"visit_unit",E,"The input contains a unit `()`.",12,[[],[R[12]]]],[11,R[1107],E,"The input contains a newtype struct.",12,[[["d"]],[R[12]]]],[11,"visit_seq",E,"The input contains a sequence of elements.",12,[[["a"]],[R[12]]]],[11,"visit_map",E,"The input contains a key-value map.",12,[[["a"]],[R[12]]]],[11,"visit_enum",E,"The input contains an enum.",12,[[["a"]],[R[12]]]],[8,"SeqAccess",E,"Provides a `Visitor` access to each element of a sequence…",N,N],[16,"Error",E,R[945],13,N],[10,R[1109],E,R[946],13,[[["self"],[T]],[[R[12],[R[52]]],[R[52]]]]],[11,"next_element",E,R[946],13,[[["self"]],[[R[12],[R[52]]],[R[52]]]]],[11,R[53],E,"Returns the number of elements remaining in the sequence,…",13,[[["self"]],[[R[52],[R[9]]],[R[9]]]]],[8,"MapAccess",E,"Provides a `Visitor` access to each entry of a map in the…",N,N],[16,"Error",E,R[945],14,N],[10,R[1110],E,R[947],14,[[["k"],["self"]],[[R[12],[R[52]]],[R[52]]]]],[10,R[1111],E,R[948],14,[[["self"],["v"]],[R[12]]]],[11,R[1112],E,R[949],14,[[["k"],["self"],["v"]],[[R[12],[R[52]]],[R[52]]]]],[11,"next_key",E,R[947],14,[[["self"]],[[R[12],[R[52]]],[R[52]]]]],[11,"next_value",E,R[948],14,[[["self"]],[R[12]]]],[11,"next_entry",E,R[949],14,[[["self"]],[[R[12],[R[52]]],[R[52]]]]],[11,R[53],E,"Returns the number of entries remaining in the map, if…",14,[[["self"]],[[R[52],[R[9]]],[R[9]]]]],[8,"EnumAccess",E,"Provides a `Visitor` access to the data of an enum in the…",N,N],[16,"Error",E,R[945],15,N],[16,"Variant",E,"The `Visitor` that will be used to deserialize the content…",15,N],[10,R[1113],E,R[950],15,[[["v"]],[R[12]]]],[11,"variant",E,R[950],15,[[],[R[12]]]],[8,R[1125],E,"`VariantAccess` is a visitor that is created by the…",N,N],[16,"Error",E,R[945],16,N],[10,"unit_variant",E,"Called when deserializing a variant with no values.",16,[[],[R[12]]]],[10,"newtype_variant_seed",E,R[951],16,[[[T]],[R[12]]]],[11,"newtype_variant",E,R[951],16,[[],[R[12]]]],[10,"tuple_variant",E,"Called when deserializing a tuple-like variant.",16,[[["v"],[R[9]]],[R[12]]]],[10,"struct_variant",E,"Called when deserializing a struct-like variant.",16,[[["v"]],[R[12]]]],[8,R[1126],E,"Converts an existing value into a `Deserializer` from…",N,N],[16,R[952],E,"The type of the deserializer being converted into.",17,N],[10,"into_deserializer",E,"Convert this value into a deserializer.",17,[[]]],[0,"ser","serde","Generic data structure serialization framework.",N,N],[3,"Impossible",R[1114],"Helper type for implementing a `Serializer` that does not…",N,N],[8,"Error",E,"Trait used by `Serialize` implementations to generically…",N,N],[10,"custom",E,"Used when a [`Serialize`] implementation encounters any…",18,[[[T]],["self"]]],[8,"Serialize",E,R[1027],N,N],[10,R[2289],E,R[1028],19,[[["s"],["self"]],[R[12]]]],[8,R[1127],E,R[1029],N,N],[16,"Ok",E,R[1030],20,N],[16,"Error",E,R[1031],20,N],[16,R[954],E,R[1032],20,N],[16,R[955],E,R[1033],20,N],[16,R[959],E,R[1034],20,N],[16,R[960],E,R[1035],20,N],[16,R[962],E,R[1036],20,N],[16,R[963],E,R[1037],20,N],[16,R[964],E,R[1038],20,N],[10,R[1039],E,R[1040],20,[[["bool"]],[R[12]]]],[10,R[1041],E,R[1042],20,[[["i8"]],[R[12]]]],[10,R[1043],E,R[1044],20,[[["i16"]],[R[12]]]],[10,R[1045],E,R[1046],20,[[["i32"]],[R[12]]]],[10,R[1047],E,R[1048],20,[[["i64"]],[R[12]]]],[11,R[1049],E,R[1050],20,[[["i128"]],[R[12]]]],[10,R[1051],E,R[1052],20,[[["u8"]],[R[12]]]],[10,R[1053],E,R[1054],20,[[["u16"]],[R[12]]]],[10,R[1055],E,R[1056],20,[[["u32"]],[R[12]]]],[10,R[1057],E,R[1058],20,[[["u64"]],[R[12]]]],[11,R[1059],E,R[1060],20,[[["u128"]],[R[12]]]],[10,R[1061],E,R[1062],20,[[["f32"]],[R[12]]]],[10,R[1063],E,R[1064],20,[[["f64"]],[R[12]]]],[10,R[1065],E,R[1066],20,[[["char"]],[R[12]]]],[10,R[1067],E,R[1068],20,[[["str"]],[R[12]]]],[10,R[1069],E,R[1070],20,[[],[R[12]]]],[10,R[1071],E,R[1072],20,[[],[R[12]]]],[10,R[1073],E,R[1074],20,[[[T]],[R[12]]]],[10,R[1075],E,R[1076],20,[[],[R[12]]]],[10,R[1077],E,R[1078],20,[[["str"]],[R[12]]]],[10,R[1079],E,R[1080],20,[[["u32"],["str"]],[R[12]]]],[10,R[1081],E,R[1082],20,[[[T],["str"]],[R[12]]]],[10,R[1083],E,R[1084],20,[[["u32"],[T],["str"]],[R[12]]]],[10,R[1085],E,R[1086],20,[[[R[52],[R[9]]],[R[9]]],[R[12]]]],[10,R[1087],E,R[1088],20,[[[R[9]]],[R[12]]]],[10,R[1089],E,R[1090],20,[[[R[9]],["str"]],[R[12]]]],[10,R[1091],E,R[1092],20,[[["u32"],[R[9]],["str"]],[R[12]]]],[10,R[1093],E,R[1094],20,[[[R[52],[R[9]]],[R[9]]],[R[12]]]],[10,R[1095],E,R[1096],20,[[[R[9]],["str"]],[R[12]]]],[10,R[1097],E,R[1098],20,[[["u32"],[R[9]],["str"]],[R[12]]]],[11,R[1099],E,R[1100],20,[[["i"]],[R[12]]]],[11,R[1101],E,R[1102],20,[[["i"]],[R[12]]]],[11,R[1103],E,R[1104],20,[[[T]],[R[12]]]],[11,R[953],E,R[1105],20,[[["self"]],["bool"]]],[8,R[954],E,"Returned from `Serializer::serialize_seq`.",N,N],[16,"Ok",E,R[956],21,N],[16,"Error",E,R[957],21,N],[10,R[958],E,"Serialize a sequence element.",21,[[["self"],[T]],[R[12]]]],[10,"end",E,"Finish serializing a sequence.",21,[[],[R[12]]]],[8,R[955],E,"Returned from `Serializer::serialize_tuple`.",N,N],[16,"Ok",E,R[956],22,N],[16,"Error",E,R[957],22,N],[10,R[958],E,"Serialize a tuple element.",22,[[["self"],[T]],[R[12]]]],[10,"end",E,"Finish serializing a tuple.",22,[[],[R[12]]]],[8,R[959],E,"Returned from `Serializer::serialize_tuple_struct`.",N,N],[16,"Ok",E,R[956],23,N],[16,"Error",E,R[957],23,N],[10,R[961],E,"Serialize a tuple struct field.",23,[[["self"],[T]],[R[12]]]],[10,"end",E,"Finish serializing a tuple struct.",23,[[],[R[12]]]],[8,R[960],E,"Returned from `Serializer::serialize_tuple_variant`.",N,N],[16,"Ok",E,R[956],24,N],[16,"Error",E,R[957],24,N],[10,R[961],E,"Serialize a tuple variant field.",24,[[["self"],[T]],[R[12]]]],[10,"end",E,"Finish serializing a tuple variant.",24,[[],[R[12]]]],[8,R[962],E,"Returned from `Serializer::serialize_map`.",N,N],[16,"Ok",E,R[956],25,N],[16,"Error",E,R[957],25,N],[10,R[1115],E,"Serialize a map key.",25,[[["self"],[T]],[R[12]]]],[10,R[1116],E,"Serialize a map value.",25,[[["self"],[T]],[R[12]]]],[11,"serialize_entry",E,"Serialize a map entry consisting of a key and a value.",25,[[["k"],["self"],["v"]],[R[12]]]],[10,"end",E,"Finish serializing a map.",25,[[],[R[12]]]],[8,R[963],E,"Returned from `Serializer::serialize_struct`.",N,N],[16,"Ok",E,R[956],26,N],[16,"Error",E,R[957],26,N],[10,R[961],E,"Serialize a struct field.",26,[[["self"],[T],["str"]],[R[12]]]],[11,R[965],E,"Indicate that a struct field has been skipped.",26,[[["self"],["str"]],[R[12]]]],[10,"end",E,"Finish serializing a struct.",26,[[],[R[12]]]],[8,R[964],E,"Returned from `Serializer::serialize_struct_variant`.",N,N],[16,"Ok",E,R[956],27,N],[16,"Error",E,R[957],27,N],[10,R[961],E,"Serialize a struct variant field.",27,[[["self"],[T],["str"]],[R[12]]]],[11,R[965],E,"Indicate that a struct variant field has been skipped.",27,[[["self"],["str"]],[R[12]]]],[10,"end",E,"Finish serializing a struct variant.",27,[[],[R[12]]]],[8,R[966],"serde",R[967],N,N],[10,R[941],E,R[968],9,[[["d"]],[R[12]]]],[8,R[952],E,R[969],N,N],[16,"Error",E,R[945],11,N],[10,R[970],E,R[971],11,[[["v"]],[R[12]]]],[10,R[972],E,R[973],11,[[["v"]],[R[12]]]],[10,R[974],E,R[975],11,[[["v"]],[R[12]]]],[10,R[976],E,R[977],11,[[["v"]],[R[12]]]],[10,R[978],E,R[979],11,[[["v"]],[R[12]]]],[10,R[980],E,R[981],11,[[["v"]],[R[12]]]],[11,R[982],E,R[983],11,[[["v"]],[R[12]]]],[10,R[984],E,R[985],11,[[["v"]],[R[12]]]],[10,R[986],E,R[987],11,[[["v"]],[R[12]]]],[10,R[988],E,R[989],11,[[["v"]],[R[12]]]],[10,R[990],E,R[991],11,[[["v"]],[R[12]]]],[11,R[992],E,R[993],11,[[["v"]],[R[12]]]],[10,R[994],E,R[995],11,[[["v"]],[R[12]]]],[10,R[996],E,R[997],11,[[["v"]],[R[12]]]],[10,R[998],E,R[999],11,[[["v"]],[R[12]]]],[10,R[1000],E,R[942],11,[[["v"]],[R[12]]]],[10,R[1001],E,R[942],11,[[["v"]],[R[12]]]],[10,R[1002],E,R[943],11,[[["v"]],[R[12]]]],[10,R[1003],E,R[943],11,[[["v"]],[R[12]]]],[10,R[1004],E,R[1005],11,[[["v"]],[R[12]]]],[10,R[1006],E,R[1007],11,[[["v"]],[R[12]]]],[10,R[1008],E,R[1009],11,[[["v"],["str"]],[R[12]]]],[10,R[1010],E,R[1011],11,[[["v"],["str"]],[R[12]]]],[10,R[1012],E,R[944],11,[[["v"]],[R[12]]]],[10,R[1013],E,R[944],11,[[["v"],[R[9]]],[R[12]]]],[10,R[1014],E,R[1015],11,[[["v"],[R[9]],["str"]],[R[12]]]],[10,R[1016],E,R[1017],11,[[["v"]],[R[12]]]],[10,R[1018],E,R[1019],11,[[["v"],["str"]],[R[12]]]],[10,R[1020],E,R[1021],11,[[["v"],["str"]],[R[12]]]],[10,R[1022],E,R[1023],11,[[["v"]],[R[12]]]],[10,R[1024],E,R[1025],11,[[["v"]],[R[12]]]],[11,R[953],E,R[1026],11,[[["self"]],["bool"]]],[8,"Serialize",E,R[1027],N,N],[10,R[2289],E,R[1028],19,[[["s"],["self"]],[R[12]]]],[8,R[1127],E,R[1029],N,N],[16,"Ok",E,R[1030],20,N],[16,"Error",E,R[1031],20,N],[16,R[954],E,R[1032],20,N],[16,R[955],E,R[1033],20,N],[16,R[959],E,R[1034],20,N],[16,R[960],E,R[1035],20,N],[16,R[962],E,R[1036],20,N],[16,R[963],E,R[1037],20,N],[16,R[964],E,R[1038],20,N],[10,R[1039],E,R[1040],20,[[["bool"]],[R[12]]]],[10,R[1041],E,R[1042],20,[[["i8"]],[R[12]]]],[10,R[1043],E,R[1044],20,[[["i16"]],[R[12]]]],[10,R[1045],E,R[1046],20,[[["i32"]],[R[12]]]],[10,R[1047],E,R[1048],20,[[["i64"]],[R[12]]]],[11,R[1049],E,R[1050],20,[[["i128"]],[R[12]]]],[10,R[1051],E,R[1052],20,[[["u8"]],[R[12]]]],[10,R[1053],E,R[1054],20,[[["u16"]],[R[12]]]],[10,R[1055],E,R[1056],20,[[["u32"]],[R[12]]]],[10,R[1057],E,R[1058],20,[[["u64"]],[R[12]]]],[11,R[1059],E,R[1060],20,[[["u128"]],[R[12]]]],[10,R[1061],E,R[1062],20,[[["f32"]],[R[12]]]],[10,R[1063],E,R[1064],20,[[["f64"]],[R[12]]]],[10,R[1065],E,R[1066],20,[[["char"]],[R[12]]]],[10,R[1067],E,R[1068],20,[[["str"]],[R[12]]]],[10,R[1069],E,R[1070],20,[[],[R[12]]]],[10,R[1071],E,R[1072],20,[[],[R[12]]]],[10,R[1073],E,R[1074],20,[[[T]],[R[12]]]],[10,R[1075],E,R[1076],20,[[],[R[12]]]],[10,R[1077],E,R[1078],20,[[["str"]],[R[12]]]],[10,R[1079],E,R[1080],20,[[["u32"],["str"]],[R[12]]]],[10,R[1081],E,R[1082],20,[[[T],["str"]],[R[12]]]],[10,R[1083],E,R[1084],20,[[["u32"],[T],["str"]],[R[12]]]],[10,R[1085],E,R[1086],20,[[[R[52],[R[9]]],[R[9]]],[R[12]]]],[10,R[1087],E,R[1088],20,[[[R[9]]],[R[12]]]],[10,R[1089],E,R[1090],20,[[[R[9]],["str"]],[R[12]]]],[10,R[1091],E,R[1092],20,[[["u32"],[R[9]],["str"]],[R[12]]]],[10,R[1093],E,R[1094],20,[[[R[52],[R[9]]],[R[9]]],[R[12]]]],[10,R[1095],E,R[1096],20,[[[R[9]],["str"]],[R[12]]]],[10,R[1097],E,R[1098],20,[[["u32"],[R[9]],["str"]],[R[12]]]],[11,R[1099],E,R[1100],20,[[["i"]],[R[12]]]],[11,R[1101],E,R[1102],20,[[["i"]],[R[12]]]],[11,R[1103],E,R[1104],20,[[[T]],[R[12]]]],[11,R[953],E,R[1105],20,[[["self"]],["bool"]]],[14,"forward_to_deserialize_any",E,"Helper macro when implementing the `Deserializer` part of…",N,N],[14,"serde_if_integer128",E,"Conditional compilation depending on whether Serde is…",N,N],[11,"fmt",R[938],E,28,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[16],E,E,28,[[["self"]],[T]]],[11,R[17],E,E,28,[[[T],["self"]]]],[11,R[11],E,E,28,[[[U]],[R[12]]]],[11,R[39],E,E,28,[[["self"]],[T]]],[11,R[13],E,E,28,[[["self"]],[T]]],[11,R[14],E,E,28,[[],[R[12]]]],[11,R[18],E,E,28,[[["self"]],[R[40]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[[T],["self"]]]],[11,R[170],E,E,0,[[["self"]],["string"]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",R[1106],E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[16],E,E,29,[[["self"]],[T]]],[11,R[17],E,E,29,[[[T],["self"]]]],[11,R[170],E,E,29,[[["self"]],["string"]]],[11,R[11],E,E,29,[[[U]],[R[12]]]],[11,R[39],E,E,29,[[["self"]],[T]]],[11,R[13],E,E,29,[[["self"]],[T]]],[11,R[14],E,E,29,[[],[R[12]]]],[11,R[18],E,E,29,[[["self"]],[R[40]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[16],E,E,30,[[["self"]],[T]]],[11,R[17],E,E,30,[[[T],["self"]]]],[11,R[11],E,E,30,[[[U]],[R[12]]]],[11,R[39],E,E,30,[[["self"]],[T]]],[11,R[13],E,E,30,[[["self"]],[T]]],[11,R[14],E,E,30,[[],[R[12]]]],[11,R[18],E,E,30,[[["self"]],[R[40]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[16],E,E,31,[[["self"]],[T]]],[11,R[17],E,E,31,[[[T],["self"]]]],[11,R[11],E,E,31,[[[U]],[R[12]]]],[11,R[39],E,E,31,[[["self"]],[T]]],[11,R[13],E,E,31,[[["self"]],[T]]],[11,R[14],E,E,31,[[],[R[12]]]],[11,R[18],E,E,31,[[["self"]],[R[40]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[16],E,E,32,[[["self"]],[T]]],[11,R[17],E,E,32,[[[T],["self"]]]],[11,R[11],E,E,32,[[[U]],[R[12]]]],[11,R[39],E,E,32,[[["self"]],[T]]],[11,R[13],E,E,32,[[["self"]],[T]]],[11,R[14],E,E,32,[[],[R[12]]]],[11,R[18],E,E,32,[[["self"]],[R[40]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[16],E,E,33,[[["self"]],[T]]],[11,R[17],E,E,33,[[[T],["self"]]]],[11,R[11],E,E,33,[[[U]],[R[12]]]],[11,R[39],E,E,33,[[["self"]],[T]]],[11,R[13],E,E,33,[[["self"]],[T]]],[11,R[14],E,E,33,[[],[R[12]]]],[11,R[18],E,E,33,[[["self"]],[R[40]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[16],E,E,34,[[["self"]],[T]]],[11,R[17],E,E,34,[[[T],["self"]]]],[11,R[11],E,E,34,[[[U]],[R[12]]]],[11,R[39],E,E,34,[[["self"]],[T]]],[11,R[13],E,E,34,[[["self"]],[T]]],[11,R[14],E,E,34,[[],[R[12]]]],[11,R[18],E,E,34,[[["self"]],[R[40]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[16],E,E,35,[[["self"]],[T]]],[11,R[17],E,E,35,[[[T],["self"]]]],[11,R[11],E,E,35,[[[U]],[R[12]]]],[11,R[39],E,E,35,[[["self"]],[T]]],[11,R[13],E,E,35,[[["self"]],[T]]],[11,R[14],E,E,35,[[],[R[12]]]],[11,R[18],E,E,35,[[["self"]],[R[40]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,R[16],E,E,36,[[["self"]],[T]]],[11,R[17],E,E,36,[[[T],["self"]]]],[11,R[11],E,E,36,[[[U]],[R[12]]]],[11,R[39],E,E,36,[[["self"]],[T]]],[11,R[13],E,E,36,[[["self"]],[T]]],[11,R[14],E,E,36,[[],[R[12]]]],[11,R[18],E,E,36,[[["self"]],[R[40]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,"into",E,E,37,[[],[U]]],[11,R[16],E,E,37,[[["self"]],[T]]],[11,R[17],E,E,37,[[[T],["self"]]]],[11,R[11],E,E,37,[[[U]],[R[12]]]],[11,R[39],E,E,37,[[["self"]],[T]]],[11,R[13],E,E,37,[[["self"]],[T]]],[11,R[14],E,E,37,[[],[R[12]]]],[11,R[18],E,E,37,[[["self"]],[R[40]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,"into",E,E,38,[[],[U]]],[11,R[16],E,E,38,[[["self"]],[T]]],[11,R[17],E,E,38,[[[T],["self"]]]],[11,R[11],E,E,38,[[[U]],[R[12]]]],[11,R[39],E,E,38,[[["self"]],[T]]],[11,R[13],E,E,38,[[["self"]],[T]]],[11,R[14],E,E,38,[[],[R[12]]]],[11,R[18],E,E,38,[[["self"]],[R[40]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,R[16],E,E,39,[[["self"]],[T]]],[11,R[17],E,E,39,[[[T],["self"]]]],[11,R[11],E,E,39,[[[U]],[R[12]]]],[11,R[39],E,E,39,[[["self"]],[T]]],[11,R[13],E,E,39,[[["self"]],[T]]],[11,R[14],E,E,39,[[],[R[12]]]],[11,R[18],E,E,39,[[["self"]],[R[40]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,"into",E,E,40,[[],[U]]],[11,R[16],E,E,40,[[["self"]],[T]]],[11,R[17],E,E,40,[[[T],["self"]]]],[11,R[11],E,E,40,[[[U]],[R[12]]]],[11,R[39],E,E,40,[[["self"]],[T]]],[11,R[13],E,E,40,[[["self"]],[T]]],[11,R[14],E,E,40,[[],[R[12]]]],[11,R[18],E,E,40,[[["self"]],[R[40]]]],[11,"from",E,E,41,[[[T]],[T]]],[11,"into",E,E,41,[[],[U]]],[11,R[16],E,E,41,[[["self"]],[T]]],[11,R[17],E,E,41,[[[T],["self"]]]],[11,R[11],E,E,41,[[[U]],[R[12]]]],[11,R[39],E,E,41,[[["self"]],[T]]],[11,R[13],E,E,41,[[["self"]],[T]]],[11,R[14],E,E,41,[[],[R[12]]]],[11,R[18],E,E,41,[[["self"]],[R[40]]]],[11,"from",E,E,42,[[[T]],[T]]],[11,"into",E,E,42,[[],[U]]],[11,R[16],E,E,42,[[["self"]],[T]]],[11,R[17],E,E,42,[[[T],["self"]]]],[11,R[11],E,E,42,[[[U]],[R[12]]]],[11,R[39],E,E,42,[[["self"]],[T]]],[11,R[13],E,E,42,[[["self"]],[T]]],[11,R[14],E,E,42,[[],[R[12]]]],[11,R[18],E,E,42,[[["self"]],[R[40]]]],[11,"from",E,E,43,[[[T]],[T]]],[11,"into",E,E,43,[[],[U]]],[11,R[16],E,E,43,[[["self"]],[T]]],[11,R[17],E,E,43,[[[T],["self"]]]],[11,R[11],E,E,43,[[[U]],[R[12]]]],[11,R[39],E,E,43,[[["self"]],[T]]],[11,R[13],E,E,43,[[["self"]],[T]]],[11,R[14],E,E,43,[[],[R[12]]]],[11,R[18],E,E,43,[[["self"]],[R[40]]]],[11,"from",E,E,44,[[[T]],[T]]],[11,"into",E,E,44,[[],[U]]],[11,R[16],E,E,44,[[["self"]],[T]]],[11,R[17],E,E,44,[[[T],["self"]]]],[11,R[11],E,E,44,[[[U]],[R[12]]]],[11,R[39],E,E,44,[[["self"]],[T]]],[11,R[13],E,E,44,[[["self"]],[T]]],[11,R[14],E,E,44,[[],[R[12]]]],[11,R[18],E,E,44,[[["self"]],[R[40]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,"into",E,E,45,[[],[U]]],[11,R[16],E,E,45,[[["self"]],[T]]],[11,R[17],E,E,45,[[[T],["self"]]]],[11,R[11],E,E,45,[[[U]],[R[12]]]],[11,R[39],E,E,45,[[["self"]],[T]]],[11,R[13],E,E,45,[[["self"]],[T]]],[11,R[14],E,E,45,[[],[R[12]]]],[11,R[18],E,E,45,[[["self"]],[R[40]]]],[11,"from",E,E,46,[[[T]],[T]]],[11,"into",E,E,46,[[],[U]]],[11,R[16],E,E,46,[[["self"]],[T]]],[11,R[17],E,E,46,[[[T],["self"]]]],[11,R[11],E,E,46,[[[U]],[R[12]]]],[11,R[39],E,E,46,[[["self"]],[T]]],[11,R[13],E,E,46,[[["self"]],[T]]],[11,R[14],E,E,46,[[],[R[12]]]],[11,R[18],E,E,46,[[["self"]],[R[40]]]],[11,"from",E,E,47,[[[T]],[T]]],[11,"into",E,E,47,[[],[U]]],[11,R[16],E,E,47,[[["self"]],[T]]],[11,R[17],E,E,47,[[[T],["self"]]]],[11,R[11],E,E,47,[[[U]],[R[12]]]],[11,R[39],E,E,47,[[["self"]],[T]]],[11,R[13],E,E,47,[[["self"]],[T]]],[11,R[14],E,E,47,[[],[R[12]]]],[11,R[18],E,E,47,[[["self"]],[R[40]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,[[[T],["self"]]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",E,E,48,[[[T]],[T]]],[11,"into",E,E,48,[[],[U]]],[11,R[16],E,E,48,[[["self"]],[T]]],[11,R[17],E,E,48,[[[T],["self"]]]],[11,R[11],E,E,48,[[[U]],[R[12]]]],[11,R[39],E,E,48,[[["self"]],[T]]],[11,R[13],E,E,48,[[["self"]],[T]]],[11,R[14],E,E,48,[[],[R[12]]]],[11,R[18],E,E,48,[[["self"]],[R[40]]]],[11,"from",E,E,49,[[[T]],[T]]],[11,"into",E,E,49,[[],[U]]],[11,R[16],E,E,49,[[["self"]],[T]]],[11,R[17],E,E,49,[[[T],["self"]]]],[11,R[11],E,E,49,[[[U]],[R[12]]]],[11,R[39],E,E,49,[[["self"]],[T]]],[11,R[13],E,E,49,[[["self"]],[T]]],[11,R[14],E,E,49,[[],[R[12]]]],[11,R[18],E,E,49,[[["self"]],[R[40]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[17],E,E,2,[[[T],["self"]]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[17],E,E,3,[[[T],["self"]]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[16],E,E,4,[[["self"]],[T]]],[11,R[17],E,E,4,[[[T],["self"]]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[16],E,E,5,[[["self"]],[T]]],[11,R[17],E,E,5,[[[T],["self"]]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,R[18],E,E,5,[[["self"]],[R[40]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[16],E,E,6,[[["self"]],[T]]],[11,R[17],E,E,6,[[[T],["self"]]]],[11,R[11],E,E,6,[[[U]],[R[12]]]],[11,R[39],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[],[R[12]]]],[11,R[18],E,E,6,[[["self"]],[R[40]]]],[11,"from",R[1114],E,50,[[[T]],[T]]],[11,"into",E,E,50,[[],[U]]],[11,R[11],E,E,50,[[[U]],[R[12]]]],[11,R[39],E,E,50,[[["self"]],[T]]],[11,R[13],E,E,50,[[["self"]],[T]]],[11,R[14],E,E,50,[[],[R[12]]]],[11,R[18],E,E,50,[[["self"]],[R[40]]]],[11,R[941],R[938],E,28,[[["d"]],[[R[12],[R[1117]]],[R[1117]]]]],[11,R[972],R[1106],E,30,[[["v"]],[R[12]]]],[11,R[974],E,E,30,[[["v"]],[R[12]]]],[11,R[976],E,E,30,[[["v"]],[R[12]]]],[11,R[978],E,E,30,[[["v"]],[R[12]]]],[11,R[980],E,E,30,[[["v"]],[R[12]]]],[11,R[982],E,E,30,[[["v"]],[R[12]]]],[11,R[984],E,E,30,[[["v"]],[R[12]]]],[11,R[986],E,E,30,[[["v"]],[R[12]]]],[11,R[988],E,E,30,[[["v"]],[R[12]]]],[11,R[990],E,E,30,[[["v"]],[R[12]]]],[11,R[992],E,E,30,[[["v"]],[R[12]]]],[11,R[994],E,E,30,[[["v"]],[R[12]]]],[11,R[996],E,E,30,[[["v"]],[R[12]]]],[11,R[998],E,E,30,[[["v"]],[R[12]]]],[11,R[1000],E,E,30,[[["v"]],[R[12]]]],[11,R[1001],E,E,30,[[["v"]],[R[12]]]],[11,R[1002],E,E,30,[[["v"]],[R[12]]]],[11,R[1003],E,E,30,[[["v"]],[R[12]]]],[11,R[1006],E,E,30,[[["v"]],[R[12]]]],[11,R[1008],E,E,30,[[["v"],["str"]],[R[12]]]],[11,R[1010],E,E,30,[[["v"],["str"]],[R[12]]]],[11,R[1012],E,E,30,[[["v"]],[R[12]]]],[11,R[1013],E,E,30,[[["v"],[R[9]]],[R[12]]]],[11,R[1014],E,E,30,[[["v"],[R[9]],["str"]],[R[12]]]],[11,R[1016],E,E,30,[[["v"]],[R[12]]]],[11,R[1018],E,E,30,[[["v"],["str"]],[R[12]]]],[11,R[1020],E,E,30,[[["v"],["str"]],[R[12]]]],[11,R[1022],E,E,30,[[["v"]],[R[12]]]],[11,R[1024],E,E,30,[[["v"]],[R[12]]]],[11,R[970],E,E,30,[[["v"]],[R[12]]]],[11,R[1004],E,E,30,[[["v"]],[R[12]]]],[11,R[972],E,E,31,[[["v"]],[R[12]]]],[11,R[974],E,E,31,[[["v"]],[R[12]]]],[11,R[976],E,E,31,[[["v"]],[R[12]]]],[11,R[978],E,E,31,[[["v"]],[R[12]]]],[11,R[980],E,E,31,[[["v"]],[R[12]]]],[11,R[982],E,E,31,[[["v"]],[R[12]]]],[11,R[984],E,E,31,[[["v"]],[R[12]]]],[11,R[986],E,E,31,[[["v"]],[R[12]]]],[11,R[988],E,E,31,[[["v"]],[R[12]]]],[11,R[990],E,E,31,[[["v"]],[R[12]]]],[11,R[992],E,E,31,[[["v"]],[R[12]]]],[11,R[994],E,E,31,[[["v"]],[R[12]]]],[11,R[996],E,E,31,[[["v"]],[R[12]]]],[11,R[998],E,E,31,[[["v"]],[R[12]]]],[11,R[1000],E,E,31,[[["v"]],[R[12]]]],[11,R[1001],E,E,31,[[["v"]],[R[12]]]],[11,R[1002],E,E,31,[[["v"]],[R[12]]]],[11,R[1003],E,E,31,[[["v"]],[R[12]]]],[11,R[1004],E,E,31,[[["v"]],[R[12]]]],[11,R[1006],E,E,31,[[["v"]],[R[12]]]],[11,R[1008],E,E,31,[[["v"],["str"]],[R[12]]]],[11,R[1010],E,E,31,[[["v"],["str"]],[R[12]]]],[11,R[1012],E,E,31,[[["v"]],[R[12]]]],[11,R[1013],E,E,31,[[["v"],[R[9]]],[R[12]]]],[11,R[1014],E,E,31,[[["v"],[R[9]],["str"]],[R[12]]]],[11,R[1016],E,E,31,[[["v"]],[R[12]]]],[11,R[1018],E,E,31,[[["v"],["str"]],[R[12]]]],[11,R[1020],E,E,31,[[["v"],["str"]],[R[12]]]],[11,R[1022],E,E,31,[[["v"]],[R[12]]]],[11,R[1024],E,E,31,[[["v"]],[R[12]]]],[11,R[970],E,E,31,[[["v"]],[R[12]]]],[11,R[972],E,E,32,[[["v"]],[R[12]]]],[11,R[974],E,E,32,[[["v"]],[R[12]]]],[11,R[976],E,E,32,[[["v"]],[R[12]]]],[11,R[978],E,E,32,[[["v"]],[R[12]]]],[11,R[980],E,E,32,[[["v"]],[R[12]]]],[11,R[982],E,E,32,[[["v"]],[R[12]]]],[11,R[984],E,E,32,[[["v"]],[R[12]]]],[11,R[986],E,E,32,[[["v"]],[R[12]]]],[11,R[988],E,E,32,[[["v"]],[R[12]]]],[11,R[990],E,E,32,[[["v"]],[R[12]]]],[11,R[992],E,E,32,[[["v"]],[R[12]]]],[11,R[994],E,E,32,[[["v"]],[R[12]]]],[11,R[996],E,E,32,[[["v"]],[R[12]]]],[11,R[998],E,E,32,[[["v"]],[R[12]]]],[11,R[1000],E,E,32,[[["v"]],[R[12]]]],[11,R[1001],E,E,32,[[["v"]],[R[12]]]],[11,R[1002],E,E,32,[[["v"]],[R[12]]]],[11,R[1003],E,E,32,[[["v"]],[R[12]]]],[11,R[1004],E,E,32,[[["v"]],[R[12]]]],[11,R[1006],E,E,32,[[["v"]],[R[12]]]],[11,R[1008],E,E,32,[[["v"],["str"]],[R[12]]]],[11,R[1010],E,E,32,[[["v"],["str"]],[R[12]]]],[11,R[1012],E,E,32,[[["v"]],[R[12]]]],[11,R[1013],E,E,32,[[["v"],[R[9]]],[R[12]]]],[11,R[1014],E,E,32,[[["v"],[R[9]],["str"]],[R[12]]]],[11,R[1016],E,E,32,[[["v"]],[R[12]]]],[11,R[1018],E,E,32,[[["v"],["str"]],[R[12]]]],[11,R[1020],E,E,32,[[["v"],["str"]],[R[12]]]],[11,R[1022],E,E,32,[[["v"]],[R[12]]]],[11,R[1024],E,E,32,[[["v"]],[R[12]]]],[11,R[970],E,E,32,[[["v"]],[R[12]]]],[11,R[972],E,E,33,[[["v"]],[R[12]]]],[11,R[974],E,E,33,[[["v"]],[R[12]]]],[11,R[976],E,E,33,[[["v"]],[R[12]]]],[11,R[978],E,E,33,[[["v"]],[R[12]]]],[11,R[980],E,E,33,[[["v"]],[R[12]]]],[11,R[982],E,E,33,[[["v"]],[R[12]]]],[11,R[984],E,E,33,[[["v"]],[R[12]]]],[11,R[986],E,E,33,[[["v"]],[R[12]]]],[11,R[988],E,E,33,[[["v"]],[R[12]]]],[11,R[990],E,E,33,[[["v"]],[R[12]]]],[11,R[992],E,E,33,[[["v"]],[R[12]]]],[11,R[994],E,E,33,[[["v"]],[R[12]]]],[11,R[996],E,E,33,[[["v"]],[R[12]]]],[11,R[998],E,E,33,[[["v"]],[R[12]]]],[11,R[1000],E,E,33,[[["v"]],[R[12]]]],[11,R[1001],E,E,33,[[["v"]],[R[12]]]],[11,R[1002],E,E,33,[[["v"]],[R[12]]]],[11,R[1003],E,E,33,[[["v"]],[R[12]]]],[11,R[1004],E,E,33,[[["v"]],[R[12]]]],[11,R[1006],E,E,33,[[["v"]],[R[12]]]],[11,R[1008],E,E,33,[[["v"],["str"]],[R[12]]]],[11,R[1010],E,E,33,[[["v"],["str"]],[R[12]]]],[11,R[1012],E,E,33,[[["v"]],[R[12]]]],[11,R[1013],E,E,33,[[["v"],[R[9]]],[R[12]]]],[11,R[1014],E,E,33,[[["v"],[R[9]],["str"]],[R[12]]]],[11,R[1016],E,E,33,[[["v"]],[R[12]]]],[11,R[1018],E,E,33,[[["v"],["str"]],[R[12]]]],[11,R[1020],E,E,33,[[["v"],["str"]],[R[12]]]],[11,R[1022],E,E,33,[[["v"]],[R[12]]]],[11,R[1024],E,E,33,[[["v"]],[R[12]]]],[11,R[970],E,E,33,[[["v"]],[R[12]]]],[11,R[972],E,E,34,[[["v"]],[R[12]]]],[11,R[974],E,E,34,[[["v"]],[R[12]]]],[11,R[976],E,E,34,[[["v"]],[R[12]]]],[11,R[978],E,E,34,[[["v"]],[R[12]]]],[11,R[980],E,E,34,[[["v"]],[R[12]]]],[11,R[982],E,E,34,[[["v"]],[R[12]]]],[11,R[984],E,E,34,[[["v"]],[R[12]]]],[11,R[986],E,E,34,[[["v"]],[R[12]]]],[11,R[988],E,E,34,[[["v"]],[R[12]]]],[11,R[990],E,E,34,[[["v"]],[R[12]]]],[11,R[992],E,E,34,[[["v"]],[R[12]]]],[11,R[994],E,E,34,[[["v"]],[R[12]]]],[11,R[996],E,E,34,[[["v"]],[R[12]]]],[11,R[998],E,E,34,[[["v"]],[R[12]]]],[11,R[1000],E,E,34,[[["v"]],[R[12]]]],[11,R[1001],E,E,34,[[["v"]],[R[12]]]],[11,R[1002],E,E,34,[[["v"]],[R[12]]]],[11,R[1003],E,E,34,[[["v"]],[R[12]]]],[11,R[1004],E,E,34,[[["v"]],[R[12]]]],[11,R[1006],E,E,34,[[["v"]],[R[12]]]],[11,R[1008],E,E,34,[[["v"],["str"]],[R[12]]]],[11,R[1010],E,E,34,[[["v"],["str"]],[R[12]]]],[11,R[1012],E,E,34,[[["v"]],[R[12]]]],[11,R[1013],E,E,34,[[["v"],[R[9]]],[R[12]]]],[11,R[1014],E,E,34,[[["v"],[R[9]],["str"]],[R[12]]]],[11,R[1016],E,E,34,[[["v"]],[R[12]]]],[11,R[1018],E,E,34,[[["v"],["str"]],[R[12]]]],[11,R[1020],E,E,34,[[["v"],["str"]],[R[12]]]],[11,R[1022],E,E,34,[[["v"]],[R[12]]]],[11,R[1024],E,E,34,[[["v"]],[R[12]]]],[11,R[970],E,E,34,[[["v"]],[R[12]]]],[11,R[972],E,E,35,[[["v"]],[R[12]]]],[11,R[974],E,E,35,[[["v"]],[R[12]]]],[11,R[976],E,E,35,[[["v"]],[R[12]]]],[11,R[978],E,E,35,[[["v"]],[R[12]]]],[11,R[980],E,E,35,[[["v"]],[R[12]]]],[11,R[982],E,E,35,[[["v"]],[R[12]]]],[11,R[984],E,E,35,[[["v"]],[R[12]]]],[11,R[986],E,E,35,[[["v"]],[R[12]]]],[11,R[988],E,E,35,[[["v"]],[R[12]]]],[11,R[990],E,E,35,[[["v"]],[R[12]]]],[11,R[992],E,E,35,[[["v"]],[R[12]]]],[11,R[994],E,E,35,[[["v"]],[R[12]]]],[11,R[996],E,E,35,[[["v"]],[R[12]]]],[11,R[998],E,E,35,[[["v"]],[R[12]]]],[11,R[1000],E,E,35,[[["v"]],[R[12]]]],[11,R[1001],E,E,35,[[["v"]],[R[12]]]],[11,R[1002],E,E,35,[[["v"]],[R[12]]]],[11,R[1003],E,E,35,[[["v"]],[R[12]]]],[11,R[1004],E,E,35,[[["v"]],[R[12]]]],[11,R[1006],E,E,35,[[["v"]],[R[12]]]],[11,R[1008],E,E,35,[[["v"],["str"]],[R[12]]]],[11,R[1010],E,E,35,[[["v"],["str"]],[R[12]]]],[11,R[1012],E,E,35,[[["v"]],[R[12]]]],[11,R[1013],E,E,35,[[["v"],[R[9]]],[R[12]]]],[11,R[1014],E,E,35,[[["v"],[R[9]],["str"]],[R[12]]]],[11,R[1016],E,E,35,[[["v"]],[R[12]]]],[11,R[1018],E,E,35,[[["v"],["str"]],[R[12]]]],[11,R[1020],E,E,35,[[["v"],["str"]],[R[12]]]],[11,R[1022],E,E,35,[[["v"]],[R[12]]]],[11,R[1024],E,E,35,[[["v"]],[R[12]]]],[11,R[970],E,E,35,[[["v"]],[R[12]]]],[11,R[972],E,E,36,[[["v"]],[R[12]]]],[11,R[974],E,E,36,[[["v"]],[R[12]]]],[11,R[976],E,E,36,[[["v"]],[R[12]]]],[11,R[978],E,E,36,[[["v"]],[R[12]]]],[11,R[980],E,E,36,[[["v"]],[R[12]]]],[11,R[982],E,E,36,[[["v"]],[R[12]]]],[11,R[984],E,E,36,[[["v"]],[R[12]]]],[11,R[986],E,E,36,[[["v"]],[R[12]]]],[11,R[988],E,E,36,[[["v"]],[R[12]]]],[11,R[990],E,E,36,[[["v"]],[R[12]]]],[11,R[992],E,E,36,[[["v"]],[R[12]]]],[11,R[994],E,E,36,[[["v"]],[R[12]]]],[11,R[996],E,E,36,[[["v"]],[R[12]]]],[11,R[998],E,E,36,[[["v"]],[R[12]]]],[11,R[1000],E,E,36,[[["v"]],[R[12]]]],[11,R[1001],E,E,36,[[["v"]],[R[12]]]],[11,R[1002],E,E,36,[[["v"]],[R[12]]]],[11,R[1003],E,E,36,[[["v"]],[R[12]]]],[11,R[1004],E,E,36,[[["v"]],[R[12]]]],[11,R[1006],E,E,36,[[["v"]],[R[12]]]],[11,R[1008],E,E,36,[[["v"],["str"]],[R[12]]]],[11,R[1010],E,E,36,[[["v"],["str"]],[R[12]]]],[11,R[1012],E,E,36,[[["v"]],[R[12]]]],[11,R[1013],E,E,36,[[["v"],[R[9]]],[R[12]]]],[11,R[1014],E,E,36,[[["v"],[R[9]],["str"]],[R[12]]]],[11,R[1016],E,E,36,[[["v"]],[R[12]]]],[11,R[1018],E,E,36,[[["v"],["str"]],[R[12]]]],[11,R[1020],E,E,36,[[["v"],["str"]],[R[12]]]],[11,R[1022],E,E,36,[[["v"]],[R[12]]]],[11,R[1024],E,E,36,[[["v"]],[R[12]]]],[11,R[970],E,E,36,[[["v"]],[R[12]]]],[11,R[972],E,E,37,[[["v"]],[R[12]]]],[11,R[974],E,E,37,[[["v"]],[R[12]]]],[11,R[976],E,E,37,[[["v"]],[R[12]]]],[11,R[978],E,E,37,[[["v"]],[R[12]]]],[11,R[980],E,E,37,[[["v"]],[R[12]]]],[11,R[982],E,E,37,[[["v"]],[R[12]]]],[11,R[984],E,E,37,[[["v"]],[R[12]]]],[11,R[986],E,E,37,[[["v"]],[R[12]]]],[11,R[988],E,E,37,[[["v"]],[R[12]]]],[11,R[990],E,E,37,[[["v"]],[R[12]]]],[11,R[992],E,E,37,[[["v"]],[R[12]]]],[11,R[994],E,E,37,[[["v"]],[R[12]]]],[11,R[996],E,E,37,[[["v"]],[R[12]]]],[11,R[998],E,E,37,[[["v"]],[R[12]]]],[11,R[1000],E,E,37,[[["v"]],[R[12]]]],[11,R[1001],E,E,37,[[["v"]],[R[12]]]],[11,R[1002],E,E,37,[[["v"]],[R[12]]]],[11,R[1003],E,E,37,[[["v"]],[R[12]]]],[11,R[1004],E,E,37,[[["v"]],[R[12]]]],[11,R[1006],E,E,37,[[["v"]],[R[12]]]],[11,R[1008],E,E,37,[[["v"],["str"]],[R[12]]]],[11,R[1010],E,E,37,[[["v"],["str"]],[R[12]]]],[11,R[1012],E,E,37,[[["v"]],[R[12]]]],[11,R[1013],E,E,37,[[["v"],[R[9]]],[R[12]]]],[11,R[1014],E,E,37,[[["v"],[R[9]],["str"]],[R[12]]]],[11,R[1016],E,E,37,[[["v"]],[R[12]]]],[11,R[1018],E,E,37,[[["v"],["str"]],[R[12]]]],[11,R[1020],E,E,37,[[["v"],["str"]],[R[12]]]],[11,R[1022],E,E,37,[[["v"]],[R[12]]]],[11,R[1024],E,E,37,[[["v"]],[R[12]]]],[11,R[970],E,E,37,[[["v"]],[R[12]]]],[11,R[972],E,E,38,[[["v"]],[R[12]]]],[11,R[974],E,E,38,[[["v"]],[R[12]]]],[11,R[976],E,E,38,[[["v"]],[R[12]]]],[11,R[978],E,E,38,[[["v"]],[R[12]]]],[11,R[980],E,E,38,[[["v"]],[R[12]]]],[11,R[982],E,E,38,[[["v"]],[R[12]]]],[11,R[984],E,E,38,[[["v"]],[R[12]]]],[11,R[986],E,E,38,[[["v"]],[R[12]]]],[11,R[988],E,E,38,[[["v"]],[R[12]]]],[11,R[990],E,E,38,[[["v"]],[R[12]]]],[11,R[992],E,E,38,[[["v"]],[R[12]]]],[11,R[994],E,E,38,[[["v"]],[R[12]]]],[11,R[996],E,E,38,[[["v"]],[R[12]]]],[11,R[998],E,E,38,[[["v"]],[R[12]]]],[11,R[1000],E,E,38,[[["v"]],[R[12]]]],[11,R[1001],E,E,38,[[["v"]],[R[12]]]],[11,R[1002],E,E,38,[[["v"]],[R[12]]]],[11,R[1003],E,E,38,[[["v"]],[R[12]]]],[11,R[1004],E,E,38,[[["v"]],[R[12]]]],[11,R[1006],E,E,38,[[["v"]],[R[12]]]],[11,R[1008],E,E,38,[[["v"],["str"]],[R[12]]]],[11,R[1010],E,E,38,[[["v"],["str"]],[R[12]]]],[11,R[1012],E,E,38,[[["v"]],[R[12]]]],[11,R[1013],E,E,38,[[["v"],[R[9]]],[R[12]]]],[11,R[1014],E,E,38,[[["v"],[R[9]],["str"]],[R[12]]]],[11,R[1016],E,E,38,[[["v"]],[R[12]]]],[11,R[1018],E,E,38,[[["v"],["str"]],[R[12]]]],[11,R[1020],E,E,38,[[["v"],["str"]],[R[12]]]],[11,R[1022],E,E,38,[[["v"]],[R[12]]]],[11,R[1024],E,E,38,[[["v"]],[R[12]]]],[11,R[970],E,E,38,[[["v"]],[R[12]]]],[11,R[972],E,E,39,[[["v"]],[R[12]]]],[11,R[974],E,E,39,[[["v"]],[R[12]]]],[11,R[976],E,E,39,[[["v"]],[R[12]]]],[11,R[978],E,E,39,[[["v"]],[R[12]]]],[11,R[980],E,E,39,[[["v"]],[R[12]]]],[11,R[982],E,E,39,[[["v"]],[R[12]]]],[11,R[984],E,E,39,[[["v"]],[R[12]]]],[11,R[986],E,E,39,[[["v"]],[R[12]]]],[11,R[988],E,E,39,[[["v"]],[R[12]]]],[11,R[990],E,E,39,[[["v"]],[R[12]]]],[11,R[992],E,E,39,[[["v"]],[R[12]]]],[11,R[994],E,E,39,[[["v"]],[R[12]]]],[11,R[996],E,E,39,[[["v"]],[R[12]]]],[11,R[998],E,E,39,[[["v"]],[R[12]]]],[11,R[1000],E,E,39,[[["v"]],[R[12]]]],[11,R[1001],E,E,39,[[["v"]],[R[12]]]],[11,R[1002],E,E,39,[[["v"]],[R[12]]]],[11,R[1003],E,E,39,[[["v"]],[R[12]]]],[11,R[1004],E,E,39,[[["v"]],[R[12]]]],[11,R[1006],E,E,39,[[["v"]],[R[12]]]],[11,R[1008],E,E,39,[[["v"],["str"]],[R[12]]]],[11,R[1010],E,E,39,[[["v"],["str"]],[R[12]]]],[11,R[1012],E,E,39,[[["v"]],[R[12]]]],[11,R[1013],E,E,39,[[["v"],[R[9]]],[R[12]]]],[11,R[1014],E,E,39,[[["v"],[R[9]],["str"]],[R[12]]]],[11,R[1016],E,E,39,[[["v"]],[R[12]]]],[11,R[1018],E,E,39,[[["v"],["str"]],[R[12]]]],[11,R[1020],E,E,39,[[["v"],["str"]],[R[12]]]],[11,R[1022],E,E,39,[[["v"]],[R[12]]]],[11,R[1024],E,E,39,[[["v"]],[R[12]]]],[11,R[970],E,E,39,[[["v"]],[R[12]]]],[11,R[972],E,E,40,[[["v"]],[R[12]]]],[11,R[974],E,E,40,[[["v"]],[R[12]]]],[11,R[976],E,E,40,[[["v"]],[R[12]]]],[11,R[978],E,E,40,[[["v"]],[R[12]]]],[11,R[980],E,E,40,[[["v"]],[R[12]]]],[11,R[982],E,E,40,[[["v"]],[R[12]]]],[11,R[984],E,E,40,[[["v"]],[R[12]]]],[11,R[986],E,E,40,[[["v"]],[R[12]]]],[11,R[988],E,E,40,[[["v"]],[R[12]]]],[11,R[990],E,E,40,[[["v"]],[R[12]]]],[11,R[992],E,E,40,[[["v"]],[R[12]]]],[11,R[994],E,E,40,[[["v"]],[R[12]]]],[11,R[996],E,E,40,[[["v"]],[R[12]]]],[11,R[998],E,E,40,[[["v"]],[R[12]]]],[11,R[1000],E,E,40,[[["v"]],[R[12]]]],[11,R[1001],E,E,40,[[["v"]],[R[12]]]],[11,R[1002],E,E,40,[[["v"]],[R[12]]]],[11,R[1003],E,E,40,[[["v"]],[R[12]]]],[11,R[1004],E,E,40,[[["v"]],[R[12]]]],[11,R[1006],E,E,40,[[["v"]],[R[12]]]],[11,R[1008],E,E,40,[[["v"],["str"]],[R[12]]]],[11,R[1010],E,E,40,[[["v"],["str"]],[R[12]]]],[11,R[1012],E,E,40,[[["v"]],[R[12]]]],[11,R[1013],E,E,40,[[["v"],[R[9]]],[R[12]]]],[11,R[1014],E,E,40,[[["v"],[R[9]],["str"]],[R[12]]]],[11,R[1016],E,E,40,[[["v"]],[R[12]]]],[11,R[1018],E,E,40,[[["v"],["str"]],[R[12]]]],[11,R[1020],E,E,40,[[["v"],["str"]],[R[12]]]],[11,R[1022],E,E,40,[[["v"]],[R[12]]]],[11,R[1024],E,E,40,[[["v"]],[R[12]]]],[11,R[970],E,E,40,[[["v"]],[R[12]]]],[11,R[972],E,E,41,[[["v"]],[R[12]]]],[11,R[974],E,E,41,[[["v"]],[R[12]]]],[11,R[976],E,E,41,[[["v"]],[R[12]]]],[11,R[978],E,E,41,[[["v"]],[R[12]]]],[11,R[980],E,E,41,[[["v"]],[R[12]]]],[11,R[982],E,E,41,[[["v"]],[R[12]]]],[11,R[984],E,E,41,[[["v"]],[R[12]]]],[11,R[986],E,E,41,[[["v"]],[R[12]]]],[11,R[988],E,E,41,[[["v"]],[R[12]]]],[11,R[990],E,E,41,[[["v"]],[R[12]]]],[11,R[992],E,E,41,[[["v"]],[R[12]]]],[11,R[994],E,E,41,[[["v"]],[R[12]]]],[11,R[996],E,E,41,[[["v"]],[R[12]]]],[11,R[998],E,E,41,[[["v"]],[R[12]]]],[11,R[1000],E,E,41,[[["v"]],[R[12]]]],[11,R[1001],E,E,41,[[["v"]],[R[12]]]],[11,R[1002],E,E,41,[[["v"]],[R[12]]]],[11,R[1003],E,E,41,[[["v"]],[R[12]]]],[11,R[1004],E,E,41,[[["v"]],[R[12]]]],[11,R[1006],E,E,41,[[["v"]],[R[12]]]],[11,R[1008],E,E,41,[[["v"],["str"]],[R[12]]]],[11,R[1010],E,E,41,[[["v"],["str"]],[R[12]]]],[11,R[1012],E,E,41,[[["v"]],[R[12]]]],[11,R[1013],E,E,41,[[["v"],[R[9]]],[R[12]]]],[11,R[1014],E,E,41,[[["v"],[R[9]],["str"]],[R[12]]]],[11,R[1016],E,E,41,[[["v"]],[R[12]]]],[11,R[1018],E,E,41,[[["v"],["str"]],[R[12]]]],[11,R[1020],E,E,41,[[["v"],["str"]],[R[12]]]],[11,R[1022],E,E,41,[[["v"]],[R[12]]]],[11,R[1024],E,E,41,[[["v"]],[R[12]]]],[11,R[970],E,E,41,[[["v"]],[R[12]]]],[11,R[972],E,E,42,[[["v"]],[R[12]]]],[11,R[974],E,E,42,[[["v"]],[R[12]]]],[11,R[976],E,E,42,[[["v"]],[R[12]]]],[11,R[978],E,E,42,[[["v"]],[R[12]]]],[11,R[980],E,E,42,[[["v"]],[R[12]]]],[11,R[982],E,E,42,[[["v"]],[R[12]]]],[11,R[984],E,E,42,[[["v"]],[R[12]]]],[11,R[986],E,E,42,[[["v"]],[R[12]]]],[11,R[988],E,E,42,[[["v"]],[R[12]]]],[11,R[990],E,E,42,[[["v"]],[R[12]]]],[11,R[992],E,E,42,[[["v"]],[R[12]]]],[11,R[994],E,E,42,[[["v"]],[R[12]]]],[11,R[996],E,E,42,[[["v"]],[R[12]]]],[11,R[998],E,E,42,[[["v"]],[R[12]]]],[11,R[1000],E,E,42,[[["v"]],[R[12]]]],[11,R[1001],E,E,42,[[["v"]],[R[12]]]],[11,R[1002],E,E,42,[[["v"]],[R[12]]]],[11,R[1003],E,E,42,[[["v"]],[R[12]]]],[11,R[1004],E,E,42,[[["v"]],[R[12]]]],[11,R[1006],E,E,42,[[["v"]],[R[12]]]],[11,R[1008],E,E,42,[[["v"],["str"]],[R[12]]]],[11,R[1010],E,E,42,[[["v"],["str"]],[R[12]]]],[11,R[1012],E,E,42,[[["v"]],[R[12]]]],[11,R[1013],E,E,42,[[["v"],[R[9]]],[R[12]]]],[11,R[1014],E,E,42,[[["v"],[R[9]],["str"]],[R[12]]]],[11,R[1016],E,E,42,[[["v"]],[R[12]]]],[11,R[1018],E,E,42,[[["v"],["str"]],[R[12]]]],[11,R[1020],E,E,42,[[["v"],["str"]],[R[12]]]],[11,R[1022],E,E,42,[[["v"]],[R[12]]]],[11,R[1024],E,E,42,[[["v"]],[R[12]]]],[11,R[970],E,E,42,[[["v"]],[R[12]]]],[11,R[972],E,E,43,[[["v"]],[R[12]]]],[11,R[974],E,E,43,[[["v"]],[R[12]]]],[11,R[976],E,E,43,[[["v"]],[R[12]]]],[11,R[978],E,E,43,[[["v"]],[R[12]]]],[11,R[980],E,E,43,[[["v"]],[R[12]]]],[11,R[982],E,E,43,[[["v"]],[R[12]]]],[11,R[984],E,E,43,[[["v"]],[R[12]]]],[11,R[986],E,E,43,[[["v"]],[R[12]]]],[11,R[988],E,E,43,[[["v"]],[R[12]]]],[11,R[990],E,E,43,[[["v"]],[R[12]]]],[11,R[992],E,E,43,[[["v"]],[R[12]]]],[11,R[994],E,E,43,[[["v"]],[R[12]]]],[11,R[996],E,E,43,[[["v"]],[R[12]]]],[11,R[998],E,E,43,[[["v"]],[R[12]]]],[11,R[1000],E,E,43,[[["v"]],[R[12]]]],[11,R[1001],E,E,43,[[["v"]],[R[12]]]],[11,R[1002],E,E,43,[[["v"]],[R[12]]]],[11,R[1003],E,E,43,[[["v"]],[R[12]]]],[11,R[1004],E,E,43,[[["v"]],[R[12]]]],[11,R[1006],E,E,43,[[["v"]],[R[12]]]],[11,R[1008],E,E,43,[[["v"],["str"]],[R[12]]]],[11,R[1010],E,E,43,[[["v"],["str"]],[R[12]]]],[11,R[1012],E,E,43,[[["v"]],[R[12]]]],[11,R[1013],E,E,43,[[["v"],[R[9]]],[R[12]]]],[11,R[1014],E,E,43,[[["v"],[R[9]],["str"]],[R[12]]]],[11,R[1016],E,E,43,[[["v"]],[R[12]]]],[11,R[1018],E,E,43,[[["v"],["str"]],[R[12]]]],[11,R[1020],E,E,43,[[["v"],["str"]],[R[12]]]],[11,R[1022],E,E,43,[[["v"]],[R[12]]]],[11,R[1024],E,E,43,[[["v"]],[R[12]]]],[11,R[970],E,E,43,[[["v"]],[R[12]]]],[11,R[972],E,E,44,[[["v"]],[R[12]]]],[11,R[974],E,E,44,[[["v"]],[R[12]]]],[11,R[976],E,E,44,[[["v"]],[R[12]]]],[11,R[978],E,E,44,[[["v"]],[R[12]]]],[11,R[980],E,E,44,[[["v"]],[R[12]]]],[11,R[982],E,E,44,[[["v"]],[R[12]]]],[11,R[984],E,E,44,[[["v"]],[R[12]]]],[11,R[986],E,E,44,[[["v"]],[R[12]]]],[11,R[988],E,E,44,[[["v"]],[R[12]]]],[11,R[990],E,E,44,[[["v"]],[R[12]]]],[11,R[992],E,E,44,[[["v"]],[R[12]]]],[11,R[994],E,E,44,[[["v"]],[R[12]]]],[11,R[996],E,E,44,[[["v"]],[R[12]]]],[11,R[998],E,E,44,[[["v"]],[R[12]]]],[11,R[1000],E,E,44,[[["v"]],[R[12]]]],[11,R[1001],E,E,44,[[["v"]],[R[12]]]],[11,R[1002],E,E,44,[[["v"]],[R[12]]]],[11,R[1003],E,E,44,[[["v"]],[R[12]]]],[11,R[1004],E,E,44,[[["v"]],[R[12]]]],[11,R[1006],E,E,44,[[["v"]],[R[12]]]],[11,R[1008],E,E,44,[[["v"],["str"]],[R[12]]]],[11,R[1010],E,E,44,[[["v"],["str"]],[R[12]]]],[11,R[1012],E,E,44,[[["v"]],[R[12]]]],[11,R[1013],E,E,44,[[["v"],[R[9]]],[R[12]]]],[11,R[1014],E,E,44,[[["v"],[R[9]],["str"]],[R[12]]]],[11,R[1016],E,E,44,[[["v"]],[R[12]]]],[11,R[1018],E,E,44,[[["v"],["str"]],[R[12]]]],[11,R[1020],E,E,44,[[["v"],["str"]],[R[12]]]],[11,R[1022],E,E,44,[[["v"]],[R[12]]]],[11,R[1024],E,E,44,[[["v"]],[R[12]]]],[11,R[970],E,E,44,[[["v"]],[R[12]]]],[11,R[972],E,E,45,[[["v"]],[R[12]]]],[11,R[974],E,E,45,[[["v"]],[R[12]]]],[11,R[976],E,E,45,[[["v"]],[R[12]]]],[11,R[978],E,E,45,[[["v"]],[R[12]]]],[11,R[980],E,E,45,[[["v"]],[R[12]]]],[11,R[982],E,E,45,[[["v"]],[R[12]]]],[11,R[984],E,E,45,[[["v"]],[R[12]]]],[11,R[986],E,E,45,[[["v"]],[R[12]]]],[11,R[988],E,E,45,[[["v"]],[R[12]]]],[11,R[990],E,E,45,[[["v"]],[R[12]]]],[11,R[992],E,E,45,[[["v"]],[R[12]]]],[11,R[994],E,E,45,[[["v"]],[R[12]]]],[11,R[996],E,E,45,[[["v"]],[R[12]]]],[11,R[998],E,E,45,[[["v"]],[R[12]]]],[11,R[1000],E,E,45,[[["v"]],[R[12]]]],[11,R[1001],E,E,45,[[["v"]],[R[12]]]],[11,R[1002],E,E,45,[[["v"]],[R[12]]]],[11,R[1003],E,E,45,[[["v"]],[R[12]]]],[11,R[1004],E,E,45,[[["v"]],[R[12]]]],[11,R[1006],E,E,45,[[["v"]],[R[12]]]],[11,R[1008],E,E,45,[[["v"],["str"]],[R[12]]]],[11,R[1010],E,E,45,[[["v"],["str"]],[R[12]]]],[11,R[1012],E,E,45,[[["v"]],[R[12]]]],[11,R[1013],E,E,45,[[["v"],[R[9]]],[R[12]]]],[11,R[1014],E,E,45,[[["v"],[R[9]],["str"]],[R[12]]]],[11,R[1016],E,E,45,[[["v"]],[R[12]]]],[11,R[1018],E,E,45,[[["v"],["str"]],[R[12]]]],[11,R[1020],E,E,45,[[["v"],["str"]],[R[12]]]],[11,R[1022],E,E,45,[[["v"]],[R[12]]]],[11,R[1024],E,E,45,[[["v"]],[R[12]]]],[11,R[970],E,E,45,[[["v"]],[R[12]]]],[11,R[972],E,E,46,[[["v"]],[R[12]]]],[11,R[974],E,E,46,[[["v"]],[R[12]]]],[11,R[976],E,E,46,[[["v"]],[R[12]]]],[11,R[978],E,E,46,[[["v"]],[R[12]]]],[11,R[980],E,E,46,[[["v"]],[R[12]]]],[11,R[982],E,E,46,[[["v"]],[R[12]]]],[11,R[984],E,E,46,[[["v"]],[R[12]]]],[11,R[986],E,E,46,[[["v"]],[R[12]]]],[11,R[988],E,E,46,[[["v"]],[R[12]]]],[11,R[990],E,E,46,[[["v"]],[R[12]]]],[11,R[992],E,E,46,[[["v"]],[R[12]]]],[11,R[994],E,E,46,[[["v"]],[R[12]]]],[11,R[996],E,E,46,[[["v"]],[R[12]]]],[11,R[998],E,E,46,[[["v"]],[R[12]]]],[11,R[1000],E,E,46,[[["v"]],[R[12]]]],[11,R[1001],E,E,46,[[["v"]],[R[12]]]],[11,R[1002],E,E,46,[[["v"]],[R[12]]]],[11,R[1003],E,E,46,[[["v"]],[R[12]]]],[11,R[1004],E,E,46,[[["v"]],[R[12]]]],[11,R[1006],E,E,46,[[["v"]],[R[12]]]],[11,R[1008],E,E,46,[[["v"],["str"]],[R[12]]]],[11,R[1010],E,E,46,[[["v"],["str"]],[R[12]]]],[11,R[1012],E,E,46,[[["v"]],[R[12]]]],[11,R[1013],E,E,46,[[["v"],[R[9]]],[R[12]]]],[11,R[1014],E,E,46,[[["v"],[R[9]],["str"]],[R[12]]]],[11,R[1016],E,E,46,[[["v"]],[R[12]]]],[11,R[1018],E,E,46,[[["v"],["str"]],[R[12]]]],[11,R[1022],E,E,46,[[["v"]],[R[12]]]],[11,R[1024],E,E,46,[[["v"]],[R[12]]]],[11,R[970],E,E,46,[[["v"]],[R[12]]]],[11,R[1020],E,E,46,[[["str"],["v"]],[R[12]]]],[11,R[970],E,E,47,[[["v"]],[R[12]]]],[11,R[1020],E,E,47,[[["str"],["v"]],[R[12]]]],[11,R[972],E,E,47,[[["v"]],[R[12]]]],[11,R[974],E,E,47,[[["v"]],[R[12]]]],[11,R[976],E,E,47,[[["v"]],[R[12]]]],[11,R[978],E,E,47,[[["v"]],[R[12]]]],[11,R[980],E,E,47,[[["v"]],[R[12]]]],[11,R[982],E,E,47,[[["v"]],[R[12]]]],[11,R[984],E,E,47,[[["v"]],[R[12]]]],[11,R[986],E,E,47,[[["v"]],[R[12]]]],[11,R[988],E,E,47,[[["v"]],[R[12]]]],[11,R[990],E,E,47,[[["v"]],[R[12]]]],[11,R[992],E,E,47,[[["v"]],[R[12]]]],[11,R[994],E,E,47,[[["v"]],[R[12]]]],[11,R[996],E,E,47,[[["v"]],[R[12]]]],[11,R[998],E,E,47,[[["v"]],[R[12]]]],[11,R[1000],E,E,47,[[["v"]],[R[12]]]],[11,R[1001],E,E,47,[[["v"]],[R[12]]]],[11,R[1002],E,E,47,[[["v"]],[R[12]]]],[11,R[1003],E,E,47,[[["v"]],[R[12]]]],[11,R[1004],E,E,47,[[["v"]],[R[12]]]],[11,R[1006],E,E,47,[[["v"]],[R[12]]]],[11,R[1008],E,E,47,[[["v"],["str"]],[R[12]]]],[11,R[1010],E,E,47,[[["v"],["str"]],[R[12]]]],[11,R[1012],E,E,47,[[["v"]],[R[12]]]],[11,R[1013],E,E,47,[[["v"],[R[9]]],[R[12]]]],[11,R[1014],E,E,47,[[["v"],[R[9]],["str"]],[R[12]]]],[11,R[1016],E,E,47,[[["v"]],[R[12]]]],[11,R[1018],E,E,47,[[["v"],["str"]],[R[12]]]],[11,R[1022],E,E,47,[[["v"]],[R[12]]]],[11,R[1024],E,E,47,[[["v"]],[R[12]]]],[11,R[970],E,E,1,[[["v"]],[R[12]]]],[11,R[1020],E,E,1,[[["str"],["v"]],[R[12]]]],[11,R[972],E,E,1,[[["v"]],[R[12]]]],[11,R[974],E,E,1,[[["v"]],[R[12]]]],[11,R[976],E,E,1,[[["v"]],[R[12]]]],[11,R[978],E,E,1,[[["v"]],[R[12]]]],[11,R[980],E,E,1,[[["v"]],[R[12]]]],[11,R[982],E,E,1,[[["v"]],[R[12]]]],[11,R[984],E,E,1,[[["v"]],[R[12]]]],[11,R[986],E,E,1,[[["v"]],[R[12]]]],[11,R[988],E,E,1,[[["v"]],[R[12]]]],[11,R[990],E,E,1,[[["v"]],[R[12]]]],[11,R[992],E,E,1,[[["v"]],[R[12]]]],[11,R[994],E,E,1,[[["v"]],[R[12]]]],[11,R[996],E,E,1,[[["v"]],[R[12]]]],[11,R[998],E,E,1,[[["v"]],[R[12]]]],[11,R[1000],E,E,1,[[["v"]],[R[12]]]],[11,R[1001],E,E,1,[[["v"]],[R[12]]]],[11,R[1002],E,E,1,[[["v"]],[R[12]]]],[11,R[1003],E,E,1,[[["v"]],[R[12]]]],[11,R[1004],E,E,1,[[["v"]],[R[12]]]],[11,R[1006],E,E,1,[[["v"]],[R[12]]]],[11,R[1008],E,E,1,[[["v"],["str"]],[R[12]]]],[11,R[1010],E,E,1,[[["v"],["str"]],[R[12]]]],[11,R[1012],E,E,1,[[["v"]],[R[12]]]],[11,R[1013],E,E,1,[[["v"],[R[9]]],[R[12]]]],[11,R[1014],E,E,1,[[["v"],[R[9]],["str"]],[R[12]]]],[11,R[1016],E,E,1,[[["v"]],[R[12]]]],[11,R[1018],E,E,1,[[["v"],["str"]],[R[12]]]],[11,R[1022],E,E,1,[[["v"]],[R[12]]]],[11,R[1024],E,E,1,[[["v"]],[R[12]]]],[11,R[970],E,E,48,[[["v"]],[R[12]]]],[11,R[1020],E,E,48,[[["str"],["v"]],[R[12]]]],[11,R[972],E,E,48,[[["v"]],[R[12]]]],[11,R[974],E,E,48,[[["v"]],[R[12]]]],[11,R[976],E,E,48,[[["v"]],[R[12]]]],[11,R[978],E,E,48,[[["v"]],[R[12]]]],[11,R[980],E,E,48,[[["v"]],[R[12]]]],[11,R[982],E,E,48,[[["v"]],[R[12]]]],[11,R[984],E,E,48,[[["v"]],[R[12]]]],[11,R[986],E,E,48,[[["v"]],[R[12]]]],[11,R[988],E,E,48,[[["v"]],[R[12]]]],[11,R[990],E,E,48,[[["v"]],[R[12]]]],[11,R[992],E,E,48,[[["v"]],[R[12]]]],[11,R[994],E,E,48,[[["v"]],[R[12]]]],[11,R[996],E,E,48,[[["v"]],[R[12]]]],[11,R[998],E,E,48,[[["v"]],[R[12]]]],[11,R[1000],E,E,48,[[["v"]],[R[12]]]],[11,R[1001],E,E,48,[[["v"]],[R[12]]]],[11,R[1002],E,E,48,[[["v"]],[R[12]]]],[11,R[1003],E,E,48,[[["v"]],[R[12]]]],[11,R[1004],E,E,48,[[["v"]],[R[12]]]],[11,R[1006],E,E,48,[[["v"]],[R[12]]]],[11,R[1008],E,E,48,[[["v"],["str"]],[R[12]]]],[11,R[1010],E,E,48,[[["v"],["str"]],[R[12]]]],[11,R[1012],E,E,48,[[["v"]],[R[12]]]],[11,R[1013],E,E,48,[[["v"],[R[9]]],[R[12]]]],[11,R[1014],E,E,48,[[["v"],[R[9]],["str"]],[R[12]]]],[11,R[1016],E,E,48,[[["v"]],[R[12]]]],[11,R[1018],E,E,48,[[["v"],["str"]],[R[12]]]],[11,R[1022],E,E,48,[[["v"]],[R[12]]]],[11,R[1024],E,E,48,[[["v"]],[R[12]]]],[11,R[970],E,E,49,[[["v"]],[R[12]]]],[11,R[1020],E,E,49,[[["str"],["v"]],[R[12]]]],[11,R[972],E,E,49,[[["v"]],[R[12]]]],[11,R[974],E,E,49,[[["v"]],[R[12]]]],[11,R[976],E,E,49,[[["v"]],[R[12]]]],[11,R[978],E,E,49,[[["v"]],[R[12]]]],[11,R[980],E,E,49,[[["v"]],[R[12]]]],[11,R[982],E,E,49,[[["v"]],[R[12]]]],[11,R[984],E,E,49,[[["v"]],[R[12]]]],[11,R[986],E,E,49,[[["v"]],[R[12]]]],[11,R[988],E,E,49,[[["v"]],[R[12]]]],[11,R[990],E,E,49,[[["v"]],[R[12]]]],[11,R[992],E,E,49,[[["v"]],[R[12]]]],[11,R[994],E,E,49,[[["v"]],[R[12]]]],[11,R[996],E,E,49,[[["v"]],[R[12]]]],[11,R[998],E,E,49,[[["v"]],[R[12]]]],[11,R[1000],E,E,49,[[["v"]],[R[12]]]],[11,R[1001],E,E,49,[[["v"]],[R[12]]]],[11,R[1002],E,E,49,[[["v"]],[R[12]]]],[11,R[1003],E,E,49,[[["v"]],[R[12]]]],[11,R[1004],E,E,49,[[["v"]],[R[12]]]],[11,R[1006],E,E,49,[[["v"]],[R[12]]]],[11,R[1008],E,E,49,[[["v"],["str"]],[R[12]]]],[11,R[1010],E,E,49,[[["v"],["str"]],[R[12]]]],[11,R[1012],E,E,49,[[["v"]],[R[12]]]],[11,R[1013],E,E,49,[[["v"],[R[9]]],[R[12]]]],[11,R[1014],E,E,49,[[["v"],[R[9]],["str"]],[R[12]]]],[11,R[1016],E,E,49,[[["v"]],[R[12]]]],[11,R[1018],E,E,49,[[["v"],["str"]],[R[12]]]],[11,R[1022],E,E,49,[[["v"]],[R[12]]]],[11,R[1024],E,E,49,[[["v"]],[R[12]]]],[11,R[970],E,E,2,[[["v"]],[R[12]]]],[11,R[972],E,E,2,[[["v"]],[R[12]]]],[11,R[974],E,E,2,[[["v"]],[R[12]]]],[11,R[976],E,E,2,[[["v"]],[R[12]]]],[11,R[978],E,E,2,[[["v"]],[R[12]]]],[11,R[980],E,E,2,[[["v"]],[R[12]]]],[11,R[982],E,E,2,[[["v"]],[R[12]]]],[11,R[984],E,E,2,[[["v"]],[R[12]]]],[11,R[986],E,E,2,[[["v"]],[R[12]]]],[11,R[988],E,E,2,[[["v"]],[R[12]]]],[11,R[990],E,E,2,[[["v"]],[R[12]]]],[11,R[992],E,E,2,[[["v"]],[R[12]]]],[11,R[994],E,E,2,[[["v"]],[R[12]]]],[11,R[996],E,E,2,[[["v"]],[R[12]]]],[11,R[998],E,E,2,[[["v"]],[R[12]]]],[11,R[1000],E,E,2,[[["v"]],[R[12]]]],[11,R[1001],E,E,2,[[["v"]],[R[12]]]],[11,R[1002],E,E,2,[[["v"]],[R[12]]]],[11,R[1003],E,E,2,[[["v"]],[R[12]]]],[11,R[1004],E,E,2,[[["v"]],[R[12]]]],[11,R[1006],E,E,2,[[["v"]],[R[12]]]],[11,R[1008],E,E,2,[[["v"],["str"]],[R[12]]]],[11,R[1010],E,E,2,[[["v"],["str"]],[R[12]]]],[11,R[1012],E,E,2,[[["v"]],[R[12]]]],[11,R[1013],E,E,2,[[["v"],[R[9]]],[R[12]]]],[11,R[1014],E,E,2,[[["v"],[R[9]],["str"]],[R[12]]]],[11,R[1016],E,E,2,[[["v"]],[R[12]]]],[11,R[1018],E,E,2,[[["v"],["str"]],[R[12]]]],[11,R[1022],E,E,2,[[["v"]],[R[12]]]],[11,R[1024],E,E,2,[[["v"]],[R[12]]]],[11,R[1020],E,E,2,[[["v"],["str"]],[R[12]]]],[11,R[970],E,E,3,[[["v"]],[R[12]]]],[11,R[972],E,E,3,[[["v"]],[R[12]]]],[11,R[974],E,E,3,[[["v"]],[R[12]]]],[11,R[976],E,E,3,[[["v"]],[R[12]]]],[11,R[978],E,E,3,[[["v"]],[R[12]]]],[11,R[980],E,E,3,[[["v"]],[R[12]]]],[11,R[982],E,E,3,[[["v"]],[R[12]]]],[11,R[984],E,E,3,[[["v"]],[R[12]]]],[11,R[986],E,E,3,[[["v"]],[R[12]]]],[11,R[988],E,E,3,[[["v"]],[R[12]]]],[11,R[990],E,E,3,[[["v"]],[R[12]]]],[11,R[992],E,E,3,[[["v"]],[R[12]]]],[11,R[994],E,E,3,[[["v"]],[R[12]]]],[11,R[996],E,E,3,[[["v"]],[R[12]]]],[11,R[998],E,E,3,[[["v"]],[R[12]]]],[11,R[1000],E,E,3,[[["v"]],[R[12]]]],[11,R[1001],E,E,3,[[["v"]],[R[12]]]],[11,R[1002],E,E,3,[[["v"]],[R[12]]]],[11,R[1003],E,E,3,[[["v"]],[R[12]]]],[11,R[1004],E,E,3,[[["v"]],[R[12]]]],[11,R[1006],E,E,3,[[["v"]],[R[12]]]],[11,R[1008],E,E,3,[[["v"],["str"]],[R[12]]]],[11,R[1010],E,E,3,[[["v"],["str"]],[R[12]]]],[11,R[1012],E,E,3,[[["v"]],[R[12]]]],[11,R[1013],E,E,3,[[["v"],[R[9]]],[R[12]]]],[11,R[1014],E,E,3,[[["v"],[R[9]],["str"]],[R[12]]]],[11,R[1016],E,E,3,[[["v"]],[R[12]]]],[11,R[1018],E,E,3,[[["v"],["str"]],[R[12]]]],[11,R[1020],E,E,3,[[["v"],["str"]],[R[12]]]],[11,R[1022],E,E,3,[[["v"]],[R[12]]]],[11,R[1024],E,E,3,[[["v"]],[R[12]]]],[11,R[970],E,E,4,[[["v"]],[R[12]]]],[11,R[972],E,E,4,[[["v"]],[R[12]]]],[11,R[974],E,E,4,[[["v"]],[R[12]]]],[11,R[976],E,E,4,[[["v"]],[R[12]]]],[11,R[978],E,E,4,[[["v"]],[R[12]]]],[11,R[980],E,E,4,[[["v"]],[R[12]]]],[11,R[982],E,E,4,[[["v"]],[R[12]]]],[11,R[984],E,E,4,[[["v"]],[R[12]]]],[11,R[986],E,E,4,[[["v"]],[R[12]]]],[11,R[988],E,E,4,[[["v"]],[R[12]]]],[11,R[990],E,E,4,[[["v"]],[R[12]]]],[11,R[992],E,E,4,[[["v"]],[R[12]]]],[11,R[994],E,E,4,[[["v"]],[R[12]]]],[11,R[996],E,E,4,[[["v"]],[R[12]]]],[11,R[998],E,E,4,[[["v"]],[R[12]]]],[11,R[1000],E,E,4,[[["v"]],[R[12]]]],[11,R[1001],E,E,4,[[["v"]],[R[12]]]],[11,R[1002],E,E,4,[[["v"]],[R[12]]]],[11,R[1003],E,E,4,[[["v"]],[R[12]]]],[11,R[1004],E,E,4,[[["v"]],[R[12]]]],[11,R[1006],E,E,4,[[["v"]],[R[12]]]],[11,R[1008],E,E,4,[[["v"],["str"]],[R[12]]]],[11,R[1010],E,E,4,[[["v"],["str"]],[R[12]]]],[11,R[1012],E,E,4,[[["v"]],[R[12]]]],[11,R[1013],E,E,4,[[["v"],[R[9]]],[R[12]]]],[11,R[1014],E,E,4,[[["v"],[R[9]],["str"]],[R[12]]]],[11,R[1016],E,E,4,[[["v"]],[R[12]]]],[11,R[1018],E,E,4,[[["v"],["str"]],[R[12]]]],[11,R[1020],E,E,4,[[["v"],["str"]],[R[12]]]],[11,R[1022],E,E,4,[[["v"]],[R[12]]]],[11,R[1024],E,E,4,[[["v"]],[R[12]]]],[11,R[970],E,E,5,[[["v"]],[R[12]]]],[11,R[1012],E,E,5,[[["v"]],[R[12]]]],[11,R[1013],E,E,5,[[["v"],[R[9]]],[R[12]]]],[11,R[972],E,E,5,[[["v"]],[R[12]]]],[11,R[974],E,E,5,[[["v"]],[R[12]]]],[11,R[976],E,E,5,[[["v"]],[R[12]]]],[11,R[978],E,E,5,[[["v"]],[R[12]]]],[11,R[980],E,E,5,[[["v"]],[R[12]]]],[11,R[982],E,E,5,[[["v"]],[R[12]]]],[11,R[984],E,E,5,[[["v"]],[R[12]]]],[11,R[986],E,E,5,[[["v"]],[R[12]]]],[11,R[988],E,E,5,[[["v"]],[R[12]]]],[11,R[990],E,E,5,[[["v"]],[R[12]]]],[11,R[992],E,E,5,[[["v"]],[R[12]]]],[11,R[994],E,E,5,[[["v"]],[R[12]]]],[11,R[996],E,E,5,[[["v"]],[R[12]]]],[11,R[998],E,E,5,[[["v"]],[R[12]]]],[11,R[1000],E,E,5,[[["v"]],[R[12]]]],[11,R[1001],E,E,5,[[["v"]],[R[12]]]],[11,R[1002],E,E,5,[[["v"]],[R[12]]]],[11,R[1003],E,E,5,[[["v"]],[R[12]]]],[11,R[1004],E,E,5,[[["v"]],[R[12]]]],[11,R[1006],E,E,5,[[["v"]],[R[12]]]],[11,R[1008],E,E,5,[[["v"],["str"]],[R[12]]]],[11,R[1010],E,E,5,[[["v"],["str"]],[R[12]]]],[11,R[1014],E,E,5,[[["v"],[R[9]],["str"]],[R[12]]]],[11,R[1016],E,E,5,[[["v"]],[R[12]]]],[11,R[1018],E,E,5,[[["v"],["str"]],[R[12]]]],[11,R[1020],E,E,5,[[["v"],["str"]],[R[12]]]],[11,R[1022],E,E,5,[[["v"]],[R[12]]]],[11,R[1024],E,E,5,[[["v"]],[R[12]]]],[11,R[970],E,E,6,[[["v"]],[R[12]]]],[11,R[972],E,E,6,[[["v"]],[R[12]]]],[11,R[974],E,E,6,[[["v"]],[R[12]]]],[11,R[976],E,E,6,[[["v"]],[R[12]]]],[11,R[978],E,E,6,[[["v"]],[R[12]]]],[11,R[980],E,E,6,[[["v"]],[R[12]]]],[11,R[982],E,E,6,[[["v"]],[R[12]]]],[11,R[984],E,E,6,[[["v"]],[R[12]]]],[11,R[986],E,E,6,[[["v"]],[R[12]]]],[11,R[988],E,E,6,[[["v"]],[R[12]]]],[11,R[990],E,E,6,[[["v"]],[R[12]]]],[11,R[992],E,E,6,[[["v"]],[R[12]]]],[11,R[994],E,E,6,[[["v"]],[R[12]]]],[11,R[996],E,E,6,[[["v"]],[R[12]]]],[11,R[998],E,E,6,[[["v"]],[R[12]]]],[11,R[1000],E,E,6,[[["v"]],[R[12]]]],[11,R[1001],E,E,6,[[["v"]],[R[12]]]],[11,R[1002],E,E,6,[[["v"]],[R[12]]]],[11,R[1003],E,E,6,[[["v"]],[R[12]]]],[11,R[1004],E,E,6,[[["v"]],[R[12]]]],[11,R[1006],E,E,6,[[["v"]],[R[12]]]],[11,R[1008],E,E,6,[[["v"],["str"]],[R[12]]]],[11,R[1010],E,E,6,[[["v"],["str"]],[R[12]]]],[11,R[1012],E,E,6,[[["v"]],[R[12]]]],[11,R[1013],E,E,6,[[["v"],[R[9]]],[R[12]]]],[11,R[1014],E,E,6,[[["v"],[R[9]],["str"]],[R[12]]]],[11,R[1016],E,E,6,[[["v"]],[R[12]]]],[11,R[1018],E,E,6,[[["v"],["str"]],[R[12]]]],[11,R[1020],E,E,6,[[["v"],["str"]],[R[12]]]],[11,R[1022],E,E,6,[[["v"]],[R[12]]]],[11,R[1024],E,E,6,[[["v"]],[R[12]]]],[11,"expecting",R[938],E,28,[[["self"],[R[29]]],[R[12]]]],[11,"visit_bool",E,E,28,[[["bool"]],[R[12]]]],[11,"visit_i64",E,E,28,[[["i64"]],[R[12]]]],[11,"visit_u64",E,E,28,[[["u64"]],[R[12]]]],[11,"visit_f64",E,E,28,[[["f64"]],[R[12]]]],[11,"visit_str",E,E,28,[[["str"]],[R[12]]]],[11,"visit_none",E,E,28,[[],[R[12]]]],[11,"visit_some",E,E,28,[[["d"]],[R[12]]]],[11,R[1107],E,E,28,[[["d"]],[R[12]]]],[11,"visit_unit",E,E,28,[[],[R[12]]]],[11,"visit_seq",E,E,28,[[["a"]],[R[12]]]],[11,"visit_map",E,E,28,[[["a"]],[R[12]]]],[11,R[1108],E,E,28,[[],[R[12]]]],[11,R[1109],R[1106],E,3,[[["self"],["v"]],[[R[52]],[R[12],[R[52]]]]]],[11,R[53],E,E,3,[[["self"]],[[R[52],[R[9]]],[R[9]]]]],[11,R[1109],E,E,5,[[["self"],[T]],[[R[12],[R[52]]],[R[52]]]]],[11,R[53],E,E,5,[[["self"]],[[R[52],[R[9]]],[R[9]]]]],[11,R[1110],E,E,5,[[["self"],[T]],[[R[12],[R[52]]],[R[52]]]]],[11,R[1111],E,E,5,[[["self"],[T]],[R[12]]]],[11,R[1112],E,E,5,[[["self"],["tk"],["tv"]],[[R[12],[R[52]]],[R[52]]]]],[11,R[53],E,E,5,[[["self"]],[[R[52],[R[9]]],[R[9]]]]],[11,R[1113],E,E,46,[[[T]],[R[12]]]],[11,R[1113],E,E,47,[[[T]],[R[12]]]],[11,R[1113],E,E,1,[[[T]],[R[12]]]],[11,R[1113],E,E,48,[[[T]],[R[12]]]],[11,R[1113],E,E,49,[[[T]],[R[12]]]],[11,R[958],R[1114],E,50,[[["self"],[T]],[R[12]]]],[11,"end",E,E,50,[[],[R[12]]]],[11,R[958],E,E,50,[[["self"],[T]],[R[12]]]],[11,"end",E,E,50,[[],[R[12]]]],[11,R[961],E,E,50,[[["self"],[T]],[R[12]]]],[11,"end",E,E,50,[[],[R[12]]]],[11,R[961],E,E,50,[[["self"],[T]],[R[12]]]],[11,"end",E,E,50,[[],[R[12]]]],[11,R[1115],E,E,50,[[["self"],[T]],[R[12]]]],[11,R[1116],E,E,50,[[["self"],[T]],[R[12]]]],[11,"end",E,E,50,[[],[R[12]]]],[11,R[961],E,E,50,[[["self"],[T],["str"]],[R[12]]]],[11,"end",E,E,50,[[],[R[12]]]],[11,R[961],E,E,50,[[["self"],[T],["str"]],[R[12]]]],[11,"end",E,E,50,[[],[R[12]]]],[11,"custom",R[1106],E,29,[[[T]],["self"]]],[11,"custom",E,E,29,[[[T]],["self"]]],[11,"eq",E,E,29,[[["error"],["self"]],["bool"]]],[11,"ne",E,E,29,[[["error"],["self"]],["bool"]]],[11,"eq",R[938],E,0,[[[R[939]],["self"]],["bool"]]],[11,"ne",E,E,0,[[[R[939]],["self"]],["bool"]]],[11,"clone",R[1106],E,29,[[["self"]],["error"]]],[11,"clone",E,E,30,[[["self"]],["self"]]],[11,"clone",E,E,31,[[["self"]],["self"]]],[11,"clone",E,E,32,[[["self"]],["self"]]],[11,"clone",E,E,33,[[["self"]],["self"]]],[11,"clone",E,E,34,[[["self"]],["self"]]],[11,"clone",E,E,35,[[["self"]],["self"]]],[11,"clone",E,E,36,[[["self"]],["self"]]],[11,"clone",E,E,37,[[["self"]],["self"]]],[11,"clone",E,E,38,[[["self"]],["self"]]],[11,"clone",E,E,39,[[["self"]],["self"]]],[11,"clone",E,E,40,[[["self"]],["self"]]],[11,"clone",E,E,41,[[["self"]],["self"]]],[11,"clone",E,E,42,[[["self"]],["self"]]],[11,"clone",E,E,43,[[["self"]],["self"]]],[11,"clone",E,E,44,[[["self"]],["self"]]],[11,"clone",E,E,45,[[["self"]],["self"]]],[11,"clone",E,E,46,[[["self"]],["self"]]],[11,"clone",E,E,47,[[["self"]],["self"]]],[11,"clone",E,E,1,[[["self"]],["self"]]],[11,"clone",E,E,48,[[["self"]],["self"]]],[11,"clone",E,E,49,[[["self"]],["self"]]],[11,"clone",E,E,2,[[["self"]],["self"]]],[11,"clone",E,E,3,[[["self"]],["seqdeserializer"]]],[11,"clone",E,E,4,[[["self"]],["seqaccessdeserializer"]]],[11,"clone",E,E,5,[[["self"]],["self"]]],[11,"clone",E,E,6,[[["self"]],["mapaccessdeserializer"]]],[11,"clone",R[938],E,28,[[["self"]],[R[1117]]]],[11,"clone",E,E,0,[[["self"]],[R[939]]]],[11,R[79],E,E,28,[[],[R[1117]]]],[11,"fmt",R[1106],E,29,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,30,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,31,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,32,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,33,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,34,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,35,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,36,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,37,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,38,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,39,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,40,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,41,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,42,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,43,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,44,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,45,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,46,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,47,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,1,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,48,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,49,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,2,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,3,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,4,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,5,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,6,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[938],E,28,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,0,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1106],E,29,[[["self"],[R[29]]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[938],E,0,[[["self"],[R[29]]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,8,[[["self"],[R[29]]],[R[12]]]],[11,R[30],R[1106],E,29,[[["self"]],["str"]]]],"p":[[4,R[317]],[3,R[1118]],[3,R[1119]],[3,R[1120]],[3,R[1121]],[3,R[1122]],[3,R[1123]],[8,"Error"],[8,"Expected"],[8,R[966]],[8,R[1124]],[8,R[952]],[8,"Visitor"],[8,"SeqAccess"],[8,"MapAccess"],[8,"EnumAccess"],[8,R[1125]],[8,R[1126]],[8,"Error"],[8,"Serialize"],[8,R[1127]],[8,R[954]],[8,R[955]],[8,R[959]],[8,R[960]],[8,R[962]],[8,R[963]],[8,R[964]],[3,"IgnoredAny"],[3,"Error"],[3,R[1128]],[3,R[1129]],[3,R[1130]],[3,R[1131]],[3,R[1132]],[3,R[1133]],[3,R[1134]],[3,R[1135]],[3,R[1136]],[3,R[1137]],[3,R[1138]],[3,R[1139]],[3,R[1140]],[3,R[1141]],[3,R[1142]],[3,R[1143]],[3,R[1144]],[3,R[1145]],[3,R[1146]],[3,R[1147]],[3,"Impossible"]]};
searchIndex["slab"]={"doc":"Pre-allocated storage for a uniform data type.","i":[[3,"Slab","slab","Pre-allocated storage for a uniform data type",N,N],[3,R[72],E,"A handle to a vacant entry in a `Slab`.",N,N],[3,"Iter",E,"An iterator over the values stored in the `Slab`",N,N],[3,R[262],E,"A mutable iterator over the values stored in the `Slab`",N,N],[3,"Drain",E,"A draining iterator for `Slab`",N,N],[11,"new",E,"Construct a new, empty `Slab`.",0,[[],["slab"]]],[11,R[73],E,"Construct a new, empty `Slab` with the specified capacity.",0,[[[R[9]]],["slab"]]],[11,R[74],E,"Return the number of values the slab can store without…",0,[[["self"]],[R[9]]]],[11,"reserve",E,"Reserve capacity for at least `additional` more values to…",0,[[["self"],[R[9]]]]],[11,R[75],E,"Reserve the minimum capacity required to store exactly…",0,[[["self"],[R[9]]]]],[11,R[76],E,"Shrink the capacity of the slab as much as possible.",0,[[["self"]]]],[11,"clear",E,"Clear the slab of all values.",0,[[["self"]]]],[11,"len",E,"Return the number of stored values.",0,[[["self"]],[R[9]]]],[11,R[69],E,"Return `true` if there are no values stored in the slab.",0,[[["self"]],["bool"]]],[11,"iter",E,"Return an iterator over the slab.",0,[[["self"]],["iter"]]],[11,R[261],E,"Return an iterator that allows modifying each value.",0,[[["self"]],["itermut"]]],[11,"get",E,R[70],0,[[["self"],[R[9]]],[[R[52]],[T]]]],[11,R[111],E,R[71],0,[[["self"],[R[9]]],[[T],[R[52]]]]],[11,R[2453],E,R[70],0,[[["self"],[R[9]]],[T]]],[11,"get_unchecked_mut",E,R[71],0,[[["self"],[R[9]]],[T]]],[11,"insert",E,"Insert a value in the slab, returning key assigned to the…",0,[[["self"],[T]],[R[9]]]],[11,"vacant_entry",E,"Return a handle to a vacant entry allowing for further…",0,[[["self"]],["vacantentry"]]],[11,"remove",E,"Remove and return the value associated with the given key.",0,[[["self"],[R[9]]],[T]]],[11,R[473],E,"Return `true` if a value is associated with the given key.",0,[[["self"],[R[9]]],["bool"]]],[11,"retain",E,"Retain only the elements specified by the predicate.",0,[[["self"],["f"]]]],[11,"drain",E,"Return a draining iterator that removes all elements from…",0,[[["self"]],["drain"]]],[11,"insert",E,"Insert a value in the entry, returning a mutable reference…",1,[[[T]],[T]]],[11,"key",E,"Return the key associated with this entry.",1,[[["self"]],[R[9]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[[T],["self"]]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[48],E,E,2,[[],["i"]]],[11,"into",E,E,2,[[],[U]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[48],E,E,3,[[],["i"]]],[11,"into",E,E,3,[[],[U]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[48],E,E,4,[[],["i"]]],[11,"into",E,E,4,[[],[U]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,"clone",E,E,0,[[["self"]],["slab"]]],[11,"next",E,E,2,[[["self"]],[R[52]]]],[11,"next",E,E,3,[[["self"]],[R[52]]]],[11,"next",E,E,4,[[["self"]],[R[52]]]],[11,R[79],E,E,0,[[],["self"]]],[11,"fmt",E,E,1,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,2,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,3,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,4,[[["self"],[R[29]]],[R[12]]]],[11,"index",E,E,0,[[["self"],[R[9]]],[T]]],[11,R[55],E,E,0,[[["self"],[R[9]]],[T]]]],"p":[[3,"Slab"],[3,R[72]],[3,"Iter"],[3,R[262]],[3,"Drain"]]};
searchIndex["strsim"]={"doc":"This library implements string similarity metrics.","i":[[4,R[268],"strsim",E,N,N],[13,"DifferentLengthArgs",E,E,0,N],[5,"hamming",E,"Calculates the number of positions in the two strings…",N,[[["str"]],["hammingresult"]]],[5,"jaro",E,"Calculates the Jaro similarity between two strings. The…",N,[[["str"]],["f64"]]],[5,"jaro_winkler",E,"Like Jaro but gives a boost to strings that have a common…",N,[[["str"]],["f64"]]],[5,"levenshtein",E,"Calculates the minimum number of insertions, deletions,…",N,[[["str"]],[R[9]]]],[5,"osa_distance",E,"Like Levenshtein but allows for adjacent transpositions.…",N,[[["str"]],[R[9]]]],[5,"damerau_levenshtein",E,"Like optimal string alignment, but substrings can be…",N,[[["str"]],[R[9]]]],[6,"HammingResult",E,E,N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"eq",E,E,0,[[["strsimerror"],["self"]],["bool"]]],[11,"fmt",E,E,0,[[[R[29]],["self"]],[R[12]]]]],"p":[[4,R[268]]]};
searchIndex["syn"]={"doc":"Syn is a parsing library for parsing a stream of Rust…","i":[[3,"Ident","syn",R[3276],N,N],[3,"Attribute",E,"An attribute like `#[repr(transparent)]`.",N,N],[12,"pound_token",E,E,0,N],[12,"style",E,E,0,N],[12,R[2937],E,E,0,N],[12,"path",E,E,0,N],[12,"tts",E,E,0,N],[3,"MetaList",E,R[2943],N,N],[12,"ident",E,E,1,N],[12,R[2936],E,E,1,N],[12,"nested",E,E,1,N],[3,R[3232],E,R[2944],N,N],[12,"ident",E,E,2,N],[12,"eq_token",E,E,2,N],[12,"lit",E,E,2,N],[3,"Field",E,"A field of a struct or enum variant.",N,N],[12,"attrs",E,"Attributes tagged on the field.",3,N],[12,"vis",E,"Visibility of the field.",3,N],[12,"ident",E,"Name of the field, if any.",3,N],[12,R[2938],E,E,3,N],[12,"ty",E,"Type of the field.",3,N],[3,R[3233],E,R[2945],N,N],[12,R[2940],E,E,4,N],[12,"named",E,E,4,N],[3,R[3234],E,R[2946],N,N],[12,R[2936],E,E,5,N],[12,"unnamed",E,E,5,N],[3,"Variant",E,"An enum variant.",N,N],[12,"attrs",E,"Attributes tagged on the variant.",6,N],[12,"ident",E,"Name of the variant.",6,N],[12,"fields",E,"Content stored in the variant.",6,N],[12,R[4360],E,"Explicit discriminant: `Variant = 1`",6,N],[3,"VisCrate",E,R[2948],N,N],[12,"crate_token",E,E,7,N],[3,"VisPublic",E,R[2947],N,N],[12,"pub_token",E,E,8,N],[3,R[3235],E,R[2949],N,N],[12,"pub_token",E,E,9,N],[12,R[2936],E,E,9,N],[12,"in_token",E,E,9,N],[12,"path",E,E,9,N],[3,"ExprArray",E,R[2952],N,N],[3,"ExprAssign",E,R[2970],N,N],[3,R[3267],E,R[2971],N,N],[3,"ExprAsync",E,R[2986],N,N],[3,"ExprBinary",E,R[2956],N,N],[12,"attrs",E,E,10,N],[12,"left",E,E,10,N],[12,"op",E,E,10,N],[12,"right",E,E,10,N],[3,"ExprBlock",E,R[2969],N,N],[3,"ExprBox",E,R[2950],N,N],[3,"ExprBreak",E,R[2977],N,N],[3,"ExprCall",E,R[2953],N,N],[12,"attrs",E,E,11,N],[12,"func",E,E,11,N],[12,R[2936],E,E,11,N],[12,"args",E,E,11,N],[3,"ExprCast",E,R[2959],N,N],[12,"attrs",E,E,12,N],[12,"expr",E,E,12,N],[12,"as_token",E,E,12,N],[12,"ty",E,E,12,N],[3,R[3268],E,R[2967],N,N],[3,R[3269],E,R[2978],N,N],[3,"ExprField",E,R[2972],N,N],[12,"attrs",E,E,13,N],[12,"base",E,E,13,N],[12,"dot_token",E,E,13,N],[12,"member",E,E,13,N],[3,R[3270],E,R[2964],N,N],[3,"ExprGroup",E,R[2984],N,N],[3,"ExprIf",E,R[2962],N,N],[3,R[3271],E,R[2951],N,N],[3,"ExprIndex",E,R[2973],N,N],[12,"attrs",E,E,14,N],[12,"expr",E,E,14,N],[12,R[2937],E,E,14,N],[12,"index",E,E,14,N],[3,"ExprLet",E,R[2961],N,N],[3,"ExprLit",E,R[2958],N,N],[12,"attrs",E,E,15,N],[12,"lit",E,E,15,N],[3,"ExprLoop",E,R[2965],N,N],[3,"ExprMacro",E,R[2980],N,N],[3,"ExprMatch",E,R[2966],N,N],[3,R[3272],E,R[2954],N,N],[3,"ExprParen",E,R[2983],N,N],[12,"attrs",E,E,16,N],[12,R[2936],E,E,16,N],[12,"expr",E,E,16,N],[3,"ExprPath",E,R[2975],N,N],[12,"attrs",E,E,17,N],[12,"qself",E,E,17,N],[12,"path",E,E,17,N],[3,"ExprRange",E,R[2974],N,N],[3,R[3273],E,R[2976],N,N],[3,"ExprRepeat",E,R[2982],N,N],[3,"ExprReturn",E,R[2979],N,N],[3,"ExprStruct",E,R[2981],N,N],[3,"ExprTry",E,R[2985],N,N],[3,R[3274],E,R[2987],N,N],[3,"ExprTuple",E,R[2955],N,N],[3,"ExprType",E,R[2960],N,N],[3,"ExprUnary",E,R[2957],N,N],[12,"attrs",E,E,18,N],[12,"op",E,E,18,N],[12,"expr",E,E,18,N],[3,"ExprUnsafe",E,R[2968],N,N],[3,R[3236],E,R[2989],N,N],[12,"tts",E,E,19,N],[3,"ExprWhile",E,R[2963],N,N],[3,"ExprYield",E,R[2988],N,N],[3,"Index",E,"The index of an unnamed tuple struct field.",N,N],[12,"index",E,E,20,N],[12,"span",E,E,20,N],[3,R[3237],E,"A set of bound lifetimes: `for<'a, 'b, 'c>`.",N,N],[12,"for_token",E,E,21,N],[12,"lt_token",E,E,21,N],[12,R[2941],E,E,21,N],[12,"gt_token",E,E,21,N],[3,"ConstParam",E,R[2992],N,N],[12,"attrs",E,E,22,N],[12,R[2942],E,E,22,N],[12,"ident",E,E,22,N],[12,R[2938],E,E,22,N],[12,"ty",E,E,22,N],[12,"eq_token",E,E,22,N],[12,R[79],E,E,22,N],[3,"Generics",E,"Lifetimes and type parameters attached to a declaration of…",N,N],[12,"lt_token",E,E,23,N],[12,"params",E,E,23,N],[12,"gt_token",E,E,23,N],[12,"where_clause",E,E,23,N],[3,R[3238],E,R[2991],N,N],[12,"attrs",E,E,24,N],[12,R[3075],E,E,24,N],[12,R[2938],E,E,24,N],[12,"bounds",E,E,24,N],[3,R[3239],E,R[2995],N,N],[12,"lhs_ty",E,E,25,N],[12,"eq_token",E,E,25,N],[12,"rhs_ty",E,E,25,N],[3,R[3240],E,R[2994],N,N],[12,R[3075],E,E,26,N],[12,R[2938],E,E,26,N],[12,"bounds",E,E,26,N],[3,R[3241],E,R[2993],N,N],[12,R[2941],E,"Any lifetimes from a `for` binding",27,N],[12,"bounded_ty",E,"The type being bounded",27,N],[12,R[2938],E,E,27,N],[12,"bounds",E,"Trait and lifetime bounds (`Clone+Send+'static`)",27,N],[3,"TraitBound",E,"A trait used as a bound on a type parameter.",N,N],[12,R[2936],E,E,28,N],[12,"modifier",E,E,28,N],[12,R[2941],E,"The `for<'a>` in `for<'a> Foo<&'a T>`",28,N],[12,"path",E,"The `Foo<&'a T>` in `for<'a> Foo<&'a T>`",28,N],[3,"TypeParam",E,R[2990],N,N],[12,"attrs",E,E,29,N],[12,"ident",E,E,29,N],[12,R[2938],E,E,29,N],[12,"bounds",E,E,29,N],[12,"eq_token",E,E,29,N],[12,R[79],E,E,29,N],[3,R[3242],E,"A `where` clause in a definition: `where T:…",N,N],[12,"where_token",E,E,30,N],[12,"predicates",E,E,30,N],[3,R[3275],E,R[2939],N,N],[3,"Turbofish",E,"Returned by `TypeGenerics::as_turbofish`.",N,N],[3,R[3263],E,R[2939],N,N],[3,"Lifetime",E,"A Rust lifetime: `'a`.",N,N],[12,"apostrophe",E,E,31,N],[12,"ident",E,E,31,N],[3,"LitBool",E,R[3002],N,N],[12,"value",E,E,32,N],[12,"span",E,E,32,N],[3,"LitByte",E,R[2998],N,N],[3,"LitByteStr",E,R[2997],N,N],[3,"LitChar",E,R[2999],N,N],[3,"LitFloat",E,R[3001],N,N],[3,"LitInt",E,R[3000],N,N],[3,"LitStr",E,R[2996],N,N],[3,R[3243],E,R[3003],N,N],[12,"token",E,E,33,N],[3,"Macro",E,"A macro invocation: `println!(\"{}\", mac)`.",N,N],[12,"path",E,E,34,N],[12,"bang_token",E,E,34,N],[12,R[791],E,E,34,N],[12,"tts",E,E,34,N],[3,"DataEnum",E,R[3005],N,N],[12,"enum_token",E,E,35,N],[12,R[2940],E,E,35,N],[12,"variants",E,E,35,N],[3,"DataStruct",E,R[3004],N,N],[12,"struct_token",E,E,36,N],[12,"fields",E,E,36,N],[12,"semi_token",E,E,36,N],[3,"DataUnion",E,R[3006],N,N],[12,"union_token",E,E,37,N],[12,"fields",E,E,37,N],[3,R[3244],E,"Data structure sent to a `proc_macro_derive` macro.",N,N],[12,"attrs",E,"Attributes tagged on the whole struct or enum.",38,N],[12,"vis",E,"Visibility of the struct or enum.",38,N],[12,"ident",E,"Name of the struct or enum.",38,N],[12,R[3215],E,"Generics required to complete the definition.",38,N],[12,"data",E,"Data within the struct or enum.",38,N],[3,"Abi",E,"The binary interface of a function: `extern \"C\"`.",N,N],[12,"extern_token",E,E,39,N],[12,"name",E,E,39,N],[3,"BareFnArg",E,"An argument in a function type: the `usize` in `fn(usize)…",N,N],[12,"name",E,E,40,N],[12,"ty",E,E,40,N],[3,"TypeArray",E,R[3008],N,N],[12,R[2937],E,E,41,N],[12,"elem",E,E,41,N],[12,"semi_token",E,E,41,N],[12,"len",E,E,41,N],[3,"TypeBareFn",E,R[3011],N,N],[12,R[2941],E,E,42,N],[12,"unsafety",E,E,42,N],[12,"abi",E,E,42,N],[12,"fn_token",E,E,42,N],[12,R[2936],E,E,42,N],[12,"inputs",E,E,42,N],[12,"variadic",E,E,42,N],[12,"output",E,E,42,N],[3,"TypeGroup",E,R[3018],N,N],[12,"group_token",E,E,43,N],[12,"elem",E,E,43,N],[3,R[3245],E,R[3016],N,N],[12,"impl_token",E,E,44,N],[12,"bounds",E,E,44,N],[3,"TypeInfer",E,R[3019],N,N],[12,"underscore_token",E,E,45,N],[3,"TypeMacro",E,R[3020],N,N],[12,"mac",E,E,46,N],[3,"TypeNever",E,R[3012],N,N],[12,"bang_token",E,E,47,N],[3,"TypeParen",E,R[3017],N,N],[12,R[2936],E,E,48,N],[12,"elem",E,E,48,N],[3,"TypePath",E,R[3014],N,N],[12,"qself",E,E,49,N],[12,"path",E,E,49,N],[3,"TypePtr",E,R[3009],N,N],[12,"star_token",E,E,50,N],[12,R[2942],E,E,50,N],[12,"mutability",E,E,50,N],[12,"elem",E,E,50,N],[3,R[3246],E,R[3010],N,N],[12,"and_token",E,E,51,N],[12,R[3075],E,E,51,N],[12,"mutability",E,E,51,N],[12,"elem",E,E,51,N],[3,"TypeSlice",E,R[3007],N,N],[12,R[2937],E,E,52,N],[12,"elem",E,E,52,N],[3,R[3247],E,R[3015],N,N],[12,"dyn_token",E,E,53,N],[12,"bounds",E,E,53,N],[3,"TypeTuple",E,R[3013],N,N],[12,R[2936],E,E,54,N],[12,"elems",E,E,54,N],[3,R[3248],E,R[3021],N,N],[12,"tts",E,E,55,N],[3,R[3249],E,"Angle bracketed arguments of a path segment: the `<K, V>`…",N,N],[12,"colon2_token",E,E,56,N],[12,"lt_token",E,E,56,N],[12,"args",E,E,56,N],[12,"gt_token",E,E,56,N],[3,"Binding",E,"A binding (equality constraint) on an associated type:…",N,N],[12,"ident",E,E,57,N],[12,"eq_token",E,E,57,N],[12,"ty",E,E,57,N],[3,R[3250],E,R[3022],N,N],[12,"ident",E,E,58,N],[12,R[2938],E,E,58,N],[12,"bounds",E,E,58,N],[3,R[3251],E,"Arguments of a function path segment: the `(A, B) -> C` in…",N,N],[12,R[2936],E,E,59,N],[12,"inputs",E,"`(A, B)`",59,N],[12,"output",E,"`C`",59,N],[3,"Path",E,"A path at which a named item is exported:…",N,N],[12,"leading_colon",E,E,60,N],[12,"segments",E,E,60,N],[3,R[3252],E,"A segment of a path together with any path arguments on…",N,N],[12,"ident",E,E,61,N],[12,R[400],E,E,61,N],[3,"QSelf",E,"The explicit Self type in a qualified path: the `T` in `<T…",N,N],[12,"lt_token",E,E,62,N],[12,"ty",E,E,62,N],[12,R[583],E,E,62,N],[12,"as_token",E,E,62,N],[12,"gt_token",E,E,62,N],[3,"Error",E,R[3145],N,N],[4,"AttrStyle",E,"Distinguishes between attributes that decorate an item and…",N,N],[13,"Outer",E,E,63,N],[13,"Inner",E,E,63,N],[4,"Meta",E,"Content of a compile-time structured attribute.",N,N],[13,"Word",E,E,64,N],[13,"List",E,R[2943],64,N],[13,"NameValue",E,R[2944],64,N],[4,"NestedMeta",E,"Element of a compile-time attribute list.",N,N],[13,"Meta",E,"A structured meta item, like the `Copy` in…",65,N],[13,R[602],E,"A Rust literal, like the `\"new_name\"` in…",65,N],[4,"Fields",E,"Data stored within an enum variant or struct.",N,N],[13,"Named",E,R[2945],66,N],[13,"Unnamed",E,R[2946],66,N],[13,"Unit",E,"Unit struct or unit variant such as `None`.",66,N],[4,"Visibility",E,"The visibility level of an item: inherited or `pub` or…",N,N],[13,"Public",E,R[2947],67,N],[13,"Crate",E,R[2948],67,N],[13,"Restricted",E,R[2949],67,N],[13,"Inherited",E,"An inherited visibility, which usually means private.",67,N],[4,"Expr",E,"A Rust expression.",N,N],[13,"Box",E,R[2950],68,N],[13,"InPlace",E,R[2951],68,N],[13,"Array",E,R[2952],68,N],[13,"Call",E,R[2953],68,N],[13,"MethodCall",E,R[2954],68,N],[13,"Tuple",E,R[2955],68,N],[13,"Binary",E,R[2956],68,N],[13,"Unary",E,R[2957],68,N],[13,"Lit",E,R[2958],68,N],[13,"Cast",E,R[2959],68,N],[13,"Type",E,R[2960],68,N],[13,"Let",E,R[2961],68,N],[13,"If",E,R[2962],68,N],[13,"While",E,R[2963],68,N],[13,"ForLoop",E,R[2964],68,N],[13,"Loop",E,R[2965],68,N],[13,"Match",E,R[2966],68,N],[13,"Closure",E,R[2967],68,N],[13,"Unsafe",E,R[2968],68,N],[13,"Block",E,R[2969],68,N],[13,"Assign",E,R[2970],68,N],[13,"AssignOp",E,R[2971],68,N],[13,"Field",E,R[2972],68,N],[13,"Index",E,R[2973],68,N],[13,"Range",E,R[2974],68,N],[13,"Path",E,R[2975],68,N],[13,"Reference",E,R[2976],68,N],[13,"Break",E,R[2977],68,N],[13,"Continue",E,R[2978],68,N],[13,"Return",E,R[2979],68,N],[13,"Macro",E,R[2980],68,N],[13,"Struct",E,R[2981],68,N],[13,"Repeat",E,R[2982],68,N],[13,"Paren",E,R[2983],68,N],[13,"Group",E,R[2984],68,N],[13,"Try",E,R[2985],68,N],[13,"Async",E,R[2986],68,N],[13,"TryBlock",E,R[2987],68,N],[13,"Yield",E,R[2988],68,N],[13,"Verbatim",E,R[2989],68,N],[4,"Member",E,"A struct or tuple struct field accessed in a struct…",N,N],[13,"Named",E,"A named field like `self.x`.",69,N],[13,"Unnamed",E,"An unnamed field like `self.0`.",69,N],[4,R[3253],E,"A generic type parameter, lifetime, or const generic: `T:…",N,N],[13,"Type",E,R[2990],70,N],[13,"Lifetime",E,R[2991],70,N],[13,"Const",E,R[2992],70,N],[4,R[3254],E,"A modifier on a trait bound, currently only used for the…",N,N],[13,"None",E,E,71,N],[13,"Maybe",E,E,71,N],[4,R[3255],E,"A trait or lifetime used as a bound on a type parameter.",N,N],[13,"Trait",E,E,72,N],[13,"Lifetime",E,E,72,N],[4,R[3256],E,"A single predicate in a `where` clause: `T:…",N,N],[13,"Type",E,R[2993],73,N],[13,"Lifetime",E,R[2994],73,N],[13,"Eq",E,R[2995],73,N],[4,R[3257],E,"The suffix on a floating point literal if any, like the…",N,N],[13,"F32",E,E,74,N],[13,"F64",E,E,74,N],[13,"None",E,E,74,N],[4,"IntSuffix",E,"The suffix on an integer literal if any, like the `u8` in…",N,N],[13,"I8",E,E,75,N],[13,"I16",E,E,75,N],[13,"I32",E,E,75,N],[13,"I64",E,E,75,N],[13,"I128",E,E,75,N],[13,"Isize",E,E,75,N],[13,"U8",E,E,75,N],[13,"U16",E,E,75,N],[13,"U32",E,E,75,N],[13,"U64",E,E,75,N],[13,"U128",E,E,75,N],[13,"Usize",E,E,75,N],[13,"None",E,E,75,N],[4,"Lit",E,"A Rust literal such as a string or integer or boolean.",N,N],[13,"Str",E,R[2996],76,N],[13,"ByteStr",E,R[2997],76,N],[13,"Byte",E,R[2998],76,N],[13,"Char",E,R[2999],76,N],[13,"Int",E,R[3000],76,N],[13,"Float",E,R[3001],76,N],[13,"Bool",E,R[3002],76,N],[13,"Verbatim",E,R[3003],76,N],[4,"StrStyle",E,"The style of a string literal, either plain quoted or a…",N,N],[13,"Cooked",E,"An ordinary string like `\"data\"`.",77,N],[13,"Raw",E,"A raw string like `r##\"data\"##`.",77,N],[4,R[3258],E,"A grouping token that surrounds a macro body: `m!(...)` or…",N,N],[13,"Paren",E,E,78,N],[13,"Brace",E,E,78,N],[13,"Bracket",E,E,78,N],[4,"Data",E,"The storage of a struct, enum or union data structure.",N,N],[13,"Struct",E,R[3004],79,N],[13,"Enum",E,R[3005],79,N],[13,"Union",E,R[3006],79,N],[4,"BinOp",E,"A binary operator: `+`, `+=`, `&`.",N,N],[13,"Add",E,"The `+` operator (addition)",80,N],[13,"Sub",E,"The `-` operator (subtraction)",80,N],[13,"Mul",E,"The `*` operator (multiplication)",80,N],[13,"Div",E,"The `/` operator (division)",80,N],[13,"Rem",E,"The `%` operator (modulus)",80,N],[13,"And",E,"The `&&` operator (logical and)",80,N],[13,"Or",E,"The `||` operator (logical or)",80,N],[13,"BitXor",E,"The `^` operator (bitwise xor)",80,N],[13,"BitAnd",E,"The `&` operator (bitwise and)",80,N],[13,"BitOr",E,"The `|` operator (bitwise or)",80,N],[13,"Shl",E,"The `<<` operator (shift left)",80,N],[13,"Shr",E,"The `>>` operator (shift right)",80,N],[13,"Eq",E,"The `==` operator (equality)",80,N],[13,"Lt",E,"The `<` operator (less than)",80,N],[13,"Le",E,"The `<=` operator (less than or equal to)",80,N],[13,"Ne",E,"The `!=` operator (not equal to)",80,N],[13,"Ge",E,"The `>=` operator (greater than or equal to)",80,N],[13,"Gt",E,"The `>` operator (greater than)",80,N],[13,"AddEq",E,"The `+=` operator",80,N],[13,"SubEq",E,"The `-=` operator",80,N],[13,"MulEq",E,"The `*=` operator",80,N],[13,"DivEq",E,"The `/=` operator",80,N],[13,"RemEq",E,"The `%=` operator",80,N],[13,"BitXorEq",E,"The `^=` operator",80,N],[13,"BitAndEq",E,"The `&=` operator",80,N],[13,"BitOrEq",E,"The `|=` operator",80,N],[13,"ShlEq",E,"The `<<=` operator",80,N],[13,"ShrEq",E,"The `>>=` operator",80,N],[4,"UnOp",E,"A unary operator: `*`, `!`, `-`.",N,N],[13,"Deref",E,"The `*` operator for dereferencing",81,N],[13,"Not",E,"The `!` operator for logical inversion",81,N],[13,"Neg",E,"The `-` operator for negation",81,N],[4,R[3259],E,"Name of an argument in a function type: the `n` in `fn(n:…",N,N],[13,"Named",E,"Argument given a name.",82,N],[13,"Wild",E,"Argument not given a name, matched with `_`.",82,N],[4,"ReturnType",E,"Return type of a function signature.",N,N],[13,"Default",E,"Return type is not specified.",83,N],[13,"Type",E,"A particular type is returned.",83,N],[4,"Type",E,"The possible types that a Rust value could have.",N,N],[13,"Slice",E,R[3007],84,N],[13,"Array",E,R[3008],84,N],[13,"Ptr",E,R[3009],84,N],[13,"Reference",E,R[3010],84,N],[13,"BareFn",E,R[3011],84,N],[13,"Never",E,R[3012],84,N],[13,"Tuple",E,R[3013],84,N],[13,"Path",E,R[3014],84,N],[13,"TraitObject",E,R[3015],84,N],[13,"ImplTrait",E,R[3016],84,N],[13,"Paren",E,R[3017],84,N],[13,"Group",E,R[3018],84,N],[13,"Infer",E,R[3019],84,N],[13,"Macro",E,R[3020],84,N],[13,"Verbatim",E,R[3021],84,N],[4,R[3260],E,"An individual generic argument, like `'a`, `T`, or `Item =…",N,N],[13,"Lifetime",E,"A lifetime argument.",85,N],[13,"Type",E,"A type argument.",85,N],[13,"Binding",E,"A binding (equality constraint) on an associated type: the…",85,N],[13,R[3250],E,R[3022],85,N],[13,"Const",E,"A const expression. Must be inside of a block.",85,N],[4,R[3261],E,"Angle bracketed or parenthesized arguments of a path…",N,N],[13,"None",E,E,86,N],[13,"AngleBracketed",E,"The `<'a, T>` in `std::slice::iter<'a, T>`.",86,N],[13,"Parenthesized",E,"The `(A, B) -> C` in `Fn(A, B) -> C`.",86,N],[5,"parse",E,R[3147],N,[[[R[790]]],[["parse"],[R[12]]]]],[5,"parse2",E,R[3146],N,[[[R[790]]],[["parse"],[R[12]]]]],[5,"parse_str",E,R[3148],N,[[["str"]],[["parse"],[R[12]]]]],[0,"token",E,"Tokens representing Rust punctuation, keywords, and…",N,N],[3,"Underscore",R[3156],"`_`",N,N],[12,"spans",E,E,87,N],[3,"Abstract",E,"`abstract`",N,N],[12,"span",E,E,88,N],[3,"As",E,"`as`",N,N],[12,"span",E,E,89,N],[3,"Async",E,"`async`",N,N],[12,"span",E,E,90,N],[3,"Auto",E,"`auto`",N,N],[12,"span",E,E,91,N],[3,"Become",E,"`become`",N,N],[12,"span",E,E,92,N],[3,"Box",E,"`box`",N,N],[12,"span",E,E,93,N],[3,"Break",E,"`break`",N,N],[12,"span",E,E,94,N],[3,"Const",E,"`const`",N,N],[12,"span",E,E,95,N],[3,"Continue",E,"`continue`",N,N],[12,"span",E,E,96,N],[3,"Crate",E,"`crate`",N,N],[12,"span",E,E,97,N],[3,"Default",E,"`default`",N,N],[12,"span",E,E,98,N],[3,"Do",E,"`do`",N,N],[12,"span",E,E,99,N],[3,"Dyn",E,"`dyn`",N,N],[12,"span",E,E,100,N],[3,"Else",E,"`else`",N,N],[12,"span",E,E,101,N],[3,"Enum",E,"`enum`",N,N],[12,"span",E,E,102,N],[3,R[3262],E,"`existential`",N,N],[12,"span",E,E,103,N],[3,"Extern",E,"`extern`",N,N],[12,"span",E,E,104,N],[3,"Final",E,"`final`",N,N],[12,"span",E,E,105,N],[3,"Fn",E,"`fn`",N,N],[12,"span",E,E,106,N],[3,"For",E,"`for`",N,N],[12,"span",E,E,107,N],[3,"If",E,"`if`",N,N],[12,"span",E,E,108,N],[3,"Impl",E,"`impl`",N,N],[12,"span",E,E,109,N],[3,"In",E,"`in`",N,N],[12,"span",E,E,110,N],[3,"Let",E,"`let`",N,N],[12,"span",E,E,111,N],[3,"Loop",E,"`loop`",N,N],[12,"span",E,E,112,N],[3,"Macro",E,"`macro`",N,N],[12,"span",E,E,113,N],[3,"Match",E,"`match`",N,N],[12,"span",E,E,114,N],[3,"Mod",E,"`mod`",N,N],[12,"span",E,E,115,N],[3,"Move",E,"`move`",N,N],[12,"span",E,E,116,N],[3,"Mut",E,"`mut`",N,N],[12,"span",E,E,117,N],[3,"Override",E,"`override`",N,N],[12,"span",E,E,118,N],[3,"Priv",E,"`priv`",N,N],[12,"span",E,E,119,N],[3,"Pub",E,"`pub`",N,N],[12,"span",E,E,120,N],[3,"Ref",E,"`ref`",N,N],[12,"span",E,E,121,N],[3,"Return",E,"`return`",N,N],[12,"span",E,E,122,N],[3,"SelfType",E,"`Self`",N,N],[12,"span",E,E,123,N],[3,"SelfValue",E,"`self`",N,N],[12,"span",E,E,124,N],[3,"Static",E,"`static`",N,N],[12,"span",E,E,125,N],[3,"Struct",E,"`struct`",N,N],[12,"span",E,E,126,N],[3,"Super",E,"`super`",N,N],[12,"span",E,E,127,N],[3,"Trait",E,"`trait`",N,N],[12,"span",E,E,128,N],[3,"Try",E,"`try`",N,N],[12,"span",E,E,129,N],[3,"Type",E,"`type`",N,N],[12,"span",E,E,130,N],[3,"Typeof",E,"`typeof`",N,N],[12,"span",E,E,131,N],[3,"Union",E,"`union`",N,N],[12,"span",E,E,132,N],[3,"Unsafe",E,"`unsafe`",N,N],[12,"span",E,E,133,N],[3,"Unsized",E,"`unsized`",N,N],[12,"span",E,E,134,N],[3,"Use",E,"`use`",N,N],[12,"span",E,E,135,N],[3,"Virtual",E,"`virtual`",N,N],[12,"span",E,E,136,N],[3,"Where",E,"`where`",N,N],[12,"span",E,E,137,N],[3,"While",E,"`while`",N,N],[12,"span",E,E,138,N],[3,"Yield",E,"`yield`",N,N],[12,"span",E,E,139,N],[3,"Add",E,"`+`",N,N],[12,"spans",E,E,140,N],[3,"AddEq",E,"`+=`",N,N],[12,"spans",E,E,141,N],[3,"And",E,"`&`",N,N],[12,"spans",E,E,142,N],[3,"AndAnd",E,"`&&`",N,N],[12,"spans",E,E,143,N],[3,"AndEq",E,"`&=`",N,N],[12,"spans",E,E,144,N],[3,"At",E,"`@`",N,N],[12,"spans",E,E,145,N],[3,"Bang",E,"`!`",N,N],[12,"spans",E,E,146,N],[3,"Caret",E,"`^`",N,N],[12,"spans",E,E,147,N],[3,"CaretEq",E,"`^=`",N,N],[12,"spans",E,E,148,N],[3,"Colon",E,"`:`",N,N],[12,"spans",E,E,149,N],[3,"Colon2",E,"`::`",N,N],[12,"spans",E,E,150,N],[3,"Comma",E,"`,`",N,N],[12,"spans",E,E,151,N],[3,"Div",E,"`/`",N,N],[12,"spans",E,E,152,N],[3,"DivEq",E,"`/=`",N,N],[12,"spans",E,E,153,N],[3,"Dollar",E,"`$`",N,N],[12,"spans",E,E,154,N],[3,"Dot",E,"`.`",N,N],[12,"spans",E,E,155,N],[3,"Dot2",E,"`..`",N,N],[12,"spans",E,E,156,N],[3,"Dot3",E,"`...`",N,N],[12,"spans",E,E,157,N],[3,"DotDotEq",E,"`..=`",N,N],[12,"spans",E,E,158,N],[3,"Eq",E,"`=`",N,N],[12,"spans",E,E,159,N],[3,"EqEq",E,"`==`",N,N],[12,"spans",E,E,160,N],[3,"Ge",E,"`>=`",N,N],[12,"spans",E,E,161,N],[3,"Gt",E,"`>`",N,N],[12,"spans",E,E,162,N],[3,"Le",E,"`<=`",N,N],[12,"spans",E,E,163,N],[3,"Lt",E,"`<`",N,N],[12,"spans",E,E,164,N],[3,"MulEq",E,"`*=`",N,N],[12,"spans",E,E,165,N],[3,"Ne",E,"`!=`",N,N],[12,"spans",E,E,166,N],[3,"Or",E,"`|`",N,N],[12,"spans",E,E,167,N],[3,"OrEq",E,"`|=`",N,N],[12,"spans",E,E,168,N],[3,"OrOr",E,"`||`",N,N],[12,"spans",E,E,169,N],[3,"Pound",E,"`#`",N,N],[12,"spans",E,E,170,N],[3,"Question",E,"`?`",N,N],[12,"spans",E,E,171,N],[3,"RArrow",E,"`->`",N,N],[12,"spans",E,E,172,N],[3,"LArrow",E,"`<-`",N,N],[12,"spans",E,E,173,N],[3,"Rem",E,"`%`",N,N],[12,"spans",E,E,174,N],[3,"RemEq",E,"`%=`",N,N],[12,"spans",E,E,175,N],[3,"FatArrow",E,"`=>`",N,N],[12,"spans",E,E,176,N],[3,"Semi",E,"`;`",N,N],[12,"spans",E,E,177,N],[3,"Shl",E,"`<<`",N,N],[12,"spans",E,E,178,N],[3,"ShlEq",E,"`<<=`",N,N],[12,"spans",E,E,179,N],[3,"Shr",E,"`>>`",N,N],[12,"spans",E,E,180,N],[3,"ShrEq",E,"`>>=`",N,N],[12,"spans",E,E,181,N],[3,"Star",E,"`*`",N,N],[12,"spans",E,E,182,N],[3,"Sub",E,"`-`",N,N],[12,"spans",E,E,183,N],[3,"SubEq",E,"`-=`",N,N],[12,"spans",E,E,184,N],[3,"Tilde",E,"`~`",N,N],[12,"spans",E,E,185,N],[3,"Brace",E,"`{...}`",N,N],[12,"span",E,E,186,N],[3,"Bracket",E,"`[...]`",N,N],[12,"span",E,E,187,N],[3,"Paren",E,"`(...)`",N,N],[12,"span",E,E,188,N],[3,"Group",E,"None-delimited group",N,N],[12,"span",E,E,189,N],[8,"Token",E,"Marker trait for types that represent single tokens.",N,N],[11,"surround",E,E,186,[[[R[790]],["self"],["f"]]]],[11,"surround",E,E,187,[[[R[790]],["self"],["f"]]]],[11,"surround",E,E,188,[[[R[790]],["self"],["f"]]]],[11,"surround",E,E,189,[[[R[790]],["self"],["f"]]]],[11,"parse_meta","syn","Parses the tokens after the path as a `Meta` if possible.",0,[[["self"]],[["meta"],[R[12],["meta"]]]]],[11,"parse_outer",E,"Parses zero or more outer attributes from the stream.",0,[[[R[3023]]],[["vec"],[R[12],["vec"]]]]],[11,"parse_inner",E,"Parses zero or more inner attributes from the stream.",0,[[[R[3023]]],[["vec"],[R[12],["vec"]]]]],[11,"name",E,"Returns the identifier that begins this structured meta…",64,[[["self"]],["ident"]]],[11,"parse_named",E,"Parses a named (braced struct) field.",3,[[[R[3023]]],[R[12]]]],[11,"parse_unnamed",E,"Parses an unnamed (tuple struct) field.",3,[[[R[3023]]],[R[12]]]],[11,"iter",E,"Get an iterator over the borrowed [`Field`] items in this…",66,[[["self"]],[["field"],["iter",["field"]]]]],[11,R[261],E,"Get an iterator over the mutably borrowed [`Field`] items…",66,[[["self"]],[["itermut",["field"]],["field"]]]],[11,"type_params",E,"Returns an Iterator<Item = &TypeParam> over the type…",23,[[["self"]],["typeparams"]]],[11,"type_params_mut",E,"Returns an Iterator<Item = &mut TypeParam> over the type…",23,[[["self"]],["typeparamsmut"]]],[11,R[2941],E,"Returns an Iterator<Item = &LifetimeDef> over the lifetime…",23,[[["self"]],[R[2941]]]],[11,"lifetimes_mut",E,"Returns an Iterator<Item = &mut LifetimeDef> over the…",23,[[["self"]],["lifetimesmut"]]],[11,"const_params",E,"Returns an Iterator<Item = &ConstParam> over the constant…",23,[[["self"]],["constparams"]]],[11,"const_params_mut",E,"Returns an Iterator<Item = &mut ConstParam> over the…",23,[[["self"]],["constparamsmut"]]],[11,"make_where_clause",E,"Initializes an empty `where`-clause if there is not one…",23,[[["self"]],[R[3031]]]],[11,"split_for_impl",E,"Split a type's generics into the pieces required for…",23,[[["self"]]]],[11,"as_turbofish",E,"Turn a type's generics like `<X, Y>` into a turbofish like…",190,[[["self"]],[R[3199]]]],[11,"new",E,E,24,[[[R[3075]]],["self"]]],[11,"new",E,"Panics",31,[[["str"],["span"]],["self"]]],[11,"new",E,"Interpret a Syn literal from a proc-macro2 literal.",76,[[[R[616]]],["self"]]],[11,"new",E,E,191,[[["str"],["span"]],["self"]]],[11,"value",E,E,191,[[["self"]],["string"]]],[11,"parse",E,"Parse a syntax tree node from the content of this string…",191,[[["self"]],[["parse"],[R[12]]]]],[11,"parse_with",E,"Invoke parser on the content of this string literal.",191,[[["parser"],["self"]],[R[12]]]],[11,"span",E,E,191,[[["self"]],["span"]]],[11,R[792],E,E,191,[[["self"],["span"]]]],[11,"new",E,E,192,[[["span"]],["self"]]],[11,"value",E,E,192,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"span",E,E,192,[[["self"]],["span"]]],[11,R[792],E,E,192,[[["self"],["span"]]]],[11,"new",E,E,193,[[["u8"],["span"]],["self"]]],[11,"value",E,E,193,[[["self"]],["u8"]]],[11,"span",E,E,193,[[["self"]],["span"]]],[11,R[792],E,E,193,[[["self"],["span"]]]],[11,"new",E,E,194,[[["char"],["span"]],["self"]]],[11,"value",E,E,194,[[["self"]],["char"]]],[11,"span",E,E,194,[[["self"]],["span"]]],[11,R[792],E,E,194,[[["self"],["span"]]]],[11,"new",E,E,195,[[[R[3201]],["u64"],["span"]],["self"]]],[11,"value",E,E,195,[[["self"]],["u64"]]],[11,"suffix",E,E,195,[[["self"]],[R[3201]]]],[11,"span",E,E,195,[[["self"]],["span"]]],[11,R[792],E,E,195,[[["self"],["span"]]]],[11,"new",E,E,196,[[["f64"],[R[3024]],["span"]],["self"]]],[11,"value",E,E,196,[[["self"]],["f64"]]],[11,"suffix",E,E,196,[[["self"]],[R[3024]]]],[11,"span",E,E,196,[[["self"]],["span"]]],[11,R[792],E,E,196,[[["self"],["span"]]]],[11,"span",E,E,33,[[["self"]],["span"]]],[11,R[792],E,E,33,[[["self"],["span"]]]],[11,R[3025],E,"In some positions, types may not contain the `+`…",84,[[[R[3023]]],[R[12]]]],[11,R[3025],E,E,83,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,83,[[[R[3023]],["bool"]],[R[12]]]],[11,R[3025],E,E,53,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,53,[[[R[3023]],["bool"]],[R[12]]]],[11,"parse_mod_style",E,"Parse a `Path` containing no path arguments on any of its…",60,[[[R[3023]]],[R[12]]]],[11,"is_ident",E,"Determines whether this is a path of length 1 equal to the…",60,[[["i"],["self"]],["bool"]]],[11,R[69],E,E,86,[[["self"]],["bool"]]],[0,"buffer",E,"A stably addressed token buffer supporting efficient…",N,N],[3,R[3264],R[3154],"A buffer that can be efficiently traversed multiple times,…",N,N],[3,"Cursor",E,"A cheaply copyable cursor into a `TokenBuffer`.",N,N],[11,"new",E,R[3026],197,[[[R[790]]],[R[3027]]]],[11,"new2",E,R[3026],197,[[[R[790]]],[R[3027]]]],[11,"begin",E,"Creates a cursor referencing the first token in the buffer…",197,[[["self"]],["cursor"]]],[11,"empty",E,"Creates a cursor referencing a static empty TokenStream.",198,[[],["self"]]],[11,"eof",E,"Checks whether the cursor is currently pointing at the end…",198,[[],["bool"]]],[11,"group",E,"If the cursor is pointing at a `Group` with the given…",198,[[[R[791]]],[R[52]]]],[11,"ident",E,"If the cursor is pointing at a `Ident`, returns it along…",198,[[],[R[52]]]],[11,"punct",E,"If the cursor is pointing at an `Punct`, returns it along…",198,[[],[R[52]]]],[11,R[616],E,"If the cursor is pointing at a `Literal`, return it along…",198,[[],[R[52]]]],[11,R[3075],E,"If the cursor is pointing at a `Lifetime`, returns it…",198,[[],[R[52]]]],[11,R[3277],E,"Copies all remaining tokens visible from this cursor into…",198,[[],[R[790]]]],[11,"token_tree",E,"If the cursor is pointing at a `TokenTree`, returns it…",198,[[],[R[52]]]],[11,"span",E,"Returns the `Span` of the current token, or…",198,[[],["span"]]],[0,"ext","syn","Extension traits to provide parsing methods on foreign…",N,N],[8,"IdentExt","syn::ext","Additional parsing methods for `Ident`.",N,N],[10,"parse_any",E,"Parses any identifier including keywords.",199,[[[R[3023]]],[R[12]]]],[0,R[3151],"syn","A punctuated sequence of syntax tree nodes separated by…",N,N],[3,R[3265],R[3155],"A punctuated sequence of syntax tree nodes of type `T`…",N,N],[3,"Pairs",E,"An iterator over borrowed pairs of type `Pair<&T, &P>`.",N,N],[3,"PairsMut",E,"An iterator over mutably borrowed pairs of type `Pair<&mut…",N,N],[3,"IntoPairs",E,"An iterator over owned pairs of type `Pair<T, P>`.",N,N],[3,R[60],E,"An iterator over owned values of type `T`.",N,N],[3,"Iter",E,"An iterator over borrowed values of type `&T`.",N,N],[3,R[262],E,"An iterator over mutably borrowed values of type `&mut T`.",N,N],[4,"Pair",E,"A single syntax tree node of type `T` followed by its…",N,N],[13,R[3265],E,E,200,N],[13,"End",E,E,200,N],[11,"new",E,"Creates an empty punctuated sequence.",201,[[],[R[3151]]]],[11,R[69],E,"Determines whether this punctuated sequence is empty,…",201,[[["self"]],["bool"]]],[11,"len",E,"Returns the number of syntax tree nodes in this punctuated…",201,[[["self"]],[R[9]]]],[11,"first",E,"Borrows the first punctuated pair in this sequence.",201,[[["self"]],[[R[52],["pair"]],["pair"]]]],[11,"last",E,"Borrows the last punctuated pair in this sequence.",201,[[["self"]],[[R[52],["pair"]],["pair"]]]],[11,"last_mut",E,"Mutably borrows the last punctuated pair in this sequence.",201,[[["self"]],[["pair"],[R[52],["pair"]]]]],[11,"iter",E,"Returns an iterator over borrowed syntax tree nodes of…",201,[[["self"]],["iter"]]],[11,R[261],E,"Returns an iterator over mutably borrowed syntax tree…",201,[[["self"]],["itermut"]]],[11,"pairs",E,R[3028],201,[[["self"]],["pairs"]]],[11,"pairs_mut",E,R[3028],201,[[["self"]],["pairsmut"]]],[11,"into_pairs",E,R[3028],201,[[],["intopairs"]]],[11,"push_value",E,R[3029],201,[[["self"],[T]]]],[11,"push_punct",E,"Appends a trailing punctuation onto the end of this…",201,[[["self"],["p"]]]],[11,"pop",E,"Removes the last punctuated pair from this sequence, or…",201,[[["self"]],[[R[52],["pair"]],["pair"]]]],[11,"trailing_punct",E,"Determines whether this punctuated sequence ends with a…",201,[[["self"]],["bool"]]],[11,"empty_or_trailing",E,"Returns true if either this `Punctuated` is empty, or it…",201,[[["self"]],["bool"]]],[11,"push",E,R[3029],201,[[["self"],[T]]]],[11,"insert",E,"Inserts an element at position `index`.",201,[[["self"],[R[9]],[T]]]],[11,R[3149],E,R[3150],201,[[[R[3023]]],[R[12]]]],[11,"parse_terminated_with",E,"Parses zero or more occurrences of `T` using the given…",201,[[[R[3023]]],[R[12]]]],[11,"parse_separated_nonempty",E,"Parses one or more occurrences of `T` separated by…",201,[[[R[3023]]],[R[12]]]],[11,"parse_separated_nonempty_with",E,"Parses one or more occurrences of `T` using the given…",201,[[[R[3023]]],[R[12]]]],[11,"into_value",E,"Extracts the syntax tree node from this punctuated pair,…",200,[[],[T]]],[11,"value",E,"Borrows the syntax tree node from this punctuated pair.",200,[[["self"]],[T]]],[11,"value_mut",E,"Mutably borrows the syntax tree node from this punctuated…",200,[[["self"]],[T]]],[11,"punct",E,"Borrows the punctuation from this punctuated pair, unless…",200,[[["self"]],[[R[52]],["p"]]]],[11,"new",E,"Creates a punctuated pair out of a syntax tree node and an…",200,[[[R[52]],[T]],["self"]]],[11,"into_tuple",E,"Produces this punctuated pair as a tuple of syntax tree…",200,[[]]],[0,"spanned","syn",R[3030],N,N],[8,"Spanned","syn::spanned",R[3030],N,N],[10,"span",E,"Returns a `Span` covering the complete contents of this…",202,[[["self"]],["span"]]],[0,"visit","syn",R[3032],N,N],[5,"visit_abi","syn::visit",E,N,[[["v"],["abi"]]]],[5,R[3033],E,E,N,[[["v"],[R[3034]]]]],[5,R[3035],E,E,N,[[["v"],[R[3157]]]]],[5,R[3036],E,E,N,[[[R[3217]],["v"]]]],[5,R[3037],E,E,N,[[["v"],[R[3190]]]]],[5,R[3038],E,E,N,[[["v"],[R[3039]]]]],[5,R[3040],E,E,N,[[["v"],["binop"]]]],[5,R[3041],E,E,N,[[["v"],["binding"]]]],[5,R[3042],E,E,N,[[["v"],[R[3043]]]]],[5,R[3044],E,E,N,[[["v"],[R[3175]]]]],[5,R[3045],E,E,N,[[["v"],[R[3192]]]]],[5,R[3218],E,E,N,[[["v"],["data"]]]],[5,R[3046],E,E,N,[[[R[3219]],["v"]]]],[5,R[3047],E,E,N,[[[R[3179]],["v"]]]],[5,R[3048],E,E,N,[[["v"],[R[3180]]]]],[5,R[3049],E,E,N,[[["v"],[R[3050]]]]],[5,R[3220],E,E,N,[[["expr"],["v"]]]],[5,R[3051],E,E,N,[[["v"],[R[3163]]]]],[5,R[3052],E,E,N,[[["v"],[R[3221]]]]],[5,R[3053],E,E,N,[[["v"],[R[3222]]]]],[5,R[3054],E,E,N,[[["v"],[R[3168]]]]],[5,R[3055],E,E,N,[[["v"],[R[3169]]]]],[5,R[3056],E,E,N,[[["v"],["exprlit"]]]],[5,R[3057],E,E,N,[[[R[3172]],["v"]]]],[5,R[3058],E,E,N,[[["v"],[R[3223]]]]],[5,R[3059],E,E,N,[[["v"],[R[3164]]]]],[5,R[3060],E,E,N,[[[R[3061]],["v"]]]],[5,R[3062],E,E,N,[[["v"],["field"]]]],[5,R[3063],E,E,N,[[["v"],["fields"]]]],[5,R[3064],E,E,N,[[[R[3065]],["v"]]]],[5,R[3066],E,E,N,[[["v"],[R[3067]]]]],[5,R[3068],E,E,N,[[["v"],[R[3069]]]]],[5,R[3070],E,E,N,[[["v"],[R[3071]]]]],[5,R[3072],E,E,N,[[["v"],[R[3215]]]]],[5,R[3073],E,E,N,[[["v"],["index"]]]],[5,R[3074],E,E,N,[[["v"],[R[3075]]]]],[5,R[3076],E,E,N,[[[R[3077]],["v"]]]],[5,"visit_lit",E,E,N,[[["v"],["lit"]]]],[5,R[3078],E,E,N,[[["v"],["litbool"]]]],[5,R[3079],E,E,N,[[["v"],["litbyte"]]]],[5,R[3080],E,E,N,[[["v"],[R[3200]]]]],[5,R[3081],E,E,N,[[["litchar"],["v"]]]],[5,R[3082],E,E,N,[[["v"],["litfloat"]]]],[5,R[3083],E,E,N,[[["v"],["litint"]]]],[5,R[3084],E,E,N,[[["v"],["litstr"]]]],[5,R[3085],E,E,N,[[["v"],[R[3086]]]]],[5,R[3087],E,E,N,[[["v"],["macro"]]]],[5,R[3088],E,E,N,[[["v"],[R[3089]]]]],[5,R[3090],E,E,N,[[["member"],["v"]]]],[5,R[3224],E,E,N,[[["meta"],["v"]]]],[5,R[3091],E,E,N,[[["v"],[R[3225]]]]],[5,R[3092],E,E,N,[[[R[3093]],["v"]]]],[5,R[3094],E,E,N,[[["v"],[R[3158]]]]],[5,R[3095],E,E,N,[[["v"],[R[3096]]]]],[5,R[3226],E,E,N,[[["v"],["path"]]]],[5,R[3097],E,E,N,[[[R[3098]],["v"]]]],[5,R[3099],E,E,N,[[["v"],[R[3100]]]]],[5,R[3101],E,E,N,[[["v"],[R[3102]]]]],[5,R[3103],E,E,N,[[[R[3104]],["v"]]]],[5,R[3105],E,E,N,[[["v"],[R[3106]]]]],[5,R[3107],E,E,N,[[["qself"],["v"]]]],[5,R[3108],E,E,N,[[["v"],[R[3191]]]]],[5,R[3109],E,E,N,[[["v"],[R[3178]]]]],[5,R[3110],E,E,N,[[["v"],[R[3111]]]]],[5,R[3227],E,E,N,[[["v"],["type"]]]],[5,R[3112],E,E,N,[[["v"],[R[3182]]]]],[5,R[3113],E,E,N,[[["v"],[R[3183]]]]],[5,R[3114],E,E,N,[[["v"],[R[3187]]]]],[5,R[3115],E,E,N,[[["v"],[R[3116]]]]],[5,R[3117],E,E,N,[[[R[3188]],["v"]]]],[5,R[3118],E,E,N,[[[R[3189]],["v"]]]],[5,R[3119],E,E,N,[[[R[3184]],["v"]]]],[5,R[3120],E,E,N,[[["v"],[R[3174]]]]],[5,R[3121],E,E,N,[[["v"],[R[3122]]]]],[5,R[3123],E,E,N,[[["v"],[R[3186]]]]],[5,R[3124],E,E,N,[[[R[3228]],["v"]]]],[5,R[3125],E,E,N,[[["v"],["typeptr"]]]],[5,R[3126],E,E,N,[[["v"],[R[3127]]]]],[5,R[3128],E,E,N,[[["v"],[R[3181]]]]],[5,R[3129],E,E,N,[[["v"],[R[3130]]]]],[5,R[3131],E,E,N,[[["v"],[R[3185]]]]],[5,R[3132],E,E,N,[[["v"],[R[3133]]]]],[5,R[3134],E,E,N,[[["v"],["unop"]]]],[5,R[3135],E,E,N,[[["v"],["variant"]]]],[5,R[3136],E,E,N,[[["v"],[R[3229]]]]],[5,R[3137],E,E,N,[[["v"],[R[3160]]]]],[5,R[3138],E,E,N,[[["v"],[R[3139]]]]],[5,R[3140],E,E,N,[[[R[3159]],["v"]]]],[5,R[3141],E,E,N,[[[R[3031]],["v"]]]],[5,R[3142],E,E,N,[[["v"],[R[3143]]]]],[5,R[3230],E,E,N,[[["v"],["span"]]]],[5,R[3144],E,E,N,[[["v"],["ident"]]]],[8,"Visit",E,R[3032],N,N],[11,"visit_abi",E,E,203,[[["self"],["abi"]]]],[11,R[3033],E,E,203,[[["self"],[R[3034]]]]],[11,R[3035],E,E,203,[[["self"],[R[3157]]]]],[11,R[3036],E,E,203,[[[R[3217]],["self"]]]],[11,R[3037],E,E,203,[[["self"],[R[3190]]]]],[11,R[3038],E,E,203,[[["self"],[R[3039]]]]],[11,R[3040],E,E,203,[[["self"],["binop"]]]],[11,R[3041],E,E,203,[[["self"],["binding"]]]],[11,R[3042],E,E,203,[[["self"],[R[3043]]]]],[11,R[3044],E,E,203,[[["self"],[R[3175]]]]],[11,R[3045],E,E,203,[[["self"],[R[3192]]]]],[11,R[3218],E,E,203,[[["self"],["data"]]]],[11,R[3046],E,E,203,[[[R[3219]],["self"]]]],[11,R[3047],E,E,203,[[[R[3179]],["self"]]]],[11,R[3048],E,E,203,[[["self"],[R[3180]]]]],[11,R[3049],E,E,203,[[["self"],[R[3050]]]]],[11,R[3220],E,E,203,[[["expr"],["self"]]]],[11,R[3051],E,E,203,[[["self"],[R[3163]]]]],[11,R[3052],E,E,203,[[["self"],[R[3221]]]]],[11,R[3053],E,E,203,[[["self"],[R[3222]]]]],[11,R[3054],E,E,203,[[["self"],[R[3168]]]]],[11,R[3055],E,E,203,[[["self"],[R[3169]]]]],[11,R[3056],E,E,203,[[["self"],["exprlit"]]]],[11,R[3057],E,E,203,[[[R[3172]],["self"]]]],[11,R[3058],E,E,203,[[["self"],[R[3223]]]]],[11,R[3059],E,E,203,[[["self"],[R[3164]]]]],[11,R[3060],E,E,203,[[[R[3061]],["self"]]]],[11,R[3062],E,E,203,[[["self"],["field"]]]],[11,R[3063],E,E,203,[[["self"],["fields"]]]],[11,R[3064],E,E,203,[[[R[3065]],["self"]]]],[11,R[3066],E,E,203,[[["self"],[R[3067]]]]],[11,R[3068],E,E,203,[[["self"],[R[3069]]]]],[11,R[3070],E,E,203,[[["self"],[R[3071]]]]],[11,R[3072],E,E,203,[[["self"],[R[3215]]]]],[11,R[3073],E,E,203,[[["self"],["index"]]]],[11,R[3074],E,E,203,[[["self"],[R[3075]]]]],[11,R[3076],E,E,203,[[[R[3077]],["self"]]]],[11,"visit_lit",E,E,203,[[["self"],["lit"]]]],[11,R[3078],E,E,203,[[["self"],["litbool"]]]],[11,R[3079],E,E,203,[[["self"],["litbyte"]]]],[11,R[3080],E,E,203,[[["self"],[R[3200]]]]],[11,R[3081],E,E,203,[[["litchar"],["self"]]]],[11,R[3082],E,E,203,[[["self"],["litfloat"]]]],[11,R[3083],E,E,203,[[["self"],["litint"]]]],[11,R[3084],E,E,203,[[["self"],["litstr"]]]],[11,R[3085],E,E,203,[[["self"],[R[3086]]]]],[11,R[3087],E,E,203,[[["self"],["macro"]]]],[11,R[3088],E,E,203,[[["self"],[R[3089]]]]],[11,R[3090],E,E,203,[[["member"],["self"]]]],[11,R[3224],E,E,203,[[["meta"],["self"]]]],[11,R[3091],E,E,203,[[["self"],[R[3225]]]]],[11,R[3092],E,E,203,[[[R[3093]],["self"]]]],[11,R[3094],E,E,203,[[["self"],[R[3158]]]]],[11,R[3095],E,E,203,[[["self"],[R[3096]]]]],[11,R[3226],E,E,203,[[["self"],["path"]]]],[11,R[3097],E,E,203,[[[R[3098]],["self"]]]],[11,R[3099],E,E,203,[[["self"],[R[3100]]]]],[11,R[3101],E,E,203,[[["self"],[R[3102]]]]],[11,R[3103],E,E,203,[[[R[3104]],["self"]]]],[11,R[3105],E,E,203,[[["self"],[R[3106]]]]],[11,R[3107],E,E,203,[[["qself"],["self"]]]],[11,R[3108],E,E,203,[[["self"],[R[3191]]]]],[11,R[3109],E,E,203,[[["self"],[R[3178]]]]],[11,R[3110],E,E,203,[[["self"],[R[3111]]]]],[11,R[3227],E,E,203,[[["self"],["type"]]]],[11,R[3112],E,E,203,[[["self"],[R[3182]]]]],[11,R[3113],E,E,203,[[["self"],[R[3183]]]]],[11,R[3114],E,E,203,[[["self"],[R[3187]]]]],[11,R[3115],E,E,203,[[["self"],[R[3116]]]]],[11,R[3117],E,E,203,[[[R[3188]],["self"]]]],[11,R[3118],E,E,203,[[[R[3189]],["self"]]]],[11,R[3119],E,E,203,[[[R[3184]],["self"]]]],[11,R[3120],E,E,203,[[["self"],[R[3174]]]]],[11,R[3121],E,E,203,[[["self"],[R[3122]]]]],[11,R[3123],E,E,203,[[["self"],[R[3186]]]]],[11,R[3124],E,E,203,[[[R[3228]],["self"]]]],[11,R[3125],E,E,203,[[["self"],["typeptr"]]]],[11,R[3126],E,E,203,[[["self"],[R[3127]]]]],[11,R[3128],E,E,203,[[["self"],[R[3181]]]]],[11,R[3129],E,E,203,[[["self"],[R[3130]]]]],[11,R[3131],E,E,203,[[["self"],[R[3185]]]]],[11,R[3132],E,E,203,[[["self"],[R[3133]]]]],[11,R[3134],E,E,203,[[["self"],["unop"]]]],[11,R[3135],E,E,203,[[["self"],["variant"]]]],[11,R[3136],E,E,203,[[["self"],[R[3229]]]]],[11,R[3137],E,E,203,[[["self"],[R[3160]]]]],[11,R[3138],E,E,203,[[["self"],[R[3139]]]]],[11,R[3140],E,E,203,[[[R[3159]],["self"]]]],[11,R[3141],E,E,203,[[[R[3031]],["self"]]]],[11,R[3142],E,E,203,[[["self"],[R[3143]]]]],[11,R[3230],E,E,203,[[["self"],["span"]]]],[11,R[3144],E,E,203,[[["self"],["ident"]]]],[0,"parse","syn","Parsing interface for parsing a token stream into a syntax…",N,N],[3,"Error",R[3202],R[3145],N,N],[3,"Lookahead1",E,"Support for checking the next token in a stream to decide…",N,N],[3,R[3266],E,"Cursor position within a buffered token stream.",N,N],[3,"StepCursor",E,"Cursor state associated with speculative parsing.",N,N],[6,"Result",E,R[3153],N,N],[6,"ParseStream",E,"Input to a Syn parser function.",N,N],[8,"Peek",E,"Types that can be parsed by looking at just one token.",N,N],[8,"Parse",E,"Parsing interface implemented by all types that can be…",N,N],[10,"parse",E,E,204,[[[R[3023]]],[R[12]]]],[8,"Parser",E,"Parser that can parse Rust tokens into a particular syntax…",N,N],[16,"Output",E,E,205,N],[10,"parse2",E,R[3146],205,[[[R[790]]],[R[12]]]],[11,"parse",E,R[3147],205,[[[R[790]]],[R[12]]]],[11,"parse_str",E,R[3148],205,[[["str"]],[R[12]]]],[11,"error",E,R[3152],206,[[["display"]],["error"]]],[11,"parse",E,"Parses a syntax tree node of type `T`, advancing the…",207,[[["self"]],[["parse"],[R[12]]]]],[11,"call",E,"Calls the given parser function to parse a syntax tree…",207,[[["self"]],[R[12]]]],[11,"peek",E,R[3231],207,[[["self"],["peek"]],["bool"]]],[11,"peek2",E,"Looks at the second-next token in the parse stream.",207,[[["self"],["peek"]],["bool"]]],[11,"peek3",E,"Looks at the third-next token in the parse stream.",207,[[["self"],["peek"]],["bool"]]],[11,R[3149],E,R[3150],207,[[["self"]],[[R[12],[R[3151]]],[R[3151]]]]],[11,R[69],E,"Returns whether there are tokens remaining in this stream.",207,[[["self"]],["bool"]]],[11,"lookahead1",E,"Constructs a helper for peeking at the next token in this…",207,[[["self"]],["lookahead1"]]],[11,"fork",E,"Forks a parse stream so that parsing tokens out of either…",207,[[["self"]],["self"]]],[11,"error",E,R[3152],207,[[["display"],["self"]],["error"]]],[11,"step",E,"Speculatively parses tokens from this parse stream,…",207,[[["self"],["f"]],[R[12]]]],[11,"cursor",E,"Provides low-level access to the token representation…",207,[[["self"]],["cursor"]]],[11,"new","syn","Usually the [`ParseStream::error`] method will be used…",208,[[["display"],["span"]],["self"]]],[11,"new_spanned",E,"Creates an error with the specified message spanning the…",208,[[["display"],["totokens"]],["self"]]],[11,"span",E,"The source location of the error.",208,[[["self"]],["span"]]],[11,"to_compile_error",E,"Render the error as an invocation of [`compile_error!`].",208,[[["self"]],[R[790]]]],[6,"AttributeArgs",E,"Conventional argument type associated with an invocation…",N,N],[6,"Result",E,R[3153],N,N],[14,"parenthesized",E,"Parse a set of parentheses and expose their content to…",N,N],[14,"braced",E,"Parse a set of curly braces and expose their content to…",N,N],[14,"bracketed",E,"Parse a set of square brackets and expose their content to…",N,N],[14,"Token",E,"A type-macro that expands to the name of the Rust type…",N,N],[14,"parse_quote",E,"Quasi-quotation macro that accepts input like the…",N,N],[14,"parse_macro_input",E,"Parse the input TokenStream of a macro, triggering a…",N,N],[14,"custom_keyword",E,"Define a type that supports parsing and printing a given…",N,N],[11,"peek",E,E,209,[[["cursor"]],["bool"]]],[11,"display",E,E,209,[[],["str"]]],[11,"span",E,E,209,[[["self"]],["span"]]],[11,"from",E,E,209,[[[T]],[T]]],[11,"into",E,E,209,[[],[U]]],[11,R[16],E,E,209,[[["self"]],[T]]],[11,R[17],E,E,209,[[[T],["self"]]]],[11,R[170],E,E,209,[[["self"]],["string"]]],[11,R[11],E,E,209,[[[U]],[R[12]]]],[11,R[39],E,E,209,[[["self"]],[T]]],[11,R[13],E,E,209,[[["self"]],[T]]],[11,R[14],E,E,209,[[],[R[12]]]],[11,R[18],E,E,209,[[["self"]],[R[40]]]],[11,"span",E,E,0,[[["self"]],["span"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[[T],["self"]]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"span",E,E,1,[[["self"]],["span"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,[[[T],["self"]]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"span",E,E,2,[[["self"]],["span"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[17],E,E,2,[[[T],["self"]]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"span",E,E,3,[[["self"]],["span"]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[17],E,E,3,[[[T],["self"]]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"span",E,E,4,[[["self"]],["span"]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[16],E,E,4,[[["self"]],[T]]],[11,R[17],E,E,4,[[[T],["self"]]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,"span",E,E,5,[[["self"]],["span"]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[16],E,E,5,[[["self"]],[T]]],[11,R[17],E,E,5,[[[T],["self"]]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,R[18],E,E,5,[[["self"]],[R[40]]]],[11,"span",E,E,6,[[["self"]],["span"]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[16],E,E,6,[[["self"]],[T]]],[11,R[17],E,E,6,[[[T],["self"]]]],[11,R[11],E,E,6,[[[U]],[R[12]]]],[11,R[39],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[],[R[12]]]],[11,R[18],E,E,6,[[["self"]],[R[40]]]],[11,"span",E,E,7,[[["self"]],["span"]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[16],E,E,7,[[["self"]],[T]]],[11,R[17],E,E,7,[[[T],["self"]]]],[11,R[11],E,E,7,[[[U]],[R[12]]]],[11,R[39],E,E,7,[[["self"]],[T]]],[11,R[13],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[],[R[12]]]],[11,R[18],E,E,7,[[["self"]],[R[40]]]],[11,"span",E,E,8,[[["self"]],["span"]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[16],E,E,8,[[["self"]],[T]]],[11,R[17],E,E,8,[[[T],["self"]]]],[11,R[11],E,E,8,[[[U]],[R[12]]]],[11,R[39],E,E,8,[[["self"]],[T]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[],[R[12]]]],[11,R[18],E,E,8,[[["self"]],[R[40]]]],[11,"span",E,E,9,[[["self"]],["span"]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[16],E,E,9,[[["self"]],[T]]],[11,R[17],E,E,9,[[[T],["self"]]]],[11,R[11],E,E,9,[[[U]],[R[12]]]],[11,R[39],E,E,9,[[["self"]],[T]]],[11,R[13],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[],[R[12]]]],[11,R[18],E,E,9,[[["self"]],[R[40]]]],[11,"from",E,E,210,[[[T]],[T]]],[11,"into",E,E,210,[[],[U]]],[11,R[16],E,E,210,[[["self"]],[T]]],[11,R[17],E,E,210,[[[T],["self"]]]],[11,R[11],E,E,210,[[[U]],[R[12]]]],[11,R[39],E,E,210,[[["self"]],[T]]],[11,R[13],E,E,210,[[["self"]],[T]]],[11,R[14],E,E,210,[[],[R[12]]]],[11,R[18],E,E,210,[[["self"]],[R[40]]]],[11,"from",E,E,211,[[[T]],[T]]],[11,"into",E,E,211,[[],[U]]],[11,R[16],E,E,211,[[["self"]],[T]]],[11,R[17],E,E,211,[[[T],["self"]]]],[11,R[11],E,E,211,[[[U]],[R[12]]]],[11,R[39],E,E,211,[[["self"]],[T]]],[11,R[13],E,E,211,[[["self"]],[T]]],[11,R[14],E,E,211,[[],[R[12]]]],[11,R[18],E,E,211,[[["self"]],[R[40]]]],[11,"from",E,E,212,[[[T]],[T]]],[11,"into",E,E,212,[[],[U]]],[11,R[16],E,E,212,[[["self"]],[T]]],[11,R[17],E,E,212,[[[T],["self"]]]],[11,R[11],E,E,212,[[[U]],[R[12]]]],[11,R[39],E,E,212,[[["self"]],[T]]],[11,R[13],E,E,212,[[["self"]],[T]]],[11,R[14],E,E,212,[[],[R[12]]]],[11,R[18],E,E,212,[[["self"]],[R[40]]]],[11,"from",E,E,213,[[[T]],[T]]],[11,"into",E,E,213,[[],[U]]],[11,R[16],E,E,213,[[["self"]],[T]]],[11,R[17],E,E,213,[[[T],["self"]]]],[11,R[11],E,E,213,[[[U]],[R[12]]]],[11,R[39],E,E,213,[[["self"]],[T]]],[11,R[13],E,E,213,[[["self"]],[T]]],[11,R[14],E,E,213,[[],[R[12]]]],[11,R[18],E,E,213,[[["self"]],[R[40]]]],[11,"span",E,E,10,[[["self"]],["span"]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[16],E,E,10,[[["self"]],[T]]],[11,R[17],E,E,10,[[[T],["self"]]]],[11,R[11],E,E,10,[[[U]],[R[12]]]],[11,R[39],E,E,10,[[["self"]],[T]]],[11,R[13],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[],[R[12]]]],[11,R[18],E,E,10,[[["self"]],[R[40]]]],[11,"from",E,E,214,[[[T]],[T]]],[11,"into",E,E,214,[[],[U]]],[11,R[16],E,E,214,[[["self"]],[T]]],[11,R[17],E,E,214,[[[T],["self"]]]],[11,R[11],E,E,214,[[[U]],[R[12]]]],[11,R[39],E,E,214,[[["self"]],[T]]],[11,R[13],E,E,214,[[["self"]],[T]]],[11,R[14],E,E,214,[[],[R[12]]]],[11,R[18],E,E,214,[[["self"]],[R[40]]]],[11,"from",E,E,215,[[[T]],[T]]],[11,"into",E,E,215,[[],[U]]],[11,R[16],E,E,215,[[["self"]],[T]]],[11,R[17],E,E,215,[[[T],["self"]]]],[11,R[11],E,E,215,[[[U]],[R[12]]]],[11,R[39],E,E,215,[[["self"]],[T]]],[11,R[13],E,E,215,[[["self"]],[T]]],[11,R[14],E,E,215,[[],[R[12]]]],[11,R[18],E,E,215,[[["self"]],[R[40]]]],[11,"from",E,E,216,[[[T]],[T]]],[11,"into",E,E,216,[[],[U]]],[11,R[16],E,E,216,[[["self"]],[T]]],[11,R[17],E,E,216,[[[T],["self"]]]],[11,R[11],E,E,216,[[[U]],[R[12]]]],[11,R[39],E,E,216,[[["self"]],[T]]],[11,R[13],E,E,216,[[["self"]],[T]]],[11,R[14],E,E,216,[[],[R[12]]]],[11,R[18],E,E,216,[[["self"]],[R[40]]]],[11,"span",E,E,11,[[["self"]],["span"]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[16],E,E,11,[[["self"]],[T]]],[11,R[17],E,E,11,[[[T],["self"]]]],[11,R[11],E,E,11,[[[U]],[R[12]]]],[11,R[39],E,E,11,[[["self"]],[T]]],[11,R[13],E,E,11,[[["self"]],[T]]],[11,R[14],E,E,11,[[],[R[12]]]],[11,R[18],E,E,11,[[["self"]],[R[40]]]],[11,"span",E,E,12,[[["self"]],["span"]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[16],E,E,12,[[["self"]],[T]]],[11,R[17],E,E,12,[[[T],["self"]]]],[11,R[11],E,E,12,[[[U]],[R[12]]]],[11,R[39],E,E,12,[[["self"]],[T]]],[11,R[13],E,E,12,[[["self"]],[T]]],[11,R[14],E,E,12,[[],[R[12]]]],[11,R[18],E,E,12,[[["self"]],[R[40]]]],[11,"from",E,E,217,[[[T]],[T]]],[11,"into",E,E,217,[[],[U]]],[11,R[16],E,E,217,[[["self"]],[T]]],[11,R[17],E,E,217,[[[T],["self"]]]],[11,R[11],E,E,217,[[[U]],[R[12]]]],[11,R[39],E,E,217,[[["self"]],[T]]],[11,R[13],E,E,217,[[["self"]],[T]]],[11,R[14],E,E,217,[[],[R[12]]]],[11,R[18],E,E,217,[[["self"]],[R[40]]]],[11,"from",E,E,218,[[[T]],[T]]],[11,"into",E,E,218,[[],[U]]],[11,R[16],E,E,218,[[["self"]],[T]]],[11,R[17],E,E,218,[[[T],["self"]]]],[11,R[11],E,E,218,[[[U]],[R[12]]]],[11,R[39],E,E,218,[[["self"]],[T]]],[11,R[13],E,E,218,[[["self"]],[T]]],[11,R[14],E,E,218,[[],[R[12]]]],[11,R[18],E,E,218,[[["self"]],[R[40]]]],[11,"span",E,E,13,[[["self"]],["span"]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[16],E,E,13,[[["self"]],[T]]],[11,R[17],E,E,13,[[[T],["self"]]]],[11,R[11],E,E,13,[[[U]],[R[12]]]],[11,R[39],E,E,13,[[["self"]],[T]]],[11,R[13],E,E,13,[[["self"]],[T]]],[11,R[14],E,E,13,[[],[R[12]]]],[11,R[18],E,E,13,[[["self"]],[R[40]]]],[11,"from",E,E,219,[[[T]],[T]]],[11,"into",E,E,219,[[],[U]]],[11,R[16],E,E,219,[[["self"]],[T]]],[11,R[17],E,E,219,[[[T],["self"]]]],[11,R[11],E,E,219,[[[U]],[R[12]]]],[11,R[39],E,E,219,[[["self"]],[T]]],[11,R[13],E,E,219,[[["self"]],[T]]],[11,R[14],E,E,219,[[],[R[12]]]],[11,R[18],E,E,219,[[["self"]],[R[40]]]],[11,"from",E,E,220,[[[T]],[T]]],[11,"into",E,E,220,[[],[U]]],[11,R[16],E,E,220,[[["self"]],[T]]],[11,R[17],E,E,220,[[[T],["self"]]]],[11,R[11],E,E,220,[[[U]],[R[12]]]],[11,R[39],E,E,220,[[["self"]],[T]]],[11,R[13],E,E,220,[[["self"]],[T]]],[11,R[14],E,E,220,[[],[R[12]]]],[11,R[18],E,E,220,[[["self"]],[R[40]]]],[11,"from",E,E,221,[[[T]],[T]]],[11,"into",E,E,221,[[],[U]]],[11,R[16],E,E,221,[[["self"]],[T]]],[11,R[17],E,E,221,[[[T],["self"]]]],[11,R[11],E,E,221,[[[U]],[R[12]]]],[11,R[39],E,E,221,[[["self"]],[T]]],[11,R[13],E,E,221,[[["self"]],[T]]],[11,R[14],E,E,221,[[],[R[12]]]],[11,R[18],E,E,221,[[["self"]],[R[40]]]],[11,"from",E,E,222,[[[T]],[T]]],[11,"into",E,E,222,[[],[U]]],[11,R[16],E,E,222,[[["self"]],[T]]],[11,R[17],E,E,222,[[[T],["self"]]]],[11,R[11],E,E,222,[[[U]],[R[12]]]],[11,R[39],E,E,222,[[["self"]],[T]]],[11,R[13],E,E,222,[[["self"]],[T]]],[11,R[14],E,E,222,[[],[R[12]]]],[11,R[18],E,E,222,[[["self"]],[R[40]]]],[11,"span",E,E,14,[[["self"]],["span"]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[16],E,E,14,[[["self"]],[T]]],[11,R[17],E,E,14,[[[T],["self"]]]],[11,R[11],E,E,14,[[[U]],[R[12]]]],[11,R[39],E,E,14,[[["self"]],[T]]],[11,R[13],E,E,14,[[["self"]],[T]]],[11,R[14],E,E,14,[[],[R[12]]]],[11,R[18],E,E,14,[[["self"]],[R[40]]]],[11,"from",E,E,223,[[[T]],[T]]],[11,"into",E,E,223,[[],[U]]],[11,R[16],E,E,223,[[["self"]],[T]]],[11,R[17],E,E,223,[[[T],["self"]]]],[11,R[11],E,E,223,[[[U]],[R[12]]]],[11,R[39],E,E,223,[[["self"]],[T]]],[11,R[13],E,E,223,[[["self"]],[T]]],[11,R[14],E,E,223,[[],[R[12]]]],[11,R[18],E,E,223,[[["self"]],[R[40]]]],[11,"span",E,E,15,[[["self"]],["span"]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[16],E,E,15,[[["self"]],[T]]],[11,R[17],E,E,15,[[[T],["self"]]]],[11,R[11],E,E,15,[[[U]],[R[12]]]],[11,R[39],E,E,15,[[["self"]],[T]]],[11,R[13],E,E,15,[[["self"]],[T]]],[11,R[14],E,E,15,[[],[R[12]]]],[11,R[18],E,E,15,[[["self"]],[R[40]]]],[11,"from",E,E,224,[[[T]],[T]]],[11,"into",E,E,224,[[],[U]]],[11,R[16],E,E,224,[[["self"]],[T]]],[11,R[17],E,E,224,[[[T],["self"]]]],[11,R[11],E,E,224,[[[U]],[R[12]]]],[11,R[39],E,E,224,[[["self"]],[T]]],[11,R[13],E,E,224,[[["self"]],[T]]],[11,R[14],E,E,224,[[],[R[12]]]],[11,R[18],E,E,224,[[["self"]],[R[40]]]],[11,"from",E,E,225,[[[T]],[T]]],[11,"into",E,E,225,[[],[U]]],[11,R[16],E,E,225,[[["self"]],[T]]],[11,R[17],E,E,225,[[[T],["self"]]]],[11,R[11],E,E,225,[[[U]],[R[12]]]],[11,R[39],E,E,225,[[["self"]],[T]]],[11,R[13],E,E,225,[[["self"]],[T]]],[11,R[14],E,E,225,[[],[R[12]]]],[11,R[18],E,E,225,[[["self"]],[R[40]]]],[11,"from",E,E,226,[[[T]],[T]]],[11,"into",E,E,226,[[],[U]]],[11,R[16],E,E,226,[[["self"]],[T]]],[11,R[17],E,E,226,[[[T],["self"]]]],[11,R[11],E,E,226,[[[U]],[R[12]]]],[11,R[39],E,E,226,[[["self"]],[T]]],[11,R[13],E,E,226,[[["self"]],[T]]],[11,R[14],E,E,226,[[],[R[12]]]],[11,R[18],E,E,226,[[["self"]],[R[40]]]],[11,"from",E,E,227,[[[T]],[T]]],[11,"into",E,E,227,[[],[U]]],[11,R[16],E,E,227,[[["self"]],[T]]],[11,R[17],E,E,227,[[[T],["self"]]]],[11,R[11],E,E,227,[[[U]],[R[12]]]],[11,R[39],E,E,227,[[["self"]],[T]]],[11,R[13],E,E,227,[[["self"]],[T]]],[11,R[14],E,E,227,[[],[R[12]]]],[11,R[18],E,E,227,[[["self"]],[R[40]]]],[11,"span",E,E,16,[[["self"]],["span"]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[16],E,E,16,[[["self"]],[T]]],[11,R[17],E,E,16,[[[T],["self"]]]],[11,R[11],E,E,16,[[[U]],[R[12]]]],[11,R[39],E,E,16,[[["self"]],[T]]],[11,R[13],E,E,16,[[["self"]],[T]]],[11,R[14],E,E,16,[[],[R[12]]]],[11,R[18],E,E,16,[[["self"]],[R[40]]]],[11,"span",E,E,17,[[["self"]],["span"]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[16],E,E,17,[[["self"]],[T]]],[11,R[17],E,E,17,[[[T],["self"]]]],[11,R[11],E,E,17,[[[U]],[R[12]]]],[11,R[39],E,E,17,[[["self"]],[T]]],[11,R[13],E,E,17,[[["self"]],[T]]],[11,R[14],E,E,17,[[],[R[12]]]],[11,R[18],E,E,17,[[["self"]],[R[40]]]],[11,"from",E,E,228,[[[T]],[T]]],[11,"into",E,E,228,[[],[U]]],[11,R[16],E,E,228,[[["self"]],[T]]],[11,R[17],E,E,228,[[[T],["self"]]]],[11,R[11],E,E,228,[[[U]],[R[12]]]],[11,R[39],E,E,228,[[["self"]],[T]]],[11,R[13],E,E,228,[[["self"]],[T]]],[11,R[14],E,E,228,[[],[R[12]]]],[11,R[18],E,E,228,[[["self"]],[R[40]]]],[11,"from",E,E,229,[[[T]],[T]]],[11,"into",E,E,229,[[],[U]]],[11,R[16],E,E,229,[[["self"]],[T]]],[11,R[17],E,E,229,[[[T],["self"]]]],[11,R[11],E,E,229,[[[U]],[R[12]]]],[11,R[39],E,E,229,[[["self"]],[T]]],[11,R[13],E,E,229,[[["self"]],[T]]],[11,R[14],E,E,229,[[],[R[12]]]],[11,R[18],E,E,229,[[["self"]],[R[40]]]],[11,"from",E,E,230,[[[T]],[T]]],[11,"into",E,E,230,[[],[U]]],[11,R[16],E,E,230,[[["self"]],[T]]],[11,R[17],E,E,230,[[[T],["self"]]]],[11,R[11],E,E,230,[[[U]],[R[12]]]],[11,R[39],E,E,230,[[["self"]],[T]]],[11,R[13],E,E,230,[[["self"]],[T]]],[11,R[14],E,E,230,[[],[R[12]]]],[11,R[18],E,E,230,[[["self"]],[R[40]]]],[11,"from",E,E,231,[[[T]],[T]]],[11,"into",E,E,231,[[],[U]]],[11,R[16],E,E,231,[[["self"]],[T]]],[11,R[17],E,E,231,[[[T],["self"]]]],[11,R[11],E,E,231,[[[U]],[R[12]]]],[11,R[39],E,E,231,[[["self"]],[T]]],[11,R[13],E,E,231,[[["self"]],[T]]],[11,R[14],E,E,231,[[],[R[12]]]],[11,R[18],E,E,231,[[["self"]],[R[40]]]],[11,"from",E,E,232,[[[T]],[T]]],[11,"into",E,E,232,[[],[U]]],[11,R[16],E,E,232,[[["self"]],[T]]],[11,R[17],E,E,232,[[[T],["self"]]]],[11,R[11],E,E,232,[[[U]],[R[12]]]],[11,R[39],E,E,232,[[["self"]],[T]]],[11,R[13],E,E,232,[[["self"]],[T]]],[11,R[14],E,E,232,[[],[R[12]]]],[11,R[18],E,E,232,[[["self"]],[R[40]]]],[11,"from",E,E,233,[[[T]],[T]]],[11,"into",E,E,233,[[],[U]]],[11,R[16],E,E,233,[[["self"]],[T]]],[11,R[17],E,E,233,[[[T],["self"]]]],[11,R[11],E,E,233,[[[U]],[R[12]]]],[11,R[39],E,E,233,[[["self"]],[T]]],[11,R[13],E,E,233,[[["self"]],[T]]],[11,R[14],E,E,233,[[],[R[12]]]],[11,R[18],E,E,233,[[["self"]],[R[40]]]],[11,"from",E,E,234,[[[T]],[T]]],[11,"into",E,E,234,[[],[U]]],[11,R[16],E,E,234,[[["self"]],[T]]],[11,R[17],E,E,234,[[[T],["self"]]]],[11,R[11],E,E,234,[[[U]],[R[12]]]],[11,R[39],E,E,234,[[["self"]],[T]]],[11,R[13],E,E,234,[[["self"]],[T]]],[11,R[14],E,E,234,[[],[R[12]]]],[11,R[18],E,E,234,[[["self"]],[R[40]]]],[11,"from",E,E,235,[[[T]],[T]]],[11,"into",E,E,235,[[],[U]]],[11,R[16],E,E,235,[[["self"]],[T]]],[11,R[17],E,E,235,[[[T],["self"]]]],[11,R[11],E,E,235,[[[U]],[R[12]]]],[11,R[39],E,E,235,[[["self"]],[T]]],[11,R[13],E,E,235,[[["self"]],[T]]],[11,R[14],E,E,235,[[],[R[12]]]],[11,R[18],E,E,235,[[["self"]],[R[40]]]],[11,"from",E,E,236,[[[T]],[T]]],[11,"into",E,E,236,[[],[U]]],[11,R[16],E,E,236,[[["self"]],[T]]],[11,R[17],E,E,236,[[[T],["self"]]]],[11,R[11],E,E,236,[[[U]],[R[12]]]],[11,R[39],E,E,236,[[["self"]],[T]]],[11,R[13],E,E,236,[[["self"]],[T]]],[11,R[14],E,E,236,[[],[R[12]]]],[11,R[18],E,E,236,[[["self"]],[R[40]]]],[11,"span",E,E,18,[[["self"]],["span"]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[16],E,E,18,[[["self"]],[T]]],[11,R[17],E,E,18,[[[T],["self"]]]],[11,R[11],E,E,18,[[[U]],[R[12]]]],[11,R[39],E,E,18,[[["self"]],[T]]],[11,R[13],E,E,18,[[["self"]],[T]]],[11,R[14],E,E,18,[[],[R[12]]]],[11,R[18],E,E,18,[[["self"]],[R[40]]]],[11,"from",E,E,237,[[[T]],[T]]],[11,"into",E,E,237,[[],[U]]],[11,R[16],E,E,237,[[["self"]],[T]]],[11,R[17],E,E,237,[[[T],["self"]]]],[11,R[11],E,E,237,[[[U]],[R[12]]]],[11,R[39],E,E,237,[[["self"]],[T]]],[11,R[13],E,E,237,[[["self"]],[T]]],[11,R[14],E,E,237,[[],[R[12]]]],[11,R[18],E,E,237,[[["self"]],[R[40]]]],[11,"span",E,E,19,[[["self"]],["span"]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[16],E,E,19,[[["self"]],[T]]],[11,R[17],E,E,19,[[[T],["self"]]]],[11,R[11],E,E,19,[[[U]],[R[12]]]],[11,R[39],E,E,19,[[["self"]],[T]]],[11,R[13],E,E,19,[[["self"]],[T]]],[11,R[14],E,E,19,[[],[R[12]]]],[11,R[18],E,E,19,[[["self"]],[R[40]]]],[11,"from",E,E,238,[[[T]],[T]]],[11,"into",E,E,238,[[],[U]]],[11,R[16],E,E,238,[[["self"]],[T]]],[11,R[17],E,E,238,[[[T],["self"]]]],[11,R[11],E,E,238,[[[U]],[R[12]]]],[11,R[39],E,E,238,[[["self"]],[T]]],[11,R[13],E,E,238,[[["self"]],[T]]],[11,R[14],E,E,238,[[],[R[12]]]],[11,R[18],E,E,238,[[["self"]],[R[40]]]],[11,"from",E,E,239,[[[T]],[T]]],[11,"into",E,E,239,[[],[U]]],[11,R[16],E,E,239,[[["self"]],[T]]],[11,R[17],E,E,239,[[[T],["self"]]]],[11,R[11],E,E,239,[[[U]],[R[12]]]],[11,R[39],E,E,239,[[["self"]],[T]]],[11,R[13],E,E,239,[[["self"]],[T]]],[11,R[14],E,E,239,[[],[R[12]]]],[11,R[18],E,E,239,[[["self"]],[R[40]]]],[11,"span",E,E,20,[[["self"]],["span"]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[16],E,E,20,[[["self"]],[T]]],[11,R[17],E,E,20,[[[T],["self"]]]],[11,R[11],E,E,20,[[[U]],[R[12]]]],[11,R[39],E,E,20,[[["self"]],[T]]],[11,R[13],E,E,20,[[["self"]],[T]]],[11,R[14],E,E,20,[[],[R[12]]]],[11,R[18],E,E,20,[[["self"]],[R[40]]]],[11,"span",E,E,21,[[["self"]],["span"]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[16],E,E,21,[[["self"]],[T]]],[11,R[17],E,E,21,[[[T],["self"]]]],[11,R[11],E,E,21,[[[U]],[R[12]]]],[11,R[39],E,E,21,[[["self"]],[T]]],[11,R[13],E,E,21,[[["self"]],[T]]],[11,R[14],E,E,21,[[],[R[12]]]],[11,R[18],E,E,21,[[["self"]],[R[40]]]],[11,"span",E,E,22,[[["self"]],["span"]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[16],E,E,22,[[["self"]],[T]]],[11,R[17],E,E,22,[[[T],["self"]]]],[11,R[11],E,E,22,[[[U]],[R[12]]]],[11,R[39],E,E,22,[[["self"]],[T]]],[11,R[13],E,E,22,[[["self"]],[T]]],[11,R[14],E,E,22,[[],[R[12]]]],[11,R[18],E,E,22,[[["self"]],[R[40]]]],[11,"span",E,E,23,[[["self"]],["span"]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[16],E,E,23,[[["self"]],[T]]],[11,R[17],E,E,23,[[[T],["self"]]]],[11,R[11],E,E,23,[[[U]],[R[12]]]],[11,R[39],E,E,23,[[["self"]],[T]]],[11,R[13],E,E,23,[[["self"]],[T]]],[11,R[14],E,E,23,[[],[R[12]]]],[11,R[18],E,E,23,[[["self"]],[R[40]]]],[11,"span",E,E,24,[[["self"]],["span"]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[16],E,E,24,[[["self"]],[T]]],[11,R[17],E,E,24,[[[T],["self"]]]],[11,R[11],E,E,24,[[[U]],[R[12]]]],[11,R[39],E,E,24,[[["self"]],[T]]],[11,R[13],E,E,24,[[["self"]],[T]]],[11,R[14],E,E,24,[[],[R[12]]]],[11,R[18],E,E,24,[[["self"]],[R[40]]]],[11,"span",E,E,25,[[["self"]],["span"]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[16],E,E,25,[[["self"]],[T]]],[11,R[17],E,E,25,[[[T],["self"]]]],[11,R[11],E,E,25,[[[U]],[R[12]]]],[11,R[39],E,E,25,[[["self"]],[T]]],[11,R[13],E,E,25,[[["self"]],[T]]],[11,R[14],E,E,25,[[],[R[12]]]],[11,R[18],E,E,25,[[["self"]],[R[40]]]],[11,"span",E,E,26,[[["self"]],["span"]]],[11,"from",E,E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[16],E,E,26,[[["self"]],[T]]],[11,R[17],E,E,26,[[[T],["self"]]]],[11,R[11],E,E,26,[[[U]],[R[12]]]],[11,R[39],E,E,26,[[["self"]],[T]]],[11,R[13],E,E,26,[[["self"]],[T]]],[11,R[14],E,E,26,[[],[R[12]]]],[11,R[18],E,E,26,[[["self"]],[R[40]]]],[11,"span",E,E,27,[[["self"]],["span"]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[16],E,E,27,[[["self"]],[T]]],[11,R[17],E,E,27,[[[T],["self"]]]],[11,R[11],E,E,27,[[[U]],[R[12]]]],[11,R[39],E,E,27,[[["self"]],[T]]],[11,R[13],E,E,27,[[["self"]],[T]]],[11,R[14],E,E,27,[[],[R[12]]]],[11,R[18],E,E,27,[[["self"]],[R[40]]]],[11,"span",E,E,28,[[["self"]],["span"]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[16],E,E,28,[[["self"]],[T]]],[11,R[17],E,E,28,[[[T],["self"]]]],[11,R[11],E,E,28,[[[U]],[R[12]]]],[11,R[39],E,E,28,[[["self"]],[T]]],[11,R[13],E,E,28,[[["self"]],[T]]],[11,R[14],E,E,28,[[],[R[12]]]],[11,R[18],E,E,28,[[["self"]],[R[40]]]],[11,"span",E,E,29,[[["self"]],["span"]]],[11,"from",E,E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[16],E,E,29,[[["self"]],[T]]],[11,R[17],E,E,29,[[[T],["self"]]]],[11,R[11],E,E,29,[[[U]],[R[12]]]],[11,R[39],E,E,29,[[["self"]],[T]]],[11,R[13],E,E,29,[[["self"]],[T]]],[11,R[14],E,E,29,[[],[R[12]]]],[11,R[18],E,E,29,[[["self"]],[R[40]]]],[11,"span",E,E,30,[[["self"]],["span"]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[16],E,E,30,[[["self"]],[T]]],[11,R[17],E,E,30,[[[T],["self"]]]],[11,R[11],E,E,30,[[[U]],[R[12]]]],[11,R[39],E,E,30,[[["self"]],[T]]],[11,R[13],E,E,30,[[["self"]],[T]]],[11,R[14],E,E,30,[[],[R[12]]]],[11,R[18],E,E,30,[[["self"]],[R[40]]]],[11,"span",E,E,240,[[["self"]],["span"]]],[11,"from",E,E,240,[[[T]],[T]]],[11,"into",E,E,240,[[],[U]]],[11,R[16],E,E,240,[[["self"]],[T]]],[11,R[17],E,E,240,[[[T],["self"]]]],[11,R[11],E,E,240,[[[U]],[R[12]]]],[11,R[39],E,E,240,[[["self"]],[T]]],[11,R[13],E,E,240,[[["self"]],[T]]],[11,R[14],E,E,240,[[],[R[12]]]],[11,R[18],E,E,240,[[["self"]],[R[40]]]],[11,"span",E,E,241,[[["self"]],["span"]]],[11,"from",E,E,241,[[[T]],[T]]],[11,"into",E,E,241,[[],[U]]],[11,R[16],E,E,241,[[["self"]],[T]]],[11,R[17],E,E,241,[[[T],["self"]]]],[11,R[11],E,E,241,[[[U]],[R[12]]]],[11,R[39],E,E,241,[[["self"]],[T]]],[11,R[13],E,E,241,[[["self"]],[T]]],[11,R[14],E,E,241,[[],[R[12]]]],[11,R[18],E,E,241,[[["self"]],[R[40]]]],[11,"span",E,E,190,[[["self"]],["span"]]],[11,"from",E,E,190,[[[T]],[T]]],[11,"into",E,E,190,[[],[U]]],[11,R[16],E,E,190,[[["self"]],[T]]],[11,R[17],E,E,190,[[[T],["self"]]]],[11,R[11],E,E,190,[[[U]],[R[12]]]],[11,R[39],E,E,190,[[["self"]],[T]]],[11,R[13],E,E,190,[[["self"]],[T]]],[11,R[14],E,E,190,[[],[R[12]]]],[11,R[18],E,E,190,[[["self"]],[R[40]]]],[11,"peek",E,E,31,[[["cursor"]],["bool"]]],[11,"display",E,E,31,[[],["str"]]],[11,"span",E,E,31,[[["self"]],["span"]]],[11,"from",E,E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[16],E,E,31,[[["self"]],[T]]],[11,R[17],E,E,31,[[[T],["self"]]]],[11,R[170],E,E,31,[[["self"]],["string"]]],[11,R[11],E,E,31,[[[U]],[R[12]]]],[11,R[39],E,E,31,[[["self"]],[T]]],[11,R[13],E,E,31,[[["self"]],[T]]],[11,R[14],E,E,31,[[],[R[12]]]],[11,R[18],E,E,31,[[["self"]],[R[40]]]],[11,"peek",E,E,32,[[["cursor"]],["bool"]]],[11,"display",E,E,32,[[],["str"]]],[11,"span",E,E,32,[[["self"]],["span"]]],[11,"from",E,E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[16],E,E,32,[[["self"]],[T]]],[11,R[17],E,E,32,[[[T],["self"]]]],[11,R[11],E,E,32,[[[U]],[R[12]]]],[11,R[39],E,E,32,[[["self"]],[T]]],[11,R[13],E,E,32,[[["self"]],[T]]],[11,R[14],E,E,32,[[],[R[12]]]],[11,R[18],E,E,32,[[["self"]],[R[40]]]],[11,"peek",E,E,193,[[["cursor"]],["bool"]]],[11,"display",E,E,193,[[],["str"]]],[11,"span",E,E,193,[[["self"]],["span"]]],[11,"from",E,E,193,[[[T]],[T]]],[11,"into",E,E,193,[[],[U]]],[11,R[16],E,E,193,[[["self"]],[T]]],[11,R[17],E,E,193,[[[T],["self"]]]],[11,R[11],E,E,193,[[[U]],[R[12]]]],[11,R[39],E,E,193,[[["self"]],[T]]],[11,R[13],E,E,193,[[["self"]],[T]]],[11,R[14],E,E,193,[[],[R[12]]]],[11,R[18],E,E,193,[[["self"]],[R[40]]]],[11,"peek",E,E,192,[[["cursor"]],["bool"]]],[11,"display",E,E,192,[[],["str"]]],[11,"span",E,E,192,[[["self"]],["span"]]],[11,"from",E,E,192,[[[T]],[T]]],[11,"into",E,E,192,[[],[U]]],[11,R[16],E,E,192,[[["self"]],[T]]],[11,R[17],E,E,192,[[[T],["self"]]]],[11,R[11],E,E,192,[[[U]],[R[12]]]],[11,R[39],E,E,192,[[["self"]],[T]]],[11,R[13],E,E,192,[[["self"]],[T]]],[11,R[14],E,E,192,[[],[R[12]]]],[11,R[18],E,E,192,[[["self"]],[R[40]]]],[11,"peek",E,E,194,[[["cursor"]],["bool"]]],[11,"display",E,E,194,[[],["str"]]],[11,"span",E,E,194,[[["self"]],["span"]]],[11,"from",E,E,194,[[[T]],[T]]],[11,"into",E,E,194,[[],[U]]],[11,R[16],E,E,194,[[["self"]],[T]]],[11,R[17],E,E,194,[[[T],["self"]]]],[11,R[11],E,E,194,[[[U]],[R[12]]]],[11,R[39],E,E,194,[[["self"]],[T]]],[11,R[13],E,E,194,[[["self"]],[T]]],[11,R[14],E,E,194,[[],[R[12]]]],[11,R[18],E,E,194,[[["self"]],[R[40]]]],[11,"peek",E,E,196,[[["cursor"]],["bool"]]],[11,"display",E,E,196,[[],["str"]]],[11,"span",E,E,196,[[["self"]],["span"]]],[11,"from",E,E,196,[[[T]],[T]]],[11,"into",E,E,196,[[],[U]]],[11,R[16],E,E,196,[[["self"]],[T]]],[11,R[17],E,E,196,[[[T],["self"]]]],[11,R[11],E,E,196,[[[U]],[R[12]]]],[11,R[39],E,E,196,[[["self"]],[T]]],[11,R[13],E,E,196,[[["self"]],[T]]],[11,R[14],E,E,196,[[],[R[12]]]],[11,R[18],E,E,196,[[["self"]],[R[40]]]],[11,"peek",E,E,195,[[["cursor"]],["bool"]]],[11,"display",E,E,195,[[],["str"]]],[11,"span",E,E,195,[[["self"]],["span"]]],[11,"from",E,E,195,[[[T]],[T]]],[11,"into",E,E,195,[[],[U]]],[11,R[16],E,E,195,[[["self"]],[T]]],[11,R[17],E,E,195,[[[T],["self"]]]],[11,R[11],E,E,195,[[[U]],[R[12]]]],[11,R[39],E,E,195,[[["self"]],[T]]],[11,R[13],E,E,195,[[["self"]],[T]]],[11,R[14],E,E,195,[[],[R[12]]]],[11,R[18],E,E,195,[[["self"]],[R[40]]]],[11,"peek",E,E,191,[[["cursor"]],["bool"]]],[11,"display",E,E,191,[[],["str"]]],[11,"span",E,E,191,[[["self"]],["span"]]],[11,"from",E,E,191,[[[T]],[T]]],[11,"into",E,E,191,[[],[U]]],[11,R[16],E,E,191,[[["self"]],[T]]],[11,R[17],E,E,191,[[[T],["self"]]]],[11,R[11],E,E,191,[[[U]],[R[12]]]],[11,R[39],E,E,191,[[["self"]],[T]]],[11,R[13],E,E,191,[[["self"]],[T]]],[11,R[14],E,E,191,[[],[R[12]]]],[11,R[18],E,E,191,[[["self"]],[R[40]]]],[11,"span",E,E,33,[[["self"]],["span"]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[16],E,E,33,[[["self"]],[T]]],[11,R[17],E,E,33,[[[T],["self"]]]],[11,R[11],E,E,33,[[[U]],[R[12]]]],[11,R[39],E,E,33,[[["self"]],[T]]],[11,R[13],E,E,33,[[["self"]],[T]]],[11,R[14],E,E,33,[[],[R[12]]]],[11,R[18],E,E,33,[[["self"]],[R[40]]]],[11,"span",E,E,34,[[["self"]],["span"]]],[11,"from",E,E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[16],E,E,34,[[["self"]],[T]]],[11,R[17],E,E,34,[[[T],["self"]]]],[11,R[11],E,E,34,[[[U]],[R[12]]]],[11,R[39],E,E,34,[[["self"]],[T]]],[11,R[13],E,E,34,[[["self"]],[T]]],[11,R[14],E,E,34,[[],[R[12]]]],[11,R[18],E,E,34,[[["self"]],[R[40]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[16],E,E,35,[[["self"]],[T]]],[11,R[17],E,E,35,[[[T],["self"]]]],[11,R[11],E,E,35,[[[U]],[R[12]]]],[11,R[39],E,E,35,[[["self"]],[T]]],[11,R[13],E,E,35,[[["self"]],[T]]],[11,R[14],E,E,35,[[],[R[12]]]],[11,R[18],E,E,35,[[["self"]],[R[40]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,R[16],E,E,36,[[["self"]],[T]]],[11,R[17],E,E,36,[[[T],["self"]]]],[11,R[11],E,E,36,[[[U]],[R[12]]]],[11,R[39],E,E,36,[[["self"]],[T]]],[11,R[13],E,E,36,[[["self"]],[T]]],[11,R[14],E,E,36,[[],[R[12]]]],[11,R[18],E,E,36,[[["self"]],[R[40]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,"into",E,E,37,[[],[U]]],[11,R[16],E,E,37,[[["self"]],[T]]],[11,R[17],E,E,37,[[[T],["self"]]]],[11,R[11],E,E,37,[[[U]],[R[12]]]],[11,R[39],E,E,37,[[["self"]],[T]]],[11,R[13],E,E,37,[[["self"]],[T]]],[11,R[14],E,E,37,[[],[R[12]]]],[11,R[18],E,E,37,[[["self"]],[R[40]]]],[11,"span",E,E,38,[[["self"]],["span"]]],[11,"from",E,E,38,[[[T]],[T]]],[11,"into",E,E,38,[[],[U]]],[11,R[16],E,E,38,[[["self"]],[T]]],[11,R[17],E,E,38,[[[T],["self"]]]],[11,R[11],E,E,38,[[[U]],[R[12]]]],[11,R[39],E,E,38,[[["self"]],[T]]],[11,R[13],E,E,38,[[["self"]],[T]]],[11,R[14],E,E,38,[[],[R[12]]]],[11,R[18],E,E,38,[[["self"]],[R[40]]]],[11,"span",E,E,39,[[["self"]],["span"]]],[11,"from",E,E,39,[[[T]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,R[16],E,E,39,[[["self"]],[T]]],[11,R[17],E,E,39,[[[T],["self"]]]],[11,R[11],E,E,39,[[[U]],[R[12]]]],[11,R[39],E,E,39,[[["self"]],[T]]],[11,R[13],E,E,39,[[["self"]],[T]]],[11,R[14],E,E,39,[[],[R[12]]]],[11,R[18],E,E,39,[[["self"]],[R[40]]]],[11,"span",E,E,40,[[["self"]],["span"]]],[11,"from",E,E,40,[[[T]],[T]]],[11,"into",E,E,40,[[],[U]]],[11,R[16],E,E,40,[[["self"]],[T]]],[11,R[17],E,E,40,[[[T],["self"]]]],[11,R[11],E,E,40,[[[U]],[R[12]]]],[11,R[39],E,E,40,[[["self"]],[T]]],[11,R[13],E,E,40,[[["self"]],[T]]],[11,R[14],E,E,40,[[],[R[12]]]],[11,R[18],E,E,40,[[["self"]],[R[40]]]],[11,"span",E,E,41,[[["self"]],["span"]]],[11,"from",E,E,41,[[[T]],[T]]],[11,"into",E,E,41,[[],[U]]],[11,R[16],E,E,41,[[["self"]],[T]]],[11,R[17],E,E,41,[[[T],["self"]]]],[11,R[11],E,E,41,[[[U]],[R[12]]]],[11,R[39],E,E,41,[[["self"]],[T]]],[11,R[13],E,E,41,[[["self"]],[T]]],[11,R[14],E,E,41,[[],[R[12]]]],[11,R[18],E,E,41,[[["self"]],[R[40]]]],[11,"span",E,E,42,[[["self"]],["span"]]],[11,"from",E,E,42,[[[T]],[T]]],[11,"into",E,E,42,[[],[U]]],[11,R[16],E,E,42,[[["self"]],[T]]],[11,R[17],E,E,42,[[[T],["self"]]]],[11,R[11],E,E,42,[[[U]],[R[12]]]],[11,R[39],E,E,42,[[["self"]],[T]]],[11,R[13],E,E,42,[[["self"]],[T]]],[11,R[14],E,E,42,[[],[R[12]]]],[11,R[18],E,E,42,[[["self"]],[R[40]]]],[11,"span",E,E,43,[[["self"]],["span"]]],[11,"from",E,E,43,[[[T]],[T]]],[11,"into",E,E,43,[[],[U]]],[11,R[16],E,E,43,[[["self"]],[T]]],[11,R[17],E,E,43,[[[T],["self"]]]],[11,R[11],E,E,43,[[[U]],[R[12]]]],[11,R[39],E,E,43,[[["self"]],[T]]],[11,R[13],E,E,43,[[["self"]],[T]]],[11,R[14],E,E,43,[[],[R[12]]]],[11,R[18],E,E,43,[[["self"]],[R[40]]]],[11,"span",E,E,44,[[["self"]],["span"]]],[11,"from",E,E,44,[[[T]],[T]]],[11,"into",E,E,44,[[],[U]]],[11,R[16],E,E,44,[[["self"]],[T]]],[11,R[17],E,E,44,[[[T],["self"]]]],[11,R[11],E,E,44,[[[U]],[R[12]]]],[11,R[39],E,E,44,[[["self"]],[T]]],[11,R[13],E,E,44,[[["self"]],[T]]],[11,R[14],E,E,44,[[],[R[12]]]],[11,R[18],E,E,44,[[["self"]],[R[40]]]],[11,"span",E,E,45,[[["self"]],["span"]]],[11,"from",E,E,45,[[[T]],[T]]],[11,"into",E,E,45,[[],[U]]],[11,R[16],E,E,45,[[["self"]],[T]]],[11,R[17],E,E,45,[[[T],["self"]]]],[11,R[11],E,E,45,[[[U]],[R[12]]]],[11,R[39],E,E,45,[[["self"]],[T]]],[11,R[13],E,E,45,[[["self"]],[T]]],[11,R[14],E,E,45,[[],[R[12]]]],[11,R[18],E,E,45,[[["self"]],[R[40]]]],[11,"span",E,E,46,[[["self"]],["span"]]],[11,"from",E,E,46,[[[T]],[T]]],[11,"into",E,E,46,[[],[U]]],[11,R[16],E,E,46,[[["self"]],[T]]],[11,R[17],E,E,46,[[[T],["self"]]]],[11,R[11],E,E,46,[[[U]],[R[12]]]],[11,R[39],E,E,46,[[["self"]],[T]]],[11,R[13],E,E,46,[[["self"]],[T]]],[11,R[14],E,E,46,[[],[R[12]]]],[11,R[18],E,E,46,[[["self"]],[R[40]]]],[11,"span",E,E,47,[[["self"]],["span"]]],[11,"from",E,E,47,[[[T]],[T]]],[11,"into",E,E,47,[[],[U]]],[11,R[16],E,E,47,[[["self"]],[T]]],[11,R[17],E,E,47,[[[T],["self"]]]],[11,R[11],E,E,47,[[[U]],[R[12]]]],[11,R[39],E,E,47,[[["self"]],[T]]],[11,R[13],E,E,47,[[["self"]],[T]]],[11,R[14],E,E,47,[[],[R[12]]]],[11,R[18],E,E,47,[[["self"]],[R[40]]]],[11,"span",E,E,48,[[["self"]],["span"]]],[11,"from",E,E,48,[[[T]],[T]]],[11,"into",E,E,48,[[],[U]]],[11,R[16],E,E,48,[[["self"]],[T]]],[11,R[17],E,E,48,[[[T],["self"]]]],[11,R[11],E,E,48,[[[U]],[R[12]]]],[11,R[39],E,E,48,[[["self"]],[T]]],[11,R[13],E,E,48,[[["self"]],[T]]],[11,R[14],E,E,48,[[],[R[12]]]],[11,R[18],E,E,48,[[["self"]],[R[40]]]],[11,"span",E,E,49,[[["self"]],["span"]]],[11,"from",E,E,49,[[[T]],[T]]],[11,"into",E,E,49,[[],[U]]],[11,R[16],E,E,49,[[["self"]],[T]]],[11,R[17],E,E,49,[[[T],["self"]]]],[11,R[11],E,E,49,[[[U]],[R[12]]]],[11,R[39],E,E,49,[[["self"]],[T]]],[11,R[13],E,E,49,[[["self"]],[T]]],[11,R[14],E,E,49,[[],[R[12]]]],[11,R[18],E,E,49,[[["self"]],[R[40]]]],[11,"span",E,E,50,[[["self"]],["span"]]],[11,"from",E,E,50,[[[T]],[T]]],[11,"into",E,E,50,[[],[U]]],[11,R[16],E,E,50,[[["self"]],[T]]],[11,R[17],E,E,50,[[[T],["self"]]]],[11,R[11],E,E,50,[[[U]],[R[12]]]],[11,R[39],E,E,50,[[["self"]],[T]]],[11,R[13],E,E,50,[[["self"]],[T]]],[11,R[14],E,E,50,[[],[R[12]]]],[11,R[18],E,E,50,[[["self"]],[R[40]]]],[11,"span",E,E,51,[[["self"]],["span"]]],[11,"from",E,E,51,[[[T]],[T]]],[11,"into",E,E,51,[[],[U]]],[11,R[16],E,E,51,[[["self"]],[T]]],[11,R[17],E,E,51,[[[T],["self"]]]],[11,R[11],E,E,51,[[[U]],[R[12]]]],[11,R[39],E,E,51,[[["self"]],[T]]],[11,R[13],E,E,51,[[["self"]],[T]]],[11,R[14],E,E,51,[[],[R[12]]]],[11,R[18],E,E,51,[[["self"]],[R[40]]]],[11,"span",E,E,52,[[["self"]],["span"]]],[11,"from",E,E,52,[[[T]],[T]]],[11,"into",E,E,52,[[],[U]]],[11,R[16],E,E,52,[[["self"]],[T]]],[11,R[17],E,E,52,[[[T],["self"]]]],[11,R[11],E,E,52,[[[U]],[R[12]]]],[11,R[39],E,E,52,[[["self"]],[T]]],[11,R[13],E,E,52,[[["self"]],[T]]],[11,R[14],E,E,52,[[],[R[12]]]],[11,R[18],E,E,52,[[["self"]],[R[40]]]],[11,"span",E,E,53,[[["self"]],["span"]]],[11,"from",E,E,53,[[[T]],[T]]],[11,"into",E,E,53,[[],[U]]],[11,R[16],E,E,53,[[["self"]],[T]]],[11,R[17],E,E,53,[[[T],["self"]]]],[11,R[11],E,E,53,[[[U]],[R[12]]]],[11,R[39],E,E,53,[[["self"]],[T]]],[11,R[13],E,E,53,[[["self"]],[T]]],[11,R[14],E,E,53,[[],[R[12]]]],[11,R[18],E,E,53,[[["self"]],[R[40]]]],[11,"span",E,E,54,[[["self"]],["span"]]],[11,"from",E,E,54,[[[T]],[T]]],[11,"into",E,E,54,[[],[U]]],[11,R[16],E,E,54,[[["self"]],[T]]],[11,R[17],E,E,54,[[[T],["self"]]]],[11,R[11],E,E,54,[[[U]],[R[12]]]],[11,R[39],E,E,54,[[["self"]],[T]]],[11,R[13],E,E,54,[[["self"]],[T]]],[11,R[14],E,E,54,[[],[R[12]]]],[11,R[18],E,E,54,[[["self"]],[R[40]]]],[11,"span",E,E,55,[[["self"]],["span"]]],[11,"from",E,E,55,[[[T]],[T]]],[11,"into",E,E,55,[[],[U]]],[11,R[16],E,E,55,[[["self"]],[T]]],[11,R[17],E,E,55,[[[T],["self"]]]],[11,R[11],E,E,55,[[[U]],[R[12]]]],[11,R[39],E,E,55,[[["self"]],[T]]],[11,R[13],E,E,55,[[["self"]],[T]]],[11,R[14],E,E,55,[[],[R[12]]]],[11,R[18],E,E,55,[[["self"]],[R[40]]]],[11,"span",E,E,56,[[["self"]],["span"]]],[11,"from",E,E,56,[[[T]],[T]]],[11,"into",E,E,56,[[],[U]]],[11,R[16],E,E,56,[[["self"]],[T]]],[11,R[17],E,E,56,[[[T],["self"]]]],[11,R[11],E,E,56,[[[U]],[R[12]]]],[11,R[39],E,E,56,[[["self"]],[T]]],[11,R[13],E,E,56,[[["self"]],[T]]],[11,R[14],E,E,56,[[],[R[12]]]],[11,R[18],E,E,56,[[["self"]],[R[40]]]],[11,"span",E,E,57,[[["self"]],["span"]]],[11,"from",E,E,57,[[[T]],[T]]],[11,"into",E,E,57,[[],[U]]],[11,R[16],E,E,57,[[["self"]],[T]]],[11,R[17],E,E,57,[[[T],["self"]]]],[11,R[11],E,E,57,[[[U]],[R[12]]]],[11,R[39],E,E,57,[[["self"]],[T]]],[11,R[13],E,E,57,[[["self"]],[T]]],[11,R[14],E,E,57,[[],[R[12]]]],[11,R[18],E,E,57,[[["self"]],[R[40]]]],[11,"span",E,E,58,[[["self"]],["span"]]],[11,"from",E,E,58,[[[T]],[T]]],[11,"into",E,E,58,[[],[U]]],[11,R[16],E,E,58,[[["self"]],[T]]],[11,R[17],E,E,58,[[[T],["self"]]]],[11,R[11],E,E,58,[[[U]],[R[12]]]],[11,R[39],E,E,58,[[["self"]],[T]]],[11,R[13],E,E,58,[[["self"]],[T]]],[11,R[14],E,E,58,[[],[R[12]]]],[11,R[18],E,E,58,[[["self"]],[R[40]]]],[11,"span",E,E,59,[[["self"]],["span"]]],[11,"from",E,E,59,[[[T]],[T]]],[11,"into",E,E,59,[[],[U]]],[11,R[16],E,E,59,[[["self"]],[T]]],[11,R[17],E,E,59,[[[T],["self"]]]],[11,R[11],E,E,59,[[[U]],[R[12]]]],[11,R[39],E,E,59,[[["self"]],[T]]],[11,R[13],E,E,59,[[["self"]],[T]]],[11,R[14],E,E,59,[[],[R[12]]]],[11,R[18],E,E,59,[[["self"]],[R[40]]]],[11,"span",E,E,60,[[["self"]],["span"]]],[11,"from",E,E,60,[[[T]],[T]]],[11,"into",E,E,60,[[],[U]]],[11,R[16],E,E,60,[[["self"]],[T]]],[11,R[17],E,E,60,[[[T],["self"]]]],[11,R[11],E,E,60,[[[U]],[R[12]]]],[11,R[39],E,E,60,[[["self"]],[T]]],[11,R[13],E,E,60,[[["self"]],[T]]],[11,R[14],E,E,60,[[],[R[12]]]],[11,R[18],E,E,60,[[["self"]],[R[40]]]],[11,"span",E,E,61,[[["self"]],["span"]]],[11,"from",E,E,61,[[[T]],[T]]],[11,"into",E,E,61,[[],[U]]],[11,R[16],E,E,61,[[["self"]],[T]]],[11,R[17],E,E,61,[[[T],["self"]]]],[11,R[11],E,E,61,[[[U]],[R[12]]]],[11,R[39],E,E,61,[[["self"]],[T]]],[11,R[13],E,E,61,[[["self"]],[T]]],[11,R[14],E,E,61,[[],[R[12]]]],[11,R[18],E,E,61,[[["self"]],[R[40]]]],[11,"from",E,E,62,[[[T]],[T]]],[11,"into",E,E,62,[[],[U]]],[11,R[16],E,E,62,[[["self"]],[T]]],[11,R[17],E,E,62,[[[T],["self"]]]],[11,R[11],E,E,62,[[[U]],[R[12]]]],[11,R[39],E,E,62,[[["self"]],[T]]],[11,R[13],E,E,62,[[["self"]],[T]]],[11,R[14],E,E,62,[[],[R[12]]]],[11,R[18],E,E,62,[[["self"]],[R[40]]]],[11,"from",E,E,208,[[[T]],[T]]],[11,"into",E,E,208,[[],[U]]],[11,R[16],E,E,208,[[["self"]],[T]]],[11,R[17],E,E,208,[[[T],["self"]]]],[11,R[170],E,E,208,[[["self"]],["string"]]],[11,R[11],E,E,208,[[[U]],[R[12]]]],[11,R[39],E,E,208,[[["self"]],[T]]],[11,R[13],E,E,208,[[["self"]],[T]]],[11,R[14],E,E,208,[[],[R[12]]]],[11,R[18],E,E,208,[[["self"]],[R[40]]]],[11,"from",E,E,63,[[[T]],[T]]],[11,"into",E,E,63,[[],[U]]],[11,R[16],E,E,63,[[["self"]],[T]]],[11,R[17],E,E,63,[[[T],["self"]]]],[11,R[11],E,E,63,[[[U]],[R[12]]]],[11,R[39],E,E,63,[[["self"]],[T]]],[11,R[13],E,E,63,[[["self"]],[T]]],[11,R[14],E,E,63,[[],[R[12]]]],[11,R[18],E,E,63,[[["self"]],[R[40]]]],[11,"span",E,E,64,[[["self"]],["span"]]],[11,"from",E,E,64,[[[T]],[T]]],[11,"into",E,E,64,[[],[U]]],[11,R[16],E,E,64,[[["self"]],[T]]],[11,R[17],E,E,64,[[[T],["self"]]]],[11,R[11],E,E,64,[[[U]],[R[12]]]],[11,R[39],E,E,64,[[["self"]],[T]]],[11,R[13],E,E,64,[[["self"]],[T]]],[11,R[14],E,E,64,[[],[R[12]]]],[11,R[18],E,E,64,[[["self"]],[R[40]]]],[11,"span",E,E,65,[[["self"]],["span"]]],[11,"from",E,E,65,[[[T]],[T]]],[11,"into",E,E,65,[[],[U]]],[11,R[16],E,E,65,[[["self"]],[T]]],[11,R[17],E,E,65,[[[T],["self"]]]],[11,R[11],E,E,65,[[[U]],[R[12]]]],[11,R[39],E,E,65,[[["self"]],[T]]],[11,R[13],E,E,65,[[["self"]],[T]]],[11,R[14],E,E,65,[[],[R[12]]]],[11,R[18],E,E,65,[[["self"]],[R[40]]]],[11,"span",E,E,66,[[["self"]],["span"]]],[11,"from",E,E,66,[[[T]],[T]]],[11,"into",E,E,66,[[],[U]]],[11,R[16],E,E,66,[[["self"]],[T]]],[11,R[17],E,E,66,[[[T],["self"]]]],[11,R[11],E,E,66,[[[U]],[R[12]]]],[11,R[39],E,E,66,[[["self"]],[T]]],[11,R[13],E,E,66,[[["self"]],[T]]],[11,R[14],E,E,66,[[],[R[12]]]],[11,R[18],E,E,66,[[["self"]],[R[40]]]],[11,"span",E,E,67,[[["self"]],["span"]]],[11,"from",E,E,67,[[[T]],[T]]],[11,"into",E,E,67,[[],[U]]],[11,R[16],E,E,67,[[["self"]],[T]]],[11,R[17],E,E,67,[[[T],["self"]]]],[11,R[11],E,E,67,[[[U]],[R[12]]]],[11,R[39],E,E,67,[[["self"]],[T]]],[11,R[13],E,E,67,[[["self"]],[T]]],[11,R[14],E,E,67,[[],[R[12]]]],[11,R[18],E,E,67,[[["self"]],[R[40]]]],[11,"span",E,E,68,[[["self"]],["span"]]],[11,"from",E,E,68,[[[T]],[T]]],[11,"into",E,E,68,[[],[U]]],[11,R[16],E,E,68,[[["self"]],[T]]],[11,R[17],E,E,68,[[[T],["self"]]]],[11,R[11],E,E,68,[[[U]],[R[12]]]],[11,R[39],E,E,68,[[["self"]],[T]]],[11,R[13],E,E,68,[[["self"]],[T]]],[11,R[14],E,E,68,[[],[R[12]]]],[11,R[18],E,E,68,[[["self"]],[R[40]]]],[11,"span",E,E,69,[[["self"]],["span"]]],[11,"from",E,E,69,[[[T]],[T]]],[11,"into",E,E,69,[[],[U]]],[11,R[16],E,E,69,[[["self"]],[T]]],[11,R[17],E,E,69,[[[T],["self"]]]],[11,R[11],E,E,69,[[[U]],[R[12]]]],[11,R[39],E,E,69,[[["self"]],[T]]],[11,R[13],E,E,69,[[["self"]],[T]]],[11,R[14],E,E,69,[[],[R[12]]]],[11,R[18],E,E,69,[[["self"]],[R[40]]]],[11,"span",E,E,70,[[["self"]],["span"]]],[11,"from",E,E,70,[[[T]],[T]]],[11,"into",E,E,70,[[],[U]]],[11,R[16],E,E,70,[[["self"]],[T]]],[11,R[17],E,E,70,[[[T],["self"]]]],[11,R[11],E,E,70,[[[U]],[R[12]]]],[11,R[39],E,E,70,[[["self"]],[T]]],[11,R[13],E,E,70,[[["self"]],[T]]],[11,R[14],E,E,70,[[],[R[12]]]],[11,R[18],E,E,70,[[["self"]],[R[40]]]],[11,"span",E,E,71,[[["self"]],["span"]]],[11,"from",E,E,71,[[[T]],[T]]],[11,"into",E,E,71,[[],[U]]],[11,R[16],E,E,71,[[["self"]],[T]]],[11,R[17],E,E,71,[[[T],["self"]]]],[11,R[11],E,E,71,[[[U]],[R[12]]]],[11,R[39],E,E,71,[[["self"]],[T]]],[11,R[13],E,E,71,[[["self"]],[T]]],[11,R[14],E,E,71,[[],[R[12]]]],[11,R[18],E,E,71,[[["self"]],[R[40]]]],[11,"span",E,E,72,[[["self"]],["span"]]],[11,"from",E,E,72,[[[T]],[T]]],[11,"into",E,E,72,[[],[U]]],[11,R[16],E,E,72,[[["self"]],[T]]],[11,R[17],E,E,72,[[[T],["self"]]]],[11,R[11],E,E,72,[[[U]],[R[12]]]],[11,R[39],E,E,72,[[["self"]],[T]]],[11,R[13],E,E,72,[[["self"]],[T]]],[11,R[14],E,E,72,[[],[R[12]]]],[11,R[18],E,E,72,[[["self"]],[R[40]]]],[11,"span",E,E,73,[[["self"]],["span"]]],[11,"from",E,E,73,[[[T]],[T]]],[11,"into",E,E,73,[[],[U]]],[11,R[16],E,E,73,[[["self"]],[T]]],[11,R[17],E,E,73,[[[T],["self"]]]],[11,R[11],E,E,73,[[[U]],[R[12]]]],[11,R[39],E,E,73,[[["self"]],[T]]],[11,R[13],E,E,73,[[["self"]],[T]]],[11,R[14],E,E,73,[[],[R[12]]]],[11,R[18],E,E,73,[[["self"]],[R[40]]]],[11,"from",E,E,74,[[[T]],[T]]],[11,"into",E,E,74,[[],[U]]],[11,R[16],E,E,74,[[["self"]],[T]]],[11,R[17],E,E,74,[[[T],["self"]]]],[11,R[11],E,E,74,[[[U]],[R[12]]]],[11,R[39],E,E,74,[[["self"]],[T]]],[11,R[13],E,E,74,[[["self"]],[T]]],[11,R[14],E,E,74,[[],[R[12]]]],[11,R[18],E,E,74,[[["self"]],[R[40]]]],[11,"from",E,E,75,[[[T]],[T]]],[11,"into",E,E,75,[[],[U]]],[11,R[16],E,E,75,[[["self"]],[T]]],[11,R[17],E,E,75,[[[T],["self"]]]],[11,R[11],E,E,75,[[[U]],[R[12]]]],[11,R[39],E,E,75,[[["self"]],[T]]],[11,R[13],E,E,75,[[["self"]],[T]]],[11,R[14],E,E,75,[[],[R[12]]]],[11,R[18],E,E,75,[[["self"]],[R[40]]]],[11,"peek",E,E,76,[[["cursor"]],["bool"]]],[11,"display",E,E,76,[[],["str"]]],[11,"span",E,E,76,[[["self"]],["span"]]],[11,"from",E,E,76,[[[T]],[T]]],[11,"into",E,E,76,[[],[U]]],[11,R[16],E,E,76,[[["self"]],[T]]],[11,R[17],E,E,76,[[[T],["self"]]]],[11,R[11],E,E,76,[[[U]],[R[12]]]],[11,R[39],E,E,76,[[["self"]],[T]]],[11,R[13],E,E,76,[[["self"]],[T]]],[11,R[14],E,E,76,[[],[R[12]]]],[11,R[18],E,E,76,[[["self"]],[R[40]]]],[11,"from",E,E,77,[[[T]],[T]]],[11,"into",E,E,77,[[],[U]]],[11,R[16],E,E,77,[[["self"]],[T]]],[11,R[17],E,E,77,[[[T],["self"]]]],[11,R[11],E,E,77,[[[U]],[R[12]]]],[11,R[39],E,E,77,[[["self"]],[T]]],[11,R[13],E,E,77,[[["self"]],[T]]],[11,R[14],E,E,77,[[],[R[12]]]],[11,R[18],E,E,77,[[["self"]],[R[40]]]],[11,"from",E,E,78,[[[T]],[T]]],[11,"into",E,E,78,[[],[U]]],[11,R[16],E,E,78,[[["self"]],[T]]],[11,R[17],E,E,78,[[[T],["self"]]]],[11,R[11],E,E,78,[[[U]],[R[12]]]],[11,R[39],E,E,78,[[["self"]],[T]]],[11,R[13],E,E,78,[[["self"]],[T]]],[11,R[14],E,E,78,[[],[R[12]]]],[11,R[18],E,E,78,[[["self"]],[R[40]]]],[11,"from",E,E,79,[[[T]],[T]]],[11,"into",E,E,79,[[],[U]]],[11,R[16],E,E,79,[[["self"]],[T]]],[11,R[17],E,E,79,[[[T],["self"]]]],[11,R[11],E,E,79,[[[U]],[R[12]]]],[11,R[39],E,E,79,[[["self"]],[T]]],[11,R[13],E,E,79,[[["self"]],[T]]],[11,R[14],E,E,79,[[],[R[12]]]],[11,R[18],E,E,79,[[["self"]],[R[40]]]],[11,"span",E,E,80,[[["self"]],["span"]]],[11,"from",E,E,80,[[[T]],[T]]],[11,"into",E,E,80,[[],[U]]],[11,R[16],E,E,80,[[["self"]],[T]]],[11,R[17],E,E,80,[[[T],["self"]]]],[11,R[11],E,E,80,[[[U]],[R[12]]]],[11,R[39],E,E,80,[[["self"]],[T]]],[11,R[13],E,E,80,[[["self"]],[T]]],[11,R[14],E,E,80,[[],[R[12]]]],[11,R[18],E,E,80,[[["self"]],[R[40]]]],[11,"span",E,E,81,[[["self"]],["span"]]],[11,"from",E,E,81,[[[T]],[T]]],[11,"into",E,E,81,[[],[U]]],[11,R[16],E,E,81,[[["self"]],[T]]],[11,R[17],E,E,81,[[[T],["self"]]]],[11,R[11],E,E,81,[[[U]],[R[12]]]],[11,R[39],E,E,81,[[["self"]],[T]]],[11,R[13],E,E,81,[[["self"]],[T]]],[11,R[14],E,E,81,[[],[R[12]]]],[11,R[18],E,E,81,[[["self"]],[R[40]]]],[11,"span",E,E,82,[[["self"]],["span"]]],[11,"from",E,E,82,[[[T]],[T]]],[11,"into",E,E,82,[[],[U]]],[11,R[16],E,E,82,[[["self"]],[T]]],[11,R[17],E,E,82,[[[T],["self"]]]],[11,R[11],E,E,82,[[[U]],[R[12]]]],[11,R[39],E,E,82,[[["self"]],[T]]],[11,R[13],E,E,82,[[["self"]],[T]]],[11,R[14],E,E,82,[[],[R[12]]]],[11,R[18],E,E,82,[[["self"]],[R[40]]]],[11,"span",E,E,83,[[["self"]],["span"]]],[11,"from",E,E,83,[[[T]],[T]]],[11,"into",E,E,83,[[],[U]]],[11,R[16],E,E,83,[[["self"]],[T]]],[11,R[17],E,E,83,[[[T],["self"]]]],[11,R[11],E,E,83,[[[U]],[R[12]]]],[11,R[39],E,E,83,[[["self"]],[T]]],[11,R[13],E,E,83,[[["self"]],[T]]],[11,R[14],E,E,83,[[],[R[12]]]],[11,R[18],E,E,83,[[["self"]],[R[40]]]],[11,"span",E,E,84,[[["self"]],["span"]]],[11,"from",E,E,84,[[[T]],[T]]],[11,"into",E,E,84,[[],[U]]],[11,R[16],E,E,84,[[["self"]],[T]]],[11,R[17],E,E,84,[[[T],["self"]]]],[11,R[11],E,E,84,[[[U]],[R[12]]]],[11,R[39],E,E,84,[[["self"]],[T]]],[11,R[13],E,E,84,[[["self"]],[T]]],[11,R[14],E,E,84,[[],[R[12]]]],[11,R[18],E,E,84,[[["self"]],[R[40]]]],[11,"span",E,E,85,[[["self"]],["span"]]],[11,"from",E,E,85,[[[T]],[T]]],[11,"into",E,E,85,[[],[U]]],[11,R[16],E,E,85,[[["self"]],[T]]],[11,R[17],E,E,85,[[[T],["self"]]]],[11,R[11],E,E,85,[[[U]],[R[12]]]],[11,R[39],E,E,85,[[["self"]],[T]]],[11,R[13],E,E,85,[[["self"]],[T]]],[11,R[14],E,E,85,[[],[R[12]]]],[11,R[18],E,E,85,[[["self"]],[R[40]]]],[11,"span",E,E,86,[[["self"]],["span"]]],[11,"from",E,E,86,[[[T]],[T]]],[11,"into",E,E,86,[[],[U]]],[11,R[16],E,E,86,[[["self"]],[T]]],[11,R[17],E,E,86,[[[T],["self"]]]],[11,R[11],E,E,86,[[[U]],[R[12]]]],[11,R[39],E,E,86,[[["self"]],[T]]],[11,R[13],E,E,86,[[["self"]],[T]]],[11,R[14],E,E,86,[[],[R[12]]]],[11,R[18],E,E,86,[[["self"]],[R[40]]]],[11,"peek",R[3156],E,87,[[["cursor"]],["bool"]]],[11,"display",E,E,87,[[],["str"]]],[11,"span",E,E,87,[[["self"]],["span"]]],[11,"from",E,E,87,[[[T]],[T]]],[11,"into",E,E,87,[[],[U]]],[11,R[16],E,E,87,[[["self"]],[T]]],[11,R[17],E,E,87,[[[T],["self"]]]],[11,R[11],E,E,87,[[[U]],[R[12]]]],[11,R[39],E,E,87,[[["self"]],[T]]],[11,R[13],E,E,87,[[["self"]],[T]]],[11,R[14],E,E,87,[[],[R[12]]]],[11,R[18],E,E,87,[[["self"]],[R[40]]]],[11,"peek",E,E,88,[[["cursor"]],["bool"]]],[11,"display",E,E,88,[[],["str"]]],[11,"span",E,E,88,[[["self"]],["span"]]],[11,"from",E,E,88,[[[T]],[T]]],[11,"into",E,E,88,[[],[U]]],[11,R[16],E,E,88,[[["self"]],[T]]],[11,R[17],E,E,88,[[[T],["self"]]]],[11,R[11],E,E,88,[[[U]],[R[12]]]],[11,R[39],E,E,88,[[["self"]],[T]]],[11,R[13],E,E,88,[[["self"]],[T]]],[11,R[14],E,E,88,[[],[R[12]]]],[11,R[18],E,E,88,[[["self"]],[R[40]]]],[11,"peek",E,E,89,[[["cursor"]],["bool"]]],[11,"display",E,E,89,[[],["str"]]],[11,"span",E,E,89,[[["self"]],["span"]]],[11,"from",E,E,89,[[[T]],[T]]],[11,"into",E,E,89,[[],[U]]],[11,R[16],E,E,89,[[["self"]],[T]]],[11,R[17],E,E,89,[[[T],["self"]]]],[11,R[11],E,E,89,[[[U]],[R[12]]]],[11,R[39],E,E,89,[[["self"]],[T]]],[11,R[13],E,E,89,[[["self"]],[T]]],[11,R[14],E,E,89,[[],[R[12]]]],[11,R[18],E,E,89,[[["self"]],[R[40]]]],[11,"peek",E,E,90,[[["cursor"]],["bool"]]],[11,"display",E,E,90,[[],["str"]]],[11,"span",E,E,90,[[["self"]],["span"]]],[11,"from",E,E,90,[[[T]],[T]]],[11,"into",E,E,90,[[],[U]]],[11,R[16],E,E,90,[[["self"]],[T]]],[11,R[17],E,E,90,[[[T],["self"]]]],[11,R[11],E,E,90,[[[U]],[R[12]]]],[11,R[39],E,E,90,[[["self"]],[T]]],[11,R[13],E,E,90,[[["self"]],[T]]],[11,R[14],E,E,90,[[],[R[12]]]],[11,R[18],E,E,90,[[["self"]],[R[40]]]],[11,"peek",E,E,91,[[["cursor"]],["bool"]]],[11,"display",E,E,91,[[],["str"]]],[11,"span",E,E,91,[[["self"]],["span"]]],[11,"from",E,E,91,[[[T]],[T]]],[11,"into",E,E,91,[[],[U]]],[11,R[16],E,E,91,[[["self"]],[T]]],[11,R[17],E,E,91,[[[T],["self"]]]],[11,R[11],E,E,91,[[[U]],[R[12]]]],[11,R[39],E,E,91,[[["self"]],[T]]],[11,R[13],E,E,91,[[["self"]],[T]]],[11,R[14],E,E,91,[[],[R[12]]]],[11,R[18],E,E,91,[[["self"]],[R[40]]]],[11,"peek",E,E,92,[[["cursor"]],["bool"]]],[11,"display",E,E,92,[[],["str"]]],[11,"span",E,E,92,[[["self"]],["span"]]],[11,"from",E,E,92,[[[T]],[T]]],[11,"into",E,E,92,[[],[U]]],[11,R[16],E,E,92,[[["self"]],[T]]],[11,R[17],E,E,92,[[[T],["self"]]]],[11,R[11],E,E,92,[[[U]],[R[12]]]],[11,R[39],E,E,92,[[["self"]],[T]]],[11,R[13],E,E,92,[[["self"]],[T]]],[11,R[14],E,E,92,[[],[R[12]]]],[11,R[18],E,E,92,[[["self"]],[R[40]]]],[11,"peek",E,E,93,[[["cursor"]],["bool"]]],[11,"display",E,E,93,[[],["str"]]],[11,"span",E,E,93,[[["self"]],["span"]]],[11,"from",E,E,93,[[[T]],[T]]],[11,"into",E,E,93,[[],[U]]],[11,R[16],E,E,93,[[["self"]],[T]]],[11,R[17],E,E,93,[[[T],["self"]]]],[11,R[11],E,E,93,[[[U]],[R[12]]]],[11,R[39],E,E,93,[[["self"]],[T]]],[11,R[13],E,E,93,[[["self"]],[T]]],[11,R[14],E,E,93,[[],[R[12]]]],[11,R[18],E,E,93,[[["self"]],[R[40]]]],[11,"peek",E,E,94,[[["cursor"]],["bool"]]],[11,"display",E,E,94,[[],["str"]]],[11,"span",E,E,94,[[["self"]],["span"]]],[11,"from",E,E,94,[[[T]],[T]]],[11,"into",E,E,94,[[],[U]]],[11,R[16],E,E,94,[[["self"]],[T]]],[11,R[17],E,E,94,[[[T],["self"]]]],[11,R[11],E,E,94,[[[U]],[R[12]]]],[11,R[39],E,E,94,[[["self"]],[T]]],[11,R[13],E,E,94,[[["self"]],[T]]],[11,R[14],E,E,94,[[],[R[12]]]],[11,R[18],E,E,94,[[["self"]],[R[40]]]],[11,"peek",E,E,95,[[["cursor"]],["bool"]]],[11,"display",E,E,95,[[],["str"]]],[11,"span",E,E,95,[[["self"]],["span"]]],[11,"from",E,E,95,[[[T]],[T]]],[11,"into",E,E,95,[[],[U]]],[11,R[16],E,E,95,[[["self"]],[T]]],[11,R[17],E,E,95,[[[T],["self"]]]],[11,R[11],E,E,95,[[[U]],[R[12]]]],[11,R[39],E,E,95,[[["self"]],[T]]],[11,R[13],E,E,95,[[["self"]],[T]]],[11,R[14],E,E,95,[[],[R[12]]]],[11,R[18],E,E,95,[[["self"]],[R[40]]]],[11,"peek",E,E,96,[[["cursor"]],["bool"]]],[11,"display",E,E,96,[[],["str"]]],[11,"span",E,E,96,[[["self"]],["span"]]],[11,"from",E,E,96,[[[T]],[T]]],[11,"into",E,E,96,[[],[U]]],[11,R[16],E,E,96,[[["self"]],[T]]],[11,R[17],E,E,96,[[[T],["self"]]]],[11,R[11],E,E,96,[[[U]],[R[12]]]],[11,R[39],E,E,96,[[["self"]],[T]]],[11,R[13],E,E,96,[[["self"]],[T]]],[11,R[14],E,E,96,[[],[R[12]]]],[11,R[18],E,E,96,[[["self"]],[R[40]]]],[11,"peek",E,E,97,[[["cursor"]],["bool"]]],[11,"display",E,E,97,[[],["str"]]],[11,"span",E,E,97,[[["self"]],["span"]]],[11,"from",E,E,97,[[[T]],[T]]],[11,"into",E,E,97,[[],[U]]],[11,R[16],E,E,97,[[["self"]],[T]]],[11,R[17],E,E,97,[[[T],["self"]]]],[11,R[11],E,E,97,[[[U]],[R[12]]]],[11,R[39],E,E,97,[[["self"]],[T]]],[11,R[13],E,E,97,[[["self"]],[T]]],[11,R[14],E,E,97,[[],[R[12]]]],[11,R[18],E,E,97,[[["self"]],[R[40]]]],[11,"peek",E,E,98,[[["cursor"]],["bool"]]],[11,"display",E,E,98,[[],["str"]]],[11,"span",E,E,98,[[["self"]],["span"]]],[11,"from",E,E,98,[[[T]],[T]]],[11,"into",E,E,98,[[],[U]]],[11,R[16],E,E,98,[[["self"]],[T]]],[11,R[17],E,E,98,[[[T],["self"]]]],[11,R[11],E,E,98,[[[U]],[R[12]]]],[11,R[39],E,E,98,[[["self"]],[T]]],[11,R[13],E,E,98,[[["self"]],[T]]],[11,R[14],E,E,98,[[],[R[12]]]],[11,R[18],E,E,98,[[["self"]],[R[40]]]],[11,"peek",E,E,99,[[["cursor"]],["bool"]]],[11,"display",E,E,99,[[],["str"]]],[11,"span",E,E,99,[[["self"]],["span"]]],[11,"from",E,E,99,[[[T]],[T]]],[11,"into",E,E,99,[[],[U]]],[11,R[16],E,E,99,[[["self"]],[T]]],[11,R[17],E,E,99,[[[T],["self"]]]],[11,R[11],E,E,99,[[[U]],[R[12]]]],[11,R[39],E,E,99,[[["self"]],[T]]],[11,R[13],E,E,99,[[["self"]],[T]]],[11,R[14],E,E,99,[[],[R[12]]]],[11,R[18],E,E,99,[[["self"]],[R[40]]]],[11,"peek",E,E,100,[[["cursor"]],["bool"]]],[11,"display",E,E,100,[[],["str"]]],[11,"span",E,E,100,[[["self"]],["span"]]],[11,"from",E,E,100,[[[T]],[T]]],[11,"into",E,E,100,[[],[U]]],[11,R[16],E,E,100,[[["self"]],[T]]],[11,R[17],E,E,100,[[[T],["self"]]]],[11,R[11],E,E,100,[[[U]],[R[12]]]],[11,R[39],E,E,100,[[["self"]],[T]]],[11,R[13],E,E,100,[[["self"]],[T]]],[11,R[14],E,E,100,[[],[R[12]]]],[11,R[18],E,E,100,[[["self"]],[R[40]]]],[11,"peek",E,E,101,[[["cursor"]],["bool"]]],[11,"display",E,E,101,[[],["str"]]],[11,"span",E,E,101,[[["self"]],["span"]]],[11,"from",E,E,101,[[[T]],[T]]],[11,"into",E,E,101,[[],[U]]],[11,R[16],E,E,101,[[["self"]],[T]]],[11,R[17],E,E,101,[[[T],["self"]]]],[11,R[11],E,E,101,[[[U]],[R[12]]]],[11,R[39],E,E,101,[[["self"]],[T]]],[11,R[13],E,E,101,[[["self"]],[T]]],[11,R[14],E,E,101,[[],[R[12]]]],[11,R[18],E,E,101,[[["self"]],[R[40]]]],[11,"peek",E,E,102,[[["cursor"]],["bool"]]],[11,"display",E,E,102,[[],["str"]]],[11,"span",E,E,102,[[["self"]],["span"]]],[11,"from",E,E,102,[[[T]],[T]]],[11,"into",E,E,102,[[],[U]]],[11,R[16],E,E,102,[[["self"]],[T]]],[11,R[17],E,E,102,[[[T],["self"]]]],[11,R[11],E,E,102,[[[U]],[R[12]]]],[11,R[39],E,E,102,[[["self"]],[T]]],[11,R[13],E,E,102,[[["self"]],[T]]],[11,R[14],E,E,102,[[],[R[12]]]],[11,R[18],E,E,102,[[["self"]],[R[40]]]],[11,"peek",E,E,103,[[["cursor"]],["bool"]]],[11,"display",E,E,103,[[],["str"]]],[11,"span",E,E,103,[[["self"]],["span"]]],[11,"from",E,E,103,[[[T]],[T]]],[11,"into",E,E,103,[[],[U]]],[11,R[16],E,E,103,[[["self"]],[T]]],[11,R[17],E,E,103,[[[T],["self"]]]],[11,R[11],E,E,103,[[[U]],[R[12]]]],[11,R[39],E,E,103,[[["self"]],[T]]],[11,R[13],E,E,103,[[["self"]],[T]]],[11,R[14],E,E,103,[[],[R[12]]]],[11,R[18],E,E,103,[[["self"]],[R[40]]]],[11,"peek",E,E,104,[[["cursor"]],["bool"]]],[11,"display",E,E,104,[[],["str"]]],[11,"span",E,E,104,[[["self"]],["span"]]],[11,"from",E,E,104,[[[T]],[T]]],[11,"into",E,E,104,[[],[U]]],[11,R[16],E,E,104,[[["self"]],[T]]],[11,R[17],E,E,104,[[[T],["self"]]]],[11,R[11],E,E,104,[[[U]],[R[12]]]],[11,R[39],E,E,104,[[["self"]],[T]]],[11,R[13],E,E,104,[[["self"]],[T]]],[11,R[14],E,E,104,[[],[R[12]]]],[11,R[18],E,E,104,[[["self"]],[R[40]]]],[11,"peek",E,E,105,[[["cursor"]],["bool"]]],[11,"display",E,E,105,[[],["str"]]],[11,"span",E,E,105,[[["self"]],["span"]]],[11,"from",E,E,105,[[[T]],[T]]],[11,"into",E,E,105,[[],[U]]],[11,R[16],E,E,105,[[["self"]],[T]]],[11,R[17],E,E,105,[[[T],["self"]]]],[11,R[11],E,E,105,[[[U]],[R[12]]]],[11,R[39],E,E,105,[[["self"]],[T]]],[11,R[13],E,E,105,[[["self"]],[T]]],[11,R[14],E,E,105,[[],[R[12]]]],[11,R[18],E,E,105,[[["self"]],[R[40]]]],[11,"peek",E,E,106,[[["cursor"]],["bool"]]],[11,"display",E,E,106,[[],["str"]]],[11,"span",E,E,106,[[["self"]],["span"]]],[11,"from",E,E,106,[[[T]],[T]]],[11,"into",E,E,106,[[],[U]]],[11,R[16],E,E,106,[[["self"]],[T]]],[11,R[17],E,E,106,[[[T],["self"]]]],[11,R[11],E,E,106,[[[U]],[R[12]]]],[11,R[39],E,E,106,[[["self"]],[T]]],[11,R[13],E,E,106,[[["self"]],[T]]],[11,R[14],E,E,106,[[],[R[12]]]],[11,R[18],E,E,106,[[["self"]],[R[40]]]],[11,"peek",E,E,107,[[["cursor"]],["bool"]]],[11,"display",E,E,107,[[],["str"]]],[11,"span",E,E,107,[[["self"]],["span"]]],[11,"from",E,E,107,[[[T]],[T]]],[11,"into",E,E,107,[[],[U]]],[11,R[16],E,E,107,[[["self"]],[T]]],[11,R[17],E,E,107,[[[T],["self"]]]],[11,R[11],E,E,107,[[[U]],[R[12]]]],[11,R[39],E,E,107,[[["self"]],[T]]],[11,R[13],E,E,107,[[["self"]],[T]]],[11,R[14],E,E,107,[[],[R[12]]]],[11,R[18],E,E,107,[[["self"]],[R[40]]]],[11,"peek",E,E,108,[[["cursor"]],["bool"]]],[11,"display",E,E,108,[[],["str"]]],[11,"span",E,E,108,[[["self"]],["span"]]],[11,"from",E,E,108,[[[T]],[T]]],[11,"into",E,E,108,[[],[U]]],[11,R[16],E,E,108,[[["self"]],[T]]],[11,R[17],E,E,108,[[[T],["self"]]]],[11,R[11],E,E,108,[[[U]],[R[12]]]],[11,R[39],E,E,108,[[["self"]],[T]]],[11,R[13],E,E,108,[[["self"]],[T]]],[11,R[14],E,E,108,[[],[R[12]]]],[11,R[18],E,E,108,[[["self"]],[R[40]]]],[11,"peek",E,E,109,[[["cursor"]],["bool"]]],[11,"display",E,E,109,[[],["str"]]],[11,"span",E,E,109,[[["self"]],["span"]]],[11,"from",E,E,109,[[[T]],[T]]],[11,"into",E,E,109,[[],[U]]],[11,R[16],E,E,109,[[["self"]],[T]]],[11,R[17],E,E,109,[[[T],["self"]]]],[11,R[11],E,E,109,[[[U]],[R[12]]]],[11,R[39],E,E,109,[[["self"]],[T]]],[11,R[13],E,E,109,[[["self"]],[T]]],[11,R[14],E,E,109,[[],[R[12]]]],[11,R[18],E,E,109,[[["self"]],[R[40]]]],[11,"peek",E,E,110,[[["cursor"]],["bool"]]],[11,"display",E,E,110,[[],["str"]]],[11,"span",E,E,110,[[["self"]],["span"]]],[11,"from",E,E,110,[[[T]],[T]]],[11,"into",E,E,110,[[],[U]]],[11,R[16],E,E,110,[[["self"]],[T]]],[11,R[17],E,E,110,[[[T],["self"]]]],[11,R[11],E,E,110,[[[U]],[R[12]]]],[11,R[39],E,E,110,[[["self"]],[T]]],[11,R[13],E,E,110,[[["self"]],[T]]],[11,R[14],E,E,110,[[],[R[12]]]],[11,R[18],E,E,110,[[["self"]],[R[40]]]],[11,"peek",E,E,111,[[["cursor"]],["bool"]]],[11,"display",E,E,111,[[],["str"]]],[11,"span",E,E,111,[[["self"]],["span"]]],[11,"from",E,E,111,[[[T]],[T]]],[11,"into",E,E,111,[[],[U]]],[11,R[16],E,E,111,[[["self"]],[T]]],[11,R[17],E,E,111,[[[T],["self"]]]],[11,R[11],E,E,111,[[[U]],[R[12]]]],[11,R[39],E,E,111,[[["self"]],[T]]],[11,R[13],E,E,111,[[["self"]],[T]]],[11,R[14],E,E,111,[[],[R[12]]]],[11,R[18],E,E,111,[[["self"]],[R[40]]]],[11,"peek",E,E,112,[[["cursor"]],["bool"]]],[11,"display",E,E,112,[[],["str"]]],[11,"span",E,E,112,[[["self"]],["span"]]],[11,"from",E,E,112,[[[T]],[T]]],[11,"into",E,E,112,[[],[U]]],[11,R[16],E,E,112,[[["self"]],[T]]],[11,R[17],E,E,112,[[[T],["self"]]]],[11,R[11],E,E,112,[[[U]],[R[12]]]],[11,R[39],E,E,112,[[["self"]],[T]]],[11,R[13],E,E,112,[[["self"]],[T]]],[11,R[14],E,E,112,[[],[R[12]]]],[11,R[18],E,E,112,[[["self"]],[R[40]]]],[11,"peek",E,E,113,[[["cursor"]],["bool"]]],[11,"display",E,E,113,[[],["str"]]],[11,"span",E,E,113,[[["self"]],["span"]]],[11,"from",E,E,113,[[[T]],[T]]],[11,"into",E,E,113,[[],[U]]],[11,R[16],E,E,113,[[["self"]],[T]]],[11,R[17],E,E,113,[[[T],["self"]]]],[11,R[11],E,E,113,[[[U]],[R[12]]]],[11,R[39],E,E,113,[[["self"]],[T]]],[11,R[13],E,E,113,[[["self"]],[T]]],[11,R[14],E,E,113,[[],[R[12]]]],[11,R[18],E,E,113,[[["self"]],[R[40]]]],[11,"peek",E,E,114,[[["cursor"]],["bool"]]],[11,"display",E,E,114,[[],["str"]]],[11,"span",E,E,114,[[["self"]],["span"]]],[11,"from",E,E,114,[[[T]],[T]]],[11,"into",E,E,114,[[],[U]]],[11,R[16],E,E,114,[[["self"]],[T]]],[11,R[17],E,E,114,[[[T],["self"]]]],[11,R[11],E,E,114,[[[U]],[R[12]]]],[11,R[39],E,E,114,[[["self"]],[T]]],[11,R[13],E,E,114,[[["self"]],[T]]],[11,R[14],E,E,114,[[],[R[12]]]],[11,R[18],E,E,114,[[["self"]],[R[40]]]],[11,"peek",E,E,115,[[["cursor"]],["bool"]]],[11,"display",E,E,115,[[],["str"]]],[11,"span",E,E,115,[[["self"]],["span"]]],[11,"from",E,E,115,[[[T]],[T]]],[11,"into",E,E,115,[[],[U]]],[11,R[16],E,E,115,[[["self"]],[T]]],[11,R[17],E,E,115,[[[T],["self"]]]],[11,R[11],E,E,115,[[[U]],[R[12]]]],[11,R[39],E,E,115,[[["self"]],[T]]],[11,R[13],E,E,115,[[["self"]],[T]]],[11,R[14],E,E,115,[[],[R[12]]]],[11,R[18],E,E,115,[[["self"]],[R[40]]]],[11,"peek",E,E,116,[[["cursor"]],["bool"]]],[11,"display",E,E,116,[[],["str"]]],[11,"span",E,E,116,[[["self"]],["span"]]],[11,"from",E,E,116,[[[T]],[T]]],[11,"into",E,E,116,[[],[U]]],[11,R[16],E,E,116,[[["self"]],[T]]],[11,R[17],E,E,116,[[[T],["self"]]]],[11,R[11],E,E,116,[[[U]],[R[12]]]],[11,R[39],E,E,116,[[["self"]],[T]]],[11,R[13],E,E,116,[[["self"]],[T]]],[11,R[14],E,E,116,[[],[R[12]]]],[11,R[18],E,E,116,[[["self"]],[R[40]]]],[11,"peek",E,E,117,[[["cursor"]],["bool"]]],[11,"display",E,E,117,[[],["str"]]],[11,"span",E,E,117,[[["self"]],["span"]]],[11,"from",E,E,117,[[[T]],[T]]],[11,"into",E,E,117,[[],[U]]],[11,R[16],E,E,117,[[["self"]],[T]]],[11,R[17],E,E,117,[[[T],["self"]]]],[11,R[11],E,E,117,[[[U]],[R[12]]]],[11,R[39],E,E,117,[[["self"]],[T]]],[11,R[13],E,E,117,[[["self"]],[T]]],[11,R[14],E,E,117,[[],[R[12]]]],[11,R[18],E,E,117,[[["self"]],[R[40]]]],[11,"peek",E,E,118,[[["cursor"]],["bool"]]],[11,"display",E,E,118,[[],["str"]]],[11,"span",E,E,118,[[["self"]],["span"]]],[11,"from",E,E,118,[[[T]],[T]]],[11,"into",E,E,118,[[],[U]]],[11,R[16],E,E,118,[[["self"]],[T]]],[11,R[17],E,E,118,[[[T],["self"]]]],[11,R[11],E,E,118,[[[U]],[R[12]]]],[11,R[39],E,E,118,[[["self"]],[T]]],[11,R[13],E,E,118,[[["self"]],[T]]],[11,R[14],E,E,118,[[],[R[12]]]],[11,R[18],E,E,118,[[["self"]],[R[40]]]],[11,"peek",E,E,119,[[["cursor"]],["bool"]]],[11,"display",E,E,119,[[],["str"]]],[11,"span",E,E,119,[[["self"]],["span"]]],[11,"from",E,E,119,[[[T]],[T]]],[11,"into",E,E,119,[[],[U]]],[11,R[16],E,E,119,[[["self"]],[T]]],[11,R[17],E,E,119,[[[T],["self"]]]],[11,R[11],E,E,119,[[[U]],[R[12]]]],[11,R[39],E,E,119,[[["self"]],[T]]],[11,R[13],E,E,119,[[["self"]],[T]]],[11,R[14],E,E,119,[[],[R[12]]]],[11,R[18],E,E,119,[[["self"]],[R[40]]]],[11,"peek",E,E,120,[[["cursor"]],["bool"]]],[11,"display",E,E,120,[[],["str"]]],[11,"span",E,E,120,[[["self"]],["span"]]],[11,"from",E,E,120,[[[T]],[T]]],[11,"into",E,E,120,[[],[U]]],[11,R[16],E,E,120,[[["self"]],[T]]],[11,R[17],E,E,120,[[[T],["self"]]]],[11,R[11],E,E,120,[[[U]],[R[12]]]],[11,R[39],E,E,120,[[["self"]],[T]]],[11,R[13],E,E,120,[[["self"]],[T]]],[11,R[14],E,E,120,[[],[R[12]]]],[11,R[18],E,E,120,[[["self"]],[R[40]]]],[11,"peek",E,E,121,[[["cursor"]],["bool"]]],[11,"display",E,E,121,[[],["str"]]],[11,"span",E,E,121,[[["self"]],["span"]]],[11,"from",E,E,121,[[[T]],[T]]],[11,"into",E,E,121,[[],[U]]],[11,R[16],E,E,121,[[["self"]],[T]]],[11,R[17],E,E,121,[[[T],["self"]]]],[11,R[11],E,E,121,[[[U]],[R[12]]]],[11,R[39],E,E,121,[[["self"]],[T]]],[11,R[13],E,E,121,[[["self"]],[T]]],[11,R[14],E,E,121,[[],[R[12]]]],[11,R[18],E,E,121,[[["self"]],[R[40]]]],[11,"peek",E,E,122,[[["cursor"]],["bool"]]],[11,"display",E,E,122,[[],["str"]]],[11,"span",E,E,122,[[["self"]],["span"]]],[11,"from",E,E,122,[[[T]],[T]]],[11,"into",E,E,122,[[],[U]]],[11,R[16],E,E,122,[[["self"]],[T]]],[11,R[17],E,E,122,[[[T],["self"]]]],[11,R[11],E,E,122,[[[U]],[R[12]]]],[11,R[39],E,E,122,[[["self"]],[T]]],[11,R[13],E,E,122,[[["self"]],[T]]],[11,R[14],E,E,122,[[],[R[12]]]],[11,R[18],E,E,122,[[["self"]],[R[40]]]],[11,"peek",E,E,123,[[["cursor"]],["bool"]]],[11,"display",E,E,123,[[],["str"]]],[11,"span",E,E,123,[[["self"]],["span"]]],[11,"from",E,E,123,[[[T]],[T]]],[11,"into",E,E,123,[[],[U]]],[11,R[16],E,E,123,[[["self"]],[T]]],[11,R[17],E,E,123,[[[T],["self"]]]],[11,R[11],E,E,123,[[[U]],[R[12]]]],[11,R[39],E,E,123,[[["self"]],[T]]],[11,R[13],E,E,123,[[["self"]],[T]]],[11,R[14],E,E,123,[[],[R[12]]]],[11,R[18],E,E,123,[[["self"]],[R[40]]]],[11,"peek",E,E,124,[[["cursor"]],["bool"]]],[11,"display",E,E,124,[[],["str"]]],[11,"span",E,E,124,[[["self"]],["span"]]],[11,"from",E,E,124,[[[T]],[T]]],[11,"into",E,E,124,[[],[U]]],[11,R[16],E,E,124,[[["self"]],[T]]],[11,R[17],E,E,124,[[[T],["self"]]]],[11,R[11],E,E,124,[[[U]],[R[12]]]],[11,R[39],E,E,124,[[["self"]],[T]]],[11,R[13],E,E,124,[[["self"]],[T]]],[11,R[14],E,E,124,[[],[R[12]]]],[11,R[18],E,E,124,[[["self"]],[R[40]]]],[11,"peek",E,E,125,[[["cursor"]],["bool"]]],[11,"display",E,E,125,[[],["str"]]],[11,"span",E,E,125,[[["self"]],["span"]]],[11,"from",E,E,125,[[[T]],[T]]],[11,"into",E,E,125,[[],[U]]],[11,R[16],E,E,125,[[["self"]],[T]]],[11,R[17],E,E,125,[[[T],["self"]]]],[11,R[11],E,E,125,[[[U]],[R[12]]]],[11,R[39],E,E,125,[[["self"]],[T]]],[11,R[13],E,E,125,[[["self"]],[T]]],[11,R[14],E,E,125,[[],[R[12]]]],[11,R[18],E,E,125,[[["self"]],[R[40]]]],[11,"peek",E,E,126,[[["cursor"]],["bool"]]],[11,"display",E,E,126,[[],["str"]]],[11,"span",E,E,126,[[["self"]],["span"]]],[11,"from",E,E,126,[[[T]],[T]]],[11,"into",E,E,126,[[],[U]]],[11,R[16],E,E,126,[[["self"]],[T]]],[11,R[17],E,E,126,[[[T],["self"]]]],[11,R[11],E,E,126,[[[U]],[R[12]]]],[11,R[39],E,E,126,[[["self"]],[T]]],[11,R[13],E,E,126,[[["self"]],[T]]],[11,R[14],E,E,126,[[],[R[12]]]],[11,R[18],E,E,126,[[["self"]],[R[40]]]],[11,"peek",E,E,127,[[["cursor"]],["bool"]]],[11,"display",E,E,127,[[],["str"]]],[11,"span",E,E,127,[[["self"]],["span"]]],[11,"from",E,E,127,[[[T]],[T]]],[11,"into",E,E,127,[[],[U]]],[11,R[16],E,E,127,[[["self"]],[T]]],[11,R[17],E,E,127,[[[T],["self"]]]],[11,R[11],E,E,127,[[[U]],[R[12]]]],[11,R[39],E,E,127,[[["self"]],[T]]],[11,R[13],E,E,127,[[["self"]],[T]]],[11,R[14],E,E,127,[[],[R[12]]]],[11,R[18],E,E,127,[[["self"]],[R[40]]]],[11,"peek",E,E,128,[[["cursor"]],["bool"]]],[11,"display",E,E,128,[[],["str"]]],[11,"span",E,E,128,[[["self"]],["span"]]],[11,"from",E,E,128,[[[T]],[T]]],[11,"into",E,E,128,[[],[U]]],[11,R[16],E,E,128,[[["self"]],[T]]],[11,R[17],E,E,128,[[[T],["self"]]]],[11,R[11],E,E,128,[[[U]],[R[12]]]],[11,R[39],E,E,128,[[["self"]],[T]]],[11,R[13],E,E,128,[[["self"]],[T]]],[11,R[14],E,E,128,[[],[R[12]]]],[11,R[18],E,E,128,[[["self"]],[R[40]]]],[11,"peek",E,E,129,[[["cursor"]],["bool"]]],[11,"display",E,E,129,[[],["str"]]],[11,"span",E,E,129,[[["self"]],["span"]]],[11,"from",E,E,129,[[[T]],[T]]],[11,"into",E,E,129,[[],[U]]],[11,R[16],E,E,129,[[["self"]],[T]]],[11,R[17],E,E,129,[[[T],["self"]]]],[11,R[11],E,E,129,[[[U]],[R[12]]]],[11,R[39],E,E,129,[[["self"]],[T]]],[11,R[13],E,E,129,[[["self"]],[T]]],[11,R[14],E,E,129,[[],[R[12]]]],[11,R[18],E,E,129,[[["self"]],[R[40]]]],[11,"peek",E,E,130,[[["cursor"]],["bool"]]],[11,"display",E,E,130,[[],["str"]]],[11,"span",E,E,130,[[["self"]],["span"]]],[11,"from",E,E,130,[[[T]],[T]]],[11,"into",E,E,130,[[],[U]]],[11,R[16],E,E,130,[[["self"]],[T]]],[11,R[17],E,E,130,[[[T],["self"]]]],[11,R[11],E,E,130,[[[U]],[R[12]]]],[11,R[39],E,E,130,[[["self"]],[T]]],[11,R[13],E,E,130,[[["self"]],[T]]],[11,R[14],E,E,130,[[],[R[12]]]],[11,R[18],E,E,130,[[["self"]],[R[40]]]],[11,"peek",E,E,131,[[["cursor"]],["bool"]]],[11,"display",E,E,131,[[],["str"]]],[11,"span",E,E,131,[[["self"]],["span"]]],[11,"from",E,E,131,[[[T]],[T]]],[11,"into",E,E,131,[[],[U]]],[11,R[16],E,E,131,[[["self"]],[T]]],[11,R[17],E,E,131,[[[T],["self"]]]],[11,R[11],E,E,131,[[[U]],[R[12]]]],[11,R[39],E,E,131,[[["self"]],[T]]],[11,R[13],E,E,131,[[["self"]],[T]]],[11,R[14],E,E,131,[[],[R[12]]]],[11,R[18],E,E,131,[[["self"]],[R[40]]]],[11,"peek",E,E,132,[[["cursor"]],["bool"]]],[11,"display",E,E,132,[[],["str"]]],[11,"span",E,E,132,[[["self"]],["span"]]],[11,"from",E,E,132,[[[T]],[T]]],[11,"into",E,E,132,[[],[U]]],[11,R[16],E,E,132,[[["self"]],[T]]],[11,R[17],E,E,132,[[[T],["self"]]]],[11,R[11],E,E,132,[[[U]],[R[12]]]],[11,R[39],E,E,132,[[["self"]],[T]]],[11,R[13],E,E,132,[[["self"]],[T]]],[11,R[14],E,E,132,[[],[R[12]]]],[11,R[18],E,E,132,[[["self"]],[R[40]]]],[11,"peek",E,E,133,[[["cursor"]],["bool"]]],[11,"display",E,E,133,[[],["str"]]],[11,"span",E,E,133,[[["self"]],["span"]]],[11,"from",E,E,133,[[[T]],[T]]],[11,"into",E,E,133,[[],[U]]],[11,R[16],E,E,133,[[["self"]],[T]]],[11,R[17],E,E,133,[[[T],["self"]]]],[11,R[11],E,E,133,[[[U]],[R[12]]]],[11,R[39],E,E,133,[[["self"]],[T]]],[11,R[13],E,E,133,[[["self"]],[T]]],[11,R[14],E,E,133,[[],[R[12]]]],[11,R[18],E,E,133,[[["self"]],[R[40]]]],[11,"peek",E,E,134,[[["cursor"]],["bool"]]],[11,"display",E,E,134,[[],["str"]]],[11,"span",E,E,134,[[["self"]],["span"]]],[11,"from",E,E,134,[[[T]],[T]]],[11,"into",E,E,134,[[],[U]]],[11,R[16],E,E,134,[[["self"]],[T]]],[11,R[17],E,E,134,[[[T],["self"]]]],[11,R[11],E,E,134,[[[U]],[R[12]]]],[11,R[39],E,E,134,[[["self"]],[T]]],[11,R[13],E,E,134,[[["self"]],[T]]],[11,R[14],E,E,134,[[],[R[12]]]],[11,R[18],E,E,134,[[["self"]],[R[40]]]],[11,"peek",E,E,135,[[["cursor"]],["bool"]]],[11,"display",E,E,135,[[],["str"]]],[11,"span",E,E,135,[[["self"]],["span"]]],[11,"from",E,E,135,[[[T]],[T]]],[11,"into",E,E,135,[[],[U]]],[11,R[16],E,E,135,[[["self"]],[T]]],[11,R[17],E,E,135,[[[T],["self"]]]],[11,R[11],E,E,135,[[[U]],[R[12]]]],[11,R[39],E,E,135,[[["self"]],[T]]],[11,R[13],E,E,135,[[["self"]],[T]]],[11,R[14],E,E,135,[[],[R[12]]]],[11,R[18],E,E,135,[[["self"]],[R[40]]]],[11,"peek",E,E,136,[[["cursor"]],["bool"]]],[11,"display",E,E,136,[[],["str"]]],[11,"span",E,E,136,[[["self"]],["span"]]],[11,"from",E,E,136,[[[T]],[T]]],[11,"into",E,E,136,[[],[U]]],[11,R[16],E,E,136,[[["self"]],[T]]],[11,R[17],E,E,136,[[[T],["self"]]]],[11,R[11],E,E,136,[[[U]],[R[12]]]],[11,R[39],E,E,136,[[["self"]],[T]]],[11,R[13],E,E,136,[[["self"]],[T]]],[11,R[14],E,E,136,[[],[R[12]]]],[11,R[18],E,E,136,[[["self"]],[R[40]]]],[11,"peek",E,E,137,[[["cursor"]],["bool"]]],[11,"display",E,E,137,[[],["str"]]],[11,"span",E,E,137,[[["self"]],["span"]]],[11,"from",E,E,137,[[[T]],[T]]],[11,"into",E,E,137,[[],[U]]],[11,R[16],E,E,137,[[["self"]],[T]]],[11,R[17],E,E,137,[[[T],["self"]]]],[11,R[11],E,E,137,[[[U]],[R[12]]]],[11,R[39],E,E,137,[[["self"]],[T]]],[11,R[13],E,E,137,[[["self"]],[T]]],[11,R[14],E,E,137,[[],[R[12]]]],[11,R[18],E,E,137,[[["self"]],[R[40]]]],[11,"peek",E,E,138,[[["cursor"]],["bool"]]],[11,"display",E,E,138,[[],["str"]]],[11,"span",E,E,138,[[["self"]],["span"]]],[11,"from",E,E,138,[[[T]],[T]]],[11,"into",E,E,138,[[],[U]]],[11,R[16],E,E,138,[[["self"]],[T]]],[11,R[17],E,E,138,[[[T],["self"]]]],[11,R[11],E,E,138,[[[U]],[R[12]]]],[11,R[39],E,E,138,[[["self"]],[T]]],[11,R[13],E,E,138,[[["self"]],[T]]],[11,R[14],E,E,138,[[],[R[12]]]],[11,R[18],E,E,138,[[["self"]],[R[40]]]],[11,"peek",E,E,139,[[["cursor"]],["bool"]]],[11,"display",E,E,139,[[],["str"]]],[11,"span",E,E,139,[[["self"]],["span"]]],[11,"from",E,E,139,[[[T]],[T]]],[11,"into",E,E,139,[[],[U]]],[11,R[16],E,E,139,[[["self"]],[T]]],[11,R[17],E,E,139,[[[T],["self"]]]],[11,R[11],E,E,139,[[[U]],[R[12]]]],[11,R[39],E,E,139,[[["self"]],[T]]],[11,R[13],E,E,139,[[["self"]],[T]]],[11,R[14],E,E,139,[[],[R[12]]]],[11,R[18],E,E,139,[[["self"]],[R[40]]]],[11,"peek",E,E,140,[[["cursor"]],["bool"]]],[11,"display",E,E,140,[[],["str"]]],[11,"span",E,E,140,[[["self"]],["span"]]],[11,"from",E,E,140,[[[T]],[T]]],[11,"into",E,E,140,[[],[U]]],[11,R[16],E,E,140,[[["self"]],[T]]],[11,R[17],E,E,140,[[[T],["self"]]]],[11,R[11],E,E,140,[[[U]],[R[12]]]],[11,R[39],E,E,140,[[["self"]],[T]]],[11,R[13],E,E,140,[[["self"]],[T]]],[11,R[14],E,E,140,[[],[R[12]]]],[11,R[18],E,E,140,[[["self"]],[R[40]]]],[11,"peek",E,E,141,[[["cursor"]],["bool"]]],[11,"display",E,E,141,[[],["str"]]],[11,"span",E,E,141,[[["self"]],["span"]]],[11,"from",E,E,141,[[[T]],[T]]],[11,"into",E,E,141,[[],[U]]],[11,R[16],E,E,141,[[["self"]],[T]]],[11,R[17],E,E,141,[[[T],["self"]]]],[11,R[11],E,E,141,[[[U]],[R[12]]]],[11,R[39],E,E,141,[[["self"]],[T]]],[11,R[13],E,E,141,[[["self"]],[T]]],[11,R[14],E,E,141,[[],[R[12]]]],[11,R[18],E,E,141,[[["self"]],[R[40]]]],[11,"peek",E,E,142,[[["cursor"]],["bool"]]],[11,"display",E,E,142,[[],["str"]]],[11,"span",E,E,142,[[["self"]],["span"]]],[11,"from",E,E,142,[[[T]],[T]]],[11,"into",E,E,142,[[],[U]]],[11,R[16],E,E,142,[[["self"]],[T]]],[11,R[17],E,E,142,[[[T],["self"]]]],[11,R[11],E,E,142,[[[U]],[R[12]]]],[11,R[39],E,E,142,[[["self"]],[T]]],[11,R[13],E,E,142,[[["self"]],[T]]],[11,R[14],E,E,142,[[],[R[12]]]],[11,R[18],E,E,142,[[["self"]],[R[40]]]],[11,"peek",E,E,143,[[["cursor"]],["bool"]]],[11,"display",E,E,143,[[],["str"]]],[11,"span",E,E,143,[[["self"]],["span"]]],[11,"from",E,E,143,[[[T]],[T]]],[11,"into",E,E,143,[[],[U]]],[11,R[16],E,E,143,[[["self"]],[T]]],[11,R[17],E,E,143,[[[T],["self"]]]],[11,R[11],E,E,143,[[[U]],[R[12]]]],[11,R[39],E,E,143,[[["self"]],[T]]],[11,R[13],E,E,143,[[["self"]],[T]]],[11,R[14],E,E,143,[[],[R[12]]]],[11,R[18],E,E,143,[[["self"]],[R[40]]]],[11,"peek",E,E,144,[[["cursor"]],["bool"]]],[11,"display",E,E,144,[[],["str"]]],[11,"span",E,E,144,[[["self"]],["span"]]],[11,"from",E,E,144,[[[T]],[T]]],[11,"into",E,E,144,[[],[U]]],[11,R[16],E,E,144,[[["self"]],[T]]],[11,R[17],E,E,144,[[[T],["self"]]]],[11,R[11],E,E,144,[[[U]],[R[12]]]],[11,R[39],E,E,144,[[["self"]],[T]]],[11,R[13],E,E,144,[[["self"]],[T]]],[11,R[14],E,E,144,[[],[R[12]]]],[11,R[18],E,E,144,[[["self"]],[R[40]]]],[11,"peek",E,E,145,[[["cursor"]],["bool"]]],[11,"display",E,E,145,[[],["str"]]],[11,"span",E,E,145,[[["self"]],["span"]]],[11,"from",E,E,145,[[[T]],[T]]],[11,"into",E,E,145,[[],[U]]],[11,R[16],E,E,145,[[["self"]],[T]]],[11,R[17],E,E,145,[[[T],["self"]]]],[11,R[11],E,E,145,[[[U]],[R[12]]]],[11,R[39],E,E,145,[[["self"]],[T]]],[11,R[13],E,E,145,[[["self"]],[T]]],[11,R[14],E,E,145,[[],[R[12]]]],[11,R[18],E,E,145,[[["self"]],[R[40]]]],[11,"peek",E,E,146,[[["cursor"]],["bool"]]],[11,"display",E,E,146,[[],["str"]]],[11,"span",E,E,146,[[["self"]],["span"]]],[11,"from",E,E,146,[[[T]],[T]]],[11,"into",E,E,146,[[],[U]]],[11,R[16],E,E,146,[[["self"]],[T]]],[11,R[17],E,E,146,[[[T],["self"]]]],[11,R[11],E,E,146,[[[U]],[R[12]]]],[11,R[39],E,E,146,[[["self"]],[T]]],[11,R[13],E,E,146,[[["self"]],[T]]],[11,R[14],E,E,146,[[],[R[12]]]],[11,R[18],E,E,146,[[["self"]],[R[40]]]],[11,"peek",E,E,147,[[["cursor"]],["bool"]]],[11,"display",E,E,147,[[],["str"]]],[11,"span",E,E,147,[[["self"]],["span"]]],[11,"from",E,E,147,[[[T]],[T]]],[11,"into",E,E,147,[[],[U]]],[11,R[16],E,E,147,[[["self"]],[T]]],[11,R[17],E,E,147,[[[T],["self"]]]],[11,R[11],E,E,147,[[[U]],[R[12]]]],[11,R[39],E,E,147,[[["self"]],[T]]],[11,R[13],E,E,147,[[["self"]],[T]]],[11,R[14],E,E,147,[[],[R[12]]]],[11,R[18],E,E,147,[[["self"]],[R[40]]]],[11,"peek",E,E,148,[[["cursor"]],["bool"]]],[11,"display",E,E,148,[[],["str"]]],[11,"span",E,E,148,[[["self"]],["span"]]],[11,"from",E,E,148,[[[T]],[T]]],[11,"into",E,E,148,[[],[U]]],[11,R[16],E,E,148,[[["self"]],[T]]],[11,R[17],E,E,148,[[[T],["self"]]]],[11,R[11],E,E,148,[[[U]],[R[12]]]],[11,R[39],E,E,148,[[["self"]],[T]]],[11,R[13],E,E,148,[[["self"]],[T]]],[11,R[14],E,E,148,[[],[R[12]]]],[11,R[18],E,E,148,[[["self"]],[R[40]]]],[11,"peek",E,E,149,[[["cursor"]],["bool"]]],[11,"display",E,E,149,[[],["str"]]],[11,"span",E,E,149,[[["self"]],["span"]]],[11,"from",E,E,149,[[[T]],[T]]],[11,"into",E,E,149,[[],[U]]],[11,R[16],E,E,149,[[["self"]],[T]]],[11,R[17],E,E,149,[[[T],["self"]]]],[11,R[11],E,E,149,[[[U]],[R[12]]]],[11,R[39],E,E,149,[[["self"]],[T]]],[11,R[13],E,E,149,[[["self"]],[T]]],[11,R[14],E,E,149,[[],[R[12]]]],[11,R[18],E,E,149,[[["self"]],[R[40]]]],[11,"peek",E,E,150,[[["cursor"]],["bool"]]],[11,"display",E,E,150,[[],["str"]]],[11,"span",E,E,150,[[["self"]],["span"]]],[11,"from",E,E,150,[[[T]],[T]]],[11,"into",E,E,150,[[],[U]]],[11,R[16],E,E,150,[[["self"]],[T]]],[11,R[17],E,E,150,[[[T],["self"]]]],[11,R[11],E,E,150,[[[U]],[R[12]]]],[11,R[39],E,E,150,[[["self"]],[T]]],[11,R[13],E,E,150,[[["self"]],[T]]],[11,R[14],E,E,150,[[],[R[12]]]],[11,R[18],E,E,150,[[["self"]],[R[40]]]],[11,"peek",E,E,151,[[["cursor"]],["bool"]]],[11,"display",E,E,151,[[],["str"]]],[11,"span",E,E,151,[[["self"]],["span"]]],[11,"from",E,E,151,[[[T]],[T]]],[11,"into",E,E,151,[[],[U]]],[11,R[16],E,E,151,[[["self"]],[T]]],[11,R[17],E,E,151,[[[T],["self"]]]],[11,R[11],E,E,151,[[[U]],[R[12]]]],[11,R[39],E,E,151,[[["self"]],[T]]],[11,R[13],E,E,151,[[["self"]],[T]]],[11,R[14],E,E,151,[[],[R[12]]]],[11,R[18],E,E,151,[[["self"]],[R[40]]]],[11,"peek",E,E,152,[[["cursor"]],["bool"]]],[11,"display",E,E,152,[[],["str"]]],[11,"span",E,E,152,[[["self"]],["span"]]],[11,"from",E,E,152,[[[T]],[T]]],[11,"into",E,E,152,[[],[U]]],[11,R[16],E,E,152,[[["self"]],[T]]],[11,R[17],E,E,152,[[[T],["self"]]]],[11,R[11],E,E,152,[[[U]],[R[12]]]],[11,R[39],E,E,152,[[["self"]],[T]]],[11,R[13],E,E,152,[[["self"]],[T]]],[11,R[14],E,E,152,[[],[R[12]]]],[11,R[18],E,E,152,[[["self"]],[R[40]]]],[11,"peek",E,E,153,[[["cursor"]],["bool"]]],[11,"display",E,E,153,[[],["str"]]],[11,"span",E,E,153,[[["self"]],["span"]]],[11,"from",E,E,153,[[[T]],[T]]],[11,"into",E,E,153,[[],[U]]],[11,R[16],E,E,153,[[["self"]],[T]]],[11,R[17],E,E,153,[[[T],["self"]]]],[11,R[11],E,E,153,[[[U]],[R[12]]]],[11,R[39],E,E,153,[[["self"]],[T]]],[11,R[13],E,E,153,[[["self"]],[T]]],[11,R[14],E,E,153,[[],[R[12]]]],[11,R[18],E,E,153,[[["self"]],[R[40]]]],[11,"peek",E,E,154,[[["cursor"]],["bool"]]],[11,"display",E,E,154,[[],["str"]]],[11,"span",E,E,154,[[["self"]],["span"]]],[11,"from",E,E,154,[[[T]],[T]]],[11,"into",E,E,154,[[],[U]]],[11,R[16],E,E,154,[[["self"]],[T]]],[11,R[17],E,E,154,[[[T],["self"]]]],[11,R[11],E,E,154,[[[U]],[R[12]]]],[11,R[39],E,E,154,[[["self"]],[T]]],[11,R[13],E,E,154,[[["self"]],[T]]],[11,R[14],E,E,154,[[],[R[12]]]],[11,R[18],E,E,154,[[["self"]],[R[40]]]],[11,"peek",E,E,155,[[["cursor"]],["bool"]]],[11,"display",E,E,155,[[],["str"]]],[11,"span",E,E,155,[[["self"]],["span"]]],[11,"from",E,E,155,[[[T]],[T]]],[11,"into",E,E,155,[[],[U]]],[11,R[16],E,E,155,[[["self"]],[T]]],[11,R[17],E,E,155,[[[T],["self"]]]],[11,R[11],E,E,155,[[[U]],[R[12]]]],[11,R[39],E,E,155,[[["self"]],[T]]],[11,R[13],E,E,155,[[["self"]],[T]]],[11,R[14],E,E,155,[[],[R[12]]]],[11,R[18],E,E,155,[[["self"]],[R[40]]]],[11,"peek",E,E,156,[[["cursor"]],["bool"]]],[11,"display",E,E,156,[[],["str"]]],[11,"span",E,E,156,[[["self"]],["span"]]],[11,"from",E,E,156,[[[T]],[T]]],[11,"into",E,E,156,[[],[U]]],[11,R[16],E,E,156,[[["self"]],[T]]],[11,R[17],E,E,156,[[[T],["self"]]]],[11,R[11],E,E,156,[[[U]],[R[12]]]],[11,R[39],E,E,156,[[["self"]],[T]]],[11,R[13],E,E,156,[[["self"]],[T]]],[11,R[14],E,E,156,[[],[R[12]]]],[11,R[18],E,E,156,[[["self"]],[R[40]]]],[11,"peek",E,E,157,[[["cursor"]],["bool"]]],[11,"display",E,E,157,[[],["str"]]],[11,"span",E,E,157,[[["self"]],["span"]]],[11,"from",E,E,157,[[[T]],[T]]],[11,"into",E,E,157,[[],[U]]],[11,R[16],E,E,157,[[["self"]],[T]]],[11,R[17],E,E,157,[[[T],["self"]]]],[11,R[11],E,E,157,[[[U]],[R[12]]]],[11,R[39],E,E,157,[[["self"]],[T]]],[11,R[13],E,E,157,[[["self"]],[T]]],[11,R[14],E,E,157,[[],[R[12]]]],[11,R[18],E,E,157,[[["self"]],[R[40]]]],[11,"peek",E,E,158,[[["cursor"]],["bool"]]],[11,"display",E,E,158,[[],["str"]]],[11,"span",E,E,158,[[["self"]],["span"]]],[11,"from",E,E,158,[[[T]],[T]]],[11,"into",E,E,158,[[],[U]]],[11,R[16],E,E,158,[[["self"]],[T]]],[11,R[17],E,E,158,[[[T],["self"]]]],[11,R[11],E,E,158,[[[U]],[R[12]]]],[11,R[39],E,E,158,[[["self"]],[T]]],[11,R[13],E,E,158,[[["self"]],[T]]],[11,R[14],E,E,158,[[],[R[12]]]],[11,R[18],E,E,158,[[["self"]],[R[40]]]],[11,"peek",E,E,159,[[["cursor"]],["bool"]]],[11,"display",E,E,159,[[],["str"]]],[11,"span",E,E,159,[[["self"]],["span"]]],[11,"from",E,E,159,[[[T]],[T]]],[11,"into",E,E,159,[[],[U]]],[11,R[16],E,E,159,[[["self"]],[T]]],[11,R[17],E,E,159,[[[T],["self"]]]],[11,R[11],E,E,159,[[[U]],[R[12]]]],[11,R[39],E,E,159,[[["self"]],[T]]],[11,R[13],E,E,159,[[["self"]],[T]]],[11,R[14],E,E,159,[[],[R[12]]]],[11,R[18],E,E,159,[[["self"]],[R[40]]]],[11,"peek",E,E,160,[[["cursor"]],["bool"]]],[11,"display",E,E,160,[[],["str"]]],[11,"span",E,E,160,[[["self"]],["span"]]],[11,"from",E,E,160,[[[T]],[T]]],[11,"into",E,E,160,[[],[U]]],[11,R[16],E,E,160,[[["self"]],[T]]],[11,R[17],E,E,160,[[[T],["self"]]]],[11,R[11],E,E,160,[[[U]],[R[12]]]],[11,R[39],E,E,160,[[["self"]],[T]]],[11,R[13],E,E,160,[[["self"]],[T]]],[11,R[14],E,E,160,[[],[R[12]]]],[11,R[18],E,E,160,[[["self"]],[R[40]]]],[11,"peek",E,E,161,[[["cursor"]],["bool"]]],[11,"display",E,E,161,[[],["str"]]],[11,"span",E,E,161,[[["self"]],["span"]]],[11,"from",E,E,161,[[[T]],[T]]],[11,"into",E,E,161,[[],[U]]],[11,R[16],E,E,161,[[["self"]],[T]]],[11,R[17],E,E,161,[[[T],["self"]]]],[11,R[11],E,E,161,[[[U]],[R[12]]]],[11,R[39],E,E,161,[[["self"]],[T]]],[11,R[13],E,E,161,[[["self"]],[T]]],[11,R[14],E,E,161,[[],[R[12]]]],[11,R[18],E,E,161,[[["self"]],[R[40]]]],[11,"peek",E,E,162,[[["cursor"]],["bool"]]],[11,"display",E,E,162,[[],["str"]]],[11,"span",E,E,162,[[["self"]],["span"]]],[11,"from",E,E,162,[[[T]],[T]]],[11,"into",E,E,162,[[],[U]]],[11,R[16],E,E,162,[[["self"]],[T]]],[11,R[17],E,E,162,[[[T],["self"]]]],[11,R[11],E,E,162,[[[U]],[R[12]]]],[11,R[39],E,E,162,[[["self"]],[T]]],[11,R[13],E,E,162,[[["self"]],[T]]],[11,R[14],E,E,162,[[],[R[12]]]],[11,R[18],E,E,162,[[["self"]],[R[40]]]],[11,"peek",E,E,163,[[["cursor"]],["bool"]]],[11,"display",E,E,163,[[],["str"]]],[11,"span",E,E,163,[[["self"]],["span"]]],[11,"from",E,E,163,[[[T]],[T]]],[11,"into",E,E,163,[[],[U]]],[11,R[16],E,E,163,[[["self"]],[T]]],[11,R[17],E,E,163,[[[T],["self"]]]],[11,R[11],E,E,163,[[[U]],[R[12]]]],[11,R[39],E,E,163,[[["self"]],[T]]],[11,R[13],E,E,163,[[["self"]],[T]]],[11,R[14],E,E,163,[[],[R[12]]]],[11,R[18],E,E,163,[[["self"]],[R[40]]]],[11,"peek",E,E,164,[[["cursor"]],["bool"]]],[11,"display",E,E,164,[[],["str"]]],[11,"span",E,E,164,[[["self"]],["span"]]],[11,"from",E,E,164,[[[T]],[T]]],[11,"into",E,E,164,[[],[U]]],[11,R[16],E,E,164,[[["self"]],[T]]],[11,R[17],E,E,164,[[[T],["self"]]]],[11,R[11],E,E,164,[[[U]],[R[12]]]],[11,R[39],E,E,164,[[["self"]],[T]]],[11,R[13],E,E,164,[[["self"]],[T]]],[11,R[14],E,E,164,[[],[R[12]]]],[11,R[18],E,E,164,[[["self"]],[R[40]]]],[11,"peek",E,E,165,[[["cursor"]],["bool"]]],[11,"display",E,E,165,[[],["str"]]],[11,"span",E,E,165,[[["self"]],["span"]]],[11,"from",E,E,165,[[[T]],[T]]],[11,"into",E,E,165,[[],[U]]],[11,R[16],E,E,165,[[["self"]],[T]]],[11,R[17],E,E,165,[[[T],["self"]]]],[11,R[11],E,E,165,[[[U]],[R[12]]]],[11,R[39],E,E,165,[[["self"]],[T]]],[11,R[13],E,E,165,[[["self"]],[T]]],[11,R[14],E,E,165,[[],[R[12]]]],[11,R[18],E,E,165,[[["self"]],[R[40]]]],[11,"peek",E,E,166,[[["cursor"]],["bool"]]],[11,"display",E,E,166,[[],["str"]]],[11,"span",E,E,166,[[["self"]],["span"]]],[11,"from",E,E,166,[[[T]],[T]]],[11,"into",E,E,166,[[],[U]]],[11,R[16],E,E,166,[[["self"]],[T]]],[11,R[17],E,E,166,[[[T],["self"]]]],[11,R[11],E,E,166,[[[U]],[R[12]]]],[11,R[39],E,E,166,[[["self"]],[T]]],[11,R[13],E,E,166,[[["self"]],[T]]],[11,R[14],E,E,166,[[],[R[12]]]],[11,R[18],E,E,166,[[["self"]],[R[40]]]],[11,"peek",E,E,167,[[["cursor"]],["bool"]]],[11,"display",E,E,167,[[],["str"]]],[11,"span",E,E,167,[[["self"]],["span"]]],[11,"from",E,E,167,[[[T]],[T]]],[11,"into",E,E,167,[[],[U]]],[11,R[16],E,E,167,[[["self"]],[T]]],[11,R[17],E,E,167,[[[T],["self"]]]],[11,R[11],E,E,167,[[[U]],[R[12]]]],[11,R[39],E,E,167,[[["self"]],[T]]],[11,R[13],E,E,167,[[["self"]],[T]]],[11,R[14],E,E,167,[[],[R[12]]]],[11,R[18],E,E,167,[[["self"]],[R[40]]]],[11,"peek",E,E,168,[[["cursor"]],["bool"]]],[11,"display",E,E,168,[[],["str"]]],[11,"span",E,E,168,[[["self"]],["span"]]],[11,"from",E,E,168,[[[T]],[T]]],[11,"into",E,E,168,[[],[U]]],[11,R[16],E,E,168,[[["self"]],[T]]],[11,R[17],E,E,168,[[[T],["self"]]]],[11,R[11],E,E,168,[[[U]],[R[12]]]],[11,R[39],E,E,168,[[["self"]],[T]]],[11,R[13],E,E,168,[[["self"]],[T]]],[11,R[14],E,E,168,[[],[R[12]]]],[11,R[18],E,E,168,[[["self"]],[R[40]]]],[11,"peek",E,E,169,[[["cursor"]],["bool"]]],[11,"display",E,E,169,[[],["str"]]],[11,"span",E,E,169,[[["self"]],["span"]]],[11,"from",E,E,169,[[[T]],[T]]],[11,"into",E,E,169,[[],[U]]],[11,R[16],E,E,169,[[["self"]],[T]]],[11,R[17],E,E,169,[[[T],["self"]]]],[11,R[11],E,E,169,[[[U]],[R[12]]]],[11,R[39],E,E,169,[[["self"]],[T]]],[11,R[13],E,E,169,[[["self"]],[T]]],[11,R[14],E,E,169,[[],[R[12]]]],[11,R[18],E,E,169,[[["self"]],[R[40]]]],[11,"peek",E,E,170,[[["cursor"]],["bool"]]],[11,"display",E,E,170,[[],["str"]]],[11,"span",E,E,170,[[["self"]],["span"]]],[11,"from",E,E,170,[[[T]],[T]]],[11,"into",E,E,170,[[],[U]]],[11,R[16],E,E,170,[[["self"]],[T]]],[11,R[17],E,E,170,[[[T],["self"]]]],[11,R[11],E,E,170,[[[U]],[R[12]]]],[11,R[39],E,E,170,[[["self"]],[T]]],[11,R[13],E,E,170,[[["self"]],[T]]],[11,R[14],E,E,170,[[],[R[12]]]],[11,R[18],E,E,170,[[["self"]],[R[40]]]],[11,"peek",E,E,171,[[["cursor"]],["bool"]]],[11,"display",E,E,171,[[],["str"]]],[11,"span",E,E,171,[[["self"]],["span"]]],[11,"from",E,E,171,[[[T]],[T]]],[11,"into",E,E,171,[[],[U]]],[11,R[16],E,E,171,[[["self"]],[T]]],[11,R[17],E,E,171,[[[T],["self"]]]],[11,R[11],E,E,171,[[[U]],[R[12]]]],[11,R[39],E,E,171,[[["self"]],[T]]],[11,R[13],E,E,171,[[["self"]],[T]]],[11,R[14],E,E,171,[[],[R[12]]]],[11,R[18],E,E,171,[[["self"]],[R[40]]]],[11,"peek",E,E,172,[[["cursor"]],["bool"]]],[11,"display",E,E,172,[[],["str"]]],[11,"span",E,E,172,[[["self"]],["span"]]],[11,"from",E,E,172,[[[T]],[T]]],[11,"into",E,E,172,[[],[U]]],[11,R[16],E,E,172,[[["self"]],[T]]],[11,R[17],E,E,172,[[[T],["self"]]]],[11,R[11],E,E,172,[[[U]],[R[12]]]],[11,R[39],E,E,172,[[["self"]],[T]]],[11,R[13],E,E,172,[[["self"]],[T]]],[11,R[14],E,E,172,[[],[R[12]]]],[11,R[18],E,E,172,[[["self"]],[R[40]]]],[11,"peek",E,E,173,[[["cursor"]],["bool"]]],[11,"display",E,E,173,[[],["str"]]],[11,"span",E,E,173,[[["self"]],["span"]]],[11,"from",E,E,173,[[[T]],[T]]],[11,"into",E,E,173,[[],[U]]],[11,R[16],E,E,173,[[["self"]],[T]]],[11,R[17],E,E,173,[[[T],["self"]]]],[11,R[11],E,E,173,[[[U]],[R[12]]]],[11,R[39],E,E,173,[[["self"]],[T]]],[11,R[13],E,E,173,[[["self"]],[T]]],[11,R[14],E,E,173,[[],[R[12]]]],[11,R[18],E,E,173,[[["self"]],[R[40]]]],[11,"peek",E,E,174,[[["cursor"]],["bool"]]],[11,"display",E,E,174,[[],["str"]]],[11,"span",E,E,174,[[["self"]],["span"]]],[11,"from",E,E,174,[[[T]],[T]]],[11,"into",E,E,174,[[],[U]]],[11,R[16],E,E,174,[[["self"]],[T]]],[11,R[17],E,E,174,[[[T],["self"]]]],[11,R[11],E,E,174,[[[U]],[R[12]]]],[11,R[39],E,E,174,[[["self"]],[T]]],[11,R[13],E,E,174,[[["self"]],[T]]],[11,R[14],E,E,174,[[],[R[12]]]],[11,R[18],E,E,174,[[["self"]],[R[40]]]],[11,"peek",E,E,175,[[["cursor"]],["bool"]]],[11,"display",E,E,175,[[],["str"]]],[11,"span",E,E,175,[[["self"]],["span"]]],[11,"from",E,E,175,[[[T]],[T]]],[11,"into",E,E,175,[[],[U]]],[11,R[16],E,E,175,[[["self"]],[T]]],[11,R[17],E,E,175,[[[T],["self"]]]],[11,R[11],E,E,175,[[[U]],[R[12]]]],[11,R[39],E,E,175,[[["self"]],[T]]],[11,R[13],E,E,175,[[["self"]],[T]]],[11,R[14],E,E,175,[[],[R[12]]]],[11,R[18],E,E,175,[[["self"]],[R[40]]]],[11,"peek",E,E,176,[[["cursor"]],["bool"]]],[11,"display",E,E,176,[[],["str"]]],[11,"span",E,E,176,[[["self"]],["span"]]],[11,"from",E,E,176,[[[T]],[T]]],[11,"into",E,E,176,[[],[U]]],[11,R[16],E,E,176,[[["self"]],[T]]],[11,R[17],E,E,176,[[[T],["self"]]]],[11,R[11],E,E,176,[[[U]],[R[12]]]],[11,R[39],E,E,176,[[["self"]],[T]]],[11,R[13],E,E,176,[[["self"]],[T]]],[11,R[14],E,E,176,[[],[R[12]]]],[11,R[18],E,E,176,[[["self"]],[R[40]]]],[11,"peek",E,E,177,[[["cursor"]],["bool"]]],[11,"display",E,E,177,[[],["str"]]],[11,"span",E,E,177,[[["self"]],["span"]]],[11,"from",E,E,177,[[[T]],[T]]],[11,"into",E,E,177,[[],[U]]],[11,R[16],E,E,177,[[["self"]],[T]]],[11,R[17],E,E,177,[[[T],["self"]]]],[11,R[11],E,E,177,[[[U]],[R[12]]]],[11,R[39],E,E,177,[[["self"]],[T]]],[11,R[13],E,E,177,[[["self"]],[T]]],[11,R[14],E,E,177,[[],[R[12]]]],[11,R[18],E,E,177,[[["self"]],[R[40]]]],[11,"peek",E,E,178,[[["cursor"]],["bool"]]],[11,"display",E,E,178,[[],["str"]]],[11,"span",E,E,178,[[["self"]],["span"]]],[11,"from",E,E,178,[[[T]],[T]]],[11,"into",E,E,178,[[],[U]]],[11,R[16],E,E,178,[[["self"]],[T]]],[11,R[17],E,E,178,[[[T],["self"]]]],[11,R[11],E,E,178,[[[U]],[R[12]]]],[11,R[39],E,E,178,[[["self"]],[T]]],[11,R[13],E,E,178,[[["self"]],[T]]],[11,R[14],E,E,178,[[],[R[12]]]],[11,R[18],E,E,178,[[["self"]],[R[40]]]],[11,"peek",E,E,179,[[["cursor"]],["bool"]]],[11,"display",E,E,179,[[],["str"]]],[11,"span",E,E,179,[[["self"]],["span"]]],[11,"from",E,E,179,[[[T]],[T]]],[11,"into",E,E,179,[[],[U]]],[11,R[16],E,E,179,[[["self"]],[T]]],[11,R[17],E,E,179,[[[T],["self"]]]],[11,R[11],E,E,179,[[[U]],[R[12]]]],[11,R[39],E,E,179,[[["self"]],[T]]],[11,R[13],E,E,179,[[["self"]],[T]]],[11,R[14],E,E,179,[[],[R[12]]]],[11,R[18],E,E,179,[[["self"]],[R[40]]]],[11,"peek",E,E,180,[[["cursor"]],["bool"]]],[11,"display",E,E,180,[[],["str"]]],[11,"span",E,E,180,[[["self"]],["span"]]],[11,"from",E,E,180,[[[T]],[T]]],[11,"into",E,E,180,[[],[U]]],[11,R[16],E,E,180,[[["self"]],[T]]],[11,R[17],E,E,180,[[[T],["self"]]]],[11,R[11],E,E,180,[[[U]],[R[12]]]],[11,R[39],E,E,180,[[["self"]],[T]]],[11,R[13],E,E,180,[[["self"]],[T]]],[11,R[14],E,E,180,[[],[R[12]]]],[11,R[18],E,E,180,[[["self"]],[R[40]]]],[11,"peek",E,E,181,[[["cursor"]],["bool"]]],[11,"display",E,E,181,[[],["str"]]],[11,"span",E,E,181,[[["self"]],["span"]]],[11,"from",E,E,181,[[[T]],[T]]],[11,"into",E,E,181,[[],[U]]],[11,R[16],E,E,181,[[["self"]],[T]]],[11,R[17],E,E,181,[[[T],["self"]]]],[11,R[11],E,E,181,[[[U]],[R[12]]]],[11,R[39],E,E,181,[[["self"]],[T]]],[11,R[13],E,E,181,[[["self"]],[T]]],[11,R[14],E,E,181,[[],[R[12]]]],[11,R[18],E,E,181,[[["self"]],[R[40]]]],[11,"peek",E,E,182,[[["cursor"]],["bool"]]],[11,"display",E,E,182,[[],["str"]]],[11,"span",E,E,182,[[["self"]],["span"]]],[11,"from",E,E,182,[[[T]],[T]]],[11,"into",E,E,182,[[],[U]]],[11,R[16],E,E,182,[[["self"]],[T]]],[11,R[17],E,E,182,[[[T],["self"]]]],[11,R[11],E,E,182,[[[U]],[R[12]]]],[11,R[39],E,E,182,[[["self"]],[T]]],[11,R[13],E,E,182,[[["self"]],[T]]],[11,R[14],E,E,182,[[],[R[12]]]],[11,R[18],E,E,182,[[["self"]],[R[40]]]],[11,"peek",E,E,183,[[["cursor"]],["bool"]]],[11,"display",E,E,183,[[],["str"]]],[11,"span",E,E,183,[[["self"]],["span"]]],[11,"from",E,E,183,[[[T]],[T]]],[11,"into",E,E,183,[[],[U]]],[11,R[16],E,E,183,[[["self"]],[T]]],[11,R[17],E,E,183,[[[T],["self"]]]],[11,R[11],E,E,183,[[[U]],[R[12]]]],[11,R[39],E,E,183,[[["self"]],[T]]],[11,R[13],E,E,183,[[["self"]],[T]]],[11,R[14],E,E,183,[[],[R[12]]]],[11,R[18],E,E,183,[[["self"]],[R[40]]]],[11,"peek",E,E,184,[[["cursor"]],["bool"]]],[11,"display",E,E,184,[[],["str"]]],[11,"span",E,E,184,[[["self"]],["span"]]],[11,"from",E,E,184,[[[T]],[T]]],[11,"into",E,E,184,[[],[U]]],[11,R[16],E,E,184,[[["self"]],[T]]],[11,R[17],E,E,184,[[[T],["self"]]]],[11,R[11],E,E,184,[[[U]],[R[12]]]],[11,R[39],E,E,184,[[["self"]],[T]]],[11,R[13],E,E,184,[[["self"]],[T]]],[11,R[14],E,E,184,[[],[R[12]]]],[11,R[18],E,E,184,[[["self"]],[R[40]]]],[11,"peek",E,E,185,[[["cursor"]],["bool"]]],[11,"display",E,E,185,[[],["str"]]],[11,"span",E,E,185,[[["self"]],["span"]]],[11,"from",E,E,185,[[[T]],[T]]],[11,"into",E,E,185,[[],[U]]],[11,R[16],E,E,185,[[["self"]],[T]]],[11,R[17],E,E,185,[[[T],["self"]]]],[11,R[11],E,E,185,[[[U]],[R[12]]]],[11,R[39],E,E,185,[[["self"]],[T]]],[11,R[13],E,E,185,[[["self"]],[T]]],[11,R[14],E,E,185,[[],[R[12]]]],[11,R[18],E,E,185,[[["self"]],[R[40]]]],[11,"peek",E,E,186,[[["cursor"]],["bool"]]],[11,"display",E,E,186,[[],["str"]]],[11,"from",E,E,186,[[[T]],[T]]],[11,"into",E,E,186,[[],[U]]],[11,R[16],E,E,186,[[["self"]],[T]]],[11,R[17],E,E,186,[[[T],["self"]]]],[11,R[11],E,E,186,[[[U]],[R[12]]]],[11,R[39],E,E,186,[[["self"]],[T]]],[11,R[13],E,E,186,[[["self"]],[T]]],[11,R[14],E,E,186,[[],[R[12]]]],[11,R[18],E,E,186,[[["self"]],[R[40]]]],[11,"peek",E,E,187,[[["cursor"]],["bool"]]],[11,"display",E,E,187,[[],["str"]]],[11,"from",E,E,187,[[[T]],[T]]],[11,"into",E,E,187,[[],[U]]],[11,R[16],E,E,187,[[["self"]],[T]]],[11,R[17],E,E,187,[[[T],["self"]]]],[11,R[11],E,E,187,[[[U]],[R[12]]]],[11,R[39],E,E,187,[[["self"]],[T]]],[11,R[13],E,E,187,[[["self"]],[T]]],[11,R[14],E,E,187,[[],[R[12]]]],[11,R[18],E,E,187,[[["self"]],[R[40]]]],[11,"peek",E,E,188,[[["cursor"]],["bool"]]],[11,"display",E,E,188,[[],["str"]]],[11,"from",E,E,188,[[[T]],[T]]],[11,"into",E,E,188,[[],[U]]],[11,R[16],E,E,188,[[["self"]],[T]]],[11,R[17],E,E,188,[[[T],["self"]]]],[11,R[11],E,E,188,[[[U]],[R[12]]]],[11,R[39],E,E,188,[[["self"]],[T]]],[11,R[13],E,E,188,[[["self"]],[T]]],[11,R[14],E,E,188,[[],[R[12]]]],[11,R[18],E,E,188,[[["self"]],[R[40]]]],[11,"peek",E,E,189,[[["cursor"]],["bool"]]],[11,"display",E,E,189,[[],["str"]]],[11,"from",E,E,189,[[[T]],[T]]],[11,"into",E,E,189,[[],[U]]],[11,R[16],E,E,189,[[["self"]],[T]]],[11,R[17],E,E,189,[[[T],["self"]]]],[11,R[11],E,E,189,[[[U]],[R[12]]]],[11,R[39],E,E,189,[[["self"]],[T]]],[11,R[13],E,E,189,[[["self"]],[T]]],[11,R[14],E,E,189,[[],[R[12]]]],[11,R[18],E,E,189,[[["self"]],[R[40]]]],[11,"from",R[3154],E,197,[[[T]],[T]]],[11,"into",E,E,197,[[],[U]]],[11,R[11],E,E,197,[[[U]],[R[12]]]],[11,R[39],E,E,197,[[["self"]],[T]]],[11,R[13],E,E,197,[[["self"]],[T]]],[11,R[14],E,E,197,[[],[R[12]]]],[11,R[18],E,E,197,[[["self"]],[R[40]]]],[11,"from",E,E,198,[[[T]],[T]]],[11,"into",E,E,198,[[],[U]]],[11,R[16],E,E,198,[[["self"]],[T]]],[11,R[17],E,E,198,[[[T],["self"]]]],[11,R[11],E,E,198,[[[U]],[R[12]]]],[11,R[39],E,E,198,[[["self"]],[T]]],[11,R[13],E,E,198,[[["self"]],[T]]],[11,R[14],E,E,198,[[],[R[12]]]],[11,R[18],E,E,198,[[["self"]],[R[40]]]],[11,"span",R[3155],E,201,[[["self"]],["span"]]],[11,"from",E,E,201,[[[T]],[T]]],[11,R[48],E,E,201,[[],["i"]]],[11,"into",E,E,201,[[],[U]]],[11,R[16],E,E,201,[[["self"]],[T]]],[11,R[17],E,E,201,[[[T],["self"]]]],[11,R[11],E,E,201,[[[U]],[R[12]]]],[11,R[39],E,E,201,[[["self"]],[T]]],[11,R[13],E,E,201,[[["self"]],[T]]],[11,R[14],E,E,201,[[],[R[12]]]],[11,R[18],E,E,201,[[["self"]],[R[40]]]],[11,"from",E,E,242,[[[T]],[T]]],[11,R[48],E,E,242,[[],["i"]]],[11,"into",E,E,242,[[],[U]]],[11,R[11],E,E,242,[[[U]],[R[12]]]],[11,R[39],E,E,242,[[["self"]],[T]]],[11,R[13],E,E,242,[[["self"]],[T]]],[11,R[14],E,E,242,[[],[R[12]]]],[11,R[18],E,E,242,[[["self"]],[R[40]]]],[11,"from",E,E,243,[[[T]],[T]]],[11,R[48],E,E,243,[[],["i"]]],[11,"into",E,E,243,[[],[U]]],[11,R[11],E,E,243,[[[U]],[R[12]]]],[11,R[39],E,E,243,[[["self"]],[T]]],[11,R[13],E,E,243,[[["self"]],[T]]],[11,R[14],E,E,243,[[],[R[12]]]],[11,R[18],E,E,243,[[["self"]],[R[40]]]],[11,"from",E,E,244,[[[T]],[T]]],[11,R[48],E,E,244,[[],["i"]]],[11,"into",E,E,244,[[],[U]]],[11,R[11],E,E,244,[[[U]],[R[12]]]],[11,R[39],E,E,244,[[["self"]],[T]]],[11,R[13],E,E,244,[[["self"]],[T]]],[11,R[14],E,E,244,[[],[R[12]]]],[11,R[18],E,E,244,[[["self"]],[R[40]]]],[11,"from",E,E,245,[[[T]],[T]]],[11,R[48],E,E,245,[[],["i"]]],[11,"into",E,E,245,[[],[U]]],[11,R[11],E,E,245,[[[U]],[R[12]]]],[11,R[39],E,E,245,[[["self"]],[T]]],[11,R[13],E,E,245,[[["self"]],[T]]],[11,R[14],E,E,245,[[],[R[12]]]],[11,R[18],E,E,245,[[["self"]],[R[40]]]],[11,"from",E,E,246,[[[T]],[T]]],[11,R[48],E,E,246,[[],["i"]]],[11,"into",E,E,246,[[],[U]]],[11,R[11],E,E,246,[[[U]],[R[12]]]],[11,R[39],E,E,246,[[["self"]],[T]]],[11,R[13],E,E,246,[[["self"]],[T]]],[11,R[14],E,E,246,[[],[R[12]]]],[11,R[18],E,E,246,[[["self"]],[R[40]]]],[11,"from",E,E,247,[[[T]],[T]]],[11,R[48],E,E,247,[[],["i"]]],[11,"into",E,E,247,[[],[U]]],[11,R[11],E,E,247,[[[U]],[R[12]]]],[11,R[39],E,E,247,[[["self"]],[T]]],[11,R[13],E,E,247,[[["self"]],[T]]],[11,R[14],E,E,247,[[],[R[12]]]],[11,R[18],E,E,247,[[["self"]],[R[40]]]],[11,"span",E,E,200,[[["self"]],["span"]]],[11,"from",E,E,200,[[[T]],[T]]],[11,"into",E,E,200,[[],[U]]],[11,R[11],E,E,200,[[[U]],[R[12]]]],[11,R[39],E,E,200,[[["self"]],[T]]],[11,R[13],E,E,200,[[["self"]],[T]]],[11,R[14],E,E,200,[[],[R[12]]]],[11,R[18],E,E,200,[[["self"]],[R[40]]]],[11,"from",R[3202],E,248,[[[T]],[T]]],[11,"into",E,E,248,[[],[U]]],[11,R[11],E,E,248,[[[U]],[R[12]]]],[11,R[39],E,E,248,[[["self"]],[T]]],[11,R[13],E,E,248,[[["self"]],[T]]],[11,R[14],E,E,248,[[],[R[12]]]],[11,R[18],E,E,248,[[["self"]],[R[40]]]],[11,"from",E,E,207,[[[T]],[T]]],[11,"into",E,E,207,[[],[U]]],[11,R[170],E,E,207,[[["self"]],["string"]]],[11,R[11],E,E,207,[[[U]],[R[12]]]],[11,R[39],E,E,207,[[["self"]],[T]]],[11,R[13],E,E,207,[[["self"]],[T]]],[11,R[14],E,E,207,[[],[R[12]]]],[11,R[18],E,E,207,[[["self"]],[R[40]]]],[11,"from",E,E,206,[[[T]],[T]]],[11,"into",E,E,206,[[],[U]]],[11,R[16],E,E,206,[[["self"]],[T]]],[11,R[17],E,E,206,[[[T],["self"]]]],[11,R[11],E,E,206,[[[U]],[R[12]]]],[11,R[39],E,E,206,[[["self"]],[T]]],[11,R[13],E,E,206,[[["self"]],[T]]],[11,R[14],E,E,206,[[],[R[12]]]],[11,R[18],E,E,206,[[["self"]],[R[40]]]],[11,"hash","syn",E,209,[[["h"],["self"]]]],[11,"cmp",E,E,209,[[["self"],["ident"]],[R[51]]]],[11,"clone",E,E,209,[[["self"]],["ident"]]],[11,"fmt",E,E,209,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,R[264],E,E,209,[[["self"],["ident"]],[[R[51]],[R[52],[R[51]]]]]],[11,"fmt",E,E,209,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"eq",E,E,209,[[["self"],["ident"]],["bool"]]],[11,"eq",E,E,209,[[[T],["self"]],["bool"]]],[11,R[3216],E,E,209,[[[R[790]],["self"]]]],[11,"peek",E,E,31,[[["cursor"]],["bool"]]],[11,"display",E,E,31,[[],["str"]]],[11,"peek",E,E,76,[[["cursor"]],["bool"]]],[11,"display",E,E,76,[[],["str"]]],[11,"peek",E,E,191,[[["cursor"]],["bool"]]],[11,"display",E,E,191,[[],["str"]]],[11,"peek",E,E,192,[[["cursor"]],["bool"]]],[11,"display",E,E,192,[[],["str"]]],[11,"peek",E,E,193,[[["cursor"]],["bool"]]],[11,"display",E,E,193,[[],["str"]]],[11,"peek",E,E,194,[[["cursor"]],["bool"]]],[11,"display",E,E,194,[[],["str"]]],[11,"peek",E,E,195,[[["cursor"]],["bool"]]],[11,"display",E,E,195,[[],["str"]]],[11,"peek",E,E,196,[[["cursor"]],["bool"]]],[11,"display",E,E,196,[[],["str"]]],[11,"peek",E,E,32,[[["cursor"]],["bool"]]],[11,"display",E,E,32,[[],["str"]]],[11,"peek",R[3156],E,87,[[["cursor"]],["bool"]]],[11,"display",E,E,87,[[],["str"]]],[11,"peek",E,E,188,[[["cursor"]],["bool"]]],[11,"display",E,E,188,[[],["str"]]],[11,"peek",E,E,186,[[["cursor"]],["bool"]]],[11,"display",E,E,186,[[],["str"]]],[11,"peek",E,E,187,[[["cursor"]],["bool"]]],[11,"display",E,E,187,[[],["str"]]],[11,"peek",E,E,189,[[["cursor"]],["bool"]]],[11,"display",E,E,189,[[],["str"]]],[11,"peek",E,E,88,[[["cursor"]],["bool"]]],[11,"display",E,E,88,[[],["str"]]],[11,"peek",E,E,89,[[["cursor"]],["bool"]]],[11,"display",E,E,89,[[],["str"]]],[11,"peek",E,E,90,[[["cursor"]],["bool"]]],[11,"display",E,E,90,[[],["str"]]],[11,"peek",E,E,91,[[["cursor"]],["bool"]]],[11,"display",E,E,91,[[],["str"]]],[11,"peek",E,E,92,[[["cursor"]],["bool"]]],[11,"display",E,E,92,[[],["str"]]],[11,"peek",E,E,93,[[["cursor"]],["bool"]]],[11,"display",E,E,93,[[],["str"]]],[11,"peek",E,E,94,[[["cursor"]],["bool"]]],[11,"display",E,E,94,[[],["str"]]],[11,"peek",E,E,95,[[["cursor"]],["bool"]]],[11,"display",E,E,95,[[],["str"]]],[11,"peek",E,E,96,[[["cursor"]],["bool"]]],[11,"display",E,E,96,[[],["str"]]],[11,"peek",E,E,97,[[["cursor"]],["bool"]]],[11,"display",E,E,97,[[],["str"]]],[11,"peek",E,E,98,[[["cursor"]],["bool"]]],[11,"display",E,E,98,[[],["str"]]],[11,"peek",E,E,99,[[["cursor"]],["bool"]]],[11,"display",E,E,99,[[],["str"]]],[11,"peek",E,E,100,[[["cursor"]],["bool"]]],[11,"display",E,E,100,[[],["str"]]],[11,"peek",E,E,101,[[["cursor"]],["bool"]]],[11,"display",E,E,101,[[],["str"]]],[11,"peek",E,E,102,[[["cursor"]],["bool"]]],[11,"display",E,E,102,[[],["str"]]],[11,"peek",E,E,103,[[["cursor"]],["bool"]]],[11,"display",E,E,103,[[],["str"]]],[11,"peek",E,E,104,[[["cursor"]],["bool"]]],[11,"display",E,E,104,[[],["str"]]],[11,"peek",E,E,105,[[["cursor"]],["bool"]]],[11,"display",E,E,105,[[],["str"]]],[11,"peek",E,E,106,[[["cursor"]],["bool"]]],[11,"display",E,E,106,[[],["str"]]],[11,"peek",E,E,107,[[["cursor"]],["bool"]]],[11,"display",E,E,107,[[],["str"]]],[11,"peek",E,E,108,[[["cursor"]],["bool"]]],[11,"display",E,E,108,[[],["str"]]],[11,"peek",E,E,109,[[["cursor"]],["bool"]]],[11,"display",E,E,109,[[],["str"]]],[11,"peek",E,E,110,[[["cursor"]],["bool"]]],[11,"display",E,E,110,[[],["str"]]],[11,"peek",E,E,111,[[["cursor"]],["bool"]]],[11,"display",E,E,111,[[],["str"]]],[11,"peek",E,E,112,[[["cursor"]],["bool"]]],[11,"display",E,E,112,[[],["str"]]],[11,"peek",E,E,113,[[["cursor"]],["bool"]]],[11,"display",E,E,113,[[],["str"]]],[11,"peek",E,E,114,[[["cursor"]],["bool"]]],[11,"display",E,E,114,[[],["str"]]],[11,"peek",E,E,115,[[["cursor"]],["bool"]]],[11,"display",E,E,115,[[],["str"]]],[11,"peek",E,E,116,[[["cursor"]],["bool"]]],[11,"display",E,E,116,[[],["str"]]],[11,"peek",E,E,117,[[["cursor"]],["bool"]]],[11,"display",E,E,117,[[],["str"]]],[11,"peek",E,E,118,[[["cursor"]],["bool"]]],[11,"display",E,E,118,[[],["str"]]],[11,"peek",E,E,119,[[["cursor"]],["bool"]]],[11,"display",E,E,119,[[],["str"]]],[11,"peek",E,E,120,[[["cursor"]],["bool"]]],[11,"display",E,E,120,[[],["str"]]],[11,"peek",E,E,121,[[["cursor"]],["bool"]]],[11,"display",E,E,121,[[],["str"]]],[11,"peek",E,E,122,[[["cursor"]],["bool"]]],[11,"display",E,E,122,[[],["str"]]],[11,"peek",E,E,123,[[["cursor"]],["bool"]]],[11,"display",E,E,123,[[],["str"]]],[11,"peek",E,E,124,[[["cursor"]],["bool"]]],[11,"display",E,E,124,[[],["str"]]],[11,"peek",E,E,125,[[["cursor"]],["bool"]]],[11,"display",E,E,125,[[],["str"]]],[11,"peek",E,E,126,[[["cursor"]],["bool"]]],[11,"display",E,E,126,[[],["str"]]],[11,"peek",E,E,127,[[["cursor"]],["bool"]]],[11,"display",E,E,127,[[],["str"]]],[11,"peek",E,E,128,[[["cursor"]],["bool"]]],[11,"display",E,E,128,[[],["str"]]],[11,"peek",E,E,129,[[["cursor"]],["bool"]]],[11,"display",E,E,129,[[],["str"]]],[11,"peek",E,E,130,[[["cursor"]],["bool"]]],[11,"display",E,E,130,[[],["str"]]],[11,"peek",E,E,131,[[["cursor"]],["bool"]]],[11,"display",E,E,131,[[],["str"]]],[11,"peek",E,E,132,[[["cursor"]],["bool"]]],[11,"display",E,E,132,[[],["str"]]],[11,"peek",E,E,133,[[["cursor"]],["bool"]]],[11,"display",E,E,133,[[],["str"]]],[11,"peek",E,E,134,[[["cursor"]],["bool"]]],[11,"display",E,E,134,[[],["str"]]],[11,"peek",E,E,135,[[["cursor"]],["bool"]]],[11,"display",E,E,135,[[],["str"]]],[11,"peek",E,E,136,[[["cursor"]],["bool"]]],[11,"display",E,E,136,[[],["str"]]],[11,"peek",E,E,137,[[["cursor"]],["bool"]]],[11,"display",E,E,137,[[],["str"]]],[11,"peek",E,E,138,[[["cursor"]],["bool"]]],[11,"display",E,E,138,[[],["str"]]],[11,"peek",E,E,139,[[["cursor"]],["bool"]]],[11,"display",E,E,139,[[],["str"]]],[11,"peek",E,E,140,[[["cursor"]],["bool"]]],[11,"display",E,E,140,[[],["str"]]],[11,"peek",E,E,141,[[["cursor"]],["bool"]]],[11,"display",E,E,141,[[],["str"]]],[11,"peek",E,E,142,[[["cursor"]],["bool"]]],[11,"display",E,E,142,[[],["str"]]],[11,"peek",E,E,143,[[["cursor"]],["bool"]]],[11,"display",E,E,143,[[],["str"]]],[11,"peek",E,E,144,[[["cursor"]],["bool"]]],[11,"display",E,E,144,[[],["str"]]],[11,"peek",E,E,145,[[["cursor"]],["bool"]]],[11,"display",E,E,145,[[],["str"]]],[11,"peek",E,E,146,[[["cursor"]],["bool"]]],[11,"display",E,E,146,[[],["str"]]],[11,"peek",E,E,147,[[["cursor"]],["bool"]]],[11,"display",E,E,147,[[],["str"]]],[11,"peek",E,E,148,[[["cursor"]],["bool"]]],[11,"display",E,E,148,[[],["str"]]],[11,"peek",E,E,149,[[["cursor"]],["bool"]]],[11,"display",E,E,149,[[],["str"]]],[11,"peek",E,E,150,[[["cursor"]],["bool"]]],[11,"display",E,E,150,[[],["str"]]],[11,"peek",E,E,151,[[["cursor"]],["bool"]]],[11,"display",E,E,151,[[],["str"]]],[11,"peek",E,E,152,[[["cursor"]],["bool"]]],[11,"display",E,E,152,[[],["str"]]],[11,"peek",E,E,153,[[["cursor"]],["bool"]]],[11,"display",E,E,153,[[],["str"]]],[11,"peek",E,E,154,[[["cursor"]],["bool"]]],[11,"display",E,E,154,[[],["str"]]],[11,"peek",E,E,155,[[["cursor"]],["bool"]]],[11,"display",E,E,155,[[],["str"]]],[11,"peek",E,E,156,[[["cursor"]],["bool"]]],[11,"display",E,E,156,[[],["str"]]],[11,"peek",E,E,157,[[["cursor"]],["bool"]]],[11,"display",E,E,157,[[],["str"]]],[11,"peek",E,E,158,[[["cursor"]],["bool"]]],[11,"display",E,E,158,[[],["str"]]],[11,"peek",E,E,159,[[["cursor"]],["bool"]]],[11,"display",E,E,159,[[],["str"]]],[11,"peek",E,E,160,[[["cursor"]],["bool"]]],[11,"display",E,E,160,[[],["str"]]],[11,"peek",E,E,161,[[["cursor"]],["bool"]]],[11,"display",E,E,161,[[],["str"]]],[11,"peek",E,E,162,[[["cursor"]],["bool"]]],[11,"display",E,E,162,[[],["str"]]],[11,"peek",E,E,163,[[["cursor"]],["bool"]]],[11,"display",E,E,163,[[],["str"]]],[11,"peek",E,E,164,[[["cursor"]],["bool"]]],[11,"display",E,E,164,[[],["str"]]],[11,"peek",E,E,165,[[["cursor"]],["bool"]]],[11,"display",E,E,165,[[],["str"]]],[11,"peek",E,E,166,[[["cursor"]],["bool"]]],[11,"display",E,E,166,[[],["str"]]],[11,"peek",E,E,167,[[["cursor"]],["bool"]]],[11,"display",E,E,167,[[],["str"]]],[11,"peek",E,E,168,[[["cursor"]],["bool"]]],[11,"display",E,E,168,[[],["str"]]],[11,"peek",E,E,169,[[["cursor"]],["bool"]]],[11,"display",E,E,169,[[],["str"]]],[11,"peek",E,E,170,[[["cursor"]],["bool"]]],[11,"display",E,E,170,[[],["str"]]],[11,"peek",E,E,171,[[["cursor"]],["bool"]]],[11,"display",E,E,171,[[],["str"]]],[11,"peek",E,E,172,[[["cursor"]],["bool"]]],[11,"display",E,E,172,[[],["str"]]],[11,"peek",E,E,173,[[["cursor"]],["bool"]]],[11,"display",E,E,173,[[],["str"]]],[11,"peek",E,E,174,[[["cursor"]],["bool"]]],[11,"display",E,E,174,[[],["str"]]],[11,"peek",E,E,175,[[["cursor"]],["bool"]]],[11,"display",E,E,175,[[],["str"]]],[11,"peek",E,E,176,[[["cursor"]],["bool"]]],[11,"display",E,E,176,[[],["str"]]],[11,"peek",E,E,177,[[["cursor"]],["bool"]]],[11,"display",E,E,177,[[],["str"]]],[11,"peek",E,E,178,[[["cursor"]],["bool"]]],[11,"display",E,E,178,[[],["str"]]],[11,"peek",E,E,179,[[["cursor"]],["bool"]]],[11,"display",E,E,179,[[],["str"]]],[11,"peek",E,E,180,[[["cursor"]],["bool"]]],[11,"display",E,E,180,[[],["str"]]],[11,"peek",E,E,181,[[["cursor"]],["bool"]]],[11,"display",E,E,181,[[],["str"]]],[11,"peek",E,E,182,[[["cursor"]],["bool"]]],[11,"display",E,E,182,[[],["str"]]],[11,"peek",E,E,183,[[["cursor"]],["bool"]]],[11,"display",E,E,183,[[],["str"]]],[11,"peek",E,E,184,[[["cursor"]],["bool"]]],[11,"display",E,E,184,[[],["str"]]],[11,"peek",E,E,185,[[["cursor"]],["bool"]]],[11,"display",E,E,185,[[],["str"]]],[11,"peek","syn",E,209,[[["cursor"]],["bool"]]],[11,"display",E,E,209,[[],["str"]]],[11,"parse_any",E,E,209,[[[R[3023]]],[R[12]]]],[11,"parse",R[3156],E,87,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,88,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,89,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,90,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,91,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,92,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,93,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,94,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,95,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,96,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,97,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,98,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,99,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,100,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,101,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,102,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,103,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,104,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,105,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,106,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,107,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,108,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,109,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,110,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,111,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,112,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,113,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,114,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,115,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,116,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,117,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,118,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,119,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,120,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,121,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,122,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,123,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,124,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,125,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,126,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,127,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,128,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,129,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,130,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,131,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,132,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,133,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,134,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,135,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,136,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,137,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,138,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,139,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,140,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,141,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,142,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,143,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,144,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,145,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,146,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,147,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,148,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,149,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,150,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,151,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,152,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,153,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,154,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,155,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,156,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,157,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,158,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,159,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,160,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,161,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,162,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,163,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,164,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,165,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,166,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,167,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,168,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,169,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,170,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,171,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,172,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,173,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,174,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,175,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,176,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,177,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,178,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,179,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,180,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,181,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,182,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,183,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,184,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,185,[[[R[3023]]],[R[12]]]],[11,"parse","syn",E,209,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,64,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,1,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,2,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,65,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,6,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,4,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,5,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,67,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,68,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,17,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,69,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,20,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,23,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,70,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,24,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,21,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,29,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,72,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,28,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,71,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,22,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,30,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,73,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,31,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,76,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,191,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,192,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,193,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,194,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,195,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,196,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,32,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,34,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,38,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,80,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,81,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,84,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,52,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,41,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,50,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,51,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,42,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,47,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,45,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,54,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,46,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,49,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,83,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,53,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,44,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,43,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,48,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,40,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,82,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,39,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,60,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,85,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,56,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,59,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,61,[[[R[3023]]],[R[12]]]],[11,"parse",E,E,57,[[[R[3023]]],[R[12]]]],[11,"eq",R[3156],E,87,[[[R[3203]],["self"]],["bool"]]],[11,"eq",E,E,88,[[["self"],["abstract"]],["bool"]]],[11,"eq",E,E,89,[[["as"],["self"]],["bool"]]],[11,"eq",E,E,90,[[["async"],["self"]],["bool"]]],[11,"eq",E,E,91,[[["self"],["auto"]],["bool"]]],[11,"eq",E,E,92,[[["become"],["self"]],["bool"]]],[11,"eq",E,E,93,[[["box"],["self"]],["bool"]]],[11,"eq",E,E,94,[[["self"],["break"]],["bool"]]],[11,"eq",E,E,95,[[["self"],["const"]],["bool"]]],[11,"eq",E,E,96,[[["self"],["continue"]],["bool"]]],[11,"eq",E,E,97,[[["self"],["crate"]],["bool"]]],[11,"eq",E,E,98,[[[R[79]],["self"]],["bool"]]],[11,"eq",E,E,99,[[["self"],["do"]],["bool"]]],[11,"eq",E,E,100,[[["dyn"],["self"]],["bool"]]],[11,"eq",E,E,101,[[["else"],["self"]],["bool"]]],[11,"eq",E,E,102,[[["self"],["enum"]],["bool"]]],[11,"eq",E,E,103,[[[R[3193]],["self"]],["bool"]]],[11,"eq",E,E,104,[[["extern"],["self"]],["bool"]]],[11,"eq",E,E,105,[[["final"],["self"]],["bool"]]],[11,"eq",E,E,106,[[["fn"],["self"]],["bool"]]],[11,"eq",E,E,107,[[["self"],["for"]],["bool"]]],[11,"eq",E,E,108,[[["if"],["self"]],["bool"]]],[11,"eq",E,E,109,[[["impl"],["self"]],["bool"]]],[11,"eq",E,E,110,[[["in"],["self"]],["bool"]]],[11,"eq",E,E,111,[[["self"],["let"]],["bool"]]],[11,"eq",E,E,112,[[["loop"],["self"]],["bool"]]],[11,"eq",E,E,113,[[["macro"],["self"]],["bool"]]],[11,"eq",E,E,114,[[["self"],["match"]],["bool"]]],[11,"eq",E,E,115,[[["self"],["mod"]],["bool"]]],[11,"eq",E,E,116,[[["move"],["self"]],["bool"]]],[11,"eq",E,E,117,[[["mut"],["self"]],["bool"]]],[11,"eq",E,E,118,[[["override"],["self"]],["bool"]]],[11,"eq",E,E,119,[[["priv"],["self"]],["bool"]]],[11,"eq",E,E,120,[[["self"],["pub"]],["bool"]]],[11,"eq",E,E,121,[[["ref"],["self"]],["bool"]]],[11,"eq",E,E,122,[[["return"],["self"]],["bool"]]],[11,"eq",E,E,123,[[["selftype"],["self"]],["bool"]]],[11,"eq",E,E,124,[[["selfvalue"],["self"]],["bool"]]],[11,"eq",E,E,125,[[["static"],["self"]],["bool"]]],[11,"eq",E,E,126,[[["struct"],["self"]],["bool"]]],[11,"eq",E,E,127,[[["self"],["super"]],["bool"]]],[11,"eq",E,E,128,[[["trait"],["self"]],["bool"]]],[11,"eq",E,E,129,[[["self"],["try"]],["bool"]]],[11,"eq",E,E,130,[[["type"],["self"]],["bool"]]],[11,"eq",E,E,131,[[["self"],["typeof"]],["bool"]]],[11,"eq",E,E,132,[[["union"],["self"]],["bool"]]],[11,"eq",E,E,133,[[["unsafe"],["self"]],["bool"]]],[11,"eq",E,E,134,[[["unsized"],["self"]],["bool"]]],[11,"eq",E,E,135,[[["use"],["self"]],["bool"]]],[11,"eq",E,E,136,[[["virtual"],["self"]],["bool"]]],[11,"eq",E,E,137,[[["where"],["self"]],["bool"]]],[11,"eq",E,E,138,[[["self"],["while"]],["bool"]]],[11,"eq",E,E,139,[[["yield"],["self"]],["bool"]]],[11,"eq",E,E,140,[[["add"],["self"]],["bool"]]],[11,"eq",E,E,141,[[["addeq"],["self"]],["bool"]]],[11,"eq",E,E,142,[[["and"],["self"]],["bool"]]],[11,"eq",E,E,143,[[["andand"],["self"]],["bool"]]],[11,"eq",E,E,144,[[["andeq"],["self"]],["bool"]]],[11,"eq",E,E,145,[[["at"],["self"]],["bool"]]],[11,"eq",E,E,146,[[["bang"],["self"]],["bool"]]],[11,"eq",E,E,147,[[["self"],["caret"]],["bool"]]],[11,"eq",E,E,148,[[["careteq"],["self"]],["bool"]]],[11,"eq",E,E,149,[[["colon"],["self"]],["bool"]]],[11,"eq",E,E,150,[[["colon2"],["self"]],["bool"]]],[11,"eq",E,E,151,[[["comma"],["self"]],["bool"]]],[11,"eq",E,E,152,[[["div"],["self"]],["bool"]]],[11,"eq",E,E,153,[[["self"],["diveq"]],["bool"]]],[11,"eq",E,E,154,[[["self"],["dollar"]],["bool"]]],[11,"eq",E,E,155,[[["dot"],["self"]],["bool"]]],[11,"eq",E,E,156,[[["dot2"],["self"]],["bool"]]],[11,"eq",E,E,157,[[["dot3"],["self"]],["bool"]]],[11,"eq",E,E,158,[[["dotdoteq"],["self"]],["bool"]]],[11,"eq",E,E,159,[[["eq"],["self"]],["bool"]]],[11,"eq",E,E,160,[[["eqeq"],["self"]],["bool"]]],[11,"eq",E,E,161,[[["self"],["ge"]],["bool"]]],[11,"eq",E,E,162,[[["self"],["gt"]],["bool"]]],[11,"eq",E,E,163,[[["le"],["self"]],["bool"]]],[11,"eq",E,E,164,[[["lt"],["self"]],["bool"]]],[11,"eq",E,E,165,[[["self"],["muleq"]],["bool"]]],[11,"eq",E,E,166,[[["self"],["ne"]],["bool"]]],[11,"eq",E,E,167,[[["self"],["or"]],["bool"]]],[11,"eq",E,E,168,[[["self"],["oreq"]],["bool"]]],[11,"eq",E,E,169,[[["oror"],["self"]],["bool"]]],[11,"eq",E,E,170,[[["pound"],["self"]],["bool"]]],[11,"eq",E,E,171,[[["question"],["self"]],["bool"]]],[11,"eq",E,E,172,[[["rarrow"],["self"]],["bool"]]],[11,"eq",E,E,173,[[["self"],["larrow"]],["bool"]]],[11,"eq",E,E,174,[[["self"],["rem"]],["bool"]]],[11,"eq",E,E,175,[[["remeq"],["self"]],["bool"]]],[11,"eq",E,E,176,[[["fatarrow"],["self"]],["bool"]]],[11,"eq",E,E,177,[[["self"],["semi"]],["bool"]]],[11,"eq",E,E,178,[[["self"],["shl"]],["bool"]]],[11,"eq",E,E,179,[[["shleq"],["self"]],["bool"]]],[11,"eq",E,E,180,[[["shr"],["self"]],["bool"]]],[11,"eq",E,E,181,[[["shreq"],["self"]],["bool"]]],[11,"eq",E,E,182,[[["star"],["self"]],["bool"]]],[11,"eq",E,E,183,[[["self"],["sub"]],["bool"]]],[11,"eq",E,E,184,[[["subeq"],["self"]],["bool"]]],[11,"eq",E,E,185,[[["tilde"],["self"]],["bool"]]],[11,"eq",E,E,186,[[["brace"],["self"]],["bool"]]],[11,"eq",E,E,187,[[["self"],["bracket"]],["bool"]]],[11,"eq",E,E,188,[[["paren"],["self"]],["bool"]]],[11,"eq",E,E,189,[[["self"],["group"]],["bool"]]],[11,"eq","syn",E,0,[[["self"]],["bool"]]],[11,"eq",E,E,63,[[[R[3157]],["self"]],["bool"]]],[11,"ne",E,E,63,[[[R[3157]],["self"]],["bool"]]],[11,"eq",E,E,64,[[["self"],["meta"]],["bool"]]],[11,"ne",E,E,64,[[["self"],["meta"]],["bool"]]],[11,"eq",E,E,1,[[[R[3225]],["self"]],["bool"]]],[11,"ne",E,E,1,[[[R[3225]],["self"]],["bool"]]],[11,"eq",E,E,2,[[[R[3093]],["self"]],["bool"]]],[11,"ne",E,E,2,[[[R[3093]],["self"]],["bool"]]],[11,"eq",E,E,65,[[[R[3158]],["self"]],["bool"]]],[11,"ne",E,E,65,[[[R[3158]],["self"]],["bool"]]],[11,"eq",E,E,6,[[["self"],["variant"]],["bool"]]],[11,"ne",E,E,6,[[["self"],["variant"]],["bool"]]],[11,"eq",E,E,66,[[["fields"],["self"]],["bool"]]],[11,"ne",E,E,66,[[["fields"],["self"]],["bool"]]],[11,"eq",E,E,4,[[[R[3065]],["self"]],["bool"]]],[11,"ne",E,E,4,[[[R[3065]],["self"]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[3067]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[3067]]],["bool"]]],[11,"eq",E,E,3,[[["field"],["self"]],["bool"]]],[11,"ne",E,E,3,[[["field"],["self"]],["bool"]]],[11,"eq",E,E,67,[[[R[3159]],["self"]],["bool"]]],[11,"ne",E,E,67,[[[R[3159]],["self"]],["bool"]]],[11,"eq",E,E,8,[[[R[3160]],["self"]],["bool"]]],[11,"ne",E,E,8,[[[R[3160]],["self"]],["bool"]]],[11,"eq",E,E,7,[[[R[3229]],["self"]],["bool"]]],[11,"ne",E,E,7,[[[R[3229]],["self"]],["bool"]]],[11,"eq",E,E,9,[[[R[3139]],["self"]],["bool"]]],[11,"ne",E,E,9,[[[R[3139]],["self"]],["bool"]]],[11,"eq",E,E,68,[[["expr"],["self"]],["bool"]]],[11,"ne",E,E,68,[[["expr"],["self"]],["bool"]]],[11,"eq",E,E,215,[[["self"],["exprbox"]],["bool"]]],[11,"ne",E,E,215,[[["self"],["exprbox"]],["bool"]]],[11,"eq",E,E,222,[[[R[3161]],["self"]],["bool"]]],[11,"ne",E,E,222,[[[R[3161]],["self"]],["bool"]]],[11,"eq",E,E,210,[[[R[3204]],["self"]],["bool"]]],[11,"ne",E,E,210,[[[R[3204]],["self"]],["bool"]]],[11,"eq",E,E,11,[[[R[3221]],["self"]],["bool"]]],[11,"ne",E,E,11,[[[R[3221]],["self"]],["bool"]]],[11,"eq",E,E,227,[[[R[3162]],["self"]],["bool"]]],[11,"ne",E,E,227,[[[R[3162]],["self"]],["bool"]]],[11,"eq",E,E,235,[[[R[3205]],["self"]],["bool"]]],[11,"ne",E,E,235,[[[R[3205]],["self"]],["bool"]]],[11,"eq",E,E,10,[[[R[3163]],["self"]],["bool"]]],[11,"ne",E,E,10,[[[R[3163]],["self"]],["bool"]]],[11,"eq",E,E,18,[[[R[3164]],["self"]],["bool"]]],[11,"ne",E,E,18,[[[R[3164]],["self"]],["bool"]]],[11,"eq",E,E,15,[[["exprlit"],["self"]],["bool"]]],[11,"ne",E,E,15,[[["exprlit"],["self"]],["bool"]]],[11,"eq",E,E,12,[[[R[3222]],["self"]],["bool"]]],[11,"ne",E,E,12,[[[R[3222]],["self"]],["bool"]]],[11,"eq",E,E,236,[[["exprtype"],["self"]],["bool"]]],[11,"ne",E,E,236,[[["exprtype"],["self"]],["bool"]]],[11,"eq",E,E,223,[[["self"],["exprlet"]],["bool"]]],[11,"ne",E,E,223,[[["self"],["exprlet"]],["bool"]]],[11,"eq",E,E,221,[[["self"],["exprif"]],["bool"]]],[11,"ne",E,E,221,[[["self"],["exprif"]],["bool"]]],[11,"eq",E,E,238,[[[R[3206]],["self"]],["bool"]]],[11,"ne",E,E,238,[[[R[3206]],["self"]],["bool"]]],[11,"eq",E,E,219,[[[R[3165]],["self"]],["bool"]]],[11,"ne",E,E,219,[[[R[3165]],["self"]],["bool"]]],[11,"eq",E,E,224,[[["self"],["exprloop"]],["bool"]]],[11,"ne",E,E,224,[[["self"],["exprloop"]],["bool"]]],[11,"eq",E,E,226,[[[R[3207]],["self"]],["bool"]]],[11,"ne",E,E,226,[[[R[3207]],["self"]],["bool"]]],[11,"eq",E,E,217,[[["self"],[R[3166]]],["bool"]]],[11,"ne",E,E,217,[[["self"],[R[3166]]],["bool"]]],[11,"eq",E,E,237,[[["self"],[R[3194]]],["bool"]]],[11,"ne",E,E,237,[[["self"],[R[3194]]],["bool"]]],[11,"eq",E,E,214,[[[R[3208]],["self"]],["bool"]]],[11,"ne",E,E,214,[[[R[3208]],["self"]],["bool"]]],[11,"eq",E,E,211,[[["self"],[R[3195]]],["bool"]]],[11,"ne",E,E,211,[[["self"],[R[3195]]],["bool"]]],[11,"eq",E,E,212,[[[R[3167]],["self"]],["bool"]]],[11,"ne",E,E,212,[[[R[3167]],["self"]],["bool"]]],[11,"eq",E,E,13,[[[R[3168]],["self"]],["bool"]]],[11,"ne",E,E,13,[[[R[3168]],["self"]],["bool"]]],[11,"eq",E,E,14,[[["self"],[R[3169]]],["bool"]]],[11,"ne",E,E,14,[[["self"],[R[3169]]],["bool"]]],[11,"eq",E,E,228,[[[R[3209]],["self"]],["bool"]]],[11,"ne",E,E,228,[[[R[3209]],["self"]],["bool"]]],[11,"eq",E,E,17,[[[R[3223]],["self"]],["bool"]]],[11,"ne",E,E,17,[[[R[3223]],["self"]],["bool"]]],[11,"eq",E,E,229,[[["self"],[R[3170]]],["bool"]]],[11,"ne",E,E,229,[[["self"],[R[3170]]],["bool"]]],[11,"eq",E,E,216,[[["self"],[R[3210]]],["bool"]]],[11,"ne",E,E,216,[[["self"],[R[3210]]],["bool"]]],[11,"eq",E,E,218,[[["self"],[R[3171]]],["bool"]]],[11,"ne",E,E,218,[[["self"],[R[3171]]],["bool"]]],[11,"eq",E,E,231,[[[R[3196]],["self"]],["bool"]]],[11,"ne",E,E,231,[[[R[3196]],["self"]],["bool"]]],[11,"eq",E,E,225,[[["self"],[R[3211]]],["bool"]]],[11,"ne",E,E,225,[[["self"],[R[3211]]],["bool"]]],[11,"eq",E,E,232,[[[R[3197]],["self"]],["bool"]]],[11,"ne",E,E,232,[[[R[3197]],["self"]],["bool"]]],[11,"eq",E,E,230,[[[R[3198]],["self"]],["bool"]]],[11,"ne",E,E,230,[[[R[3198]],["self"]],["bool"]]],[11,"eq",E,E,16,[[["self"],[R[3172]]],["bool"]]],[11,"ne",E,E,16,[[["self"],[R[3172]]],["bool"]]],[11,"eq",E,E,220,[[["self"],[R[3212]]],["bool"]]],[11,"ne",E,E,220,[[["self"],[R[3212]]],["bool"]]],[11,"eq",E,E,233,[[["self"],["exprtry"]],["bool"]]],[11,"ne",E,E,233,[[["self"],["exprtry"]],["bool"]]],[11,"eq",E,E,213,[[[R[3213]],["self"]],["bool"]]],[11,"ne",E,E,213,[[[R[3213]],["self"]],["bool"]]],[11,"eq",E,E,234,[[["self"],[R[3173]]],["bool"]]],[11,"ne",E,E,234,[[["self"],[R[3173]]],["bool"]]],[11,"eq",E,E,239,[[["self"],[R[3214]]],["bool"]]],[11,"ne",E,E,239,[[["self"],[R[3214]]],["bool"]]],[11,"eq",E,E,19,[[["self"]],["bool"]]],[11,"eq",E,E,69,[[["self"],["member"]],["bool"]]],[11,"ne",E,E,69,[[["self"],["member"]],["bool"]]],[11,"eq",E,E,20,[[["self"]],["bool"]]],[11,"eq",E,E,23,[[[R[3215]],["self"]],["bool"]]],[11,"ne",E,E,23,[[[R[3215]],["self"]],["bool"]]],[11,"eq",E,E,70,[[[R[3071]],["self"]],["bool"]]],[11,"ne",E,E,70,[[[R[3071]],["self"]],["bool"]]],[11,"eq",E,E,29,[[[R[3174]],["self"]],["bool"]]],[11,"ne",E,E,29,[[[R[3174]],["self"]],["bool"]]],[11,"eq",E,E,24,[[[R[3077]],["self"]],["bool"]]],[11,"ne",E,E,24,[[[R[3077]],["self"]],["bool"]]],[11,"eq",E,E,22,[[[R[3175]],["self"]],["bool"]]],[11,"ne",E,E,22,[[[R[3175]],["self"]],["bool"]]],[11,"eq",E,E,240,[[[R[3176]],["self"]],["bool"]]],[11,"ne",E,E,240,[[[R[3176]],["self"]],["bool"]]],[11,"eq",E,E,190,[[[R[3177]],["self"]],["bool"]]],[11,"ne",E,E,190,[[[R[3177]],["self"]],["bool"]]],[11,"eq",E,E,241,[[[R[3199]],["self"]],["bool"]]],[11,"ne",E,E,241,[[[R[3199]],["self"]],["bool"]]],[11,"eq",E,E,21,[[[R[3043]],["self"]],["bool"]]],[11,"ne",E,E,21,[[[R[3043]],["self"]],["bool"]]],[11,"eq",E,E,72,[[[R[3122]],["self"]],["bool"]]],[11,"ne",E,E,72,[[[R[3122]],["self"]],["bool"]]],[11,"eq",E,E,28,[[[R[3178]],["self"]],["bool"]]],[11,"ne",E,E,28,[[[R[3178]],["self"]],["bool"]]],[11,"eq",E,E,71,[[["self"],[R[3111]]],["bool"]]],[11,"ne",E,E,71,[[["self"],[R[3111]]],["bool"]]],[11,"eq",E,E,30,[[[R[3031]],["self"]],["bool"]]],[11,"ne",E,E,30,[[[R[3031]],["self"]],["bool"]]],[11,"eq",E,E,73,[[["self"],[R[3143]]],["bool"]]],[11,"ne",E,E,73,[[["self"],[R[3143]]],["bool"]]],[11,"eq",E,E,27,[[[R[3106]],["self"]],["bool"]]],[11,"ne",E,E,27,[[[R[3106]],["self"]],["bool"]]],[11,"eq",E,E,26,[[[R[3104]],["self"]],["bool"]]],[11,"ne",E,E,26,[[[R[3104]],["self"]],["bool"]]],[11,"eq",E,E,25,[[[R[3102]],["self"]],["bool"]]],[11,"ne",E,E,25,[[[R[3102]],["self"]],["bool"]]],[11,"eq",E,E,31,[[[R[3075]],["self"]],["bool"]]],[11,"eq",E,E,76,[[["self"],["lit"]],["bool"]]],[11,"ne",E,E,76,[[["self"],["lit"]],["bool"]]],[11,"eq",E,E,191,[[["self"]],["bool"]]],[11,"eq",E,E,192,[[["self"]],["bool"]]],[11,"eq",E,E,193,[[["self"]],["bool"]]],[11,"eq",E,E,194,[[["self"]],["bool"]]],[11,"eq",E,E,195,[[["self"]],["bool"]]],[11,"eq",E,E,196,[[["self"]],["bool"]]],[11,"eq",E,E,32,[[["self"]],["bool"]]],[11,"eq",E,E,33,[[["self"]],["bool"]]],[11,"eq",E,E,77,[[["strstyle"],["self"]],["bool"]]],[11,"ne",E,E,77,[[["strstyle"],["self"]],["bool"]]],[11,"eq",E,E,75,[[[R[3201]],["self"]],["bool"]]],[11,"eq",E,E,74,[[["self"],[R[3024]]],["bool"]]],[11,"eq",E,E,78,[[[R[3089]],["self"]],["bool"]]],[11,"ne",E,E,78,[[[R[3089]],["self"]],["bool"]]],[11,"eq",E,E,34,[[["self"]],["bool"]]],[11,"eq",E,E,38,[[["self"],[R[3050]]],["bool"]]],[11,"ne",E,E,38,[[["self"],[R[3050]]],["bool"]]],[11,"eq",E,E,79,[[["self"],["data"]],["bool"]]],[11,"ne",E,E,79,[[["self"],["data"]],["bool"]]],[11,"eq",E,E,36,[[["self"],[R[3179]]],["bool"]]],[11,"ne",E,E,36,[[["self"],[R[3179]]],["bool"]]],[11,"eq",E,E,35,[[["self"],[R[3219]]],["bool"]]],[11,"ne",E,E,35,[[["self"],[R[3219]]],["bool"]]],[11,"eq",E,E,37,[[[R[3180]],["self"]],["bool"]]],[11,"ne",E,E,37,[[[R[3180]],["self"]],["bool"]]],[11,"eq",E,E,80,[[["self"],["binop"]],["bool"]]],[11,"ne",E,E,80,[[["self"],["binop"]],["bool"]]],[11,"eq",E,E,81,[[["unop"],["self"]],["bool"]]],[11,"ne",E,E,81,[[["unop"],["self"]],["bool"]]],[11,"eq",E,E,84,[[["type"],["self"]],["bool"]]],[11,"ne",E,E,84,[[["type"],["self"]],["bool"]]],[11,"eq",E,E,52,[[["self"],[R[3181]]],["bool"]]],[11,"ne",E,E,52,[[["self"],[R[3181]]],["bool"]]],[11,"eq",E,E,41,[[["self"],[R[3182]]],["bool"]]],[11,"ne",E,E,41,[[["self"],[R[3182]]],["bool"]]],[11,"eq",E,E,50,[[["self"],["typeptr"]],["bool"]]],[11,"ne",E,E,50,[[["self"],["typeptr"]],["bool"]]],[11,"eq",E,E,51,[[["self"],[R[3127]]],["bool"]]],[11,"ne",E,E,51,[[["self"],[R[3127]]],["bool"]]],[11,"eq",E,E,42,[[["self"],[R[3183]]],["bool"]]],[11,"ne",E,E,42,[[["self"],[R[3183]]],["bool"]]],[11,"eq",E,E,47,[[[R[3184]],["self"]],["bool"]]],[11,"ne",E,E,47,[[[R[3184]],["self"]],["bool"]]],[11,"eq",E,E,54,[[[R[3185]],["self"]],["bool"]]],[11,"ne",E,E,54,[[[R[3185]],["self"]],["bool"]]],[11,"eq",E,E,49,[[["self"],[R[3228]]],["bool"]]],[11,"ne",E,E,49,[[["self"],[R[3228]]],["bool"]]],[11,"eq",E,E,53,[[[R[3130]],["self"]],["bool"]]],[11,"ne",E,E,53,[[[R[3130]],["self"]],["bool"]]],[11,"eq",E,E,44,[[[R[3116]],["self"]],["bool"]]],[11,"ne",E,E,44,[[[R[3116]],["self"]],["bool"]]],[11,"eq",E,E,48,[[["self"],[R[3186]]],["bool"]]],[11,"ne",E,E,48,[[["self"],[R[3186]]],["bool"]]],[11,"eq",E,E,43,[[[R[3187]],["self"]],["bool"]]],[11,"ne",E,E,43,[[[R[3187]],["self"]],["bool"]]],[11,"eq",E,E,45,[[[R[3188]],["self"]],["bool"]]],[11,"ne",E,E,45,[[[R[3188]],["self"]],["bool"]]],[11,"eq",E,E,46,[[["self"],[R[3189]]],["bool"]]],[11,"ne",E,E,46,[[["self"],[R[3189]]],["bool"]]],[11,"eq",E,E,55,[[["self"]],["bool"]]],[11,"eq",E,E,39,[[["abi"],["self"]],["bool"]]],[11,"ne",E,E,39,[[["abi"],["self"]],["bool"]]],[11,"eq",E,E,40,[[["self"],[R[3190]]],["bool"]]],[11,"ne",E,E,40,[[["self"],[R[3190]]],["bool"]]],[11,"eq",E,E,82,[[[R[3039]],["self"]],["bool"]]],[11,"ne",E,E,82,[[[R[3039]],["self"]],["bool"]]],[11,"eq",E,E,83,[[["self"],[R[3191]]],["bool"]]],[11,"ne",E,E,83,[[["self"],[R[3191]]],["bool"]]],[11,"eq",E,E,60,[[["self"],["path"]],["bool"]]],[11,"ne",E,E,60,[[["self"],["path"]],["bool"]]],[11,"eq",E,E,61,[[[R[3100]],["self"]],["bool"]]],[11,"ne",E,E,61,[[[R[3100]],["self"]],["bool"]]],[11,"eq",E,E,86,[[["self"],[R[3098]]],["bool"]]],[11,"ne",E,E,86,[[["self"],[R[3098]]],["bool"]]],[11,"eq",E,E,85,[[["self"],[R[3069]]],["bool"]]],[11,"ne",E,E,85,[[["self"],[R[3069]]],["bool"]]],[11,"eq",E,E,56,[[["self"],[R[3034]]],["bool"]]],[11,"ne",E,E,56,[[["self"],[R[3034]]],["bool"]]],[11,"eq",E,E,57,[[["binding"],["self"]],["bool"]]],[11,"ne",E,E,57,[[["binding"],["self"]],["bool"]]],[11,"eq",E,E,58,[[[R[3192]],["self"]],["bool"]]],[11,"ne",E,E,58,[[[R[3192]],["self"]],["bool"]]],[11,"eq",E,E,59,[[[R[3096]],["self"]],["bool"]]],[11,"ne",E,E,59,[[[R[3096]],["self"]],["bool"]]],[11,"eq",E,E,62,[[["qself"],["self"]],["bool"]]],[11,"ne",E,E,62,[[["qself"],["self"]],["bool"]]],[11,"eq",R[3154],E,198,[[["cursor"],["self"]],["bool"]]],[11,"ne",E,E,198,[[["cursor"],["self"]],["bool"]]],[11,"eq",R[3155],E,201,[[[R[3151]],["self"]],["bool"]]],[11,"ne",E,E,201,[[[R[3151]],["self"]],["bool"]]],[11,"clone",R[3156],E,87,[[["self"]],[R[3203]]]],[11,"clone",E,E,88,[[["self"]],["abstract"]]],[11,"clone",E,E,89,[[["self"]],["as"]]],[11,"clone",E,E,90,[[["self"]],["async"]]],[11,"clone",E,E,91,[[["self"]],["auto"]]],[11,"clone",E,E,92,[[["self"]],["become"]]],[11,"clone",E,E,93,[[["self"]],["box"]]],[11,"clone",E,E,94,[[["self"]],["break"]]],[11,"clone",E,E,95,[[["self"]],["const"]]],[11,"clone",E,E,96,[[["self"]],["continue"]]],[11,"clone",E,E,97,[[["self"]],["crate"]]],[11,"clone",E,E,98,[[["self"]],[R[79]]]],[11,"clone",E,E,99,[[["self"]],["do"]]],[11,"clone",E,E,100,[[["self"]],["dyn"]]],[11,"clone",E,E,101,[[["self"]],["else"]]],[11,"clone",E,E,102,[[["self"]],["enum"]]],[11,"clone",E,E,103,[[["self"]],[R[3193]]]],[11,"clone",E,E,104,[[["self"]],["extern"]]],[11,"clone",E,E,105,[[["self"]],["final"]]],[11,"clone",E,E,106,[[["self"]],["fn"]]],[11,"clone",E,E,107,[[["self"]],["for"]]],[11,"clone",E,E,108,[[["self"]],["if"]]],[11,"clone",E,E,109,[[["self"]],["impl"]]],[11,"clone",E,E,110,[[["self"]],["in"]]],[11,"clone",E,E,111,[[["self"]],["let"]]],[11,"clone",E,E,112,[[["self"]],["loop"]]],[11,"clone",E,E,113,[[["self"]],["macro"]]],[11,"clone",E,E,114,[[["self"]],["match"]]],[11,"clone",E,E,115,[[["self"]],["mod"]]],[11,"clone",E,E,116,[[["self"]],["move"]]],[11,"clone",E,E,117,[[["self"]],["mut"]]],[11,"clone",E,E,118,[[["self"]],["override"]]],[11,"clone",E,E,119,[[["self"]],["priv"]]],[11,"clone",E,E,120,[[["self"]],["pub"]]],[11,"clone",E,E,121,[[["self"]],["ref"]]],[11,"clone",E,E,122,[[["self"]],["return"]]],[11,"clone",E,E,123,[[["self"]],["selftype"]]],[11,"clone",E,E,124,[[["self"]],["selfvalue"]]],[11,"clone",E,E,125,[[["self"]],["static"]]],[11,"clone",E,E,126,[[["self"]],["struct"]]],[11,"clone",E,E,127,[[["self"]],["super"]]],[11,"clone",E,E,128,[[["self"]],["trait"]]],[11,"clone",E,E,129,[[["self"]],["try"]]],[11,"clone",E,E,130,[[["self"]],["type"]]],[11,"clone",E,E,131,[[["self"]],["typeof"]]],[11,"clone",E,E,132,[[["self"]],["union"]]],[11,"clone",E,E,133,[[["self"]],["unsafe"]]],[11,"clone",E,E,134,[[["self"]],["unsized"]]],[11,"clone",E,E,135,[[["self"]],["use"]]],[11,"clone",E,E,136,[[["self"]],["virtual"]]],[11,"clone",E,E,137,[[["self"]],["where"]]],[11,"clone",E,E,138,[[["self"]],["while"]]],[11,"clone",E,E,139,[[["self"]],["yield"]]],[11,"clone",E,E,140,[[["self"]],["add"]]],[11,"clone",E,E,141,[[["self"]],["addeq"]]],[11,"clone",E,E,142,[[["self"]],["and"]]],[11,"clone",E,E,143,[[["self"]],["andand"]]],[11,"clone",E,E,144,[[["self"]],["andeq"]]],[11,"clone",E,E,145,[[["self"]],["at"]]],[11,"clone",E,E,146,[[["self"]],["bang"]]],[11,"clone",E,E,147,[[["self"]],["caret"]]],[11,"clone",E,E,148,[[["self"]],["careteq"]]],[11,"clone",E,E,149,[[["self"]],["colon"]]],[11,"clone",E,E,150,[[["self"]],["colon2"]]],[11,"clone",E,E,151,[[["self"]],["comma"]]],[11,"clone",E,E,152,[[["self"]],["div"]]],[11,"clone",E,E,153,[[["self"]],["diveq"]]],[11,"clone",E,E,154,[[["self"]],["dollar"]]],[11,"clone",E,E,155,[[["self"]],["dot"]]],[11,"clone",E,E,156,[[["self"]],["dot2"]]],[11,"clone",E,E,157,[[["self"]],["dot3"]]],[11,"clone",E,E,158,[[["self"]],["dotdoteq"]]],[11,"clone",E,E,159,[[["self"]],["eq"]]],[11,"clone",E,E,160,[[["self"]],["eqeq"]]],[11,"clone",E,E,161,[[["self"]],["ge"]]],[11,"clone",E,E,162,[[["self"]],["gt"]]],[11,"clone",E,E,163,[[["self"]],["le"]]],[11,"clone",E,E,164,[[["self"]],["lt"]]],[11,"clone",E,E,165,[[["self"]],["muleq"]]],[11,"clone",E,E,166,[[["self"]],["ne"]]],[11,"clone",E,E,167,[[["self"]],["or"]]],[11,"clone",E,E,168,[[["self"]],["oreq"]]],[11,"clone",E,E,169,[[["self"]],["oror"]]],[11,"clone",E,E,170,[[["self"]],["pound"]]],[11,"clone",E,E,171,[[["self"]],["question"]]],[11,"clone",E,E,172,[[["self"]],["rarrow"]]],[11,"clone",E,E,173,[[["self"]],["larrow"]]],[11,"clone",E,E,174,[[["self"]],["rem"]]],[11,"clone",E,E,175,[[["self"]],["remeq"]]],[11,"clone",E,E,176,[[["self"]],["fatarrow"]]],[11,"clone",E,E,177,[[["self"]],["semi"]]],[11,"clone",E,E,178,[[["self"]],["shl"]]],[11,"clone",E,E,179,[[["self"]],["shleq"]]],[11,"clone",E,E,180,[[["self"]],["shr"]]],[11,"clone",E,E,181,[[["self"]],["shreq"]]],[11,"clone",E,E,182,[[["self"]],["star"]]],[11,"clone",E,E,183,[[["self"]],["sub"]]],[11,"clone",E,E,184,[[["self"]],["subeq"]]],[11,"clone",E,E,185,[[["self"]],["tilde"]]],[11,"clone",E,E,186,[[["self"]],["brace"]]],[11,"clone",E,E,187,[[["self"]],["bracket"]]],[11,"clone",E,E,188,[[["self"]],["paren"]]],[11,"clone",E,E,189,[[["self"]],["group"]]],[11,"clone","syn",E,0,[[["self"]],[R[3217]]]],[11,"clone",E,E,63,[[["self"]],[R[3157]]]],[11,"clone",E,E,64,[[["self"]],["meta"]]],[11,"clone",E,E,1,[[["self"]],[R[3225]]]],[11,"clone",E,E,2,[[["self"]],[R[3093]]]],[11,"clone",E,E,65,[[["self"]],[R[3158]]]],[11,"clone",E,E,6,[[["self"]],["variant"]]],[11,"clone",E,E,66,[[["self"]],["fields"]]],[11,"clone",E,E,4,[[["self"]],[R[3065]]]],[11,"clone",E,E,5,[[["self"]],[R[3067]]]],[11,"clone",E,E,3,[[["self"]],["field"]]],[11,"clone",E,E,67,[[["self"]],[R[3159]]]],[11,"clone",E,E,8,[[["self"]],[R[3160]]]],[11,"clone",E,E,7,[[["self"]],[R[3229]]]],[11,"clone",E,E,9,[[["self"]],[R[3139]]]],[11,"clone",E,E,68,[[["self"]],["expr"]]],[11,"clone",E,E,215,[[["self"]],["exprbox"]]],[11,"clone",E,E,222,[[["self"]],[R[3161]]]],[11,"clone",E,E,210,[[["self"]],[R[3204]]]],[11,"clone",E,E,11,[[["self"]],[R[3221]]]],[11,"clone",E,E,227,[[["self"]],[R[3162]]]],[11,"clone",E,E,235,[[["self"]],[R[3205]]]],[11,"clone",E,E,10,[[["self"]],[R[3163]]]],[11,"clone",E,E,18,[[["self"]],[R[3164]]]],[11,"clone",E,E,15,[[["self"]],["exprlit"]]],[11,"clone",E,E,12,[[["self"]],[R[3222]]]],[11,"clone",E,E,236,[[["self"]],["exprtype"]]],[11,"clone",E,E,223,[[["self"]],["exprlet"]]],[11,"clone",E,E,221,[[["self"]],["exprif"]]],[11,"clone",E,E,238,[[["self"]],[R[3206]]]],[11,"clone",E,E,219,[[["self"]],[R[3165]]]],[11,"clone",E,E,224,[[["self"]],["exprloop"]]],[11,"clone",E,E,226,[[["self"]],[R[3207]]]],[11,"clone",E,E,217,[[["self"]],[R[3166]]]],[11,"clone",E,E,237,[[["self"]],[R[3194]]]],[11,"clone",E,E,214,[[["self"]],[R[3208]]]],[11,"clone",E,E,211,[[["self"]],[R[3195]]]],[11,"clone",E,E,212,[[["self"]],[R[3167]]]],[11,"clone",E,E,13,[[["self"]],[R[3168]]]],[11,"clone",E,E,14,[[["self"]],[R[3169]]]],[11,"clone",E,E,228,[[["self"]],[R[3209]]]],[11,"clone",E,E,17,[[["self"]],[R[3223]]]],[11,"clone",E,E,229,[[["self"]],[R[3170]]]],[11,"clone",E,E,216,[[["self"]],[R[3210]]]],[11,"clone",E,E,218,[[["self"]],[R[3171]]]],[11,"clone",E,E,231,[[["self"]],[R[3196]]]],[11,"clone",E,E,225,[[["self"]],[R[3211]]]],[11,"clone",E,E,232,[[["self"]],[R[3197]]]],[11,"clone",E,E,230,[[["self"]],[R[3198]]]],[11,"clone",E,E,16,[[["self"]],[R[3172]]]],[11,"clone",E,E,220,[[["self"]],[R[3212]]]],[11,"clone",E,E,233,[[["self"]],["exprtry"]]],[11,"clone",E,E,213,[[["self"]],[R[3213]]]],[11,"clone",E,E,234,[[["self"]],[R[3173]]]],[11,"clone",E,E,239,[[["self"]],[R[3214]]]],[11,"clone",E,E,19,[[["self"]],[R[3061]]]],[11,"clone",E,E,69,[[["self"]],["member"]]],[11,"clone",E,E,20,[[["self"]],["index"]]],[11,"clone",E,E,23,[[["self"]],[R[3215]]]],[11,"clone",E,E,70,[[["self"]],[R[3071]]]],[11,"clone",E,E,29,[[["self"]],[R[3174]]]],[11,"clone",E,E,24,[[["self"]],[R[3077]]]],[11,"clone",E,E,22,[[["self"]],[R[3175]]]],[11,"clone",E,E,240,[[["self"]],[R[3176]]]],[11,"clone",E,E,190,[[["self"]],[R[3177]]]],[11,"clone",E,E,241,[[["self"]],[R[3199]]]],[11,"clone",E,E,21,[[["self"]],[R[3043]]]],[11,"clone",E,E,72,[[["self"]],[R[3122]]]],[11,"clone",E,E,28,[[["self"]],[R[3178]]]],[11,"clone",E,E,71,[[["self"]],[R[3111]]]],[11,"clone",E,E,30,[[["self"]],[R[3031]]]],[11,"clone",E,E,73,[[["self"]],[R[3143]]]],[11,"clone",E,E,27,[[["self"]],[R[3106]]]],[11,"clone",E,E,26,[[["self"]],[R[3104]]]],[11,"clone",E,E,25,[[["self"]],[R[3102]]]],[11,"clone",E,E,31,[[["self"]],[R[3075]]]],[11,"clone",E,E,76,[[["self"]],["lit"]]],[11,"clone",E,E,191,[[["self"]],["litstr"]]],[11,"clone",E,E,192,[[["self"]],[R[3200]]]],[11,"clone",E,E,193,[[["self"]],["litbyte"]]],[11,"clone",E,E,194,[[["self"]],["litchar"]]],[11,"clone",E,E,195,[[["self"]],["litint"]]],[11,"clone",E,E,196,[[["self"]],["litfloat"]]],[11,"clone",E,E,32,[[["self"]],["litbool"]]],[11,"clone",E,E,33,[[["self"]],[R[3086]]]],[11,"clone",E,E,77,[[["self"]],["strstyle"]]],[11,"clone",E,E,75,[[["self"]],[R[3201]]]],[11,"clone",E,E,74,[[["self"]],[R[3024]]]],[11,"clone",E,E,34,[[["self"]],["macro"]]],[11,"clone",E,E,78,[[["self"]],[R[3089]]]],[11,"clone",E,E,38,[[["self"]],[R[3050]]]],[11,"clone",E,E,79,[[["self"]],["data"]]],[11,"clone",E,E,36,[[["self"]],[R[3179]]]],[11,"clone",E,E,35,[[["self"]],[R[3219]]]],[11,"clone",E,E,37,[[["self"]],[R[3180]]]],[11,"clone",E,E,80,[[["self"]],["binop"]]],[11,"clone",E,E,81,[[["self"]],["unop"]]],[11,"clone",E,E,84,[[["self"]],["type"]]],[11,"clone",E,E,52,[[["self"]],[R[3181]]]],[11,"clone",E,E,41,[[["self"]],[R[3182]]]],[11,"clone",E,E,50,[[["self"]],["typeptr"]]],[11,"clone",E,E,51,[[["self"]],[R[3127]]]],[11,"clone",E,E,42,[[["self"]],[R[3183]]]],[11,"clone",E,E,47,[[["self"]],[R[3184]]]],[11,"clone",E,E,54,[[["self"]],[R[3185]]]],[11,"clone",E,E,49,[[["self"]],[R[3228]]]],[11,"clone",E,E,53,[[["self"]],[R[3130]]]],[11,"clone",E,E,44,[[["self"]],[R[3116]]]],[11,"clone",E,E,48,[[["self"]],[R[3186]]]],[11,"clone",E,E,43,[[["self"]],[R[3187]]]],[11,"clone",E,E,45,[[["self"]],[R[3188]]]],[11,"clone",E,E,46,[[["self"]],[R[3189]]]],[11,"clone",E,E,55,[[["self"]],[R[3133]]]],[11,"clone",E,E,39,[[["self"]],["abi"]]],[11,"clone",E,E,40,[[["self"]],[R[3190]]]],[11,"clone",E,E,82,[[["self"]],[R[3039]]]],[11,"clone",E,E,83,[[["self"]],[R[3191]]]],[11,"clone",E,E,60,[[["self"]],["path"]]],[11,"clone",E,E,61,[[["self"]],[R[3100]]]],[11,"clone",E,E,86,[[["self"]],[R[3098]]]],[11,"clone",E,E,85,[[["self"]],[R[3069]]]],[11,"clone",E,E,56,[[["self"]],[R[3034]]]],[11,"clone",E,E,57,[[["self"]],["binding"]]],[11,"clone",E,E,58,[[["self"]],[R[3192]]]],[11,"clone",E,E,59,[[["self"]],[R[3096]]]],[11,"clone",E,E,62,[[["self"]],["qself"]]],[11,"clone",R[3154],E,198,[[["self"]],["cursor"]]],[11,"clone",R[3155],E,201,[[["self"]],[R[3151]]]],[11,"clone",R[3202],E,206,[[["self"]],["stepcursor"]]],[11,"clone","syn",E,208,[[["self"]],["self"]]],[11,"cmp",E,E,31,[[[R[3075]],["self"]],[R[51]]]],[11,"from",E,E,209,[[["selfvalue"]],["ident"]]],[11,"from",E,E,209,[[["selftype"]],["ident"]]],[11,"from",E,E,209,[[["super"]],["ident"]]],[11,"from",E,E,209,[[["crate"]],["ident"]]],[11,"from",E,E,209,[[["extern"]],["ident"]]],[11,"from",E,E,209,[[[R[3203]]],["ident"]]],[11,"from",E,E,64,[[["ident"]],["meta"]]],[11,"from",E,E,64,[[[R[3225]]],["meta"]]],[11,"from",E,E,64,[[[R[3093]]],["meta"]]],[11,"from",E,E,65,[[["meta"]],[R[3158]]]],[11,"from",E,E,65,[[["lit"]],[R[3158]]]],[11,"from",E,E,66,[[[R[3065]]],["fields"]]],[11,"from",E,E,66,[[[R[3067]]],["fields"]]],[11,"from",E,E,67,[[[R[3160]]],[R[3159]]]],[11,"from",E,E,67,[[[R[3229]]],[R[3159]]]],[11,"from",E,E,67,[[[R[3139]]],[R[3159]]]],[11,"from",E,E,68,[[["exprbox"]],["expr"]]],[11,"from",E,E,68,[[[R[3161]]],["expr"]]],[11,"from",E,E,68,[[[R[3204]]],["expr"]]],[11,"from",E,E,68,[[[R[3221]]],["expr"]]],[11,"from",E,E,68,[[[R[3162]]],["expr"]]],[11,"from",E,E,68,[[[R[3205]]],["expr"]]],[11,"from",E,E,68,[[[R[3163]]],["expr"]]],[11,"from",E,E,68,[[[R[3164]]],["expr"]]],[11,"from",E,E,68,[[["exprlit"]],["expr"]]],[11,"from",E,E,68,[[[R[3222]]],["expr"]]],[11,"from",E,E,68,[[["exprtype"]],["expr"]]],[11,"from",E,E,68,[[["exprlet"]],["expr"]]],[11,"from",E,E,68,[[["exprif"]],["expr"]]],[11,"from",E,E,68,[[[R[3206]]],["expr"]]],[11,"from",E,E,68,[[[R[3165]]],["expr"]]],[11,"from",E,E,68,[[["exprloop"]],["expr"]]],[11,"from",E,E,68,[[[R[3207]]],["expr"]]],[11,"from",E,E,68,[[[R[3166]]],["expr"]]],[11,"from",E,E,68,[[[R[3194]]],["expr"]]],[11,"from",E,E,68,[[[R[3208]]],["expr"]]],[11,"from",E,E,68,[[[R[3195]]],["expr"]]],[11,"from",E,E,68,[[[R[3167]]],["expr"]]],[11,"from",E,E,68,[[[R[3168]]],["expr"]]],[11,"from",E,E,68,[[[R[3169]]],["expr"]]],[11,"from",E,E,68,[[[R[3209]]],["expr"]]],[11,"from",E,E,68,[[[R[3223]]],["expr"]]],[11,"from",E,E,68,[[[R[3170]]],["expr"]]],[11,"from",E,E,68,[[[R[3210]]],["expr"]]],[11,"from",E,E,68,[[[R[3171]]],["expr"]]],[11,"from",E,E,68,[[[R[3196]]],["expr"]]],[11,"from",E,E,68,[[[R[3211]]],["expr"]]],[11,"from",E,E,68,[[[R[3197]]],["expr"]]],[11,"from",E,E,68,[[[R[3198]]],["expr"]]],[11,"from",E,E,68,[[[R[3172]]],["expr"]]],[11,"from",E,E,68,[[[R[3212]]],["expr"]]],[11,"from",E,E,68,[[["exprtry"]],["expr"]]],[11,"from",E,E,68,[[[R[3213]]],["expr"]]],[11,"from",E,E,68,[[[R[3173]]],["expr"]]],[11,"from",E,E,68,[[[R[3214]]],["expr"]]],[11,"from",E,E,68,[[[R[3061]]],["expr"]]],[11,"from",E,E,20,[[[R[9]]],["index"]]],[11,"from",E,E,70,[[[R[3174]]],[R[3071]]]],[11,"from",E,E,70,[[[R[3077]]],[R[3071]]]],[11,"from",E,E,70,[[[R[3175]]],[R[3071]]]],[11,"from",E,E,29,[[["ident"]],["self"]]],[11,"from",E,E,72,[[[R[3178]]],[R[3122]]]],[11,"from",E,E,72,[[[R[3075]]],[R[3122]]]],[11,"from",E,E,73,[[[R[3106]]],[R[3143]]]],[11,"from",E,E,73,[[[R[3104]]],[R[3143]]]],[11,"from",E,E,73,[[[R[3102]]],[R[3143]]]],[11,"from",E,E,76,[[["litstr"]],["lit"]]],[11,"from",E,E,76,[[[R[3200]]],["lit"]]],[11,"from",E,E,76,[[["litbyte"]],["lit"]]],[11,"from",E,E,76,[[["litchar"]],["lit"]]],[11,"from",E,E,76,[[["litint"]],["lit"]]],[11,"from",E,E,76,[[["litfloat"]],["lit"]]],[11,"from",E,E,76,[[["litbool"]],["lit"]]],[11,"from",E,E,76,[[[R[3086]]],["lit"]]],[11,"from",E,E,79,[[[R[3179]]],["data"]]],[11,"from",E,E,79,[[[R[3219]]],["data"]]],[11,"from",E,E,79,[[[R[3180]]],["data"]]],[11,"from",E,E,84,[[[R[3181]]],["type"]]],[11,"from",E,E,84,[[[R[3182]]],["type"]]],[11,"from",E,E,84,[[["typeptr"]],["type"]]],[11,"from",E,E,84,[[[R[3127]]],["type"]]],[11,"from",E,E,84,[[[R[3183]]],["type"]]],[11,"from",E,E,84,[[[R[3184]]],["type"]]],[11,"from",E,E,84,[[[R[3185]]],["type"]]],[11,"from",E,E,84,[[[R[3228]]],["type"]]],[11,"from",E,E,84,[[[R[3130]]],["type"]]],[11,"from",E,E,84,[[[R[3116]]],["type"]]],[11,"from",E,E,84,[[[R[3186]]],["type"]]],[11,"from",E,E,84,[[[R[3187]]],["type"]]],[11,"from",E,E,84,[[[R[3188]]],["type"]]],[11,"from",E,E,84,[[[R[3189]]],["type"]]],[11,"from",E,E,84,[[[R[3133]]],["type"]]],[11,"from",E,E,60,[[[T]],["self"]]],[11,"from",E,E,61,[[[T]],["self"]]],[11,"from",E,E,208,[[["lexerror"]],["self"]]],[11,R[48],R[3155],E,201,[[]]],[11,"extend",E,E,201,[[["self"],[R[50]]]]],[11,"extend",E,E,201,[[["self"],[R[50]]]]],[11,"drop",R[3202],E,207,[[["self"]]]],[11,R[264],"syn",E,31,[[[R[3075]],["self"]],[[R[52],[R[51]]],[R[51]]]]],[11,"next",R[3155],E,242,[[["self"]],[R[52]]]],[11,"next",E,E,243,[[["self"]],[R[52]]]],[11,"next",E,E,244,[[["self"]],[R[52]]]],[11,"next",E,E,245,[[["self"]],[R[52]]]],[11,"next",E,E,246,[[["self"]],[R[52]]]],[11,"next",E,E,247,[[["self"]],[R[52]]]],[11,"len",E,E,242,[[["self"]],[R[9]]]],[11,"len",E,E,243,[[["self"]],[R[9]]]],[11,"len",E,E,244,[[["self"]],[R[9]]]],[11,"len",E,E,245,[[["self"]],[R[9]]]],[11,"len",E,E,246,[[["self"]],[R[9]]]],[11,"len",E,E,247,[[["self"]],[R[9]]]],[11,R[79],R[3156],E,87,[[],["self"]]],[11,R[79],E,E,88,[[],["self"]]],[11,R[79],E,E,89,[[],["self"]]],[11,R[79],E,E,90,[[],["self"]]],[11,R[79],E,E,91,[[],["self"]]],[11,R[79],E,E,92,[[],["self"]]],[11,R[79],E,E,93,[[],["self"]]],[11,R[79],E,E,94,[[],["self"]]],[11,R[79],E,E,95,[[],["self"]]],[11,R[79],E,E,96,[[],["self"]]],[11,R[79],E,E,97,[[],["self"]]],[11,R[79],E,E,98,[[],["self"]]],[11,R[79],E,E,99,[[],["self"]]],[11,R[79],E,E,100,[[],["self"]]],[11,R[79],E,E,101,[[],["self"]]],[11,R[79],E,E,102,[[],["self"]]],[11,R[79],E,E,103,[[],["self"]]],[11,R[79],E,E,104,[[],["self"]]],[11,R[79],E,E,105,[[],["self"]]],[11,R[79],E,E,106,[[],["self"]]],[11,R[79],E,E,107,[[],["self"]]],[11,R[79],E,E,108,[[],["self"]]],[11,R[79],E,E,109,[[],["self"]]],[11,R[79],E,E,110,[[],["self"]]],[11,R[79],E,E,111,[[],["self"]]],[11,R[79],E,E,112,[[],["self"]]],[11,R[79],E,E,113,[[],["self"]]],[11,R[79],E,E,114,[[],["self"]]],[11,R[79],E,E,115,[[],["self"]]],[11,R[79],E,E,116,[[],["self"]]],[11,R[79],E,E,117,[[],["self"]]],[11,R[79],E,E,118,[[],["self"]]],[11,R[79],E,E,119,[[],["self"]]],[11,R[79],E,E,120,[[],["self"]]],[11,R[79],E,E,121,[[],["self"]]],[11,R[79],E,E,122,[[],["self"]]],[11,R[79],E,E,123,[[],["self"]]],[11,R[79],E,E,124,[[],["self"]]],[11,R[79],E,E,125,[[],["self"]]],[11,R[79],E,E,126,[[],["self"]]],[11,R[79],E,E,127,[[],["self"]]],[11,R[79],E,E,128,[[],["self"]]],[11,R[79],E,E,129,[[],["self"]]],[11,R[79],E,E,130,[[],["self"]]],[11,R[79],E,E,131,[[],["self"]]],[11,R[79],E,E,132,[[],["self"]]],[11,R[79],E,E,133,[[],["self"]]],[11,R[79],E,E,134,[[],["self"]]],[11,R[79],E,E,135,[[],["self"]]],[11,R[79],E,E,136,[[],["self"]]],[11,R[79],E,E,137,[[],["self"]]],[11,R[79],E,E,138,[[],["self"]]],[11,R[79],E,E,139,[[],["self"]]],[11,R[79],E,E,140,[[],["self"]]],[11,R[79],E,E,141,[[],["self"]]],[11,R[79],E,E,142,[[],["self"]]],[11,R[79],E,E,143,[[],["self"]]],[11,R[79],E,E,144,[[],["self"]]],[11,R[79],E,E,145,[[],["self"]]],[11,R[79],E,E,146,[[],["self"]]],[11,R[79],E,E,147,[[],["self"]]],[11,R[79],E,E,148,[[],["self"]]],[11,R[79],E,E,149,[[],["self"]]],[11,R[79],E,E,150,[[],["self"]]],[11,R[79],E,E,151,[[],["self"]]],[11,R[79],E,E,152,[[],["self"]]],[11,R[79],E,E,153,[[],["self"]]],[11,R[79],E,E,154,[[],["self"]]],[11,R[79],E,E,155,[[],["self"]]],[11,R[79],E,E,156,[[],["self"]]],[11,R[79],E,E,157,[[],["self"]]],[11,R[79],E,E,158,[[],["self"]]],[11,R[79],E,E,159,[[],["self"]]],[11,R[79],E,E,160,[[],["self"]]],[11,R[79],E,E,161,[[],["self"]]],[11,R[79],E,E,162,[[],["self"]]],[11,R[79],E,E,163,[[],["self"]]],[11,R[79],E,E,164,[[],["self"]]],[11,R[79],E,E,165,[[],["self"]]],[11,R[79],E,E,166,[[],["self"]]],[11,R[79],E,E,167,[[],["self"]]],[11,R[79],E,E,168,[[],["self"]]],[11,R[79],E,E,169,[[],["self"]]],[11,R[79],E,E,170,[[],["self"]]],[11,R[79],E,E,171,[[],["self"]]],[11,R[79],E,E,172,[[],["self"]]],[11,R[79],E,E,173,[[],["self"]]],[11,R[79],E,E,174,[[],["self"]]],[11,R[79],E,E,175,[[],["self"]]],[11,R[79],E,E,176,[[],["self"]]],[11,R[79],E,E,177,[[],["self"]]],[11,R[79],E,E,178,[[],["self"]]],[11,R[79],E,E,179,[[],["self"]]],[11,R[79],E,E,180,[[],["self"]]],[11,R[79],E,E,181,[[],["self"]]],[11,R[79],E,E,182,[[],["self"]]],[11,R[79],E,E,183,[[],["self"]]],[11,R[79],E,E,184,[[],["self"]]],[11,R[79],E,E,185,[[],["self"]]],[11,R[79],E,E,186,[[],["self"]]],[11,R[79],E,E,187,[[],["self"]]],[11,R[79],E,E,188,[[],["self"]]],[11,R[79],E,E,189,[[],["self"]]],[11,R[79],"syn",E,23,[[],[R[3215]]]],[11,R[79],E,E,21,[[],[R[3043]]]],[11,R[79],E,E,86,[[],["self"]]],[11,R[79],R[3155],E,201,[[],["self"]]],[11,R[54],R[3156],E,87,[[["self"]]]],[11,R[54],E,E,140,[[["self"]]]],[11,R[54],E,E,142,[[["self"]]]],[11,R[54],E,E,145,[[["self"]]]],[11,R[54],E,E,146,[[["self"]]]],[11,R[54],E,E,147,[[["self"]]]],[11,R[54],E,E,149,[[["self"]]]],[11,R[54],E,E,151,[[["self"]]]],[11,R[54],E,E,152,[[["self"]]]],[11,R[54],E,E,154,[[["self"]]]],[11,R[54],E,E,155,[[["self"]]]],[11,R[54],E,E,159,[[["self"]]]],[11,R[54],E,E,162,[[["self"]]]],[11,R[54],E,E,164,[[["self"]]]],[11,R[54],E,E,167,[[["self"]]]],[11,R[54],E,E,170,[[["self"]]]],[11,R[54],E,E,171,[[["self"]]]],[11,R[54],E,E,174,[[["self"]]]],[11,R[54],E,E,177,[[["self"]]]],[11,R[54],E,E,182,[[["self"]]]],[11,R[54],E,E,183,[[["self"]]]],[11,R[54],E,E,185,[[["self"]]]],[11,"fmt",E,E,87,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,88,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,89,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,90,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,91,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,92,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,93,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,94,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,95,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,96,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,97,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,98,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,99,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,100,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,101,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,102,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,103,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,104,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,105,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,106,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,107,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,108,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,109,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,110,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,111,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,112,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,113,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,114,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,115,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,116,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,117,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,118,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,119,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,120,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,121,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,122,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,123,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,124,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,125,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,126,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,127,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,128,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,129,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,130,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,131,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,132,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,133,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,134,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,135,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,136,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,137,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,138,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,139,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,140,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,141,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,142,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,143,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,144,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,145,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,146,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,147,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,148,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,149,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,150,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,151,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,152,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,153,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,154,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,155,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,156,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,157,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,158,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,159,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,160,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,161,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,162,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,163,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,164,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,165,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,166,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,167,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,168,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,169,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,170,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,171,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,172,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,173,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,174,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,175,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,176,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,177,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,178,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,179,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,180,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,181,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,182,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,183,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,184,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,185,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,186,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,187,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,188,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,189,[[["self"],[R[29]]],[R[12]]]],[11,"fmt","syn",E,0,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,63,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,64,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,1,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,2,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,65,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,6,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,66,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,4,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,5,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,3,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,67,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,8,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,7,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,9,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,68,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,215,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,222,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,210,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,11,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,227,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,235,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,10,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,18,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,15,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,12,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,236,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,223,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,221,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,238,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,219,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,224,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,226,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,217,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,237,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,214,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,211,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,212,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,13,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,14,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,228,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,17,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,229,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,216,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,218,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,231,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,225,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,232,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,230,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,16,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,220,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,233,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,213,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,234,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,239,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,19,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,69,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,20,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,23,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,70,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,29,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,24,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,22,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,240,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,190,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,241,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,21,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,72,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,28,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,71,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,30,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,73,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,27,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,26,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,25,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,31,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,76,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,191,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,192,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,193,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,194,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,195,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,196,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,32,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,33,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,77,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,75,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,74,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,34,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,78,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,38,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,79,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,36,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,35,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,37,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,80,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,81,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,84,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,52,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,41,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,50,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,51,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,42,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,47,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,54,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,49,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,53,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,44,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,48,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,43,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,45,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,46,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,55,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,39,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,40,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,82,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,83,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,60,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,61,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,86,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,85,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,56,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,57,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,58,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,59,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,62,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[3155],E,201,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[3202],E,207,[[["self"],[R[29]]],[R[12]]]],[11,"fmt","syn",E,208,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,31,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[3202],E,207,[[["self"],[R[29]]],[R[12]]]],[11,"fmt","syn",E,208,[[["self"],[R[29]]],[R[12]]]],[11,"deref",R[3156],E,87,[[["self"]]]],[11,"deref",E,E,140,[[["self"]]]],[11,"deref",E,E,142,[[["self"]]]],[11,"deref",E,E,145,[[["self"]]]],[11,"deref",E,E,146,[[["self"]]]],[11,"deref",E,E,147,[[["self"]]]],[11,"deref",E,E,149,[[["self"]]]],[11,"deref",E,E,151,[[["self"]]]],[11,"deref",E,E,152,[[["self"]]]],[11,"deref",E,E,154,[[["self"]]]],[11,"deref",E,E,155,[[["self"]]]],[11,"deref",E,E,159,[[["self"]]]],[11,"deref",E,E,162,[[["self"]]]],[11,"deref",E,E,164,[[["self"]]]],[11,"deref",E,E,167,[[["self"]]]],[11,"deref",E,E,170,[[["self"]]]],[11,"deref",E,E,171,[[["self"]]]],[11,"deref",E,E,174,[[["self"]]]],[11,"deref",E,E,177,[[["self"]]]],[11,"deref",E,E,182,[[["self"]]]],[11,"deref",E,E,183,[[["self"]]]],[11,"deref",E,E,185,[[["self"]]]],[11,"deref",R[3202],E,206,[[["self"]]]],[11,"index",R[3155],E,201,[[["self"],[R[9]]]]],[11,R[55],E,E,201,[[["self"],[R[9]]]]],[11,"hash",R[3156],E,87,[[["h"],["self"]]]],[11,"hash",E,E,88,[[["h"],["self"]]]],[11,"hash",E,E,89,[[["h"],["self"]]]],[11,"hash",E,E,90,[[["h"],["self"]]]],[11,"hash",E,E,91,[[["h"],["self"]]]],[11,"hash",E,E,92,[[["h"],["self"]]]],[11,"hash",E,E,93,[[["h"],["self"]]]],[11,"hash",E,E,94,[[["h"],["self"]]]],[11,"hash",E,E,95,[[["h"],["self"]]]],[11,"hash",E,E,96,[[["h"],["self"]]]],[11,"hash",E,E,97,[[["h"],["self"]]]],[11,"hash",E,E,98,[[["h"],["self"]]]],[11,"hash",E,E,99,[[["h"],["self"]]]],[11,"hash",E,E,100,[[["h"],["self"]]]],[11,"hash",E,E,101,[[["h"],["self"]]]],[11,"hash",E,E,102,[[["h"],["self"]]]],[11,"hash",E,E,103,[[["h"],["self"]]]],[11,"hash",E,E,104,[[["h"],["self"]]]],[11,"hash",E,E,105,[[["h"],["self"]]]],[11,"hash",E,E,106,[[["h"],["self"]]]],[11,"hash",E,E,107,[[["h"],["self"]]]],[11,"hash",E,E,108,[[["h"],["self"]]]],[11,"hash",E,E,109,[[["h"],["self"]]]],[11,"hash",E,E,110,[[["h"],["self"]]]],[11,"hash",E,E,111,[[["h"],["self"]]]],[11,"hash",E,E,112,[[["h"],["self"]]]],[11,"hash",E,E,113,[[["h"],["self"]]]],[11,"hash",E,E,114,[[["h"],["self"]]]],[11,"hash",E,E,115,[[["h"],["self"]]]],[11,"hash",E,E,116,[[["h"],["self"]]]],[11,"hash",E,E,117,[[["h"],["self"]]]],[11,"hash",E,E,118,[[["h"],["self"]]]],[11,"hash",E,E,119,[[["h"],["self"]]]],[11,"hash",E,E,120,[[["h"],["self"]]]],[11,"hash",E,E,121,[[["h"],["self"]]]],[11,"hash",E,E,122,[[["h"],["self"]]]],[11,"hash",E,E,123,[[["h"],["self"]]]],[11,"hash",E,E,124,[[["h"],["self"]]]],[11,"hash",E,E,125,[[["h"],["self"]]]],[11,"hash",E,E,126,[[["h"],["self"]]]],[11,"hash",E,E,127,[[["h"],["self"]]]],[11,"hash",E,E,128,[[["h"],["self"]]]],[11,"hash",E,E,129,[[["h"],["self"]]]],[11,"hash",E,E,130,[[["h"],["self"]]]],[11,"hash",E,E,131,[[["h"],["self"]]]],[11,"hash",E,E,132,[[["h"],["self"]]]],[11,"hash",E,E,133,[[["h"],["self"]]]],[11,"hash",E,E,134,[[["h"],["self"]]]],[11,"hash",E,E,135,[[["h"],["self"]]]],[11,"hash",E,E,136,[[["h"],["self"]]]],[11,"hash",E,E,137,[[["h"],["self"]]]],[11,"hash",E,E,138,[[["h"],["self"]]]],[11,"hash",E,E,139,[[["h"],["self"]]]],[11,"hash",E,E,140,[[["h"],["self"]]]],[11,"hash",E,E,141,[[["h"],["self"]]]],[11,"hash",E,E,142,[[["h"],["self"]]]],[11,"hash",E,E,143,[[["h"],["self"]]]],[11,"hash",E,E,144,[[["h"],["self"]]]],[11,"hash",E,E,145,[[["h"],["self"]]]],[11,"hash",E,E,146,[[["h"],["self"]]]],[11,"hash",E,E,147,[[["h"],["self"]]]],[11,"hash",E,E,148,[[["h"],["self"]]]],[11,"hash",E,E,149,[[["h"],["self"]]]],[11,"hash",E,E,150,[[["h"],["self"]]]],[11,"hash",E,E,151,[[["h"],["self"]]]],[11,"hash",E,E,152,[[["h"],["self"]]]],[11,"hash",E,E,153,[[["h"],["self"]]]],[11,"hash",E,E,154,[[["h"],["self"]]]],[11,"hash",E,E,155,[[["h"],["self"]]]],[11,"hash",E,E,156,[[["h"],["self"]]]],[11,"hash",E,E,157,[[["h"],["self"]]]],[11,"hash",E,E,158,[[["h"],["self"]]]],[11,"hash",E,E,159,[[["h"],["self"]]]],[11,"hash",E,E,160,[[["h"],["self"]]]],[11,"hash",E,E,161,[[["h"],["self"]]]],[11,"hash",E,E,162,[[["h"],["self"]]]],[11,"hash",E,E,163,[[["h"],["self"]]]],[11,"hash",E,E,164,[[["h"],["self"]]]],[11,"hash",E,E,165,[[["h"],["self"]]]],[11,"hash",E,E,166,[[["h"],["self"]]]],[11,"hash",E,E,167,[[["h"],["self"]]]],[11,"hash",E,E,168,[[["h"],["self"]]]],[11,"hash",E,E,169,[[["h"],["self"]]]],[11,"hash",E,E,170,[[["h"],["self"]]]],[11,"hash",E,E,171,[[["h"],["self"]]]],[11,"hash",E,E,172,[[["h"],["self"]]]],[11,"hash",E,E,173,[[["h"],["self"]]]],[11,"hash",E,E,174,[[["h"],["self"]]]],[11,"hash",E,E,175,[[["h"],["self"]]]],[11,"hash",E,E,176,[[["h"],["self"]]]],[11,"hash",E,E,177,[[["h"],["self"]]]],[11,"hash",E,E,178,[[["h"],["self"]]]],[11,"hash",E,E,179,[[["h"],["self"]]]],[11,"hash",E,E,180,[[["h"],["self"]]]],[11,"hash",E,E,181,[[["h"],["self"]]]],[11,"hash",E,E,182,[[["h"],["self"]]]],[11,"hash",E,E,183,[[["h"],["self"]]]],[11,"hash",E,E,184,[[["h"],["self"]]]],[11,"hash",E,E,185,[[["h"],["self"]]]],[11,"hash",E,E,186,[[["h"],["self"]]]],[11,"hash",E,E,187,[[["h"],["self"]]]],[11,"hash",E,E,188,[[["h"],["self"]]]],[11,"hash",E,E,189,[[["h"],["self"]]]],[11,"hash","syn",E,0,[[["h"],["self"]]]],[11,"hash",E,E,63,[[["self"],["__h"]]]],[11,"hash",E,E,64,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"hash",E,E,2,[[["self"],["__h"]]]],[11,"hash",E,E,65,[[["self"],["__h"]]]],[11,"hash",E,E,6,[[["self"],["__h"]]]],[11,"hash",E,E,66,[[["self"],["__h"]]]],[11,"hash",E,E,4,[[["self"],["__h"]]]],[11,"hash",E,E,5,[[["self"],["__h"]]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,"hash",E,E,67,[[["self"],["__h"]]]],[11,"hash",E,E,8,[[["self"],["__h"]]]],[11,"hash",E,E,7,[[["self"],["__h"]]]],[11,"hash",E,E,9,[[["self"],["__h"]]]],[11,"hash",E,E,68,[[["self"],["__h"]]]],[11,"hash",E,E,215,[[["self"],["__h"]]]],[11,"hash",E,E,222,[[["self"],["__h"]]]],[11,"hash",E,E,210,[[["self"],["__h"]]]],[11,"hash",E,E,11,[[["self"],["__h"]]]],[11,"hash",E,E,227,[[["self"],["__h"]]]],[11,"hash",E,E,235,[[["self"],["__h"]]]],[11,"hash",E,E,10,[[["self"],["__h"]]]],[11,"hash",E,E,18,[[["self"],["__h"]]]],[11,"hash",E,E,15,[[["self"],["__h"]]]],[11,"hash",E,E,12,[[["self"],["__h"]]]],[11,"hash",E,E,236,[[["self"],["__h"]]]],[11,"hash",E,E,223,[[["self"],["__h"]]]],[11,"hash",E,E,221,[[["self"],["__h"]]]],[11,"hash",E,E,238,[[["self"],["__h"]]]],[11,"hash",E,E,219,[[["self"],["__h"]]]],[11,"hash",E,E,224,[[["self"],["__h"]]]],[11,"hash",E,E,226,[[["self"],["__h"]]]],[11,"hash",E,E,217,[[["self"],["__h"]]]],[11,"hash",E,E,237,[[["self"],["__h"]]]],[11,"hash",E,E,214,[[["self"],["__h"]]]],[11,"hash",E,E,211,[[["self"],["__h"]]]],[11,"hash",E,E,212,[[["self"],["__h"]]]],[11,"hash",E,E,13,[[["self"],["__h"]]]],[11,"hash",E,E,14,[[["self"],["__h"]]]],[11,"hash",E,E,228,[[["self"],["__h"]]]],[11,"hash",E,E,17,[[["self"],["__h"]]]],[11,"hash",E,E,229,[[["self"],["__h"]]]],[11,"hash",E,E,216,[[["self"],["__h"]]]],[11,"hash",E,E,218,[[["self"],["__h"]]]],[11,"hash",E,E,231,[[["self"],["__h"]]]],[11,"hash",E,E,225,[[["self"],["__h"]]]],[11,"hash",E,E,232,[[["self"],["__h"]]]],[11,"hash",E,E,230,[[["self"],["__h"]]]],[11,"hash",E,E,16,[[["self"],["__h"]]]],[11,"hash",E,E,220,[[["self"],["__h"]]]],[11,"hash",E,E,233,[[["self"],["__h"]]]],[11,"hash",E,E,213,[[["self"],["__h"]]]],[11,"hash",E,E,234,[[["self"],["__h"]]]],[11,"hash",E,E,239,[[["self"],["__h"]]]],[11,"hash",E,E,19,[[["h"],["self"]]]],[11,"hash",E,E,69,[[["self"],["__h"]]]],[11,"hash",E,E,20,[[["h"],["self"]]]],[11,"hash",E,E,23,[[["self"],["__h"]]]],[11,"hash",E,E,70,[[["self"],["__h"]]]],[11,"hash",E,E,29,[[["self"],["__h"]]]],[11,"hash",E,E,24,[[["self"],["__h"]]]],[11,"hash",E,E,22,[[["self"],["__h"]]]],[11,"hash",E,E,240,[[["self"],["__h"]]]],[11,"hash",E,E,190,[[["self"],["__h"]]]],[11,"hash",E,E,241,[[["self"],["__h"]]]],[11,"hash",E,E,21,[[["self"],["__h"]]]],[11,"hash",E,E,72,[[["self"],["__h"]]]],[11,"hash",E,E,28,[[["self"],["__h"]]]],[11,"hash",E,E,71,[[["self"],["__h"]]]],[11,"hash",E,E,30,[[["self"],["__h"]]]],[11,"hash",E,E,73,[[["self"],["__h"]]]],[11,"hash",E,E,27,[[["self"],["__h"]]]],[11,"hash",E,E,26,[[["self"],["__h"]]]],[11,"hash",E,E,25,[[["self"],["__h"]]]],[11,"hash",E,E,31,[[["h"],["self"]]]],[11,"hash",E,E,76,[[["self"],["__h"]]]],[11,"hash",E,E,191,[[["h"],["self"]]]],[11,"hash",E,E,192,[[["h"],["self"]]]],[11,"hash",E,E,193,[[["h"],["self"]]]],[11,"hash",E,E,194,[[["h"],["self"]]]],[11,"hash",E,E,195,[[["h"],["self"]]]],[11,"hash",E,E,196,[[["h"],["self"]]]],[11,"hash",E,E,32,[[["h"],["self"]]]],[11,"hash",E,E,33,[[["h"],["self"]]]],[11,"hash",E,E,77,[[["self"],["__h"]]]],[11,"hash",E,E,75,[[["self"],["__h"]]]],[11,"hash",E,E,74,[[["self"],["__h"]]]],[11,"hash",E,E,78,[[["self"],["__h"]]]],[11,"hash",E,E,34,[[["h"],["self"]]]],[11,"hash",E,E,38,[[["self"],["__h"]]]],[11,"hash",E,E,79,[[["self"],["__h"]]]],[11,"hash",E,E,36,[[["self"],["__h"]]]],[11,"hash",E,E,35,[[["self"],["__h"]]]],[11,"hash",E,E,37,[[["self"],["__h"]]]],[11,"hash",E,E,80,[[["self"],["__h"]]]],[11,"hash",E,E,81,[[["self"],["__h"]]]],[11,"hash",E,E,84,[[["self"],["__h"]]]],[11,"hash",E,E,52,[[["self"],["__h"]]]],[11,"hash",E,E,41,[[["self"],["__h"]]]],[11,"hash",E,E,50,[[["self"],["__h"]]]],[11,"hash",E,E,51,[[["self"],["__h"]]]],[11,"hash",E,E,42,[[["self"],["__h"]]]],[11,"hash",E,E,47,[[["self"],["__h"]]]],[11,"hash",E,E,54,[[["self"],["__h"]]]],[11,"hash",E,E,49,[[["self"],["__h"]]]],[11,"hash",E,E,53,[[["self"],["__h"]]]],[11,"hash",E,E,44,[[["self"],["__h"]]]],[11,"hash",E,E,48,[[["self"],["__h"]]]],[11,"hash",E,E,43,[[["self"],["__h"]]]],[11,"hash",E,E,45,[[["self"],["__h"]]]],[11,"hash",E,E,46,[[["self"],["__h"]]]],[11,"hash",E,E,55,[[["h"],["self"]]]],[11,"hash",E,E,39,[[["self"],["__h"]]]],[11,"hash",E,E,40,[[["self"],["__h"]]]],[11,"hash",E,E,82,[[["self"],["__h"]]]],[11,"hash",E,E,83,[[["self"],["__h"]]]],[11,"hash",E,E,60,[[["self"],["__h"]]]],[11,"hash",E,E,61,[[["self"],["__h"]]]],[11,"hash",E,E,86,[[["self"],["__h"]]]],[11,"hash",E,E,85,[[["self"],["__h"]]]],[11,"hash",E,E,56,[[["self"],["__h"]]]],[11,"hash",E,E,57,[[["self"],["__h"]]]],[11,"hash",E,E,58,[[["self"],["__h"]]]],[11,"hash",E,E,59,[[["self"],["__h"]]]],[11,"hash",E,E,62,[[["self"],["__h"]]]],[11,"hash",R[3155],E,201,[[["__htp"],["self"]]]],[11,R[187],E,E,201,[[[R[50]]],["self"]]],[11,R[187],E,E,201,[[[R[50]]],["self"]]],[11,R[30],"syn",E,208,[[["self"]],["str"]]],[11,R[3216],R[3156],E,87,[[[R[790]],["self"]]]],[11,R[3216],E,E,88,[[[R[790]],["self"]]]],[11,R[3216],E,E,89,[[[R[790]],["self"]]]],[11,R[3216],E,E,90,[[[R[790]],["self"]]]],[11,R[3216],E,E,91,[[[R[790]],["self"]]]],[11,R[3216],E,E,92,[[[R[790]],["self"]]]],[11,R[3216],E,E,93,[[[R[790]],["self"]]]],[11,R[3216],E,E,94,[[[R[790]],["self"]]]],[11,R[3216],E,E,95,[[[R[790]],["self"]]]],[11,R[3216],E,E,96,[[[R[790]],["self"]]]],[11,R[3216],E,E,97,[[[R[790]],["self"]]]],[11,R[3216],E,E,98,[[[R[790]],["self"]]]],[11,R[3216],E,E,99,[[[R[790]],["self"]]]],[11,R[3216],E,E,100,[[[R[790]],["self"]]]],[11,R[3216],E,E,101,[[[R[790]],["self"]]]],[11,R[3216],E,E,102,[[[R[790]],["self"]]]],[11,R[3216],E,E,103,[[[R[790]],["self"]]]],[11,R[3216],E,E,104,[[[R[790]],["self"]]]],[11,R[3216],E,E,105,[[[R[790]],["self"]]]],[11,R[3216],E,E,106,[[[R[790]],["self"]]]],[11,R[3216],E,E,107,[[[R[790]],["self"]]]],[11,R[3216],E,E,108,[[[R[790]],["self"]]]],[11,R[3216],E,E,109,[[[R[790]],["self"]]]],[11,R[3216],E,E,110,[[[R[790]],["self"]]]],[11,R[3216],E,E,111,[[[R[790]],["self"]]]],[11,R[3216],E,E,112,[[[R[790]],["self"]]]],[11,R[3216],E,E,113,[[[R[790]],["self"]]]],[11,R[3216],E,E,114,[[[R[790]],["self"]]]],[11,R[3216],E,E,115,[[[R[790]],["self"]]]],[11,R[3216],E,E,116,[[[R[790]],["self"]]]],[11,R[3216],E,E,117,[[[R[790]],["self"]]]],[11,R[3216],E,E,118,[[[R[790]],["self"]]]],[11,R[3216],E,E,119,[[[R[790]],["self"]]]],[11,R[3216],E,E,120,[[[R[790]],["self"]]]],[11,R[3216],E,E,121,[[[R[790]],["self"]]]],[11,R[3216],E,E,122,[[[R[790]],["self"]]]],[11,R[3216],E,E,123,[[[R[790]],["self"]]]],[11,R[3216],E,E,124,[[[R[790]],["self"]]]],[11,R[3216],E,E,125,[[[R[790]],["self"]]]],[11,R[3216],E,E,126,[[[R[790]],["self"]]]],[11,R[3216],E,E,127,[[[R[790]],["self"]]]],[11,R[3216],E,E,128,[[[R[790]],["self"]]]],[11,R[3216],E,E,129,[[[R[790]],["self"]]]],[11,R[3216],E,E,130,[[[R[790]],["self"]]]],[11,R[3216],E,E,131,[[[R[790]],["self"]]]],[11,R[3216],E,E,132,[[[R[790]],["self"]]]],[11,R[3216],E,E,133,[[[R[790]],["self"]]]],[11,R[3216],E,E,134,[[[R[790]],["self"]]]],[11,R[3216],E,E,135,[[[R[790]],["self"]]]],[11,R[3216],E,E,136,[[[R[790]],["self"]]]],[11,R[3216],E,E,137,[[[R[790]],["self"]]]],[11,R[3216],E,E,138,[[[R[790]],["self"]]]],[11,R[3216],E,E,139,[[[R[790]],["self"]]]],[11,R[3216],E,E,140,[[[R[790]],["self"]]]],[11,R[3216],E,E,141,[[[R[790]],["self"]]]],[11,R[3216],E,E,142,[[[R[790]],["self"]]]],[11,R[3216],E,E,143,[[[R[790]],["self"]]]],[11,R[3216],E,E,144,[[[R[790]],["self"]]]],[11,R[3216],E,E,145,[[[R[790]],["self"]]]],[11,R[3216],E,E,146,[[[R[790]],["self"]]]],[11,R[3216],E,E,147,[[[R[790]],["self"]]]],[11,R[3216],E,E,148,[[[R[790]],["self"]]]],[11,R[3216],E,E,149,[[[R[790]],["self"]]]],[11,R[3216],E,E,150,[[[R[790]],["self"]]]],[11,R[3216],E,E,151,[[[R[790]],["self"]]]],[11,R[3216],E,E,152,[[[R[790]],["self"]]]],[11,R[3216],E,E,153,[[[R[790]],["self"]]]],[11,R[3216],E,E,154,[[[R[790]],["self"]]]],[11,R[3216],E,E,155,[[[R[790]],["self"]]]],[11,R[3216],E,E,156,[[[R[790]],["self"]]]],[11,R[3216],E,E,157,[[[R[790]],["self"]]]],[11,R[3216],E,E,158,[[[R[790]],["self"]]]],[11,R[3216],E,E,159,[[[R[790]],["self"]]]],[11,R[3216],E,E,160,[[[R[790]],["self"]]]],[11,R[3216],E,E,161,[[[R[790]],["self"]]]],[11,R[3216],E,E,162,[[[R[790]],["self"]]]],[11,R[3216],E,E,163,[[[R[790]],["self"]]]],[11,R[3216],E,E,164,[[[R[790]],["self"]]]],[11,R[3216],E,E,165,[[[R[790]],["self"]]]],[11,R[3216],E,E,166,[[[R[790]],["self"]]]],[11,R[3216],E,E,167,[[[R[790]],["self"]]]],[11,R[3216],E,E,168,[[[R[790]],["self"]]]],[11,R[3216],E,E,169,[[[R[790]],["self"]]]],[11,R[3216],E,E,170,[[[R[790]],["self"]]]],[11,R[3216],E,E,171,[[[R[790]],["self"]]]],[11,R[3216],E,E,172,[[[R[790]],["self"]]]],[11,R[3216],E,E,173,[[[R[790]],["self"]]]],[11,R[3216],E,E,174,[[[R[790]],["self"]]]],[11,R[3216],E,E,175,[[[R[790]],["self"]]]],[11,R[3216],E,E,176,[[[R[790]],["self"]]]],[11,R[3216],E,E,177,[[[R[790]],["self"]]]],[11,R[3216],E,E,178,[[[R[790]],["self"]]]],[11,R[3216],E,E,179,[[[R[790]],["self"]]]],[11,R[3216],E,E,180,[[[R[790]],["self"]]]],[11,R[3216],E,E,181,[[[R[790]],["self"]]]],[11,R[3216],E,E,182,[[[R[790]],["self"]]]],[11,R[3216],E,E,183,[[[R[790]],["self"]]]],[11,R[3216],E,E,184,[[[R[790]],["self"]]]],[11,R[3216],E,E,185,[[[R[790]],["self"]]]],[11,R[3216],"syn",E,64,[[[R[790]],["self"]]]],[11,R[3216],E,E,65,[[[R[790]],["self"]]]],[11,R[3216],E,E,0,[[[R[790]],["self"]]]],[11,R[3216],E,E,1,[[[R[790]],["self"]]]],[11,R[3216],E,E,2,[[[R[790]],["self"]]]],[11,R[3216],E,E,66,[[[R[790]],["self"]]]],[11,R[3216],E,E,67,[[[R[790]],["self"]]]],[11,R[3216],E,E,6,[[[R[790]],["self"]]]],[11,R[3216],E,E,4,[[[R[790]],["self"]]]],[11,R[3216],E,E,5,[[[R[790]],["self"]]]],[11,R[3216],E,E,3,[[[R[790]],["self"]]]],[11,R[3216],E,E,8,[[[R[790]],["self"]]]],[11,R[3216],E,E,7,[[[R[790]],["self"]]]],[11,R[3216],E,E,9,[[[R[790]],["self"]]]],[11,R[3216],E,E,68,[[[R[790]],["self"]]]],[11,R[3216],E,E,11,[[[R[790]],["self"]]]],[11,R[3216],E,E,10,[[[R[790]],["self"]]]],[11,R[3216],E,E,18,[[[R[790]],["self"]]]],[11,R[3216],E,E,15,[[[R[790]],["self"]]]],[11,R[3216],E,E,12,[[[R[790]],["self"]]]],[11,R[3216],E,E,13,[[[R[790]],["self"]]]],[11,R[3216],E,E,69,[[[R[790]],["self"]]]],[11,R[3216],E,E,20,[[[R[790]],["self"]]]],[11,R[3216],E,E,14,[[[R[790]],["self"]]]],[11,R[3216],E,E,17,[[[R[790]],["self"]]]],[11,R[3216],E,E,16,[[[R[790]],["self"]]]],[11,R[3216],E,E,19,[[[R[790]],["self"]]]],[11,R[3216],E,E,70,[[[R[790]],["self"]]]],[11,R[3216],E,E,72,[[[R[790]],["self"]]]],[11,R[3216],E,E,73,[[[R[790]],["self"]]]],[11,R[3216],E,E,23,[[[R[790]],["self"]]]],[11,R[3216],E,E,240,[[[R[790]],["self"]]]],[11,R[3216],E,E,190,[[[R[790]],["self"]]]],[11,R[3216],E,E,241,[[[R[790]],["self"]]]],[11,R[3216],E,E,21,[[[R[790]],["self"]]]],[11,R[3216],E,E,24,[[[R[790]],["self"]]]],[11,R[3216],E,E,29,[[[R[790]],["self"]]]],[11,R[3216],E,E,28,[[[R[790]],["self"]]]],[11,R[3216],E,E,71,[[[R[790]],["self"]]]],[11,R[3216],E,E,22,[[[R[790]],["self"]]]],[11,R[3216],E,E,30,[[[R[790]],["self"]]]],[11,R[3216],E,E,27,[[[R[790]],["self"]]]],[11,R[3216],E,E,26,[[[R[790]],["self"]]]],[11,R[3216],E,E,25,[[[R[790]],["self"]]]],[11,R[3216],E,E,31,[[[R[790]],["self"]]]],[11,R[3216],E,E,76,[[[R[790]],["self"]]]],[11,R[3216],E,E,191,[[[R[790]],["self"]]]],[11,R[3216],E,E,192,[[[R[790]],["self"]]]],[11,R[3216],E,E,193,[[[R[790]],["self"]]]],[11,R[3216],E,E,194,[[[R[790]],["self"]]]],[11,R[3216],E,E,195,[[[R[790]],["self"]]]],[11,R[3216],E,E,196,[[[R[790]],["self"]]]],[11,R[3216],E,E,32,[[[R[790]],["self"]]]],[11,R[3216],E,E,33,[[[R[790]],["self"]]]],[11,R[3216],E,E,34,[[[R[790]],["self"]]]],[11,R[3216],E,E,38,[[[R[790]],["self"]]]],[11,R[3216],E,E,80,[[[R[790]],["self"]]]],[11,R[3216],E,E,81,[[[R[790]],["self"]]]],[11,R[3216],E,E,84,[[[R[790]],["self"]]]],[11,R[3216],E,E,52,[[[R[790]],["self"]]]],[11,R[3216],E,E,41,[[[R[790]],["self"]]]],[11,R[3216],E,E,50,[[[R[790]],["self"]]]],[11,R[3216],E,E,51,[[[R[790]],["self"]]]],[11,R[3216],E,E,42,[[[R[790]],["self"]]]],[11,R[3216],E,E,47,[[[R[790]],["self"]]]],[11,R[3216],E,E,54,[[[R[790]],["self"]]]],[11,R[3216],E,E,49,[[[R[790]],["self"]]]],[11,R[3216],E,E,53,[[[R[790]],["self"]]]],[11,R[3216],E,E,44,[[[R[790]],["self"]]]],[11,R[3216],E,E,43,[[[R[790]],["self"]]]],[11,R[3216],E,E,48,[[[R[790]],["self"]]]],[11,R[3216],E,E,45,[[[R[790]],["self"]]]],[11,R[3216],E,E,46,[[[R[790]],["self"]]]],[11,R[3216],E,E,55,[[[R[790]],["self"]]]],[11,R[3216],E,E,83,[[[R[790]],["self"]]]],[11,R[3216],E,E,40,[[[R[790]],["self"]]]],[11,R[3216],E,E,82,[[[R[790]],["self"]]]],[11,R[3216],E,E,39,[[[R[790]],["self"]]]],[11,R[3216],E,E,60,[[[R[790]],["self"]]]],[11,R[3216],E,E,61,[[[R[790]],["self"]]]],[11,R[3216],E,E,86,[[[R[790]],["self"]]]],[11,R[3216],E,E,85,[[[R[790]],["self"]]]],[11,R[3216],E,E,56,[[[R[790]],["self"]]]],[11,R[3216],E,E,57,[[[R[790]],["self"]]]],[11,R[3216],E,E,58,[[[R[790]],["self"]]]],[11,R[3216],E,E,59,[[[R[790]],["self"]]]],[11,R[3216],R[3155],E,201,[[[R[790]],["self"]]]],[11,R[3216],E,E,200,[[[R[790]],["self"]]]],[11,"new","syn",R[3278],209,[[["str"],["span"]],["ident"]]],[11,"span",E,R[3279],209,[[["self"]],["span"]]],[11,R[792],E,R[3280],209,[[["self"],["span"]]]],[11,"visit_abi","syn::visit",E,203,[[["self"],["abi"]]]],[11,R[3033],E,E,203,[[["self"],[R[3034]]]]],[11,R[3035],E,E,203,[[["self"],[R[3157]]]]],[11,R[3036],E,E,203,[[[R[3217]],["self"]]]],[11,R[3037],E,E,203,[[["self"],[R[3190]]]]],[11,R[3038],E,E,203,[[["self"],[R[3039]]]]],[11,R[3040],E,E,203,[[["self"],["binop"]]]],[11,R[3041],E,E,203,[[["self"],["binding"]]]],[11,R[3042],E,E,203,[[["self"],[R[3043]]]]],[11,R[3044],E,E,203,[[["self"],[R[3175]]]]],[11,R[3045],E,E,203,[[["self"],[R[3192]]]]],[11,R[3218],E,E,203,[[["self"],["data"]]]],[11,R[3046],E,E,203,[[[R[3219]],["self"]]]],[11,R[3047],E,E,203,[[[R[3179]],["self"]]]],[11,R[3048],E,E,203,[[["self"],[R[3180]]]]],[11,R[3049],E,E,203,[[["self"],[R[3050]]]]],[11,R[3220],E,E,203,[[["expr"],["self"]]]],[11,R[3051],E,E,203,[[["self"],[R[3163]]]]],[11,R[3052],E,E,203,[[["self"],[R[3221]]]]],[11,R[3053],E,E,203,[[["self"],[R[3222]]]]],[11,R[3054],E,E,203,[[["self"],[R[3168]]]]],[11,R[3055],E,E,203,[[["self"],[R[3169]]]]],[11,R[3056],E,E,203,[[["self"],["exprlit"]]]],[11,R[3057],E,E,203,[[[R[3172]],["self"]]]],[11,R[3058],E,E,203,[[["self"],[R[3223]]]]],[11,R[3059],E,E,203,[[["self"],[R[3164]]]]],[11,R[3060],E,E,203,[[[R[3061]],["self"]]]],[11,R[3062],E,E,203,[[["self"],["field"]]]],[11,R[3063],E,E,203,[[["self"],["fields"]]]],[11,R[3064],E,E,203,[[[R[3065]],["self"]]]],[11,R[3066],E,E,203,[[["self"],[R[3067]]]]],[11,R[3068],E,E,203,[[["self"],[R[3069]]]]],[11,R[3070],E,E,203,[[["self"],[R[3071]]]]],[11,R[3072],E,E,203,[[["self"],[R[3215]]]]],[11,R[3073],E,E,203,[[["self"],["index"]]]],[11,R[3074],E,E,203,[[["self"],[R[3075]]]]],[11,R[3076],E,E,203,[[[R[3077]],["self"]]]],[11,"visit_lit",E,E,203,[[["self"],["lit"]]]],[11,R[3078],E,E,203,[[["self"],["litbool"]]]],[11,R[3079],E,E,203,[[["self"],["litbyte"]]]],[11,R[3080],E,E,203,[[["self"],[R[3200]]]]],[11,R[3081],E,E,203,[[["litchar"],["self"]]]],[11,R[3082],E,E,203,[[["self"],["litfloat"]]]],[11,R[3083],E,E,203,[[["self"],["litint"]]]],[11,R[3084],E,E,203,[[["self"],["litstr"]]]],[11,R[3085],E,E,203,[[["self"],[R[3086]]]]],[11,R[3087],E,E,203,[[["self"],["macro"]]]],[11,R[3088],E,E,203,[[["self"],[R[3089]]]]],[11,R[3090],E,E,203,[[["member"],["self"]]]],[11,R[3224],E,E,203,[[["meta"],["self"]]]],[11,R[3091],E,E,203,[[["self"],[R[3225]]]]],[11,R[3092],E,E,203,[[[R[3093]],["self"]]]],[11,R[3094],E,E,203,[[["self"],[R[3158]]]]],[11,R[3095],E,E,203,[[["self"],[R[3096]]]]],[11,R[3226],E,E,203,[[["self"],["path"]]]],[11,R[3097],E,E,203,[[[R[3098]],["self"]]]],[11,R[3099],E,E,203,[[["self"],[R[3100]]]]],[11,R[3101],E,E,203,[[["self"],[R[3102]]]]],[11,R[3103],E,E,203,[[[R[3104]],["self"]]]],[11,R[3105],E,E,203,[[["self"],[R[3106]]]]],[11,R[3107],E,E,203,[[["qself"],["self"]]]],[11,R[3108],E,E,203,[[["self"],[R[3191]]]]],[11,R[3109],E,E,203,[[["self"],[R[3178]]]]],[11,R[3110],E,E,203,[[["self"],[R[3111]]]]],[11,R[3227],E,E,203,[[["self"],["type"]]]],[11,R[3112],E,E,203,[[["self"],[R[3182]]]]],[11,R[3113],E,E,203,[[["self"],[R[3183]]]]],[11,R[3114],E,E,203,[[["self"],[R[3187]]]]],[11,R[3115],E,E,203,[[["self"],[R[3116]]]]],[11,R[3117],E,E,203,[[[R[3188]],["self"]]]],[11,R[3118],E,E,203,[[[R[3189]],["self"]]]],[11,R[3119],E,E,203,[[[R[3184]],["self"]]]],[11,R[3120],E,E,203,[[["self"],[R[3174]]]]],[11,R[3121],E,E,203,[[["self"],[R[3122]]]]],[11,R[3123],E,E,203,[[["self"],[R[3186]]]]],[11,R[3124],E,E,203,[[[R[3228]],["self"]]]],[11,R[3125],E,E,203,[[["self"],["typeptr"]]]],[11,R[3126],E,E,203,[[["self"],[R[3127]]]]],[11,R[3128],E,E,203,[[["self"],[R[3181]]]]],[11,R[3129],E,E,203,[[["self"],[R[3130]]]]],[11,R[3131],E,E,203,[[["self"],[R[3185]]]]],[11,R[3132],E,E,203,[[["self"],[R[3133]]]]],[11,R[3134],E,E,203,[[["self"],["unop"]]]],[11,R[3135],E,E,203,[[["self"],["variant"]]]],[11,R[3136],E,E,203,[[["self"],[R[3229]]]]],[11,R[3137],E,E,203,[[["self"],[R[3160]]]]],[11,R[3138],E,E,203,[[["self"],[R[3139]]]]],[11,R[3140],E,E,203,[[[R[3159]],["self"]]]],[11,R[3141],E,E,203,[[[R[3031]],["self"]]]],[11,R[3142],E,E,203,[[["self"],[R[3143]]]]],[11,R[3230],E,E,203,[[["self"],["span"]]]],[11,R[3144],E,E,203,[[["self"],["ident"]]]],[11,"peek",R[3202],R[3231],248,[[["self"],["peek"]],["bool"]]],[11,"error",E,R[3152],248,[[],["error"]]]],"p":[[3,"Attribute"],[3,"MetaList"],[3,R[3232]],[3,"Field"],[3,R[3233]],[3,R[3234]],[3,"Variant"],[3,"VisCrate"],[3,"VisPublic"],[3,R[3235]],[3,"ExprBinary"],[3,"ExprCall"],[3,"ExprCast"],[3,"ExprField"],[3,"ExprIndex"],[3,"ExprLit"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprUnary"],[3,R[3236]],[3,"Index"],[3,R[3237]],[3,"ConstParam"],[3,"Generics"],[3,R[3238]],[3,R[3239]],[3,R[3240]],[3,R[3241]],[3,"TraitBound"],[3,"TypeParam"],[3,R[3242]],[3,"Lifetime"],[3,"LitBool"],[3,R[3243]],[3,"Macro"],[3,"DataEnum"],[3,"DataStruct"],[3,"DataUnion"],[3,R[3244]],[3,"Abi"],[3,"BareFnArg"],[3,"TypeArray"],[3,"TypeBareFn"],[3,"TypeGroup"],[3,R[3245]],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeNever"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,R[3246]],[3,"TypeSlice"],[3,R[3247]],[3,"TypeTuple"],[3,R[3248]],[3,R[3249]],[3,"Binding"],[3,R[3250]],[3,R[3251]],[3,"Path"],[3,R[3252]],[3,"QSelf"],[4,"AttrStyle"],[4,"Meta"],[4,"NestedMeta"],[4,"Fields"],[4,"Visibility"],[4,"Expr"],[4,"Member"],[4,R[3253]],[4,R[3254]],[4,R[3255]],[4,R[3256]],[4,R[3257]],[4,"IntSuffix"],[4,"Lit"],[4,"StrStyle"],[4,R[3258]],[4,"Data"],[4,"BinOp"],[4,"UnOp"],[4,R[3259]],[4,"ReturnType"],[4,"Type"],[4,R[3260]],[4,R[3261]],[3,"Underscore"],[3,"Abstract"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Become"],[3,"Box"],[3,"Break"],[3,"Const"],[3,"Continue"],[3,"Crate"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,R[3262]],[3,"Extern"],[3,"Final"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Override"],[3,"Priv"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"SelfType"],[3,"SelfValue"],[3,"Static"],[3,"Struct"],[3,"Super"],[3,"Trait"],[3,"Try"],[3,"Type"],[3,"Typeof"],[3,"Union"],[3,"Unsafe"],[3,"Unsized"],[3,"Use"],[3,"Virtual"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dollar"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"FatArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Tilde"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[3,R[3263]],[3,"LitStr"],[3,"LitByteStr"],[3,"LitByte"],[3,"LitChar"],[3,"LitInt"],[3,"LitFloat"],[3,R[3264]],[3,"Cursor"],[8,"IdentExt"],[4,"Pair"],[3,R[3265]],[8,"Spanned"],[8,"Visit"],[8,"Parse"],[8,"Parser"],[3,"StepCursor"],[3,R[3266]],[3,"Error"],[3,"Ident"],[3,"ExprArray"],[3,"ExprAssign"],[3,R[3267]],[3,"ExprAsync"],[3,"ExprBlock"],[3,"ExprBox"],[3,"ExprBreak"],[3,R[3268]],[3,R[3269]],[3,R[3270]],[3,"ExprGroup"],[3,"ExprIf"],[3,R[3271]],[3,"ExprLet"],[3,"ExprLoop"],[3,"ExprMacro"],[3,"ExprMatch"],[3,R[3272]],[3,"ExprRange"],[3,R[3273]],[3,"ExprRepeat"],[3,"ExprReturn"],[3,"ExprStruct"],[3,"ExprTry"],[3,R[3274]],[3,"ExprTuple"],[3,"ExprType"],[3,"ExprUnsafe"],[3,"ExprWhile"],[3,"ExprYield"],[3,R[3275]],[3,"Turbofish"],[3,"Pairs"],[3,"PairsMut"],[3,"IntoPairs"],[3,R[60]],[3,"Iter"],[3,R[262]],[3,"Lookahead1"]]};
searchIndex["textwrap"]={"doc":"`textwrap` provides functions for word wrapping and…","i":[[3,R[557],"textwrap","Use this as a [`Wrapper.splitter`] to avoid any kind of…",N,N],[3,R[558],E,"Simple and default way to split words: splitting on…",N,N],[3,"Wrapper",E,"A Wrapper holds settings for wrapping and filling text.…",N,N],[12,"width",E,"The width in columns at which the text will be wrapped.",0,N],[12,R[549],E,"Indentation used for the first line of output.",0,N],[12,R[550],E,"Indentation used for subsequent lines of output.",0,N],[12,R[551],E,"Allow long words to be broken if they cannot fit on a…",0,N],[12,"splitter",E,"The method for splitting words. If the `hyphenation`…",0,N],[3,R[559],E,"An iterator over the lines of the input string which owns…",N,N],[3,"WrapIter",E,"An iterator over the lines of the input string which…",N,N],[5,"fill",E,"Fill a line of text at `width` characters. Strings are…",N,[[["str"],[R[9]]],["string"]]],[5,"wrap",E,"Wrap a line of text at `width` characters. Strings are…",N,[[["str"],[R[9]]],[["vec",["cow"]],["cow",["str"]]]]],[5,R[552],E,"Lazily wrap a line of text at `width` characters. Strings…",N,[[["str"],[R[9]]],[[R[554],[R[548]]],[R[548]]]]],[5,"indent",E,"Add prefix to each non-empty line.",N,[[["str"]],["string"]]],[5,"dedent",E,"Removes common leading whitespace from each line.",N,[[["str"]],["string"]]],[8,R[556],E,"An interface for splitting words.",N,N],[10,"split",E,"Return all possible splits of word. Each split is a triple…",1,[[["self"],["str"]],["vec"]]],[11,"new",E,"Create a new Wrapper for wrapping at the specified width.…",0,[[[R[9]]],[[R[555],[R[548]]],[R[548]]]]],[11,"with_splitter",E,"Use the given [`WordSplitter`] to create a new Wrapper for…",0,[[["s"],[R[9]]],[R[555]]]],[11,R[549],E,"Change [`self.initial_indent`]. The initial indentation is…",0,[[["str"]],[R[555]]]],[11,R[550],E,"Change [`self.subsequent_indent`]. The subsequent…",0,[[["str"]],[R[555]]]],[11,R[551],E,"Change [`self.break_words`]. This controls if words longer…",0,[[["bool"]],[R[555]]]],[11,"fill",E,"Fill a line of text at `self.width` characters. Strings…",0,[[["str"],["self"]],["string"]]],[11,"wrap",E,"Wrap a line of text at `self.width` characters. Strings…",0,[[["str"],["self"]],[["cow",["str"]],["vec",["cow"]]]]],[11,R[552],E,R[553],0,[[["str"],["self"]],["wrapiter"]]],[11,"into_wrap_iter",E,R[553],0,[[["str"]],[R[554]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[17],E,E,2,[[[T],["self"]]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[17],E,E,3,[[[T],["self"]]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[[T],["self"]]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[48],E,E,4,[[],["i"]]],[11,"into",E,E,4,[[],[U]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[48],E,E,5,[[],["i"]]],[11,"into",E,E,5,[[],[U]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,R[18],E,E,5,[[["self"]],[R[40]]]],[11,"split",E,E,2,[[["self"],["str"]],["vec"]]],[11,"split",E,E,3,[[["self"],["str"]],["vec"]]],[11,"clone",E,E,2,[[["self"]],["nohyphenation"]]],[11,"clone",E,E,3,[[["self"]],[R[548]]]],[11,"clone",E,E,0,[[["self"]],[R[555]]]],[11,"next",E,E,4,[[["self"]],[["cow",["str"]],[R[52],["cow"]]]]],[11,"next",E,E,5,[[["self"]],[["cow",["str"]],[R[52],["cow"]]]]],[11,"fmt",E,E,2,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,3,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,0,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,4,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,5,[[[R[29]],["self"]],[R[12]]]]],"p":[[3,"Wrapper"],[8,R[556]],[3,R[557]],[3,R[558]],[3,R[559]],[3,"WrapIter"]]};
searchIndex["time"]={"doc":"Simple time handling.","i":[[3,"Duration","time",R[3410],N,N],[3,R[1401],E,"Represents error when converting `Duration` to/from a…",N,N],[3,"Timespec",E,"A record specifying a time value in seconds and…",N,N],[12,"sec",E,E,0,N],[12,"nsec",E,E,0,N],[3,R[1400],E,"An opaque structure representing a moment in time.",N,N],[3,"SteadyTime",E,"A structure representing a moment in time.",N,N],[3,"Tm",E,"Holds a calendar date and time broken down into its…",N,N],[12,"tm_sec",E,"Seconds after the minute - [0, 60]",1,N],[12,"tm_min",E,"Minutes after the hour - [0, 59]",1,N],[12,"tm_hour",E,"Hours after midnight - [0, 23]",1,N],[12,"tm_mday",E,"Day of the month - [1, 31]",1,N],[12,"tm_mon",E,"Months since January - [0, 11]",1,N],[12,"tm_year",E,"Years since 1900",1,N],[12,"tm_wday",E,"Days since Sunday - [0, 6]. 0 = Sunday, 1 = Monday, ..., 6…",1,N],[12,"tm_yday",E,"Days since January 1 - [0, 365]",1,N],[12,"tm_isdst",E,"Daylight Saving Time flag.",1,N],[12,"tm_utcoff",E,"Identifies the time zone that was used to compute this…",1,N],[12,"tm_nsec",E,"Nanoseconds after the second - [0, 109 - 1]",1,N],[3,"TmFmt",E,"A wrapper around a `Tm` and format string that implements…",N,N],[4,R[3411],E,E,N,N],[13,"InvalidSecond",E,E,2,N],[13,"InvalidMinute",E,E,2,N],[13,"InvalidHour",E,E,2,N],[13,"InvalidDay",E,E,2,N],[13,"InvalidMonth",E,E,2,N],[13,"InvalidYear",E,E,2,N],[13,"InvalidDayOfWeek",E,E,2,N],[13,"InvalidDayOfMonth",E,E,2,N],[13,"InvalidDayOfYear",E,E,2,N],[13,"InvalidZoneOffset",E,E,2,N],[13,"InvalidTime",E,E,2,N],[13,"InvalidSecondsSinceEpoch",E,E,2,N],[13,"MissingFormatConverter",E,E,2,N],[13,"InvalidFormatSpecifier",E,E,2,N],[13,"UnexpectedCharacter",E,E,2,N],[5,"strptime",E,"Parses the time from the string according to the format…",N,[[["str"]],[[R[1392]],["tm"],[R[12],["tm",R[1392]]]]]],[5,R[5530],E,"Returns the current time as a `timespec` containing the…",N,[[],[R[777]]]],[5,"precise_time_ns",E,R[1391],N,[[],["u64"]]],[5,"precise_time_s",E,R[1391],N,[[],["f64"]]],[5,"tzset",E,E,N,[[]]],[5,"empty_tm",E,E,N,[[],["tm"]]],[5,"at_utc",E,"Returns the specified time in UTC",N,[[[R[777]]],["tm"]]],[5,"now_utc",E,"Returns the current time in UTC",N,[[],["tm"]]],[5,"at",E,"Returns the specified time in the local timezone",N,[[[R[777]]],["tm"]]],[5,"now",E,"Returns the current time in the local timezone",N,[[],["tm"]]],[5,"strftime",E,R[1397],N,[[["str"],["tm"]],[["string"],[R[1392]],[R[12],["string",R[1392]]]]]],[11,"weeks",E,R[3412],3,[[["i64"]],[R[1358]]]],[11,"days",E,R[3413],3,[[["i64"]],[R[1358]]]],[11,"hours",E,R[3414],3,[[["i64"]],[R[1358]]]],[11,"minutes",E,R[3415],3,[[["i64"]],[R[1358]]]],[11,"seconds",E,R[3416],3,[[["i64"]],[R[1358]]]],[11,R[1958],E,R[3417],3,[[["i64"]],[R[1358]]]],[11,R[1959],E,R[3418],3,[[["i64"]],[R[1358]]]],[11,R[1960],E,R[3419],3,[[["i64"]],[R[1358]]]],[11,"span",E,R[3420],3,[[["f"]],[R[1358]]]],[11,"num_weeks",E,R[3421],3,[[["self"]],["i64"]]],[11,"num_days",E,R[3422],3,[[["self"]],["i64"]]],[11,"num_hours",E,R[3423],3,[[["self"]],["i64"]]],[11,R[2028],E,R[3424],3,[[["self"]],["i64"]]],[11,R[1961],E,R[3425],3,[[["self"]],["i64"]]],[11,R[1962],E,R[3426],3,[[["self"]],["i64"]]],[11,R[1963],E,R[3427],3,[[["self"]],[[R[52],["i64"]],["i64"]]]],[11,R[1964],E,R[3428],3,[[["self"]],[[R[52],["i64"]],["i64"]]]],[11,R[1402],E,R[3429],3,[[[R[1358]],["self"]],[[R[52],[R[1358]]],[R[1358]]]]],[11,R[1403],E,R[3430],3,[[[R[1358]],["self"]],[[R[52],[R[1358]]],[R[1358]]]]],[11,R[3438],E,R[3431],3,[[],[R[1358]]]],[11,R[3439],E,R[3432],3,[[],[R[1358]]]],[11,"zero",E,R[3433],3,[[],[R[1358]]]],[11,"is_zero",E,R[3434],3,[[["self"]],["bool"]]],[11,R[4511],E,R[3435],3,[[[R[1394]]],[[R[12],[R[1358],R[1393]]],[R[1393]],[R[1358]]]]],[11,"to_std",E,R[3436],3,[[["self"]],[[R[1394]],[R[12],[R[1394],R[1393]]],[R[1393]]]]],[11,"new",E,E,0,[[["i32"],["i64"]],[R[777]]]],[11,"now",E,"Returns a `PreciseTime` representing the current moment in…",4,[[],[R[1395]]]],[11,"to",E,"Returns a `Duration` representing the span of time from…",4,[[[R[1395]],["self"]],[R[1358]]]],[11,"now",E,"Returns a `SteadyTime` representing the current moment in…",5,[[],[R[1398]]]],[11,"to_timespec",E,"Convert time to the seconds from January 1, 1970",1,[[["self"]],[R[777]]]],[11,"to_local",E,"Convert time to the local timezone",1,[[["self"]],["tm"]]],[11,"to_utc",E,"Convert time to the UTC",1,[[["self"]],["tm"]]],[11,"ctime",E,R[1396],1,[[["self"]],["tmfmt"]]],[11,"asctime",E,R[1396],1,[[["self"]],["tmfmt"]]],[11,"strftime",E,R[1397],1,[[["str"],["self"]],[["tmfmt"],[R[1392]],[R[12],["tmfmt",R[1392]]]]]],[11,"rfc822",E,"Returns a TmFmt that outputs according to RFC 822.",1,[[["self"]],["tmfmt"]]],[11,"rfc822z",E,"Returns a TmFmt that outputs according to RFC 822 with…",1,[[["self"]],["tmfmt"]]],[11,"rfc3339",E,"Returns a TmFmt that outputs according to RFC 3339. RFC…",1,[[["self"]],["tmfmt"]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[17],E,E,3,[[[T],["self"]]]],[11,R[170],E,E,3,[[["self"]],["string"]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[16],E,E,6,[[["self"]],[T]]],[11,R[17],E,E,6,[[[T],["self"]]]],[11,R[170],E,E,6,[[["self"]],["string"]]],[11,R[11],E,E,6,[[[U]],[R[12]]]],[11,R[39],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[],[R[12]]]],[11,R[18],E,E,6,[[["self"]],[R[40]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[[T],["self"]]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[16],E,E,4,[[["self"]],[T]]],[11,R[17],E,E,4,[[[T],["self"]]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[16],E,E,5,[[["self"]],[T]]],[11,R[17],E,E,5,[[[T],["self"]]]],[11,R[170],E,E,5,[[["self"]],["string"]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,R[18],E,E,5,[[["self"]],[R[40]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,[[[T],["self"]]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[170],E,E,7,[[["self"]],["string"]]],[11,R[11],E,E,7,[[[U]],[R[12]]]],[11,R[39],E,E,7,[[["self"]],[T]]],[11,R[13],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[],[R[12]]]],[11,R[18],E,E,7,[[["self"]],[R[40]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[17],E,E,2,[[[T],["self"]]]],[11,R[170],E,E,2,[[["self"]],["string"]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"eq",E,E,3,[[[R[1358]],["self"]],["bool"]]],[11,"ne",E,E,3,[[[R[1358]],["self"]],["bool"]]],[11,"eq",E,E,6,[[["self"],[R[1393]]],["bool"]]],[11,"ne",E,E,6,[[["self"],[R[1393]]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[777]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[777]]],["bool"]]],[11,"eq",E,E,5,[[[R[1398]],["self"]],["bool"]]],[11,"ne",E,E,5,[[[R[1398]],["self"]],["bool"]]],[11,"eq",E,E,1,[[["self"],["tm"]],["bool"]]],[11,"ne",E,E,1,[[["self"],["tm"]],["bool"]]],[11,"eq",E,E,2,[[[R[1392]],["self"]],["bool"]]],[11,"ne",E,E,2,[[[R[1392]],["self"]],["bool"]]],[11,"clone",E,E,3,[[["self"]],[R[1358]]]],[11,"clone",E,E,6,[[["self"]],[R[1393]]]],[11,"clone",E,E,0,[[["self"]],[R[777]]]],[11,"clone",E,E,4,[[["self"]],[R[1395]]]],[11,"clone",E,E,5,[[["self"]],[R[1398]]]],[11,"clone",E,E,1,[[["self"]],["tm"]]],[11,"clone",E,E,2,[[["self"]],[R[1392]]]],[11,"cmp",E,E,3,[[[R[1358]],["self"]],[R[51]]]],[11,"cmp",E,E,0,[[["self"],[R[777]]],[R[51]]]],[11,"cmp",E,E,5,[[[R[1398]],["self"]],[R[51]]]],[11,"cmp",E,E,1,[[["self"],["tm"]],[R[51]]]],[11,R[264],E,E,3,[[[R[1358]],["self"]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,3,[[[R[1358]],["self"]],["bool"]]],[11,"le",E,E,3,[[[R[1358]],["self"]],["bool"]]],[11,"gt",E,E,3,[[[R[1358]],["self"]],["bool"]]],[11,"ge",E,E,3,[[[R[1358]],["self"]],["bool"]]],[11,R[264],E,E,0,[[["self"],[R[777]]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,0,[[["self"],[R[777]]],["bool"]]],[11,"le",E,E,0,[[["self"],[R[777]]],["bool"]]],[11,"gt",E,E,0,[[["self"],[R[777]]],["bool"]]],[11,"ge",E,E,0,[[["self"],[R[777]]],["bool"]]],[11,R[264],E,E,5,[[[R[1398]],["self"]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,5,[[[R[1398]],["self"]],["bool"]]],[11,"le",E,E,5,[[[R[1398]],["self"]],["bool"]]],[11,"gt",E,E,5,[[[R[1398]],["self"]],["bool"]]],[11,"ge",E,E,5,[[[R[1398]],["self"]],["bool"]]],[11,R[264],E,E,1,[[["self"],["tm"]],[[R[52],[R[51]]],[R[51]]]]],[11,"fmt",E,E,3,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,6,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,0,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,5,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,1,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,2,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,7,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,7,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,3,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,6,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,5,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,2,[[["self"],[R[29]]],[R[12]]]],[11,"sub",E,E,3,[[[R[1358]]],[R[1358]]]],[11,"sub",E,E,0,[[[R[1358]]],[R[777]]]],[11,"sub",E,E,0,[[[R[777]]],[R[1358]]]],[11,"sub",E,E,5,[[[R[1398]]],[R[1358]]]],[11,"sub",E,E,5,[[[R[1358]]],[R[1398]]]],[11,"sub",E,R[1399],1,[[[R[1358]]],["tm"]]],[11,"sub",E,E,1,[[["tm"]],[R[1358]]]],[11,"div",E,E,3,[[["i32"]],[R[1358]]]],[11,"add",E,E,3,[[[R[1358]]],[R[1358]]]],[11,"add",E,E,0,[[[R[1358]]],[R[777]]]],[11,"add",E,E,5,[[[R[1358]]],[R[1398]]]],[11,"add",E,R[1399],1,[[[R[1358]]],["tm"]]],[11,"mul",E,E,3,[[["i32"]],[R[1358]]]],[11,"neg",E,E,3,[[],[R[1358]]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,R[30],E,E,6,[[["self"]],["str"]]],[11,R[30],E,E,2,[[["self"]],["str"]]]],"p":[[3,"Timespec"],[3,"Tm"],[4,R[3411]],[3,"Duration"],[3,R[1400]],[3,"SteadyTime"],[3,R[1401]],[3,"TmFmt"]]};
searchIndex["tokio"]={"doc":"A runtime for writing reliable, asynchronous, and slim…","i":[[14,"await","tokio",R[5258],N,N],[5,"run",E,R[4820],N,[[["f"]]]],[5,"run_async",E,"Like `tokio::run`, but takes an `async` block",N,[[["f"]]]],[5,"spawn_async",E,"Like `tokio::spawn`, but takes an `async` block",N,[[["f"]]]],[0,"clock",E,R[5159],N,N],[5,"now","tokio::clock",R[5160],N,[[],["instant"]]],[0,"codec","tokio",R[5207],N,N],[3,R[5225],R[4827],R[5226],N,N],[8,"Decoder",E,R[5208],N,N],[16,"Item",E,R[5209],0,N],[16,"Error",E,R[5210],0,N],[10,"decode",E,R[5211],0,[[["self"],[R[2548]]],[[R[12],[R[52]]],[R[52]]]]],[11,R[5212],E,R[5213],0,[[["self"],[R[2548]]],[[R[12],[R[52]]],[R[52]]]]],[11,"framed",E,R[3564],0,[[[T]],["framed"]]],[8,"Encoder",E,R[5214],N,N],[16,"Item",E,R[5215],1,N],[16,"Error",E,R[5216],1,N],[10,"encode",E,R[5217],1,[[["self"],[R[2548]]],[R[12]]]],[3,"Framed",E,R[4687],N,N],[3,R[4484],E,R[5218],N,N],[12,"io",E,R[5219],2,N],[12,"codec",E,"The codec",2,N],[12,R[4872],E,R[5220],2,N],[12,R[4486],E,R[5221],2,N],[3,R[5222],E,R[5223],N,N],[3,R[4485],E,R[5224],N,N],[3,R[5227],E,R[5228],N,N],[0,"length_delimited",E,"Frame a stream of bytes based on a length prefix",N,N],[3,"Builder",R[4828],"Configure length delimited `LengthDelimitedCodec`s.",N,N],[3,R[4852],E,"An error when the number of bytes read is more than max…",N,N],[3,R[4849],E,"A codec for frames delimited by a frame head specifying…",N,N],[11,"new",E,"Creates a new `LengthDelimitedCodec` with the default…",3,[[],["self"]]],[11,R[4709],E,"Returns the current max frame setting",3,[[["self"]],[R[9]]]],[11,"set_max_frame_length",E,"Updates the max frame setting.",3,[[["self"],[R[9]]]]],[11,"new",E,"Creates a new length delimited codec builder with default…",4,[[],["builder"]]],[11,"big_endian",E,"Read the length field as a big endian integer",4,[[["self"]],["self"]]],[11,R[4707],E,"Read the length field as a little endian integer",4,[[["self"]],["self"]]],[11,R[4708],E,"Read the length field as a native endian integer",4,[[["self"]],["self"]]],[11,R[4709],E,"Sets the max frame length",4,[[["self"],[R[9]]],["self"]]],[11,"length_field_length",E,"Sets the number of bytes used to represent the length field",4,[[["self"],[R[9]]],["self"]]],[11,"length_field_offset",E,"Sets the number of bytes in the header before the length…",4,[[["self"],[R[9]]],["self"]]],[11,"length_adjustment",E,"Delta between the payload length specified in the header…",4,[[["isize"],["self"]],["self"]]],[11,"num_skip",E,"Sets the number of bytes to skip before reading the payload",4,[[["self"],[R[9]]],["self"]]],[11,"new_codec",E,"Create a configured length delimited `LengthDelimitedCodec`",4,[[["self"]],[R[4710]]]],[11,"new_read",E,"Create a configured length delimited `FramedRead`",4,[[["self"],[T]],[[R[4710]],[R[5240],[R[4710]]]]]],[11,"new_write",E,"Create a configured length delimited `FramedWrite`",4,[[["self"],[T]],[[R[4710]],[R[4847],[R[4710]]]]]],[11,"new_framed",E,"Create a configured length delimited `Framed`",4,[[["self"],[T]],[[R[4710]],["framed",[R[4710]]]]]],[0,"fs","tokio","Asynchronous filesystem manipulation operations.",N,N],[3,R[4507],R[4830],R[4508],N,N],[5,"create_dir",E,R[5264],N,[[["p"]],[R[5265]]]],[5,R[5266],E,R[5267],N,[[["p"]],[R[5268]]]],[0,"file",E,R[5292],N,N],[3,"File",R[4829],R[4711],N,N],[3,R[4531],E,R[5294],N,N],[3,R[4507],E,R[4508],N,N],[3,R[4530],E,R[5293],N,N],[3,R[5298],E,R[5299],N,N],[3,R[4506],E,R[5295],N,N],[3,R[5296],E,R[5297],N,N],[5,"hard_link",R[4830],R[5269],N,[[["q"],["p"]],[R[5270]]]],[5,R[398],E,R[4505],N,[[["p"]],[R[4513]]]],[0,"os",E,R[5324],N,N],[0,"unix","tokio::fs::os",R[5325],N,N],[5,"symlink",R[4831],R[5327],N,[[["q"],["p"]],[R[5328]]]],[3,R[4532],E,R[5326],N,N],[5,"read_dir",R[4830],R[5272],N,[[["p"]],[R[5273]]]],[5,"read_link",E,R[5274],N,[[["p"]],[R[5275]]]],[5,"read",E,R[5271],N,[[["p"]],["readfile"]]],[5,"write",E,R[5291],N,[[["c"],["p"]],["writefile"]]],[3,"ReadFile",E,R[5259],N,N],[3,R[5329],E,R[5263],N,N],[5,"remove_dir",E,R[5276],N,[[["p"]],[R[5277]]]],[5,R[5278],E,R[5279],N,[[["p"]],[R[5280]]]],[5,"rename",E,R[5281],N,[[["q"],["p"]],[R[5282]]]],[5,R[5283],E,R[5284],N,[[[R[4516]],["p"]],[R[5285]]]],[5,R[5289],E,R[4505],N,[[["p"]],[R[5290]]]],[3,"File",E,R[4711],N,N],[0,"io","tokio","Asynchronous I/O.",N,N],[8,R[4871],R[4846],R[4721],N,N],[11,R[3560],E,R[3561],5,[[["self"]],["bool"]]],[11,R[4876],E,R[3562],5,[[["self"]],[[R[12],["async","error"]],["async",[R[9]]],["error"]]]],[11,R[4872],E,R[3563],5,[[["b"],["self"]],[[R[12],["async","error"]],["async",[R[9]]],["error"]]]],[11,"framed",E,R[3564],5,[[[T]],["framed"]]],[11,"split",E,R[3565],5,[[]]],[8,R[4850],E,R[4722],N,N],[11,R[4873],E,R[3566],6,[[["self"]],[[R[12],["async","error"]],["async",[R[9]]],["error"]]]],[11,R[4874],E,R[3567],6,[[["self"]],[[R[12],["async","error"]],["async"],["error"]]]],[10,R[2344],E,R[4723],6,[[["self"]],[[R[12],["async","error"]],["async"],["error"]]]],[11,R[4486],E,R[3568],6,[[["b"],["self"]],[[R[12],["async","error"]],["async",[R[9]]],["error"]]]],[5,"stderr",E,R[5286],N,[[],["stderr"]]],[5,"stdin",E,R[5287],N,[[],["stdin"]]],[5,"stdout",E,R[5288],N,[[],["stdout"]]],[3,"Stderr",E,R[5260],N,N],[3,"Stdin",E,R[5261],N,N],[3,"Stdout",E,R[5262],N,N],[5,"copy",E,R[4863],N,[[["w"],["r"]],["copy"]]],[5,"flush",E,R[4864],N,[[["a"]],["flush"]]],[5,"lines",E,R[4867],N,[[["a"]],["lines"]]],[5,"read",E,R[4495],N,[[[T],["r"]],["read"]]],[5,R[4731],E,R[4496],N,[[["a"],[T]],[R[5247]]]],[5,R[3559],E,R[3556],N,[[["vec",["u8"]],["a"],["u8"]],["readtoend"]]],[5,"read_until",E,R[3556],N,[[["vec",["u8"]],["a"],["u8"]],["readuntil"]]],[5,R[2344],E,R[4865],N,[[["a"]],[R[2344]]]],[5,R[4866],E,R[4692],N,[[["a"],[T]],["writeall"]]],[3,"Copy",E,R[4855],N,N],[3,"Flush",E,R[4494],N,N],[3,"Lines",E,R[4860],N,N],[3,R[4497],E,R[4856],N,N],[3,"ReadHalf",E,R[4861],N,N],[3,R[4878],E,R[4857],N,N],[3,R[4879],E,R[4858],N,N],[3,R[4358],E,R[4859],N,N],[3,"WriteAll",E,R[4688],N,N],[3,R[4877],E,R[4862],N,N],[3,"Error",E,"The error type for I/O operations of the [`Read`],…",N,N],[4,R[32],E,"A list specifying general categories of I/O error.",N,N],[13,"NotFound",E,"An entity was not found, often a file.",7,N],[13,"PermissionDenied",E,"The operation lacked the necessary privileges to complete.",7,N],[13,"ConnectionRefused",E,"The connection was refused by the remote server.",7,N],[13,"ConnectionReset",E,"The connection was reset by the remote server.",7,N],[13,"ConnectionAborted",E,"The connection was aborted (terminated) by the remote…",7,N],[13,"NotConnected",E,"The network operation failed because it was not connected…",7,N],[13,"AddrInUse",E,"A socket address could not be bound because the address is…",7,N],[13,"AddrNotAvailable",E,"A nonexistent interface was requested or the requested…",7,N],[13,"BrokenPipe",E,"The operation failed because a pipe was closed.",7,N],[13,"AlreadyExists",E,"An entity already exists, often a file.",7,N],[13,"WouldBlock",E,"The operation needs to block to complete, but the blocking…",7,N],[13,"InvalidInput",E,"A parameter was incorrect.",7,N],[13,"InvalidData",E,"Data not valid for the operation were encountered.",7,N],[13,"TimedOut",E,"The I/O operation's timeout expired, causing it to be…",7,N],[13,"WriteZero",E,R[4712],7,N],[13,"Interrupted",E,"This operation was interrupted.",7,N],[13,"Other",E,"Any I/O error not part of this list.",7,N],[13,"UnexpectedEof",E,R[4712],7,N],[8,"Read",E,R[4724],N,N],[10,"read",E,R[3563],8,[[["self"]],[[R[12],[R[9],"error"]],[R[9]],["error"]]]],[11,R[4725],E,R[4726],8,[[["self"]],[[R[12],[R[9],"error"]],[R[9]],["error"]]]],[11,R[4713],E,R[4727],8,[[["self"]],[R[4713]]]],[11,R[3559],E,R[4728],8,[[["vec"],["self"]],[[R[12],[R[9],"error"]],[R[9]],["error"]]]],[11,R[4729],E,R[4730],8,[[["self"],["string"]],[[R[12],[R[9],"error"]],[R[9]],["error"]]]],[11,R[4731],E,R[4732],8,[[["self"]],[[R[12],["error"]],["error"]]]],[11,"by_ref",E,R[2617],8,[[["self"]],["self"]]],[11,"bytes",E,R[4733],8,[[],["bytes"]]],[11,"chain",E,R[4734],8,[[["r"]],["chain"]]],[11,"take",E,R[2582],8,[[["u64"]],["take"]]],[6,"Result",E,"A specialized `Result` type for I/O operations.",N,N],[8,"Write",E,R[4735],N,N],[10,"write",E,R[4736],9,[[["self"]],[[R[12],[R[9],"error"]],[R[9]],["error"]]]],[11,R[4737],E,R[4738],9,[[["self"]],[[R[12],[R[9],"error"]],[R[9]],["error"]]]],[10,"flush",E,R[4739],9,[[["self"]],[[R[12],["error"]],["error"]]]],[11,R[4866],E,R[4740],9,[[["self"]],[[R[12],["error"]],["error"]]]],[11,R[4875],E,R[4741],9,[[["self"],[R[400]]],[[R[12],["error"]],["error"]]]],[11,"by_ref",E,R[2617],9,[[["self"]],["self"]]],[0,"net","tokio","TCP/UDP/Unix bindings for `tokio`.",N,N],[3,R[2741],R[4717],R[4714],N,N],[3,R[4669],E,R[4715],N,N],[3,R[4895],E,R[4687],N,N],[3,R[4694],E,R[4716],N,N],[3,R[3581],E,R[4718],N,N],[3,R[4686],E,R[4687],N,N],[3,R[3582],E,R[4719],N,N],[3,R[4671],E,R[4720],N,N],[0,"tcp",E,R[4880],N,N],[3,R[4670],R[4832],R[4882],N,N],[3,R[4909],E,R[4881],N,N],[3,R[2741],E,R[4714],N,N],[3,R[4669],E,R[4715],N,N],[0,"udp",R[4717],R[4894],N,N],[3,R[4698],R[4833],R[4896],N,N],[3,R[4699],E,R[4688],N,N],[3,R[4895],E,R[4687],N,N],[3,R[4694],E,R[4716],N,N],[0,"unix",R[4717],"Unix domain socket bindings for `tokio` (only available on…",N,N],[3,R[4670],R[4834],R[4913],N,N],[3,R[4909],E,R[4910],N,N],[3,R[4698],E,R[4911],N,N],[3,R[4699],E,R[4912],N,N],[3,"UCred",E,R[4914],N,N],[12,"uid",E,R[4915],10,N],[12,"gid",E,R[4916],10,N],[3,R[3581],E,R[4718],N,N],[3,R[4686],E,R[4687],N,N],[3,R[3582],E,R[4719],N,N],[3,R[4671],E,R[4720],N,N],[0,"prelude","tokio","A \"prelude\" for users of the `tokio` crate.",N,N],[8,R[4871],R[4742],R[4721],N,N],[11,R[3560],E,R[3561],5,[[["self"]],["bool"]]],[11,R[4876],E,R[3562],5,[[["self"]],[[R[12],["async","error"]],["async",[R[9]]],["error"]]]],[11,R[4872],E,R[3563],5,[[["b"],["self"]],[[R[12],["async","error"]],["async",[R[9]]],["error"]]]],[11,"framed",E,R[3564],5,[[[T]],["framed"]]],[11,"split",E,R[3565],5,[[]]],[8,R[4850],E,R[4722],N,N],[11,R[4873],E,R[3566],6,[[["self"]],[[R[12],["async","error"]],["async",[R[9]]],["error"]]]],[11,R[4874],E,R[3567],6,[[["self"]],[[R[12],["async","error"]],["async"],["error"]]]],[10,R[2344],E,R[4723],6,[[["self"]],[[R[12],["async","error"]],["async"],["error"]]]],[11,R[4486],E,R[3568],6,[[["b"],["self"]],[[R[12],["async","error"]],["async",[R[9]]],["error"]]]],[8,"Read",E,R[4724],N,N],[10,"read",E,R[3563],8,[[["self"]],[[R[12],[R[9],"error"]],[R[9]],["error"]]]],[11,R[4725],E,R[4726],8,[[["self"]],[[R[12],[R[9],"error"]],[R[9]],["error"]]]],[11,R[4713],E,R[4727],8,[[["self"]],[R[4713]]]],[11,R[3559],E,R[4728],8,[[["vec"],["self"]],[[R[12],[R[9],"error"]],[R[9]],["error"]]]],[11,R[4729],E,R[4730],8,[[["self"],["string"]],[[R[12],[R[9],"error"]],[R[9]],["error"]]]],[11,R[4731],E,R[4732],8,[[["self"]],[[R[12],["error"]],["error"]]]],[11,"by_ref",E,R[2617],8,[[["self"]],["self"]]],[11,"bytes",E,R[4733],8,[[],["bytes"]]],[11,"chain",E,R[4734],8,[[["r"]],["chain"]]],[11,"take",E,R[2582],8,[[["u64"]],["take"]]],[8,"Write",E,R[4735],N,N],[10,"write",E,R[4736],9,[[["self"]],[[R[12],[R[9],"error"]],[R[9]],["error"]]]],[11,R[4737],E,R[4738],9,[[["self"]],[[R[12],[R[9],"error"]],[R[9]],["error"]]]],[10,"flush",E,R[4739],9,[[["self"]],[[R[12],["error"]],["error"]]]],[11,R[4866],E,R[4740],9,[[["self"]],[[R[12],["error"]],["error"]]]],[11,R[4875],E,R[4741],9,[[["self"],[R[400]]],[[R[12],["error"]],["error"]]]],[11,"by_ref",E,R[2617],9,[[["self"]],["self"]]],[0,"future",E,"Futures",N,N],[8,"Future",R[4835],R[4744],N,N],[16,"Item",E,R[4745],11,N],[16,"Error",E,R[4746],11,N],[10,"poll",E,R[4747],11,[[["self"]],[[R[12],["async"]],["async"]]]],[11,"wait",E,R[4748],11,[[],[R[12]]]],[11,"map",E,R[4749],11,[[["f"]],["map"]]],[11,"map_err",E,R[4750],11,[[["f"]],["maperr"]]],[11,"from_err",E,R[4751],11,[[],["fromerr"]]],[11,"then",E,R[4752],11,[[["f"]],["then"]]],[11,"and_then",E,R[4753],11,[[["f"]],["andthen"]]],[11,"or_else",E,R[4754],11,[[["f"]],["orelse"]]],[11,"select",E,R[4755],11,[[["b"]],["select"]]],[11,"select2",E,R[4756],11,[[["b"]],["select2"]]],[11,"join",E,R[4757],11,[[["b"]],["join"]]],[11,"join3",E,R[94],11,[[["c"],["b"]],["join3"]]],[11,"join4",E,R[94],11,[[["c"],["d"],["b"]],["join4"]]],[11,"join5",E,R[94],11,[[["e"],["c"],["d"],["b"]],["join5"]]],[11,R[4758],E,R[4759],11,[[],[R[5008]]]],[11,"flatten",E,R[95],11,[[],["flatten"]]],[11,R[4760],E,R[95],11,[[],[R[4761]]]],[11,"fuse",E,R[4762],11,[[],["fuse"]]],[11,"inspect",E,R[96],11,[[["f"]],["inspect"]]],[11,R[121],E,R[4763],11,[[],[R[122]]]],[11,"shared",E,R[4764],11,[[],["shared"]]],[8,R[197],E,R[4765],N,N],[16,"Future",E,R[4766],12,N],[16,"Item",E,R[4767],12,N],[16,"Error",E,R[4768],12,N],[10,R[99],E,R[4769],12,[[]]],[8,R[198],E,R[5009],N,N],[16,"Future",E,R[5010],13,N],[16,"Error",E,R[5011],13,N],[10,R[5012],E,R[5013],13,[[[T]]]],[8,R[4941],E,R[5014],N,N],[10,"execute",E,R[5015],14,[[["self"],["f"]],[[R[12],[R[97]]],[R[97]]]]],[3,R[199],E,R[4987],N,N],[4,R[196],E,R[4994],N,N],[13,R[4358],E,R[4995],15,N],[13,"NoCapacity",E,R[4996],15,N],[5,"ok",E,R[93],N,[[[T]],[R[92]]]],[3,"PollFn",E,R[4960],N,N],[3,"Finished",E,R[4961],N,N],[3,"Join",E,R[4968],N,N],[3,R[221],E,R[4977],N,N],[3,"Select2",E,R[4978],N,N],[3,"Flatten",E,R[4964],N,N],[3,"Join5",E,R[4971],N,N],[5,"select_all",E,R[5003],N,[[["i"]],["selectall"]]],[3,"Select",E,R[4976],N,N],[3,"JoinAll",E,R[4981],N,N],[5,"poll_fn",E,R[4999],N,[[["f"]],["pollfn"]]],[3,"OrElse",E,R[4975],N,N],[3,R[104],E,R[4980],N,N],[3,"Join3",E,R[4969],N,N],[3,R[224],E,R[4986],N,N],[3,R[223],E,R[4985],N,N],[3,"Then",E,R[4979],N,N],[5,"done",E,R[5000],N,[[[R[12]]],[R[92]]]],[3,R[222],E,R[4982],N,N],[5,"join_all",E,R[5002],N,[[["i"]],["joinall"]]],[3,"Map",E,R[4972],N,N],[5,"failed",E,R[93],N,[[["e"]],[R[92]]]],[3,R[220],E,R[4967],N,N],[3,"FromErr",E,R[4974],N,N],[5,"loop_fn",E,R[5001],N,[[["s"],["f"]],["loopfn"]]],[3,"SelectOk",E,R[4983],N,N],[5,"select_ok",E,R[5004],N,[[["i"]],["selectok"]]],[3,"Empty",E,R[4958],N,N],[3,"Shared",E,R[4984],N,N],[3,"AndThen",E,R[4963],N,N],[3,"LoopFn",E,R[4962],N,N],[3,"Join4",E,R[4970],N,N],[3,"Lazy",E,R[4959],N,N],[3,"Inspect",E,R[96],N,N],[5,"lazy",E,R[4998],N,[[["f"]],["lazy"]]],[3,"Fuse",E,R[4966],N,N],[3,"MapErr",E,R[4973],N,N],[5,"empty",E,R[4997],N,[[],["empty"]]],[4,"Loop",E,R[4988],N,N],[13,"Break",E,R[4989],16,N],[13,"Continue",E,R[4990],16,N],[3,R[219],E,R[4965],N,N],[4,"Either",E,R[4991],N,N],[13,"A",E,R[4992],17,N],[13,"B",E,R[4993],17,N],[0,"stream",R[4742],R[5019],N,N],[0,R[114],R[4743],R[115],N,N],[3,R[210],R[4836],R[115],N,N],[3,R[262],E,R[5073],N,N],[8,"Stream",R[4743],R[4770],N,N],[16,"Item",E,R[4771],18,N],[16,"Error",E,R[4772],18,N],[10,"poll",E,R[4773],18,[[["self"]],[[R[12],["async"]],["async",[R[52]]]]]],[11,"wait",E,R[4774],18,[[],["wait"]]],[11,R[99],E,R[4775],18,[[],[R[4776]]]],[11,"map",E,R[4777],18,[[["f"]],["map"]]],[11,"map_err",E,R[4778],18,[[["f"]],["maperr"]]],[11,"filter",E,R[4779],18,[[["f"]],["filter"]]],[11,R[5083],E,R[4780],18,[[["f"]],["filtermap"]]],[11,"then",E,R[119],18,[[["f"]],["then"]]],[11,"and_then",E,R[119],18,[[["f"]],["andthen"]]],[11,"or_else",E,R[4781],18,[[["f"]],["orelse"]]],[11,"collect",E,R[4782],18,[[],["collect"]]],[11,"concat2",E,R[120],18,[[],["concat2"]]],[11,"concat",E,R[120],18,[[],["concat"]]],[11,"fold",E,R[4783],18,[[["f"],[T]],["fold"]]],[11,"flatten",E,R[4784],18,[[],["flatten"]]],[11,R[5084],E,R[4785],18,[[["p"]],["skipwhile"]]],[11,R[5085],E,R[4786],18,[[["p"]],["takewhile"]]],[11,"for_each",E,R[4787],18,[[["f"]],["foreach"]]],[11,"from_err",E,R[4788],18,[[],["fromerr"]]],[11,"take",E,R[4789],18,[[["u64"]],["take"]]],[11,"skip",E,R[4790],18,[[["u64"]],["skip"]]],[11,"fuse",E,R[4791],18,[[],["fuse"]]],[11,"by_ref",E,R[4792],18,[[["self"]],["self"]]],[11,R[121],E,R[4793],18,[[],[R[122]]]],[11,"buffered",E,R[4794],18,[[[R[9]]],["buffered"]]],[11,R[4795],E,R[4796],18,[[[R[9]]],[R[4797]]]],[11,"merge",E,R[102],18,[[["s"]],["merge"]]],[11,"zip",E,R[4798],18,[[["s"]],["zip"]]],[11,"chain",E,R[4799],18,[[["s"]],["chain"]]],[11,"peekable",E,R[4800],18,[[],["peekable"]]],[11,"chunks",E,R[4801],18,[[[R[9]]],["chunks"]]],[11,"select",E,R[4802],18,[[["s"]],["select"]]],[11,"forward",E,R[127],18,[[["s"]],["forward"]]],[11,"split",E,R[4803],18,[[]]],[11,"inspect",E,R[4804],18,[[["f"]],["inspect"]]],[11,R[4805],E,R[4806],18,[[["f"]],[R[5086]]]],[5,R[114],E,R[106],N,[[["i"]],[R[116]]]],[3,"Once",E,R[5036],N,N],[3,"Concat2",E,R[101],N,N],[3,"Forward",E,R[5045],N,N],[3,R[200],E,R[5052],N,N],[12,"0",E,E,19,N],[12,"1",E,E,19,N],[3,"Sender",E,R[131],N,N],[3,"IterOk",E,R[100],N,N],[3,R[4853],E,"Future returned by `Sender::send`.",N,N],[3,"Concat",E,R[101],N,N],[3,R[206],E,R[547],N,N],[5,"poll_fn",E,R[5063],N,[[["f"]],["pollfn"]]],[3,"OrElse",E,R[5037],N,N],[3,R[104],E,R[5046],N,N],[3,"Filter",E,R[5024],N,N],[3,"Chunks",E,R[5047],N,N],[3,"Map",E,R[5034],N,N],[3,"ForEach",E,R[5028],N,N],[4,R[201],E,R[5054],N,N],[13,"First",E,R[5055],20,N],[13,"Second",E,R[5056],20,N],[13,"Both",E,R[5057],20,N],[3,"FromErr",E,R[5029],N,N],[3,"Unfold",E,R[5044],N,N],[5,"once",E,R[5062],N,[[[R[12]]],["once"]]],[3,"AndThen",E,R[5021],N,N],[3,"Fold",E,R[5027],N,N],[3,"Skip",E,R[5040],N,N],[3,"Buffered",E,R[103],N,N],[3,"Wait",E,R[5049],N,N],[5,R[5065],E,R[106],N,[[["i"]],[R[118]]]],[3,R[145],E,R[132],N,N],[3,"Iter",E,R[100],N,N],[3,"PollFn",E,R[5039],N,N],[3,"Take",E,R[5042],N,N],[3,"Chain",E,R[5022],N,N],[3,"Zip",E,R[102],N,N],[3,R[148],E,"Error type for sending, used when the receiving end of the…",N,N],[3,R[207],E,R[103],N,N],[3,"Flatten",E,R[5026],N,N],[3,"Repeat",E,R[5020],N,N],[3,R[205],E,R[5041],N,N],[3,R[208],E,R[5050],N,N],[3,"Select",E,R[102],N,N],[5,R[533],E,R[135],N,[[]]],[3,R[202],E,R[5025],N,N],[5,"iter",E,R[105],N,[[["j"]],["iter"]]],[5,"repeat",E,R[5060],N,[[[T]],["repeat"]]],[3,R[225],E,R[100],N,N],[3,R[203],E,R[5031],N,N],[3,"Then",E,R[5043],N,N],[5,"unfold",E,R[5064],N,[[["f"],[T]],["unfold"]]],[5,R[5059],E,R[105],N,[[["j"]],["iterresult"]]],[3,R[209],E,R[5051],N,N],[3,"Empty",E,R[5023],N,N],[5,"iter_ok",E,R[5058],N,[[["i"]],["iterok"]]],[3,"Merge",E,R[102],N,N],[3,"Collect",E,R[5048],N,N],[3,R[211],E,R[5053],N,N],[3,"Inspect",E,R[5032],N,N],[3,"Peekable",E,R[5038],N,N],[3,"Fuse",E,R[5030],N,N],[3,R[204],E,R[5033],N,N],[3,"MapErr",E,R[5035],N,N],[5,"empty",E,R[5061],N,[[],["empty"]]],[0,"task",R[4742],R[5104],N,N],[5,"current",R[4837],R[5108],N,[[],["task"]]],[3,"Task",E,R[5105],N,N],[3,"LocalKey",E,R[5106],N,N],[8,"EventSet",E,R[5112],N,N],[10,"insert",E,R[5113],21,[[["self"],[R[9]]]]],[5,R[5110],E,R[5111],N,[[["f"],[R[192]]],["r"]]],[3,"Run",E,"Units of work submitted to an `Executor`, currently only…",N,N],[5,"init",E,R[5109],N,[[],["bool"]]],[3,"Spawn",E,R[5114],N,N],[3,R[228],E,R[5107],N,N],[3,R[227],E,R[530],N,N],[8,R[4941],E,"A trait representing requests to poll futures.",N,N],[10,"execute",E,"Requests that `Run` is executed soon on the given executor.",22,[[["run"],["self"]]]],[3,"TaskRc",E,"A reference to a piece of data that's accessible only…",N,N],[8,"Unpark",E,R[5116],N,N],[10,"unpark",E,R[5117],23,[[["self"]]]],[5,"spawn",E,R[5115],N,[[[T]],["spawn"]]],[4,"Async",R[4742],R[4946],N,N],[13,"Ready",E,R[4947],24,N],[13,R[89],E,R[4948],24,N],[4,R[195],E,R[4949],N,N],[13,"Ready",E,R[4950],25,N],[13,R[89],E,R[4951],25,N],[8,"Future",E,R[4744],N,N],[16,"Item",E,R[4745],11,N],[16,"Error",E,R[4746],11,N],[10,"poll",E,R[4747],11,[[["self"]],[[R[12],["async"]],["async"]]]],[11,"wait",E,R[4748],11,[[],[R[12]]]],[11,"map",E,R[4749],11,[[["f"]],["map"]]],[11,"map_err",E,R[4750],11,[[["f"]],["maperr"]]],[11,"from_err",E,R[4751],11,[[],["fromerr"]]],[11,"then",E,R[4752],11,[[["f"]],["then"]]],[11,"and_then",E,R[4753],11,[[["f"]],["andthen"]]],[11,"or_else",E,R[4754],11,[[["f"]],["orelse"]]],[11,"select",E,R[4755],11,[[["b"]],["select"]]],[11,"select2",E,R[4756],11,[[["b"]],["select2"]]],[11,"join",E,R[4757],11,[[["b"]],["join"]]],[11,"join3",E,R[94],11,[[["c"],["b"]],["join3"]]],[11,"join4",E,R[94],11,[[["c"],["d"],["b"]],["join4"]]],[11,"join5",E,R[94],11,[[["e"],["c"],["d"],["b"]],["join5"]]],[11,R[4758],E,R[4759],11,[[],[R[5008]]]],[11,"flatten",E,R[95],11,[[],["flatten"]]],[11,R[4760],E,R[95],11,[[],[R[4761]]]],[11,"fuse",E,R[4762],11,[[],["fuse"]]],[11,"inspect",E,R[96],11,[[["f"]],["inspect"]]],[11,R[121],E,R[4763],11,[[],[R[122]]]],[11,"shared",E,R[4764],11,[[],["shared"]]],[8,R[197],E,R[4765],N,N],[16,"Future",E,R[4766],12,N],[16,"Item",E,R[4767],12,N],[16,"Error",E,R[4768],12,N],[10,R[99],E,R[4769],12,[[]]],[6,"Poll",E,R[5119],N,N],[8,"Sink",E,R[5087],N,N],[16,"SinkItem",E,R[5088],26,N],[16,"SinkError",E,R[5089],26,N],[10,R[181],E,R[5090],26,[[["self"]],[[R[184]],[R[12],[R[184]]]]]],[10,R[183],E,R[5091],26,[[["self"]],[[R[12],["async"]],["async"]]]],[11,"close",E,R[5092],26,[[["self"]],[[R[12],["async"]],["async"]]]],[11,"wait",E,R[5093],26,[[],["wait"]]],[11,"with",E,R[126],26,[[["f"]],["with"]]],[11,R[5094],E,R[126],26,[[["f"]],[R[5095]]]],[11,R[5096],E,R[5097],26,[[["f"]],[R[191]]]],[11,R[5098],E,R[5099],26,[[],[R[190]]]],[11,"buffer",E,R[5100],26,[[[R[9]]],["buffer"]]],[11,"fanout",E,R[5101],26,[[["s"]],["fanout"]]],[11,"flush",E,R[5102],26,[[],["flush"]]],[11,"send",E,R[5103],26,[[],["send"]]],[11,"send_all",E,R[127],26,[[["s"]],["sendall"]]],[8,"Stream",E,R[4770],N,N],[16,"Item",E,R[4771],18,N],[16,"Error",E,R[4772],18,N],[10,"poll",E,R[4773],18,[[["self"]],[[R[12],["async"]],["async",[R[52]]]]]],[11,"wait",E,R[4774],18,[[],["wait"]]],[11,R[99],E,R[4775],18,[[],[R[4776]]]],[11,"map",E,R[4777],18,[[["f"]],["map"]]],[11,"map_err",E,R[4778],18,[[["f"]],["maperr"]]],[11,"filter",E,R[4779],18,[[["f"]],["filter"]]],[11,R[5083],E,R[4780],18,[[["f"]],["filtermap"]]],[11,"then",E,R[119],18,[[["f"]],["then"]]],[11,"and_then",E,R[119],18,[[["f"]],["andthen"]]],[11,"or_else",E,R[4781],18,[[["f"]],["orelse"]]],[11,"collect",E,R[4782],18,[[],["collect"]]],[11,"concat2",E,R[120],18,[[],["concat2"]]],[11,"concat",E,R[120],18,[[],["concat"]]],[11,"fold",E,R[4783],18,[[["f"],[T]],["fold"]]],[11,"flatten",E,R[4784],18,[[],["flatten"]]],[11,R[5084],E,R[4785],18,[[["p"]],["skipwhile"]]],[11,R[5085],E,R[4786],18,[[["p"]],["takewhile"]]],[11,"for_each",E,R[4787],18,[[["f"]],["foreach"]]],[11,"from_err",E,R[4788],18,[[],["fromerr"]]],[11,"take",E,R[4789],18,[[["u64"]],["take"]]],[11,"skip",E,R[4790],18,[[["u64"]],["skip"]]],[11,"fuse",E,R[4791],18,[[],["fuse"]]],[11,"by_ref",E,R[4792],18,[[["self"]],["self"]]],[11,R[121],E,R[4793],18,[[],[R[122]]]],[11,"buffered",E,R[4794],18,[[[R[9]]],["buffered"]]],[11,R[4795],E,R[4796],18,[[[R[9]]],[R[4797]]]],[11,"merge",E,R[102],18,[[["s"]],["merge"]]],[11,"zip",E,R[4798],18,[[["s"]],["zip"]]],[11,"chain",E,R[4799],18,[[["s"]],["chain"]]],[11,"peekable",E,R[4800],18,[[],["peekable"]]],[11,"chunks",E,R[4801],18,[[[R[9]]],["chunks"]]],[11,"select",E,R[4802],18,[[["s"]],["select"]]],[11,"forward",E,R[127],18,[[["s"]],["forward"]]],[11,"split",E,R[4803],18,[[]]],[11,"inspect",E,R[4804],18,[[["f"]],["inspect"]]],[11,R[4805],E,R[4806],18,[[["f"]],[R[5086]]]],[8,R[4492],E,R[4488],N,N],[11,"read_async",E,R[4495],27,[[["self"]],["read"]]],[11,R[5246],E,R[4496],27,[[["self"]],[R[5247]]]],[8,R[4493],E,R[4488],N,N],[11,R[5248],E,R[5249],28,[[["self"]],["write"]]],[11,R[5250],E,R[5251],28,[[["self"]],["writeall"]]],[11,R[5252],E,R[5253],28,[[["self"]],["flush"]]],[8,"SinkExt",E,R[5254],N,N],[11,"send_async",E,R[5255],29,[[["self"]],["send"]]],[8,R[4851],E,R[5256],N,N],[11,"next",E,R[5257],30,[[["self"]],["next"]]],[8,"FutureExt",E,R[4817],N,N],[11,"timeout",E,R[4812],31,[[[R[1358]]],["timeout"]]],[8,R[545],E,R[4819],N,N],[11,R[5177],E,R[4813],32,[[[R[1358]]],[R[5177]]]],[11,R[4815],E,R[4814],32,[[],[R[4815]]]],[11,"timeout",E,R[4816],32,[[[R[1358]]],["timeout"]]],[0,"reactor","tokio",R[5330],N,N],[3,R[5331],R[4838],R[5332],N,N],[3,"Handle",E,R[5336],N,N],[3,R[4854],E,R[5333],N,N],[3,"Reactor",E,R[5335],N,N],[3,R[2739],E,R[5334],N,N],[3,"Turn",E,R[5337],N,N],[0,"sync","tokio",R[5118],N,N],[0,"mpsc",R[4808],R[5374],N,N],[0,"error",R[4807],R[5385],N,N],[3,R[526],R[4839],R[5391],N,N],[3,R[527],E,R[5389],N,N],[3,R[216],E,R[5388],N,N],[3,R[506],E,R[5386],N,N],[3,R[525],E,R[5390],N,N],[3,R[148],E,R[5387],N,N],[5,R[5380],R[4807],R[5381],N,[[]]],[3,"Sender",E,R[5376],N,N],[3,R[147],E,R[5377],N,N],[3,R[145],E,R[5375],N,N],[5,R[533],E,R[5379],N,[[[R[9]]]]],[3,R[146],E,R[5378],N,N],[0,"oneshot",R[4808],R[5392],N,N],[3,"Sender",R[4809],R[5393],N,N],[3,R[145],E,R[5394],N,N],[0,"error",E,R[5396],N,N],[3,R[506],R[4840],R[5397],N,N],[3,R[528],E,R[5398],N,N],[5,R[533],R[4809],R[5395],N,[[]]],[0,"watch",R[4808],R[5401],N,N],[3,R[145],R[4810],R[5402],N,N],[3,"Sender",E,R[5403],N,N],[3,"Ref",E,R[5404],N,N],[0,"error",E,R[5406],N,N],[3,R[506],R[4841],R[5407],N,N],[3,R[148],E,R[5408],N,N],[5,R[533],R[4810],R[5405],N,[[[T]]]],[0,"timer","tokio",R[5155],N,N],[0,R[5161],R[4811],R[2324],N,N],[3,R[2342],R[4842],R[2324],N,N],[3,"Expired",E,R[5162],N,N],[3,"Key",E,R[5163],N,N],[0,"timeout",R[4811],R[5178],N,N],[3,"Timeout",R[4843],R[2329],N,N],[3,"Error",E,R[5179],N,N],[3,"Delay",R[4811],R[5156],N,N],[3,R[2342],E,R[2324],N,N],[3,"Error",E,R[5157],N,N],[3,"Interval",E,R[5158],N,N],[3,"Timeout",E,R[2329],N,N],[0,"util","tokio","Utilities for working with Tokio.",N,N],[11,"timeout",R[4742],R[4812],31,[[[R[1358]]],["timeout"]]],[11,R[5177],E,R[4813],32,[[[R[1358]]],[R[5177]]]],[11,R[4815],E,R[4814],32,[[],[R[4815]]]],[11,"timeout",E,R[4816],32,[[[R[1358]]],["timeout"]]],[8,"FutureExt",R[4818],R[4817],N,N],[11,"timeout",R[4742],R[4812],31,[[[R[1358]]],["timeout"]]],[8,R[545],R[4818],R[4819],N,N],[11,R[5177],R[4742],R[4813],32,[[[R[1358]]],[R[5177]]]],[11,R[4815],E,R[4814],32,[[],[R[4815]]]],[11,"timeout",E,R[4816],32,[[[R[1358]]],["timeout"]]],[0,"executor","tokio","Task execution utilities.",N,N],[8,R[4941],R[4844],R[4942],N,N],[10,"spawn",E,R[4943],33,[[["self"],["box",["future"]],["future"]],[[R[1279]],[R[12],[R[1279]]]]]],[11,"status",E,R[1280],33,[[["self"]],[[R[1279]],[R[12],[R[1279]]]]]],[8,R[1285],E,R[4944],N,N],[10,"spawn",E,R[4945],34,[[["self"],[T]],[[R[1279]],[R[12],[R[1279]]]]]],[11,"status",E,R[1280],34,[[["self"]],[[R[1279]],[R[12],[R[1279]]]]]],[3,R[1284],E,R[4935],N,N],[3,R[4933],E,R[4934],N,N],[3,"Spawn",E,"Return value from the `spawn` function.",N,N],[5,"spawn",E,"Spawns a future on the default executor.",N,[[["f"]],["spawn"]]],[0,"runtime","tokio","A batteries included runtime for applications using Tokio.",N,N],[3,"Builder",R[4821],"Builds Tokio Runtime with custom configuration values.",N,N],[3,"Runtime",E,"Handle to the Tokio runtime.",N,N],[3,R[4358],E,"A future that resolves when the Tokio `Runtime` is shut…",N,N],[3,R[2320],E,"Executes futures on the runtime",N,N],[5,"run",E,R[4820],N,[[["f"]]]],[0,"current_thread",E,"A runtime implementation that runs everything on the…",N,N],[5,"spawn",R[4845],R[5151],N,[[["f"]]]],[3,R[2320],E,R[5149],N,N],[3,"Builder",E,"Builds a Single-threaded runtime with custom configuration…",N,N],[3,"Runtime",E,"Single-threaded runtime provides a way to start reactor…",N,N],[3,"Handle",E,R[5150],N,N],[5,R[4826],E,"Run the provided future to completion using a runtime…",N,[[["f"]],[R[12]]]],[5,"run",E,"Start a current-thread runtime using the supplied future…",N,[[["f"]]]],[11,"new",E,R[4822],35,[[],["builder"]]],[11,"clock",E,R[4823],35,[[["self"],["clock"]],["self"]]],[11,"build",E,R[4824],35,[[["self"]],[["runtime"],[R[12],["runtime"]]]]],[11,"spawn",E,"Spawn a future onto the `CurrentThread` runtime instance…",36,[[["self"],["f"]],[[R[1279]],[R[12],[R[1279]]]]]],[11,"status",E,R[1280],36,[[["self"]],[[R[1279]],[R[12],[R[1279]]]]]],[11,"new",E,"Returns a new runtime initialized with default…",37,[[],[["runtime"],[R[12],["runtime"]]]]],[11,"handle",E,"Get a new handle to spawn futures on the single-threaded…",37,[[["self"]],["handle"]]],[11,"spawn",E,"Spawn a future onto the single-threaded Tokio runtime.",37,[[["self"],["f"]],["self"]]],[11,"block_on",E,"Runs the provided future, blocking the current thread…",37,[[["self"],["f"]],[R[12]]]],[11,"run",E,R[2307],37,[[["self"]],[["runerror"],[R[12],["runerror"]]]]],[11,"new",R[4821],R[4822],38,[[],["builder"]]],[11,"clock",E,R[4823],38,[[["self"],["clock"]],["self"]]],[11,"core_threads",E,"Set the maximum number of worker threads for the…",38,[[["self"],[R[9]]],["self"]]],[11,"blocking_threads",E,"Set the maximum number of concurrent blocking sections in…",38,[[["self"],[R[9]]],["self"]]],[11,"keep_alive",E,"Set the worker thread keep alive duration for threads in…",38,[[[R[1358]],["self"],[R[52],[R[1358]]]],["self"]]],[11,R[5200],E,"Set name prefix of threads spawned by the `Runtime`'s…",38,[[["string"],["self"],["into",["string"]]],["self"]]],[11,R[5201],E,R[5202],38,[[["self"],[R[9]]],["self"]]],[11,R[5203],E,R[5204],38,[[["self"],["f"]],["self"]]],[11,R[5205],E,R[5206],38,[[["self"],["f"]],["self"]]],[11,"build",E,R[4824],38,[[["self"]],[["runtime"],[R[12],["runtime"]]]]],[11,"spawn",E,R[4825],39,[[["self"],["f"]]]],[11,"new",E,"Create a new runtime instance with default configuration…",40,[[],[R[12]]]],[11,"reactor",E,"Return a reference to the reactor handle for this runtime…",40,[[["self"]],["handle"]]],[11,"executor",E,"Return a handle to the runtime's executor.",40,[[["self"]],[R[2318]]]],[11,"spawn",E,R[4825],40,[[["self"],["f"]],["self"]]],[11,"block_on",E,"Run a future to completion on the Tokio runtime.",40,[[["self"],["f"]],[R[12]]]],[11,R[4826],E,"Run a future to completion on the Tokio runtime, then wait…",40,[[["f"]],[R[12]]]],[11,R[4541],E,"Signals the runtime to shutdown once it becomes idle.",40,[[],[R[2344]]]],[11,R[4542],E,"Signals the runtime to shutdown immediately.",40,[[],[R[2344]]]],[11,"from",R[4827],E,41,[[[T]],[T]]],[11,"into",E,E,41,[[],[U]]],[11,R[16],E,E,41,[[["self"]],[T]]],[11,R[17],E,E,41,[[[T],["self"]]]],[11,R[11],E,E,41,[[[U]],[R[12]]]],[11,R[39],E,E,41,[[["self"]],[T]]],[11,R[13],E,E,41,[[["self"]],[T]]],[11,R[14],E,E,41,[[],[R[12]]]],[11,R[18],E,E,41,[[["self"]],[R[40]]]],[11,"from",E,E,42,[[[T]],[T]]],[11,"into",E,E,42,[[],[U]]],[11,R[11],E,E,42,[[[U]],[R[12]]]],[11,R[39],E,E,42,[[["self"]],[T]]],[11,R[13],E,E,42,[[["self"]],[T]]],[11,R[14],E,E,42,[[],[R[12]]]],[11,R[18],E,E,42,[[["self"]],[R[40]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",E,E,43,[[[T]],[T]]],[11,"into",E,E,43,[[],[U]]],[11,R[11],E,E,43,[[[U]],[R[12]]]],[11,R[39],E,E,43,[[["self"]],[T]]],[11,R[13],E,E,43,[[["self"]],[T]]],[11,R[14],E,E,43,[[],[R[12]]]],[11,R[18],E,E,43,[[["self"]],[R[40]]]],[11,"from",E,E,44,[[[T]],[T]]],[11,"into",E,E,44,[[],[U]]],[11,R[11],E,E,44,[[[U]],[R[12]]]],[11,R[39],E,E,44,[[["self"]],[T]]],[11,R[13],E,E,44,[[["self"]],[T]]],[11,R[14],E,E,44,[[],[R[12]]]],[11,R[18],E,E,44,[[["self"]],[R[40]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,"into",E,E,45,[[],[U]]],[11,R[16],E,E,45,[[["self"]],[T]]],[11,R[17],E,E,45,[[[T],["self"]]]],[11,R[11],E,E,45,[[[U]],[R[12]]]],[11,R[39],E,E,45,[[["self"]],[T]]],[11,R[13],E,E,45,[[["self"]],[T]]],[11,R[14],E,E,45,[[],[R[12]]]],[11,R[18],E,E,45,[[["self"]],[R[40]]]],[11,"from",R[4828],E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[16],E,E,4,[[["self"]],[T]]],[11,R[17],E,E,4,[[[T],["self"]]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,"from",E,E,46,[[[T]],[T]]],[11,"into",E,E,46,[[],[U]]],[11,R[170],E,E,46,[[["self"]],["string"]]],[11,R[11],E,E,46,[[[U]],[R[12]]]],[11,R[39],E,E,46,[[["self"]],[T]]],[11,R[13],E,E,46,[[["self"]],[T]]],[11,R[14],E,E,46,[[],[R[12]]]],[11,R[18],E,E,46,[[["self"]],[R[40]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"from",R[4829],E,47,[[[T]],[T]]],[11,"into",E,E,47,[[],[U]]],[11,R[16],E,E,47,[[["self"]],[T]]],[11,R[17],E,E,47,[[[T],["self"]]]],[11,R[11],E,E,47,[[[U]],[R[12]]]],[11,R[39],E,E,47,[[["self"]],[T]]],[11,R[13],E,E,47,[[["self"]],[T]]],[11,R[14],E,E,47,[[],[R[12]]]],[11,R[18],E,E,47,[[["self"]],[R[40]]]],[11,"from",R[4830],E,48,[[[T]],[T]]],[11,"into",E,E,48,[[],[U]]],[11,R[11],E,E,48,[[[U]],[R[12]]]],[11,R[39],E,E,48,[[["self"]],[T]]],[11,R[13],E,E,48,[[["self"]],[T]]],[11,R[14],E,E,48,[[],[R[12]]]],[11,R[18],E,E,48,[[["self"]],[R[40]]]],[11,"from",R[4829],E,49,[[[T]],[T]]],[11,"into",E,E,49,[[],[U]]],[11,R[11],E,E,49,[[[U]],[R[12]]]],[11,R[39],E,E,49,[[["self"]],[T]]],[11,R[13],E,E,49,[[["self"]],[T]]],[11,R[14],E,E,49,[[],[R[12]]]],[11,R[18],E,E,49,[[["self"]],[R[40]]]],[11,R[99],E,E,49,[[],["f"]]],[11,"from",E,E,50,[[[T]],[T]]],[11,"into",E,E,50,[[],[U]]],[11,R[11],E,E,50,[[[U]],[R[12]]]],[11,R[39],E,E,50,[[["self"]],[T]]],[11,R[13],E,E,50,[[["self"]],[T]]],[11,R[14],E,E,50,[[],[R[12]]]],[11,R[18],E,E,50,[[["self"]],[R[40]]]],[11,R[99],E,E,50,[[],["f"]]],[11,"from",E,E,51,[[[T]],[T]]],[11,"into",E,E,51,[[],[U]]],[11,R[11],E,E,51,[[[U]],[R[12]]]],[11,R[39],E,E,51,[[["self"]],[T]]],[11,R[13],E,E,51,[[["self"]],[T]]],[11,R[14],E,E,51,[[],[R[12]]]],[11,R[18],E,E,51,[[["self"]],[R[40]]]],[11,R[99],E,E,51,[[],["f"]]],[11,"from",E,E,52,[[[T]],[T]]],[11,"into",E,E,52,[[],[U]]],[11,R[11],E,E,52,[[[U]],[R[12]]]],[11,R[39],E,E,52,[[["self"]],[T]]],[11,R[13],E,E,52,[[["self"]],[T]]],[11,R[14],E,E,52,[[],[R[12]]]],[11,R[18],E,E,52,[[["self"]],[R[40]]]],[11,R[99],E,E,52,[[],["f"]]],[11,"from",E,E,53,[[[T]],[T]]],[11,"into",E,E,53,[[],[U]]],[11,R[11],E,E,53,[[[U]],[R[12]]]],[11,R[39],E,E,53,[[["self"]],[T]]],[11,R[13],E,E,53,[[["self"]],[T]]],[11,R[14],E,E,53,[[],[R[12]]]],[11,R[18],E,E,53,[[["self"]],[R[40]]]],[11,R[99],E,E,53,[[],["f"]]],[11,"from",R[4831],E,54,[[[T]],[T]]],[11,"into",E,E,54,[[],[U]]],[11,R[11],E,E,54,[[[U]],[R[12]]]],[11,R[39],E,E,54,[[["self"]],[T]]],[11,R[13],E,E,54,[[["self"]],[T]]],[11,R[14],E,E,54,[[],[R[12]]]],[11,R[18],E,E,54,[[["self"]],[R[40]]]],[11,R[99],E,E,54,[[],["f"]]],[11,"from",R[4830],E,55,[[[T]],[T]]],[11,"into",E,E,55,[[],[U]]],[11,R[11],E,E,55,[[[U]],[R[12]]]],[11,R[39],E,E,55,[[["self"]],[T]]],[11,R[13],E,E,55,[[["self"]],[T]]],[11,R[14],E,E,55,[[],[R[12]]]],[11,R[18],E,E,55,[[["self"]],[R[40]]]],[11,R[99],E,E,55,[[],["f"]]],[11,"from",E,E,56,[[[T]],[T]]],[11,"into",E,E,56,[[],[U]]],[11,R[11],E,E,56,[[[U]],[R[12]]]],[11,R[39],E,E,56,[[["self"]],[T]]],[11,R[13],E,E,56,[[["self"]],[T]]],[11,R[14],E,E,56,[[],[R[12]]]],[11,R[18],E,E,56,[[["self"]],[R[40]]]],[11,R[99],E,E,56,[[],["f"]]],[11,"from",R[4846],E,57,[[[T]],[T]]],[11,"into",E,E,57,[[],[U]]],[11,R[11],E,E,57,[[[U]],[R[12]]]],[11,R[39],E,E,57,[[["self"]],[T]]],[11,R[13],E,E,57,[[["self"]],[T]]],[11,R[14],E,E,57,[[],[R[12]]]],[11,R[18],E,E,57,[[["self"]],[R[40]]]],[11,"from",E,E,58,[[[T]],[T]]],[11,"into",E,E,58,[[],[U]]],[11,R[11],E,E,58,[[[U]],[R[12]]]],[11,R[39],E,E,58,[[["self"]],[T]]],[11,R[13],E,E,58,[[["self"]],[T]]],[11,R[14],E,E,58,[[],[R[12]]]],[11,R[18],E,E,58,[[["self"]],[R[40]]]],[11,"from",E,E,59,[[[T]],[T]]],[11,"into",E,E,59,[[],[U]]],[11,R[11],E,E,59,[[[U]],[R[12]]]],[11,R[39],E,E,59,[[["self"]],[T]]],[11,R[13],E,E,59,[[["self"]],[T]]],[11,R[14],E,E,59,[[],[R[12]]]],[11,R[18],E,E,59,[[["self"]],[R[40]]]],[11,"from",E,E,60,[[[T]],[T]]],[11,"into",E,E,60,[[],[U]]],[11,R[11],E,E,60,[[[U]],[R[12]]]],[11,R[39],E,E,60,[[["self"]],[T]]],[11,R[13],E,E,60,[[["self"]],[T]]],[11,R[14],E,E,60,[[],[R[12]]]],[11,R[18],E,E,60,[[["self"]],[R[40]]]],[11,R[99],E,E,60,[[],["f"]]],[11,"from",E,E,61,[[[T]],[T]]],[11,"into",E,E,61,[[],[U]]],[11,R[11],E,E,61,[[[U]],[R[12]]]],[11,R[39],E,E,61,[[["self"]],[T]]],[11,R[13],E,E,61,[[["self"]],[T]]],[11,R[14],E,E,61,[[],[R[12]]]],[11,R[18],E,E,61,[[["self"]],[R[40]]]],[11,R[99],E,E,61,[[],["f"]]],[11,"from",E,E,62,[[[T]],[T]]],[11,"into",E,E,62,[[],[U]]],[11,R[11],E,E,62,[[[U]],[R[12]]]],[11,R[39],E,E,62,[[["self"]],[T]]],[11,R[13],E,E,62,[[["self"]],[T]]],[11,R[14],E,E,62,[[],[R[12]]]],[11,R[18],E,E,62,[[["self"]],[R[40]]]],[11,"from",E,E,63,[[[T]],[T]]],[11,"into",E,E,63,[[],[U]]],[11,R[11],E,E,63,[[[U]],[R[12]]]],[11,R[39],E,E,63,[[["self"]],[T]]],[11,R[13],E,E,63,[[["self"]],[T]]],[11,R[14],E,E,63,[[],[R[12]]]],[11,R[18],E,E,63,[[["self"]],[R[40]]]],[11,R[99],E,E,63,[[],["f"]]],[11,"from",E,E,64,[[[T]],[T]]],[11,"into",E,E,64,[[],[U]]],[11,R[11],E,E,64,[[[U]],[R[12]]]],[11,R[39],E,E,64,[[["self"]],[T]]],[11,R[13],E,E,64,[[["self"]],[T]]],[11,R[14],E,E,64,[[],[R[12]]]],[11,R[18],E,E,64,[[["self"]],[R[40]]]],[11,"from",E,E,65,[[[T]],[T]]],[11,"into",E,E,65,[[],[U]]],[11,R[11],E,E,65,[[[U]],[R[12]]]],[11,R[39],E,E,65,[[["self"]],[T]]],[11,R[13],E,E,65,[[["self"]],[T]]],[11,R[14],E,E,65,[[],[R[12]]]],[11,R[18],E,E,65,[[["self"]],[R[40]]]],[11,R[99],E,E,65,[[],["f"]]],[11,"from",E,E,66,[[[T]],[T]]],[11,"into",E,E,66,[[],[U]]],[11,R[11],E,E,66,[[[U]],[R[12]]]],[11,R[39],E,E,66,[[["self"]],[T]]],[11,R[13],E,E,66,[[["self"]],[T]]],[11,R[14],E,E,66,[[],[R[12]]]],[11,R[18],E,E,66,[[["self"]],[R[40]]]],[11,R[99],E,E,66,[[],["f"]]],[11,"from",E,E,67,[[[T]],[T]]],[11,"into",E,E,67,[[],[U]]],[11,R[11],E,E,67,[[[U]],[R[12]]]],[11,R[39],E,E,67,[[["self"]],[T]]],[11,R[13],E,E,67,[[["self"]],[T]]],[11,R[14],E,E,67,[[],[R[12]]]],[11,R[18],E,E,67,[[["self"]],[R[40]]]],[11,R[99],E,E,67,[[],["f"]]],[11,"from",E,E,68,[[[T]],[T]]],[11,"into",E,E,68,[[],[U]]],[11,R[11],E,E,68,[[[U]],[R[12]]]],[11,R[39],E,E,68,[[["self"]],[T]]],[11,R[13],E,E,68,[[["self"]],[T]]],[11,R[14],E,E,68,[[],[R[12]]]],[11,R[18],E,E,68,[[["self"]],[R[40]]]],[11,R[99],E,E,68,[[],["f"]]],[11,"from",E,E,69,[[[T]],[T]]],[11,"into",E,E,69,[[],[U]]],[11,R[11],E,E,69,[[[U]],[R[12]]]],[11,R[39],E,E,69,[[["self"]],[T]]],[11,R[13],E,E,69,[[["self"]],[T]]],[11,R[14],E,E,69,[[],[R[12]]]],[11,R[18],E,E,69,[[["self"]],[R[40]]]],[11,"from",E,E,70,[[[T]],[T]]],[11,"into",E,E,70,[[],[U]]],[11,R[170],E,E,70,[[["self"]],["string"]]],[11,R[11],E,E,70,[[[U]],[R[12]]]],[11,R[39],E,E,70,[[["self"]],[T]]],[11,R[13],E,E,70,[[["self"]],[T]]],[11,R[14],E,E,70,[[],[R[12]]]],[11,R[18],E,E,70,[[["self"]],[R[40]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[16],E,E,7,[[["self"]],[T]]],[11,R[17],E,E,7,[[[T],["self"]]]],[11,R[11],E,E,7,[[[U]],[R[12]]]],[11,R[39],E,E,7,[[["self"]],[T]]],[11,R[13],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[],[R[12]]]],[11,R[18],E,E,7,[[["self"]],[R[40]]]],[11,"from",R[4832],E,71,[[[T]],[T]]],[11,"into",E,E,71,[[],[U]]],[11,R[11],E,E,71,[[[U]],[R[12]]]],[11,R[39],E,E,71,[[["self"]],[T]]],[11,R[13],E,E,71,[[["self"]],[T]]],[11,R[14],E,E,71,[[],[R[12]]]],[11,R[18],E,E,71,[[["self"]],[R[40]]]],[11,"from",E,E,72,[[[T]],[T]]],[11,"into",E,E,72,[[],[U]]],[11,R[11],E,E,72,[[[U]],[R[12]]]],[11,R[39],E,E,72,[[["self"]],[T]]],[11,R[13],E,E,72,[[["self"]],[T]]],[11,R[14],E,E,72,[[],[R[12]]]],[11,R[18],E,E,72,[[["self"]],[R[40]]]],[11,"from",R[4833],E,73,[[[T]],[T]]],[11,"into",E,E,73,[[],[U]]],[11,R[11],E,E,73,[[[U]],[R[12]]]],[11,R[39],E,E,73,[[["self"]],[T]]],[11,R[13],E,E,73,[[["self"]],[T]]],[11,R[14],E,E,73,[[],[R[12]]]],[11,R[18],E,E,73,[[["self"]],[R[40]]]],[11,"from",E,E,74,[[[T]],[T]]],[11,"into",E,E,74,[[],[U]]],[11,R[11],E,E,74,[[[U]],[R[12]]]],[11,R[39],E,E,74,[[["self"]],[T]]],[11,R[13],E,E,74,[[["self"]],[T]]],[11,R[14],E,E,74,[[],[R[12]]]],[11,R[18],E,E,74,[[["self"]],[R[40]]]],[11,"from",R[4834],E,75,[[[T]],[T]]],[11,"into",E,E,75,[[],[U]]],[11,R[11],E,E,75,[[[U]],[R[12]]]],[11,R[39],E,E,75,[[["self"]],[T]]],[11,R[13],E,E,75,[[["self"]],[T]]],[11,R[14],E,E,75,[[],[R[12]]]],[11,R[18],E,E,75,[[["self"]],[R[40]]]],[11,"from",E,E,76,[[[T]],[T]]],[11,"into",E,E,76,[[],[U]]],[11,R[11],E,E,76,[[[U]],[R[12]]]],[11,R[39],E,E,76,[[["self"]],[T]]],[11,R[13],E,E,76,[[["self"]],[T]]],[11,R[14],E,E,76,[[],[R[12]]]],[11,R[18],E,E,76,[[["self"]],[R[40]]]],[11,"from",E,E,77,[[[T]],[T]]],[11,"into",E,E,77,[[],[U]]],[11,R[11],E,E,77,[[[U]],[R[12]]]],[11,R[39],E,E,77,[[["self"]],[T]]],[11,R[13],E,E,77,[[["self"]],[T]]],[11,R[14],E,E,77,[[],[R[12]]]],[11,R[18],E,E,77,[[["self"]],[R[40]]]],[11,"from",E,E,78,[[[T]],[T]]],[11,"into",E,E,78,[[],[U]]],[11,R[11],E,E,78,[[[U]],[R[12]]]],[11,R[39],E,E,78,[[["self"]],[T]]],[11,R[13],E,E,78,[[["self"]],[T]]],[11,R[14],E,E,78,[[],[R[12]]]],[11,R[18],E,E,78,[[["self"]],[R[40]]]],[11,"from",R[4832],E,79,[[[T]],[T]]],[11,"into",E,E,79,[[],[U]]],[11,R[11],E,E,79,[[[U]],[R[12]]]],[11,R[39],E,E,79,[[["self"]],[T]]],[11,R[13],E,E,79,[[["self"]],[T]]],[11,R[14],E,E,79,[[],[R[12]]]],[11,R[18],E,E,79,[[["self"]],[R[40]]]],[11,R[99],E,E,79,[[],["f"]]],[11,"from",E,E,80,[[[T]],[T]]],[11,"into",E,E,80,[[],[U]]],[11,R[11],E,E,80,[[[U]],[R[12]]]],[11,R[39],E,E,80,[[["self"]],[T]]],[11,R[13],E,E,80,[[["self"]],[T]]],[11,R[14],E,E,80,[[],[R[12]]]],[11,R[18],E,E,80,[[["self"]],[R[40]]]],[11,"from",R[4833],E,81,[[[T]],[T]]],[11,"into",E,E,81,[[],[U]]],[11,R[11],E,E,81,[[[U]],[R[12]]]],[11,R[39],E,E,81,[[["self"]],[T]]],[11,R[13],E,E,81,[[["self"]],[T]]],[11,R[14],E,E,81,[[],[R[12]]]],[11,R[18],E,E,81,[[["self"]],[R[40]]]],[11,R[99],E,E,81,[[],["f"]]],[11,"from",E,E,82,[[[T]],[T]]],[11,"into",E,E,82,[[],[U]]],[11,R[11],E,E,82,[[[U]],[R[12]]]],[11,R[39],E,E,82,[[["self"]],[T]]],[11,R[13],E,E,82,[[["self"]],[T]]],[11,R[14],E,E,82,[[],[R[12]]]],[11,R[18],E,E,82,[[["self"]],[R[40]]]],[11,R[99],E,E,82,[[],["f"]]],[11,"from",R[4834],E,83,[[[T]],[T]]],[11,"into",E,E,83,[[],[U]]],[11,R[11],E,E,83,[[[U]],[R[12]]]],[11,R[39],E,E,83,[[["self"]],[T]]],[11,R[13],E,E,83,[[["self"]],[T]]],[11,R[14],E,E,83,[[],[R[12]]]],[11,R[18],E,E,83,[[["self"]],[R[40]]]],[11,R[99],E,E,83,[[],["f"]]],[11,"from",E,E,84,[[[T]],[T]]],[11,"into",E,E,84,[[],[U]]],[11,R[11],E,E,84,[[[U]],[R[12]]]],[11,R[39],E,E,84,[[["self"]],[T]]],[11,R[13],E,E,84,[[["self"]],[T]]],[11,R[14],E,E,84,[[],[R[12]]]],[11,R[18],E,E,84,[[["self"]],[R[40]]]],[11,"from",E,E,85,[[[T]],[T]]],[11,"into",E,E,85,[[],[U]]],[11,R[11],E,E,85,[[[U]],[R[12]]]],[11,R[39],E,E,85,[[["self"]],[T]]],[11,R[13],E,E,85,[[["self"]],[T]]],[11,R[14],E,E,85,[[],[R[12]]]],[11,R[18],E,E,85,[[["self"]],[R[40]]]],[11,R[99],E,E,85,[[],["f"]]],[11,"from",E,E,86,[[[T]],[T]]],[11,"into",E,E,86,[[],[U]]],[11,R[11],E,E,86,[[[U]],[R[12]]]],[11,R[39],E,E,86,[[["self"]],[T]]],[11,R[13],E,E,86,[[["self"]],[T]]],[11,R[14],E,E,86,[[],[R[12]]]],[11,R[18],E,E,86,[[["self"]],[R[40]]]],[11,R[99],E,E,86,[[],["f"]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[16],E,E,10,[[["self"]],[T]]],[11,R[17],E,E,10,[[[T],["self"]]]],[11,R[11],E,E,10,[[[U]],[R[12]]]],[11,R[39],E,E,10,[[["self"]],[T]]],[11,R[13],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[],[R[12]]]],[11,R[18],E,E,10,[[["self"]],[R[40]]]],[11,"from",R[4835],E,87,[[[T]],[T]]],[11,"into",E,E,87,[[],[U]]],[11,R[11],E,E,87,[[[U]],[R[12]]]],[11,R[39],E,E,87,[[["self"]],[T]]],[11,R[13],E,E,87,[[["self"]],[T]]],[11,R[14],E,E,87,[[],[R[12]]]],[11,R[18],E,E,87,[[["self"]],[R[40]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[16],E,E,15,[[["self"]],[T]]],[11,R[17],E,E,15,[[[T],["self"]]]],[11,R[11],E,E,15,[[[U]],[R[12]]]],[11,R[39],E,E,15,[[["self"]],[T]]],[11,R[13],E,E,15,[[["self"]],[T]]],[11,R[14],E,E,15,[[],[R[12]]]],[11,R[18],E,E,15,[[["self"]],[R[40]]]],[11,"from",E,E,88,[[[T]],[T]]],[11,"into",E,E,88,[[],[U]]],[11,R[11],E,E,88,[[[U]],[R[12]]]],[11,R[39],E,E,88,[[["self"]],[T]]],[11,R[13],E,E,88,[[["self"]],[T]]],[11,R[14],E,E,88,[[],[R[12]]]],[11,R[18],E,E,88,[[["self"]],[R[40]]]],[11,R[99],E,E,88,[[],["f"]]],[11,"from",E,E,89,[[[T]],[T]]],[11,"into",E,E,89,[[],[U]]],[11,R[16],E,E,89,[[["self"]],[T]]],[11,R[17],E,E,89,[[[T],["self"]]]],[11,R[11],E,E,89,[[[U]],[R[12]]]],[11,R[39],E,E,89,[[["self"]],[T]]],[11,R[13],E,E,89,[[["self"]],[T]]],[11,R[14],E,E,89,[[],[R[12]]]],[11,R[18],E,E,89,[[["self"]],[R[40]]]],[11,R[99],E,E,89,[[],["f"]]],[11,"from",E,E,90,[[[T]],[T]]],[11,"into",E,E,90,[[],[U]]],[11,R[11],E,E,90,[[[U]],[R[12]]]],[11,R[39],E,E,90,[[["self"]],[T]]],[11,R[13],E,E,90,[[["self"]],[T]]],[11,R[14],E,E,90,[[],[R[12]]]],[11,R[18],E,E,90,[[["self"]],[R[40]]]],[11,R[99],E,E,90,[[],["f"]]],[11,"from",E,E,91,[[[T]],[T]]],[11,"into",E,E,91,[[],[U]]],[11,R[11],E,E,91,[[[U]],[R[12]]]],[11,R[39],E,E,91,[[["self"]],[T]]],[11,R[13],E,E,91,[[["self"]],[T]]],[11,R[14],E,E,91,[[],[R[12]]]],[11,R[18],E,E,91,[[["self"]],[R[40]]]],[11,R[99],E,E,91,[[],["f"]]],[11,"from",E,E,92,[[[T]],[T]]],[11,"into",E,E,92,[[],[U]]],[11,R[11],E,E,92,[[[U]],[R[12]]]],[11,R[39],E,E,92,[[["self"]],[T]]],[11,R[13],E,E,92,[[["self"]],[T]]],[11,R[14],E,E,92,[[],[R[12]]]],[11,R[18],E,E,92,[[["self"]],[R[40]]]],[11,R[99],E,E,92,[[],["f"]]],[11,"from",E,E,93,[[[T]],[T]]],[11,"into",E,E,93,[[],[U]]],[11,R[11],E,E,93,[[[U]],[R[12]]]],[11,R[39],E,E,93,[[["self"]],[T]]],[11,R[13],E,E,93,[[["self"]],[T]]],[11,R[14],E,E,93,[[],[R[12]]]],[11,R[18],E,E,93,[[["self"]],[R[40]]]],[11,R[99],E,E,93,[[],["f"]]],[11,"from",E,E,94,[[[T]],[T]]],[11,"into",E,E,94,[[],[U]]],[11,R[11],E,E,94,[[[U]],[R[12]]]],[11,R[39],E,E,94,[[["self"]],[T]]],[11,R[13],E,E,94,[[["self"]],[T]]],[11,R[14],E,E,94,[[],[R[12]]]],[11,R[18],E,E,94,[[["self"]],[R[40]]]],[11,R[99],E,E,94,[[],["f"]]],[11,"from",E,E,95,[[[T]],[T]]],[11,"into",E,E,95,[[],[U]]],[11,R[11],E,E,95,[[[U]],[R[12]]]],[11,R[39],E,E,95,[[["self"]],[T]]],[11,R[13],E,E,95,[[["self"]],[T]]],[11,R[14],E,E,95,[[],[R[12]]]],[11,R[18],E,E,95,[[["self"]],[R[40]]]],[11,R[99],E,E,95,[[],["f"]]],[11,"from",E,E,96,[[[T]],[T]]],[11,"into",E,E,96,[[],[U]]],[11,R[11],E,E,96,[[[U]],[R[12]]]],[11,R[39],E,E,96,[[["self"]],[T]]],[11,R[13],E,E,96,[[["self"]],[T]]],[11,R[14],E,E,96,[[],[R[12]]]],[11,R[18],E,E,96,[[["self"]],[R[40]]]],[11,R[99],E,E,96,[[],["f"]]],[11,"from",E,E,97,[[[T]],[T]]],[11,"into",E,E,97,[[],[U]]],[11,R[11],E,E,97,[[[U]],[R[12]]]],[11,R[39],E,E,97,[[["self"]],[T]]],[11,R[13],E,E,97,[[["self"]],[T]]],[11,R[14],E,E,97,[[],[R[12]]]],[11,R[18],E,E,97,[[["self"]],[R[40]]]],[11,R[99],E,E,97,[[],["f"]]],[11,"from",E,E,98,[[[T]],[T]]],[11,"into",E,E,98,[[],[U]]],[11,R[11],E,E,98,[[[U]],[R[12]]]],[11,R[39],E,E,98,[[["self"]],[T]]],[11,R[13],E,E,98,[[["self"]],[T]]],[11,R[14],E,E,98,[[],[R[12]]]],[11,R[18],E,E,98,[[["self"]],[R[40]]]],[11,R[99],E,E,98,[[],["f"]]],[11,"from",E,E,99,[[[T]],[T]]],[11,"into",E,E,99,[[],[U]]],[11,R[11],E,E,99,[[[U]],[R[12]]]],[11,R[39],E,E,99,[[["self"]],[T]]],[11,R[13],E,E,99,[[["self"]],[T]]],[11,R[14],E,E,99,[[],[R[12]]]],[11,R[18],E,E,99,[[["self"]],[R[40]]]],[11,R[99],E,E,99,[[],["f"]]],[11,"from",E,E,100,[[[T]],[T]]],[11,"into",E,E,100,[[],[U]]],[11,R[16],E,E,100,[[["self"]],[T]]],[11,R[17],E,E,100,[[[T],["self"]]]],[11,R[170],E,E,100,[[["self"]],["string"]]],[11,R[11],E,E,100,[[[U]],[R[12]]]],[11,R[39],E,E,100,[[["self"]],[T]]],[11,R[13],E,E,100,[[["self"]],[T]]],[11,R[14],E,E,100,[[],[R[12]]]],[11,R[18],E,E,100,[[["self"]],[R[40]]]],[11,"from",E,E,101,[[[T]],[T]]],[11,"into",E,E,101,[[],[U]]],[11,R[16],E,E,101,[[["self"]],[T]]],[11,R[17],E,E,101,[[[T],["self"]]]],[11,R[11],E,E,101,[[[U]],[R[12]]]],[11,R[39],E,E,101,[[["self"]],[T]]],[11,R[13],E,E,101,[[["self"]],[T]]],[11,R[14],E,E,101,[[],[R[12]]]],[11,R[18],E,E,101,[[["self"]],[R[40]]]],[11,"from",E,E,102,[[[T]],[T]]],[11,"into",E,E,102,[[],[U]]],[11,R[11],E,E,102,[[[U]],[R[12]]]],[11,R[39],E,E,102,[[["self"]],[T]]],[11,R[13],E,E,102,[[["self"]],[T]]],[11,R[14],E,E,102,[[],[R[12]]]],[11,R[18],E,E,102,[[["self"]],[R[40]]]],[11,R[99],E,E,102,[[],["f"]]],[11,"from",E,E,103,[[[T]],[T]]],[11,"into",E,E,103,[[],[U]]],[11,R[11],E,E,103,[[[U]],[R[12]]]],[11,R[39],E,E,103,[[["self"]],[T]]],[11,R[13],E,E,103,[[["self"]],[T]]],[11,R[14],E,E,103,[[],[R[12]]]],[11,R[18],E,E,103,[[["self"]],[R[40]]]],[11,R[99],E,E,103,[[],["f"]]],[11,"from",E,E,104,[[[T]],[T]]],[11,"into",E,E,104,[[],[U]]],[11,R[11],E,E,104,[[[U]],[R[12]]]],[11,R[39],E,E,104,[[["self"]],[T]]],[11,R[13],E,E,104,[[["self"]],[T]]],[11,R[14],E,E,104,[[],[R[12]]]],[11,R[18],E,E,104,[[["self"]],[R[40]]]],[11,R[99],E,E,104,[[],["f"]]],[11,"from",E,E,105,[[[T]],[T]]],[11,"into",E,E,105,[[],[U]]],[11,R[11],E,E,105,[[[U]],[R[12]]]],[11,R[39],E,E,105,[[["self"]],[T]]],[11,R[13],E,E,105,[[["self"]],[T]]],[11,R[14],E,E,105,[[],[R[12]]]],[11,R[18],E,E,105,[[["self"]],[R[40]]]],[11,"from",E,E,106,[[[T]],[T]]],[11,"into",E,E,106,[[],[U]]],[11,R[11],E,E,106,[[[U]],[R[12]]]],[11,R[39],E,E,106,[[["self"]],[T]]],[11,R[13],E,E,106,[[["self"]],[T]]],[11,R[14],E,E,106,[[],[R[12]]]],[11,R[18],E,E,106,[[["self"]],[R[40]]]],[11,R[99],E,E,106,[[],["f"]]],[11,"from",E,E,107,[[[T]],[T]]],[11,"into",E,E,107,[[],[U]]],[11,R[11],E,E,107,[[[U]],[R[12]]]],[11,R[39],E,E,107,[[["self"]],[T]]],[11,R[13],E,E,107,[[["self"]],[T]]],[11,R[14],E,E,107,[[],[R[12]]]],[11,R[18],E,E,107,[[["self"]],[R[40]]]],[11,R[99],E,E,107,[[],["f"]]],[11,"from",E,E,108,[[[T]],[T]]],[11,"into",E,E,108,[[],[U]]],[11,R[11],E,E,108,[[[U]],[R[12]]]],[11,R[39],E,E,108,[[["self"]],[T]]],[11,R[13],E,E,108,[[["self"]],[T]]],[11,R[14],E,E,108,[[],[R[12]]]],[11,R[18],E,E,108,[[["self"]],[R[40]]]],[11,R[99],E,E,108,[[],["f"]]],[11,"from",E,E,109,[[[T]],[T]]],[11,"into",E,E,109,[[],[U]]],[11,R[16],E,E,109,[[["self"]],[T]]],[11,R[17],E,E,109,[[[T],["self"]]]],[11,R[11],E,E,109,[[[U]],[R[12]]]],[11,R[39],E,E,109,[[["self"]],[T]]],[11,R[13],E,E,109,[[["self"]],[T]]],[11,R[14],E,E,109,[[],[R[12]]]],[11,R[18],E,E,109,[[["self"]],[R[40]]]],[11,R[99],E,E,109,[[],["f"]]],[11,"from",E,E,110,[[[T]],[T]]],[11,"into",E,E,110,[[],[U]]],[11,R[11],E,E,110,[[[U]],[R[12]]]],[11,R[39],E,E,110,[[["self"]],[T]]],[11,R[13],E,E,110,[[["self"]],[T]]],[11,R[14],E,E,110,[[],[R[12]]]],[11,R[18],E,E,110,[[["self"]],[R[40]]]],[11,R[99],E,E,110,[[],["f"]]],[11,"from",E,E,111,[[[T]],[T]]],[11,"into",E,E,111,[[],[U]]],[11,R[11],E,E,111,[[[U]],[R[12]]]],[11,R[39],E,E,111,[[["self"]],[T]]],[11,R[13],E,E,111,[[["self"]],[T]]],[11,R[14],E,E,111,[[],[R[12]]]],[11,R[18],E,E,111,[[["self"]],[R[40]]]],[11,R[99],E,E,111,[[],["f"]]],[11,"from",E,E,112,[[[T]],[T]]],[11,"into",E,E,112,[[],[U]]],[11,R[11],E,E,112,[[[U]],[R[12]]]],[11,R[39],E,E,112,[[["self"]],[T]]],[11,R[13],E,E,112,[[["self"]],[T]]],[11,R[14],E,E,112,[[],[R[12]]]],[11,R[18],E,E,112,[[["self"]],[R[40]]]],[11,R[99],E,E,112,[[],["f"]]],[11,"from",E,E,113,[[[T]],[T]]],[11,"into",E,E,113,[[],[U]]],[11,R[11],E,E,113,[[[U]],[R[12]]]],[11,R[39],E,E,113,[[["self"]],[T]]],[11,R[13],E,E,113,[[["self"]],[T]]],[11,R[14],E,E,113,[[],[R[12]]]],[11,R[18],E,E,113,[[["self"]],[R[40]]]],[11,R[99],E,E,113,[[],["f"]]],[11,"from",E,E,114,[[[T]],[T]]],[11,"into",E,E,114,[[],[U]]],[11,R[11],E,E,114,[[[U]],[R[12]]]],[11,R[39],E,E,114,[[["self"]],[T]]],[11,R[13],E,E,114,[[["self"]],[T]]],[11,R[14],E,E,114,[[],[R[12]]]],[11,R[18],E,E,114,[[["self"]],[R[40]]]],[11,R[99],E,E,114,[[],["f"]]],[11,"from",E,E,115,[[[T]],[T]]],[11,"into",E,E,115,[[],[U]]],[11,R[11],E,E,115,[[[U]],[R[12]]]],[11,R[39],E,E,115,[[["self"]],[T]]],[11,R[13],E,E,115,[[["self"]],[T]]],[11,R[14],E,E,115,[[],[R[12]]]],[11,R[18],E,E,115,[[["self"]],[R[40]]]],[11,R[99],E,E,115,[[],["f"]]],[11,"from",E,E,116,[[[T]],[T]]],[11,"into",E,E,116,[[],[U]]],[11,R[11],E,E,116,[[[U]],[R[12]]]],[11,R[39],E,E,116,[[["self"]],[T]]],[11,R[13],E,E,116,[[["self"]],[T]]],[11,R[14],E,E,116,[[],[R[12]]]],[11,R[18],E,E,116,[[["self"]],[R[40]]]],[11,R[99],E,E,116,[[],["f"]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[11],E,E,16,[[[U]],[R[12]]]],[11,R[39],E,E,16,[[["self"]],[T]]],[11,R[13],E,E,16,[[["self"]],[T]]],[11,R[14],E,E,16,[[],[R[12]]]],[11,R[18],E,E,16,[[["self"]],[R[40]]]],[11,"from",E,E,117,[[[T]],[T]]],[11,"into",E,E,117,[[],[U]]],[11,R[11],E,E,117,[[[U]],[R[12]]]],[11,R[39],E,E,117,[[["self"]],[T]]],[11,R[13],E,E,117,[[["self"]],[T]]],[11,R[14],E,E,117,[[],[R[12]]]],[11,R[18],E,E,117,[[["self"]],[R[40]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[11],E,E,17,[[[U]],[R[12]]]],[11,R[39],E,E,17,[[["self"]],[T]]],[11,R[13],E,E,17,[[["self"]],[T]]],[11,R[14],E,E,17,[[],[R[12]]]],[11,R[18],E,E,17,[[["self"]],[R[40]]]],[11,R[99],E,E,17,[[],["f"]]],[11,"from",R[4836],E,118,[[[T]],[T]]],[11,"into",E,E,118,[[],[U]]],[11,R[11],E,E,118,[[[U]],[R[12]]]],[11,R[39],E,E,118,[[["self"]],[T]]],[11,R[13],E,E,118,[[["self"]],[T]]],[11,R[14],E,E,118,[[],[R[12]]]],[11,R[18],E,E,118,[[["self"]],[R[40]]]],[11,"from",E,E,119,[[[T]],[T]]],[11,R[48],E,E,119,[[],["i"]]],[11,"into",E,E,119,[[],[U]]],[11,R[11],E,E,119,[[[U]],[R[12]]]],[11,R[39],E,E,119,[[["self"]],[T]]],[11,R[13],E,E,119,[[["self"]],[T]]],[11,R[14],E,E,119,[[],[R[12]]]],[11,R[18],E,E,119,[[["self"]],[R[40]]]],[11,"from",R[4743],E,120,[[[T]],[T]]],[11,"into",E,E,120,[[],[U]]],[11,R[11],E,E,120,[[[U]],[R[12]]]],[11,R[39],E,E,120,[[["self"]],[T]]],[11,R[13],E,E,120,[[["self"]],[T]]],[11,R[14],E,E,120,[[],[R[12]]]],[11,R[18],E,E,120,[[["self"]],[R[40]]]],[11,"from",E,E,121,[[[T]],[T]]],[11,"into",E,E,121,[[],[U]]],[11,R[11],E,E,121,[[[U]],[R[12]]]],[11,R[39],E,E,121,[[["self"]],[T]]],[11,R[13],E,E,121,[[["self"]],[T]]],[11,R[14],E,E,121,[[],[R[12]]]],[11,R[18],E,E,121,[[["self"]],[R[40]]]],[11,R[99],E,E,121,[[],["f"]]],[11,"from",E,E,122,[[[T]],[T]]],[11,"into",E,E,122,[[],[U]]],[11,R[11],E,E,122,[[[U]],[R[12]]]],[11,R[39],E,E,122,[[["self"]],[T]]],[11,R[13],E,E,122,[[["self"]],[T]]],[11,R[14],E,E,122,[[],[R[12]]]],[11,R[18],E,E,122,[[["self"]],[R[40]]]],[11,R[99],E,E,122,[[],["f"]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[170],E,E,19,[[["self"]],["string"]]],[11,R[11],E,E,19,[[[U]],[R[12]]]],[11,R[39],E,E,19,[[["self"]],[T]]],[11,R[13],E,E,19,[[["self"]],[T]]],[11,R[14],E,E,19,[[],[R[12]]]],[11,R[18],E,E,19,[[["self"]],[R[40]]]],[11,"from",E,E,123,[[[T]],[T]]],[11,"into",E,E,123,[[],[U]]],[11,R[11],E,E,123,[[[U]],[R[12]]]],[11,R[39],E,E,123,[[["self"]],[T]]],[11,R[13],E,E,123,[[["self"]],[T]]],[11,R[14],E,E,123,[[],[R[12]]]],[11,R[18],E,E,123,[[["self"]],[R[40]]]],[11,"from",E,E,124,[[[T]],[T]]],[11,"into",E,E,124,[[],[U]]],[11,R[11],E,E,124,[[[U]],[R[12]]]],[11,R[39],E,E,124,[[["self"]],[T]]],[11,R[13],E,E,124,[[["self"]],[T]]],[11,R[14],E,E,124,[[],[R[12]]]],[11,R[18],E,E,124,[[["self"]],[R[40]]]],[11,"from",E,E,125,[[[T]],[T]]],[11,"into",E,E,125,[[],[U]]],[11,R[11],E,E,125,[[[U]],[R[12]]]],[11,R[39],E,E,125,[[["self"]],[T]]],[11,R[13],E,E,125,[[["self"]],[T]]],[11,R[14],E,E,125,[[],[R[12]]]],[11,R[18],E,E,125,[[["self"]],[R[40]]]],[11,R[99],E,E,125,[[],["f"]]],[11,"from",E,E,126,[[[T]],[T]]],[11,"into",E,E,126,[[],[U]]],[11,R[11],E,E,126,[[[U]],[R[12]]]],[11,R[39],E,E,126,[[["self"]],[T]]],[11,R[13],E,E,126,[[["self"]],[T]]],[11,R[14],E,E,126,[[],[R[12]]]],[11,R[18],E,E,126,[[["self"]],[R[40]]]],[11,R[99],E,E,126,[[],["f"]]],[11,"from",E,E,127,[[[T]],[T]]],[11,"into",E,E,127,[[],[U]]],[11,R[11],E,E,127,[[[U]],[R[12]]]],[11,R[39],E,E,127,[[["self"]],[T]]],[11,R[13],E,E,127,[[["self"]],[T]]],[11,R[14],E,E,127,[[],[R[12]]]],[11,R[18],E,E,127,[[["self"]],[R[40]]]],[11,"from",E,E,128,[[[T]],[T]]],[11,"into",E,E,128,[[],[U]]],[11,R[11],E,E,128,[[[U]],[R[12]]]],[11,R[39],E,E,128,[[["self"]],[T]]],[11,R[13],E,E,128,[[["self"]],[T]]],[11,R[14],E,E,128,[[],[R[12]]]],[11,R[18],E,E,128,[[["self"]],[R[40]]]],[11,"from",E,E,129,[[[T]],[T]]],[11,"into",E,E,129,[[],[U]]],[11,R[11],E,E,129,[[[U]],[R[12]]]],[11,R[39],E,E,129,[[["self"]],[T]]],[11,R[13],E,E,129,[[["self"]],[T]]],[11,R[14],E,E,129,[[],[R[12]]]],[11,R[18],E,E,129,[[["self"]],[R[40]]]],[11,"from",E,E,130,[[[T]],[T]]],[11,"into",E,E,130,[[],[U]]],[11,R[11],E,E,130,[[[U]],[R[12]]]],[11,R[39],E,E,130,[[["self"]],[T]]],[11,R[13],E,E,130,[[["self"]],[T]]],[11,R[14],E,E,130,[[],[R[12]]]],[11,R[18],E,E,130,[[["self"]],[R[40]]]],[11,"from",E,E,131,[[[T]],[T]]],[11,"into",E,E,131,[[],[U]]],[11,R[11],E,E,131,[[[U]],[R[12]]]],[11,R[39],E,E,131,[[["self"]],[T]]],[11,R[13],E,E,131,[[["self"]],[T]]],[11,R[14],E,E,131,[[],[R[12]]]],[11,R[18],E,E,131,[[["self"]],[R[40]]]],[11,"from",E,E,132,[[[T]],[T]]],[11,"into",E,E,132,[[],[U]]],[11,R[11],E,E,132,[[[U]],[R[12]]]],[11,R[39],E,E,132,[[["self"]],[T]]],[11,R[13],E,E,132,[[["self"]],[T]]],[11,R[14],E,E,132,[[],[R[12]]]],[11,R[18],E,E,132,[[["self"]],[R[40]]]],[11,"from",E,E,133,[[[T]],[T]]],[11,"into",E,E,133,[[],[U]]],[11,R[11],E,E,133,[[[U]],[R[12]]]],[11,R[39],E,E,133,[[["self"]],[T]]],[11,R[13],E,E,133,[[["self"]],[T]]],[11,R[14],E,E,133,[[],[R[12]]]],[11,R[18],E,E,133,[[["self"]],[R[40]]]],[11,R[99],E,E,133,[[],["f"]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[11],E,E,20,[[[U]],[R[12]]]],[11,R[39],E,E,20,[[["self"]],[T]]],[11,R[13],E,E,20,[[["self"]],[T]]],[11,R[14],E,E,20,[[],[R[12]]]],[11,R[18],E,E,20,[[["self"]],[R[40]]]],[11,"from",E,E,134,[[[T]],[T]]],[11,"into",E,E,134,[[],[U]]],[11,R[11],E,E,134,[[[U]],[R[12]]]],[11,R[39],E,E,134,[[["self"]],[T]]],[11,R[13],E,E,134,[[["self"]],[T]]],[11,R[14],E,E,134,[[],[R[12]]]],[11,R[18],E,E,134,[[["self"]],[R[40]]]],[11,"from",E,E,135,[[[T]],[T]]],[11,"into",E,E,135,[[],[U]]],[11,R[11],E,E,135,[[[U]],[R[12]]]],[11,R[39],E,E,135,[[["self"]],[T]]],[11,R[13],E,E,135,[[["self"]],[T]]],[11,R[14],E,E,135,[[],[R[12]]]],[11,R[18],E,E,135,[[["self"]],[R[40]]]],[11,"from",E,E,136,[[[T]],[T]]],[11,"into",E,E,136,[[],[U]]],[11,R[11],E,E,136,[[[U]],[R[12]]]],[11,R[39],E,E,136,[[["self"]],[T]]],[11,R[13],E,E,136,[[["self"]],[T]]],[11,R[14],E,E,136,[[],[R[12]]]],[11,R[18],E,E,136,[[["self"]],[R[40]]]],[11,"from",E,E,137,[[[T]],[T]]],[11,"into",E,E,137,[[],[U]]],[11,R[11],E,E,137,[[[U]],[R[12]]]],[11,R[39],E,E,137,[[["self"]],[T]]],[11,R[13],E,E,137,[[["self"]],[T]]],[11,R[14],E,E,137,[[],[R[12]]]],[11,R[18],E,E,137,[[["self"]],[R[40]]]],[11,R[99],E,E,137,[[],["f"]]],[11,"from",E,E,138,[[[T]],[T]]],[11,"into",E,E,138,[[],[U]]],[11,R[11],E,E,138,[[[U]],[R[12]]]],[11,R[39],E,E,138,[[["self"]],[T]]],[11,R[13],E,E,138,[[["self"]],[T]]],[11,R[14],E,E,138,[[],[R[12]]]],[11,R[18],E,E,138,[[["self"]],[R[40]]]],[11,"from",E,E,139,[[[T]],[T]]],[11,"into",E,E,139,[[],[U]]],[11,R[11],E,E,139,[[[U]],[R[12]]]],[11,R[39],E,E,139,[[["self"]],[T]]],[11,R[13],E,E,139,[[["self"]],[T]]],[11,R[14],E,E,139,[[],[R[12]]]],[11,R[18],E,E,139,[[["self"]],[R[40]]]],[11,"from",E,E,140,[[[T]],[T]]],[11,R[48],E,E,140,[[],["i"]]],[11,"into",E,E,140,[[],[U]]],[11,R[11],E,E,140,[[[U]],[R[12]]]],[11,R[39],E,E,140,[[["self"]],[T]]],[11,R[13],E,E,140,[[["self"]],[T]]],[11,R[14],E,E,140,[[],[R[12]]]],[11,R[18],E,E,140,[[["self"]],[R[40]]]],[11,"from",E,E,141,[[[T]],[T]]],[11,"into",E,E,141,[[],[U]]],[11,R[11],E,E,141,[[[U]],[R[12]]]],[11,R[39],E,E,141,[[["self"]],[T]]],[11,R[13],E,E,141,[[["self"]],[T]]],[11,R[14],E,E,141,[[],[R[12]]]],[11,R[18],E,E,141,[[["self"]],[R[40]]]],[11,"from",E,E,142,[[[T]],[T]]],[11,"into",E,E,142,[[],[U]]],[11,R[11],E,E,142,[[[U]],[R[12]]]],[11,R[39],E,E,142,[[["self"]],[T]]],[11,R[13],E,E,142,[[["self"]],[T]]],[11,R[14],E,E,142,[[],[R[12]]]],[11,R[18],E,E,142,[[["self"]],[R[40]]]],[11,"from",E,E,143,[[[T]],[T]]],[11,"into",E,E,143,[[],[U]]],[11,R[11],E,E,143,[[[U]],[R[12]]]],[11,R[39],E,E,143,[[["self"]],[T]]],[11,R[13],E,E,143,[[["self"]],[T]]],[11,R[14],E,E,143,[[],[R[12]]]],[11,R[18],E,E,143,[[["self"]],[R[40]]]],[11,"from",E,E,144,[[[T]],[T]]],[11,"into",E,E,144,[[],[U]]],[11,R[11],E,E,144,[[[U]],[R[12]]]],[11,R[39],E,E,144,[[["self"]],[T]]],[11,R[13],E,E,144,[[["self"]],[T]]],[11,R[14],E,E,144,[[],[R[12]]]],[11,R[18],E,E,144,[[["self"]],[R[40]]]],[11,"from",E,E,145,[[[T]],[T]]],[11,"into",E,E,145,[[],[U]]],[11,R[11],E,E,145,[[[U]],[R[12]]]],[11,R[39],E,E,145,[[["self"]],[T]]],[11,R[13],E,E,145,[[["self"]],[T]]],[11,R[14],E,E,145,[[],[R[12]]]],[11,R[18],E,E,145,[[["self"]],[R[40]]]],[11,"from",E,E,146,[[[T]],[T]]],[11,"into",E,E,146,[[],[U]]],[11,R[11],E,E,146,[[[U]],[R[12]]]],[11,R[39],E,E,146,[[["self"]],[T]]],[11,R[13],E,E,146,[[["self"]],[T]]],[11,R[14],E,E,146,[[],[R[12]]]],[11,R[18],E,E,146,[[["self"]],[R[40]]]],[11,"from",E,E,147,[[[T]],[T]]],[11,"into",E,E,147,[[],[U]]],[11,R[170],E,E,147,[[["self"]],["string"]]],[11,R[11],E,E,147,[[[U]],[R[12]]]],[11,R[39],E,E,147,[[["self"]],[T]]],[11,R[13],E,E,147,[[["self"]],[T]]],[11,R[14],E,E,147,[[],[R[12]]]],[11,R[18],E,E,147,[[["self"]],[R[40]]]],[11,"from",E,E,148,[[[T]],[T]]],[11,"into",E,E,148,[[],[U]]],[11,R[11],E,E,148,[[[U]],[R[12]]]],[11,R[39],E,E,148,[[["self"]],[T]]],[11,R[13],E,E,148,[[["self"]],[T]]],[11,R[14],E,E,148,[[],[R[12]]]],[11,R[18],E,E,148,[[["self"]],[R[40]]]],[11,"from",E,E,149,[[[T]],[T]]],[11,"into",E,E,149,[[],[U]]],[11,R[11],E,E,149,[[[U]],[R[12]]]],[11,R[39],E,E,149,[[["self"]],[T]]],[11,R[13],E,E,149,[[["self"]],[T]]],[11,R[14],E,E,149,[[],[R[12]]]],[11,R[18],E,E,149,[[["self"]],[R[40]]]],[11,"from",E,E,150,[[[T]],[T]]],[11,"into",E,E,150,[[],[U]]],[11,R[11],E,E,150,[[[U]],[R[12]]]],[11,R[39],E,E,150,[[["self"]],[T]]],[11,R[13],E,E,150,[[["self"]],[T]]],[11,R[14],E,E,150,[[],[R[12]]]],[11,R[18],E,E,150,[[["self"]],[R[40]]]],[11,"from",E,E,151,[[[T]],[T]]],[11,"into",E,E,151,[[],[U]]],[11,R[11],E,E,151,[[[U]],[R[12]]]],[11,R[39],E,E,151,[[["self"]],[T]]],[11,R[13],E,E,151,[[["self"]],[T]]],[11,R[14],E,E,151,[[],[R[12]]]],[11,R[18],E,E,151,[[["self"]],[R[40]]]],[11,"from",E,E,152,[[[T]],[T]]],[11,"into",E,E,152,[[],[U]]],[11,R[11],E,E,152,[[[U]],[R[12]]]],[11,R[39],E,E,152,[[["self"]],[T]]],[11,R[13],E,E,152,[[["self"]],[T]]],[11,R[14],E,E,152,[[],[R[12]]]],[11,R[18],E,E,152,[[["self"]],[R[40]]]],[11,"from",E,E,153,[[[T]],[T]]],[11,"into",E,E,153,[[],[U]]],[11,R[11],E,E,153,[[[U]],[R[12]]]],[11,R[39],E,E,153,[[["self"]],[T]]],[11,R[13],E,E,153,[[["self"]],[T]]],[11,R[14],E,E,153,[[],[R[12]]]],[11,R[18],E,E,153,[[["self"]],[R[40]]]],[11,"from",E,E,154,[[[T]],[T]]],[11,"into",E,E,154,[[],[U]]],[11,R[11],E,E,154,[[[U]],[R[12]]]],[11,R[39],E,E,154,[[["self"]],[T]]],[11,R[13],E,E,154,[[["self"]],[T]]],[11,R[14],E,E,154,[[],[R[12]]]],[11,R[18],E,E,154,[[["self"]],[R[40]]]],[11,"from",E,E,155,[[[T]],[T]]],[11,"into",E,E,155,[[],[U]]],[11,R[11],E,E,155,[[[U]],[R[12]]]],[11,R[39],E,E,155,[[["self"]],[T]]],[11,R[13],E,E,155,[[["self"]],[T]]],[11,R[14],E,E,155,[[],[R[12]]]],[11,R[18],E,E,155,[[["self"]],[R[40]]]],[11,"from",E,E,156,[[[T]],[T]]],[11,"into",E,E,156,[[],[U]]],[11,R[11],E,E,156,[[[U]],[R[12]]]],[11,R[39],E,E,156,[[["self"]],[T]]],[11,R[13],E,E,156,[[["self"]],[T]]],[11,R[14],E,E,156,[[],[R[12]]]],[11,R[18],E,E,156,[[["self"]],[R[40]]]],[11,R[99],E,E,156,[[],["f"]]],[11,"from",E,E,157,[[[T]],[T]]],[11,"into",E,E,157,[[],[U]]],[11,R[11],E,E,157,[[[U]],[R[12]]]],[11,R[39],E,E,157,[[["self"]],[T]]],[11,R[13],E,E,157,[[["self"]],[T]]],[11,R[14],E,E,157,[[],[R[12]]]],[11,R[18],E,E,157,[[["self"]],[R[40]]]],[11,"from",E,E,158,[[[T]],[T]]],[11,"into",E,E,158,[[],[U]]],[11,R[11],E,E,158,[[[U]],[R[12]]]],[11,R[39],E,E,158,[[["self"]],[T]]],[11,R[13],E,E,158,[[["self"]],[T]]],[11,R[14],E,E,158,[[],[R[12]]]],[11,R[18],E,E,158,[[["self"]],[R[40]]]],[11,"from",E,E,159,[[[T]],[T]]],[11,"into",E,E,159,[[],[U]]],[11,R[11],E,E,159,[[[U]],[R[12]]]],[11,R[39],E,E,159,[[["self"]],[T]]],[11,R[13],E,E,159,[[["self"]],[T]]],[11,R[14],E,E,159,[[],[R[12]]]],[11,R[18],E,E,159,[[["self"]],[R[40]]]],[11,"from",E,E,160,[[[T]],[T]]],[11,"into",E,E,160,[[],[U]]],[11,R[11],E,E,160,[[[U]],[R[12]]]],[11,R[39],E,E,160,[[["self"]],[T]]],[11,R[13],E,E,160,[[["self"]],[T]]],[11,R[14],E,E,160,[[],[R[12]]]],[11,R[18],E,E,160,[[["self"]],[R[40]]]],[11,"from",E,E,161,[[[T]],[T]]],[11,"into",E,E,161,[[],[U]]],[11,R[11],E,E,161,[[[U]],[R[12]]]],[11,R[39],E,E,161,[[["self"]],[T]]],[11,R[13],E,E,161,[[["self"]],[T]]],[11,R[14],E,E,161,[[],[R[12]]]],[11,R[18],E,E,161,[[["self"]],[R[40]]]],[11,R[99],E,E,161,[[],["f"]]],[11,"from",E,E,162,[[[T]],[T]]],[11,"into",E,E,162,[[],[U]]],[11,R[11],E,E,162,[[[U]],[R[12]]]],[11,R[39],E,E,162,[[["self"]],[T]]],[11,R[13],E,E,162,[[["self"]],[T]]],[11,R[14],E,E,162,[[],[R[12]]]],[11,R[18],E,E,162,[[["self"]],[R[40]]]],[11,"from",E,E,163,[[[T]],[T]]],[11,"into",E,E,163,[[],[U]]],[11,R[11],E,E,163,[[[U]],[R[12]]]],[11,R[39],E,E,163,[[["self"]],[T]]],[11,R[13],E,E,163,[[["self"]],[T]]],[11,R[14],E,E,163,[[],[R[12]]]],[11,R[18],E,E,163,[[["self"]],[R[40]]]],[11,"from",E,E,164,[[[T]],[T]]],[11,"into",E,E,164,[[],[U]]],[11,R[11],E,E,164,[[[U]],[R[12]]]],[11,R[39],E,E,164,[[["self"]],[T]]],[11,R[13],E,E,164,[[["self"]],[T]]],[11,R[14],E,E,164,[[],[R[12]]]],[11,R[18],E,E,164,[[["self"]],[R[40]]]],[11,"from",E,E,165,[[[T]],[T]]],[11,"into",E,E,165,[[],[U]]],[11,R[11],E,E,165,[[[U]],[R[12]]]],[11,R[39],E,E,165,[[["self"]],[T]]],[11,R[13],E,E,165,[[["self"]],[T]]],[11,R[14],E,E,165,[[],[R[12]]]],[11,R[18],E,E,165,[[["self"]],[R[40]]]],[11,"from",E,E,166,[[[T]],[T]]],[11,"into",E,E,166,[[],[U]]],[11,R[11],E,E,166,[[[U]],[R[12]]]],[11,R[39],E,E,166,[[["self"]],[T]]],[11,R[13],E,E,166,[[["self"]],[T]]],[11,R[14],E,E,166,[[],[R[12]]]],[11,R[18],E,E,166,[[["self"]],[R[40]]]],[11,"from",E,E,167,[[[T]],[T]]],[11,"into",E,E,167,[[],[U]]],[11,R[11],E,E,167,[[[U]],[R[12]]]],[11,R[39],E,E,167,[[["self"]],[T]]],[11,R[13],E,E,167,[[["self"]],[T]]],[11,R[14],E,E,167,[[],[R[12]]]],[11,R[18],E,E,167,[[["self"]],[R[40]]]],[11,"from",R[4837],E,168,[[[T]],[T]]],[11,"into",E,E,168,[[],[U]]],[11,R[16],E,E,168,[[["self"]],[T]]],[11,R[17],E,E,168,[[[T],["self"]]]],[11,R[11],E,E,168,[[[U]],[R[12]]]],[11,R[39],E,E,168,[[["self"]],[T]]],[11,R[13],E,E,168,[[["self"]],[T]]],[11,R[14],E,E,168,[[],[R[12]]]],[11,R[18],E,E,168,[[["self"]],[R[40]]]],[11,"from",E,E,169,[[[T]],[T]]],[11,"into",E,E,169,[[],[U]]],[11,R[11],E,E,169,[[[U]],[R[12]]]],[11,R[39],E,E,169,[[["self"]],[T]]],[11,R[13],E,E,169,[[["self"]],[T]]],[11,R[14],E,E,169,[[],[R[12]]]],[11,R[18],E,E,169,[[["self"]],[R[40]]]],[11,"from",E,E,170,[[[T]],[T]]],[11,"into",E,E,170,[[],[U]]],[11,R[11],E,E,170,[[[U]],[R[12]]]],[11,R[39],E,E,170,[[["self"]],[T]]],[11,R[13],E,E,170,[[["self"]],[T]]],[11,R[14],E,E,170,[[],[R[12]]]],[11,R[18],E,E,170,[[["self"]],[R[40]]]],[11,"from",E,E,171,[[[T]],[T]]],[11,"into",E,E,171,[[],[U]]],[11,R[11],E,E,171,[[[U]],[R[12]]]],[11,R[39],E,E,171,[[["self"]],[T]]],[11,R[13],E,E,171,[[["self"]],[T]]],[11,R[14],E,E,171,[[],[R[12]]]],[11,R[18],E,E,171,[[["self"]],[R[40]]]],[11,"from",E,E,172,[[[T]],[T]]],[11,"into",E,E,172,[[],[U]]],[11,R[16],E,E,172,[[["self"]],[T]]],[11,R[17],E,E,172,[[[T],["self"]]]],[11,R[11],E,E,172,[[[U]],[R[12]]]],[11,R[39],E,E,172,[[["self"]],[T]]],[11,R[13],E,E,172,[[["self"]],[T]]],[11,R[14],E,E,172,[[],[R[12]]]],[11,R[18],E,E,172,[[["self"]],[R[40]]]],[11,"from",E,E,173,[[[T]],[T]]],[11,"into",E,E,173,[[],[U]]],[11,R[11],E,E,173,[[[U]],[R[12]]]],[11,R[39],E,E,173,[[["self"]],[T]]],[11,R[13],E,E,173,[[["self"]],[T]]],[11,R[14],E,E,173,[[],[R[12]]]],[11,R[18],E,E,173,[[["self"]],[R[40]]]],[11,"from",E,E,174,[[[T]],[T]]],[11,"into",E,E,174,[[],[U]]],[11,R[16],E,E,174,[[["self"]],[T]]],[11,R[17],E,E,174,[[[T],["self"]]]],[11,R[11],E,E,174,[[[U]],[R[12]]]],[11,R[39],E,E,174,[[["self"]],[T]]],[11,R[13],E,E,174,[[["self"]],[T]]],[11,R[14],E,E,174,[[],[R[12]]]],[11,R[18],E,E,174,[[["self"]],[R[40]]]],[11,"from",R[4742],E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[16],E,E,24,[[["self"]],[T]]],[11,R[17],E,E,24,[[[T],["self"]]]],[11,R[11],E,E,24,[[[U]],[R[12]]]],[11,R[39],E,E,24,[[["self"]],[T]]],[11,R[13],E,E,24,[[["self"]],[T]]],[11,R[14],E,E,24,[[],[R[12]]]],[11,R[18],E,E,24,[[["self"]],[R[40]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[16],E,E,25,[[["self"]],[T]]],[11,R[17],E,E,25,[[[T],["self"]]]],[11,R[11],E,E,25,[[[U]],[R[12]]]],[11,R[39],E,E,25,[[["self"]],[T]]],[11,R[13],E,E,25,[[["self"]],[T]]],[11,R[14],E,E,25,[[],[R[12]]]],[11,R[18],E,E,25,[[["self"]],[R[40]]]],[11,"from",R[4838],E,175,[[[T]],[T]]],[11,"into",E,E,175,[[],[U]]],[11,R[11],E,E,175,[[[U]],[R[12]]]],[11,R[39],E,E,175,[[["self"]],[T]]],[11,R[13],E,E,175,[[["self"]],[T]]],[11,R[14],E,E,175,[[],[R[12]]]],[11,R[18],E,E,175,[[["self"]],[R[40]]]],[11,"from",E,E,176,[[[T]],[T]]],[11,"into",E,E,176,[[],[U]]],[11,R[16],E,E,176,[[["self"]],[T]]],[11,R[17],E,E,176,[[[T],["self"]]]],[11,R[11],E,E,176,[[[U]],[R[12]]]],[11,R[39],E,E,176,[[["self"]],[T]]],[11,R[13],E,E,176,[[["self"]],[T]]],[11,R[14],E,E,176,[[],[R[12]]]],[11,R[18],E,E,176,[[["self"]],[R[40]]]],[11,"from",E,E,177,[[[T]],[T]]],[11,"into",E,E,177,[[],[U]]],[11,R[11],E,E,177,[[[U]],[R[12]]]],[11,R[39],E,E,177,[[["self"]],[T]]],[11,R[13],E,E,177,[[["self"]],[T]]],[11,R[14],E,E,177,[[],[R[12]]]],[11,R[18],E,E,177,[[["self"]],[R[40]]]],[11,"from",E,E,178,[[[T]],[T]]],[11,"into",E,E,178,[[],[U]]],[11,R[11],E,E,178,[[[U]],[R[12]]]],[11,R[39],E,E,178,[[["self"]],[T]]],[11,R[13],E,E,178,[[["self"]],[T]]],[11,R[14],E,E,178,[[],[R[12]]]],[11,R[18],E,E,178,[[["self"]],[R[40]]]],[11,"from",E,E,179,[[[T]],[T]]],[11,"into",E,E,179,[[],[U]]],[11,R[11],E,E,179,[[[U]],[R[12]]]],[11,R[39],E,E,179,[[["self"]],[T]]],[11,R[13],E,E,179,[[["self"]],[T]]],[11,R[14],E,E,179,[[],[R[12]]]],[11,R[18],E,E,179,[[["self"]],[R[40]]]],[11,"from",E,E,180,[[[T]],[T]]],[11,"into",E,E,180,[[],[U]]],[11,R[11],E,E,180,[[[U]],[R[12]]]],[11,R[39],E,E,180,[[["self"]],[T]]],[11,R[13],E,E,180,[[["self"]],[T]]],[11,R[14],E,E,180,[[],[R[12]]]],[11,R[18],E,E,180,[[["self"]],[R[40]]]],[11,"from",R[4839],E,181,[[[T]],[T]]],[11,"into",E,E,181,[[],[U]]],[11,R[170],E,E,181,[[["self"]],["string"]]],[11,R[11],E,E,181,[[[U]],[R[12]]]],[11,R[39],E,E,181,[[["self"]],[T]]],[11,R[13],E,E,181,[[["self"]],[T]]],[11,R[14],E,E,181,[[],[R[12]]]],[11,R[18],E,E,181,[[["self"]],[R[40]]]],[11,"from",E,E,182,[[[T]],[T]]],[11,"into",E,E,182,[[],[U]]],[11,R[170],E,E,182,[[["self"]],["string"]]],[11,R[11],E,E,182,[[[U]],[R[12]]]],[11,R[39],E,E,182,[[["self"]],[T]]],[11,R[13],E,E,182,[[["self"]],[T]]],[11,R[14],E,E,182,[[],[R[12]]]],[11,R[18],E,E,182,[[["self"]],[R[40]]]],[11,"from",E,E,183,[[[T]],[T]]],[11,"into",E,E,183,[[],[U]]],[11,R[170],E,E,183,[[["self"]],["string"]]],[11,R[11],E,E,183,[[[U]],[R[12]]]],[11,R[39],E,E,183,[[["self"]],[T]]],[11,R[13],E,E,183,[[["self"]],[T]]],[11,R[14],E,E,183,[[],[R[12]]]],[11,R[18],E,E,183,[[["self"]],[R[40]]]],[11,"from",E,E,184,[[[T]],[T]]],[11,"into",E,E,184,[[],[U]]],[11,R[170],E,E,184,[[["self"]],["string"]]],[11,R[11],E,E,184,[[[U]],[R[12]]]],[11,R[39],E,E,184,[[["self"]],[T]]],[11,R[13],E,E,184,[[["self"]],[T]]],[11,R[14],E,E,184,[[],[R[12]]]],[11,R[18],E,E,184,[[["self"]],[R[40]]]],[11,"from",E,E,185,[[[T]],[T]]],[11,"into",E,E,185,[[],[U]]],[11,R[170],E,E,185,[[["self"]],["string"]]],[11,R[11],E,E,185,[[[U]],[R[12]]]],[11,R[39],E,E,185,[[["self"]],[T]]],[11,R[13],E,E,185,[[["self"]],[T]]],[11,R[14],E,E,185,[[],[R[12]]]],[11,R[18],E,E,185,[[["self"]],[R[40]]]],[11,"from",E,E,186,[[[T]],[T]]],[11,"into",E,E,186,[[],[U]]],[11,R[170],E,E,186,[[["self"]],["string"]]],[11,R[11],E,E,186,[[[U]],[R[12]]]],[11,R[39],E,E,186,[[["self"]],[T]]],[11,R[13],E,E,186,[[["self"]],[T]]],[11,R[14],E,E,186,[[],[R[12]]]],[11,R[18],E,E,186,[[["self"]],[R[40]]]],[11,"from",R[4807],E,187,[[[T]],[T]]],[11,"into",E,E,187,[[],[U]]],[11,R[16],E,E,187,[[["self"]],[T]]],[11,R[17],E,E,187,[[[T],["self"]]]],[11,R[11],E,E,187,[[[U]],[R[12]]]],[11,R[39],E,E,187,[[["self"]],[T]]],[11,R[13],E,E,187,[[["self"]],[T]]],[11,R[14],E,E,187,[[],[R[12]]]],[11,R[18],E,E,187,[[["self"]],[R[40]]]],[11,"from",E,E,188,[[[T]],[T]]],[11,"into",E,E,188,[[],[U]]],[11,R[11],E,E,188,[[[U]],[R[12]]]],[11,R[39],E,E,188,[[["self"]],[T]]],[11,R[13],E,E,188,[[["self"]],[T]]],[11,R[14],E,E,188,[[],[R[12]]]],[11,R[18],E,E,188,[[["self"]],[R[40]]]],[11,"from",E,E,189,[[[T]],[T]]],[11,"into",E,E,189,[[],[U]]],[11,R[11],E,E,189,[[[U]],[R[12]]]],[11,R[39],E,E,189,[[["self"]],[T]]],[11,R[13],E,E,189,[[["self"]],[T]]],[11,R[14],E,E,189,[[],[R[12]]]],[11,R[18],E,E,189,[[["self"]],[R[40]]]],[11,"from",E,E,190,[[[T]],[T]]],[11,"into",E,E,190,[[],[U]]],[11,R[16],E,E,190,[[["self"]],[T]]],[11,R[17],E,E,190,[[[T],["self"]]]],[11,R[11],E,E,190,[[[U]],[R[12]]]],[11,R[39],E,E,190,[[["self"]],[T]]],[11,R[13],E,E,190,[[["self"]],[T]]],[11,R[14],E,E,190,[[],[R[12]]]],[11,R[18],E,E,190,[[["self"]],[R[40]]]],[11,"from",R[4809],E,191,[[[T]],[T]]],[11,"into",E,E,191,[[],[U]]],[11,R[11],E,E,191,[[[U]],[R[12]]]],[11,R[39],E,E,191,[[["self"]],[T]]],[11,R[13],E,E,191,[[["self"]],[T]]],[11,R[14],E,E,191,[[],[R[12]]]],[11,R[18],E,E,191,[[["self"]],[R[40]]]],[11,"from",E,E,192,[[[T]],[T]]],[11,"into",E,E,192,[[],[U]]],[11,R[11],E,E,192,[[[U]],[R[12]]]],[11,R[39],E,E,192,[[["self"]],[T]]],[11,R[13],E,E,192,[[["self"]],[T]]],[11,R[14],E,E,192,[[],[R[12]]]],[11,R[18],E,E,192,[[["self"]],[R[40]]]],[11,R[99],E,E,192,[[],["f"]]],[11,"from",R[4840],E,193,[[[T]],[T]]],[11,"into",E,E,193,[[],[U]]],[11,R[170],E,E,193,[[["self"]],["string"]]],[11,R[11],E,E,193,[[[U]],[R[12]]]],[11,R[39],E,E,193,[[["self"]],[T]]],[11,R[13],E,E,193,[[["self"]],[T]]],[11,R[14],E,E,193,[[],[R[12]]]],[11,R[18],E,E,193,[[["self"]],[R[40]]]],[11,"from",E,E,194,[[[T]],[T]]],[11,"into",E,E,194,[[],[U]]],[11,R[170],E,E,194,[[["self"]],["string"]]],[11,R[11],E,E,194,[[[U]],[R[12]]]],[11,R[39],E,E,194,[[["self"]],[T]]],[11,R[13],E,E,194,[[["self"]],[T]]],[11,R[14],E,E,194,[[],[R[12]]]],[11,R[18],E,E,194,[[["self"]],[R[40]]]],[11,"from",R[4810],E,195,[[[T]],[T]]],[11,"into",E,E,195,[[],[U]]],[11,R[16],E,E,195,[[["self"]],[T]]],[11,R[17],E,E,195,[[[T],["self"]]]],[11,R[11],E,E,195,[[[U]],[R[12]]]],[11,R[39],E,E,195,[[["self"]],[T]]],[11,R[13],E,E,195,[[["self"]],[T]]],[11,R[14],E,E,195,[[],[R[12]]]],[11,R[18],E,E,195,[[["self"]],[R[40]]]],[11,"from",E,E,196,[[[T]],[T]]],[11,"into",E,E,196,[[],[U]]],[11,R[11],E,E,196,[[[U]],[R[12]]]],[11,R[39],E,E,196,[[["self"]],[T]]],[11,R[13],E,E,196,[[["self"]],[T]]],[11,R[14],E,E,196,[[],[R[12]]]],[11,R[18],E,E,196,[[["self"]],[R[40]]]],[11,"from",E,E,197,[[[T]],[T]]],[11,"into",E,E,197,[[],[U]]],[11,R[11],E,E,197,[[[U]],[R[12]]]],[11,R[39],E,E,197,[[["self"]],[T]]],[11,R[13],E,E,197,[[["self"]],[T]]],[11,R[14],E,E,197,[[],[R[12]]]],[11,R[18],E,E,197,[[["self"]],[R[40]]]],[11,"from",R[4841],E,198,[[[T]],[T]]],[11,"into",E,E,198,[[],[U]]],[11,R[170],E,E,198,[[["self"]],["string"]]],[11,R[11],E,E,198,[[[U]],[R[12]]]],[11,R[39],E,E,198,[[["self"]],[T]]],[11,R[13],E,E,198,[[["self"]],[T]]],[11,R[14],E,E,198,[[],[R[12]]]],[11,R[18],E,E,198,[[["self"]],[R[40]]]],[11,"from",E,E,199,[[[T]],[T]]],[11,"into",E,E,199,[[],[U]]],[11,R[170],E,E,199,[[["self"]],["string"]]],[11,R[11],E,E,199,[[[U]],[R[12]]]],[11,R[39],E,E,199,[[["self"]],[T]]],[11,R[13],E,E,199,[[["self"]],[T]]],[11,R[14],E,E,199,[[],[R[12]]]],[11,R[18],E,E,199,[[["self"]],[R[40]]]],[11,"from",R[4811],E,200,[[[T]],[T]]],[11,"into",E,E,200,[[],[U]]],[11,R[11],E,E,200,[[[U]],[R[12]]]],[11,R[39],E,E,200,[[["self"]],[T]]],[11,R[13],E,E,200,[[["self"]],[T]]],[11,R[14],E,E,200,[[],[R[12]]]],[11,R[18],E,E,200,[[["self"]],[R[40]]]],[11,"from",R[4842],E,201,[[[T]],[T]]],[11,"into",E,E,201,[[],[U]]],[11,R[11],E,E,201,[[[U]],[R[12]]]],[11,R[39],E,E,201,[[["self"]],[T]]],[11,R[13],E,E,201,[[["self"]],[T]]],[11,R[14],E,E,201,[[],[R[12]]]],[11,R[18],E,E,201,[[["self"]],[R[40]]]],[11,"from",E,E,202,[[[T]],[T]]],[11,"into",E,E,202,[[],[U]]],[11,R[16],E,E,202,[[["self"]],[T]]],[11,R[17],E,E,202,[[[T],["self"]]]],[11,R[11],E,E,202,[[[U]],[R[12]]]],[11,R[39],E,E,202,[[["self"]],[T]]],[11,R[13],E,E,202,[[["self"]],[T]]],[11,R[14],E,E,202,[[],[R[12]]]],[11,R[18],E,E,202,[[["self"]],[R[40]]]],[11,"from",R[4811],E,203,[[[T]],[T]]],[11,"into",E,E,203,[[],[U]]],[11,R[11],E,E,203,[[[U]],[R[12]]]],[11,R[39],E,E,203,[[["self"]],[T]]],[11,R[13],E,E,203,[[["self"]],[T]]],[11,R[14],E,E,203,[[],[R[12]]]],[11,R[18],E,E,203,[[["self"]],[R[40]]]],[11,R[99],E,E,203,[[],["f"]]],[11,"from",R[4843],E,204,[[[T]],[T]]],[11,"into",E,E,204,[[],[U]]],[11,R[170],E,E,204,[[["self"]],["string"]]],[11,R[11],E,E,204,[[[U]],[R[12]]]],[11,R[39],E,E,204,[[["self"]],[T]]],[11,R[13],E,E,204,[[["self"]],[T]]],[11,R[14],E,E,204,[[],[R[12]]]],[11,R[18],E,E,204,[[["self"]],[R[40]]]],[11,"from",R[4811],E,205,[[[T]],[T]]],[11,"into",E,E,205,[[],[U]]],[11,R[11],E,E,205,[[[U]],[R[12]]]],[11,R[39],E,E,205,[[["self"]],[T]]],[11,R[13],E,E,205,[[["self"]],[T]]],[11,R[14],E,E,205,[[],[R[12]]]],[11,R[18],E,E,205,[[["self"]],[R[40]]]],[11,R[99],E,E,205,[[],["f"]]],[11,"from",E,E,206,[[[T]],[T]]],[11,"into",E,E,206,[[],[U]]],[11,R[170],E,E,206,[[["self"]],["string"]]],[11,R[11],E,E,206,[[[U]],[R[12]]]],[11,R[39],E,E,206,[[["self"]],[T]]],[11,R[13],E,E,206,[[["self"]],[T]]],[11,R[14],E,E,206,[[],[R[12]]]],[11,R[18],E,E,206,[[["self"]],[R[40]]]],[11,"from",E,E,207,[[[T]],[T]]],[11,"into",E,E,207,[[],[U]]],[11,R[11],E,E,207,[[[U]],[R[12]]]],[11,R[39],E,E,207,[[["self"]],[T]]],[11,R[13],E,E,207,[[["self"]],[T]]],[11,R[14],E,E,207,[[],[R[12]]]],[11,R[18],E,E,207,[[["self"]],[R[40]]]],[11,"from",R[4844],E,208,[[[T]],[T]]],[11,"into",E,E,208,[[],[U]]],[11,R[16],E,E,208,[[["self"]],[T]]],[11,R[17],E,E,208,[[[T],["self"]]]],[11,R[11],E,E,208,[[[U]],[R[12]]]],[11,R[39],E,E,208,[[["self"]],[T]]],[11,R[13],E,E,208,[[["self"]],[T]]],[11,R[14],E,E,208,[[],[R[12]]]],[11,R[18],E,E,208,[[["self"]],[R[40]]]],[11,"from",E,E,209,[[[T]],[T]]],[11,"into",E,E,209,[[],[U]]],[11,R[170],E,E,209,[[["self"]],["string"]]],[11,R[11],E,E,209,[[[U]],[R[12]]]],[11,R[39],E,E,209,[[["self"]],[T]]],[11,R[13],E,E,209,[[["self"]],[T]]],[11,R[14],E,E,209,[[],[R[12]]]],[11,R[18],E,E,209,[[["self"]],[R[40]]]],[11,"from",E,E,210,[[[T]],[T]]],[11,"into",E,E,210,[[],[U]]],[11,R[11],E,E,210,[[[U]],[R[12]]]],[11,R[39],E,E,210,[[["self"]],[T]]],[11,R[13],E,E,210,[[["self"]],[T]]],[11,R[14],E,E,210,[[],[R[12]]]],[11,R[18],E,E,210,[[["self"]],[R[40]]]],[11,R[99],E,E,210,[[],["f"]]],[11,"from",R[4845],E,211,[[[T]],[T]]],[11,"into",E,E,211,[[],[U]]],[11,R[16],E,E,211,[[["self"]],[T]]],[11,R[17],E,E,211,[[[T],["self"]]]],[11,R[11],E,E,211,[[[U]],[R[12]]]],[11,R[39],E,E,211,[[["self"]],[T]]],[11,R[13],E,E,211,[[["self"]],[T]]],[11,R[14],E,E,211,[[],[R[12]]]],[11,R[18],E,E,211,[[["self"]],[R[40]]]],[11,"from",R[4821],E,38,[[[T]],[T]]],[11,"into",E,E,38,[[],[U]]],[11,R[11],E,E,38,[[[U]],[R[12]]]],[11,R[39],E,E,38,[[["self"]],[T]]],[11,R[13],E,E,38,[[["self"]],[T]]],[11,R[14],E,E,38,[[],[R[12]]]],[11,R[18],E,E,38,[[["self"]],[R[40]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,"into",E,E,40,[[],[U]]],[11,R[11],E,E,40,[[[U]],[R[12]]]],[11,R[39],E,E,40,[[["self"]],[T]]],[11,R[13],E,E,40,[[["self"]],[T]]],[11,R[14],E,E,40,[[],[R[12]]]],[11,R[18],E,E,40,[[["self"]],[R[40]]]],[11,"from",E,E,212,[[[T]],[T]]],[11,"into",E,E,212,[[],[U]]],[11,R[11],E,E,212,[[[U]],[R[12]]]],[11,R[39],E,E,212,[[["self"]],[T]]],[11,R[13],E,E,212,[[["self"]],[T]]],[11,R[14],E,E,212,[[],[R[12]]]],[11,R[18],E,E,212,[[["self"]],[R[40]]]],[11,R[99],E,E,212,[[],["f"]]],[11,"from",E,E,39,[[[T]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,R[16],E,E,39,[[["self"]],[T]]],[11,R[17],E,E,39,[[[T],["self"]]]],[11,R[11],E,E,39,[[[U]],[R[12]]]],[11,R[39],E,E,39,[[["self"]],[T]]],[11,R[13],E,E,39,[[["self"]],[T]]],[11,R[14],E,E,39,[[],[R[12]]]],[11,R[18],E,E,39,[[["self"]],[R[40]]]],[11,"from",R[4845],E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[11],E,E,35,[[[U]],[R[12]]]],[11,R[39],E,E,35,[[["self"]],[T]]],[11,R[13],E,E,35,[[["self"]],[T]]],[11,R[14],E,E,35,[[],[R[12]]]],[11,R[18],E,E,35,[[["self"]],[R[40]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,"into",E,E,37,[[],[U]]],[11,R[11],E,E,37,[[[U]],[R[12]]]],[11,R[39],E,E,37,[[["self"]],[T]]],[11,R[13],E,E,37,[[["self"]],[T]]],[11,R[14],E,E,37,[[],[R[12]]]],[11,R[18],E,E,37,[[["self"]],[R[40]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,R[16],E,E,36,[[["self"]],[T]]],[11,R[17],E,E,36,[[[T],["self"]]]],[11,R[11],E,E,36,[[[U]],[R[12]]]],[11,R[39],E,E,36,[[["self"]],[T]]],[11,R[13],E,E,36,[[["self"]],[T]]],[11,R[14],E,E,36,[[],[R[12]]]],[11,R[18],E,E,36,[[["self"]],[R[40]]]],[11,"hash",R[4846],E,7,[[["self"],["__h"]]]],[11,R[30],E,E,70,[[["self"]],["str"]]],[11,"cause",E,E,70,[[["self"]],[[R[52],["error"]],["error"]]]],[11,"source",E,E,70,[[["self"]],[["error"],[R[52],["error"]]]]],[11,"fmt",E,E,70,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,R[264],E,E,7,[[[R[1]],["self"]],[[R[51]],[R[52],[R[51]]]]]],[11,"eq",E,E,7,[[[R[1]],["self"]],["bool"]]],[11,"fmt",E,E,70,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,7,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"clone",E,E,7,[[["self"]],[R[1]]]],[11,"from",E,"Converts an [`ErrorKind`] into an [`Error`].",70,[[[R[1]]],["error"]]],[11,"from",E,"Converts a [`NulError`] into a [`io::Error`].",70,[[["nulerror"]],["error"]]],[11,"from",E,E,70,[[["intoinnererror"]],["error"]]],[11,"cmp",E,E,7,[[[R[1]],["self"]],[R[51]]]],[11,R[30],R[4743],E,147,[[["self"]],["str"]]],[11,R[30],E,E,19,[[["self"]],["str"]]],[11,R[30],R[4835],E,100,[[["self"]],["str"]]],[11,"cause",E,E,100,[[["self"]],[[R[52],["error"]],["error"]]]],[11,"fmt",R[4743],E,133,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4835],E,114,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,92,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4743],E,151,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4835],E,94,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4743],E,139,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4835],E,89,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4743],E,140,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,156,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4835],E,16,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4743],E,137,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,126,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,147,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4835],E,117,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4743],E,162,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,150,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,167,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,129,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4836],E,119,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4835],E,102,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4743],E,160,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4835],E,109,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4743],E,127,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4835],E,116,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4742],E,25,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4835],E,93,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4743],E,19,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4835],E,17,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,103,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4743],E,132,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4835],E,104,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4743],E,134,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4835],E,87,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,88,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4837],E,171,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4836],E,118,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4743],E,135,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4835],E,97,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4743],E,146,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,154,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,153,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,165,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4835],E,113,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,111,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,101,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,112,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4743],E,149,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4837],E,168,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,170,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4743],E,143,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,144,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,157,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4835],E,100,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,105,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4743],E,152,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,142,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,148,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4835],E,96,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4743],E,145,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4835],E,99,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4743],E,123,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,121,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,161,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4835],E,107,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4743],E,128,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,125,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,20,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4835],E,91,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,108,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,95,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4743],E,124,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,155,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,164,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4835],E,115,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4837],E,174,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,172,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4835],E,98,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4743],E,159,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4835],E,106,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4837],E,169,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4835],E,15,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4742],E,24,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4743],E,138,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,136,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4835],E,90,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4837],E,173,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4743],E,166,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4835],E,110,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4743],E,122,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,131,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,141,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,120,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,130,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,158,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,163,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"drop",R[4835],E,109,[[["self"]]]],[11,"drop",R[4836],E,118,[[["self"]]]],[11,"clone",R[4835],E,15,[[["self"]],[R[98]]]],[11,"clone",E,E,100,[[["self"]],[R[189]]]],[11,"clone",R[4837],E,172,[[["self"]],[R[192]]]],[11,"clone",E,E,174,[[["self"]],["taskrc"]]],[11,"clone",R[4835],E,89,[[["self"]],[R[92]]]],[11,"clone",E,E,109,[[["self"]],["shared"]]],[11,"clone",E,E,101,[[["self"]],[R[188]]]],[11,"clone",R[4742],E,24,[[["self"]],["async"]]],[11,"clone",R[4837],E,168,[[["self"]],["task"]]],[11,"clone",R[4742],E,25,[[["self"]],[R[184]]]],[11,"next",R[4743],E,140,[[["self"]],[R[52]]]],[11,"next",R[4836],E,119,[[["self"]],[["f"],[R[52]]]]],[11,R[53],E,E,119,[[["self"]]]],[11,"poll",R[4835],E,104,[[["self"]],[[R[12],["async"]],["async"]]]],[11,"poll",E,E,108,[[["self"]],[[R[12],["async"]],["async"]]]],[11,"poll",R[4743],E,137,[[["self"]],[[R[12],["async"]],["async"]]]],[11,"poll",R[4835],E,98,[[["self"]],[[R[12],["async"]],["async"]]]],[11,"poll",E,E,93,[[["self"]],[[R[12],["async"]],["async"]]]],[11,"poll",E,E,106,[[["self"]],[[R[12],["async"]],["async"]]]],[11,"poll",R[4743],E,121,[[["self"]],[[R[12],["async"]],["async"]]]],[11,"poll",R[4835],E,94,[[["self"]],[["async"],[R[12],["async"]]]]],[11,"poll",E,E,90,[[["self"]],[[R[12],["async"]],["async"]]]],[11,"poll",E,E,89,[[["self"]],[[R[12],["async"]],["async"]]]],[11,"poll",R[4743],E,161,[[["self"]],[["async",["vec"]],[R[12],["async"]]]]],[11,"poll",R[4835],E,91,[[["self"]],[["async"],[R[12],["async"]]]]],[11,"poll",E,E,113,[[["self"]],[["async"],[R[12],["async"]]]]],[11,"poll",R[4743],E,126,[[["self"]],[["async"],[R[12],["async"]]]]],[11,"poll",E,E,156,[[["self"]],[[R[12],["async"]],["async"]]]],[11,"poll",E,E,133,[[["self"]],[["async"],[R[12],["async"]]]]],[11,"poll",R[4835],E,99,[[["self"]],[["async"],[R[12],["async"]]]]],[11,"poll",E,E,115,[[["self"]],[[R[12],["async"]],["async"]]]],[11,"poll",E,E,88,[[["self"]],[[R[12],["async"]],["async"]]]],[11,"poll",E,E,116,[[["self"]],[[R[12],["async"]],["async"]]]],[11,"poll",E,E,102,[[["self"]],[["async"],[R[12],["async"]]]]],[11,"poll",E,E,97,[[["self"]],[["async"],[R[12],["async"]]]]],[11,"poll",E,E,114,[[["self"]],[[R[12],["async"]],["async"]]]],[11,"poll",E,E,103,[[["self"]],[[R[12],["async"]],["async"]]]],[11,"poll",E,E,95,[[["self"]],[["async"],[R[12],["async"]]]]],[11,"poll",E,E,17,[[["self"]],[[R[12],["async"]],["async"]]]],[11,"poll",R[4743],E,122,[[["self"]],[[R[12],["async"]],["async"]]]],[11,"poll",R[4835],E,107,[[["self"]],[["async"],[R[12],["async"]]]]],[11,"poll",E,E,111,[[["self"]],[["async"],[R[12],["async"]]]]],[11,"poll",E,E,110,[[["self"]],[["async"],[R[12],["async"]]]]],[11,"poll",E,E,96,[[["self"]],[["async"],[R[12],["async"]]]]],[11,"poll",E,E,92,[[["self"]],[["async"],[R[12],["async"]]]]],[11,"poll",E,E,109,[[["self"]],[[R[12],["async"]],["async"]]]],[11,"poll",E,E,112,[[["self"]],[["async"],[R[12],["async"]]]]],[11,"poll",R[4743],E,125,[[["self"]],[["async"],[R[12],["async"]]]]],[11,R[181],E,E,163,[[["self"]],[[R[184]],[R[12],[R[184]]]]]],[11,R[183],E,E,163,[[["self"]],[["async"],[R[12],["async"]]]]],[11,"close",E,E,163,[[["self"]],[["async"],[R[12],["async"]]]]],[11,R[181],E,E,139,[[["self"]],[[R[184]],[R[12],[R[184]]]]]],[11,R[183],E,E,139,[[["self"]],[["async"],[R[12],["async"]]]]],[11,"close",E,E,139,[[["self"]],[["async"],[R[12],["async"]]]]],[11,R[181],E,E,148,[[["self"]],[[R[184]],[R[12],[R[184]]]]]],[11,R[183],E,E,148,[[["self"]],[["async"],[R[12],["async"]]]]],[11,"close",E,E,148,[[["self"]],[["async"],[R[12],["async"]]]]],[11,R[181],E,E,164,[[["self"]],[[R[184]],[R[12],[R[184]]]]]],[11,R[183],E,E,164,[[["self"]],[["async"],[R[12],["async"]]]]],[11,"close",E,E,164,[[["self"]],[["async"],[R[12],["async"]]]]],[11,R[181],E,E,132,[[["self"]],[[R[184]],[R[12],[R[184]]]]]],[11,R[183],E,E,132,[[["self"]],[["async"],[R[12],["async"]]]]],[11,"close",E,E,132,[[["self"]],[["async"],[R[12],["async"]]]]],[11,R[181],E,E,136,[[["self"]],[[R[184]],[R[12],[R[184]]]]]],[11,R[183],E,E,136,[[["self"]],[["async"],[R[12],["async"]]]]],[11,"close",E,E,136,[[["self"]],[["async"],[R[12],["async"]]]]],[11,R[181],E,E,149,[[["self"]],[[R[184]],[R[12],[R[184]]]]]],[11,R[183],E,E,149,[[["self"]],[["async"],[R[12],["async"]]]]],[11,"close",E,E,149,[[["self"]],[["async"],[R[12],["async"]]]]],[11,R[181],E,E,138,[[["self"]],[[R[184]],[R[12],[R[184]]]]]],[11,R[183],E,E,138,[[["self"]],[["async"],[R[12],["async"]]]]],[11,"close",E,E,138,[[["self"]],[["async"],[R[12],["async"]]]]],[11,R[181],E,E,166,[[["self"]],[[R[184]],[R[12],[R[184]]]]]],[11,R[183],E,E,166,[[["self"]],[["async"],[R[12],["async"]]]]],[11,"close",E,E,166,[[["self"]],[["async"],[R[12],["async"]]]]],[11,R[181],E,E,167,[[["self"]],[[R[184]],[R[12],[R[184]]]]]],[11,R[183],E,E,167,[[["self"]],[["async"],[R[12],["async"]]]]],[11,"close",E,E,167,[[["self"]],[["async"],[R[12],["async"]]]]],[11,R[181],E,E,131,[[["self"]],[[R[184]],[R[12],[R[184]]]]]],[11,R[183],E,E,131,[[["self"]],[["async"],[R[12],["async"]]]]],[11,"close",E,E,131,[[["self"]],[["async"],[R[12],["async"]]]]],[11,R[181],E,E,144,[[["self"]],[[R[184]],[R[12],[R[184]]]]]],[11,R[183],E,E,144,[[["self"]],[["async"],[R[12],["async"]]]]],[11,"close",E,E,144,[[["self"]],[["async"],[R[12],["async"]]]]],[11,R[181],E,E,130,[[["self"]],[[R[184]],[R[12],[R[184]]]]]],[11,R[183],E,E,130,[[["self"]],[["async"],[R[12],["async"]]]]],[11,"close",E,E,130,[[["self"]],[["async"],[R[12],["async"]]]]],[11,R[181],E,E,158,[[["self"]],[[R[184]],[R[12],[R[184]]]]]],[11,R[183],E,E,158,[[["self"]],[["async"],[R[12],["async"]]]]],[11,"close",E,E,158,[[["self"]],[["async"],[R[12],["async"]]]]],[11,R[181],E,E,128,[[["self"]],[[R[184]],[R[12],[R[184]]]]]],[11,R[183],E,E,128,[[["self"]],[["async"],[R[12],["async"]]]]],[11,"close",E,E,128,[[["self"]],[["async"],[R[12],["async"]]]]],[11,R[181],E,E,151,[[["self"]],[[R[184]],[R[12],[R[184]]]]]],[11,R[183],E,E,151,[[["self"]],[["async"],[R[12],["async"]]]]],[11,"close",E,E,151,[[["self"]],[["async"],[R[12],["async"]]]]],[11,R[181],E,E,134,[[["self"]],[[R[12],[R[184]]],[R[184]]]]],[11,R[183],E,E,134,[[["self"]],[[R[12],["async"]],["async"]]]],[11,"close",E,E,134,[[["self"]],[[R[12],["async"]],["async"]]]],[11,R[181],E,E,127,[[["self"]],[[R[184]],[R[12],[R[184]]]]]],[11,R[183],E,E,127,[[["self"]],[["async"],[R[12],["async"]]]]],[11,"close",E,E,127,[[["self"]],[["async"],[R[12],["async"]]]]],[11,R[181],E,E,157,[[["self"]],[[R[184]],[R[12],[R[184]]]]]],[11,R[183],E,E,157,[[["self"]],[["async"],[R[12],["async"]]]]],[11,"close",E,E,157,[[["self"]],[["async"],[R[12],["async"]]]]],[11,R[181],E,E,154,[[["self"]],[[R[184]],[R[12],[R[184]]]]]],[11,R[183],E,E,154,[[["self"]],[["async"],[R[12],["async"]]]]],[11,"close",E,E,154,[[["self"]],[["async"],[R[12],["async"]]]]],[11,R[181],E,E,165,[[["self"]],[[R[184]],[R[12],[R[184]]]]]],[11,R[183],E,E,165,[[["self"]],[["async"],[R[12],["async"]]]]],[11,"close",E,E,165,[[["self"]],[["async"],[R[12],["async"]]]]],[11,"poll",E,E,144,[[["self"]],[[R[12],["async"]],["async",[R[52]]]]]],[11,"poll",R[4836],E,118,[[["self"]],[["async",[R[52]]],[R[12],["async"]]]]],[11,"poll",R[4743],E,141,[[["self"]],[[R[12],["async"]],["async",[R[52]]]]]],[11,"poll",E,E,165,[[["self"]],[[R[12],["async"]],["async",[R[52]]]]]],[11,"poll",E,E,150,[[["self"]],[[R[12],["async"]],["async",[R[52]]]]]],[11,"poll",E,E,152,[[["self"]],[[R[12],["async"]],["async",[R[52]]]]]],[11,"poll",E,E,149,[[["self"]],[["async",[R[52]]],[R[12],["async"]]]]],[11,"poll",E,E,151,[[["self"]],[[R[12],["async"]],["async",[R[52]]]]]],[11,"poll",E,E,155,[[["self"]],[[R[12],["async"]],["async",[R[52]]]]]],[11,"poll",E,E,139,[[["self"]],[["async",[R[52]]],[R[12],["async"]]]]],[11,"poll",E,E,127,[[["self"]],[[R[12],["async"]],["async",[R[52]]]]]],[11,"poll",E,E,128,[[["self"]],[["async",[R[52]]],[R[12],["async"]]]]],[11,"poll",E,E,157,[[["self"]],[["async",[R[52]]],[R[12],["async"]]]]],[11,"poll",E,E,153,[[["self"]],[["async",[R[52]]],[R[12],["async"]]]]],[11,"poll",E,E,129,[[["self"]],[[R[12],["async"]],["async",[R[52]]]]]],[11,"poll",E,E,131,[[["self"]],[["async",[R[52]]],[R[12],["async"]]]]],[11,"poll",E,E,160,[[["self"]],[["async",[R[52]]],[R[12],["async"]]]]],[11,"poll",E,E,159,[[["self"]],[["async",[R[52]]],[R[12],["async"]]]]],[11,"poll",E,E,120,[[["self"]],[[R[12],["async"]],["async",[R[52]]]]]],[11,"poll",R[4835],E,117,[[["self"]],[[R[12],["async"]],["async",[R[52]]]]]],[11,"poll",R[4743],E,162,[[["self"]],[["async",[R[52]]],[R[12],["async"]]]]],[11,"poll",E,E,134,[[["self"]],[["async",[R[52]]],[R[12],["async"]]]]],[11,"poll",E,E,145,[[["self"]],[["async",[R[52]]],[R[12],["async"]]]]],[11,"poll",E,E,135,[[["self"]],[[R[12],["async"]],["async",[R[52]]]]]],[11,"poll",E,E,124,[[["self"]],[[R[12],["async"]],["async",[R[52]]]]]],[11,"poll",E,E,164,[[["self"]],[["async",[R[52]]],[R[12],["async"]]]]],[11,"poll",E,E,138,[[["self"]],[[R[12],["async"]],["async",[R[52]]]]]],[11,"poll",E,E,166,[[["self"]],[[R[12],["async"]],["async",[R[52]]]]]],[11,"poll",E,E,136,[[["self"]],[[R[12],["async"]],["async",[R[52]]]]]],[11,"poll",E,E,146,[[["self"]],[[R[12],["async"]],["async",[R[52]]]]]],[11,"poll",E,E,130,[[["self"]],[[R[12],["async"]],["async",[R[52]]]]]],[11,"poll",E,E,167,[[["self"]],[["async",[R[52]]],[R[12],["async"]]]]],[11,"poll",R[4835],E,105,[[["self"]],[["async",[R[52]]],[R[12],["async"]]]]],[11,"poll",R[4743],E,143,[[["self"]],[[R[12],["async"]],["async",[R[52]]]]]],[11,"poll",E,E,142,[[["self"]],[[R[12],["async"]],["async",[R[52]]]]]],[11,"poll",E,E,148,[[["self"]],[["async",[R[52]]],[R[12],["async"]]]]],[11,"poll",E,E,154,[[["self"]],[[R[12],["async"]],["async",[R[52]]]]]],[11,"poll",E,E,132,[[["self"]],[["async",[R[52]]],[R[12],["async"]]]]],[11,"poll",E,E,163,[[["self"]],[[R[12],["async"]],["async",[R[52]]]]]],[11,R[79],R[4837],E,173,[[],[R[535]]]],[11,R[79],R[4743],E,162,[[],[R[118]]]],[11,R[79],R[4836],E,118,[[],[R[116]]]],[11,"fmt",R[4743],E,147,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4835],E,100,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4743],E,19,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"from",R[4835],E,89,[[[R[12]]],[R[92]]]],[11,"from",R[4742],E,24,[[[T]],["async"]]],[11,R[187],R[4743],E,162,[[[T]],[R[118]]]],[11,R[187],R[4836],E,118,[[[T]],[R[116]]]],[11,"eq",R[4742],E,24,[[["self"],["async"]],["bool"]]],[11,"ne",E,E,24,[[["self"],["async"]],["bool"]]],[11,"eq",E,E,25,[[[R[184]],["self"]],["bool"]]],[11,"ne",E,E,25,[[[R[184]],["self"]],["bool"]]],[11,"eq",R[4835],E,15,[[[R[98]],["self"]],["bool"]]],[11,"deref",E,E,101,[[["self"]],[T]]],[11,"deref",E,E,100,[[["self"]],["e"]]],[11,"hash",R[4827],E,41,[[["self"],["__h"]]]],[11,"hash",E,E,45,[[["self"],["__h"]]]],[11,"cmp",E,E,45,[[[R[4478]],["self"]],[R[51]]]],[11,"cmp",E,E,41,[[["self"],[R[4477]]],[R[51]]]],[11,"clone",E,E,41,[[["self"]],[R[4477]]]],[11,"clone",E,E,45,[[["self"]],[R[4478]]]],[11,"encode",E,E,45,[[["self"],["string"],[R[2548]]],[[R[12],["error"]],["error"]]]],[11,"encode",E,E,41,[[["bytes"],["self"],[R[2548]]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,45,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,41,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"decode",E,E,45,[[["self"],[R[2548]]],[[R[52],["string"]],[R[12],[R[52],"error"]],["error"]]]],[11,R[5212],E,E,45,[[["self"],[R[2548]]],[[R[52],["string"]],[R[12],[R[52],"error"]],["error"]]]],[11,"decode",E,E,41,[[["self"],[R[2548]]],[["error"],[R[52],[R[2548]]],[R[12],[R[52],"error"]]]]],[11,R[264],E,E,41,[[["self"],[R[4477]]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,41,[[["self"],[R[4477]]],["bool"]]],[11,"le",E,E,41,[[["self"],[R[4477]]],["bool"]]],[11,"gt",E,E,41,[[["self"],[R[4477]]],["bool"]]],[11,"ge",E,E,41,[[["self"],[R[4477]]],["bool"]]],[11,R[264],E,E,45,[[[R[4478]],["self"]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,45,[[[R[4478]],["self"]],["bool"]]],[11,"le",E,E,45,[[[R[4478]],["self"]],["bool"]]],[11,"gt",E,E,45,[[[R[4478]],["self"]],["bool"]]],[11,"ge",E,E,45,[[[R[4478]],["self"]],["bool"]]],[11,"eq",E,E,45,[[[R[4478]],["self"]],["bool"]]],[11,"ne",E,E,45,[[[R[4478]],["self"]],["bool"]]],[11,"eq",E,E,41,[[["self"],[R[4477]]],["bool"]]],[11,"ne",E,E,41,[[["self"],[R[4477]]],["bool"]]],[11,R[2344],R[4846],E,69,[[["self"]],[[R[12],["async","error"]],["async"],["error"]]]],[11,R[4486],E,E,69,[[["b"],["self"]],[[R[12],["async","error"]],["async",[R[9]]],["error"]]]],[11,"write",E,E,69,[[["self"]],[[R[12],[R[9],"error"]],[R[9]],["error"]]]],[11,"flush",E,E,69,[[["self"]],[[R[12],["error"]],["error"]]]],[11,"poll",E,E,62,[[["self"]],[[R[12],["async","error"]],["async",[R[52]]],["error"]]]],[11,"poll",R[4827],E,43,[[["self"]],[["async",[R[52]]],[R[12],["async"]]]]],[11,"poll",E,E,42,[[["self"]],[["async",[R[52]]],[R[12],["async"]]]]],[11,"poll",E,E,44,[[["self"]],[[R[12],["async"]],["async",[R[52]]]]]],[11,R[4872],R[4846],E,64,[[["b"],["self"]],[[R[12],["async","error"]],["async",[R[9]]],["error"]]]],[11,"fmt",R[4827],E,42,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,2,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4846],E,66,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,63,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,69,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4827],E,44,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4846],E,60,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,68,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,61,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4827],E,43,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4846],E,67,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,62,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,65,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,64,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"poll",E,E,63,[[["self"]],[[R[12],["async","error"]],["async"],["error"]]]],[11,"poll",E,E,61,[[["self"]],[["async"],[R[12],["async","error"]],["error"]]]],[11,"poll",E,E,65,[[["self"]],[["async"],[R[12],["async","error"]],["error"]]]],[11,"poll",E,E,66,[[["self"]],[["async"],[R[12],["async","error"]],["error"]]]],[11,"poll",E,E,60,[[["self"]],[[R[12],["async","error"]],["async"],["error"]]]],[11,"poll",E,E,67,[[["self"]],[["async"],[R[12],["async","error"]],["error"]]]],[11,"poll",E,E,68,[[["self"]],[[R[12],["async","error"]],["async"],["error"]]]],[11,R[181],R[4827],E,43,[[["self"]],[[R[184]],[R[12],[R[184]]]]]],[11,R[183],E,E,43,[[["self"]],[[R[12],["async"]],["async"]]]],[11,"close",E,E,43,[[["self"]],[[R[12],["async"]],["async"]]]],[11,R[181],E,E,44,[[["self"]],[[R[184]],[R[12],[R[184]]]]]],[11,R[183],E,E,44,[[["self"]],[["async"],[R[12],["async"]]]]],[11,"close",E,E,44,[[["self"]],[["async"],[R[12],["async"]]]]],[11,R[181],E,E,42,[[["self"]],[[R[12],[R[184]]],[R[184]]]]],[11,R[183],E,E,42,[[["self"]],[["async"],[R[12],["async"]]]]],[11,"close",E,E,42,[[["self"]],[["async"],[R[12],["async"]]]]],[11,"read",R[4846],E,64,[[["self"]],[[R[12],[R[9],"error"]],[R[9]],["error"]]]],[11,"execute",R[4845],E,211,[[["self"],["f"]],[[R[12],[R[97]]],[R[97]]]]],[11,"clone",E,E,211,[[["self"]],[R[2318]]]],[11,"spawn",E,E,211,[[["self"],["f"]],[[R[1279]],[R[12],[R[1279]]]]]],[11,"fmt",E,E,211,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"spawn",E,E,211,[[["self"],["box",["future"]],["future"]],[[R[1279]],[R[12],[R[1279]]]]]],[11,"spawn",R[4844],E,208,[[["self"],["box",["future"]],["future"]],[[R[1279]],[R[12],[R[1279]]]]]],[11,"status",E,E,208,[[["self"]],[[R[1279]],[R[12],[R[1279]]]]]],[11,"clone",E,E,208,[[["self"]],[R[1283]]]],[11,"fmt",E,E,209,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,208,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"execute",E,E,208,[[["self"],[T]],[[R[12],[R[97]]],[R[97]]]]],[11,"fmt",E,E,209,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,R[30],E,E,209,[[["self"]],["str"]]],[11,"spawn",E,E,208,[[["self"],[T]],[[R[1279]],[R[12],[R[1279]]]]]],[11,"status",E,E,208,[[["self"]],[[R[1279]],[R[12],[R[1279]]]]]],[11,"write",R[4846],E,59,[[["self"]],[[R[12],[R[9],"error"]],[R[9]],["error"]]]],[11,"flush",E,E,59,[[["self"]],[[R[12],["error"]],["error"]]]],[11,"write",R[4830],E,48,[[["self"]],[[R[12],[R[9],"error"]],[R[9]],["error"]]]],[11,"flush",E,E,48,[[["self"]],[[R[12],["error"]],["error"]]]],[11,"write",R[4846],E,57,[[["self"]],[[R[12],[R[9],"error"]],[R[9]],["error"]]]],[11,"flush",E,E,57,[[["self"]],[[R[12],["error"]],["error"]]]],[11,R[3560],E,E,58,[[["self"]],["bool"]]],[11,R[3560],R[4830],E,48,[[["self"]],["bool"]]],[11,R[2344],R[4846],E,57,[[["self"]],[[R[12],["async","error"]],["async"],["error"]]]],[11,R[2344],E,E,59,[[["self"]],[[R[12],["async","error"]],["async"],["error"]]]],[11,R[2344],R[4830],E,48,[[["self"]],[[R[12],["async","error"]],["async"],["error"]]]],[11,"clone",R[4829],E,47,[[["self"]],[R[4509]]]],[11,"fmt",E,E,53,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4830],E,55,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4829],E,49,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4846],E,59,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4830],E,56,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4846],E,57,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4829],E,47,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4831],E,54,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4830],E,48,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4829],E,50,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4846],E,58,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4829],E,51,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,52,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"drop",R[4830],E,48,[[["self"]]]],[11,"from",R[4829],E,47,[[[R[4509]]],[R[4509]]]],[11,"poll",E,E,53,[[["self"]],[["async"],[R[12],["async"]]]]],[11,"poll",R[4830],E,56,[[["self"]],[["async"],[R[12],["async"]]]]],[11,"poll",R[4829],E,49,[[["self"]],[["async"],[R[12],["async"]]]]],[11,"poll",E,E,51,[[["self"]],[["async"],[R[12],["async"]]]]],[11,"poll",E,E,50,[[["self"]],[["async"],[R[12],["async"]]]]],[11,"poll",R[4831],E,54,[[["self"]],[[R[12],["async"]],["async"]]]],[11,"poll",R[4830],E,55,[[["self"]],[["async"],[R[12],["async"]]]]],[11,"poll",R[4829],E,52,[[["self"]],[["async"],[R[12],["async"]]]]],[11,"read",R[4846],E,58,[[["self"]],[[R[12],[R[9],"error"]],[R[9]],["error"]]]],[11,"read",R[4830],E,48,[[["self"]],[[R[12],[R[9],"error"]],[R[9]],["error"]]]],[11,"from",R[4846],E,70,[[["error"]],["error"]]],[11,"unpark",R[4838],E,178,[[["self"]]]],[11,"park",E,E,178,[[["self"]],[[R[12],["error"]],["error"]]]],[11,R[1282],E,E,178,[[[R[1358]],["self"]],[[R[12],["error"]],["error"]]]],[11,"write",E,E,177,[[["self"]],[[R[12],[R[9],"error"]],[R[9]],["error"]]]],[11,"flush",E,E,177,[[["self"]],[[R[12],["error"]],["error"]]]],[11,"unpark",E,E,176,[[["self"]]]],[11,"clone",E,E,176,[[["self"]],["handle"]]],[11,R[2452],E,E,178,[[["self"]],["i32"]]],[11,"fmt",E,E,180,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,179,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,178,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,177,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,175,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,176,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"drop",E,E,175,[[["self"]]]],[11,"drop",E,E,177,[[["self"]]]],[11,R[2344],E,E,177,[[["self"]],[[R[12],["async","error"]],["async"],["error"]]]],[11,R[79],E,R[5373],176,[[],["handle"]]],[11,"read",E,E,177,[[["self"]],[[R[12],[R[9],"error"]],[R[9]],["error"]]]],[11,R[181],R[4810],E,196,[[["self"],[T]],[[R[12],[R[184],R[139]]],[R[139]],[R[184]]]]],[11,R[183],E,E,196,[[["self"]],[[R[12],["async",R[139]]],[R[139]],["async"]]]],[11,R[181],R[4807],E,187,[[["self"],[T]],[[R[12],[R[184]]],[R[184]]]]],[11,R[183],E,E,187,[[["self"]],[["async"],[R[12],["async"]]]]],[11,"close",E,E,187,[[["self"]],[["async"],[R[12],["async"]]]]],[11,R[181],E,E,190,[[["self"],[T]],[[R[12],[R[184]]],[R[184]]]]],[11,R[183],E,E,190,[[["self"]],[[R[12],["async"]],["async"]]]],[11,"close",E,E,190,[[["self"]],[[R[12],["async"]],["async"]]]],[11,"clone",E,E,187,[[["self"]],["sender"]]],[11,"clone",E,E,190,[[["self"]],[R[5120]]]],[11,"clone",R[4810],E,195,[[["self"]],["receiver"]]],[11,"fmt",E,E,197,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4840],E,194,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4839],E,182,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4807],E,189,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4810],E,196,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4839],E,183,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4807],E,188,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4839],E,181,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4841],E,199,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4807],E,187,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4839],E,184,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4809],E,192,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4807],E,190,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4809],E,191,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4839],E,185,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4841],E,198,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4810],E,195,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4840],E,193,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4839],E,186,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"drop",R[4810],E,196,[[["self"]]]],[11,"drop",R[4809],E,192,[[["self"]]]],[11,"drop",E,E,191,[[["self"]]]],[11,"drop",R[4810],E,195,[[["self"]]]],[11,"poll",R[4807],E,189,[[["self"]],[["async",[R[52]]],[R[12],["async"]]]]],[11,"poll",E,E,188,[[["self"]],[[R[12],["async"]],["async",[R[52]]]]]],[11,"poll",R[4810],E,195,[[["self"]],[["async",[R[52]]],[R[12],["async",R[514]]],[R[514]]]]],[11,"from",R[4839],E,181,[[],[R[505]]]],[11,"from",E,E,183,[[],[R[138]]]],[11,"fmt",R[4841],E,199,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4839],E,185,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,184,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,186,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,183,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,181,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4841],E,198,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4839],E,182,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4840],E,194,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,193,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,R[30],E,E,193,[[["self"]],["str"]]],[11,R[30],R[4841],E,199,[[["self"]],["str"]]],[11,R[30],R[4839],E,182,[[["self"]],["str"]]],[11,R[30],E,E,181,[[["self"]],["str"]]],[11,R[30],R[4841],E,198,[[["self"]],["str"]]],[11,R[30],R[4839],E,183,[[["self"]],["str"]]],[11,R[30],E,E,184,[[["self"]],["str"]]],[11,R[30],E,E,186,[[["self"]],["str"]]],[11,R[30],E,E,185,[[["self"]],["str"]]],[11,R[30],R[4840],E,194,[[["self"]],["str"]]],[11,"deref",R[4810],E,197,[[["self"]],[T]]],[11,"poll",R[4809],E,192,[[["self"]],[[R[12],["async",R[514]]],[R[514]],["async"]]]],[11,R[2344],R[4832],E,72,[[["self"]],[[R[12],["async","error"]],["async"],["error"]]]],[11,R[4486],E,E,72,[[["b"],["self"]],[[R[12],["async","error"]],["async",[R[9]]],["error"]]]],[11,"write",E,E,72,[[["self"]],[[R[12],[R[9],"error"]],[R[9]],["error"]]]],[11,"flush",E,E,72,[[["self"]],[[R[12],["error"]],["error"]]]],[11,R[3560],E,E,72,[[["self"]],["bool"]]],[11,R[4872],E,E,72,[[["b"],["self"]],[[R[12],["async","error"]],["async",[R[9]]],["error"]]]],[11,R[2452],E,E,71,[[["self"]],["i32"]]],[11,R[2452],E,E,72,[[["self"]],["i32"]]],[11,"fmt",E,E,79,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,80,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,71,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,72,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"poll",E,E,79,[[["self"]],[["async",[R[1340]]],[R[12],["async","error"]],["error"]]]],[11,"read",E,E,72,[[["self"]],[[R[12],[R[9],"error"]],[R[9]],["error"]]]],[11,"poll",E,E,80,[[["self"]],[["async",[R[52]]],[R[12],["async","error"]],["error"]]]],[11,"clone",R[4842],E,202,[[["self"]],["key"]]],[11,"fmt",R[4811],E,203,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,207,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4842],E,201,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4811],E,206,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,200,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4843],E,204,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4842],E,202,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4811],E,205,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"poll",E,E,205,[[["self"]],[[R[12],["async"]],["async"]]]],[11,"poll",E,E,203,[[["self"]],[["async"],[R[12],["async"]]]]],[11,"fmt",R[4843],E,204,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[4811],E,206,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,R[30],E,E,206,[[["self"]],["str"]]],[11,R[30],R[4843],E,204,[[["self"]],["str"]]],[11,"poll",R[4811],E,207,[[["self"]],[[R[12],["async"]],["async",[R[52]]]]]],[11,"poll",E,E,200,[[["self"]],[["error"],[R[12],["async","error"]],["async",[R[52]]]]]],[11,"poll",E,E,203,[[["self"]],[[R[12],["async"]],["async",[R[52]]]]]],[11,R[2452],R[4833],E,74,[[["self"]],["i32"]]],[11,"fmt",E,E,73,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,82,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,81,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,74,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"poll",E,E,81,[[["self"]],[[R[12],["async","error"]],["async"],["error"]]]],[11,"poll",E,E,82,[[["self"]],[[R[12],["async","error"]],["async"],["error"]]]],[11,R[181],E,E,73,[[["self"]],[[R[12],[R[184]]],[R[184]]]]],[11,R[183],E,E,73,[[["self"]],[[R[12],["async"]],["async"]]]],[11,"close",E,E,73,[[["self"]],[[R[12],["async"]],["async"]]]],[11,"poll",E,E,73,[[["self"]],[["async",[R[52]]],[R[12],["async"]]]]],[11,"write",R[4834],E,78,[[["self"]],[[R[12],[R[9],"error"]],[R[9]],["error"]]]],[11,"flush",E,E,78,[[["self"]],[[R[12],["error"]],["error"]]]],[11,"hash",E,E,10,[[["self"],["__h"]]]],[11,R[2344],E,E,78,[[["self"]],[[R[12],["async","error"]],["async"],["error"]]]],[11,R[4486],E,E,78,[[["b"],["self"]],[[R[12],["async","error"]],["async",[R[9]]],["error"]]]],[11,R[3560],E,E,78,[[["self"]],["bool"]]],[11,R[4872],E,E,78,[[["b"],["self"]],[[R[12],["async","error"]],["async",[R[9]]],["error"]]]],[11,"clone",E,E,10,[[["self"]],["ucred"]]],[11,R[2452],E,E,75,[[["self"]],["i32"]]],[11,R[2452],E,E,78,[[["self"]],["i32"]]],[11,R[2452],E,E,77,[[["self"]],["i32"]]],[11,"fmt",E,E,76,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,85,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,83,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,77,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,75,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,84,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,78,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,86,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,10,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"poll",E,E,83,[[["self"]],[["async",[R[3577]]],[R[12],["async","error"]],["error"]]]],[11,"poll",E,E,86,[[["self"]],[[R[12],["async"]],["async"]]]],[11,"poll",E,E,85,[[["self"]],[[R[12],["async"]],["async"]]]],[11,R[181],E,E,76,[[["self"]],[[R[12],[R[184]]],[R[184]]]]],[11,R[183],E,E,76,[[["self"]],[[R[12],["async"]],["async"]]]],[11,"close",E,E,76,[[["self"]],[[R[12],["async"]],["async"]]]],[11,"eq",E,E,10,[[["ucred"],["self"]],["bool"]]],[11,"ne",E,E,10,[[["ucred"],["self"]],["bool"]]],[11,"read",E,E,78,[[["self"]],[[R[12],[R[9],"error"]],[R[9]],["error"]]]],[11,"poll",E,E,84,[[["self"]],[["async",[R[52]]],[R[12],["async","error"]],["error"]]]],[11,"poll",E,E,76,[[["self"]],[["async",[R[52]]],[R[12],["async"]]]]],[11,"clone",R[4828],E,4,[[["self"]],["builder"]]],[11,"clone",R[4845],E,36,[[["self"]],["handle"]]],[11,"clone",R[4821],E,39,[[["self"]],[R[2318]]]],[11,"drop",E,E,40,[[["self"]]]],[11,"fmt",R[4828],E,4,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,3,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,46,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[4844],E,210,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[4845],E,35,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,37,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,36,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[4821],E,38,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,212,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,39,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,40,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[4828],E,46,[[["self"],[R[29]]],[R[12]]]],[11,R[30],E,E,46,[[["self"]],["str"]]],[11,"poll",R[4821],E,212,[[["self"]],["poll"]]],[11,R[99],R[4844],E,210,[[]]],[11,"execute",R[4845],E,36,[[["self"],[T]],[[R[97]],[R[12],[R[97]]]]]],[11,"execute",R[4821],E,39,[[["self"],[T]],[[R[97]],[R[12],[R[97]]]]]],[11,"encode",R[4828],E,3,[[["self"],["bytes"],[R[2548]]],[[R[12],["error"]],["error"]]]],[11,"decode",E,E,3,[[["self"],[R[2548]]],[[R[12],[R[52]]],[R[52],[R[2548]]]]]],[11,"spawn",R[4821],E,39,[[["future"],["self"],["box",["future"]]],[[R[1279]],[R[12],[R[1279]]]]]],[11,"spawn",R[4845],E,36,[[["self"],[T]],[[R[1279]],[R[12],[R[1279]]]]]],[11,"spawn",R[4821],E,39,[[["self"],[T]],[[R[1279]],[R[12],[R[1279]]]]]],[11,"new",R[4827],R[5229],41,[[],[R[4477]]]],[11,"new",E,R[3564],42,[[[U],[T]],["framed"]]],[11,"from_parts",E,R[3564],42,[[[R[4479]]],["framed"]]],[11,R[110],E,R[4480],42,[[["self"]],[T]]],[11,R[111],E,R[4481],42,[[["self"]],[T]]],[11,"codec",E,R[5234],42,[[["self"]],[U]]],[11,"codec_mut",E,R[5235],42,[[["self"]],[U]]],[11,R[46],E,R[5236],42,[[],[T]]],[11,R[4907],E,R[5237],42,[[],[R[4479]]]],[11,"new",E,R[5238],2,[[[U],[T]],[R[4479]]]],[11,"new",E,R[5239],43,[[["d"],[T]],[R[5240]]]],[11,R[110],E,R[4480],43,[[["self"]],[T]]],[11,R[111],E,R[4481],43,[[["self"]],[T]]],[11,R[46],E,R[5241],43,[[],[T]]],[11,"decoder",E,R[4482],43,[[["self"]],["d"]]],[11,R[5242],E,R[4483],43,[[["self"]],["d"]]],[11,"new",E,R[5243],44,[[["e"],[T]],[R[4847]]]],[11,R[110],E,R[4480],44,[[["self"]],[T]]],[11,R[111],E,R[4481],44,[[["self"]],[T]]],[11,R[46],E,R[5244],44,[[],[T]]],[11,"encoder",E,R[4482],44,[[["self"]],["e"]]],[11,R[5245],E,R[4483],44,[[["self"]],["e"]]],[11,"new",E,R[5230],45,[[],[R[4478]]]],[11,R[5231],E,R[5232],45,[[[R[9]]],[R[4478]]]],[11,"max_length",E,R[5233],45,[[["self"]],[R[9]]]],[11,"new",R[4829],R[5300],47,[[],[R[4509]]]],[11,"read",E,R[5301],47,[[["self"],["bool"]],[R[4509]]]],[11,"write",E,R[5302],47,[[["self"],["bool"]],[R[4509]]]],[11,"append",E,R[5303],47,[[["self"],["bool"]],[R[4509]]]],[11,R[817],E,R[5304],47,[[["self"],["bool"]],[R[4509]]]],[11,"create",E,R[5305],47,[[["self"],["bool"]],[R[4509]]]],[11,"create_new",E,R[5306],47,[[["self"],["bool"]],[R[4509]]]],[11,"open",E,R[5307],47,[[["self"],["p"]],[R[5308]]]],[11,"open",R[4830],R[5309],48,[[["p"]],[R[5308]]]],[11,"create",E,R[5310],48,[[["p"]],[R[5311]]]],[11,R[4511],E,R[5312],48,[[["file"]],["file"]]],[11,"poll_seek",E,R[4512],48,[[["self"],["seekfrom"]],[[R[12],["async","error"]],["async",["u64"]],["error"]]]],[11,"seek",E,R[4512],48,[[["seekfrom"]],["seekfuture"]]],[11,R[5313],E,R[5314],48,[[["self"]],[[R[12],["async","error"]],["async"],["error"]]]],[11,R[5315],E,R[5316],48,[[["self"]],[[R[12],["async","error"]],["async"],["error"]]]],[11,R[5317],E,R[5318],48,[[["self"],["u64"]],[[R[12],["async","error"]],["async"],["error"]]]],[11,R[398],E,R[4514],48,[[],[R[4513]]]],[11,R[4517],E,R[4514],48,[[["self"]],[[R[12],["async","error"]],["async",[R[398]]],["error"]]]],[11,R[5319],E,R[4515],48,[[["self"]],[[R[12],["async","error"]],["async",["file"]],["error"]]]],[11,R[3570],E,R[4515],48,[[],[R[5320]]]],[11,R[5321],E,R[5322],48,[[["self"],[R[4516]]],[[R[12],["async","error"]],["async"],["error"]]]],[11,"into_std",E,R[5323],48,[[],["file"]]],[11,R[46],R[4846],R[4868],62,[[],["a"]]],[11,"unsplit",E,R[4869],64,[[["writehalf"]],[T]]],[11,"unsplit",E,R[4870],69,[[["readhalf"]],[T]]],[11,"new",E,"Creates a new I/O error from a known kind of error as well…",70,[[[R[1]],["e"]],["error"]]],[11,"last_os_error",E,"Returns an error representing the last OS error which…",70,[[],["error"]]],[11,"from_raw_os_error",E,"Creates a new instance of an `Error` from a particular OS…",70,[[["i32"]],["error"]]],[11,"raw_os_error",E,"Returns the OS error that this error represents (if any).",70,[[["self"]],[["i32"],[R[52],["i32"]]]]],[11,R[110],E,"Returns a reference to the inner error wrapped by this…",70,[[["self"]],[[R[52],["error"]],["error"]]]],[11,R[111],E,"Returns a mutable reference to the inner error wrapped by…",70,[[["self"]],[["error"],[R[52],["error"]]]]],[11,R[46],E,"Consumes the `Error`, returning its inner error (if any).",70,[[],[[R[52],["box"]],["box",["error"]]]]],[11,"kind",E,"Returns the corresponding `ErrorKind` for this error.",70,[[["self"]],[R[1]]]],[11,"bind",R[4832],R[4883],71,[[[R[1897]]],[[R[1339]],[R[12],[R[1339],"error"]],["error"]]]],[11,R[4679],E,R[4664],71,[[["self"]],[["async"],[R[12],["async","error"]],["error"]]]],[11,R[4680],E,R[4664],71,[[["self"]],[[R[12],["async","error"]],["async"],["error"]]]],[11,R[4511],E,R[4884],71,[[[R[1339]],["handle"]],[[R[1339]],[R[12],[R[1339],"error"]],["error"]]]],[11,R[2731],E,R[4885],71,[[["self"]],[[R[1897]],[R[12],[R[1897],"error"]],["error"]]]],[11,R[4930],E,R[4681],71,[[],[R[4930]]]],[11,"ttl",E,R[1361],71,[[["self"]],[["u32"],[R[12],["u32","error"]],["error"]]]],[11,"set_ttl",E,R[1343],71,[[["u32"],["self"]],[[R[12],["error"]],["error"]]]],[11,"connect",E,R[4886],72,[[[R[1897]]],[R[4666]]]],[11,R[4511],E,R[4887],72,[[[R[1340]],["handle"]],[[R[12],[R[1340],"error"]],[R[1340]],["error"]]]],[11,R[4888],E,R[4665],72,[[[R[1897]],[R[1340]],["handle"]],[R[4666]]]],[11,R[4535],E,R[4889],72,[[["ready"],["self"]],[[R[12],["async","error"]],["async",["ready"]],["error"]]]],[11,R[4536],E,R[4890],72,[[["self"]],[[R[12],["async","error"]],["async",["ready"]],["error"]]]],[11,R[2731],E,R[4891],72,[[["self"]],[[R[1897]],[R[12],[R[1897],"error"]],["error"]]]],[11,R[4667],E,R[4892],72,[[["self"]],[[R[1897]],[R[12],[R[1897],"error"]],["error"]]]],[11,"poll_peek",E,R[2770],72,[[["self"]],[[R[12],["async","error"]],["async",[R[9]]],["error"]]]],[11,R[2344],E,R[3578],72,[[[R[2344]],["self"]],[[R[12],["error"]],["error"]]]],[11,"nodelay",E,R[2744],72,[[["self"]],[[R[12],["bool","error"]],["bool"],["error"]]]],[11,R[2742],E,R[2743],72,[[["self"],["bool"]],[[R[12],["error"]],["error"]]]],[11,R[1369],E,R[1370],72,[[["self"]],[[R[12],[R[9],"error"]],[R[9]],["error"]]]],[11,R[1367],E,R[1368],72,[[["self"],[R[9]]],[[R[12],["error"]],["error"]]]],[11,R[1373],E,R[1374],72,[[["self"]],[[R[12],[R[9],"error"]],[R[9]],["error"]]]],[11,R[1371],E,R[1372],72,[[["self"],[R[9]]],[[R[12],["error"]],["error"]]]],[11,R[4668],E,R[1354],72,[[["self"]],[[R[52],[R[1358]]],[R[12],[R[52],"error"]],["error"]]]],[11,R[2745],E,R[1353],72,[[[R[1358]],[R[52],[R[1358]]],["self"]],[[R[12],["error"]],["error"]]]],[11,"ttl",E,R[1361],72,[[["self"]],[["u32"],[R[12],["u32","error"]],["error"]]]],[11,"set_ttl",E,R[1343],72,[[["u32"],["self"]],[[R[12],["error"]],["error"]]]],[11,"linger",E,R[4893],72,[[["self"]],[[R[52],[R[1358]]],[R[12],[R[52],"error"]],["error"]]]],[11,R[2746],E,R[1365],72,[[[R[1358]],[R[52],[R[1358]]],["self"]],[[R[12],["error"]],["error"]]]],[11,"new",R[4833],R[4897],73,[[["c"],[R[2730]]],["udpframed"]]],[11,R[110],E,R[4480],73,[[["self"]],[R[2730]]]],[11,R[111],E,R[4481],73,[[["self"]],[R[2730]]]],[11,R[46],E,R[4898],73,[[],[R[2730]]]],[11,"bind",E,R[4899],74,[[[R[1897]]],[[R[12],[R[2730],"error"]],[R[2730]],["error"]]]],[11,R[4511],E,R[4900],74,[[[R[2730]],["handle"]],[[R[12],[R[2730],"error"]],[R[2730]],["error"]]]],[11,R[2731],E,R[4695],74,[[["self"]],[[R[1897]],[R[12],[R[1897],"error"]],["error"]]]],[11,"connect",E,R[4689],74,[[[R[1897]],["self"]],[[R[12],["error"]],["error"]]]],[11,R[4923],E,R[4690],74,[[["self"]],[[R[12],["async","error"]],["async",[R[9]]],["error"]]]],[11,R[4920],E,R[4901],74,[[["self"]],[[R[12],["async","error"]],["async",[R[9]]],["error"]]]],[11,R[4697],E,R[4691],74,[[["self"],[R[1897]]],[[R[12],["async","error"]],["async",[R[9]]],["error"]]]],[11,R[4902],E,R[4692],74,[[[R[1897]],[T]],[R[4925]]]],[11,R[4696],E,R[4693],74,[[["self"]],[["async"],[R[12],["async","error"]],["error"]]]],[11,R[4903],E,R[4904],74,[[[T]],[R[4922]]]],[11,R[4535],E,R[4905],74,[[["ready"],["self"]],[[R[12],["async","error"]],["async",["ready"]],["error"]]]],[11,R[4536],E,R[4906],74,[[["self"]],[[R[12],["async","error"]],["async",["ready"]],["error"]]]],[11,R[2030],E,R[2749],74,[[["self"]],[[R[12],["bool","error"]],["bool"],["error"]]]],[11,R[2747],E,R[2748],74,[[["self"],["bool"]],[[R[12],["error"]],["error"]]]],[11,R[2752],E,R[2753],74,[[["self"]],[[R[12],["bool","error"]],["bool"],["error"]]]],[11,R[2750],E,R[2751],74,[[["self"],["bool"]],[[R[12],["error"]],["error"]]]],[11,R[2756],E,R[2757],74,[[["self"]],[["u32"],[R[12],["u32","error"]],["error"]]]],[11,R[2754],E,R[2755],74,[[["u32"],["self"]],[[R[12],["error"]],["error"]]]],[11,R[2760],E,R[2761],74,[[["self"]],[[R[12],["bool","error"]],["bool"],["error"]]]],[11,R[2758],E,R[2759],74,[[["self"],["bool"]],[[R[12],["error"]],["error"]]]],[11,"ttl",E,R[1361],74,[[["self"]],[["u32"],[R[12],["u32","error"]],["error"]]]],[11,"set_ttl",E,R[1343],74,[[["u32"],["self"]],[[R[12],["error"]],["error"]]]],[11,R[2762],E,R[2763],74,[[[R[1898]],["self"]],[[R[12],["error"]],["error"]]]],[11,R[2764],E,R[2765],74,[[["u32"],[R[1904]],["self"]],[[R[12],["error"]],["error"]]]],[11,R[2766],E,R[2767],74,[[[R[1898]],["self"]],[[R[12],["error"]],["error"]]]],[11,R[2768],E,R[2769],74,[[["u32"],[R[1904]],["self"]],[[R[12],["error"]],["error"]]]],[11,"bind",R[4834],R[4917],75,[[["p"]],[[R[3569]],[R[12],[R[3569],"error"]],["error"]]]],[11,"pair",E,R[4672],75,[[],[[R[12],["error"]],["error"]]]],[11,R[4511],E,R[4918],75,[[[R[3569]],["handle"]],[[R[3569]],[R[12],[R[3569],"error"]],["error"]]]],[11,"unbound",E,R[4919],75,[[],[[R[3569]],[R[12],[R[3569],"error"]],["error"]]]],[11,"connect",E,R[4673],75,[[["self"],["p"]],[[R[12],["error"]],["error"]]]],[11,R[4535],E,R[4678],75,[[["ready"],["self"]],[[R[12],["async","error"]],["async",["ready"]],["error"]]]],[11,R[4536],E,R[4683],75,[[["self"]],[[R[12],["async","error"]],["async",["ready"]],["error"]]]],[11,R[2731],E,R[4695],75,[[["self"]],[[R[1897]],[R[12],[R[1897],"error"]],["error"]]]],[11,R[4667],E,R[4674],75,[[["self"]],[[R[1897]],[R[12],[R[1897],"error"]],["error"]]]],[11,R[4696],E,R[3571],75,[[["self"]],[[R[12],["async","error"]],["async"],["error"]]]],[11,R[4920],E,R[3571],75,[[["self"]],[[R[12],["async","error"]],["async",[R[9]]],["error"]]]],[11,R[4903],E,R[4921],75,[[[T]],[R[4922]]]],[11,R[4697],E,R[4675],75,[[["self"],["p"]],[[R[12],["async","error"]],["async",[R[9]]],["error"]]]],[11,R[4923],E,R[4676],75,[[["self"]],[[R[12],["async","error"]],["async",[R[9]]],["error"]]]],[11,R[4902],E,R[4924],75,[[["p"],[T]],[R[4925]]]],[11,R[1360],E,R[3575],75,[[["self"]],[[R[12],[R[52],"error"]],[R[52],["error"]],["error"]]]],[11,R[2344],E,R[4677],75,[[[R[2344]],["self"]],[[R[12],["error"]],["error"]]]],[11,"new",E,R[4926],76,[[[R[3569]],["c"]],[R[4927]]]],[11,R[110],E,R[4480],76,[[["self"]],[R[3569]]]],[11,R[111],E,R[4481],76,[[["self"]],[R[3569]]]],[11,"bind",E,R[4928],77,[[["p"]],[[R[3572]],[R[12],[R[3572],"error"]],["error"]]]],[11,R[4511],E,R[4929],77,[[["handle"],[R[3572]]],[[R[3572]],[R[12],[R[3572],"error"]],["error"]]]],[11,R[2731],E,R[3574],77,[[["self"]],[[R[1897]],[R[12],[R[1897],"error"]],["error"]]]],[11,R[4535],E,R[4678],77,[[["ready"],["self"]],[[R[12],["async","error"]],["async",["ready"]],["error"]]]],[11,R[1360],E,R[3575],77,[[["self"]],[[R[12],[R[52],"error"]],[R[52],["error"]],["error"]]]],[11,R[4679],E,R[4664],77,[[["self"]],[[R[12],["async","error"]],["async"],["error"]]]],[11,R[4680],E,R[4664],77,[[["self"]],[["async"],[R[12],["async","error"]],["error"]]]],[11,R[4930],E,R[4681],77,[[],[R[4930]]]],[11,"connect",E,R[4682],78,[[["p"]],[R[4666]]]],[11,R[4511],E,R[4931],78,[[[R[3577]],["handle"]],[[R[12],[R[3577],"error"]],[R[3577]],["error"]]]],[11,"pair",E,R[4672],78,[[],[[R[12],["error"]],["error"]]]],[11,R[4535],E,R[4678],78,[[["ready"],["self"]],[[R[12],["async","error"]],["async",["ready"]],["error"]]]],[11,R[4536],E,R[4683],78,[[["self"]],[[R[12],["async","error"]],["async",["ready"]],["error"]]]],[11,R[2731],E,R[4684],78,[[["self"]],[[R[1897]],[R[12],[R[1897],"error"]],["error"]]]],[11,R[4667],E,R[4685],78,[[["self"]],[[R[1897]],[R[12],[R[1897],"error"]],["error"]]]],[11,"peer_cred",E,R[4932],78,[[["self"]],[[R[12],["ucred","error"]],["ucred"],["error"]]]],[11,R[1360],E,R[3575],78,[[["self"]],[[R[12],[R[52],"error"]],[R[52],["error"]],["error"]]]],[11,R[2344],E,R[3578],78,[[[R[2344]],["self"]],[[R[12],["error"]],["error"]]]],[11,R[4907],R[4833],R[4908],81,[[],["parts"]]],[11,"new",R[4835],R[5016],87,[[[R[98]],["f"]],[R[97]]]],[11,"kind",E,R[5017],87,[[["self"]],[R[98]]]],[11,R[99],E,R[5018],87,[[],["f"]]],[11,"peek",E,R[5007],109,[[["self"]],[[R[52],[R[12]]],[R[12],[R[188],R[189]]]]]],[11,"is_done",E,R[5005],115,[[["self"]],["bool"]]],[11,"split",E,R[5006],17,[[]]],[11,"new",R[4836],R[5074],118,[[],[R[116]]]],[11,"len",E,R[5075],118,[[["self"]],[R[9]]]],[11,R[69],E,R[5076],118,[[["self"]],["bool"]]],[11,"push",E,R[5077],118,[[["self"],[T]]]],[11,R[261],E,R[5078],118,[[["self"]],["itermut"]]],[11,"sink_ref",R[4743],R[5068],122,[[["self"]],[[U],[R[52]]]]],[11,"sink_mut",E,R[5069],122,[[["self"]],[[R[52]],[U]]]],[11,"stream_ref",E,R[5070],122,[[["self"]],[[R[52]],[T]]]],[11,"stream_mut",E,R[5071],122,[[["self"]],[[T],[R[52]]]]],[11,"send",E,"Sends a new value along this channel to the receiver.",123,[[[R[12]]],["futuresender"]]],[11,R[110],E,R[107],127,[[["self"]],["s"]]],[11,R[111],E,R[108],127,[[["self"]],["s"]]],[11,R[46],E,R[109],127,[[],["s"]]],[11,R[110],E,R[107],130,[[["self"]],["s"]]],[11,R[111],E,R[108],130,[[["self"]],["s"]]],[11,R[46],E,R[109],130,[[],["s"]]],[11,R[110],E,R[107],131,[[["self"]],["s"]]],[11,R[111],E,R[108],131,[[["self"]],["s"]]],[11,R[46],E,R[109],131,[[],["s"]]],[11,R[110],E,R[107],132,[[["self"]],["s"]]],[11,R[111],E,R[108],132,[[["self"]],["s"]]],[11,R[46],E,R[109],132,[[],["s"]]],[11,R[110],E,R[107],134,[[["self"]],["s"]]],[11,R[111],E,R[108],134,[[["self"]],["s"]]],[11,R[46],E,R[109],134,[[],["s"]]],[11,R[110],E,R[107],136,[[["self"]],["s"]]],[11,R[111],E,R[108],136,[[["self"]],["s"]]],[11,R[46],E,R[109],136,[[],["s"]]],[11,R[110],E,R[107],138,[[["self"]],["s"]]],[11,R[111],E,R[108],138,[[["self"]],["s"]]],[11,R[46],E,R[109],138,[[],["s"]]],[11,R[110],E,R[107],139,[[["self"]],["s"]]],[11,R[111],E,R[108],139,[[["self"]],["s"]]],[11,R[46],E,R[109],139,[[],["s"]]],[11,R[110],E,R[107],140,[[["self"]],["s"]]],[11,R[111],E,R[108],140,[[["self"]],["s"]]],[11,R[46],E,R[109],140,[[],["s"]]],[11,R[110],E,R[107],144,[[["self"]],["s"]]],[11,R[111],E,R[108],144,[[["self"]],["s"]]],[11,R[46],E,R[109],144,[[],["s"]]],[11,R[110],E,R[107],148,[[["self"]],["s"]]],[11,R[111],E,R[108],148,[[["self"]],["s"]]],[11,R[46],E,R[109],148,[[],["s"]]],[11,R[110],E,R[107],149,[[["self"]],["s"]]],[11,R[111],E,R[108],149,[[["self"]],["s"]]],[11,R[46],E,R[109],149,[[],["s"]]],[11,R[110],E,R[107],151,[[["self"]],["s"]]],[11,R[111],E,R[108],151,[[["self"]],["s"]]],[11,R[46],E,R[109],151,[[],["s"]]],[11,"reunite",E,R[113],152,[[["splitsink"]],[[R[112]],[R[12],[R[112]]]]]],[11,R[110],E,R[107],154,[[["self"]],["s"]]],[11,R[111],E,R[108],154,[[["self"]],["s"]]],[11,R[46],E,R[109],154,[[],["s"]]],[11,R[110],E,R[107],156,[[["self"]],[["s"],[R[52]]]]],[11,R[111],E,R[108],156,[[["self"]],[[R[52]],["s"]]]],[11,R[46],E,R[109],156,[[],[R[52]]]],[11,"reunite",E,R[113],158,[[[R[5072]]],[[R[112]],[R[12],[R[112]]]]]],[11,"new",E,R[5079],162,[[],[R[118]]]],[11,"len",E,R[5080],162,[[["self"]],[R[9]]]],[11,R[69],E,R[5081],162,[[["self"]],["bool"]]],[11,"push",E,R[5082],162,[[["self"],[T]]]],[11,R[110],E,R[107],163,[[["self"]],["s"]]],[11,R[111],E,R[108],163,[[["self"]],["s"]]],[11,R[46],E,R[109],163,[[],["s"]]],[11,"peek",E,R[5067],164,[[["self"]],[[R[12],["async"]],["async",[R[52]]]]]],[11,"is_done",E,R[5066],165,[[["self"]],["bool"]]],[11,R[110],E,R[107],165,[[["self"]],["s"]]],[11,R[111],E,R[108],165,[[["self"]],["s"]]],[11,R[46],E,R[109],165,[[],["s"]]],[11,R[110],E,R[107],166,[[["self"]],["s"]]],[11,R[111],E,R[108],166,[[["self"]],["s"]]],[11,R[46],E,R[109],166,[[],["s"]]],[11,R[110],E,R[107],167,[[["self"]],["s"]]],[11,R[111],E,R[108],167,[[["self"]],["s"]]],[11,R[46],E,R[109],167,[[],["s"]]],[11,"notify",R[4837],R[5130],168,[[["self"]]]],[11,"is_current",E,R[5131],168,[[["self"]],["bool"]]],[11,R[5132],E,R[5133],168,[[["self"]],["bool"]]],[11,"with",E,R[5121],169,[[["self"],["f"]],["r"]]],[11,"run",E,"Actually run the task (invoking `poll` on its future) on…",170,[[]]],[11,R[5122],E,R[5123],171,[[["self"]],[R[12]]]],[11,R[5124],E,R[5125],171,[[["self"]],[[R[52],[R[12]]],[R[12]]]]],[11,"wait_send",E,R[5126],171,[[["self"]],[R[12]]]],[11,"wait_flush",E,R[5127],171,[[["self"]],[R[12]]]],[11,"wait_close",E,R[5128],171,[[["self"]],[R[12]]]],[11,R[110],E,R[5134],171,[[["self"]],[T]]],[11,R[111],E,R[5135],171,[[["self"]],[T]]],[11,R[46],E,R[5136],171,[[],[T]]],[11,R[5137],E,R[5138],171,[[["self"],["n"],["f"],[R[9]]],["r"]]],[11,R[5139],E,R[5140],171,[[["self"],["n"],[R[9]]],[[R[12],["async"]],["async"]]]],[11,R[5141],E,R[5142],171,[[["self"],["n"],[R[9]]],[["async",[R[52]]],[R[12],["async"]]]]],[11,R[5143],E,R[5144],171,[[["self"],["n"],[R[9]]],[[R[12],[R[184]]],[R[184]]]]],[11,R[5145],E,R[5146],171,[[["self"],["n"],[R[9]]],[[R[12],["async"]],["async"]]]],[11,R[5147],E,R[5148],171,[[["self"],["n"],[R[9]]],[[R[12],["async"]],["async"]]]],[11,"new",E,R[5129],172,[[["eventset"],["arc",["eventset"]],[R[9]]],[R[192]]]],[11,"new",E,R[534],173,[[],[R[535]]]],[11,R[540],E,R[536],173,[[["self"]]]],[11,R[537],E,R[538],173,[[["self"],["task"]]]],[11,"notify",E,R[539],173,[[["self"]]]],[11,"new",E,"Inserts a new piece of task-local data into this task,…",174,[[["a"]],["taskrc"]]],[11,"with",E,"Operate with a reference to the underlying data.",174,[[["self"],["f"]],["r"]]],[11,"map",R[4742],R[4952],24,[[["f"]],["async"]]],[11,R[90],E,R[4953],24,[[["self"]],["bool"]]],[11,R[91],E,R[4954],24,[[["self"]],["bool"]]],[11,"map",E,R[4955],25,[[["f"]],[R[184]]]],[11,R[90],E,R[4956],25,[[["self"]],["bool"]]],[11,R[91],E,R[4957],25,[[["self"]],["bool"]]],[11,"handle",R[4838],R[5338],175,[[["self"]],["handle"]]],[11,R[4541],E,R[5339],175,[[],[R[2344]]]],[11,R[4542],E,R[5340],175,[[],[R[2344]]]],[11,"forget",E,R[5341],175,[[]]],[11,"new",E,R[5342],177,[[["e"]],[R[4848]]]],[11,R[5343],E,R[5344],177,[[["e"],["handle"]],[[R[12],[R[4848],"error"]],[R[4848]],["error"]]]],[11,R[110],E,R[5345],177,[[["self"]],["e"]]],[11,R[111],E,R[5346],177,[[["self"]],["e"]]],[11,R[46],E,R[5347],177,[[],[[R[12],["error"]],["error"]]]],[11,R[4535],E,R[5348],177,[[["ready"],["self"]],[[R[12],["async","error"]],["async",["ready"]],["error"]]]],[11,R[5349],E,R[5350],177,[[["ready"],["self"]],[[R[12],["error"]],["error"]]]],[11,R[4536],E,R[5351],177,[[["self"]],[[R[12],["async","error"]],["async",["ready"]],["error"]]]],[11,R[5352],E,R[5353],177,[[["self"]],[[R[12],["error"]],["error"]]]],[11,"new",E,R[5366],178,[[],[["reactor"],[R[12],["reactor","error"]],["error"]]]],[11,"handle",E,R[5367],178,[[["self"]],["handle"]]],[11,R[5368],E,R[5369],178,[[["self"]],[[R[4537]],[R[12],[R[4537]]]]]],[11,"turn",E,R[5370],178,[[[R[1358]],["self"],[R[52],[R[1358]]]],[["turn"],[R[12],["turn","error"]],["error"]]]],[11,"is_idle",E,R[5371],178,[[["self"]],["bool"]]],[11,R[4538],E,R[5372],178,[[],[[R[4538]],[R[12],[R[4538],"error"]],["error"]]]],[11,"new",E,R[5354],179,[[],[R[5355]]]],[11,R[540],E,R[5356],179,[[[T],["self"]],[[R[12],["bool","error"]],["bool"],["error"]]]],[11,R[2734],E,R[5357],179,[[["self"],[T]],[[R[12],["error"]],["error"]]]],[11,R[5358],E,R[5359],179,[[[T],["self"],["handle"]],[[R[12],["bool","error"]],["bool"],["error"]]]],[11,R[4535],E,R[5360],179,[[["self"]],[[R[12],["async","error"]],["async",["ready"]],["error"]]]],[11,R[5361],E,R[5362],179,[[["self"]],[[R[52],["ready"]],[R[12],[R[52],"error"]],["error"]]]],[11,R[4536],E,R[5363],179,[[["self"]],[[R[12],["async","error"]],["async",["ready"]],["error"]]]],[11,R[5364],E,R[5365],179,[[["self"]],[[R[52],["ready"]],[R[12],[R[52],"error"]],["error"]]]],[11,R[46],R[4839],R[522],181,[[],[T]]],[11,R[46],E,R[522],183,[[],[T]]],[11,R[140],E,R[5413],183,[[["self"]],["bool"]]],[11,"is_full",E,R[5414],183,[[["self"]],["bool"]]],[11,R[532],R[4807],R[5382],187,[[["self"]],[[R[12],["async",R[139]]],[R[139]],["async"]]]],[11,R[531],E,R[5383],187,[[["self"],[T]],[[R[138]],[R[12],[R[138]]]]]],[11,"close",E,R[504],188,[[["self"]]]],[11,"close",E,R[504],189,[[["self"]]]],[11,R[531],E,R[5384],190,[[["self"],[T]],[[R[12],[R[505]]],[R[505]]]]],[11,"send",R[4809],R[162],191,[[[T]],[R[12]]]],[11,R[515],E,R[508],191,[[["self"]],[[R[12],["async"]],["async"]]]],[11,R[140],E,R[508],191,[[["self"]],["bool"]]],[11,"close",E,R[5399],192,[[["self"]]]],[11,"try_recv",E,R[5400],192,[[["self"]],[[R[12],[R[509]]],[R[509]]]]],[11,R[110],R[4810],R[5409],195,[[["self"]],["ref"]]],[11,"poll_ref",E,R[5410],195,[[["self"]],[[R[12],["async",R[514]]],["async",[R[52]]],[R[514]]]]],[11,R[2030],E,R[5411],196,[[["self"],[T]],[[R[12],[R[139]]],[R[139]]]]],[11,R[515],E,R[5412],196,[[["self"]],[[R[12],["async"]],["async"]]]],[11,"new",R[4811],R[5164],200,[[],[R[2325]]]],[11,R[5165],E,R[5166],200,[[["handle"],[R[9]]],[R[2325]]]],[11,R[73],E,R[5167],200,[[[R[9]]],[R[2325]]]],[11,"insert_at",E,R[5168],200,[[["self"],["instant"],[T]],["key"]]],[11,"insert",E,R[5169],200,[[[R[1358]],["self"],[T]],["key"]]],[11,"remove",E,R[5170],200,[[["self"],["key"]],["expired"]]],[11,"reset_at",E,R[2326],200,[[["self"],["instant"],["key"]]]],[11,"reset",E,R[2326],200,[[[R[1358]],["self"],["key"]]]],[11,"clear",E,R[5171],200,[[["self"]]]],[11,R[74],E,R[5172],200,[[["self"]],[R[9]]]],[11,"reserve",E,R[5173],200,[[["self"],[R[9]]]]],[11,R[69],E,R[5174],200,[[["self"]],["bool"]]],[11,R[110],R[4842],R[5175],201,[[["self"]],[T]]],[11,R[111],E,R[2348],201,[[["self"]],[T]]],[11,R[46],E,R[5176],201,[[],[T]]],[11,"new",R[4811],R[5180],203,[[[R[1358]],[T]],["timeout"]]],[11,R[110],E,R[5181],203,[[["self"]],[T]]],[11,R[111],E,R[5182],203,[[["self"]],[T]]],[11,R[46],E,R[5183],203,[[],[T]]],[11,"new_at",E,R[5184],203,[[["instant"],[T]],["timeout"]]],[11,"inner",R[4843],R[5185],204,[[[T]],["error"]]],[11,"is_inner",E,R[2330],204,[[["self"]],["bool"]]],[11,R[46],E,R[5186],204,[[],[R[52]]]],[11,"elapsed",E,R[5187],204,[[],["error"]]],[11,R[5188],E,R[2330],204,[[["self"]],["bool"]]],[11,"timer",E,R[5189],204,[[["error"]],["error"]]],[11,"is_timer",E,R[5190],204,[[["self"]],["bool"]]],[11,"into_timer",E,R[5191],204,[[],[["error"],[R[52],["error"]]]]],[11,"new",R[4811],R[5192],205,[[["instant"]],["delay"]]],[11,"deadline",E,R[5193],205,[[["self"]],["instant"]]],[11,R[5188],E,R[5194],205,[[["self"]],["bool"]]],[11,"reset",E,R[5195],205,[[["self"],["instant"]]]],[11,R[2344],E,R[5196],206,[[],["error"]]],[11,R[2346],E,R[2335],206,[[["self"]],["bool"]]],[11,R[2345],E,R[5197],206,[[],["error"]]],[11,R[2347],E,R[2335],206,[[["self"]],["bool"]]],[11,"new",E,R[2336],207,[[[R[1358]],["instant"]],["interval"]]],[11,R[5198],E,R[5199],207,[[[R[1358]]],["interval"]]],[11,"current",R[4844],R[4940],208,[[],[R[1283]]]],[11,R[2344],E,R[4936],209,[[],[R[1279]]]],[11,R[2345],E,R[4937],209,[[],[R[1279]]]],[11,R[2346],E,R[4938],209,[[["self"]],["bool"]]],[11,R[2347],E,R[4939],209,[[["self"]],["bool"]]],[11,"current",R[4845],R[5152],211,[[],[R[2318]]]],[11,R[5153],E,R[5154],211,[[["self"],["box",["future"]],["future"]],[[R[1279]],[R[12],[R[1279]]]]]]],"p":[[8,"Decoder"],[8,"Encoder"],[3,R[4484]],[3,R[4849]],[3,"Builder"],[8,R[4871]],[8,R[4850]],[4,R[32]],[8,"Read"],[8,"Write"],[3,"UCred"],[8,"Future"],[8,R[197]],[8,R[198]],[8,R[4941]],[4,R[196]],[4,"Loop"],[4,"Either"],[8,"Stream"],[3,R[200]],[4,R[201]],[8,"EventSet"],[8,R[4941]],[8,"Unpark"],[4,"Async"],[4,R[195]],[8,"Sink"],[8,R[4492]],[8,R[4493]],[8,"SinkExt"],[8,R[4851]],[8,"FutureExt"],[8,R[545]],[8,R[4941]],[8,R[1285]],[3,"Builder"],[3,"Handle"],[3,"Runtime"],[3,"Builder"],[3,R[2320]],[3,"Runtime"],[3,R[5225]],[3,"Framed"],[3,R[5222]],[3,R[4485]],[3,R[5227]],[3,R[4852]],[3,R[4507]],[3,"File"],[3,R[4531]],[3,R[4530]],[3,R[5298]],[3,R[4506]],[3,R[5296]],[3,R[4532]],[3,"ReadFile"],[3,R[5329]],[3,"Stderr"],[3,"Stdin"],[3,"Stdout"],[3,"Copy"],[3,"Flush"],[3,"Lines"],[3,R[4497]],[3,"ReadHalf"],[3,R[4878]],[3,R[4879]],[3,R[4358]],[3,"WriteAll"],[3,R[4877]],[3,"Error"],[3,R[2741]],[3,R[4669]],[3,R[4895]],[3,R[4694]],[3,R[3581]],[3,R[4686]],[3,R[3582]],[3,R[4671]],[3,R[4670]],[3,R[4909]],[3,R[4698]],[3,R[4699]],[3,R[4670]],[3,R[4909]],[3,R[4698]],[3,R[4699]],[3,R[199]],[3,"PollFn"],[3,"Finished"],[3,"Join"],[3,R[221]],[3,"Select2"],[3,"Flatten"],[3,"Join5"],[3,"Select"],[3,"JoinAll"],[3,"OrElse"],[3,R[104]],[3,"Join3"],[3,R[224]],[3,R[223]],[3,"Then"],[3,R[222]],[3,"Map"],[3,R[220]],[3,"FromErr"],[3,"SelectOk"],[3,"Empty"],[3,"Shared"],[3,"AndThen"],[3,"LoopFn"],[3,"Join4"],[3,"Lazy"],[3,"Inspect"],[3,"Fuse"],[3,"MapErr"],[3,R[219]],[3,R[210]],[3,R[262]],[3,"Once"],[3,"Concat2"],[3,"Forward"],[3,"Sender"],[3,"IterOk"],[3,R[4853]],[3,"Concat"],[3,R[206]],[3,"OrElse"],[3,R[104]],[3,"Filter"],[3,"Chunks"],[3,"Map"],[3,"ForEach"],[3,"FromErr"],[3,"Unfold"],[3,"AndThen"],[3,"Fold"],[3,"Skip"],[3,"Buffered"],[3,"Wait"],[3,R[145]],[3,"Iter"],[3,"PollFn"],[3,"Take"],[3,"Chain"],[3,"Zip"],[3,R[148]],[3,R[207]],[3,"Flatten"],[3,"Repeat"],[3,R[205]],[3,R[208]],[3,"Select"],[3,R[202]],[3,R[225]],[3,R[203]],[3,"Then"],[3,R[209]],[3,"Empty"],[3,"Merge"],[3,"Collect"],[3,R[211]],[3,"Inspect"],[3,"Peekable"],[3,"Fuse"],[3,R[204]],[3,"MapErr"],[3,"Task"],[3,"LocalKey"],[3,"Run"],[3,"Spawn"],[3,R[228]],[3,R[227]],[3,"TaskRc"],[3,R[5331]],[3,"Handle"],[3,R[4854]],[3,"Reactor"],[3,R[2739]],[3,"Turn"],[3,R[526]],[3,R[527]],[3,R[216]],[3,R[506]],[3,R[525]],[3,R[148]],[3,"Sender"],[3,R[147]],[3,R[145]],[3,R[146]],[3,"Sender"],[3,R[145]],[3,R[506]],[3,R[528]],[3,R[145]],[3,"Sender"],[3,"Ref"],[3,R[506]],[3,R[148]],[3,R[2342]],[3,"Expired"],[3,"Key"],[3,"Timeout"],[3,"Error"],[3,"Delay"],[3,"Error"],[3,"Interval"],[3,R[1284]],[3,R[4933]],[3,"Spawn"],[3,R[2320]],[3,R[4358]]]};
searchIndex["tokio_io"]={"doc":"Core I/O traits and combinators when working with Tokio.","i":[[0,"io","tokio_io","I/O conveniences when working with primitives in…",N,N],[3,"Copy",R[3557],R[4855],N,N],[3,"Flush",E,R[4494],N,N],[3,"Read",E,"A future which can be used to easily read available number…",N,N],[3,R[4497],E,R[4856],N,N],[3,R[4878],E,R[4857],N,N],[3,R[4879],E,R[4858],N,N],[3,R[4358],E,R[4859],N,N],[3,"WriteAll",E,R[4688],N,N],[3,"AllowStdIo",E,"A simple wrapper type which allows types that only…",N,N],[3,"Lines",E,R[4860],N,N],[3,"ReadHalf",E,R[4861],N,N],[3,R[4877],E,R[4862],N,N],[3,"Window",E,"A owned window around an underlying buffer.",N,N],[5,"copy",E,R[4863],N,[[["w"],["r"]],["copy"]]],[5,"flush",E,R[4864],N,[[["a"]],["flush"]]],[5,"read",E,R[4495],N,[[[T],["r"]],["read"]]],[5,R[4731],E,R[4496],N,[[["a"],[T]],[R[5247]]]],[5,R[3559],E,R[3556],N,[[["a"],["u8"],["vec",["u8"]]],["readtoend"]]],[5,"read_until",E,R[3556],N,[[["a"],["u8"],["vec",["u8"]]],["readuntil"]]],[5,R[2344],E,R[4865],N,[[["a"]],[R[2344]]]],[5,R[4866],E,R[4692],N,[[["a"],[T]],["writeall"]]],[5,"lines",E,R[4867],N,[[["a"]],["lines"]]],[11,"new",E,"Creates a new `AllowStdIo` from an existing IO object.",0,[[[T]],["self"]]],[11,R[110],E,"Returns a reference to the contained IO object.",0,[[["self"]],[T]]],[11,R[111],E,"Returns a mutable reference to the contained IO object.",0,[[["self"]],[T]]],[11,R[46],E,"Consumes self and returns the contained IO object.",0,[[],[T]]],[11,R[46],E,R[4868],1,[[],["a"]]],[11,"unsplit",E,R[4869],2,[[["writehalf"]],[T]]],[11,"unsplit",E,R[4870],3,[[["readhalf"]],[T]]],[11,"new",E,"Creates a new window around the buffer `t` defaulting to…",4,[[[T]],["window"]]],[11,R[110],E,"Gets a shared reference to the underlying buffer inside of…",4,[[["self"]],[T]]],[11,R[111],E,"Gets a mutable reference to the underlying buffer inside…",4,[[["self"]],[T]]],[11,R[46],E,"Consumes this `Window`, returning the underlying buffer.",4,[[],[T]]],[11,"start",E,"Returns the starting index of this window into the…",4,[[["self"]],[R[9]]]],[11,"end",E,"Returns the end index of this window into the underlying…",4,[[["self"]],[R[9]]]],[11,"set_start",E,"Changes the starting index of this window to the index…",4,[[["self"],[R[9]]],["window"]]],[11,"set_end",E,"Changes the end index of this window to the index specified.",4,[[["self"],[R[9]]],["window"]]],[6,"IoFuture","tokio_io","A convenience typedef around a `Future` whose error…",N,N],[6,"IoStream",E,"A convenience typedef around a `Stream` whose error…",N,N],[8,R[4871],E,R[4721],N,N],[11,R[3560],E,R[3561],5,[[["self"]],["bool"]]],[11,R[4876],E,R[3562],5,[[["self"]],[["error"],["poll",[R[9],"error"]],[R[9]]]]],[11,R[4872],E,R[3563],5,[[["b"],["self"]],[["error"],["poll",[R[9],"error"]],[R[9]]]]],[11,"framed",E,R[3564],5,[[["encoder"],["decoder"]],[["encoder"],["decoder"],["framed"]]]],[11,"split",E,R[3565],5,[[]]],[8,R[4850],E,R[4722],N,N],[11,R[4873],E,R[3566],6,[[["self"]],[["error"],["poll",[R[9],"error"]],[R[9]]]]],[11,R[4874],E,R[3567],6,[[["self"]],[["poll",["error"]],["error"]]]],[10,R[2344],E,R[4723],6,[[["self"]],[["poll",["error"]],["error"]]]],[11,R[4486],E,R[3568],6,[[["b"],["self"]],[["error"],["poll",[R[9],"error"]],[R[9]]]]],[14,"try_nb",E,"A convenience macro for working with `io::Result<T>` from…",N,N],[11,"from",R[3557],E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[11],E,E,7,[[[U]],[R[12]]]],[11,R[39],E,E,7,[[["self"]],[T]]],[11,R[13],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[],[R[12]]]],[11,R[18],E,E,7,[[["self"]],[R[40]]]],[11,R[99],E,E,7,[[],["f"]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[11],E,E,8,[[[U]],[R[12]]]],[11,R[39],E,E,8,[[["self"]],[T]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[],[R[12]]]],[11,R[18],E,E,8,[[["self"]],[R[40]]]],[11,R[99],E,E,8,[[],["f"]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[11],E,E,9,[[[U]],[R[12]]]],[11,R[39],E,E,9,[[["self"]],[T]]],[11,R[13],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[],[R[12]]]],[11,R[18],E,E,9,[[["self"]],[R[40]]]],[11,R[99],E,E,9,[[],["f"]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[11],E,E,10,[[[U]],[R[12]]]],[11,R[39],E,E,10,[[["self"]],[T]]],[11,R[13],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[],[R[12]]]],[11,R[18],E,E,10,[[["self"]],[R[40]]]],[11,R[99],E,E,10,[[],["f"]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[11],E,E,11,[[[U]],[R[12]]]],[11,R[39],E,E,11,[[["self"]],[T]]],[11,R[13],E,E,11,[[["self"]],[T]]],[11,R[14],E,E,11,[[],[R[12]]]],[11,R[18],E,E,11,[[["self"]],[R[40]]]],[11,R[99],E,E,11,[[],["f"]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[11],E,E,12,[[[U]],[R[12]]]],[11,R[39],E,E,12,[[["self"]],[T]]],[11,R[13],E,E,12,[[["self"]],[T]]],[11,R[14],E,E,12,[[],[R[12]]]],[11,R[18],E,E,12,[[["self"]],[R[40]]]],[11,R[99],E,E,12,[[],["f"]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[11],E,E,13,[[[U]],[R[12]]]],[11,R[39],E,E,13,[[["self"]],[T]]],[11,R[13],E,E,13,[[["self"]],[T]]],[11,R[14],E,E,13,[[],[R[12]]]],[11,R[18],E,E,13,[[["self"]],[R[40]]]],[11,R[99],E,E,13,[[],["f"]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[11],E,E,14,[[[U]],[R[12]]]],[11,R[39],E,E,14,[[["self"]],[T]]],[11,R[13],E,E,14,[[["self"]],[T]]],[11,R[14],E,E,14,[[],[R[12]]]],[11,R[18],E,E,14,[[["self"]],[R[40]]]],[11,R[99],E,E,14,[[],["f"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[[T],["self"]]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,R[4872],E,E,2,[[["b"],["self"]],[["error"],["poll",[R[9],"error"]],[R[9]]]]],[11,R[2344],E,E,0,[[["self"]],[["poll",["error"]],["error"]]]],[11,R[2344],E,E,3,[[["self"]],[["poll",["error"]],["error"]]]],[11,R[4486],E,E,3,[[["b"],["self"]],[["error"],["poll",[R[9],"error"]],[R[9]]]]],[11,"eq",E,E,0,[[[R[3558]],["self"]],["bool"]]],[11,"ne",E,E,0,[[[R[3558]],["self"]],["bool"]]],[11,"clone",E,E,0,[[["self"]],[R[3558]]]],[11,"cmp",E,E,0,[[[R[3558]],["self"]],[R[51]]]],[11,R[264],E,E,0,[[[R[3558]],["self"]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,0,[[[R[3558]],["self"]],["bool"]]],[11,"le",E,E,0,[[[R[3558]],["self"]],["bool"]]],[11,"gt",E,E,0,[[[R[3558]],["self"]],["bool"]]],[11,"ge",E,E,0,[[[R[3558]],["self"]],["bool"]]],[11,"as_mut",E,E,4,[[["self"]]]],[11,"as_ref",E,E,4,[[["self"]]]],[11,"fmt",E,E,7,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,8,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,9,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,10,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,11,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,12,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,13,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,14,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,0,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,1,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,2,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,3,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,4,[[[R[29]],["self"]],[R[12]]]],[11,"hash",E,E,0,[[["self"],["__ht"]]]],[11,"read",E,E,0,[[["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,R[3559],E,E,0,[[["self"],["vec"]],[[R[12],[R[9]]],[R[9]]]]],[11,R[4729],E,E,0,[[["string"],["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,R[4731],E,E,0,[[["self"]],[R[12]]]],[11,"read",E,E,2,[[["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,"write",E,E,0,[[["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,"flush",E,E,0,[[["self"]],[R[12]]]],[11,R[4866],E,E,0,[[["self"]],[R[12]]]],[11,R[4875],E,E,0,[[["self"],[R[400]]],[R[12]]]],[11,"write",E,E,3,[[["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,"flush",E,E,3,[[["self"]],[R[12]]]],[11,"poll",E,E,7,[[["self"]],[["poll",["error"]],["error"]]]],[11,"poll",E,E,8,[[["self"]],[["error"],["poll",["error"]]]]],[11,"poll",E,E,9,[[["self"]],[["error"],["poll",["error"]]]]],[11,"poll",E,E,10,[[["self"]],[["poll",["error"]],["error"]]]],[11,"poll",E,E,11,[[["self"]],[["error"],["poll",["error"]]]]],[11,"poll",E,E,12,[[["self"]],[["error"],["poll",["error"]]]]],[11,"poll",E,E,13,[[["self"]],[["error"],["poll",["error"]]]]],[11,"poll",E,E,14,[[["self"]],[["poll",["error"]],["error"]]]],[11,"poll",E,E,1,[[["self"]],[["poll",[R[52],"error"]],["error"],[R[52],["string"]]]]],[11,R[3560],"tokio_io",R[3561],5,[[["self"]],["bool"]]],[11,R[4876],E,R[3562],5,[[["self"]],[["error"],["poll",[R[9],"error"]],[R[9]]]]],[11,R[4872],E,R[3563],5,[[["b"],["self"]],[["error"],["poll",[R[9],"error"]],[R[9]]]]],[11,"framed",E,R[3564],5,[[["encoder"],["decoder"]],[["encoder"],["decoder"],["framed"]]]],[11,"split",E,R[3565],5,[[]]],[11,R[4873],E,R[3566],6,[[["self"]],[["error"],["poll",[R[9],"error"]],[R[9]]]]],[11,R[4874],E,R[3567],6,[[["self"]],[["poll",["error"]],["error"]]]],[11,R[4486],E,R[3568],6,[[["b"],["self"]],[["error"],["poll",[R[9],"error"]],[R[9]]]]]],"p":[[3,"AllowStdIo"],[3,"Lines"],[3,"ReadHalf"],[3,R[4877]],[3,"Window"],[8,R[4871]],[8,R[4850]],[3,"Copy"],[3,"Flush"],[3,"Read"],[3,R[4497]],[3,R[4878]],[3,R[4879]],[3,R[4358]],[3,"WriteAll"]]};
searchIndex["tokio_tcp"]={"doc":R[4880],"i":[[3,R[4909],"tokio_tcp",R[4881],N,N],[3,R[2741],E,R[4714],N,N],[3,R[4669],E,R[4715],N,N],[3,R[4670],E,R[4882],N,N],[11,"bind",E,R[4883],0,[[[R[1897]]],[[R[1339]],[R[12],[R[1339]]]]]],[11,R[4679],E,R[4664],0,[[["self"]],[["error"],["poll",["error"]]]]],[11,R[4680],E,R[4664],0,[[["self"]],[["poll",["error"]],["error"]]]],[11,R[4511],E,R[4884],0,[[[R[1339]],["handle"]],[[R[1339]],[R[12],[R[1339]]]]]],[11,R[2731],E,R[4885],0,[[["self"]],[[R[1897]],[R[12],[R[1897]]]]]],[11,R[4930],E,R[4681],0,[[],[R[4930]]]],[11,"ttl",E,R[1361],0,[[["self"]],[["u32"],[R[12],["u32"]]]]],[11,"set_ttl",E,R[1343],0,[[["u32"],["self"]],[R[12]]]],[11,"connect",E,R[4886],1,[[[R[1897]]],[R[4666]]]],[11,R[4511],E,R[4887],1,[[[R[1340]],["handle"]],[[R[12],[R[1340]]],[R[1340]]]]],[11,R[4888],E,R[4665],1,[[[R[1897]],[R[1340]],["handle"]],[R[4666]]]],[11,R[4535],E,R[4889],1,[[["ready"],["self"]],[["poll",["ready","error"]],["error"],["ready"]]]],[11,R[4536],E,R[4890],1,[[["self"]],[["poll",["ready","error"]],["error"],["ready"]]]],[11,R[2731],E,R[4891],1,[[["self"]],[[R[1897]],[R[12],[R[1897]]]]]],[11,R[4667],E,R[4892],1,[[["self"]],[[R[1897]],[R[12],[R[1897]]]]]],[11,"poll_peek",E,R[2770],1,[[["self"]],[["error"],["poll",[R[9],"error"]],[R[9]]]]],[11,R[2344],E,R[3578],1,[[[R[2344]],["self"]],[R[12]]]],[11,"nodelay",E,R[2744],1,[[["self"]],[["bool"],[R[12],["bool"]]]]],[11,R[2742],E,R[2743],1,[[["self"],["bool"]],[R[12]]]],[11,R[1369],E,R[1370],1,[[["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,R[1367],E,R[1368],1,[[["self"],[R[9]]],[R[12]]]],[11,R[1373],E,R[1374],1,[[["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,R[1371],E,R[1372],1,[[["self"],[R[9]]],[R[12]]]],[11,R[4668],E,R[1354],1,[[["self"]],[[R[52],[R[1358]]],[R[12],[R[52]]]]]],[11,R[2745],E,R[1353],1,[[[R[1358]],[R[52],[R[1358]]],["self"]],[R[12]]]],[11,"ttl",E,R[1361],1,[[["self"]],[["u32"],[R[12],["u32"]]]]],[11,"set_ttl",E,R[1343],1,[[["u32"],["self"]],[R[12]]]],[11,"linger",E,R[4893],1,[[["self"]],[[R[52],[R[1358]]],[R[12],[R[52]]]]]],[11,R[2746],E,R[1365],1,[[[R[1358]],[R[52],[R[1358]]],["self"]],[R[12]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,R[99],E,E,3,[[],["f"]]],[11,"fmt",E,E,2,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,3,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,1,[[["self"],[R[29]]],[R[12]]]],[11,R[2452],E,E,0,[[["self"]],["rawfd"]]],[11,R[2452],E,E,1,[[["self"]],["rawfd"]]],[11,"read",E,E,1,[[["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,"write",E,E,1,[[["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,"flush",E,E,1,[[["self"]],[R[12]]]],[11,"poll",E,E,3,[[["self"]],[["poll",[R[1340],"error"]],["error"],[R[1340]]]]],[11,"poll",E,E,2,[[["self"]],[["error"],["poll",[R[52],"error"]],[R[52]]]]],[11,R[2344],E,E,1,[[["self"]],[["error"],["poll",["error"]]]]],[11,R[4486],E,E,1,[[["b"],["self"]],[["error"],["poll",[R[9],"error"]],[R[9]]]]],[11,R[3560],E,E,1,[[["self"]],["bool"]]],[11,R[4872],E,E,1,[[["b"],["self"]],[["error"],["poll",[R[9],"error"]],[R[9]]]]]],"p":[[3,R[2741]],[3,R[4669]],[3,R[4909]],[3,R[4670]]]};
searchIndex["tokio_udp"]={"doc":R[4894],"i":[[3,R[4895],"tokio_udp",R[4687],N,N],[3,R[4694],E,R[4716],N,N],[3,R[4699],E,R[4688],N,N],[3,R[4698],E,R[4896],N,N],[11,"new",E,R[4897],0,[[[R[2730]],["c"]],["udpframed"]]],[11,R[110],E,R[4480],0,[[["self"]],[R[2730]]]],[11,R[111],E,R[4481],0,[[["self"]],[R[2730]]]],[11,R[46],E,R[4898],0,[[],[R[2730]]]],[11,"bind",E,R[4899],1,[[[R[1897]]],[[R[2730]],[R[12],[R[2730]]]]]],[11,R[4511],E,R[4900],1,[[["handle"],[R[2730]]],[[R[2730]],[R[12],[R[2730]]]]]],[11,R[2731],E,R[4695],1,[[["self"]],[[R[1897]],[R[12],[R[1897]]]]]],[11,"connect",E,R[4689],1,[[[R[1897]],["self"]],[R[12]]]],[11,R[4923],E,R[4690],1,[[["self"]],[["error"],["poll",[R[9],"error"]],[R[9]]]]],[11,R[4920],E,R[4901],1,[[["self"]],[["error"],["poll",[R[9],"error"]],[R[9]]]]],[11,R[4697],E,R[4691],1,[[["self"],[R[1897]]],[["error"],["poll",[R[9],"error"]],[R[9]]]]],[11,R[4902],E,R[4692],1,[[[R[1897]],[T]],[R[4925]]]],[11,R[4696],E,R[4693],1,[[["self"]],[["error"],["poll",["error"]]]]],[11,R[4903],E,R[4904],1,[[[T]],[R[4922]]]],[11,R[4535],E,R[4905],1,[[["ready"],["self"]],[["poll",["ready","error"]],["error"],["ready"]]]],[11,R[4536],E,R[4906],1,[[["self"]],[["poll",["ready","error"]],["error"],["ready"]]]],[11,R[2030],E,R[2749],1,[[["self"]],[["bool"],[R[12],["bool"]]]]],[11,R[2747],E,R[2748],1,[[["self"],["bool"]],[R[12]]]],[11,R[2752],E,R[2753],1,[[["self"]],[["bool"],[R[12],["bool"]]]]],[11,R[2750],E,R[2751],1,[[["self"],["bool"]],[R[12]]]],[11,R[2756],E,R[2757],1,[[["self"]],[["u32"],[R[12],["u32"]]]]],[11,R[2754],E,R[2755],1,[[["u32"],["self"]],[R[12]]]],[11,R[2760],E,R[2761],1,[[["self"]],[["bool"],[R[12],["bool"]]]]],[11,R[2758],E,R[2759],1,[[["self"],["bool"]],[R[12]]]],[11,"ttl",E,R[1361],1,[[["self"]],[["u32"],[R[12],["u32"]]]]],[11,"set_ttl",E,R[1343],1,[[["u32"],["self"]],[R[12]]]],[11,R[2762],E,R[2763],1,[[[R[1898]],["self"]],[R[12]]]],[11,R[2764],E,R[2765],1,[[["u32"],[R[1904]],["self"]],[R[12]]]],[11,R[2766],E,R[2767],1,[[[R[1898]],["self"]],[R[12]]]],[11,R[2768],E,R[2769],1,[[["u32"],[R[1904]],["self"]],[R[12]]]],[11,R[4907],E,R[4908],2,[[],["parts"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,R[99],E,E,3,[[],["f"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,R[99],E,E,2,[[],["f"]]],[11,"fmt",E,E,0,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,1,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,3,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,2,[[[R[29]],["self"]],[R[12]]]],[11,R[2452],E,E,1,[[["self"]],["rawfd"]]],[11,"poll",E,E,3,[[["self"]],[["poll",["error"]],["error"]]]],[11,"poll",E,E,2,[[["self"]],[["poll",["error"]],["error"]]]],[11,"poll",E,E,0,[[["self"]],[[R[52]],["poll",[R[52]]]]]],[11,R[181],E,E,0,[[["self"]],[R[182]]]],[11,R[183],E,E,0,[[["self"]],["poll"]]],[11,"close",E,E,0,[[["self"]],["poll"]]]],"p":[[3,R[4895]],[3,R[4694]],[3,R[4698]],[3,R[4699]]]};
searchIndex["tokio_uds"]={"doc":"Unix Domain Sockets for Tokio.","i":[[3,R[3581],"tokio_uds",R[4718],N,N],[3,R[4686],E,R[4687],N,N],[3,R[4909],E,R[4910],N,N],[3,R[3582],E,R[4719],N,N],[3,R[4698],E,R[4911],N,N],[3,R[4699],E,R[4912],N,N],[3,R[4671],E,R[4720],N,N],[3,R[4670],E,R[4913],N,N],[3,"UCred",E,R[4914],N,N],[12,"uid",E,R[4915],0,N],[12,"gid",E,R[4916],0,N],[11,"bind",E,R[4917],1,[[["p"]],[[R[3569]],[R[12],[R[3569]]]]]],[11,"pair",E,R[4672],1,[[],[R[12]]]],[11,R[4511],E,R[4918],1,[[["handle"],[R[3569]]],[[R[3569]],[R[12],[R[3569]]]]]],[11,"unbound",E,R[4919],1,[[],[[R[3569]],[R[12],[R[3569]]]]]],[11,"connect",E,R[4673],1,[[["asref",["path"]],["path"],["self"]],[R[12]]]],[11,R[4535],E,R[4678],1,[[["ready"],["self"]],[["error"],["poll",["ready","error"]],["ready"]]]],[11,R[4536],E,R[4683],1,[[["self"]],[["error"],["poll",["ready","error"]],["ready"]]]],[11,R[2731],E,R[4695],1,[[["self"]],[[R[1897]],[R[12],[R[1897]]]]]],[11,R[4667],E,R[4674],1,[[["self"]],[[R[1897]],[R[12],[R[1897]]]]]],[11,R[4696],E,R[3571],1,[[["self"]],[["error"],["poll",["error"]]]]],[11,R[4920],E,R[3571],1,[[["self"]],[["error"],["poll",[R[9],"error"]],[R[9]]]]],[11,R[4903],E,R[4921],1,[[[T]],[R[4922]]]],[11,R[4697],E,R[4675],1,[[["self"],["p"]],[["error"],["poll",[R[9],"error"]],[R[9]]]]],[11,R[4923],E,R[4676],1,[[["self"]],[["error"],["poll",[R[9],"error"]],[R[9]]]]],[11,R[4902],E,R[4924],1,[[["p"],[T]],[R[4925]]]],[11,R[1360],E,R[3575],1,[[["self"]],[[R[52],["error"]],[R[12],[R[52]]]]]],[11,R[2344],E,R[4677],1,[[[R[2344]],["self"]],[R[12]]]],[11,"new",E,R[4926],2,[[[R[3569]],["c"]],[R[4927]]]],[11,R[110],E,R[4480],2,[[["self"]],[R[3569]]]],[11,R[111],E,R[4481],2,[[["self"]],[R[3569]]]],[11,"bind",E,R[4928],3,[[["p"]],[[R[3572]],[R[12],[R[3572]]]]]],[11,R[4511],E,R[4929],3,[[["handle"],[R[3572]]],[[R[3572]],[R[12],[R[3572]]]]]],[11,R[2731],E,R[3574],3,[[["self"]],[[R[1897]],[R[12],[R[1897]]]]]],[11,R[4535],E,R[4678],3,[[["ready"],["self"]],[["error"],["poll",["ready","error"]],["ready"]]]],[11,R[1360],E,R[3575],3,[[["self"]],[[R[52],["error"]],[R[12],[R[52]]]]]],[11,R[4679],E,R[4664],3,[[["self"]],[["poll",["error"]],["error"]]]],[11,R[4680],E,R[4664],3,[[["self"]],[["error"],["poll",["error"]]]]],[11,R[4930],E,R[4681],3,[[],[R[4930]]]],[11,"connect",E,R[4682],4,[[["p"]],[R[4666]]]],[11,R[4511],E,R[4931],4,[[["handle"],[R[3577]]],[[R[3577]],[R[12],[R[3577]]]]]],[11,"pair",E,R[4672],4,[[],[R[12]]]],[11,R[4535],E,R[4678],4,[[["ready"],["self"]],[["error"],["poll",["ready","error"]],["ready"]]]],[11,R[4536],E,R[4683],4,[[["self"]],[["error"],["poll",["ready","error"]],["ready"]]]],[11,R[2731],E,R[4684],4,[[["self"]],[[R[1897]],[R[12],[R[1897]]]]]],[11,R[4667],E,R[4685],4,[[["self"]],[[R[1897]],[R[12],[R[1897]]]]]],[11,"peer_cred",E,R[4932],4,[[["self"]],[["ucred"],[R[12],["ucred"]]]]],[11,R[1360],E,R[3575],4,[[["self"]],[[R[52],["error"]],[R[12],[R[52]]]]]],[11,R[2344],E,R[3578],4,[[[R[2344]],["self"]],[R[12]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,R[18],E,E,5,[[["self"]],[R[40]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[11],E,E,6,[[[U]],[R[12]]]],[11,R[39],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[],[R[12]]]],[11,R[18],E,E,6,[[["self"]],[R[40]]]],[11,R[99],E,E,6,[[],["f"]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[11],E,E,7,[[[U]],[R[12]]]],[11,R[39],E,E,7,[[["self"]],[T]]],[11,R[13],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[],[R[12]]]],[11,R[18],E,E,7,[[["self"]],[R[40]]]],[11,R[99],E,E,7,[[],["f"]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[11],E,E,8,[[[U]],[R[12]]]],[11,R[39],E,E,8,[[["self"]],[T]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[],[R[12]]]],[11,R[18],E,E,8,[[["self"]],[R[40]]]],[11,R[99],E,E,8,[[],["f"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[[T],["self"]]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"eq",E,E,0,[[["self"],["ucred"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["ucred"]],["bool"]]],[11,"clone",E,E,0,[[["self"]],["ucred"]]],[11,"fmt",E,E,1,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,2,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,5,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,3,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,6,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,7,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,8,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,4,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,0,[[[R[29]],["self"]],[R[12]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,R[2452],E,E,1,[[["self"]],["rawfd"]]],[11,R[2452],E,E,3,[[["self"]],["rawfd"]]],[11,R[2452],E,E,4,[[["self"]],["rawfd"]]],[11,"read",E,E,4,[[["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,"write",E,E,4,[[["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,"flush",E,E,4,[[["self"]],[R[12]]]],[11,"poll",E,E,6,[[["self"]],["poll"]]],[11,"poll",E,E,7,[[["self"]],["poll"]]],[11,"poll",E,E,8,[[["self"]],[[R[3577]],["error"],["poll",[R[3577],"error"]]]]],[11,"poll",E,E,2,[[["self"]],[[R[52]],["poll",[R[52]]]]]],[11,"poll",E,E,5,[[["self"]],[["error"],["poll",[R[52],"error"]],[R[52]]]]],[11,R[181],E,E,2,[[["self"]],[R[182]]]],[11,R[183],E,E,2,[[["self"]],["poll"]]],[11,"close",E,E,2,[[["self"]],["poll"]]],[11,R[2344],E,E,4,[[["self"]],[["error"],["poll",["error"]]]]],[11,R[4486],E,E,4,[[["b"],["self"]],[["error"],["poll",[R[9],"error"]],[R[9]]]]],[11,R[3560],E,E,4,[[["self"]],["bool"]]],[11,R[4872],E,E,4,[[["b"],["self"]],[["error"],["poll",[R[9],"error"]],[R[9]]]]]],"p":[[3,"UCred"],[3,R[3581]],[3,R[4686]],[3,R[3582]],[3,R[4671]],[3,R[4909]],[3,R[4698]],[3,R[4699]],[3,R[4670]]]};
searchIndex["ucd_util"]={"doc":"The `ucd-util` crate contains a smattering of utility…","i":[[5,"hangul_name","ucd_util","Return the character name of the given precomposed Hangul…",N,[[["u32"]],[["string"],[R[52],["string"]]]]],[5,"hangul_full_canonical_decomposition",E,"Return the full canonical decomposition of the given…",N,[[["u32"]],[R[52]]]],[5,"ideograph_name",E,"Return the character name of the given ideograph codepoint.",N,[[["u32"]],[["string"],[R[52],["string"]]]]],[5,"character_name_normalize",E,"Normalize the given character name in place according to…",N,[[["string"]]]],[5,"symbolic_name_normalize",E,"Normalize the given symbolic name in place according to…",N,[[["string"]]]],[5,"canonical_property_name",E,"Find the canonical property name for the given normalized…",N,[[["str"],["propertytable"]],[[R[52],["str"]],["str"]]]],[5,"property_values",E,"Find the set of possible property values for a given…",N,[[["str"],["propertyvaluetable"]],[[R[232]],[R[52],[R[232]]]]]],[5,"canonical_property_value",E,"Find the canonical property value for the given normalized…",N,[[[R[232]],["str"]],[[R[52],["str"]],["str"]]]],[6,"PropertyTable",E,"The type of a property name table.",N,N],[6,"PropertyValueTable",E,"Type of a property value table.",N,N],[6,"PropertyValues",E,"A mapping of property values for a specific property.",N,N],[17,"RANGE_HANGUL_SYLLABLE",E,"A set of ranges that corresponds to the set of all Hangul…",N,N],[17,"RANGE_IDEOGRAPH",E,"A set of ranges that corresponds to the set of all…",N,N]],"p":[]};
searchIndex["vec_map"]={"doc":"A simple map based on a vector for small integer keys.…","i":[[3,"VecMap","vec_map","A map optimized for small integer keys.",N,N],[3,R[72],E,"A vacant Entry.",N,N],[3,R[259],E,"An occupied Entry.",N,N],[3,"Iter",E,"An iterator over the key-value pairs of a map.",N,N],[3,R[262],E,"An iterator over the key-value pairs of a map, with the…",N,N],[3,"Keys",E,"An iterator over the keys of a map.",N,N],[3,"Values",E,R[256],N,N],[3,R[260],E,R[256],N,N],[3,R[60],E,"A consuming iterator over the key-value pairs of a map.",N,N],[3,"Drain",E,"A draining iterator over the key-value pairs of a map.",N,N],[4,"Entry",E,"A view into a single entry in a map, which may either be…",N,N],[13,"Vacant",E,"A vacant Entry",0,N],[13,"Occupied",E,"An occupied Entry",0,N],[11,"new",E,"Creates an empty `VecMap`.",1,[[],["self"]]],[11,R[73],E,"Creates an empty `VecMap` with space for at least…",1,[[[R[9]]],["self"]]],[11,R[74],E,"Returns the number of elements the `VecMap` can hold…",1,[[["self"]],[R[9]]]],[11,"reserve_len",E,"Reserves capacity for the given `VecMap` to contain `len`…",1,[[["self"],[R[9]]]]],[11,"reserve_len_exact",E,"Reserves the minimum capacity for the given `VecMap` to…",1,[[["self"],[R[9]]]]],[11,R[76],E,"Trims the `VecMap` of any excess capacity.",1,[[["self"]]]],[11,"keys",E,"Returns an iterator visiting all keys in ascending order…",1,[[["self"]],["keys"]]],[11,"values",E,R[257],1,[[["self"]],["values"]]],[11,"values_mut",E,R[257],1,[[["self"]],["valuesmut"]]],[11,"iter",E,R[258],1,[[["self"]],["iter"]]],[11,R[261],E,R[258],1,[[["self"]],["itermut"]]],[11,"append",E,"Moves all elements from `other` into the map while…",1,[[["self"]]]],[11,"split_off",E,"Splits the collection into two at the given key.",1,[[["self"],[R[9]]],["self"]]],[11,"drain",E,R[258],1,[[["self"]],["drain"]]],[11,"len",E,"Returns the number of elements in the map.",1,[[["self"]],[R[9]]]],[11,R[69],E,"Returns true if the map contains no elements.",1,[[["self"]],["bool"]]],[11,"clear",E,"Clears the map, removing all key-value pairs.",1,[[["self"]]]],[11,"get",E,"Returns a reference to the value corresponding to the key.",1,[[["self"],[R[9]]],[[R[52]],["v"]]]],[11,R[2362],E,"Returns true if the map contains a value for the specified…",1,[[["self"],[R[9]]],["bool"]]],[11,R[111],E,"Returns a mutable reference to the value corresponding to…",1,[[["self"],[R[9]]],[["v"],[R[52]]]]],[11,"insert",E,"Inserts a key-value pair into the map. If the key already…",1,[[["self"],["v"],[R[9]]],[R[52]]]],[11,"remove",E,"Removes a key from the map, returning the value at the key…",1,[[["self"],[R[9]]],[R[52]]]],[11,"entry",E,"Gets the given key's corresponding entry in the map for…",1,[[["self"],[R[9]]],["entry"]]],[11,"retain",E,R[263],1,[[["self"],["f"]]]],[11,"or_insert",E,"Ensures a value is in the entry by inserting the default…",0,[[["v"]],["v"]]],[11,"or_insert_with",E,"Ensures a value is in the entry by inserting the result of…",0,[[["fnonce"]],["v"]]],[11,"insert",E,"Sets the value of the entry with the VacantEntry's key,…",2,[[["v"]],["v"]]],[11,"get",E,"Gets a reference to the value in the entry.",3,[[["self"]],["v"]]],[11,R[111],E,"Gets a mutable reference to the value in the entry.",3,[[["self"]],["v"]]],[11,"into_mut",E,"Converts the entry into a mutable reference to its value.",3,[[],["v"]]],[11,"insert",E,"Sets the value of the entry with the OccupiedEntry's key,…",3,[[["self"],["v"]],["v"]]],[11,"remove",E,"Takes the value of the entry out of the map, and returns it.",3,[[],["v"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[48],E,E,1,[[],["i"]]],[11,"into",E,E,1,[[],[U]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,[[[T],["self"]]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[48],E,E,4,[[],["i"]]],[11,"into",E,E,4,[[],[U]]],[11,R[16],E,E,4,[[["self"]],[T]]],[11,R[17],E,E,4,[[[T],["self"]]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[48],E,E,5,[[],["i"]]],[11,"into",E,E,5,[[],[U]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,R[18],E,E,5,[[["self"]],[R[40]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[48],E,E,6,[[],["i"]]],[11,"into",E,E,6,[[],[U]]],[11,R[16],E,E,6,[[["self"]],[T]]],[11,R[17],E,E,6,[[[T],["self"]]]],[11,R[11],E,E,6,[[[U]],[R[12]]]],[11,R[39],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[],[R[12]]]],[11,R[18],E,E,6,[[["self"]],[R[40]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[48],E,E,7,[[],["i"]]],[11,"into",E,E,7,[[],[U]]],[11,R[16],E,E,7,[[["self"]],[T]]],[11,R[17],E,E,7,[[[T],["self"]]]],[11,R[11],E,E,7,[[[U]],[R[12]]]],[11,R[39],E,E,7,[[["self"]],[T]]],[11,R[13],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[],[R[12]]]],[11,R[18],E,E,7,[[["self"]],[R[40]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[48],E,E,8,[[],["i"]]],[11,"into",E,E,8,[[],[U]]],[11,R[11],E,E,8,[[[U]],[R[12]]]],[11,R[39],E,E,8,[[["self"]],[T]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[],[R[12]]]],[11,R[18],E,E,8,[[["self"]],[R[40]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[48],E,E,9,[[],["i"]]],[11,"into",E,E,9,[[],[U]]],[11,R[11],E,E,9,[[[U]],[R[12]]]],[11,R[39],E,E,9,[[["self"]],[T]]],[11,R[13],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[],[R[12]]]],[11,R[18],E,E,9,[[["self"]],[R[40]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[48],E,E,10,[[],["i"]]],[11,"into",E,E,10,[[],[U]]],[11,R[11],E,E,10,[[[U]],[R[12]]]],[11,R[39],E,E,10,[[["self"]],[T]]],[11,R[13],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[],[R[12]]]],[11,R[18],E,E,10,[[["self"]],[R[40]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"eq",E,E,1,[[["self"]],["bool"]]],[11,R[49],E,E,4,[[["self"]],[R[52]]]],[11,R[49],E,E,5,[[["self"]],[R[52]]]],[11,R[49],E,E,10,[[["self"]],[R[52]]]],[11,R[49],E,E,6,[[["self"]],[[R[52],[R[9]]],[R[9]]]]],[11,R[49],E,E,7,[[["self"]],[["v"],[R[52]]]]],[11,R[49],E,E,8,[[["self"]],[["v"],[R[52]]]]],[11,R[49],E,E,9,[[["self"]],[R[52]]]],[11,"clone",E,E,1,[[["self"]],["self"]]],[11,R[811],E,E,1,[[["self"],["self"]]]],[11,"clone",E,E,4,[[["self"]],["iter"]]],[11,"clone",E,E,6,[[["self"]],["keys"]]],[11,"clone",E,E,7,[[["self"]],["values"]]],[11,"cmp",E,E,1,[[["self"]],[R[51]]]],[11,R[48],E,R[258],1,[[],[R[800]]]],[11,"extend",E,E,1,[[["self"],[R[50]]]]],[11,"extend",E,E,1,[[["self"],[R[50]]]]],[11,R[264],E,E,1,[[["self"]],[[R[52],[R[51]]],[R[51]]]]],[11,"next",E,E,4,[[["self"]],[R[52]]]],[11,R[53],E,E,4,[[["self"]]]],[11,"next",E,E,5,[[["self"]],[R[52]]]],[11,R[53],E,E,5,[[["self"]]]],[11,"next",E,E,10,[[["self"]],[R[52]]]],[11,R[53],E,E,10,[[["self"]]]],[11,"next",E,E,6,[[["self"]],[[R[52],[R[9]]],[R[9]]]]],[11,R[53],E,E,6,[[["self"]]]],[11,"next",E,E,7,[[["self"]],[["v"],[R[52]]]]],[11,R[53],E,E,7,[[["self"]]]],[11,"next",E,E,8,[[["self"]],[["v"],[R[52]]]]],[11,R[53],E,E,8,[[["self"]]]],[11,"next",E,E,9,[[["self"]],[R[52]]]],[11,R[53],E,E,9,[[["self"]]]],[11,R[79],E,E,1,[[],["self"]]],[11,"fmt",E,E,1,[[["self"],[R[29]]],[R[12]]]],[11,"index",E,E,1,[[["self"],[R[9]]],["v"]]],[11,"index",E,E,1,[[["self"],[R[9]]],["v"]]],[11,R[55],E,E,1,[[["self"],[R[9]]],["v"]]],[11,R[55],E,E,1,[[["self"],[R[9]]],["v"]]],[11,"hash",E,E,1,[[["h"],["self"]]]],[11,R[187],E,E,1,[[[R[50]]],["self"]]]],"p":[[4,"Entry"],[3,"VecMap"],[3,R[72]],[3,R[259]],[3,"Iter"],[3,R[262]],[3,"Keys"],[3,"Values"],[3,R[260]],[3,R[60]],[3,"Drain"]]};
searchIndex["void"]={"doc":"Void","i":[[4,"Void","void","The empty type for cases which can't occur.",N,N],[5,R[267],E,"A safe version of `intrinsincs::unreachable`.",N,[[["void"]]]],[8,R[265],E,"Extensions to `Result<T, Void>`",N,N],[10,"void_unwrap",E,"Get the value out of a wrapper.",0,[[],[T]]],[8,R[266],E,"Extensions to `Result<Void, E>`",N,N],[10,"void_unwrap_err",E,"Get the error out of a wrapper.",1,[[],["e"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[17],E,E,2,[[[T],["self"]]]],[11,R[170],E,E,2,[[["self"]],["string"]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"eq",E,E,2,[[[T],["self"]],["bool"]]],[11,"clone",E,E,2,[[["self"]],["void"]]],[11,R[264],E,E,2,[[[T],["self"]],[[R[52],[R[51]]],[R[51]]]]],[11,"fmt",E,E,2,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,2,[[["self"],[R[29]]],[R[12]]]],[11,R[30],E,E,2,[[["self"]],["str"]]],[11,"cause",E,E,2,[[["self"]],[[R[52],["error"]],["error"]]]]],"p":[[8,R[265]],[8,R[266]],[4,"Void"]]};
searchIndex["webpki"]={"doc":"webpki: Web PKI X.509 Certificate Validation.","i":[[3,"DNSNameRef","webpki","A reference to a DNS Name suitable for use in the TLS…",N,N],[3,"DNSName",E,"A DNS Name suitable for use in the TLS Server Name…",N,N],[3,R[2927],E,"A signature algorithm.",N,N],[3,"Time",E,"The time type.",N,N],[3,R[2926],E,"An end-entity certificate.",N,N],[3,R[2923],E,"A trust anchor (a.k.a. root CA).",N,N],[12,"subject",E,"The value of the `subject` field of the trust anchor.",0,N],[12,"spki",E,"The value of the `subjectPublicKeyInfo` field of the trust…",0,N],[12,"name_constraints",E,"The value of a DER-encoded NameConstraints, containing…",0,N],[3,R[2924],E,"Trust anchors which may be used for authenticating servers.",N,N],[12,"0",E,E,1,N],[3,R[2925],E,"Trust anchors which may be used for authenticating clients.",N,N],[12,"0",E,E,2,N],[4,"Error",E,"An error that occurs during certificate validation or name…",N,N],[13,"BadDER",E,"The encoding of some ASN.1 DER-encoded item is invalid.",3,N],[13,"BadDERTime",E,"The encoding of an ASN.1 DER-encoded time is invalid.",3,N],[13,"CAUsedAsEndEntity",E,"A CA certificate is veing used as an end-entity certificate.",3,N],[13,"CertExpired",E,"The certificate is expired; i.e. the time it is being…",3,N],[13,"CertNotValidForName",E,"The certificate is not valid for the name it is being…",3,N],[13,"CertNotValidYet",E,"The certificate is not valid yet; i.e. the time it is…",3,N],[13,"EndEntityUsedAsCA",E,"An end-entity certificate is being used as a CA certificate.",3,N],[13,"ExtensionValueInvalid",E,"An X.509 extension is invalid.",3,N],[13,"InvalidCertValidity",E,"The certificate validity period (notBefore, notAfter) is…",3,N],[13,"InvalidSignatureForPublicKey",E,"The signature is invalid for the given public key.",3,N],[13,"NameConstraintViolation",E,"The certificate violates one or more name constraints.",3,N],[13,"PathLenConstraintViolated",E,"The certificate violates one or more path length…",3,N],[13,"SignatureAlgorithmMismatch",E,"The algorithm in the TBSCertificate \"signature\" field of a…",3,N],[13,"RequiredEKUNotFound",E,"The certificate is not valid for the Extended Key Usage…",3,N],[13,"UnknownIssuer",E,"A valid issuer for the certificate could not be found.",3,N],[13,"UnsupportedCertVersion",E,"The certificate is not a v3 X.509 certificate.",3,N],[13,"UnsupportedCriticalExtension",E,"The certificate contains an unsupported critical extension.",3,N],[13,"UnsupportedSignatureAlgorithmForPublicKey",E,"The signature's algorithm does not match the algorithm of…",3,N],[13,"UnsupportedSignatureAlgorithm",E,"The signature algorithm for a signature is not in the set…",3,N],[11,"as_ref",E,"Returns a `DNSNameRef` that refers to this `DNSName`.",4,[[["self"]],[R[2913]]]],[11,"try_from_ascii",E,R[2912],5,[[["input"]],[R[12]]]],[11,"try_from_ascii_str",E,R[2912],5,[[["str"]],[[R[2913]],[R[12],[R[2913]]]]]],[11,R[16],E,"Constructs a `DNSName` from this `DNSNameRef`",5,[[["self"]],["dnsname"]]],[11,R[11],E,"Create a `webpki::Time` from a `std::time::SystemTime`.",6,[[[R[3437]]],[["time"],[R[12],["time",R[2032]]],[R[2032]]]]],[11,"from_seconds_since_unix_epoch",E,"Create a `webpki::Time` from a unix timestamp.",6,[[["u64"]],["time"]]],[0,"trust_anchor_util",E,"Utilities for efficiently embedding trust anchors in…",N,N],[5,"cert_der_as_trust_anchor","webpki::trust_anchor_util","Interprets the given DER-encoded certificate as a…",N,[[["input"]],[[R[12],[R[2914],"error"]],[R[2914]],["error"]]]],[5,"generate_code_for_trust_anchors",E,"Generates code for hard-coding the given trust anchors…",N,[[["str"]],["string"]]],[7,"ECDSA_P256_SHA256","webpki","ECDSA signatures using the P-256 curve and SHA-256.",N,N],[7,"ECDSA_P256_SHA384",E,"ECDSA signatures using the P-256 curve and SHA-384.…",N,N],[7,"ECDSA_P384_SHA256",E,"ECDSA signatures using the P-384 curve and SHA-256.…",N,N],[7,"ECDSA_P384_SHA384",E,"ECDSA signatures using the P-384 curve and SHA-384.",N,N],[7,R[2915],E,"RSA PKCS#1 1.5 signatures using SHA-1 for keys of…",N,N],[7,R[2916],E,"RSA PKCS#1 1.5 signatures using SHA-256 for keys of…",N,N],[7,R[2917],E,R[2920],N,N],[7,R[2918],E,"RSA PKCS#1 1.5 signatures using SHA-512 for keys of…",N,N],[7,R[2919],E,R[2920],N,N],[7,"RSA_PSS_2048_8192_SHA256_LEGACY_KEY",E,"RSA PSS signatures using SHA-256 for keys of 2048-8192…",N,N],[7,"RSA_PSS_2048_8192_SHA384_LEGACY_KEY",E,"RSA PSS signatures using SHA-384 for keys of 2048-8192…",N,N],[7,"RSA_PSS_2048_8192_SHA512_LEGACY_KEY",E,"RSA PSS signatures using SHA-512 for keys of 2048-8192…",N,N],[11,"from",E,"Parse the ASN.1 DER-encoded X.509 encoding of the…",7,[[["input"]],[[R[2921]],[R[12],[R[2921],"error"]],["error"]]]],[11,"verify_is_valid_tls_server_cert",E,R[2922],7,[[["time"],["self"],[R[4348]]],[[R[12],["error"]],["error"]]]],[11,"verify_is_valid_tls_client_cert",E,R[2922],7,[[["tlsclienttrustanchors"],["time"],["self"]],[[R[12],["error"]],["error"]]]],[11,"verify_is_valid_for_dns_name",E,"Verifies that the certificate is valid for the given DNS…",7,[[[R[2913]],["self"]],[[R[12],["error"]],["error"]]]],[11,"verify_is_valid_for_at_least_one_dns_name",E,"Verifies that the certificate is valid for at least one of…",7,[[["self"],["names"]],[["vec",[R[2913]]],["error"],[R[12],["vec","error"]]]]],[11,"verify_signature",E,"Verifies the signature `signature` of message `msg` using…",7,[[["input"],[R[4108]],["self"]],[[R[12],["error"]],["error"]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,"into",E,E,5,[[],[U]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[18],E,E,5,[[["self"]],[R[40]]]],[11,R[16],E,E,5,[[["self"]],[T]]],[11,R[17],E,E,5,[[[T],["self"]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,"into",E,E,4,[[],[U]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,R[16],E,E,4,[[["self"]],[T]]],[11,R[17],E,E,4,[[[T],["self"]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[11],E,E,8,[[[U]],[R[12]]]],[11,R[14],E,E,8,[[],[R[12]]]],[11,"into",E,E,8,[[],[U]]],[11,R[39],E,E,8,[[["self"]],[T]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[18],E,E,8,[[["self"]],[R[40]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[11],E,E,6,[[[U]],[R[12]]]],[11,R[14],E,E,6,[[],[R[12]]]],[11,"into",E,E,6,[[],[U]]],[11,R[39],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[18],E,E,6,[[["self"]],[R[40]]]],[11,R[16],E,E,6,[[["self"]],[T]]],[11,R[17],E,E,6,[[[T],["self"]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[11],E,E,7,[[[U]],[R[12]]]],[11,R[14],E,E,7,[[],[R[12]]]],[11,"into",E,E,7,[[],[U]]],[11,R[39],E,E,7,[[["self"]],[T]]],[11,R[13],E,E,7,[[["self"]],[T]]],[11,R[18],E,E,7,[[["self"]],[R[40]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,"into",E,E,0,[[],[U]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,"into",E,E,1,[[],[U]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,"into",E,E,2,[[],[U]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,"into",E,E,3,[[],[U]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[17],E,E,3,[[[T],["self"]]]],[11,"eq",E,E,4,[[["dnsname"],["self"]],["bool"]]],[11,"ne",E,E,4,[[["dnsname"],["self"]],["bool"]]],[11,"eq",E,E,6,[[["time"],["self"]],["bool"]]],[11,"ne",E,E,6,[[["time"],["self"]],["bool"]]],[11,"eq",E,E,3,[[["self"],["error"]],["bool"]]],[11,R[264],E,E,6,[[["time"],["self"]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,6,[[["time"],["self"]],["bool"]]],[11,"le",E,E,6,[[["time"],["self"]],["bool"]]],[11,"gt",E,E,6,[[["time"],["self"]],["bool"]]],[11,"ge",E,E,6,[[["time"],["self"]],["bool"]]],[11,"from",E,E,4,[[[R[2913]]],["self"]]],[11,"fmt",E,E,4,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,5,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,6,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,3,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,1,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,2,[[["self"],[R[29]]],[R[12]]]],[11,"hash",E,E,4,[[["self"],["__h"]]]],[11,"clone",E,E,4,[[["self"]],["dnsname"]]],[11,"clone",E,E,5,[[["self"]],[R[2913]]]],[11,"clone",E,E,6,[[["self"]],["time"]]],[11,"clone",E,E,3,[[["self"]],["error"]]],[11,"into",E,E,5,[[],["str"]]],[11,"as_ref",E,E,4,[[["self"]],["str"]]]],"p":[[3,R[2923]],[3,R[2924]],[3,R[2925]],[4,"Error"],[3,"DNSName"],[3,"DNSNameRef"],[3,"Time"],[3,R[2926]],[3,R[2927]]]};
searchIndex["windows_service"]={"doc":E,"i":[],"p":[]};
searchIndex[R[0]]={"doc":R[310],"i":[[3,"Error",R[0],R[311],N,N],[12,"kind",E,R[312],0,N],[12,"msg",E,R[313],0,N],[4,R[32],E,R[314],N,N],[13,R[315],E,R[316],1,N],[13,R[317],E,R[318],1,N],[13,R[319],E,R[320],1,N],[13,R[89],E,R[321],1,N],[11,R[322],E,R[323],1,[[],["bool"]]],[11,R[324],E,R[325],1,[[],["bool"]]],[11,R[30],E,R[326],1,[[],["str"]]],[11,"new",E,R[327],0,[[[R[1]],["str"]],["self"]]],[11,R[328],E,R[329],0,[[["e"],[R[1]],["str"]],["self"]]],[11,R[330],E,R[331],0,[[["self"]],[[R[52],["box"]],["box",[R[31]]]]]],[0,"block",E,R[332],N,N],[3,R[33],R[15],R[2],N,N],[12,"core",E,R[3],2,N],[3,R[34],E,R[2],N,N],[12,"core",E,R[3],3,N],[8,R[35],E,R[333],N,N],[16,"Item",E,R[334],4,N],[16,"Results",E,R[335],4,N],[10,R[2093],E,R[336],4,[[["self"]]]],[11,"new",E,R[4],2,[[["r"]],[R[27]]]],[11,"index",E,R[5],2,[[["self"]],[R[9]]]],[11,"reset",E,R[6],2,[[["self"]]]],[11,R[7],E,R[8],2,[[["self"],[R[9]]]]],[11,"new",E,R[4],3,[[["r"]],[R[28]]]],[11,"index",E,R[5],3,[[["self"]],[R[9]]]],[11,"reset",E,R[6],3,[[["self"]]]],[11,R[7],E,R[8],3,[[["self"],[R[9]]]]],[0,"impls",R[0],R[337],N,N],[5,R[338],R[339],R[340],N,[[["r"]],["u64"]]],[5,R[341],E,R[342],N,[[["r"]]]],[5,R[343],E,R[10],N,[[]]],[5,R[344],E,R[10],N,[[]]],[5,R[345],E,R[346],N,[[["r"]],["u32"]]],[5,R[347],E,R[348],N,[[["r"]],["u64"]]],[0,"le",R[0],R[349],N,N],[5,R[350],R[351],R[352],N,[[]]],[5,R[353],E,R[354],N,[[]]],[8,"RngCore",R[0],R[355],N,N],[10,R[19],E,R[356],5,[[["self"]],["u32"]]],[10,R[20],E,R[357],5,[[["self"]],["u64"]]],[10,R[21],E,R[358],5,[[["self"]]]],[10,R[22],E,R[359],5,[[["self"]],[[R[12],["error"]],["error"]]]],[8,R[360],E,R[361],N,N],[8,R[36],E,R[362],N,N],[16,"Seed",E,R[363],6,N],[10,R[23],E,R[364],6,[[],["self"]]],[11,R[24],E,R[365],6,[[["u64"]],["self"]]],[11,R[25],E,R[366],6,[[[R[26]]],[[R[12],["error"]],["error"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[170],E,E,0,[[["self"]],["string"]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,[[[T],["self"]]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",R[15],E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[17],E,E,2,[[[T],["self"]]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[17],E,E,3,[[[T],["self"]]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,R[19],E,E,2,[[["self"]],["u32"]]],[11,R[20],E,E,2,[[["self"]],["u64"]]],[11,R[21],E,E,2,[[["self"]]]],[11,R[22],E,E,2,[[["self"]],[[R[12],["error"]],["error"]]]],[11,R[19],E,E,3,[[["self"]],["u32"]]],[11,R[20],E,E,3,[[["self"]],["u64"]]],[11,R[21],E,E,3,[[["self"]]]],[11,R[22],E,E,3,[[["self"]],[[R[12],["error"]],["error"]]]],[11,R[23],E,E,2,[[],["self"]]],[11,R[24],E,E,2,[[["u64"]],["self"]]],[11,R[25],E,E,2,[[[R[26]]],[[R[12],["error"]],["error"]]]],[11,R[23],E,E,3,[[],["self"]]],[11,R[24],E,E,3,[[["u64"]],["self"]]],[11,R[25],E,E,3,[[[R[26]]],[[R[12],["error"]],["error"]]]],[11,"eq",R[0],E,1,[[["self"],[R[1]]],["bool"]]],[11,"clone",E,E,1,[[["self"]],[R[1]]]],[11,"clone",R[15],E,2,[[["self"]],[R[27]]]],[11,"clone",E,E,3,[[["self"]],[R[28]]]],[11,"fmt",R[0],E,1,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,0,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[15],E,2,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,3,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[0],E,0,[[["self"],[R[29]]],[R[12]]]],[11,R[30],E,E,0,[[["self"]],["str"]]],[11,"cause",E,E,0,[[["self"]],[[R[31]],[R[52],[R[31]]]]]],[11,"read",E,E,5,[[["self"]],[[R[12],[R[9],"error"]],["error"],[R[9]]]]]],"p":[[3,"Error"],[4,R[32]],[3,R[33]],[3,R[34]],[8,R[35]],[8,"RngCore"],[8,R[36]]]};
searchIndex[R[0]]={"doc":R[310],"i":[[4,R[32],R[0],R[314],N,N],[13,R[315],E,R[316],0,N],[13,R[317],E,R[318],0,N],[13,R[319],E,R[320],0,N],[13,R[89],E,R[321],0,N],[3,"Error",E,R[311],N,N],[12,"kind",E,R[312],1,N],[12,"msg",E,R[313],1,N],[0,"block",E,R[332],N,N],[8,R[35],R[15],R[333],N,N],[16,"Item",E,R[334],2,N],[16,"Results",E,R[335],2,N],[10,R[2093],E,R[336],2,[[["self"]]]],[3,R[33],E,R[2],N,N],[12,"core",E,R[3],3,N],[3,R[34],E,R[2],N,N],[12,"core",E,R[3],4,N],[0,"impls",R[0],R[337],N,N],[5,R[338],R[339],R[340],N,[[["r"]],["u64"]]],[5,R[341],E,R[342],N,[[["r"]]]],[5,R[343],E,R[10],N,[[]]],[5,R[344],E,R[10],N,[[]]],[5,R[345],E,R[346],N,[[["r"]],["u32"]]],[5,R[347],E,R[348],N,[[["r"]],["u64"]]],[0,"le",R[0],R[349],N,N],[5,R[350],R[351],R[352],N,[[]]],[5,R[353],E,R[354],N,[[]]],[8,"RngCore",R[0],R[355],N,N],[10,R[19],E,R[356],5,[[["self"]],["u32"]]],[10,R[20],E,R[357],5,[[["self"]],["u64"]]],[10,R[21],E,R[358],5,[[["self"]]]],[10,R[22],E,R[359],5,[[["self"]],[[R[12],["error"]],["error"]]]],[8,R[360],E,R[361],N,N],[8,R[36],E,R[362],N,N],[16,"Seed",E,R[363],6,N],[10,R[23],E,R[364],6,[[],["self"]]],[11,R[24],E,R[365],6,[[["u64"]],["self"]]],[11,R[25],E,R[366],6,[[["r"]],[[R[12],["error"]],["error"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,"into",E,E,0,[[],[U]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[[T],["self"]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,"into",E,E,1,[[],[U]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,R[170],E,E,1,[[["self"]],["string"]]],[11,"from",R[15],E,3,[[[T]],[T]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,"into",E,E,3,[[],[U]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[17],E,E,3,[[[T],["self"]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,"into",E,E,4,[[],[U]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,R[16],E,E,4,[[["self"]],[T]]],[11,R[17],E,E,4,[[[T],["self"]]]],[11,R[23],E,E,3,[[],[R[27]]]],[11,R[24],E,E,3,[[["u64"]],[R[27]]]],[11,R[25],E,E,3,[[["s"]],[["error"],[R[12],[R[27],"error"]],[R[27]]]]],[11,R[23],E,E,4,[[],[R[28]]]],[11,R[24],E,E,4,[[["u64"]],[R[28]]]],[11,R[25],E,E,4,[[["s"]],[[R[28]],["error"],[R[12],[R[28],"error"]]]]],[11,R[19],E,E,3,[[["self"]],["u32"]]],[11,R[20],E,E,3,[[["self"]],["u64"]]],[11,R[21],E,E,3,[[["self"]]]],[11,R[22],E,E,3,[[["self"]],[[R[12],["error"]],["error"]]]],[11,R[19],E,E,4,[[["self"]],["u32"]]],[11,R[20],E,E,4,[[["self"]],["u64"]]],[11,R[21],E,E,4,[[["self"]]]],[11,R[22],E,E,4,[[["self"]],[[R[12],["error"]],["error"]]]],[11,"clone",E,E,4,[[["self"]],[R[28]]]],[11,"clone",R[0],E,0,[[["self"]],[R[1]]]],[11,"clone",R[15],E,3,[[["self"]],[R[27]]]],[11,"fmt",R[0],E,1,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,0,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[15],E,4,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,3,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[0],E,1,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,R[30],E,E,1,[[["self"]],["str"]]],[11,"cause",E,E,1,[[["self"]],[[R[52],["error"]],["error"]]]],[11,"eq",E,E,0,[[[R[1]],["self"]],["bool"]]],[11,"read",E,E,5,[[["self"]],[["error"],[R[12],[R[9],"error"]],[R[9]]]]],[11,R[322],E,R[323],0,[[],["bool"]]],[11,R[324],E,R[325],0,[[],["bool"]]],[11,R[30],E,R[326],0,[[],["str"]]],[11,"new",E,R[327],1,[[[R[1]],["str"]],["error"]]],[11,R[328],E,R[329],1,[[["e"],[R[1]],["str"]],["error"]]],[11,R[330],E,R[331],1,[[["self"]],[[R[52],["box"]],["box",["error"]]]]],[11,"new",R[15],R[4],3,[[["r"]],[R[27]]]],[11,"index",E,R[5],3,[[["self"]],[R[9]]]],[11,"reset",E,R[6],3,[[["self"]]]],[11,R[7],E,R[8],3,[[["self"],[R[9]]]]],[11,"new",E,R[4],4,[[["r"]],[R[28]]]],[11,"index",E,R[5],4,[[["self"]],[R[9]]]],[11,"reset",E,R[6],4,[[["self"]]]],[11,R[7],E,R[8],4,[[["self"],[R[9]]]]]],"p":[[4,R[32]],[3,"Error"],[8,R[35]],[3,R[33]],[3,R[34]],[8,"RngCore"],[8,R[36]]]};
searchIndex[R[1148]]={"doc":"Numeric traits for generic mathematics","i":[[3,R[1158],R[1148],E,N,N],[12,"kind",E,E,0,N],[4,R[1159],E,E,N,N],[13,"Empty",E,E,1,N],[13,"Invalid",E,E,1,N],[5,"clamp",E,"A value bounded by a minimum and a maximum",N,[[["partialord"]],["partialord"]]],[0,"bounds",E,E,N,N],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",N,N],[10,R[3438],E,"returns the smallest finite number this type can represent",2,[[],["self"]]],[10,R[3439],E,"returns the largest finite number this type can represent",2,[[],["self"]]],[0,"cast",R[1148],E,N,N],[5,"cast","num_traits::cast","Cast from one machine scalar to another.",N,[[["numcast"]],[[R[52]],["numcast"]]]],[8,R[1160],E,"A generic trait for converting a value to a number.",N,N],[11,"to_isize",E,"Converts the value of `self` to an `isize`.",3,[[["self"]],[["isize"],[R[52],["isize"]]]]],[11,"to_i8",E,"Converts the value of `self` to an `i8`.",3,[[["self"]],[["i8"],[R[52],["i8"]]]]],[11,"to_i16",E,"Converts the value of `self` to an `i16`.",3,[[["self"]],[["i16"],[R[52],["i16"]]]]],[11,"to_i32",E,"Converts the value of `self` to an `i32`.",3,[[["self"]],[["i32"],[R[52],["i32"]]]]],[10,"to_i64",E,"Converts the value of `self` to an `i64`.",3,[[["self"]],[["i64"],[R[52],["i64"]]]]],[11,"to_i128",E,"Converts the value of `self` to an `i128`.",3,[[["self"]],[["i128"],[R[52],["i128"]]]]],[11,"to_usize",E,"Converts the value of `self` to a `usize`.",3,[[["self"]],[[R[52],[R[9]]],[R[9]]]]],[11,"to_u8",E,"Converts the value of `self` to an `u8`.",3,[[["self"]],[["u8"],[R[52],["u8"]]]]],[11,"to_u16",E,"Converts the value of `self` to an `u16`.",3,[[["self"]],[["u16"],[R[52],["u16"]]]]],[11,"to_u32",E,"Converts the value of `self` to an `u32`.",3,[[["self"]],[["u32"],[R[52],["u32"]]]]],[10,"to_u64",E,"Converts the value of `self` to an `u64`.",3,[[["self"]],[["u64"],[R[52],["u64"]]]]],[11,"to_u128",E,"Converts the value of `self` to an `u128`.",3,[[["self"]],[[R[52],["u128"]],["u128"]]]],[11,"to_f32",E,"Converts the value of `self` to an `f32`.",3,[[["self"]],[[R[52],["f32"]],["f32"]]]],[11,"to_f64",E,"Converts the value of `self` to an `f64`.",3,[[["self"]],[[R[52],["f64"]],["f64"]]]],[8,R[1161],E,"A generic trait for converting a number to a value.",N,N],[11,"from_isize",E,"Convert an `isize` to return an optional value of this…",4,[[["isize"]],[R[52]]]],[11,"from_i8",E,"Convert an `i8` to return an optional value of this type.…",4,[[["i8"]],[R[52]]]],[11,"from_i16",E,"Convert an `i16` to return an optional value of this type.…",4,[[["i16"]],[R[52]]]],[11,"from_i32",E,"Convert an `i32` to return an optional value of this type.…",4,[[["i32"]],[R[52]]]],[10,"from_i64",E,"Convert an `i64` to return an optional value of this type.…",4,[[["i64"]],[R[52]]]],[11,"from_i128",E,"Convert an `i128` to return an optional value of this…",4,[[["i128"]],[R[52]]]],[11,R[2261],E,"Convert a `usize` to return an optional value of this…",4,[[[R[9]]],[R[52]]]],[11,"from_u8",E,"Convert an `u8` to return an optional value of this type.…",4,[[["u8"]],[R[52]]]],[11,"from_u16",E,"Convert an `u16` to return an optional value of this type.…",4,[[["u16"]],[R[52]]]],[11,"from_u32",E,"Convert an `u32` to return an optional value of this type.…",4,[[["u32"]],[R[52]]]],[10,"from_u64",E,"Convert an `u64` to return an optional value of this type.…",4,[[["u64"]],[R[52]]]],[11,"from_u128",E,"Convert an `u128` to return an optional value of this…",4,[[["u128"]],[R[52]]]],[11,"from_f32",E,"Convert a `f32` to return an optional value of this type.…",4,[[["f32"]],[R[52]]]],[11,"from_f64",E,"Convert a `f64` to return an optional value of this type.…",4,[[["f64"]],[R[52]]]],[8,"NumCast",E,"An interface for casting between machine scalars.",N,N],[10,"from",E,"Creates a number from another value that can be converted…",5,[[["toprimitive"]],[R[52]]]],[8,R[1162],E,"A generic interface for casting between machine scalars…",N,N],[10,"as_",E,"Convert a value to another, using the `as` operator.",6,[[],[T]]],[0,"float",R[1148],E,N,N],[8,"FloatCore","num_traits::float","Generic trait for floating point numbers that works with…",N,N],[10,"infinity",E,"Returns positive infinity.",7,[[],["self"]]],[10,"neg_infinity",E,"Returns negative infinity.",7,[[],["self"]]],[10,"nan",E,"Returns NaN.",7,[[],["self"]]],[10,"neg_zero",E,"Returns `-0.0`.",7,[[],["self"]]],[10,R[3438],E,"Returns the smallest finite value that this type can…",7,[[],["self"]]],[10,"min_positive_value",E,"Returns the smallest positive, normalized value that this…",7,[[],["self"]]],[10,"epsilon",E,"Returns epsilon, a small positive value.",7,[[],["self"]]],[10,R[3439],E,"Returns the largest finite value that this type can…",7,[[],["self"]]],[11,"is_nan",E,"Returns `true` if the number is NaN.",7,[[],["bool"]]],[11,"is_infinite",E,"Returns `true` if the number is infinite.",7,[[],["bool"]]],[11,"is_finite",E,"Returns `true` if the number is neither infinite or NaN.",7,[[],["bool"]]],[11,"is_normal",E,"Returns `true` if the number is neither zero, infinite,…",7,[[],["bool"]]],[10,"classify",E,"Returns the floating point category of the number. If only…",7,[[],["fpcategory"]]],[11,"floor",E,"Returns the largest integer less than or equal to a number.",7,[[],["self"]]],[11,"ceil",E,"Returns the smallest integer greater than or equal to a…",7,[[],["self"]]],[11,"round",E,"Returns the nearest integer to a number. Round half-way…",7,[[],["self"]]],[11,"trunc",E,"Return the integer part of a number.",7,[[],["self"]]],[11,"fract",E,"Returns the fractional part of a number.",7,[[],["self"]]],[11,"abs",E,"Computes the absolute value of `self`. Returns…",7,[[],["self"]]],[11,"signum",E,"Returns a number that represents the sign of `self`.",7,[[],["self"]]],[11,"is_sign_positive",E,"Returns `true` if `self` is positive, including `+0.0` and…",7,[[],["bool"]]],[11,"is_sign_negative",E,"Returns `true` if `self` is negative, including `-0.0` and…",7,[[],["bool"]]],[11,"min",E,"Returns the minimum of the two numbers.",7,[[],["self"]]],[11,"max",E,"Returns the maximum of the two numbers.",7,[[],["self"]]],[11,"recip",E,"Returns the reciprocal (multiplicative inverse) of the…",7,[[],["self"]]],[11,"powi",E,"Raise a number to an integer power.",7,[[["i32"]],["self"]]],[10,"to_degrees",E,"Converts to degrees, assuming the number is in radians.",7,[[],["self"]]],[10,"to_radians",E,"Converts to radians, assuming the number is in degrees.",7,[[],["self"]]],[10,"integer_decode",E,"Returns the mantissa, base 2 exponent, and sign as…",7,[[]]],[8,"FloatConst",E,E,N,N],[10,"E",E,"Return Euler’s number.",8,[[],["self"]]],[10,"FRAC_1_PI",E,"Return `1.0 / π`.",8,[[],["self"]]],[10,"FRAC_1_SQRT_2",E,"Return `1.0 / sqrt(2.0)`.",8,[[],["self"]]],[10,"FRAC_2_PI",E,"Return `2.0 / π`.",8,[[],["self"]]],[10,"FRAC_2_SQRT_PI",E,"Return `2.0 / sqrt(π)`.",8,[[],["self"]]],[10,"FRAC_PI_2",E,"Return `π / 2.0`.",8,[[],["self"]]],[10,"FRAC_PI_3",E,"Return `π / 3.0`.",8,[[],["self"]]],[10,"FRAC_PI_4",E,"Return `π / 4.0`.",8,[[],["self"]]],[10,"FRAC_PI_6",E,"Return `π / 6.0`.",8,[[],["self"]]],[10,"FRAC_PI_8",E,"Return `π / 8.0`.",8,[[],["self"]]],[10,"LN_10",E,"Return `ln(10.0)`.",8,[[],["self"]]],[10,"LN_2",E,"Return `ln(2.0)`.",8,[[],["self"]]],[10,"LOG10_E",E,"Return `log10(e)`.",8,[[],["self"]]],[10,"LOG2_E",E,"Return `log2(e)`.",8,[[],["self"]]],[10,"PI",E,"Return Archimedes’ constant.",8,[[],["self"]]],[10,"SQRT_2",E,"Return `sqrt(2.0)`.",8,[[],["self"]]],[0,"identities",R[1148],E,N,N],[5,"zero","num_traits::identities","Returns the additive identity, `0`.",N,[[],["zero"]]],[5,"one",E,"Returns the multiplicative identity, `1`.",N,[[],["one"]]],[8,"Zero",E,"Defines an additive identity element for `Self`.",N,N],[10,"zero",E,"Returns the additive identity element of `Self`, `0`.",9,[[],["self"]]],[10,"is_zero",E,"Returns `true` if `self` is equal to the additive identity.",9,[[["self"]],["bool"]]],[8,"One",E,"Defines a multiplicative identity element for `Self`.",N,N],[10,"one",E,"Returns the multiplicative identity element of `Self`, `1`.",10,[[],["self"]]],[11,"is_one",E,"Returns `true` if `self` is equal to the multiplicative…",10,[[["self"]],["bool"]]],[0,"int",R[1148],E,N,N],[8,"PrimInt","num_traits::int",E,N,N],[10,"count_ones",E,"Returns the number of ones in the binary representation of…",11,[[],["u32"]]],[10,"count_zeros",E,"Returns the number of zeros in the binary representation…",11,[[],["u32"]]],[10,"leading_zeros",E,"Returns the number of leading zeros in the binary…",11,[[],["u32"]]],[10,"trailing_zeros",E,"Returns the number of trailing zeros in the binary…",11,[[],["u32"]]],[10,"rotate_left",E,R[1149],11,[[["u32"]],["self"]]],[10,"rotate_right",E,R[1150],11,[[["u32"]],["self"]]],[10,"signed_shl",E,R[1149],11,[[["u32"]],["self"]]],[10,"signed_shr",E,R[1150],11,[[["u32"]],["self"]]],[10,"unsigned_shl",E,R[1149],11,[[["u32"]],["self"]]],[10,"unsigned_shr",E,R[1150],11,[[["u32"]],["self"]]],[10,"swap_bytes",E,"Reverses the byte order of the integer.",11,[[],["self"]]],[10,"from_be",E,"Convert an integer from big endian to the target's…",11,[[],["self"]]],[10,"from_le",E,"Convert an integer from little endian to the target's…",11,[[],["self"]]],[10,"to_be",E,"Convert `self` to big endian from the target's endianness.",11,[[],["self"]]],[10,"to_le",E,"Convert `self` to little endian from the target's…",11,[[],["self"]]],[10,"pow",E,"Raises self to the power of `exp`, using exponentiation by…",11,[[["u32"]],["self"]]],[0,"ops",R[1148],E,N,N],[0,"checked",R[1152],E,N,N],[8,"CheckedAdd","num_traits::ops::checked","Performs addition that returns `None` instead of wrapping…",N,N],[10,R[1402],E,"Adds two numbers, checking for overflow. If overflow…",12,[[["self"]],[R[52]]]],[8,"CheckedSub",E,"Performs subtraction that returns `None` instead of…",N,N],[10,R[1403],E,"Subtracts two numbers, checking for underflow. If…",13,[[["self"]],[R[52]]]],[8,"CheckedMul",E,"Performs multiplication that returns `None` instead of…",N,N],[10,"checked_mul",E,"Multiplies two numbers, checking for underflow or…",14,[[["self"]],[R[52]]]],[8,"CheckedDiv",E,"Performs division that returns `None` instead of panicking…",N,N],[10,"checked_div",E,"Divides two numbers, checking for underflow, overflow and…",15,[[["self"]],[R[52]]]],[8,"CheckedRem",E,"Performs an integral remainder that returns `None` instead…",N,N],[10,"checked_rem",E,"Finds the remainder of dividing two numbers, checking for…",16,[[["self"]],[R[52]]]],[8,"CheckedNeg",E,"Performs negation that returns `None` if the result can't…",N,N],[10,"checked_neg",E,"Negates a number, returning `None` for results that can't…",17,[[["self"]],[R[52]]]],[8,"CheckedShl",E,"Performs a left shift that returns `None` on overflow.",N,N],[10,"checked_shl",E,R[1151],18,[[["u32"],["self"]],[R[52]]]],[8,"CheckedShr",E,"Performs a right shift that returns `None` on overflow.",N,N],[10,"checked_shr",E,R[1151],19,[[["u32"],["self"]],[R[52]]]],[0,"inv",R[1152],E,N,N],[8,"Inv","num_traits::ops::inv","Unary operator for retrieving the multiplicative inverse,…",N,N],[16,"Output",E,R[1154],20,N],[10,"inv",E,"Returns the multiplicative inverse of `self`.",20,[[]]],[0,"mul_add",R[1152],E,N,N],[8,"MulAdd","num_traits::ops::mul_add","Fused multiply-add. Computes `(self * a) + b` with only…",N,N],[16,"Output",E,"The resulting type after applying the fused multiply-add.",21,N],[10,"mul_add",E,R[1153],21,[[["a"],["b"]]]],[8,R[1163],E,"The fused multiply-add assignment operation.",N,N],[10,"mul_add_assign",E,R[1153],22,[[["self"],["a"],["b"]]]],[0,"saturating",R[1152],E,N,N],[8,"Saturating","num_traits::ops::saturating","Saturating math operations",N,N],[10,"saturating_add",E,"Saturating addition operator. Returns a+b, saturating at…",23,[[],["self"]]],[10,"saturating_sub",E,"Saturating subtraction operator. Returns a-b, saturating…",23,[[],["self"]]],[0,"wrapping",R[1152],E,N,N],[8,R[1164],"num_traits::ops::wrapping","Performs addition that wraps around on overflow.",N,N],[10,"wrapping_add",E,"Wrapping (modular) addition. Computes `self + other`,…",24,[[["self"]],["self"]]],[8,R[1165],E,"Performs subtraction that wraps around on overflow.",N,N],[10,"wrapping_sub",E,"Wrapping (modular) subtraction. Computes `self - other`,…",25,[[["self"]],["self"]]],[8,R[1166],E,"Performs multiplication that wraps around on overflow.",N,N],[10,"wrapping_mul",E,"Wrapping (modular) multiplication. Computes `self *…",26,[[["self"]],["self"]]],[8,R[1167],E,"Performs a left shift that does not panic.",N,N],[10,"wrapping_shl",E,"Panic-free bitwise shift-left; yields `self << mask(rhs)`,…",27,[[["u32"],["self"]],["self"]]],[8,R[1168],E,"Performs a right shift that does not panic.",N,N],[10,"wrapping_shr",E,"Panic-free bitwise shift-right; yields `self >>…",28,[[["u32"],["self"]],["self"]]],[0,"pow",R[1148],E,N,N],[5,"pow","num_traits::pow","Raises a value to the power of exp, using exponentiation…",N,[[["mul"],["one"],[R[9]],["clone"]],[["mul"],["one"],["clone"]]]],[5,"checked_pow",E,"Raises a value to the power of exp, returning `None` if an…",N,[[["checkedmul"],["one"],[R[9]],["clone"]],[[R[52]],["checkedmul"],["one"],["clone"]]]],[8,"Pow",E,"Binary operator for raising a value to a power.",N,N],[16,"Output",E,R[1154],29,N],[10,"pow",E,"Returns `self` to the power `rhs`.",29,[[["rhs"]]]],[0,"sign",R[1148],E,N,N],[5,"abs","num_traits::sign",R[1155],N,[[["signed"]],["signed"]]],[5,"abs_sub",E,R[1156],N,[[["signed"]],["signed"]]],[5,"signum",E,R[1157],N,[[["signed"]],["signed"]]],[8,"Signed",E,"Useful functions for signed numbers (i.e. numbers that can…",N,N],[10,"abs",E,R[1155],30,[[["self"]],["self"]]],[10,"abs_sub",E,R[1156],30,[[["self"]],["self"]]],[10,"signum",E,R[1157],30,[[["self"]],["self"]]],[10,"is_positive",E,"Returns true if the number is positive and false if the…",30,[[["self"]],["bool"]]],[10,"is_negative",E,"Returns true if the number is negative and false if the…",30,[[["self"]],["bool"]]],[8,"Unsigned",E,"A trait for values which cannot be negative",N,N],[8,"Num",R[1148],"The base trait for numeric types, covering `0` and `1`…",N,N],[16,"FromStrRadixErr",E,E,31,N],[10,"from_str_radix",E,"Convert from a string and radix <= 36.",31,[[["u32"],["str"]],[R[12]]]],[8,"NumOps",E,"The trait for types implementing basic numeric operations",N,N],[8,"NumRef",E,"The trait for `Num` types which also implement numeric…",N,N],[8,"RefNum",E,"The trait for references which implement numeric…",N,N],[8,"NumAssignOps",E,"The trait for types implementing numeric assignment…",N,N],[8,"NumAssign",E,"The trait for `Num` types which also implement assignment…",N,N],[8,"NumAssignRef",E,"The trait for `NumAssign` types which also implement…",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,"into",E,E,0,[[],[U]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,"into",E,E,1,[[],[U]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"fmt",E,E,1,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,0,[[[R[29]],["self"]],[R[12]]]]],"p":[[3,R[1158]],[4,R[1159]],[8,"Bounded"],[8,R[1160]],[8,R[1161]],[8,"NumCast"],[8,R[1162]],[8,"FloatCore"],[8,"FloatConst"],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,R[1163]],[8,"Saturating"],[8,R[1164]],[8,R[1165]],[8,R[1166]],[8,R[1167]],[8,R[1168]],[8,"Pow"],[8,"Signed"],[8,"Num"]]};
searchIndex[R[1172]]={"doc":"The xorshift random number generator.","i":[[3,R[1173],R[1172],"An Xorshift random number generator.",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,"into",E,E,0,[[],[U]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[[T],["self"]]]],[11,"fmt",E,E,0,[[[R[29]],["self"]],[R[12]]]],[11,"clone",E,E,0,[[["self"]],["xorshiftrng"]]],[11,R[19],E,E,0,[[["self"]],["u32"]]],[11,R[20],E,E,0,[[["self"]],["u64"]]],[11,R[21],E,E,0,[[["self"]]]],[11,R[22],E,E,0,[[["self"]],[["error"],[R[12],["error"]]]]],[11,R[23],E,E,0,[[],["self"]]],[11,R[25],E,E,0,[[[R[26]]],[["error"],[R[12],["error"]]]]]],"p":[[3,R[1173]]]};
searchIndex[R[1174]]={"doc":"The ISAAC and ISAAC-64 random number generators.","i":[[0,"isaac",R[1174],"The ISAAC random number generator.",N,N],[3,"IsaacRng",R[1177],"A random number generator that uses the ISAAC algorithm.",N,N],[3,"IsaacCore",E,"The core of `IsaacRng`, used with `BlockRng`.",N,N],[11,R[1175],E,R[1179],0,[[["u64"]],["self"]]],[0,"isaac64",R[1174],"The ISAAC-64 random number generator.",N,N],[3,"Isaac64Rng",R[1178],"A random number generator that uses ISAAC-64, the 64-bit…",N,N],[3,R[1181],E,"The core of `Isaac64Rng`, used with `BlockRng`.",N,N],[11,R[1175],E,R[1176],1,[[["u64"]],["self"]]],[11,R[1175],E,R[1176],2,[[["u64"]],["self"]]],[11,"from",R[1177],E,0,[[[T]],[T]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,"into",E,E,0,[[],[U]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[[T],["self"]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,"into",E,E,3,[[],[U]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[17],E,E,3,[[[T],["self"]]]],[11,"from",R[1178],E,1,[[[T]],[T]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,"into",E,E,1,[[],[U]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,[[[T],["self"]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,"into",E,E,2,[[],[U]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[17],E,E,2,[[[T],["self"]]]],[11,"fmt",R[1177],E,0,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,3,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1178],E,1,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,2,[[[R[29]],["self"]],[R[12]]]],[11,"clone",R[1177],E,0,[[["self"]],["isaacrng"]]],[11,"clone",E,E,3,[[["self"]],["isaaccore"]]],[11,"clone",R[1178],E,1,[[["self"]],["isaac64rng"]]],[11,"clone",E,E,2,[[["self"]],["isaac64core"]]],[11,R[19],R[1177],E,0,[[["self"]],["u32"]]],[11,R[20],E,E,0,[[["self"]],["u64"]]],[11,R[21],E,E,0,[[["self"]]]],[11,R[22],E,E,0,[[["self"]],[["error"],[R[12],["error"]]]]],[11,R[19],R[1178],E,1,[[["self"]],["u32"]]],[11,R[20],E,E,1,[[["self"]],["u64"]]],[11,R[21],E,E,1,[[["self"]]]],[11,R[22],E,E,1,[[["self"]],[["error"],[R[12],["error"]]]]],[11,R[23],R[1177],E,0,[[],["self"]]],[11,R[24],E,R[1179],0,[[["u64"]],["self"]]],[11,R[25],E,E,0,[[[R[26]]],[["error"],[R[12],["error"]]]]],[11,R[23],E,E,3,[[],["self"]]],[11,R[24],E,R[1179],3,[[["u64"]],["self"]]],[11,R[25],E,E,3,[[[R[26]]],[["error"],[R[12],["error"]]]]],[11,R[23],R[1178],E,1,[[],["self"]]],[11,R[24],E,R[1179],1,[[["u64"]],["self"]]],[11,R[25],E,E,1,[[[R[26]]],[["error"],[R[12],["error"]]]]],[11,R[23],E,E,2,[[],["self"]]],[11,R[24],E,E,2,[[["u64"]],["self"]]],[11,R[25],E,E,2,[[[R[26]]],[["error"],[R[12],["error"]]]]],[11,R[2093],R[1177],R[1180],3,[[["self"],["isaacarray"]]]],[11,R[2093],R[1178],R[1180],2,[[["self"],["isaacarray"]]]]],"p":[[3,"IsaacRng"],[3,"Isaac64Rng"],[3,R[1181]],[3,"IsaacCore"]]};
searchIndex[R[1274]]={"doc":"Concurrent queues.","i":[[3,"ArrayQueue",R[1274],"A bounded multi-producer multi-consumer queue.",N,N],[3,"SegQueue",E,"An unbounded multi-producer multi-consumer queue.",N,N],[3,"PopError",E,"Error which occurs when popping from an empty queue.",N,N],[3,"PushError",E,"Error which occurs when pushing into a full queue.",N,N],[12,"0",E,E,0,N],[11,"new",E,"Creates a new bounded queue with the given capacity.",1,[[[R[9]]],["arrayqueue"]]],[11,"push",E,"Attempts to push an element into the queue.",1,[[["self"],[T]],[[R[1277]],[R[12],[R[1277]]]]]],[11,"pop",E,"Attempts to pop an element from the queue.",1,[[["self"]],[["poperror"],[R[12],["poperror"]]]]],[11,R[74],E,"Returns the capacity of the queue.",1,[[["self"]],[R[9]]]],[11,R[69],E,R[1275],1,[[["self"]],["bool"]]],[11,"is_full",E,"Returns `true` if the queue is full.",1,[[["self"]],["bool"]]],[11,"len",E,R[1276],1,[[["self"]],[R[9]]]],[11,"new",E,"Creates a new unbounded queue.",2,[[],["segqueue"]]],[11,"push",E,"Pushes an element into the queue.",2,[[["self"],[T]]]],[11,"pop",E,"Pops an element from the queue.",2,[[["self"]],[["poperror"],[R[12],["poperror"]]]]],[11,R[69],E,R[1275],2,[[["self"]],["bool"]]],[11,"len",E,R[1276],2,[[["self"]],[R[9]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[17],E,E,3,[[[T],["self"]]]],[11,R[170],E,E,3,[[["self"]],["string"]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[[T],["self"]]]],[11,R[170],E,E,0,[[["self"]],["string"]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"eq",E,E,3,[[["poperror"],["self"]],["bool"]]],[11,"eq",E,E,0,[[[R[1277]],["self"]],["bool"]]],[11,"ne",E,E,0,[[[R[1277]],["self"]],["bool"]]],[11,"clone",E,E,3,[[["self"]],["poperror"]]],[11,"clone",E,E,0,[[["self"]],[R[1277]]]],[11,"drop",E,E,1,[[["self"]]]],[11,"drop",E,E,2,[[["self"]]]],[11,R[79],E,E,2,[[],["segqueue"]]],[11,"fmt",E,E,1,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,3,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,2,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,3,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[R[12]]]],[11,R[30],E,E,3,[[["self"]],["str"]]],[11,R[30],E,E,0,[[["self"]],["str"]]]],"p":[[3,"PushError"],[3,"ArrayQueue"],[3,"SegQueue"],[3,"PopError"]]};
searchIndex[R[1278]]={"doc":"Task execution related traits and utilities.","i":[[3,"Enter",R[1278],"Represents an executor context.",N,N],[3,"EnterError",E,"An error returned by `enter` if an execution scope has…",N,N],[3,R[4933],E,R[4934],N,N],[3,R[1284],E,R[4935],N,N],[5,"enter",E,"Marks the current thread as being within the dynamic…",N,[[],[["enter"],[R[12],["enter",R[2322]]],[R[2322]]]]],[5,"spawn",E,"Submits a future for execution on the default executor --…",N,[[[T]]]],[5,R[1287],E,"Set the default executor for the duration of the closure",N,[[["enter"],[T],["f"]],["r"]]],[11,"on_exit",E,"Register a callback to be invoked if and when the thread…",0,[[["self"],["f"]]]],[11,"make_permanent",E,"Treat the remainder of execution on this thread as part of…",0,[[]]],[11,"block_on",E,"Blocks the thread on the specified future, returning the…",0,[[["self"],["future"]],[R[12]]]],[11,R[2344],E,R[4936],1,[[],["self"]]],[11,R[2345],E,R[4937],1,[[],["self"]]],[11,R[2346],E,R[4938],1,[[["self"]],["bool"]]],[11,R[2347],E,R[4939],1,[[["self"]],["bool"]]],[11,"current",E,R[4940],2,[[],[R[1283]]]],[0,"park",E,"Abstraction over blocking and unblocking the current thread.",N,N],[3,"ParkThread",R[1281],"Blocks the current thread using a condition variable.",N,N],[3,R[4357],E,R[4356],N,N],[3,R[1286],E,"Unblocks a thread that was blocked by `ParkThread`.",N,N],[8,"Park",E,"Block the current thread.",N,N],[16,"Unpark",E,"Unpark handle type for the `Park` implementation.",3,N],[16,"Error",E,"Error returned by `park`",3,N],[10,"unpark",E,"Get a new `Unpark` handle associated with this `Park`…",3,[[["self"]]]],[10,"park",E,"Block the current thread unless or until the token is…",3,[[["self"]],[R[12]]]],[10,R[1282],E,"Park the current thread for at most `duration`.",3,[[[R[1358]],["self"]],[R[12]]]],[8,"Unpark",E,"Unblock a thread blocked by the associated [`Park`]…",N,N],[10,"unpark",E,"Unblock a thread that is blocked by the associated `Park`…",4,[[["self"]]]],[11,"new",E,"Create a new `ParkThread` handle for the current thread.",5,[[],["parkthread"]]],[8,R[4941],R[1278],R[4942],N,N],[10,"spawn",E,R[4943],6,[[["self"],["box",["future"]],["future"]],[[R[1279]],[R[12],[R[1279]]]]]],[11,"status",E,R[1280],6,[[["self"]],[[R[1279]],[R[12],[R[1279]]]]]],[8,R[1285],E,R[4944],N,N],[10,"spawn",E,R[4945],7,[[["self"],[T]],[[R[1279]],[R[12],[R[1279]]]]]],[11,"status",E,R[1280],7,[[["self"]],[[R[1279]],[R[12],[R[1279]]]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[170],E,E,8,[[["self"]],["string"]]],[11,R[11],E,E,8,[[[U]],[R[12]]]],[11,R[39],E,E,8,[[["self"]],[T]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[],[R[12]]]],[11,R[18],E,E,8,[[["self"]],[R[40]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[170],E,E,1,[[["self"]],["string"]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[17],E,E,2,[[[T],["self"]]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",R[1281],E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,R[18],E,E,5,[[["self"]],[R[40]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[11],E,E,9,[[[U]],[R[12]]]],[11,R[39],E,E,9,[[["self"]],[T]]],[11,R[13],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[],[R[12]]]],[11,R[18],E,E,9,[[["self"]],[R[40]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[16],E,E,10,[[["self"]],[T]]],[11,R[17],E,E,10,[[[T],["self"]]]],[11,R[11],E,E,10,[[[U]],[R[12]]]],[11,R[39],E,E,10,[[["self"]],[T]]],[11,R[13],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[],[R[12]]]],[11,R[18],E,E,10,[[["self"]],[R[40]]]],[11,"spawn",R[1278],E,2,[[["self"],["box",["future"]],["future"]],[[R[1279]],[R[12],[R[1279]]]]]],[11,"status",E,E,2,[[["self"]],[[R[1279]],[R[12],[R[1279]]]]]],[11,"unpark",R[1281],E,5,[[["self"]]]],[11,"park",E,E,5,[[["self"]],[R[12]]]],[11,R[1282],E,E,5,[[[R[1358]],["self"]],[R[12]]]],[11,"unpark",E,E,10,[[["self"]]]],[11,"spawn",R[1278],E,2,[[["self"],[T]],[[R[1279]],[R[12],[R[1279]]]]]],[11,"status",E,E,2,[[["self"]],[[R[1279]],[R[12],[R[1279]]]]]],[11,"clone",E,E,2,[[["self"]],[R[1283]]]],[11,"clone",R[1281],E,10,[[["self"]],["unparkthread"]]],[11,"drop",R[1278],E,0,[[["self"]]]],[11,"fmt",E,E,8,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,1,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,2,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1281],E,5,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,9,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,10,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[1278],E,8,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,1,[[["self"],[R[29]]],[R[12]]]],[11,R[30],E,E,8,[[["self"]],["str"]]],[11,R[30],E,E,1,[[["self"]],["str"]]],[11,"execute",E,E,2,[[["self"],[T]],[[R[97]],[R[12],[R[97]]]]]],[11,"status",E,R[1280],6,[[["self"]],[[R[1279]],[R[12],[R[1279]]]]]],[11,"status",E,R[1280],7,[[["self"]],[[R[1279]],[R[12],[R[1279]]]]]]],"p":[[3,"Enter"],[3,R[4933]],[3,R[1284]],[8,"Park"],[8,"Unpark"],[3,"ParkThread"],[8,R[4941]],[8,R[1285]],[3,"EnterError"],[3,R[4357]],[3,R[1286]]]};
searchIndex[R[1288]]={"doc":E,"i":[[0,"array",R[1288],E,N,N],[3,R[1308],R[1290],E,N,N],[12,"version",E,E,0,N],[12,"retain",E,E,0,N],[12,"release",E,E,0,N],[12,R[1289],E,E,0,N],[12,"equal",E,E,0,N],[3,R[1748],E,E,N,N],[7,R[1412],E,E,N,N],[5,R[1413],E,E,N,N],[5,R[1414],E,E,N,N],[5,R[1415],E,E,N,N],[5,R[1416],E,E,N,N],[5,R[1417],E,E,N,N],[5,R[1418],E,E,N,N],[6,R[1419],E,E,N,N],[6,R[1420],E,E,N,N],[6,R[1421],E,E,N,N],[6,R[1422],E,E,N,N],[6,R[2454],E,E,N,N],[0,"base",R[1288],E,N,N],[3,"CFRange",R[1292],E,N,N],[12,"location",E,E,1,N],[12,"length",E,E,1,N],[3,R[1309],E,E,N,N],[12,"version",E,E,2,N],[12,"info",E,E,2,N],[12,"retain",E,E,2,N],[12,"release",E,E,2,N],[12,R[1289],E,E,2,N],[12,R[2813],E,E,2,N],[12,R[2465],E,E,2,N],[12,R[2466],E,E,2,N],[12,R[1423],E,E,2,N],[4,R[1310],E,E,N,N],[13,"LessThan",E,E,3,N],[13,"EqualTo",E,E,3,N],[13,R[1424],E,E,3,N],[7,R[1425],E,E,N,N],[7,R[1426],E,E,N,N],[7,R[1427],E,E,N,N],[7,R[1428],E,E,N,N],[7,R[1429],E,E,N,N],[7,R[1430],E,E,N,N],[5,R[1431],E,E,N,N],[5,R[1432],E,E,N,N],[5,R[1433],E,E,N,N],[5,R[1434],E,E,N,N],[5,R[1435],E,E,N,N],[5,R[1436],E,E,N,N],[5,R[1437],E,E,N,N],[5,R[1438],E,E,N,N],[5,R[1439],E,E,N,N],[7,"kCFNull",E,E,N,N],[5,R[1440],E,E,N,N],[5,"CFEqual",E,E,N,N],[5,R[1441],E,E,N,N],[5,R[1442],E,E,N,N],[5,"CFHash",E,E,N,N],[5,R[2814],E,E,N,N],[5,"CFRetain",E,E,N,N],[5,"CFShow",E,E,N,N],[6,"Boolean",E,E,N,N],[6,"CFIndex",E,E,N,N],[6,R[1443],E,E,N,N],[6,R[1444],E,E,N,N],[6,R[2812],E,E,N,N],[6,R[2467],E,E,N,N],[6,"CFTypeID",E,E,N,N],[6,R[2468],E,E,N,N],[6,R[1445],E,E,N,N],[6,"OSStatus",E,E,N,N],[6,"SInt32",E,E,N,N],[6,R[1446],E,E,N,N],[6,R[1447],E,E,N,N],[6,R[1448],E,E,N,N],[6,R[1449],E,E,N,N],[6,R[1450],E,E,N,N],[6,R[1451],E,E,N,N],[6,R[1452],E,E,N,N],[8,R[1453],E,R[1454],N,N],[10,R[1455],E,E,4,[[["self"]]]],[10,R[1456],E,E,4,[[],["self"]]],[11,"init",E,E,1,[[["cfindex"]],["cfrange"]]],[0,"bundle",R[1288],E,N,N],[3,R[1457],R[1293],E,N,N],[5,R[1458],E,E,N,N],[5,R[1459],E,E,N,N],[5,R[1460],E,E,N,N],[5,R[1461],E,E,N,N],[5,R[1462],E,E,N,N],[5,R[1463],E,E,N,N],[5,R[1464],E,E,N,N],[5,R[1465],E,E,N,N],[6,R[1466],E,E,N,N],[0,"data",R[1288],E,N,N],[3,R[2828],R[1294],E,N,N],[5,R[1467],E,E,N,N],[5,R[1468],E,E,N,N],[5,R[1469],E,E,N,N],[5,R[1470],E,E,N,N],[6,R[2469],E,E,N,N],[0,"date",R[1288],E,N,N],[3,R[2834],R[1295],E,N,N],[7,R[1471],E,E,N,N],[7,R[1472],E,E,N,N],[5,R[1473],E,E,N,N],[5,R[1474],E,E,N,N],[5,R[1475],E,E,N,N],[5,R[1476],E,E,N,N],[5,R[1477],E,E,N,N],[5,R[1478],E,E,N,N],[6,R[2470],E,E,N,N],[6,R[1479],E,E,N,N],[6,R[1480],E,E,N,N],[0,R[2471],R[1288],E,N,N],[3,R[1311],R[1296],E,N,N],[12,"version",E,E,5,N],[12,"retain",E,E,5,N],[12,"release",E,E,5,N],[12,R[1289],E,E,5,N],[12,"equal",E,E,5,N],[12,"hash",E,E,5,N],[3,R[1312],E,E,N,N],[12,"version",E,E,6,N],[12,"retain",E,E,6,N],[12,"release",E,E,6,N],[12,R[1289],E,E,6,N],[12,"equal",E,E,6,N],[3,R[1322],E,E,N,N],[7,R[1481],E,E,N,N],[7,R[1482],E,E,N,N],[5,R[1483],E,E,N,N],[5,R[1484],E,E,N,N],[5,R[1485],E,E,N,N],[5,R[1486],E,E,N,N],[5,R[1487],E,E,N,N],[5,R[1488],E,E,N,N],[5,R[1489],E,E,N,N],[5,R[1490],E,E,N,N],[5,R[1491],E,E,N,N],[5,R[1492],E,E,N,N],[5,R[1493],E,E,N,N],[5,R[1494],E,E,N,N],[5,R[1495],E,E,N,N],[5,R[1496],E,E,N,N],[6,R[1497],E,E,N,N],[6,R[1498],E,E,N,N],[6,R[1499],E,E,N,N],[6,R[1500],E,E,N,N],[6,R[1501],E,E,N,N],[6,R[1502],E,E,N,N],[6,R[1503],E,E,N,N],[6,R[1504],E,E,N,N],[0,"error",R[1288],E,N,N],[3,R[1749],R[1297],E,N,N],[5,R[1505],E,E,N,N],[7,R[1506],E,E,N,N],[7,R[1507],E,E,N,N],[7,R[1508],E,E,N,N],[7,R[1509],E,E,N,N],[5,R[1510],E,E,N,N],[5,R[1511],E,E,N,N],[5,R[1512],E,E,N,N],[6,R[2464],E,E,N,N],[0,R[1513],R[1288],E,N,N],[3,R[1323],R[1298],E,N,N],[3,R[1313],E,E,N,N],[12,"version",E,E,7,N],[12,"info",E,E,7,N],[12,"retain",E,E,7,N],[12,"release",E,E,7,N],[12,R[1289],E,E,7,N],[5,R[1514],E,E,N,N],[5,R[1515],E,E,N,N],[5,R[1516],E,E,N,N],[5,R[1517],E,E,N,N],[5,R[1518],E,E,N,N],[5,R[1519],E,E,N,N],[5,R[1520],E,E,N,N],[5,R[1521],E,E,N,N],[5,R[1522],E,E,N,N],[6,R[1523],E,E,N,N],[6,R[1524],E,E,N,N],[6,R[1525],E,E,N,N],[17,R[1526],E,E,N,N],[17,R[1527],E,E,N,N],[0,R[1528],R[1288],E,N,N],[3,R[1314],R[1299],E,N,N],[12,"version",E,E,8,N],[12,"info",E,E,8,N],[12,"retain",E,E,8,N],[12,"release",E,E,8,N],[12,R[1289],E,E,8,N],[3,R[1324],E,E,N,N],[5,R[1529],E,E,N,N],[5,R[1530],E,E,N,N],[5,R[1531],E,E,N,N],[5,R[1532],E,E,N,N],[5,R[1533],E,E,N,N],[5,R[1534],E,E,N,N],[5,R[1535],E,E,N,N],[5,R[1536],E,E,N,N],[5,R[1537],E,E,N,N],[5,R[1538],E,E,N,N],[5,R[1539],E,E,N,N],[5,R[1540],E,E,N,N],[5,R[1541],E,E,N,N],[6,R[1542],E,E,N,N],[6,R[1543],E,E,N,N],[6,R[1544],E,E,N,N],[0,"number",R[1288],E,N,N],[3,R[1325],R[1300],E,N,N],[4,R[1545],E,E,N,N],[7,R[1546],E,E,N,N],[7,R[1547],E,E,N,N],[5,R[1548],E,E,N,N],[5,R[1549],E,E,N,N],[5,R[1550],E,E,N,N],[5,R[1551],E,E,N,N],[5,R[1552],E,E,N,N],[6,R[1553],E,E,N,N],[6,R[1554],E,E,N,N],[6,R[1555],E,E,N,N],[7,R[1556],E,E,N,N],[7,R[1557],E,E,N,N],[7,R[1558],E,E,N,N],[7,R[1559],E,E,N,N],[0,R[1560],R[1288],E,N,N],[5,R[1561],R[1562],E,N,N],[5,R[1563],E,E,N,N],[6,R[1564],E,E,N,N],[6,R[1565],E,E,N,N],[6,R[1566],E,E,N,N],[17,R[1567],E,E,N,N],[17,R[1568],E,E,N,N],[17,R[1569],E,E,N,N],[17,R[1570],E,E,N,N],[17,R[1571],E,E,N,N],[17,R[1572],E,E,N,N],[0,"runloop",R[1288],E,N,N],[3,R[1326],R[1301],E,N,N],[3,R[1327],E,E,N,N],[3,R[1328],E,E,N,N],[3,R[1315],E,E,N,N],[12,"version",E,E,9,N],[12,"info",E,E,9,N],[12,"retain",E,E,9,N],[12,"release",E,E,9,N],[12,R[1289],E,E,9,N],[12,"equal",E,E,9,N],[12,"hash",E,E,9,N],[12,"schedule",E,E,9,N],[12,"cancel",E,E,9,N],[12,"perform",E,E,9,N],[3,R[1316],E,E,N,N],[12,"version",E,E,10,N],[12,"info",E,E,10,N],[12,"retain",E,E,10,N],[12,"release",E,E,10,N],[12,R[1289],E,E,10,N],[12,"equal",E,E,10,N],[12,"hash",E,E,10,N],[12,"getPort",E,E,10,N],[12,"perform",E,E,10,N],[3,R[1317],E,E,N,N],[12,"version",E,E,11,N],[12,"info",E,E,11,N],[12,"retain",E,E,11,N],[12,"release",E,E,11,N],[12,R[1289],E,E,11,N],[3,R[1318],E,E,N,N],[12,"version",E,E,12,N],[12,"info",E,E,12,N],[12,"retain",E,E,12,N],[12,"release",E,E,12,N],[12,R[1289],E,E,12,N],[3,R[1329],E,E,N,N],[7,R[1573],E,E,N,N],[7,R[1574],E,E,N,N],[5,R[1575],E,E,N,N],[5,R[1576],E,E,N,N],[5,R[1577],E,E,N,N],[5,R[1578],E,E,N,N],[5,R[1579],E,E,N,N],[5,R[1580],E,E,N,N],[5,R[1581],E,E,N,N],[5,R[1582],E,E,N,N],[5,R[1583],E,E,N,N],[5,R[1584],E,E,N,N],[5,R[1585],E,E,N,N],[5,R[1586],E,E,N,N],[5,R[1587],E,E,N,N],[5,R[1588],E,E,N,N],[5,R[1589],E,E,N,N],[5,R[1590],E,E,N,N],[5,R[1591],E,E,N,N],[5,R[1592],E,E,N,N],[5,R[1593],E,E,N,N],[5,R[1594],E,E,N,N],[5,R[1595],E,E,N,N],[5,R[1596],E,E,N,N],[5,R[1597],E,E,N,N],[5,R[1598],E,E,N,N],[5,R[1599],E,E,N,N],[5,R[1600],E,E,N,N],[5,R[1601],E,E,N,N],[5,R[1602],E,E,N,N],[5,R[1603],E,E,N,N],[5,R[1604],E,E,N,N],[5,R[1605],E,E,N,N],[5,R[1606],E,E,N,N],[5,R[1607],E,E,N,N],[5,R[1608],E,E,N,N],[5,R[1609],E,E,N,N],[5,R[1610],E,E,N,N],[5,R[1611],E,E,N,N],[5,R[1612],E,E,N,N],[5,R[1613],E,E,N,N],[5,R[1614],E,E,N,N],[5,R[1615],E,E,N,N],[5,R[1616],E,E,N,N],[5,R[1617],E,E,N,N],[5,R[1618],E,E,N,N],[5,R[1619],E,E,N,N],[5,R[1620],E,E,N,N],[5,R[1621],E,E,N,N],[5,R[1622],E,E,N,N],[6,R[1623],E,E,N,N],[6,R[1624],E,E,N,N],[6,R[1625],E,E,N,N],[6,R[1626],E,E,N,N],[6,R[1627],E,E,N,N],[6,R[1628],E,E,N,N],[6,R[1629],E,E,N,N],[17,R[1630],E,E,N,N],[17,R[1631],E,E,N,N],[17,R[1632],E,E,N,N],[17,R[1633],E,E,N,N],[17,R[1634],E,E,N,N],[17,R[1635],E,E,N,N],[17,R[1636],E,E,N,N],[17,R[1637],E,E,N,N],[17,R[1638],E,E,N,N],[17,R[1639],E,E,N,N],[17,R[1640],E,E,N,N],[0,"set",R[1288],E,N,N],[3,R[1319],R[1302],E,N,N],[12,"version",E,E,13,N],[12,"retain",E,E,13,N],[12,"release",E,E,13,N],[12,R[1289],E,E,13,N],[12,"equal",E,E,13,N],[12,"hash",E,E,13,N],[3,"__CFSet",E,E,N,N],[7,R[1641],E,E,N,N],[5,R[1642],E,E,N,N],[5,R[1643],E,E,N,N],[5,R[1644],E,E,N,N],[5,R[1645],E,E,N,N],[6,R[1646],E,E,N,N],[6,R[1647],E,E,N,N],[6,R[1648],E,E,N,N],[6,R[1649],E,E,N,N],[6,R[1650],E,E,N,N],[6,R[1651],E,E,N,N],[6,"CFSetRef",E,E,N,N],[0,"string",R[1288],E,N,N],[3,R[1652],R[1303],E,N,N],[5,R[1653],E,E,N,N],[5,R[1654],E,E,N,N],[5,R[1655],E,E,N,N],[5,R[1656],E,E,N,N],[5,R[1657],E,E,N,N],[5,R[1658],E,E,N,N],[5,R[1659],E,E,N,N],[5,R[1660],E,E,N,N],[6,"UniChar",E,E,N,N],[6,R[1661],E,E,N,N],[6,R[1662],E,E,N,N],[6,R[1663],E,E,N,N],[6,R[1664],E,E,N,N],[7,R[1665],E,E,N,N],[0,R[788],R[1288],E,N,N],[3,R[1330],R[1304],E,N,N],[5,R[1666],E,E,N,N],[5,R[1667],E,E,N,N],[5,R[1668],E,E,N,N],[5,R[1669],E,E,N,N],[5,R[1670],E,E,N,N],[6,R[1671],E,E,N,N],[0,"url",R[1288],E,N,N],[3,"__CFURL",R[1305],E,N,N],[7,R[1672],E,E,N,N],[7,R[1673],E,E,N,N],[7,R[1674],E,E,N,N],[7,R[1675],E,E,N,N],[7,R[1676],E,E,N,N],[7,R[1677],E,E,N,N],[7,R[1678],E,E,N,N],[7,R[1679],E,E,N,N],[7,R[1680],E,E,N,N],[7,R[1681],E,E,N,N],[7,R[1682],E,E,N,N],[7,R[1683],E,E,N,N],[7,R[1684],E,E,N,N],[7,R[1685],E,E,N,N],[7,R[1686],E,E,N,N],[7,R[1687],E,E,N,N],[7,R[1688],E,E,N,N],[7,R[1689],E,E,N,N],[7,R[1690],E,E,N,N],[7,R[1691],E,E,N,N],[7,R[1692],E,E,N,N],[7,R[1693],E,E,N,N],[7,R[1694],E,E,N,N],[7,R[1695],E,E,N,N],[7,R[1696],E,E,N,N],[7,R[1697],E,E,N,N],[7,R[1698],E,E,N,N],[7,R[1699],E,E,N,N],[7,R[1700],E,E,N,N],[7,R[1701],E,E,N,N],[5,R[1702],E,E,N,N],[5,R[1703],E,E,N,N],[5,R[1704],E,E,N,N],[5,R[1705],E,E,N,N],[5,R[1706],E,E,N,N],[5,R[1707],E,E,N,N],[5,R[1708],E,E,N,N],[5,R[1709],E,E,N,N],[5,R[1710],E,E,N,N],[5,R[1711],E,E,N,N],[5,R[1712],E,E,N,N],[5,R[1713],E,E,N,N],[5,R[1714],E,E,N,N],[5,R[1715],E,E,N,N],[5,R[1716],E,E,N,N],[5,R[1717],E,E,N,N],[5,R[1718],E,E,N,N],[5,R[1719],E,E,N,N],[5,R[1720],E,E,N,N],[5,R[1721],E,E,N,N],[5,R[1722],E,E,N,N],[5,R[1723],E,E,N,N],[5,R[1724],E,E,N,N],[5,R[1725],E,E,N,N],[5,R[1726],E,E,N,N],[5,R[1727],E,E,N,N],[5,R[1728],E,E,N,N],[5,R[1729],E,E,N,N],[5,R[1730],E,E,N,N],[6,"CFURLRef",E,E,N,N],[6,R[1731],E,E,N,N],[6,R[1732],E,E,N,N],[17,R[1733],E,E,N,N],[17,R[1734],E,E,N,N],[17,R[1735],E,E,N,N],[0,"uuid",R[1288],E,N,N],[3,R[2900],R[1306],E,N,N],[3,R[1320],E,E,N,N],[12,"byte0",E,E,14,N],[12,"byte1",E,E,14,N],[12,"byte2",E,E,14,N],[12,"byte3",E,E,14,N],[12,"byte4",E,E,14,N],[12,"byte5",E,E,14,N],[12,"byte6",E,E,14,N],[12,"byte7",E,E,14,N],[12,"byte8",E,E,14,N],[12,"byte9",E,E,14,N],[12,"byte10",E,E,14,N],[12,"byte11",E,E,14,N],[12,"byte12",E,E,14,N],[12,"byte13",E,E,14,N],[12,"byte14",E,E,14,N],[12,"byte15",E,E,14,N],[5,R[1736],E,E,N,N],[5,R[1737],E,E,N,N],[5,R[1738],E,E,N,N],[5,R[1739],E,E,N,N],[6,R[2472],E,E,N,N],[11,"from",R[1290],E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[[T],["self"]]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[11],E,E,15,[[[U]],[R[12]]]],[11,R[39],E,E,15,[[["self"]],[T]]],[11,R[13],E,E,15,[[["self"]],[T]]],[11,R[14],E,E,15,[[],[R[12]]]],[11,R[18],E,E,15,[[["self"]],[R[40]]]],[11,"from",R[1292],E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,[[[T],["self"]]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[17],E,E,2,[[[T],["self"]]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[17],E,E,3,[[[T],["self"]]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"from",R[1293],E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[11],E,E,16,[[[U]],[R[12]]]],[11,R[39],E,E,16,[[["self"]],[T]]],[11,R[13],E,E,16,[[["self"]],[T]]],[11,R[14],E,E,16,[[],[R[12]]]],[11,R[18],E,E,16,[[["self"]],[R[40]]]],[11,"from",R[1294],E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[11],E,E,17,[[[U]],[R[12]]]],[11,R[39],E,E,17,[[["self"]],[T]]],[11,R[13],E,E,17,[[["self"]],[T]]],[11,R[14],E,E,17,[[],[R[12]]]],[11,R[18],E,E,17,[[["self"]],[R[40]]]],[11,"from",R[1295],E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[11],E,E,18,[[[U]],[R[12]]]],[11,R[39],E,E,18,[[["self"]],[T]]],[11,R[13],E,E,18,[[["self"]],[T]]],[11,R[14],E,E,18,[[],[R[12]]]],[11,R[18],E,E,18,[[["self"]],[R[40]]]],[11,"from",R[1296],E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[16],E,E,5,[[["self"]],[T]]],[11,R[17],E,E,5,[[[T],["self"]]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,R[18],E,E,5,[[["self"]],[R[40]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[16],E,E,6,[[["self"]],[T]]],[11,R[17],E,E,6,[[[T],["self"]]]],[11,R[11],E,E,6,[[[U]],[R[12]]]],[11,R[39],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[],[R[12]]]],[11,R[18],E,E,6,[[["self"]],[R[40]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[11],E,E,19,[[[U]],[R[12]]]],[11,R[39],E,E,19,[[["self"]],[T]]],[11,R[13],E,E,19,[[["self"]],[T]]],[11,R[14],E,E,19,[[],[R[12]]]],[11,R[18],E,E,19,[[["self"]],[R[40]]]],[11,"from",R[1297],E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[11],E,E,20,[[[U]],[R[12]]]],[11,R[39],E,E,20,[[["self"]],[T]]],[11,R[13],E,E,20,[[["self"]],[T]]],[11,R[14],E,E,20,[[],[R[12]]]],[11,R[18],E,E,20,[[["self"]],[R[40]]]],[11,"from",R[1298],E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[11],E,E,21,[[[U]],[R[12]]]],[11,R[39],E,E,21,[[["self"]],[T]]],[11,R[13],E,E,21,[[["self"]],[T]]],[11,R[14],E,E,21,[[],[R[12]]]],[11,R[18],E,E,21,[[["self"]],[R[40]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[16],E,E,7,[[["self"]],[T]]],[11,R[17],E,E,7,[[[T],["self"]]]],[11,R[11],E,E,7,[[[U]],[R[12]]]],[11,R[39],E,E,7,[[["self"]],[T]]],[11,R[13],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[],[R[12]]]],[11,R[18],E,E,7,[[["self"]],[R[40]]]],[11,"from",R[1299],E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[16],E,E,8,[[["self"]],[T]]],[11,R[17],E,E,8,[[[T],["self"]]]],[11,R[11],E,E,8,[[[U]],[R[12]]]],[11,R[39],E,E,8,[[["self"]],[T]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[],[R[12]]]],[11,R[18],E,E,8,[[["self"]],[R[40]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[11],E,E,22,[[[U]],[R[12]]]],[11,R[39],E,E,22,[[["self"]],[T]]],[11,R[13],E,E,22,[[["self"]],[T]]],[11,R[14],E,E,22,[[],[R[12]]]],[11,R[18],E,E,22,[[["self"]],[R[40]]]],[11,"from",R[1300],E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[11],E,E,23,[[[U]],[R[12]]]],[11,R[39],E,E,23,[[["self"]],[T]]],[11,R[13],E,E,23,[[["self"]],[T]]],[11,R[14],E,E,23,[[],[R[12]]]],[11,R[18],E,E,23,[[["self"]],[R[40]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[11],E,E,24,[[[U]],[R[12]]]],[11,R[39],E,E,24,[[["self"]],[T]]],[11,R[13],E,E,24,[[["self"]],[T]]],[11,R[14],E,E,24,[[],[R[12]]]],[11,R[18],E,E,24,[[["self"]],[R[40]]]],[11,"from",R[1301],E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[11],E,E,25,[[[U]],[R[12]]]],[11,R[39],E,E,25,[[["self"]],[T]]],[11,R[13],E,E,25,[[["self"]],[T]]],[11,R[14],E,E,25,[[],[R[12]]]],[11,R[18],E,E,25,[[["self"]],[R[40]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[11],E,E,26,[[[U]],[R[12]]]],[11,R[39],E,E,26,[[["self"]],[T]]],[11,R[13],E,E,26,[[["self"]],[T]]],[11,R[14],E,E,26,[[],[R[12]]]],[11,R[18],E,E,26,[[["self"]],[R[40]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[11],E,E,27,[[[U]],[R[12]]]],[11,R[39],E,E,27,[[["self"]],[T]]],[11,R[13],E,E,27,[[["self"]],[T]]],[11,R[14],E,E,27,[[],[R[12]]]],[11,R[18],E,E,27,[[["self"]],[R[40]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[11],E,E,9,[[[U]],[R[12]]]],[11,R[39],E,E,9,[[["self"]],[T]]],[11,R[13],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[],[R[12]]]],[11,R[18],E,E,9,[[["self"]],[R[40]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[11],E,E,10,[[[U]],[R[12]]]],[11,R[39],E,E,10,[[["self"]],[T]]],[11,R[13],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[],[R[12]]]],[11,R[18],E,E,10,[[["self"]],[R[40]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[11],E,E,11,[[[U]],[R[12]]]],[11,R[39],E,E,11,[[["self"]],[T]]],[11,R[13],E,E,11,[[["self"]],[T]]],[11,R[14],E,E,11,[[],[R[12]]]],[11,R[18],E,E,11,[[["self"]],[R[40]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[11],E,E,12,[[[U]],[R[12]]]],[11,R[39],E,E,12,[[["self"]],[T]]],[11,R[13],E,E,12,[[["self"]],[T]]],[11,R[14],E,E,12,[[],[R[12]]]],[11,R[18],E,E,12,[[["self"]],[R[40]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[11],E,E,28,[[[U]],[R[12]]]],[11,R[39],E,E,28,[[["self"]],[T]]],[11,R[13],E,E,28,[[["self"]],[T]]],[11,R[14],E,E,28,[[],[R[12]]]],[11,R[18],E,E,28,[[["self"]],[R[40]]]],[11,"from",R[1302],E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[16],E,E,13,[[["self"]],[T]]],[11,R[17],E,E,13,[[[T],["self"]]]],[11,R[11],E,E,13,[[[U]],[R[12]]]],[11,R[39],E,E,13,[[["self"]],[T]]],[11,R[13],E,E,13,[[["self"]],[T]]],[11,R[14],E,E,13,[[],[R[12]]]],[11,R[18],E,E,13,[[["self"]],[R[40]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[11],E,E,29,[[[U]],[R[12]]]],[11,R[39],E,E,29,[[["self"]],[T]]],[11,R[13],E,E,29,[[["self"]],[T]]],[11,R[14],E,E,29,[[],[R[12]]]],[11,R[18],E,E,29,[[["self"]],[R[40]]]],[11,"from",R[1303],E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[11],E,E,30,[[[U]],[R[12]]]],[11,R[39],E,E,30,[[["self"]],[T]]],[11,R[13],E,E,30,[[["self"]],[T]]],[11,R[14],E,E,30,[[],[R[12]]]],[11,R[18],E,E,30,[[["self"]],[R[40]]]],[11,"from",R[1304],E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[11],E,E,31,[[[U]],[R[12]]]],[11,R[39],E,E,31,[[["self"]],[T]]],[11,R[13],E,E,31,[[["self"]],[T]]],[11,R[14],E,E,31,[[],[R[12]]]],[11,R[18],E,E,31,[[["self"]],[R[40]]]],[11,"from",R[1305],E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[11],E,E,32,[[[U]],[R[12]]]],[11,R[39],E,E,32,[[["self"]],[T]]],[11,R[13],E,E,32,[[["self"]],[T]]],[11,R[14],E,E,32,[[],[R[12]]]],[11,R[18],E,E,32,[[["self"]],[R[40]]]],[11,"from",R[1306],E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[11],E,E,33,[[[U]],[R[12]]]],[11,R[39],E,E,33,[[["self"]],[T]]],[11,R[13],E,E,33,[[["self"]],[T]]],[11,R[14],E,E,33,[[],[R[12]]]],[11,R[18],E,E,33,[[["self"]],[R[40]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[16],E,E,14,[[["self"]],[T]]],[11,R[17],E,E,14,[[[T],["self"]]]],[11,R[11],E,E,14,[[[U]],[R[12]]]],[11,R[39],E,E,14,[[["self"]],[T]]],[11,R[13],E,E,14,[[["self"]],[T]]],[11,R[14],E,E,14,[[],[R[12]]]],[11,R[18],E,E,14,[[["self"]],[R[40]]]],[11,"clone",R[1290],E,0,[[["self"]],[R[1740]]]],[11,"clone",R[1292],E,3,[[["self"]],[R[1741]]]],[11,"clone",E,E,1,[[["self"]],["cfrange"]]],[11,"clone",E,E,2,[[["self"]],[R[1742]]]],[11,"clone",R[1296],E,5,[[["self"]],[R[1743]]]],[11,"clone",E,E,6,[[["self"]],[R[1744]]]],[11,"clone",R[1298],E,7,[[["self"]],[R[1745]]]],[11,"clone",R[1299],E,8,[[["self"]],[R[1746]]]],[11,"clone",R[1302],E,13,[[["self"]],[R[1747]]]],[11,"clone",R[1306],E,14,[[["self"]],[R[1307]]]],[11,"into",R[1292],E,3,[[],[R[51]]]],[11,R[79],R[1306],E,14,[[],[R[1307]]]],[11,"fmt",R[1299],E,8,[[[R[29]],["self"]],[R[12]]]]],"p":[[3,R[1308]],[3,"CFRange"],[3,R[1309]],[4,R[1310]],[8,R[1453]],[3,R[1311]],[3,R[1312]],[3,R[1313]],[3,R[1314]],[3,R[1315]],[3,R[1316]],[3,R[1317]],[3,R[1318]],[3,R[1319]],[3,R[1320]],[3,R[1748]],[3,R[1457]],[3,R[2828]],[3,R[2834]],[3,R[1322]],[3,R[1749]],[3,R[1323]],[3,R[1324]],[3,R[1325]],[4,R[1545]],[3,R[1326]],[3,R[1327]],[3,R[1328]],[3,R[1329]],[3,"__CFSet"],[3,R[1652]],[3,R[1330]],[3,"__CFURL"],[3,R[2900]]]};
searchIndex[R[1288]]={"doc":E,"i":[[0,"array",R[1288],E,N,N],[3,R[1308],R[1290],E,N,N],[12,"version",E,E,0,N],[12,"retain",E,E,0,N],[12,"release",E,E,0,N],[12,R[1289],E,E,0,N],[12,"equal",E,E,0,N],[3,R[1748],E,E,N,N],[7,R[1412],E,E,N,N],[5,R[1413],E,E,N,N],[5,R[1414],E,E,N,N],[5,R[1415],E,E,N,N],[5,R[1416],E,E,N,N],[5,R[1417],E,E,N,N],[5,R[1418],E,E,N,N],[6,R[1419],E,E,N,N],[6,R[1420],E,E,N,N],[6,R[1421],E,E,N,N],[6,R[1422],E,E,N,N],[6,R[2454],E,E,N,N],[0,R[2455],R[1288],E,N,N],[3,R[1321],R[1291],E,N,N],[5,R[2456],E,E,N,N],[5,R[2457],E,E,N,N],[5,R[2458],E,E,N,N],[5,R[2459],E,E,N,N],[5,R[2460],E,E,N,N],[5,R[2461],E,E,N,N],[5,R[2462],E,E,N,N],[5,R[2463],E,E,N,N],[6,R[2450],E,E,N,N],[6,R[2451],E,E,N,N],[0,"base",R[1288],E,N,N],[3,"CFRange",R[1292],E,N,N],[12,"location",E,E,1,N],[12,"length",E,E,1,N],[3,R[1309],E,E,N,N],[12,"version",E,E,2,N],[12,"info",E,E,2,N],[12,"retain",E,E,2,N],[12,"release",E,E,2,N],[12,R[1289],E,E,2,N],[12,R[2813],E,E,2,N],[12,R[2465],E,E,2,N],[12,R[2466],E,E,2,N],[12,R[1423],E,E,2,N],[4,R[1310],E,E,N,N],[13,"LessThan",E,E,3,N],[13,"EqualTo",E,E,3,N],[13,R[1424],E,E,3,N],[7,R[1425],E,E,N,N],[7,R[1426],E,E,N,N],[7,R[1427],E,E,N,N],[7,R[1428],E,E,N,N],[7,R[1429],E,E,N,N],[7,R[1430],E,E,N,N],[5,R[1431],E,E,N,N],[5,R[1432],E,E,N,N],[5,R[1433],E,E,N,N],[5,R[1434],E,E,N,N],[5,R[1435],E,E,N,N],[5,R[1436],E,E,N,N],[5,R[1437],E,E,N,N],[5,R[1438],E,E,N,N],[5,R[1439],E,E,N,N],[7,"kCFNull",E,E,N,N],[5,R[1440],E,E,N,N],[5,"CFEqual",E,E,N,N],[5,R[1441],E,E,N,N],[5,R[1442],E,E,N,N],[5,"CFHash",E,E,N,N],[5,R[2814],E,E,N,N],[5,"CFRetain",E,E,N,N],[5,"CFShow",E,E,N,N],[6,"Boolean",E,E,N,N],[6,"CFIndex",E,E,N,N],[6,R[1443],E,E,N,N],[6,R[1444],E,E,N,N],[6,R[2812],E,E,N,N],[6,R[2467],E,E,N,N],[6,"CFTypeID",E,E,N,N],[6,R[2468],E,E,N,N],[6,R[1445],E,E,N,N],[6,"OSStatus",E,E,N,N],[6,"SInt32",E,E,N,N],[6,R[1446],E,E,N,N],[6,R[1447],E,E,N,N],[6,R[1448],E,E,N,N],[6,R[1449],E,E,N,N],[6,R[1450],E,E,N,N],[6,R[1451],E,E,N,N],[6,R[1452],E,E,N,N],[8,R[1453],E,R[1454],N,N],[10,R[1455],E,E,4,[[["self"]]]],[10,R[1456],E,E,4,[[],["self"]]],[11,"init",E,E,1,[[["cfindex"]],["cfrange"]]],[0,"bundle",R[1288],E,N,N],[3,R[1457],R[1293],E,N,N],[5,R[1458],E,E,N,N],[5,R[1459],E,E,N,N],[5,R[1460],E,E,N,N],[5,R[1461],E,E,N,N],[5,R[1462],E,E,N,N],[5,R[1463],E,E,N,N],[5,R[1464],E,E,N,N],[5,R[1465],E,E,N,N],[6,R[1466],E,E,N,N],[0,"data",R[1288],E,N,N],[3,R[2828],R[1294],E,N,N],[5,R[1467],E,E,N,N],[5,R[1468],E,E,N,N],[5,R[1469],E,E,N,N],[5,R[1470],E,E,N,N],[6,R[2469],E,E,N,N],[0,"date",R[1288],E,N,N],[3,R[2834],R[1295],E,N,N],[7,R[1471],E,E,N,N],[7,R[1472],E,E,N,N],[5,R[1473],E,E,N,N],[5,R[1474],E,E,N,N],[5,R[1475],E,E,N,N],[5,R[1476],E,E,N,N],[5,R[1477],E,E,N,N],[5,R[1478],E,E,N,N],[6,R[2470],E,E,N,N],[6,R[1479],E,E,N,N],[6,R[1480],E,E,N,N],[0,R[2471],R[1288],E,N,N],[3,R[1311],R[1296],E,N,N],[12,"version",E,E,5,N],[12,"retain",E,E,5,N],[12,"release",E,E,5,N],[12,R[1289],E,E,5,N],[12,"equal",E,E,5,N],[12,"hash",E,E,5,N],[3,R[1312],E,E,N,N],[12,"version",E,E,6,N],[12,"retain",E,E,6,N],[12,"release",E,E,6,N],[12,R[1289],E,E,6,N],[12,"equal",E,E,6,N],[3,R[1322],E,E,N,N],[7,R[1481],E,E,N,N],[7,R[1482],E,E,N,N],[5,R[1483],E,E,N,N],[5,R[1484],E,E,N,N],[5,R[1485],E,E,N,N],[5,R[1486],E,E,N,N],[5,R[1487],E,E,N,N],[5,R[1488],E,E,N,N],[5,R[1489],E,E,N,N],[5,R[1490],E,E,N,N],[5,R[1491],E,E,N,N],[5,R[1492],E,E,N,N],[5,R[1493],E,E,N,N],[5,R[1494],E,E,N,N],[5,R[1495],E,E,N,N],[5,R[1496],E,E,N,N],[6,R[1497],E,E,N,N],[6,R[1498],E,E,N,N],[6,R[1499],E,E,N,N],[6,R[1500],E,E,N,N],[6,R[1501],E,E,N,N],[6,R[1502],E,E,N,N],[6,R[1503],E,E,N,N],[6,R[1504],E,E,N,N],[0,"error",R[1288],E,N,N],[3,R[1749],R[1297],E,N,N],[5,R[1505],E,E,N,N],[7,R[1506],E,E,N,N],[7,R[1507],E,E,N,N],[7,R[1508],E,E,N,N],[7,R[1509],E,E,N,N],[5,R[1510],E,E,N,N],[5,R[1511],E,E,N,N],[5,R[1512],E,E,N,N],[6,R[2464],E,E,N,N],[0,R[1513],R[1288],E,N,N],[3,R[1323],R[1298],E,N,N],[3,R[1313],E,E,N,N],[12,"version",E,E,7,N],[12,"info",E,E,7,N],[12,"retain",E,E,7,N],[12,"release",E,E,7,N],[12,R[1289],E,E,7,N],[5,R[1514],E,E,N,N],[5,R[1515],E,E,N,N],[5,R[1516],E,E,N,N],[5,R[1517],E,E,N,N],[5,R[1518],E,E,N,N],[5,R[1519],E,E,N,N],[5,R[1520],E,E,N,N],[5,R[1521],E,E,N,N],[5,R[1522],E,E,N,N],[6,R[1523],E,E,N,N],[6,R[1524],E,E,N,N],[6,R[1525],E,E,N,N],[17,R[1526],E,E,N,N],[17,R[1527],E,E,N,N],[0,R[1528],R[1288],E,N,N],[3,R[1314],R[1299],E,N,N],[12,"version",E,E,8,N],[12,"info",E,E,8,N],[12,"retain",E,E,8,N],[12,"release",E,E,8,N],[12,R[1289],E,E,8,N],[3,R[1324],E,E,N,N],[5,R[1529],E,E,N,N],[5,R[1530],E,E,N,N],[5,R[1531],E,E,N,N],[5,R[1532],E,E,N,N],[5,R[1533],E,E,N,N],[5,R[1534],E,E,N,N],[5,R[1535],E,E,N,N],[5,R[1536],E,E,N,N],[5,R[1537],E,E,N,N],[5,R[1538],E,E,N,N],[5,R[1539],E,E,N,N],[5,R[1540],E,E,N,N],[5,R[1541],E,E,N,N],[6,R[1542],E,E,N,N],[6,R[1543],E,E,N,N],[6,R[1544],E,E,N,N],[0,"number",R[1288],E,N,N],[3,R[1325],R[1300],E,N,N],[4,R[1545],E,E,N,N],[7,R[1546],E,E,N,N],[7,R[1547],E,E,N,N],[5,R[1548],E,E,N,N],[5,R[1549],E,E,N,N],[5,R[1550],E,E,N,N],[5,R[1551],E,E,N,N],[5,R[1552],E,E,N,N],[6,R[1553],E,E,N,N],[6,R[1554],E,E,N,N],[6,R[1555],E,E,N,N],[7,R[1556],E,E,N,N],[7,R[1557],E,E,N,N],[7,R[1558],E,E,N,N],[7,R[1559],E,E,N,N],[0,R[1560],R[1288],E,N,N],[5,R[1561],R[1562],E,N,N],[5,R[1563],E,E,N,N],[6,R[1564],E,E,N,N],[6,R[1565],E,E,N,N],[6,R[1566],E,E,N,N],[17,R[1567],E,E,N,N],[17,R[1568],E,E,N,N],[17,R[1569],E,E,N,N],[17,R[1570],E,E,N,N],[17,R[1571],E,E,N,N],[17,R[1572],E,E,N,N],[0,"runloop",R[1288],E,N,N],[3,R[1326],R[1301],E,N,N],[3,R[1327],E,E,N,N],[3,R[1328],E,E,N,N],[3,R[1315],E,E,N,N],[12,"version",E,E,9,N],[12,"info",E,E,9,N],[12,"retain",E,E,9,N],[12,"release",E,E,9,N],[12,R[1289],E,E,9,N],[12,"equal",E,E,9,N],[12,"hash",E,E,9,N],[12,"schedule",E,E,9,N],[12,"cancel",E,E,9,N],[12,"perform",E,E,9,N],[3,R[1316],E,E,N,N],[12,"version",E,E,10,N],[12,"info",E,E,10,N],[12,"retain",E,E,10,N],[12,"release",E,E,10,N],[12,R[1289],E,E,10,N],[12,"equal",E,E,10,N],[12,"hash",E,E,10,N],[12,"getPort",E,E,10,N],[12,"perform",E,E,10,N],[3,R[1317],E,E,N,N],[12,"version",E,E,11,N],[12,"info",E,E,11,N],[12,"retain",E,E,11,N],[12,"release",E,E,11,N],[12,R[1289],E,E,11,N],[3,R[1318],E,E,N,N],[12,"version",E,E,12,N],[12,"info",E,E,12,N],[12,"retain",E,E,12,N],[12,"release",E,E,12,N],[12,R[1289],E,E,12,N],[3,R[1329],E,E,N,N],[7,R[1573],E,E,N,N],[7,R[1574],E,E,N,N],[5,R[1575],E,E,N,N],[5,R[1576],E,E,N,N],[5,R[1577],E,E,N,N],[5,R[1578],E,E,N,N],[5,R[1579],E,E,N,N],[5,R[1580],E,E,N,N],[5,R[1581],E,E,N,N],[5,R[1582],E,E,N,N],[5,R[1583],E,E,N,N],[5,R[1584],E,E,N,N],[5,R[1585],E,E,N,N],[5,R[1586],E,E,N,N],[5,R[1587],E,E,N,N],[5,R[1588],E,E,N,N],[5,R[1589],E,E,N,N],[5,R[1590],E,E,N,N],[5,R[1591],E,E,N,N],[5,R[1592],E,E,N,N],[5,R[1593],E,E,N,N],[5,R[1594],E,E,N,N],[5,R[1595],E,E,N,N],[5,R[1596],E,E,N,N],[5,R[1597],E,E,N,N],[5,R[1598],E,E,N,N],[5,R[1599],E,E,N,N],[5,R[1600],E,E,N,N],[5,R[1601],E,E,N,N],[5,R[1602],E,E,N,N],[5,R[1603],E,E,N,N],[5,R[1604],E,E,N,N],[5,R[1605],E,E,N,N],[5,R[1606],E,E,N,N],[5,R[1607],E,E,N,N],[5,R[1608],E,E,N,N],[5,R[1609],E,E,N,N],[5,R[1610],E,E,N,N],[5,R[1611],E,E,N,N],[5,R[1612],E,E,N,N],[5,R[1613],E,E,N,N],[5,R[1614],E,E,N,N],[5,R[1615],E,E,N,N],[5,R[1616],E,E,N,N],[5,R[1617],E,E,N,N],[5,R[1618],E,E,N,N],[5,R[1619],E,E,N,N],[5,R[1620],E,E,N,N],[5,R[1621],E,E,N,N],[5,R[1622],E,E,N,N],[6,R[1623],E,E,N,N],[6,R[1624],E,E,N,N],[6,R[1625],E,E,N,N],[6,R[1626],E,E,N,N],[6,R[1627],E,E,N,N],[6,R[1628],E,E,N,N],[6,R[1629],E,E,N,N],[17,R[1630],E,E,N,N],[17,R[1631],E,E,N,N],[17,R[1632],E,E,N,N],[17,R[1633],E,E,N,N],[17,R[1634],E,E,N,N],[17,R[1635],E,E,N,N],[17,R[1636],E,E,N,N],[17,R[1637],E,E,N,N],[17,R[1638],E,E,N,N],[17,R[1639],E,E,N,N],[17,R[1640],E,E,N,N],[0,"set",R[1288],E,N,N],[3,R[1319],R[1302],E,N,N],[12,"version",E,E,13,N],[12,"retain",E,E,13,N],[12,"release",E,E,13,N],[12,R[1289],E,E,13,N],[12,"equal",E,E,13,N],[12,"hash",E,E,13,N],[3,"__CFSet",E,E,N,N],[7,R[1641],E,E,N,N],[5,R[1642],E,E,N,N],[5,R[1643],E,E,N,N],[5,R[1644],E,E,N,N],[5,R[1645],E,E,N,N],[6,R[1646],E,E,N,N],[6,R[1647],E,E,N,N],[6,R[1648],E,E,N,N],[6,R[1649],E,E,N,N],[6,R[1650],E,E,N,N],[6,R[1651],E,E,N,N],[6,"CFSetRef",E,E,N,N],[0,"string",R[1288],E,N,N],[3,R[1652],R[1303],E,N,N],[5,R[1653],E,E,N,N],[5,R[1654],E,E,N,N],[5,R[1655],E,E,N,N],[5,R[1656],E,E,N,N],[5,R[1657],E,E,N,N],[5,R[1658],E,E,N,N],[5,R[1659],E,E,N,N],[5,R[1660],E,E,N,N],[6,"UniChar",E,E,N,N],[6,R[1661],E,E,N,N],[6,R[1662],E,E,N,N],[6,R[1663],E,E,N,N],[6,R[1664],E,E,N,N],[7,R[1665],E,E,N,N],[0,R[788],R[1288],E,N,N],[3,R[1330],R[1304],E,N,N],[5,R[1666],E,E,N,N],[5,R[1667],E,E,N,N],[5,R[1668],E,E,N,N],[5,R[1669],E,E,N,N],[5,R[1670],E,E,N,N],[6,R[1671],E,E,N,N],[0,"url",R[1288],E,N,N],[3,"__CFURL",R[1305],E,N,N],[7,R[1672],E,E,N,N],[7,R[1673],E,E,N,N],[7,R[1674],E,E,N,N],[7,R[1675],E,E,N,N],[7,R[1676],E,E,N,N],[7,R[1677],E,E,N,N],[7,R[1678],E,E,N,N],[7,R[1679],E,E,N,N],[7,R[1680],E,E,N,N],[7,R[1681],E,E,N,N],[7,R[1682],E,E,N,N],[7,R[1683],E,E,N,N],[7,R[1684],E,E,N,N],[7,R[1685],E,E,N,N],[7,R[1686],E,E,N,N],[7,R[1687],E,E,N,N],[7,R[1688],E,E,N,N],[7,R[1689],E,E,N,N],[7,R[1690],E,E,N,N],[7,R[1691],E,E,N,N],[7,R[1692],E,E,N,N],[7,R[1693],E,E,N,N],[7,R[1694],E,E,N,N],[7,R[1695],E,E,N,N],[7,R[1696],E,E,N,N],[7,R[1697],E,E,N,N],[7,R[1698],E,E,N,N],[7,R[1699],E,E,N,N],[7,R[1700],E,E,N,N],[7,R[1701],E,E,N,N],[5,R[1702],E,E,N,N],[5,R[1703],E,E,N,N],[5,R[1704],E,E,N,N],[5,R[1705],E,E,N,N],[5,R[1706],E,E,N,N],[5,R[1707],E,E,N,N],[5,R[1708],E,E,N,N],[5,R[1709],E,E,N,N],[5,R[1710],E,E,N,N],[5,R[1711],E,E,N,N],[5,R[1712],E,E,N,N],[5,R[1713],E,E,N,N],[5,R[1714],E,E,N,N],[5,R[1715],E,E,N,N],[5,R[1716],E,E,N,N],[5,R[1717],E,E,N,N],[5,R[1718],E,E,N,N],[5,R[1719],E,E,N,N],[5,R[1720],E,E,N,N],[5,R[1721],E,E,N,N],[5,R[1722],E,E,N,N],[5,R[1723],E,E,N,N],[5,R[1724],E,E,N,N],[5,R[1725],E,E,N,N],[5,R[1726],E,E,N,N],[5,R[1727],E,E,N,N],[5,R[1728],E,E,N,N],[5,R[1729],E,E,N,N],[5,R[1730],E,E,N,N],[6,"CFURLRef",E,E,N,N],[6,R[1731],E,E,N,N],[6,R[1732],E,E,N,N],[17,R[1733],E,E,N,N],[17,R[1734],E,E,N,N],[17,R[1735],E,E,N,N],[0,"uuid",R[1288],E,N,N],[3,R[2900],R[1306],E,N,N],[3,R[1320],E,E,N,N],[12,"byte0",E,E,14,N],[12,"byte1",E,E,14,N],[12,"byte2",E,E,14,N],[12,"byte3",E,E,14,N],[12,"byte4",E,E,14,N],[12,"byte5",E,E,14,N],[12,"byte6",E,E,14,N],[12,"byte7",E,E,14,N],[12,"byte8",E,E,14,N],[12,"byte9",E,E,14,N],[12,"byte10",E,E,14,N],[12,"byte11",E,E,14,N],[12,"byte12",E,E,14,N],[12,"byte13",E,E,14,N],[12,"byte14",E,E,14,N],[12,"byte15",E,E,14,N],[5,R[1736],E,E,N,N],[5,R[1737],E,E,N,N],[5,R[1738],E,E,N,N],[5,R[1739],E,E,N,N],[6,R[2472],E,E,N,N],[11,"from",R[1290],E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[[T],["self"]]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[11],E,E,15,[[[U]],[R[12]]]],[11,R[39],E,E,15,[[["self"]],[T]]],[11,R[13],E,E,15,[[["self"]],[T]]],[11,R[14],E,E,15,[[],[R[12]]]],[11,R[18],E,E,15,[[["self"]],[R[40]]]],[11,"from",R[1291],E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[11],E,E,16,[[[U]],[R[12]]]],[11,R[39],E,E,16,[[["self"]],[T]]],[11,R[13],E,E,16,[[["self"]],[T]]],[11,R[14],E,E,16,[[],[R[12]]]],[11,R[18],E,E,16,[[["self"]],[R[40]]]],[11,"from",R[1292],E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,[[[T],["self"]]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[17],E,E,2,[[[T],["self"]]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[17],E,E,3,[[[T],["self"]]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"from",R[1293],E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[11],E,E,17,[[[U]],[R[12]]]],[11,R[39],E,E,17,[[["self"]],[T]]],[11,R[13],E,E,17,[[["self"]],[T]]],[11,R[14],E,E,17,[[],[R[12]]]],[11,R[18],E,E,17,[[["self"]],[R[40]]]],[11,"from",R[1294],E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[11],E,E,18,[[[U]],[R[12]]]],[11,R[39],E,E,18,[[["self"]],[T]]],[11,R[13],E,E,18,[[["self"]],[T]]],[11,R[14],E,E,18,[[],[R[12]]]],[11,R[18],E,E,18,[[["self"]],[R[40]]]],[11,"from",R[1295],E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[11],E,E,19,[[[U]],[R[12]]]],[11,R[39],E,E,19,[[["self"]],[T]]],[11,R[13],E,E,19,[[["self"]],[T]]],[11,R[14],E,E,19,[[],[R[12]]]],[11,R[18],E,E,19,[[["self"]],[R[40]]]],[11,"from",R[1296],E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[16],E,E,5,[[["self"]],[T]]],[11,R[17],E,E,5,[[[T],["self"]]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,R[18],E,E,5,[[["self"]],[R[40]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[16],E,E,6,[[["self"]],[T]]],[11,R[17],E,E,6,[[[T],["self"]]]],[11,R[11],E,E,6,[[[U]],[R[12]]]],[11,R[39],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[],[R[12]]]],[11,R[18],E,E,6,[[["self"]],[R[40]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[11],E,E,20,[[[U]],[R[12]]]],[11,R[39],E,E,20,[[["self"]],[T]]],[11,R[13],E,E,20,[[["self"]],[T]]],[11,R[14],E,E,20,[[],[R[12]]]],[11,R[18],E,E,20,[[["self"]],[R[40]]]],[11,"from",R[1297],E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[11],E,E,21,[[[U]],[R[12]]]],[11,R[39],E,E,21,[[["self"]],[T]]],[11,R[13],E,E,21,[[["self"]],[T]]],[11,R[14],E,E,21,[[],[R[12]]]],[11,R[18],E,E,21,[[["self"]],[R[40]]]],[11,"from",R[1298],E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[11],E,E,22,[[[U]],[R[12]]]],[11,R[39],E,E,22,[[["self"]],[T]]],[11,R[13],E,E,22,[[["self"]],[T]]],[11,R[14],E,E,22,[[],[R[12]]]],[11,R[18],E,E,22,[[["self"]],[R[40]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[16],E,E,7,[[["self"]],[T]]],[11,R[17],E,E,7,[[[T],["self"]]]],[11,R[11],E,E,7,[[[U]],[R[12]]]],[11,R[39],E,E,7,[[["self"]],[T]]],[11,R[13],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[],[R[12]]]],[11,R[18],E,E,7,[[["self"]],[R[40]]]],[11,"from",R[1299],E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[16],E,E,8,[[["self"]],[T]]],[11,R[17],E,E,8,[[[T],["self"]]]],[11,R[11],E,E,8,[[[U]],[R[12]]]],[11,R[39],E,E,8,[[["self"]],[T]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[],[R[12]]]],[11,R[18],E,E,8,[[["self"]],[R[40]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[11],E,E,23,[[[U]],[R[12]]]],[11,R[39],E,E,23,[[["self"]],[T]]],[11,R[13],E,E,23,[[["self"]],[T]]],[11,R[14],E,E,23,[[],[R[12]]]],[11,R[18],E,E,23,[[["self"]],[R[40]]]],[11,"from",R[1300],E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[11],E,E,24,[[[U]],[R[12]]]],[11,R[39],E,E,24,[[["self"]],[T]]],[11,R[13],E,E,24,[[["self"]],[T]]],[11,R[14],E,E,24,[[],[R[12]]]],[11,R[18],E,E,24,[[["self"]],[R[40]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[11],E,E,25,[[[U]],[R[12]]]],[11,R[39],E,E,25,[[["self"]],[T]]],[11,R[13],E,E,25,[[["self"]],[T]]],[11,R[14],E,E,25,[[],[R[12]]]],[11,R[18],E,E,25,[[["self"]],[R[40]]]],[11,"from",R[1301],E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[11],E,E,26,[[[U]],[R[12]]]],[11,R[39],E,E,26,[[["self"]],[T]]],[11,R[13],E,E,26,[[["self"]],[T]]],[11,R[14],E,E,26,[[],[R[12]]]],[11,R[18],E,E,26,[[["self"]],[R[40]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[11],E,E,27,[[[U]],[R[12]]]],[11,R[39],E,E,27,[[["self"]],[T]]],[11,R[13],E,E,27,[[["self"]],[T]]],[11,R[14],E,E,27,[[],[R[12]]]],[11,R[18],E,E,27,[[["self"]],[R[40]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[11],E,E,28,[[[U]],[R[12]]]],[11,R[39],E,E,28,[[["self"]],[T]]],[11,R[13],E,E,28,[[["self"]],[T]]],[11,R[14],E,E,28,[[],[R[12]]]],[11,R[18],E,E,28,[[["self"]],[R[40]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[11],E,E,9,[[[U]],[R[12]]]],[11,R[39],E,E,9,[[["self"]],[T]]],[11,R[13],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[],[R[12]]]],[11,R[18],E,E,9,[[["self"]],[R[40]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[11],E,E,10,[[[U]],[R[12]]]],[11,R[39],E,E,10,[[["self"]],[T]]],[11,R[13],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[],[R[12]]]],[11,R[18],E,E,10,[[["self"]],[R[40]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[11],E,E,11,[[[U]],[R[12]]]],[11,R[39],E,E,11,[[["self"]],[T]]],[11,R[13],E,E,11,[[["self"]],[T]]],[11,R[14],E,E,11,[[],[R[12]]]],[11,R[18],E,E,11,[[["self"]],[R[40]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[11],E,E,12,[[[U]],[R[12]]]],[11,R[39],E,E,12,[[["self"]],[T]]],[11,R[13],E,E,12,[[["self"]],[T]]],[11,R[14],E,E,12,[[],[R[12]]]],[11,R[18],E,E,12,[[["self"]],[R[40]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[11],E,E,29,[[[U]],[R[12]]]],[11,R[39],E,E,29,[[["self"]],[T]]],[11,R[13],E,E,29,[[["self"]],[T]]],[11,R[14],E,E,29,[[],[R[12]]]],[11,R[18],E,E,29,[[["self"]],[R[40]]]],[11,"from",R[1302],E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[16],E,E,13,[[["self"]],[T]]],[11,R[17],E,E,13,[[[T],["self"]]]],[11,R[11],E,E,13,[[[U]],[R[12]]]],[11,R[39],E,E,13,[[["self"]],[T]]],[11,R[13],E,E,13,[[["self"]],[T]]],[11,R[14],E,E,13,[[],[R[12]]]],[11,R[18],E,E,13,[[["self"]],[R[40]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[11],E,E,30,[[[U]],[R[12]]]],[11,R[39],E,E,30,[[["self"]],[T]]],[11,R[13],E,E,30,[[["self"]],[T]]],[11,R[14],E,E,30,[[],[R[12]]]],[11,R[18],E,E,30,[[["self"]],[R[40]]]],[11,"from",R[1303],E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[11],E,E,31,[[[U]],[R[12]]]],[11,R[39],E,E,31,[[["self"]],[T]]],[11,R[13],E,E,31,[[["self"]],[T]]],[11,R[14],E,E,31,[[],[R[12]]]],[11,R[18],E,E,31,[[["self"]],[R[40]]]],[11,"from",R[1304],E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[11],E,E,32,[[[U]],[R[12]]]],[11,R[39],E,E,32,[[["self"]],[T]]],[11,R[13],E,E,32,[[["self"]],[T]]],[11,R[14],E,E,32,[[],[R[12]]]],[11,R[18],E,E,32,[[["self"]],[R[40]]]],[11,"from",R[1305],E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[11],E,E,33,[[[U]],[R[12]]]],[11,R[39],E,E,33,[[["self"]],[T]]],[11,R[13],E,E,33,[[["self"]],[T]]],[11,R[14],E,E,33,[[],[R[12]]]],[11,R[18],E,E,33,[[["self"]],[R[40]]]],[11,"from",R[1306],E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[11],E,E,34,[[[U]],[R[12]]]],[11,R[39],E,E,34,[[["self"]],[T]]],[11,R[13],E,E,34,[[["self"]],[T]]],[11,R[14],E,E,34,[[],[R[12]]]],[11,R[18],E,E,34,[[["self"]],[R[40]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[16],E,E,14,[[["self"]],[T]]],[11,R[17],E,E,14,[[[T],["self"]]]],[11,R[11],E,E,14,[[[U]],[R[12]]]],[11,R[39],E,E,14,[[["self"]],[T]]],[11,R[13],E,E,14,[[["self"]],[T]]],[11,R[14],E,E,14,[[],[R[12]]]],[11,R[18],E,E,14,[[["self"]],[R[40]]]],[11,"clone",R[1290],E,0,[[["self"]],[R[1740]]]],[11,"clone",R[1292],E,3,[[["self"]],[R[1741]]]],[11,"clone",E,E,1,[[["self"]],["cfrange"]]],[11,"clone",E,E,2,[[["self"]],[R[1742]]]],[11,"clone",R[1296],E,5,[[["self"]],[R[1743]]]],[11,"clone",E,E,6,[[["self"]],[R[1744]]]],[11,"clone",R[1298],E,7,[[["self"]],[R[1745]]]],[11,"clone",R[1299],E,8,[[["self"]],[R[1746]]]],[11,"clone",R[1302],E,13,[[["self"]],[R[1747]]]],[11,"clone",R[1306],E,14,[[["self"]],[R[1307]]]],[11,"into",R[1292],E,3,[[],[R[51]]]],[11,R[79],R[1306],E,14,[[],[R[1307]]]],[11,"fmt",R[1299],E,8,[[[R[29]],["self"]],[R[12]]]]],"p":[[3,R[1308]],[3,"CFRange"],[3,R[1309]],[4,R[1310]],[8,R[1453]],[3,R[1311]],[3,R[1312]],[3,R[1313]],[3,R[1314]],[3,R[1315]],[3,R[1316]],[3,R[1317]],[3,R[1318]],[3,R[1319]],[3,R[1320]],[3,R[1748]],[3,R[1321]],[3,R[1457]],[3,R[2828]],[3,R[2834]],[3,R[1322]],[3,R[1749]],[3,R[1323]],[3,R[1324]],[3,R[1325]],[4,R[1545]],[3,R[1326]],[3,R[1327]],[3,R[1328]],[3,R[1329]],[3,"__CFSet"],[3,R[1652]],[3,R[1330]],[3,"__CFURL"],[3,R[2900]]]};
searchIndex[R[128]]={"doc":"Zero-cost Futures in Rust","i":[[4,"Async",R[128],R[4946],N,N],[13,"Ready",E,R[4947],0,N],[13,R[89],E,R[4948],0,N],[4,R[195],E,R[4949],N,N],[13,"Ready",E,R[4950],1,N],[13,R[89],E,R[4951],1,N],[11,"map",E,R[4952],0,[[["f"]],["async"]]],[11,R[90],E,R[4953],0,[[["self"]],["bool"]]],[11,R[91],E,R[4954],0,[[["self"]],["bool"]]],[11,"map",E,R[4955],1,[[["f"]],[R[184]]]],[11,R[90],E,R[4956],1,[[["self"]],["bool"]]],[11,R[91],E,R[4957],1,[[["self"]],["bool"]]],[0,"future",E,"Futures",N,N],[3,"Empty",R[169],R[4958],N,N],[3,"Lazy",E,R[4959],N,N],[3,"PollFn",E,R[4960],N,N],[3,R[218],E,R[4961],N,N],[3,"LoopFn",E,R[4962],N,N],[3,"AndThen",E,R[4963],N,N],[3,"Flatten",E,R[4964],N,N],[3,R[219],E,R[4965],N,N],[3,"Fuse",E,R[4966],N,N],[3,R[220],E,R[4967],N,N],[3,"Join",E,R[4968],N,N],[3,"Join3",E,R[4969],N,N],[3,"Join4",E,R[4970],N,N],[3,"Join5",E,R[4971],N,N],[3,"Map",E,R[4972],N,N],[3,"MapErr",E,R[4973],N,N],[3,"FromErr",E,R[4974],N,N],[3,"OrElse",E,R[4975],N,N],[3,"Select",E,R[4976],N,N],[3,R[221],E,R[4977],N,N],[3,"Select2",E,R[4978],N,N],[3,"Then",E,R[4979],N,N],[3,"Inspect",E,R[96],N,N],[3,R[104],E,R[4980],N,N],[3,"JoinAll",E,R[4981],N,N],[3,R[222],E,R[4982],N,N],[3,"SelectOk",E,R[4983],N,N],[3,"Shared",E,R[4984],N,N],[3,R[223],E,R[4985],N,N],[3,R[224],E,R[4986],N,N],[3,R[199],E,R[4987],N,N],[4,"Loop",E,R[4988],N,N],[13,"Break",E,R[4989],2,N],[13,"Continue",E,R[4990],2,N],[4,"Either",E,R[4991],N,N],[13,"A",E,R[4992],3,N],[13,"B",E,R[4993],3,N],[4,R[196],E,R[4994],N,N],[13,R[4358],E,R[4995],4,N],[13,"NoCapacity",E,R[4996],4,N],[5,"empty",E,R[4997],N,[[],["empty"]]],[5,"lazy",E,R[4998],N,[[["f"]],["lazy"]]],[5,"poll_fn",E,R[4999],N,[[["f"]],["pollfn"]]],[5,R[12],E,R[5000],N,[[[R[12]]],[R[92]]]],[5,"ok",E,R[93],N,[[[T]],[R[92]]]],[5,"err",E,R[93],N,[[["e"]],[R[92]]]],[5,"loop_fn",E,R[5001],N,[[["s"],["f"]],["loopfn"]]],[5,"join_all",E,R[5002],N,[[["i"]],["joinall"]]],[5,"select_all",E,R[5003],N,[[["i"]],["selectall"]]],[5,"select_ok",E,R[5004],N,[[["i"]],["selectok"]]],[11,"is_done",E,R[5005],5,[[["self"]],["bool"]]],[11,"split",E,R[5006],3,[[]]],[11,"peek",E,R[5007],6,[[["self"]],[[R[52],[R[12]]],[R[12],[R[188],R[189]]]]]],[8,"Future",E,R[4744],N,N],[16,"Item",E,R[4745],7,N],[16,"Error",E,R[4746],7,N],[10,"poll",E,R[4747],7,[[["self"]],["poll"]]],[11,"wait",E,R[4748],7,[[],[R[12]]]],[11,"map",E,R[4749],7,[[["f"]],["map"]]],[11,"map_err",E,R[4750],7,[[["f"]],["maperr"]]],[11,"from_err",E,R[4751],7,[[],[["fromerr"],["from"]]]],[11,"then",E,R[4752],7,[[["f"]],["then"]]],[11,"and_then",E,R[4753],7,[[["f"]],["andthen"]]],[11,"or_else",E,R[4754],7,[[["f"]],["orelse"]]],[11,"select",E,R[4755],7,[[["b"]],["select"]]],[11,"select2",E,R[4756],7,[[["b"]],["select2"]]],[11,"join",E,R[4757],7,[[["b"]],["join"]]],[11,"join3",E,R[94],7,[[["c"],["b"]],["join3"]]],[11,"join4",E,R[94],7,[[["c"],["d"],["b"]],["join4"]]],[11,"join5",E,R[94],7,[[["e"],["c"],["d"],["b"]],["join5"]]],[11,R[4758],E,R[4759],7,[[],[R[5008]]]],[11,"flatten",E,R[95],7,[[],["flatten"]]],[11,R[4760],E,R[95],7,[[],[R[4761]]]],[11,"fuse",E,R[4762],7,[[],["fuse"]]],[11,"inspect",E,R[96],7,[[["f"]],["inspect"]]],[11,R[121],E,R[4763],7,[[],[R[122]]]],[11,"shared",E,R[4764],7,[[],["shared"]]],[8,R[197],E,R[4765],N,N],[16,"Future",E,R[4766],8,N],[16,"Item",E,R[4767],8,N],[16,"Error",E,R[4768],8,N],[10,R[99],E,R[4769],8,[[]]],[8,R[198],E,R[5009],N,N],[16,"Future",E,R[5010],9,N],[16,"Error",E,R[5011],9,N],[10,R[5012],E,R[5013],9,[[[T]]]],[8,R[4941],E,R[5014],N,N],[10,"execute",E,R[5015],10,[[["self"],["f"]],[[R[12],[R[97]]],[R[97]]]]],[11,"new",E,R[5016],11,[[[R[98]],["f"]],[R[97]]]],[11,"kind",E,R[5017],11,[[["self"]],[R[98]]]],[11,R[99],E,R[5018],11,[[],["f"]]],[0,"stream",R[128],R[5019],N,N],[3,"Iter",R[117],R[100],N,N],[3,"IterStream",E,R[100],N,N],[3,"IterOk",E,R[100],N,N],[3,R[225],E,R[100],N,N],[3,"Repeat",E,R[5020],N,N],[3,"AndThen",E,R[5021],N,N],[3,"Chain",E,R[5022],N,N],[3,"Concat",E,R[101],N,N],[3,"Concat2",E,R[101],N,N],[3,"Empty",E,R[5023],N,N],[3,"Filter",E,R[5024],N,N],[3,R[202],E,R[5025],N,N],[3,"Flatten",E,R[5026],N,N],[3,"Fold",E,R[5027],N,N],[3,"ForEach",E,R[5028],N,N],[3,"FromErr",E,R[5029],N,N],[3,"Fuse",E,R[5030],N,N],[3,R[203],E,R[5031],N,N],[3,"Inspect",E,R[5032],N,N],[3,R[204],E,R[5033],N,N],[3,"Map",E,R[5034],N,N],[3,"MapErr",E,R[5035],N,N],[3,"Merge",E,R[102],N,N],[3,"Once",E,R[5036],N,N],[3,"OrElse",E,R[5037],N,N],[3,"Peekable",E,R[5038],N,N],[3,"PollFn",E,R[5039],N,N],[3,"Select",E,R[102],N,N],[3,"Skip",E,R[5040],N,N],[3,R[205],E,R[5041],N,N],[3,"Take",E,R[5042],N,N],[3,R[206],E,R[547],N,N],[3,"Then",E,R[5043],N,N],[3,"Unfold",E,R[5044],N,N],[3,"Zip",E,R[102],N,N],[3,"Forward",E,R[5045],N,N],[3,"Buffered",E,R[103],N,N],[3,R[207],E,R[103],N,N],[3,R[104],E,R[5046],N,N],[3,"Chunks",E,R[5047],N,N],[3,"Collect",E,R[5048],N,N],[3,"Wait",E,R[5049],N,N],[3,R[208],E,R[5050],N,N],[3,R[209],E,R[5051],N,N],[3,R[200],E,R[5052],N,N],[12,"0",E,E,12,N],[12,"1",E,E,12,N],[3,R[211],E,R[5053],N,N],[4,R[201],E,R[5054],N,N],[13,"First",E,R[5055],13,N],[13,"Second",E,R[5056],13,N],[13,"Both",E,R[5057],13,N],[5,"iter",E,R[105],N,[[["j"]],["iter"]]],[5,"iter_ok",E,R[5058],N,[[["i"]],["iterok"]]],[5,R[5059],E,R[105],N,[[["j"]],["iterresult"]]],[5,"repeat",E,R[5060],N,[[[T]],["repeat"]]],[5,"empty",E,R[5061],N,[[],["empty"]]],[5,"once",E,R[5062],N,[[[R[12]]],["once"]]],[5,"poll_fn",E,R[5063],N,[[["f"]],["pollfn"]]],[5,"unfold",E,R[5064],N,[[["f"],[T]],["unfold"]]],[5,R[5065],E,R[106],N,[[["i"]],[R[118]]]],[5,R[114],E,R[106],N,[[["i"]],[R[116]]]],[11,R[110],E,R[107],14,[[["self"]],["s"]]],[11,R[111],E,R[108],14,[[["self"]],["s"]]],[11,R[46],E,R[109],14,[[],["s"]]],[11,R[110],E,R[107],15,[[["self"]],["s"]]],[11,R[111],E,R[108],15,[[["self"]],["s"]]],[11,R[46],E,R[109],15,[[],["s"]]],[11,R[110],E,R[107],16,[[["self"]],["s"]]],[11,R[111],E,R[108],16,[[["self"]],["s"]]],[11,R[46],E,R[109],16,[[],["s"]]],[11,R[110],E,R[107],17,[[["self"]],["s"]]],[11,R[111],E,R[108],17,[[["self"]],["s"]]],[11,R[46],E,R[109],17,[[],["s"]]],[11,R[110],E,R[107],18,[[["self"]],["s"]]],[11,R[111],E,R[108],18,[[["self"]],["s"]]],[11,R[46],E,R[109],18,[[],["s"]]],[11,"is_done",E,R[5066],19,[[["self"]],["bool"]]],[11,R[110],E,R[107],19,[[["self"]],["s"]]],[11,R[111],E,R[108],19,[[["self"]],["s"]]],[11,R[46],E,R[109],19,[[],["s"]]],[11,R[110],E,R[107],20,[[["self"]],[["s"],[R[52]]]]],[11,R[111],E,R[108],20,[[["self"]],[[R[52]],["s"]]]],[11,R[46],E,R[109],20,[[],[R[52]]]],[11,R[110],E,R[107],21,[[["self"]],["s"]]],[11,R[111],E,R[108],21,[[["self"]],["s"]]],[11,R[46],E,R[109],21,[[],["s"]]],[11,R[110],E,R[107],22,[[["self"]],["s"]]],[11,R[111],E,R[108],22,[[["self"]],["s"]]],[11,R[46],E,R[109],22,[[],["s"]]],[11,R[110],E,R[107],23,[[["self"]],["s"]]],[11,R[111],E,R[108],23,[[["self"]],["s"]]],[11,R[46],E,R[109],23,[[],["s"]]],[11,R[110],E,R[107],24,[[["self"]],["s"]]],[11,R[111],E,R[108],24,[[["self"]],["s"]]],[11,R[46],E,R[109],24,[[],["s"]]],[11,"peek",E,R[5067],25,[[["self"]],[[R[52]],["poll",[R[52]]]]]],[11,R[110],E,R[107],26,[[["self"]],["s"]]],[11,R[111],E,R[108],26,[[["self"]],["s"]]],[11,R[46],E,R[109],26,[[],["s"]]],[11,R[110],E,R[107],27,[[["self"]],["s"]]],[11,R[111],E,R[108],27,[[["self"]],["s"]]],[11,R[46],E,R[109],27,[[],["s"]]],[11,R[110],E,R[107],28,[[["self"]],["s"]]],[11,R[111],E,R[108],28,[[["self"]],["s"]]],[11,R[46],E,R[109],28,[[],["s"]]],[11,R[110],E,R[107],29,[[["self"]],["s"]]],[11,R[111],E,R[108],29,[[["self"]],["s"]]],[11,R[46],E,R[109],29,[[],["s"]]],[11,"sink_ref",E,R[5068],30,[[["self"]],[[U],[R[52]]]]],[11,"sink_mut",E,R[5069],30,[[["self"]],[[R[52]],[U]]]],[11,"stream_ref",E,R[5070],30,[[["self"]],[[T],[R[52]]]]],[11,"stream_mut",E,R[5071],30,[[["self"]],[[R[52]],[T]]]],[11,R[110],E,R[107],31,[[["self"]],["s"]]],[11,R[111],E,R[108],31,[[["self"]],["s"]]],[11,R[46],E,R[109],31,[[],["s"]]],[11,R[110],E,R[107],32,[[["self"]],["s"]]],[11,R[111],E,R[108],32,[[["self"]],["s"]]],[11,R[46],E,R[109],32,[[],["s"]]],[11,R[110],E,R[107],33,[[["self"]],["s"]]],[11,R[111],E,R[108],33,[[["self"]],["s"]]],[11,R[46],E,R[109],33,[[],["s"]]],[11,R[110],E,R[107],34,[[["self"]],["s"]]],[11,R[111],E,R[108],34,[[["self"]],["s"]]],[11,R[46],E,R[109],34,[[],["s"]]],[11,"reunite",E,R[113],35,[[["splitsink"]],[[R[112]],[R[12],[R[112]]]]]],[11,"reunite",E,R[113],36,[[[R[5072]]],[[R[112]],[R[12],[R[112]]]]]],[0,R[114],E,R[115],N,N],[3,R[210],R[171],R[115],N,N],[3,R[262],E,R[5073],N,N],[11,"new",E,R[5074],37,[[],[R[116]]]],[11,"len",E,R[5075],37,[[["self"]],[R[9]]]],[11,R[69],E,R[5076],37,[[["self"]],["bool"]]],[11,"push",E,R[5077],37,[[["self"],[T]]]],[11,R[261],E,R[5078],37,[[["self"]],["itermut"]]],[11,"new",R[117],R[5079],38,[[],[R[118]]]],[11,"len",E,R[5080],38,[[["self"]],[R[9]]]],[11,R[69],E,R[5081],38,[[["self"]],["bool"]]],[11,"push",E,R[5082],38,[[["self"],[T]]]],[8,"Stream",E,R[4770],N,N],[16,"Item",E,R[4771],39,N],[16,"Error",E,R[4772],39,N],[10,"poll",E,R[4773],39,[[["self"]],[["poll",[R[52]]],[R[52]]]]],[11,"wait",E,R[4774],39,[[],["wait"]]],[11,R[99],E,R[4775],39,[[],[R[4776]]]],[11,"map",E,R[4777],39,[[["f"]],["map"]]],[11,"map_err",E,R[4778],39,[[["f"]],["maperr"]]],[11,"filter",E,R[4779],39,[[["f"]],["filter"]]],[11,R[5083],E,R[4780],39,[[["f"]],["filtermap"]]],[11,"then",E,R[119],39,[[["f"]],["then"]]],[11,"and_then",E,R[119],39,[[["f"]],["andthen"]]],[11,"or_else",E,R[4781],39,[[["f"]],["orelse"]]],[11,"collect",E,R[4782],39,[[],["collect"]]],[11,"concat2",E,R[120],39,[[],["concat2"]]],[11,"concat",E,R[120],39,[[],["concat"]]],[11,"fold",E,R[4783],39,[[["f"],[T]],["fold"]]],[11,"flatten",E,R[4784],39,[[],["flatten"]]],[11,R[5084],E,R[4785],39,[[["p"]],["skipwhile"]]],[11,R[5085],E,R[4786],39,[[["p"]],["takewhile"]]],[11,"for_each",E,R[4787],39,[[["f"]],["foreach"]]],[11,"from_err",E,R[4788],39,[[],[["fromerr"],["from"]]]],[11,"take",E,R[4789],39,[[["u64"]],["take"]]],[11,"skip",E,R[4790],39,[[["u64"]],["skip"]]],[11,"fuse",E,R[4791],39,[[],["fuse"]]],[11,"by_ref",E,R[4792],39,[[["self"]],["self"]]],[11,R[121],E,R[4793],39,[[],[R[122]]]],[11,"buffered",E,R[4794],39,[[[R[9]]],["buffered"]]],[11,R[4795],E,R[4796],39,[[[R[9]]],[R[4797]]]],[11,"merge",E,R[102],39,[[["s"]],["merge"]]],[11,"zip",E,R[4798],39,[[["s"]],["zip"]]],[11,"chain",E,R[4799],39,[[["s"]],["chain"]]],[11,"peekable",E,R[4800],39,[[],["peekable"]]],[11,"chunks",E,R[4801],39,[[[R[9]]],["chunks"]]],[11,"select",E,R[4802],39,[[["s"]],["select"]]],[11,"forward",E,R[127],39,[[["s"]],["forward"]]],[11,"split",E,R[4803],39,[[]]],[11,"inspect",E,R[4804],39,[[["f"]],["inspect"]]],[11,R[4805],E,R[4806],39,[[["f"]],[R[5086]]]],[0,"sink",R[128],"Asynchronous sinks",N,N],[3,"Buffer",R[172],"Sink for the `Sink::buffer` combinator, which buffers up…",N,N],[3,"Wait",E,"A sink combinator which converts an asynchronous sink to a…",N,N],[3,"With",E,"Sink for the `Sink::with` combinator, chaining a…",N,N],[3,R[212],E,"Sink for the `Sink::with_flat_map` combinator, chaining a…",N,N],[3,"Flush",E,"Future for the `Sink::flush` combinator, which polls the…",N,N],[3,"Send",E,"Future for the `Sink::send` combinator, which sends a…",N,N],[3,"SendAll",E,"Future for the `Sink::send_all` combinator, which sends a…",N,N],[3,R[214],E,"Sink for the `Sink::sink_map_err` combinator.",N,N],[3,R[213],E,"A sink combinator to change the error type of a sink.",N,N],[3,"Fanout",E,"Sink that clones incoming items and forwards them to two…",N,N],[11,R[110],E,R[123],40,[[["self"]],["s"]]],[11,R[111],E,R[124],40,[[["self"]],["s"]]],[11,R[46],E,R[125],40,[[],["s"]]],[11,R[110],E,R[123],41,[[["self"]],["s"]]],[11,R[111],E,R[124],41,[[["self"]],["s"]]],[11,R[46],E,R[125],41,[[],["s"]]],[11,R[110],E,R[123],42,[[["self"]],["s"]]],[11,R[111],E,R[124],42,[[["self"]],["s"]]],[11,R[46],E,"Consume the `Flush` and return the inner sink.",42,[[],["s"]]],[11,R[110],E,R[123],43,[[["self"]],["s"]]],[11,R[111],E,R[124],43,[[["self"]],["s"]]],[11,R[46],E,R[125],43,[[],["s"]]],[11,R[110],E,R[123],44,[[["self"]],["s"]]],[11,R[111],E,R[124],44,[[["self"]],["s"]]],[11,R[110],E,R[123],45,[[["self"]],["s"]]],[11,R[111],E,R[124],45,[[["self"]],["s"]]],[11,R[46],E,R[125],45,[[],["s"]]],[11,R[46],E,"Consumes this combinator, returning the underlying sinks.",46,[[]]],[11,R[110],E,R[123],47,[[["self"]],["s"]]],[11,R[111],E,R[124],47,[[["self"]],["s"]]],[11,R[46],E,R[125],47,[[],["s"]]],[11,"send",E,"Sends a value to this sink, blocking the current thread…",48,[[["self"]],[R[12]]]],[11,"flush",E,"Flushes any buffered data in this sink, blocking the…",48,[[["self"]],[R[12]]]],[11,"close",E,"Close this sink, blocking the current thread until it's…",48,[[["self"]],[R[12]]]],[6,"BoxSink",E,"A type alias for `Box<Sink + Send>`",N,N],[8,"Sink",E,R[5087],N,N],[16,"SinkItem",E,R[5088],49,N],[16,"SinkError",E,R[5089],49,N],[10,R[181],E,R[5090],49,[[["self"]],[R[182]]]],[10,R[183],E,R[5091],49,[[["self"]],["poll"]]],[11,"close",E,R[5092],49,[[["self"]],["poll"]]],[11,"wait",E,R[5093],49,[[],["wait"]]],[11,"with",E,R[126],49,[[["f"]],["with"]]],[11,R[5094],E,R[126],49,[[["f"]],[R[5095]]]],[11,R[5096],E,R[5097],49,[[["f"]],[R[191]]]],[11,R[5098],E,R[5099],49,[[],[["from"],[R[190]]]]],[11,"buffer",E,R[5100],49,[[[R[9]]],["buffer"]]],[11,"fanout",E,R[5101],49,[[["s"]],["fanout"]]],[11,"flush",E,R[5102],49,[[],["flush"]]],[11,"send",E,R[5103],49,[[],["send"]]],[11,"send_all",E,R[127],49,[[["s"]],["sendall"]]],[0,"task",R[128],R[5104],N,N],[3,"Task",R[173],R[5105],N,N],[3,R[227],E,R[530],N,N],[3,"LocalKey",E,R[5106],N,N],[3,R[228],E,R[5107],N,N],[5,"current",E,R[5108],N,[[],["task"]]],[5,"init",E,R[5109],N,[[],["bool"]]],[5,R[5110],E,R[5111],N,[[["f"],[R[192]]],["r"]]],[8,"EventSet",E,R[5112],N,N],[10,"insert",E,R[5113],50,[[["self"],[R[9]]]]],[0,"executor",R[128],"Executors",N,N],[3,"Spawn",R[174],R[5114],N,N],[3,R[226],E,"A `NotifyHandle` is the core value through which…",N,N],[5,"spawn",E,R[5115],N,[[[T]],["spawn"]]],[5,"with_notify",E,"Sets the `NotifyHandle` of the current task for the…",N,[[[T],["f"],[R[9]]],["r"]]],[8,"Notify",E,R[5116],N,N],[10,"notify",E,R[5117],51,[[["self"],[R[9]]]]],[11,"clone_id",E,R[193],51,[[["self"],[R[9]]],[R[9]]]],[11,"drop_id",E,R[194],51,[[["self"],[R[9]]]]],[8,R[215],E,"An unsafe trait for implementing custom forms of memory…",N,N],[10,"clone_raw",E,"Creates a new `NotifyHandle` from this instance of…",52,[[["self"]],[R[185]]]],[10,"drop_raw",E,"Drops this instance of `UnsafeNotify`, deallocating…",52,[[["self"]]]],[0,"sync",R[128],R[5118],N,N],[3,"BiLock",R[130],"A type of futures-powered synchronization primitive which…",N,N],[3,R[229],E,"Returned RAII guard from the `poll_lock` method.",N,N],[3,R[230],E,"Future returned by `BiLock::lock` which will resolve when…",N,N],[3,R[217],E,"Resolved value of the `BiLockAcquire<T>` future.",N,N],[0,"oneshot",E,R[156],N,N],[3,R[145],R[175],R[158],N,N],[3,"Sender",E,R[157],N,N],[3,"Canceled",E,"Error returned from a `Receiver<T>` whenever the…",N,N],[3,R[133],E,R[134],N,N],[3,R[231],E,"Type of future which `Execute` instances below must be…",N,N],[5,R[533],E,R[159],N,[[]]],[5,"spawn",E,R[160],N,[[["e"],["f"]],[R[129]]]],[5,"spawn_fn",E,R[161],N,[[["e"],["f"]],[R[129]]]],[11,"send",E,R[162],53,[[[T]],[R[12]]]],[11,R[163],E,R[164],53,[[["self"]],["poll"]]],[11,R[165],E,R[166],53,[[["self"]],["bool"]]],[11,"close",E,R[167],54,[[["self"]]]],[11,"try_recv",E,"Attempts to receive a message outside of the context of a…",54,[[["self"]],[[R[52]],[R[12],[R[52],R[179]]],[R[179]]]]],[11,"forget",E,R[168],55,[[]]],[0,"mpsc",R[130],R[144],N,N],[3,"Sender",R[176],R[131],N,N],[3,R[146],E,R[131],N,N],[3,R[145],E,R[132],N,N],[3,R[147],E,R[132],N,N],[3,R[148],E,R[149],N,N],[3,R[216],E,"Error type returned from `try_send`",N,N],[3,R[133],E,R[134],N,N],[3,R[231],E,R[150],N,N],[5,R[533],E,R[135],N,[[[R[9]]]]],[5,R[151],E,R[135],N,[[]]],[5,"spawn",E,R[136],N,[[["e"],["s"],[R[9]]],[R[129]]]],[5,R[152],E,R[136],N,[[["e"],["s"]],[R[129]]]],[11,R[46],E,R[137],56,[[],[T]]],[11,"is_full",E,"Returns true if this error is a result of the channel…",57,[[["self"]],["bool"]]],[11,"is_disconnected",E,"Returns true if this error is a result of the receiver…",57,[[["self"]],["bool"]]],[11,R[46],E,R[137],57,[[],[T]]],[11,R[531],E,"Attempts to send a message on this `Sender<T>` without…",58,[[["self"],[T]],[[R[138]],[R[12],[R[138]]]]]],[11,R[532],E,"Polls the channel to determine if there is guaranteed to…",58,[[["self"]],[[R[139]],["poll",[R[139]]]]]],[11,R[140],E,R[141],58,[[["self"]],["bool"]]],[11,R[140],E,R[141],59,[[["self"]],["bool"]]],[11,R[153],E,R[154],59,[[["self"],[T]],[[R[12],[R[139]]],[R[139]]]]],[11,"close",E,R[142],60,[[["self"]]]],[11,"close",E,R[142],61,[[["self"]]]],[11,"new",R[130],"Creates a new `BiLock` protecting the provided data.",62,[[[T]]]],[11,"poll_lock",E,"Attempt to acquire this lock, returning `NotReady` if it…",62,[[["self"]],[[R[143]],["async",[R[143]]]]]],[11,"lock",E,"Perform a \"blocking lock\" of this lock, consuming this…",62,[[],["bilockacquire"]]],[11,"reunite",E,"Attempts to put the two \"halves\" of a `BiLock<T>` back…",62,[[],[[R[12],[R[112]]],[R[112]]]]],[11,"unlock",E,"Recovers the original `BiLock<T>`, unlocking this lock.",63,[[],["bilock"]]],[0,"unsync",R[128],"Future-aware single-threaded synchronization",N,N],[0,"mpsc",R[155],R[144],N,N],[3,"Sender",R[177],"The transmission end of a channel.",N,N],[3,R[145],E,R[132],N,N],[3,R[146],E,"The transmission end of an unbounded channel.",N,N],[3,R[147],E,"The receiving end of an unbounded channel.",N,N],[3,R[148],E,R[149],N,N],[3,R[133],E,R[134],N,N],[3,R[231],E,R[150],N,N],[5,R[533],E,"Creates a bounded in-memory channel with buffered storage.",N,[[[R[9]]]]],[5,R[151],E,"Creates an unbounded in-memory channel with buffered…",N,[[]]],[5,"spawn",E,R[136],N,[[["e"],["s"],[R[9]]],[R[129]]]],[5,R[152],E,R[136],N,[[["e"],["s"]],[R[129]]]],[11,"close",E,R[142],64,[[["self"]]]],[11,R[153],E,R[154],65,[[["self"],[T]],[[R[139]],[R[12],[R[139]]]]]],[11,"close",E,R[142],66,[[["self"]]]],[11,R[46],E,R[137],67,[[],[T]]],[0,"oneshot",R[155],R[156],N,N],[3,"Sender",R[178],R[157],N,N],[3,R[145],E,R[158],N,N],[3,R[133],E,R[134],N,N],[3,R[231],E,"Type of future which `Spawn` instances below must be able…",N,N],[5,R[533],E,R[159],N,[[]]],[5,"spawn",E,R[160],N,[[["e"],["f"]],[R[129]]]],[5,"spawn_fn",E,R[161],N,[[["e"],["f"]],[R[129]]]],[11,"send",E,R[162],68,[[[T]],[R[12]]]],[11,R[163],E,R[164],68,[[["self"]],["poll"]]],[11,R[165],E,R[166],68,[[["self"]],["bool"]]],[11,"close",E,R[167],69,[[["self"]]]],[11,"forget",E,R[168],70,[[]]],[0,"prelude",R[128],"A \"prelude\" for crates using the `futures` crate.",N,N],[6,"Poll",E,R[5119],N,N],[6,"StartSend",E,"Return type of the `Sink::start_send` method, indicating…",N,N],[14,"try_ready",E,"A macro for extracting the successful type of a `Poll<T,…",N,N],[14,"task_local",E,"A macro to create a `static` of type `LocalKey`",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,"into",E,E,0,[[],[U]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[[T],["self"]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,"into",E,E,1,[[],[U]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,[[[T],["self"]]]],[11,R[99],R[169],E,71,[[],["f"]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[11],E,E,71,[[[U]],[R[12]]]],[11,R[14],E,E,71,[[],[R[12]]]],[11,"into",E,E,71,[[],[U]]],[11,R[39],E,E,71,[[["self"]],[T]]],[11,R[13],E,E,71,[[["self"]],[T]]],[11,R[18],E,E,71,[[["self"]],[R[40]]]],[11,R[99],E,E,72,[[],["f"]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[11],E,E,72,[[[U]],[R[12]]]],[11,R[14],E,E,72,[[],[R[12]]]],[11,"into",E,E,72,[[],[U]]],[11,R[39],E,E,72,[[["self"]],[T]]],[11,R[13],E,E,72,[[["self"]],[T]]],[11,R[18],E,E,72,[[["self"]],[R[40]]]],[11,R[99],E,E,73,[[],["f"]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[11],E,E,73,[[[U]],[R[12]]]],[11,R[14],E,E,73,[[],[R[12]]]],[11,"into",E,E,73,[[],[U]]],[11,R[39],E,E,73,[[["self"]],[T]]],[11,R[13],E,E,73,[[["self"]],[T]]],[11,R[18],E,E,73,[[["self"]],[R[40]]]],[11,R[99],E,E,74,[[],["f"]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[11],E,E,74,[[[U]],[R[12]]]],[11,R[14],E,E,74,[[],[R[12]]]],[11,"into",E,E,74,[[],[U]]],[11,R[39],E,E,74,[[["self"]],[T]]],[11,R[13],E,E,74,[[["self"]],[T]]],[11,R[18],E,E,74,[[["self"]],[R[40]]]],[11,R[16],E,E,74,[[["self"]],[T]]],[11,R[17],E,E,74,[[[T],["self"]]]],[11,R[99],E,E,75,[[],["f"]]],[11,"from",E,E,75,[[[T]],[T]]],[11,R[11],E,E,75,[[[U]],[R[12]]]],[11,R[14],E,E,75,[[],[R[12]]]],[11,"into",E,E,75,[[],[U]]],[11,R[39],E,E,75,[[["self"]],[T]]],[11,R[13],E,E,75,[[["self"]],[T]]],[11,R[18],E,E,75,[[["self"]],[R[40]]]],[11,R[99],E,E,76,[[],["f"]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[11],E,E,76,[[[U]],[R[12]]]],[11,R[14],E,E,76,[[],[R[12]]]],[11,"into",E,E,76,[[],[U]]],[11,R[39],E,E,76,[[["self"]],[T]]],[11,R[13],E,E,76,[[["self"]],[T]]],[11,R[18],E,E,76,[[["self"]],[R[40]]]],[11,R[99],E,E,77,[[],["f"]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[11],E,E,77,[[[U]],[R[12]]]],[11,R[14],E,E,77,[[],[R[12]]]],[11,"into",E,E,77,[[],[U]]],[11,R[39],E,E,77,[[["self"]],[T]]],[11,R[13],E,E,77,[[["self"]],[T]]],[11,R[18],E,E,77,[[["self"]],[R[40]]]],[11,"from",E,E,78,[[[T]],[T]]],[11,R[11],E,E,78,[[[U]],[R[12]]]],[11,R[14],E,E,78,[[],[R[12]]]],[11,"into",E,E,78,[[],[U]]],[11,R[39],E,E,78,[[["self"]],[T]]],[11,R[13],E,E,78,[[["self"]],[T]]],[11,R[18],E,E,78,[[["self"]],[R[40]]]],[11,R[99],E,E,5,[[],["f"]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,"into",E,E,5,[[],[U]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[18],E,E,5,[[["self"]],[R[40]]]],[11,"from",E,E,79,[[[T]],[T]]],[11,R[11],E,E,79,[[[U]],[R[12]]]],[11,R[14],E,E,79,[[],[R[12]]]],[11,"into",E,E,79,[[],[U]]],[11,R[39],E,E,79,[[["self"]],[T]]],[11,R[13],E,E,79,[[["self"]],[T]]],[11,R[18],E,E,79,[[["self"]],[R[40]]]],[11,R[99],E,E,80,[[],["f"]]],[11,"from",E,E,80,[[[T]],[T]]],[11,R[11],E,E,80,[[[U]],[R[12]]]],[11,R[14],E,E,80,[[],[R[12]]]],[11,"into",E,E,80,[[],[U]]],[11,R[39],E,E,80,[[["self"]],[T]]],[11,R[13],E,E,80,[[["self"]],[T]]],[11,R[18],E,E,80,[[["self"]],[R[40]]]],[11,R[99],E,E,81,[[],["f"]]],[11,"from",E,E,81,[[[T]],[T]]],[11,R[11],E,E,81,[[[U]],[R[12]]]],[11,R[14],E,E,81,[[],[R[12]]]],[11,"into",E,E,81,[[],[U]]],[11,R[39],E,E,81,[[["self"]],[T]]],[11,R[13],E,E,81,[[["self"]],[T]]],[11,R[18],E,E,81,[[["self"]],[R[40]]]],[11,R[99],E,E,82,[[],["f"]]],[11,"from",E,E,82,[[[T]],[T]]],[11,R[11],E,E,82,[[[U]],[R[12]]]],[11,R[14],E,E,82,[[],[R[12]]]],[11,"into",E,E,82,[[],[U]]],[11,R[39],E,E,82,[[["self"]],[T]]],[11,R[13],E,E,82,[[["self"]],[T]]],[11,R[18],E,E,82,[[["self"]],[R[40]]]],[11,R[99],E,E,83,[[],["f"]]],[11,"from",E,E,83,[[[T]],[T]]],[11,R[11],E,E,83,[[[U]],[R[12]]]],[11,R[14],E,E,83,[[],[R[12]]]],[11,"into",E,E,83,[[],[U]]],[11,R[39],E,E,83,[[["self"]],[T]]],[11,R[13],E,E,83,[[["self"]],[T]]],[11,R[18],E,E,83,[[["self"]],[R[40]]]],[11,R[99],E,E,84,[[],["f"]]],[11,"from",E,E,84,[[[T]],[T]]],[11,R[11],E,E,84,[[[U]],[R[12]]]],[11,R[14],E,E,84,[[],[R[12]]]],[11,"into",E,E,84,[[],[U]]],[11,R[39],E,E,84,[[["self"]],[T]]],[11,R[13],E,E,84,[[["self"]],[T]]],[11,R[18],E,E,84,[[["self"]],[R[40]]]],[11,R[99],E,E,85,[[],["f"]]],[11,"from",E,E,85,[[[T]],[T]]],[11,R[11],E,E,85,[[[U]],[R[12]]]],[11,R[14],E,E,85,[[],[R[12]]]],[11,"into",E,E,85,[[],[U]]],[11,R[39],E,E,85,[[["self"]],[T]]],[11,R[13],E,E,85,[[["self"]],[T]]],[11,R[18],E,E,85,[[["self"]],[R[40]]]],[11,R[99],E,E,86,[[],["f"]]],[11,"from",E,E,86,[[[T]],[T]]],[11,R[11],E,E,86,[[[U]],[R[12]]]],[11,R[14],E,E,86,[[],[R[12]]]],[11,"into",E,E,86,[[],[U]]],[11,R[39],E,E,86,[[["self"]],[T]]],[11,R[13],E,E,86,[[["self"]],[T]]],[11,R[18],E,E,86,[[["self"]],[R[40]]]],[11,R[99],E,E,87,[[],["f"]]],[11,"from",E,E,87,[[[T]],[T]]],[11,R[11],E,E,87,[[[U]],[R[12]]]],[11,R[14],E,E,87,[[],[R[12]]]],[11,"into",E,E,87,[[],[U]]],[11,R[39],E,E,87,[[["self"]],[T]]],[11,R[13],E,E,87,[[["self"]],[T]]],[11,R[18],E,E,87,[[["self"]],[R[40]]]],[11,R[99],E,E,88,[[],["f"]]],[11,"from",E,E,88,[[[T]],[T]]],[11,R[11],E,E,88,[[[U]],[R[12]]]],[11,R[14],E,E,88,[[],[R[12]]]],[11,"into",E,E,88,[[],[U]]],[11,R[39],E,E,88,[[["self"]],[T]]],[11,R[13],E,E,88,[[["self"]],[T]]],[11,R[18],E,E,88,[[["self"]],[R[40]]]],[11,R[99],E,E,89,[[],["f"]]],[11,"from",E,E,89,[[[T]],[T]]],[11,R[11],E,E,89,[[[U]],[R[12]]]],[11,R[14],E,E,89,[[],[R[12]]]],[11,"into",E,E,89,[[],[U]]],[11,R[39],E,E,89,[[["self"]],[T]]],[11,R[13],E,E,89,[[["self"]],[T]]],[11,R[18],E,E,89,[[["self"]],[R[40]]]],[11,R[99],E,E,90,[[],["f"]]],[11,"from",E,E,90,[[[T]],[T]]],[11,R[11],E,E,90,[[[U]],[R[12]]]],[11,R[14],E,E,90,[[],[R[12]]]],[11,"into",E,E,90,[[],[U]]],[11,R[39],E,E,90,[[["self"]],[T]]],[11,R[13],E,E,90,[[["self"]],[T]]],[11,R[18],E,E,90,[[["self"]],[R[40]]]],[11,R[99],E,E,91,[[],["f"]]],[11,"from",E,E,91,[[[T]],[T]]],[11,R[11],E,E,91,[[[U]],[R[12]]]],[11,R[14],E,E,91,[[],[R[12]]]],[11,"into",E,E,91,[[],[U]]],[11,R[39],E,E,91,[[["self"]],[T]]],[11,R[13],E,E,91,[[["self"]],[T]]],[11,R[18],E,E,91,[[["self"]],[R[40]]]],[11,R[99],E,E,92,[[],["f"]]],[11,"from",E,E,92,[[[T]],[T]]],[11,R[11],E,E,92,[[[U]],[R[12]]]],[11,R[14],E,E,92,[[],[R[12]]]],[11,"into",E,E,92,[[],[U]]],[11,R[39],E,E,92,[[["self"]],[T]]],[11,R[13],E,E,92,[[["self"]],[T]]],[11,R[18],E,E,92,[[["self"]],[R[40]]]],[11,R[99],E,E,93,[[],["f"]]],[11,"from",E,E,93,[[[T]],[T]]],[11,R[11],E,E,93,[[[U]],[R[12]]]],[11,R[14],E,E,93,[[],[R[12]]]],[11,"into",E,E,93,[[],[U]]],[11,R[39],E,E,93,[[["self"]],[T]]],[11,R[13],E,E,93,[[["self"]],[T]]],[11,R[18],E,E,93,[[["self"]],[R[40]]]],[11,R[99],E,E,94,[[],["f"]]],[11,"from",E,E,94,[[[T]],[T]]],[11,R[11],E,E,94,[[[U]],[R[12]]]],[11,R[14],E,E,94,[[],[R[12]]]],[11,"into",E,E,94,[[],[U]]],[11,R[39],E,E,94,[[["self"]],[T]]],[11,R[13],E,E,94,[[["self"]],[T]]],[11,R[18],E,E,94,[[["self"]],[R[40]]]],[11,R[99],E,E,95,[[],["f"]]],[11,"from",E,E,95,[[[T]],[T]]],[11,R[11],E,E,95,[[[U]],[R[12]]]],[11,R[14],E,E,95,[[],[R[12]]]],[11,"into",E,E,95,[[],[U]]],[11,R[39],E,E,95,[[["self"]],[T]]],[11,R[13],E,E,95,[[["self"]],[T]]],[11,R[18],E,E,95,[[["self"]],[R[40]]]],[11,R[99],E,E,96,[[],["f"]]],[11,"from",E,E,96,[[[T]],[T]]],[11,R[11],E,E,96,[[[U]],[R[12]]]],[11,R[14],E,E,96,[[],[R[12]]]],[11,"into",E,E,96,[[],[U]]],[11,R[39],E,E,96,[[["self"]],[T]]],[11,R[13],E,E,96,[[["self"]],[T]]],[11,R[18],E,E,96,[[["self"]],[R[40]]]],[11,R[99],E,E,6,[[],["f"]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[11],E,E,6,[[[U]],[R[12]]]],[11,R[14],E,E,6,[[],[R[12]]]],[11,"into",E,E,6,[[],[U]]],[11,R[39],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[18],E,E,6,[[["self"]],[R[40]]]],[11,R[16],E,E,6,[[["self"]],[T]]],[11,R[17],E,E,6,[[[T],["self"]]]],[11,"from",E,E,97,[[[T]],[T]]],[11,R[11],E,E,97,[[[U]],[R[12]]]],[11,R[14],E,E,97,[[],[R[12]]]],[11,"into",E,E,97,[[],[U]]],[11,R[39],E,E,97,[[["self"]],[T]]],[11,R[13],E,E,97,[[["self"]],[T]]],[11,R[18],E,E,97,[[["self"]],[R[40]]]],[11,R[16],E,E,97,[[["self"]],[T]]],[11,R[17],E,E,97,[[[T],["self"]]]],[11,"from",E,E,98,[[[T]],[T]]],[11,R[11],E,E,98,[[[U]],[R[12]]]],[11,R[14],E,E,98,[[],[R[12]]]],[11,"into",E,E,98,[[],[U]]],[11,R[39],E,E,98,[[["self"]],[T]]],[11,R[13],E,E,98,[[["self"]],[T]]],[11,R[18],E,E,98,[[["self"]],[R[40]]]],[11,R[16],E,E,98,[[["self"]],[T]]],[11,R[17],E,E,98,[[[T],["self"]]]],[11,R[170],E,E,98,[[["self"]],["string"]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[11],E,E,11,[[[U]],[R[12]]]],[11,R[14],E,E,11,[[],[R[12]]]],[11,"into",E,E,11,[[],[U]]],[11,R[39],E,E,11,[[["self"]],[T]]],[11,R[13],E,E,11,[[["self"]],[T]]],[11,R[18],E,E,11,[[["self"]],[R[40]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,"into",E,E,2,[[],[U]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,R[99],E,E,3,[[],["f"]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,"into",E,E,3,[[],[U]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,"into",E,E,4,[[],[U]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,R[16],E,E,4,[[["self"]],[T]]],[11,R[17],E,E,4,[[[T],["self"]]]],[11,"from",R[117],E,99,[[[T]],[T]]],[11,R[11],E,E,99,[[[U]],[R[12]]]],[11,R[14],E,E,99,[[],[R[12]]]],[11,"into",E,E,99,[[],[U]]],[11,R[39],E,E,99,[[["self"]],[T]]],[11,R[13],E,E,99,[[["self"]],[T]]],[11,R[18],E,E,99,[[["self"]],[R[40]]]],[11,"from",E,E,100,[[[T]],[T]]],[11,R[11],E,E,100,[[[U]],[R[12]]]],[11,R[14],E,E,100,[[],[R[12]]]],[11,"into",E,E,100,[[],[U]]],[11,R[39],E,E,100,[[["self"]],[T]]],[11,R[13],E,E,100,[[["self"]],[T]]],[11,R[18],E,E,100,[[["self"]],[R[40]]]],[11,"from",E,E,101,[[[T]],[T]]],[11,R[11],E,E,101,[[[U]],[R[12]]]],[11,R[14],E,E,101,[[],[R[12]]]],[11,"into",E,E,101,[[],[U]]],[11,R[39],E,E,101,[[["self"]],[T]]],[11,R[13],E,E,101,[[["self"]],[T]]],[11,R[18],E,E,101,[[["self"]],[R[40]]]],[11,"from",E,E,102,[[[T]],[T]]],[11,R[11],E,E,102,[[[U]],[R[12]]]],[11,R[14],E,E,102,[[],[R[12]]]],[11,"into",E,E,102,[[],[U]]],[11,R[39],E,E,102,[[["self"]],[T]]],[11,R[13],E,E,102,[[["self"]],[T]]],[11,R[18],E,E,102,[[["self"]],[R[40]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[11],E,E,14,[[[U]],[R[12]]]],[11,R[14],E,E,14,[[],[R[12]]]],[11,"into",E,E,14,[[],[U]]],[11,R[39],E,E,14,[[["self"]],[T]]],[11,R[13],E,E,14,[[["self"]],[T]]],[11,R[18],E,E,14,[[["self"]],[R[40]]]],[11,"from",E,E,103,[[[T]],[T]]],[11,R[11],E,E,103,[[[U]],[R[12]]]],[11,R[14],E,E,103,[[],[R[12]]]],[11,"into",E,E,103,[[],[U]]],[11,R[39],E,E,103,[[["self"]],[T]]],[11,R[13],E,E,103,[[["self"]],[T]]],[11,R[18],E,E,103,[[["self"]],[R[40]]]],[11,R[99],E,E,104,[[],["f"]]],[11,"from",E,E,104,[[[T]],[T]]],[11,R[11],E,E,104,[[[U]],[R[12]]]],[11,R[14],E,E,104,[[],[R[12]]]],[11,"into",E,E,104,[[],[U]]],[11,R[39],E,E,104,[[["self"]],[T]]],[11,R[13],E,E,104,[[["self"]],[T]]],[11,R[18],E,E,104,[[["self"]],[R[40]]]],[11,R[99],E,E,105,[[],["f"]]],[11,"from",E,E,105,[[[T]],[T]]],[11,R[11],E,E,105,[[[U]],[R[12]]]],[11,R[14],E,E,105,[[],[R[12]]]],[11,"into",E,E,105,[[],[U]]],[11,R[39],E,E,105,[[["self"]],[T]]],[11,R[13],E,E,105,[[["self"]],[T]]],[11,R[18],E,E,105,[[["self"]],[R[40]]]],[11,"from",E,E,106,[[[T]],[T]]],[11,R[11],E,E,106,[[[U]],[R[12]]]],[11,R[14],E,E,106,[[],[R[12]]]],[11,"into",E,E,106,[[],[U]]],[11,R[39],E,E,106,[[["self"]],[T]]],[11,R[13],E,E,106,[[["self"]],[T]]],[11,R[18],E,E,106,[[["self"]],[R[40]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[11],E,E,15,[[[U]],[R[12]]]],[11,R[14],E,E,15,[[],[R[12]]]],[11,"into",E,E,15,[[],[U]]],[11,R[39],E,E,15,[[["self"]],[T]]],[11,R[13],E,E,15,[[["self"]],[T]]],[11,R[18],E,E,15,[[["self"]],[R[40]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[11],E,E,16,[[[U]],[R[12]]]],[11,R[14],E,E,16,[[],[R[12]]]],[11,"into",E,E,16,[[],[U]]],[11,R[39],E,E,16,[[["self"]],[T]]],[11,R[13],E,E,16,[[["self"]],[T]]],[11,R[18],E,E,16,[[["self"]],[R[40]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[11],E,E,17,[[[U]],[R[12]]]],[11,R[14],E,E,17,[[],[R[12]]]],[11,"into",E,E,17,[[],[U]]],[11,R[39],E,E,17,[[["self"]],[T]]],[11,R[13],E,E,17,[[["self"]],[T]]],[11,R[18],E,E,17,[[["self"]],[R[40]]]],[11,R[99],E,E,107,[[],["f"]]],[11,"from",E,E,107,[[[T]],[T]]],[11,R[11],E,E,107,[[[U]],[R[12]]]],[11,R[14],E,E,107,[[],[R[12]]]],[11,"into",E,E,107,[[],[U]]],[11,R[39],E,E,107,[[["self"]],[T]]],[11,R[13],E,E,107,[[["self"]],[T]]],[11,R[18],E,E,107,[[["self"]],[R[40]]]],[11,R[99],E,E,108,[[],["f"]]],[11,"from",E,E,108,[[[T]],[T]]],[11,R[11],E,E,108,[[[U]],[R[12]]]],[11,R[14],E,E,108,[[],[R[12]]]],[11,"into",E,E,108,[[],[U]]],[11,R[39],E,E,108,[[["self"]],[T]]],[11,R[13],E,E,108,[[["self"]],[T]]],[11,R[18],E,E,108,[[["self"]],[R[40]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[11],E,E,18,[[[U]],[R[12]]]],[11,R[14],E,E,18,[[],[R[12]]]],[11,"into",E,E,18,[[],[U]]],[11,R[39],E,E,18,[[["self"]],[T]]],[11,R[13],E,E,18,[[["self"]],[T]]],[11,R[18],E,E,18,[[["self"]],[R[40]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[11],E,E,19,[[[U]],[R[12]]]],[11,R[14],E,E,19,[[],[R[12]]]],[11,"into",E,E,19,[[],[U]]],[11,R[39],E,E,19,[[["self"]],[T]]],[11,R[13],E,E,19,[[["self"]],[T]]],[11,R[18],E,E,19,[[["self"]],[R[40]]]],[11,R[99],E,E,20,[[],["f"]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[11],E,E,20,[[[U]],[R[12]]]],[11,R[14],E,E,20,[[],[R[12]]]],[11,"into",E,E,20,[[],[U]]],[11,R[39],E,E,20,[[["self"]],[T]]],[11,R[13],E,E,20,[[["self"]],[T]]],[11,R[18],E,E,20,[[["self"]],[R[40]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[11],E,E,21,[[[U]],[R[12]]]],[11,R[14],E,E,21,[[],[R[12]]]],[11,"into",E,E,21,[[],[U]]],[11,R[39],E,E,21,[[["self"]],[T]]],[11,R[13],E,E,21,[[["self"]],[T]]],[11,R[18],E,E,21,[[["self"]],[R[40]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[11],E,E,22,[[[U]],[R[12]]]],[11,R[14],E,E,22,[[],[R[12]]]],[11,"into",E,E,22,[[],[U]]],[11,R[39],E,E,22,[[["self"]],[T]]],[11,R[13],E,E,22,[[["self"]],[T]]],[11,R[18],E,E,22,[[["self"]],[R[40]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[11],E,E,23,[[[U]],[R[12]]]],[11,R[14],E,E,23,[[],[R[12]]]],[11,"into",E,E,23,[[],[U]]],[11,R[39],E,E,23,[[["self"]],[T]]],[11,R[13],E,E,23,[[["self"]],[T]]],[11,R[18],E,E,23,[[["self"]],[R[40]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[11],E,E,24,[[[U]],[R[12]]]],[11,R[14],E,E,24,[[],[R[12]]]],[11,"into",E,E,24,[[],[U]]],[11,R[39],E,E,24,[[["self"]],[T]]],[11,R[13],E,E,24,[[["self"]],[T]]],[11,R[18],E,E,24,[[["self"]],[R[40]]]],[11,"from",E,E,109,[[[T]],[T]]],[11,R[11],E,E,109,[[[U]],[R[12]]]],[11,R[14],E,E,109,[[],[R[12]]]],[11,"into",E,E,109,[[],[U]]],[11,R[39],E,E,109,[[["self"]],[T]]],[11,R[13],E,E,109,[[["self"]],[T]]],[11,R[18],E,E,109,[[["self"]],[R[40]]]],[11,"from",E,E,110,[[[T]],[T]]],[11,R[11],E,E,110,[[[U]],[R[12]]]],[11,R[14],E,E,110,[[],[R[12]]]],[11,"into",E,E,110,[[],[U]]],[11,R[39],E,E,110,[[["self"]],[T]]],[11,R[13],E,E,110,[[["self"]],[T]]],[11,R[18],E,E,110,[[["self"]],[R[40]]]],[11,"from",E,E,111,[[[T]],[T]]],[11,R[11],E,E,111,[[[U]],[R[12]]]],[11,R[14],E,E,111,[[],[R[12]]]],[11,"into",E,E,111,[[],[U]]],[11,R[39],E,E,111,[[["self"]],[T]]],[11,R[13],E,E,111,[[["self"]],[T]]],[11,R[18],E,E,111,[[["self"]],[R[40]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[11],E,E,25,[[[U]],[R[12]]]],[11,R[14],E,E,25,[[],[R[12]]]],[11,"into",E,E,25,[[],[U]]],[11,R[39],E,E,25,[[["self"]],[T]]],[11,R[13],E,E,25,[[["self"]],[T]]],[11,R[18],E,E,25,[[["self"]],[R[40]]]],[11,"from",E,E,112,[[[T]],[T]]],[11,R[11],E,E,112,[[[U]],[R[12]]]],[11,R[14],E,E,112,[[],[R[12]]]],[11,"into",E,E,112,[[],[U]]],[11,R[39],E,E,112,[[["self"]],[T]]],[11,R[13],E,E,112,[[["self"]],[T]]],[11,R[18],E,E,112,[[["self"]],[R[40]]]],[11,"from",E,E,113,[[[T]],[T]]],[11,R[11],E,E,113,[[[U]],[R[12]]]],[11,R[14],E,E,113,[[],[R[12]]]],[11,"into",E,E,113,[[],[U]]],[11,R[39],E,E,113,[[["self"]],[T]]],[11,R[13],E,E,113,[[["self"]],[T]]],[11,R[18],E,E,113,[[["self"]],[R[40]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[11],E,E,26,[[[U]],[R[12]]]],[11,R[14],E,E,26,[[],[R[12]]]],[11,"into",E,E,26,[[],[U]]],[11,R[39],E,E,26,[[["self"]],[T]]],[11,R[13],E,E,26,[[["self"]],[T]]],[11,R[18],E,E,26,[[["self"]],[R[40]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[11],E,E,27,[[[U]],[R[12]]]],[11,R[14],E,E,27,[[],[R[12]]]],[11,"into",E,E,27,[[],[U]]],[11,R[39],E,E,27,[[["self"]],[T]]],[11,R[13],E,E,27,[[["self"]],[T]]],[11,R[18],E,E,27,[[["self"]],[R[40]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[11],E,E,28,[[[U]],[R[12]]]],[11,R[14],E,E,28,[[],[R[12]]]],[11,"into",E,E,28,[[],[U]]],[11,R[39],E,E,28,[[["self"]],[T]]],[11,R[13],E,E,28,[[["self"]],[T]]],[11,R[18],E,E,28,[[["self"]],[R[40]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[11],E,E,29,[[[U]],[R[12]]]],[11,R[14],E,E,29,[[],[R[12]]]],[11,"into",E,E,29,[[],[U]]],[11,R[39],E,E,29,[[["self"]],[T]]],[11,R[13],E,E,29,[[["self"]],[T]]],[11,R[18],E,E,29,[[["self"]],[R[40]]]],[11,"from",E,E,114,[[[T]],[T]]],[11,R[11],E,E,114,[[[U]],[R[12]]]],[11,R[14],E,E,114,[[],[R[12]]]],[11,"into",E,E,114,[[],[U]]],[11,R[39],E,E,114,[[["self"]],[T]]],[11,R[13],E,E,114,[[["self"]],[T]]],[11,R[18],E,E,114,[[["self"]],[R[40]]]],[11,"from",E,E,115,[[[T]],[T]]],[11,R[11],E,E,115,[[[U]],[R[12]]]],[11,R[14],E,E,115,[[],[R[12]]]],[11,"into",E,E,115,[[],[U]]],[11,R[39],E,E,115,[[["self"]],[T]]],[11,R[13],E,E,115,[[["self"]],[T]]],[11,R[18],E,E,115,[[["self"]],[R[40]]]],[11,"from",E,E,116,[[[T]],[T]]],[11,R[11],E,E,116,[[[U]],[R[12]]]],[11,R[14],E,E,116,[[],[R[12]]]],[11,"into",E,E,116,[[],[U]]],[11,R[39],E,E,116,[[["self"]],[T]]],[11,R[13],E,E,116,[[["self"]],[T]]],[11,R[18],E,E,116,[[["self"]],[R[40]]]],[11,R[99],E,E,30,[[],["f"]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[11],E,E,30,[[[U]],[R[12]]]],[11,R[14],E,E,30,[[],[R[12]]]],[11,"into",E,E,30,[[],[U]]],[11,R[39],E,E,30,[[["self"]],[T]]],[11,R[13],E,E,30,[[["self"]],[T]]],[11,R[18],E,E,30,[[["self"]],[R[40]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[11],E,E,31,[[[U]],[R[12]]]],[11,R[14],E,E,31,[[],[R[12]]]],[11,"into",E,E,31,[[],[U]]],[11,R[39],E,E,31,[[["self"]],[T]]],[11,R[13],E,E,31,[[["self"]],[T]]],[11,R[18],E,E,31,[[["self"]],[R[40]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[11],E,E,32,[[[U]],[R[12]]]],[11,R[14],E,E,32,[[],[R[12]]]],[11,"into",E,E,32,[[],[U]]],[11,R[39],E,E,32,[[["self"]],[T]]],[11,R[13],E,E,32,[[["self"]],[T]]],[11,R[18],E,E,32,[[["self"]],[R[40]]]],[11,"from",E,E,117,[[[T]],[T]]],[11,R[11],E,E,117,[[[U]],[R[12]]]],[11,R[14],E,E,117,[[],[R[12]]]],[11,"into",E,E,117,[[],[U]]],[11,R[39],E,E,117,[[["self"]],[T]]],[11,R[13],E,E,117,[[["self"]],[T]]],[11,R[18],E,E,117,[[["self"]],[R[40]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[11],E,E,33,[[[U]],[R[12]]]],[11,R[14],E,E,33,[[],[R[12]]]],[11,"into",E,E,33,[[],[U]]],[11,R[39],E,E,33,[[["self"]],[T]]],[11,R[13],E,E,33,[[["self"]],[T]]],[11,R[18],E,E,33,[[["self"]],[R[40]]]],[11,R[99],E,E,118,[[],["f"]]],[11,"from",E,E,118,[[[T]],[T]]],[11,R[11],E,E,118,[[[U]],[R[12]]]],[11,R[14],E,E,118,[[],[R[12]]]],[11,"into",E,E,118,[[],[U]]],[11,R[39],E,E,118,[[["self"]],[T]]],[11,R[13],E,E,118,[[["self"]],[T]]],[11,R[18],E,E,118,[[["self"]],[R[40]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[48],E,E,34,[[],["i"]]],[11,R[11],E,E,34,[[[U]],[R[12]]]],[11,R[14],E,E,34,[[],[R[12]]]],[11,"into",E,E,34,[[],[U]]],[11,R[39],E,E,34,[[["self"]],[T]]],[11,R[13],E,E,34,[[["self"]],[T]]],[11,R[18],E,E,34,[[["self"]],[R[40]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[11],E,E,35,[[[U]],[R[12]]]],[11,R[14],E,E,35,[[],[R[12]]]],[11,"into",E,E,35,[[],[U]]],[11,R[39],E,E,35,[[["self"]],[T]]],[11,R[13],E,E,35,[[["self"]],[T]]],[11,R[18],E,E,35,[[["self"]],[R[40]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[11],E,E,36,[[[U]],[R[12]]]],[11,R[14],E,E,36,[[],[R[12]]]],[11,"into",E,E,36,[[],[U]]],[11,R[39],E,E,36,[[["self"]],[T]]],[11,R[13],E,E,36,[[["self"]],[T]]],[11,R[18],E,E,36,[[["self"]],[R[40]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[11],E,E,12,[[[U]],[R[12]]]],[11,R[14],E,E,12,[[],[R[12]]]],[11,"into",E,E,12,[[],[U]]],[11,R[39],E,E,12,[[["self"]],[T]]],[11,R[13],E,E,12,[[["self"]],[T]]],[11,R[18],E,E,12,[[["self"]],[R[40]]]],[11,R[170],E,E,12,[[["self"]],["string"]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[11],E,E,38,[[[U]],[R[12]]]],[11,R[14],E,E,38,[[],[R[12]]]],[11,"into",E,E,38,[[],[U]]],[11,R[39],E,E,38,[[["self"]],[T]]],[11,R[13],E,E,38,[[["self"]],[T]]],[11,R[18],E,E,38,[[["self"]],[R[40]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[11],E,E,13,[[[U]],[R[12]]]],[11,R[14],E,E,13,[[],[R[12]]]],[11,"into",E,E,13,[[],[U]]],[11,R[39],E,E,13,[[["self"]],[T]]],[11,R[13],E,E,13,[[["self"]],[T]]],[11,R[18],E,E,13,[[["self"]],[R[40]]]],[11,"from",R[171],E,37,[[[T]],[T]]],[11,R[11],E,E,37,[[[U]],[R[12]]]],[11,R[14],E,E,37,[[],[R[12]]]],[11,"into",E,E,37,[[],[U]]],[11,R[39],E,E,37,[[["self"]],[T]]],[11,R[13],E,E,37,[[["self"]],[T]]],[11,R[18],E,E,37,[[["self"]],[R[40]]]],[11,"from",E,E,119,[[[T]],[T]]],[11,R[48],E,E,119,[[],["i"]]],[11,R[11],E,E,119,[[[U]],[R[12]]]],[11,R[14],E,E,119,[[],[R[12]]]],[11,"into",E,E,119,[[],[U]]],[11,R[39],E,E,119,[[["self"]],[T]]],[11,R[13],E,E,119,[[["self"]],[T]]],[11,R[18],E,E,119,[[["self"]],[R[40]]]],[11,"from",R[172],E,47,[[[T]],[T]]],[11,R[11],E,E,47,[[[U]],[R[12]]]],[11,R[14],E,E,47,[[],[R[12]]]],[11,"into",E,E,47,[[],[U]]],[11,R[39],E,E,47,[[["self"]],[T]]],[11,R[13],E,E,47,[[["self"]],[T]]],[11,R[18],E,E,47,[[["self"]],[R[40]]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[11],E,E,48,[[[U]],[R[12]]]],[11,R[14],E,E,48,[[],[R[12]]]],[11,"into",E,E,48,[[],[U]]],[11,R[39],E,E,48,[[["self"]],[T]]],[11,R[13],E,E,48,[[["self"]],[T]]],[11,R[18],E,E,48,[[["self"]],[R[40]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[11],E,E,40,[[[U]],[R[12]]]],[11,R[14],E,E,40,[[],[R[12]]]],[11,"into",E,E,40,[[],[U]]],[11,R[39],E,E,40,[[["self"]],[T]]],[11,R[13],E,E,40,[[["self"]],[T]]],[11,R[18],E,E,40,[[["self"]],[R[40]]]],[11,R[16],E,E,40,[[["self"]],[T]]],[11,R[17],E,E,40,[[[T],["self"]]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[11],E,E,41,[[[U]],[R[12]]]],[11,R[14],E,E,41,[[],[R[12]]]],[11,"into",E,E,41,[[],[U]]],[11,R[39],E,E,41,[[["self"]],[T]]],[11,R[13],E,E,41,[[["self"]],[T]]],[11,R[18],E,E,41,[[["self"]],[R[40]]]],[11,R[99],E,E,42,[[],["f"]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[11],E,E,42,[[[U]],[R[12]]]],[11,R[14],E,E,42,[[],[R[12]]]],[11,"into",E,E,42,[[],[U]]],[11,R[39],E,E,42,[[["self"]],[T]]],[11,R[13],E,E,42,[[["self"]],[T]]],[11,R[18],E,E,42,[[["self"]],[R[40]]]],[11,R[99],E,E,44,[[],["f"]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[11],E,E,44,[[[U]],[R[12]]]],[11,R[14],E,E,44,[[],[R[12]]]],[11,"into",E,E,44,[[],[U]]],[11,R[39],E,E,44,[[["self"]],[T]]],[11,R[13],E,E,44,[[["self"]],[T]]],[11,R[18],E,E,44,[[["self"]],[R[40]]]],[11,R[99],E,E,120,[[],["f"]]],[11,"from",E,E,120,[[[T]],[T]]],[11,R[11],E,E,120,[[[U]],[R[12]]]],[11,R[14],E,E,120,[[],[R[12]]]],[11,"into",E,E,120,[[],[U]]],[11,R[39],E,E,120,[[["self"]],[T]]],[11,R[13],E,E,120,[[["self"]],[T]]],[11,R[18],E,E,120,[[["self"]],[R[40]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[11],E,E,45,[[[U]],[R[12]]]],[11,R[14],E,E,45,[[],[R[12]]]],[11,"into",E,E,45,[[],[U]]],[11,R[39],E,E,45,[[["self"]],[T]]],[11,R[13],E,E,45,[[["self"]],[T]]],[11,R[18],E,E,45,[[["self"]],[R[40]]]],[11,R[16],E,E,45,[[["self"]],[T]]],[11,R[17],E,E,45,[[[T],["self"]]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[11],E,E,43,[[[U]],[R[12]]]],[11,R[14],E,E,43,[[],[R[12]]]],[11,"into",E,E,43,[[],[U]]],[11,R[39],E,E,43,[[["self"]],[T]]],[11,R[13],E,E,43,[[["self"]],[T]]],[11,R[18],E,E,43,[[["self"]],[R[40]]]],[11,R[16],E,E,43,[[["self"]],[T]]],[11,R[17],E,E,43,[[[T],["self"]]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[11],E,E,46,[[[U]],[R[12]]]],[11,R[14],E,E,46,[[],[R[12]]]],[11,"into",E,E,46,[[],[U]]],[11,R[39],E,E,46,[[["self"]],[T]]],[11,R[13],E,E,46,[[["self"]],[T]]],[11,R[18],E,E,46,[[["self"]],[R[40]]]],[11,"from",R[173],E,121,[[[T]],[T]]],[11,R[11],E,E,121,[[[U]],[R[12]]]],[11,R[14],E,E,121,[[],[R[12]]]],[11,"into",E,E,121,[[],[U]]],[11,R[39],E,E,121,[[["self"]],[T]]],[11,R[13],E,E,121,[[["self"]],[T]]],[11,R[18],E,E,121,[[["self"]],[R[40]]]],[11,R[16],E,E,121,[[["self"]],[T]]],[11,R[17],E,E,121,[[[T],["self"]]]],[11,"from",R[174],E,122,[[[T]],[T]]],[11,R[11],E,E,122,[[[U]],[R[12]]]],[11,R[14],E,E,122,[[],[R[12]]]],[11,"into",E,E,122,[[],[U]]],[11,R[39],E,E,122,[[["self"]],[T]]],[11,R[13],E,E,122,[[["self"]],[T]]],[11,R[18],E,E,122,[[["self"]],[R[40]]]],[11,"from",E,E,123,[[[T]],[T]]],[11,R[11],E,E,123,[[[U]],[R[12]]]],[11,R[14],E,E,123,[[],[R[12]]]],[11,"into",E,E,123,[[],[U]]],[11,R[39],E,E,123,[[["self"]],[T]]],[11,R[13],E,E,123,[[["self"]],[T]]],[11,R[18],E,E,123,[[["self"]],[R[40]]]],[11,R[16],E,E,123,[[["self"]],[T]]],[11,R[17],E,E,123,[[[T],["self"]]]],[11,"from",R[173],E,124,[[[T]],[T]]],[11,R[11],E,E,124,[[[U]],[R[12]]]],[11,R[14],E,E,124,[[],[R[12]]]],[11,"into",E,E,124,[[],[U]]],[11,R[39],E,E,124,[[["self"]],[T]]],[11,R[13],E,E,124,[[["self"]],[T]]],[11,R[18],E,E,124,[[["self"]],[R[40]]]],[11,"from",E,E,125,[[[T]],[T]]],[11,R[11],E,E,125,[[[U]],[R[12]]]],[11,R[14],E,E,125,[[],[R[12]]]],[11,"into",E,E,125,[[],[U]]],[11,R[39],E,E,125,[[["self"]],[T]]],[11,R[13],E,E,125,[[["self"]],[T]]],[11,R[18],E,E,125,[[["self"]],[R[40]]]],[11,R[16],E,E,125,[[["self"]],[T]]],[11,R[17],E,E,125,[[[T],["self"]]]],[11,"from",E,E,126,[[[T]],[T]]],[11,R[11],E,E,126,[[[U]],[R[12]]]],[11,R[14],E,E,126,[[],[R[12]]]],[11,"into",E,E,126,[[],[U]]],[11,R[39],E,E,126,[[["self"]],[T]]],[11,R[13],E,E,126,[[["self"]],[T]]],[11,R[18],E,E,126,[[["self"]],[R[40]]]],[11,"from",R[130],E,62,[[[T]],[T]]],[11,R[11],E,E,62,[[[U]],[R[12]]]],[11,R[14],E,E,62,[[],[R[12]]]],[11,"into",E,E,62,[[],[U]]],[11,R[39],E,E,62,[[["self"]],[T]]],[11,R[13],E,E,62,[[["self"]],[T]]],[11,R[18],E,E,62,[[["self"]],[R[40]]]],[11,"from",E,E,127,[[[T]],[T]]],[11,R[11],E,E,127,[[[U]],[R[12]]]],[11,R[14],E,E,127,[[],[R[12]]]],[11,"into",E,E,127,[[],[U]]],[11,R[39],E,E,127,[[["self"]],[T]]],[11,R[13],E,E,127,[[["self"]],[T]]],[11,R[18],E,E,127,[[["self"]],[R[40]]]],[11,R[99],E,E,128,[[],["f"]]],[11,"from",E,E,128,[[[T]],[T]]],[11,R[11],E,E,128,[[[U]],[R[12]]]],[11,R[14],E,E,128,[[],[R[12]]]],[11,"into",E,E,128,[[],[U]]],[11,R[39],E,E,128,[[["self"]],[T]]],[11,R[13],E,E,128,[[["self"]],[T]]],[11,R[18],E,E,128,[[["self"]],[R[40]]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[11],E,E,63,[[[U]],[R[12]]]],[11,R[14],E,E,63,[[],[R[12]]]],[11,"into",E,E,63,[[],[U]]],[11,R[39],E,E,63,[[["self"]],[T]]],[11,R[13],E,E,63,[[["self"]],[T]]],[11,R[18],E,E,63,[[["self"]],[R[40]]]],[11,R[99],R[175],E,54,[[],["f"]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[11],E,E,54,[[[U]],[R[12]]]],[11,R[14],E,E,54,[[],[R[12]]]],[11,"into",E,E,54,[[],[U]]],[11,R[39],E,E,54,[[["self"]],[T]]],[11,R[13],E,E,54,[[["self"]],[T]]],[11,R[18],E,E,54,[[["self"]],[R[40]]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[11],E,E,53,[[[U]],[R[12]]]],[11,R[14],E,E,53,[[],[R[12]]]],[11,"into",E,E,53,[[],[U]]],[11,R[39],E,E,53,[[["self"]],[T]]],[11,R[13],E,E,53,[[["self"]],[T]]],[11,R[18],E,E,53,[[["self"]],[R[40]]]],[11,"from",E,E,129,[[[T]],[T]]],[11,R[11],E,E,129,[[[U]],[R[12]]]],[11,R[14],E,E,129,[[],[R[12]]]],[11,"into",E,E,129,[[],[U]]],[11,R[39],E,E,129,[[["self"]],[T]]],[11,R[13],E,E,129,[[["self"]],[T]]],[11,R[18],E,E,129,[[["self"]],[R[40]]]],[11,R[16],E,E,129,[[["self"]],[T]]],[11,R[17],E,E,129,[[[T],["self"]]]],[11,R[170],E,E,129,[[["self"]],["string"]]],[11,R[99],E,E,55,[[],["f"]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[11],E,E,55,[[[U]],[R[12]]]],[11,R[14],E,E,55,[[],[R[12]]]],[11,"into",E,E,55,[[],[U]]],[11,R[39],E,E,55,[[["self"]],[T]]],[11,R[13],E,E,55,[[["self"]],[T]]],[11,R[18],E,E,55,[[["self"]],[R[40]]]],[11,R[99],E,E,130,[[],["f"]]],[11,"from",E,E,130,[[[T]],[T]]],[11,R[11],E,E,130,[[[U]],[R[12]]]],[11,R[14],E,E,130,[[],[R[12]]]],[11,"into",E,E,130,[[],[U]]],[11,R[39],E,E,130,[[["self"]],[T]]],[11,R[13],E,E,130,[[["self"]],[T]]],[11,R[18],E,E,130,[[["self"]],[R[40]]]],[11,"from",R[176],E,58,[[[T]],[T]]],[11,R[11],E,E,58,[[[U]],[R[12]]]],[11,R[14],E,E,58,[[],[R[12]]]],[11,"into",E,E,58,[[],[U]]],[11,R[39],E,E,58,[[["self"]],[T]]],[11,R[13],E,E,58,[[["self"]],[T]]],[11,R[18],E,E,58,[[["self"]],[R[40]]]],[11,R[16],E,E,58,[[["self"]],[T]]],[11,R[17],E,E,58,[[[T],["self"]]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[11],E,E,59,[[[U]],[R[12]]]],[11,R[14],E,E,59,[[],[R[12]]]],[11,"into",E,E,59,[[],[U]]],[11,R[39],E,E,59,[[["self"]],[T]]],[11,R[13],E,E,59,[[["self"]],[T]]],[11,R[18],E,E,59,[[["self"]],[R[40]]]],[11,R[16],E,E,59,[[["self"]],[T]]],[11,R[17],E,E,59,[[[T],["self"]]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[11],E,E,60,[[[U]],[R[12]]]],[11,R[14],E,E,60,[[],[R[12]]]],[11,"into",E,E,60,[[],[U]]],[11,R[39],E,E,60,[[["self"]],[T]]],[11,R[13],E,E,60,[[["self"]],[T]]],[11,R[18],E,E,60,[[["self"]],[R[40]]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[11],E,E,61,[[[U]],[R[12]]]],[11,R[14],E,E,61,[[],[R[12]]]],[11,"into",E,E,61,[[],[U]]],[11,R[39],E,E,61,[[["self"]],[T]]],[11,R[13],E,E,61,[[["self"]],[T]]],[11,R[18],E,E,61,[[["self"]],[R[40]]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[11],E,E,56,[[[U]],[R[12]]]],[11,R[14],E,E,56,[[],[R[12]]]],[11,"into",E,E,56,[[],[U]]],[11,R[39],E,E,56,[[["self"]],[T]]],[11,R[13],E,E,56,[[["self"]],[T]]],[11,R[18],E,E,56,[[["self"]],[R[40]]]],[11,R[16],E,E,56,[[["self"]],[T]]],[11,R[17],E,E,56,[[[T],["self"]]]],[11,R[170],E,E,56,[[["self"]],["string"]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[11],E,E,57,[[[U]],[R[12]]]],[11,R[14],E,E,57,[[],[R[12]]]],[11,"into",E,E,57,[[],[U]]],[11,R[39],E,E,57,[[["self"]],[T]]],[11,R[13],E,E,57,[[["self"]],[T]]],[11,R[18],E,E,57,[[["self"]],[R[40]]]],[11,R[16],E,E,57,[[["self"]],[T]]],[11,R[17],E,E,57,[[[T],["self"]]]],[11,R[170],E,E,57,[[["self"]],["string"]]],[11,"from",E,E,131,[[[T]],[T]]],[11,R[11],E,E,131,[[[U]],[R[12]]]],[11,R[14],E,E,131,[[],[R[12]]]],[11,"into",E,E,131,[[],[U]]],[11,R[39],E,E,131,[[["self"]],[T]]],[11,R[13],E,E,131,[[["self"]],[T]]],[11,R[18],E,E,131,[[["self"]],[R[40]]]],[11,R[99],E,E,132,[[],["f"]]],[11,"from",E,E,132,[[[T]],[T]]],[11,R[11],E,E,132,[[[U]],[R[12]]]],[11,R[14],E,E,132,[[],[R[12]]]],[11,"into",E,E,132,[[],[U]]],[11,R[39],E,E,132,[[["self"]],[T]]],[11,R[13],E,E,132,[[["self"]],[T]]],[11,R[18],E,E,132,[[["self"]],[R[40]]]],[11,"from",R[177],E,133,[[[T]],[T]]],[11,R[11],E,E,133,[[[U]],[R[12]]]],[11,R[14],E,E,133,[[],[R[12]]]],[11,"into",E,E,133,[[],[U]]],[11,R[39],E,E,133,[[["self"]],[T]]],[11,R[13],E,E,133,[[["self"]],[T]]],[11,R[18],E,E,133,[[["self"]],[R[40]]]],[11,R[16],E,E,133,[[["self"]],[T]]],[11,R[17],E,E,133,[[[T],["self"]]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[11],E,E,64,[[[U]],[R[12]]]],[11,R[14],E,E,64,[[],[R[12]]]],[11,"into",E,E,64,[[],[U]]],[11,R[39],E,E,64,[[["self"]],[T]]],[11,R[13],E,E,64,[[["self"]],[T]]],[11,R[18],E,E,64,[[["self"]],[R[40]]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[11],E,E,65,[[[U]],[R[12]]]],[11,R[14],E,E,65,[[],[R[12]]]],[11,"into",E,E,65,[[],[U]]],[11,R[39],E,E,65,[[["self"]],[T]]],[11,R[13],E,E,65,[[["self"]],[T]]],[11,R[18],E,E,65,[[["self"]],[R[40]]]],[11,R[16],E,E,65,[[["self"]],[T]]],[11,R[17],E,E,65,[[[T],["self"]]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[11],E,E,66,[[[U]],[R[12]]]],[11,R[14],E,E,66,[[],[R[12]]]],[11,"into",E,E,66,[[],[U]]],[11,R[39],E,E,66,[[["self"]],[T]]],[11,R[13],E,E,66,[[["self"]],[T]]],[11,R[18],E,E,66,[[["self"]],[R[40]]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[11],E,E,67,[[[U]],[R[12]]]],[11,R[14],E,E,67,[[],[R[12]]]],[11,"into",E,E,67,[[],[U]]],[11,R[39],E,E,67,[[["self"]],[T]]],[11,R[13],E,E,67,[[["self"]],[T]]],[11,R[18],E,E,67,[[["self"]],[R[40]]]],[11,R[170],E,E,67,[[["self"]],["string"]]],[11,"from",E,E,134,[[[T]],[T]]],[11,R[11],E,E,134,[[[U]],[R[12]]]],[11,R[14],E,E,134,[[],[R[12]]]],[11,"into",E,E,134,[[],[U]]],[11,R[39],E,E,134,[[["self"]],[T]]],[11,R[13],E,E,134,[[["self"]],[T]]],[11,R[18],E,E,134,[[["self"]],[R[40]]]],[11,R[99],E,E,135,[[],["f"]]],[11,"from",E,E,135,[[[T]],[T]]],[11,R[11],E,E,135,[[[U]],[R[12]]]],[11,R[14],E,E,135,[[],[R[12]]]],[11,"into",E,E,135,[[],[U]]],[11,R[39],E,E,135,[[["self"]],[T]]],[11,R[13],E,E,135,[[["self"]],[T]]],[11,R[18],E,E,135,[[["self"]],[R[40]]]],[11,"from",R[178],E,68,[[[T]],[T]]],[11,R[11],E,E,68,[[[U]],[R[12]]]],[11,R[14],E,E,68,[[],[R[12]]]],[11,"into",E,E,68,[[],[U]]],[11,R[39],E,E,68,[[["self"]],[T]]],[11,R[13],E,E,68,[[["self"]],[T]]],[11,R[18],E,E,68,[[["self"]],[R[40]]]],[11,R[99],E,E,69,[[],["f"]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[11],E,E,69,[[[U]],[R[12]]]],[11,R[14],E,E,69,[[],[R[12]]]],[11,"into",E,E,69,[[],[U]]],[11,R[39],E,E,69,[[["self"]],[T]]],[11,R[13],E,E,69,[[["self"]],[T]]],[11,R[18],E,E,69,[[["self"]],[R[40]]]],[11,R[99],E,E,70,[[],["f"]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[11],E,E,70,[[[U]],[R[12]]]],[11,R[14],E,E,70,[[],[R[12]]]],[11,"into",E,E,70,[[],[U]]],[11,R[39],E,E,70,[[["self"]],[T]]],[11,R[13],E,E,70,[[["self"]],[T]]],[11,R[18],E,E,70,[[["self"]],[R[40]]]],[11,R[99],E,E,136,[[],["f"]]],[11,"from",E,E,136,[[[T]],[T]]],[11,R[11],E,E,136,[[[U]],[R[12]]]],[11,R[14],E,E,136,[[],[R[12]]]],[11,"into",E,E,136,[[],[U]]],[11,R[39],E,E,136,[[["self"]],[T]]],[11,R[13],E,E,136,[[["self"]],[T]]],[11,R[18],E,E,136,[[["self"]],[R[40]]]],[11,"poll",R[169],E,71,[[["self"]],["poll"]]],[11,"poll",E,E,72,[[["self"]],["poll"]]],[11,"poll",E,E,73,[[["self"]],["poll"]]],[11,"poll",E,E,74,[[["self"]],["poll"]]],[11,"poll",E,E,75,[[["self"]],["poll"]]],[11,"poll",E,E,76,[[["self"]],["poll"]]],[11,"poll",E,E,77,[[["self"]],["poll"]]],[11,"poll",E,E,5,[[["self"]],["poll"]]],[11,"poll",E,E,80,[[["self"]],["poll"]]],[11,"poll",E,E,81,[[["self"]],["poll"]]],[11,"poll",E,E,82,[[["self"]],["poll"]]],[11,"poll",E,E,83,[[["self"]],["poll"]]],[11,"poll",E,E,84,[[["self"]],["poll"]]],[11,"poll",E,E,85,[[["self"]],["poll"]]],[11,"poll",E,E,86,[[["self"]],["poll"]]],[11,"poll",E,E,87,[[["self"]],["poll"]]],[11,"poll",E,E,88,[[["self"]],["poll"]]],[11,"poll",E,E,89,[[["self"]],["poll"]]],[11,"poll",E,E,90,[[["self"]],["poll"]]],[11,"poll",E,E,91,[[["self"]],["poll"]]],[11,"poll",E,E,3,[[["self"]],["poll"]]],[11,"poll",E,E,92,[[["self"]],["poll"]]],[11,"poll",E,E,93,[[["self"]],["poll"]]],[11,"poll",E,E,94,[[["self"]],["poll"]]],[11,"poll",E,E,95,[[["self"]],["poll"]]],[11,"poll",E,E,96,[[["self"]],["poll"]]],[11,"poll",E,E,6,[[["self"]],["poll"]]],[11,"poll",R[117],E,105,[[["self"]],["poll"]]],[11,"poll",E,E,104,[[["self"]],["poll"]]],[11,"poll",E,E,107,[[["self"]],["poll"]]],[11,"poll",E,E,108,[[["self"]],["poll"]]],[11,"poll",E,E,20,[[["self"]],["poll"]]],[11,"poll",E,E,30,[[["self"]],["poll"]]],[11,"poll",E,E,118,[[["self"]],[["vec"],["poll",["vec"]]]]],[11,"poll",R[172],E,42,[[["self"]],["poll"]]],[11,"poll",E,E,44,[[["self"]],["poll"]]],[11,"poll",E,E,120,[[["self"]],["poll"]]],[11,"poll",R[175],E,54,[[["self"]],[["poll",[R[179]]],[R[179]]]]],[11,"poll",E,E,55,[[["self"]],["poll"]]],[11,"poll",E,E,130,[[["self"]],["poll"]]],[11,"poll",R[176],E,132,[[["self"]],["poll"]]],[11,"poll",R[130],E,128,[[["self"]],[["poll",[R[180]]],[R[180]]]]],[11,"poll",R[177],E,135,[[["self"]],["poll"]]],[11,"poll",R[178],E,69,[[["self"]],["poll"]]],[11,"poll",E,E,70,[[["self"]],["poll"]]],[11,"poll",E,E,136,[[["self"]],["poll"]]],[11,"poll",R[169],E,78,[[["self"]],[["poll",[R[52]]],[R[52]]]]],[11,"poll",E,E,79,[[["self"]],[["poll",[R[52]]],[R[52]]]]],[11,"poll",R[117],E,99,[[["self"]],[[R[52]],["poll",[R[52]]]]]],[11,"poll",E,E,100,[[["self"]],[["poll",[R[52]]],[R[52]]]]],[11,"poll",E,E,101,[[["self"]],[[R[52]],["poll",[R[52]]]]]],[11,"poll",E,E,102,[[["self"]],[["poll",[R[52]]],[R[52]]]]],[11,"poll",E,E,14,[[["self"]],[["poll",[R[52]]],[R[52]]]]],[11,"poll",E,E,103,[[["self"]],[["poll",[R[52]]],[R[52]]]]],[11,"poll",E,E,106,[[["self"]],[["poll",[R[52]]],[R[52]]]]],[11,"poll",E,E,15,[[["self"]],[["poll",[R[52]]],[R[52]]]]],[11,"poll",E,E,16,[[["self"]],[[R[52]],["poll",[R[52]]]]]],[11,"poll",E,E,17,[[["self"]],[["poll",[R[52]]],[R[52]]]]],[11,"poll",E,E,18,[[["self"]],[[R[52]],["poll",[R[52]]]]]],[11,"poll",E,E,19,[[["self"]],[["poll",[R[52]]],[R[52]]]]],[11,"poll",E,E,21,[[["self"]],[["poll",[R[52]]],[R[52]]]]],[11,"poll",E,E,22,[[["self"]],[["poll",[R[52]]],[R[52]]]]],[11,"poll",E,E,23,[[["self"]],[["poll",[R[52]]],[R[52]]]]],[11,"poll",E,E,24,[[["self"]],[[R[52]],["poll",[R[52]]]]]],[11,"poll",E,E,109,[[["self"]],[["poll",[R[52]]],[R[52]]]]],[11,"poll",E,E,110,[[["self"]],[[R[52]],["poll",[R[52]]]]]],[11,"poll",E,E,111,[[["self"]],[[R[52]],["poll",[R[52]]]]]],[11,"poll",E,E,25,[[["self"]],[["poll",[R[52]]],[R[52]]]]],[11,"poll",E,E,112,[[["self"]],[[R[52]],["poll",[R[52]]]]]],[11,"poll",E,E,113,[[["self"]],[[R[52]],["poll",[R[52]]]]]],[11,"poll",E,E,26,[[["self"]],[["poll",[R[52]]],[R[52]]]]],[11,"poll",E,E,27,[[["self"]],[["poll",[R[52]]],[R[52]]]]],[11,"poll",E,E,28,[[["self"]],[["poll",[R[52]]],[R[52]]]]],[11,"poll",E,E,29,[[["self"]],[["poll",[R[52]]],[R[52]]]]],[11,"poll",E,E,114,[[["self"]],[["poll",[R[52]]],[R[52]]]]],[11,"poll",E,E,115,[[["self"]],[["poll",[R[52]]],[R[52]]]]],[11,"poll",E,E,116,[[["self"]],[["poll",[R[52]]],[R[52]]]]],[11,"poll",E,E,31,[[["self"]],[["poll",[R[52]]],[R[52]]]]],[11,"poll",E,E,32,[[["self"]],[["poll",[R[52]]],[R[52]]]]],[11,"poll",E,E,117,[[["self"]],[["poll",[R[52]]],[R[52]]]]],[11,"poll",E,E,33,[[["self"]],[["poll",[R[52]]],[R[52]]]]],[11,"poll",E,E,35,[[["self"]],[["poll",[R[52]]],[R[52]]]]],[11,"poll",R[171],E,37,[[["self"]],[["poll",[R[52]]],[R[52]]]]],[11,"poll",R[117],E,38,[[["self"]],[["poll",[R[52]]],[R[52]]]]],[11,"poll",R[172],E,40,[[["self"]],[["poll",[R[52]]],[R[52]]]]],[11,"poll",E,E,41,[[["self"]],[["poll",[R[52]]],[R[52]]]]],[11,"poll",E,E,43,[[["self"]],[["poll",[R[52]]],[R[52]]]]],[11,"poll",E,E,45,[[["self"]],[["poll",[R[52]]],[R[52]]]]],[11,"poll",E,E,47,[[["self"]],[["poll",[R[52]]],[R[52]]]]],[11,"poll",R[176],E,60,[[["self"]],[[R[52]],["poll",[R[52]]]]]],[11,"poll",E,E,61,[[["self"]],[[R[52]],["poll",[R[52]]]]]],[11,"poll",E,E,131,[[["self"]],[[R[52]],["poll",[R[52]]]]]],[11,"poll",R[177],E,64,[[["self"]],[["poll",[R[52]]],[R[52]]]]],[11,"poll",E,E,66,[[["self"]],[["poll",[R[52]]],[R[52]]]]],[11,"poll",E,E,134,[[["self"]],[[R[52]],["poll",[R[52]]]]]],[11,R[181],R[117],E,14,[[["self"]],[R[182]]]],[11,R[183],E,E,14,[[["self"]],["poll"]]],[11,"close",E,E,14,[[["self"]],["poll"]]],[11,R[181],E,E,15,[[["self"]],[R[182]]]],[11,R[183],E,E,15,[[["self"]],["poll"]]],[11,"close",E,E,15,[[["self"]],["poll"]]],[11,R[181],E,E,16,[[["self"]],[R[182]]]],[11,R[183],E,E,16,[[["self"]],["poll"]]],[11,"close",E,E,16,[[["self"]],["poll"]]],[11,R[181],E,E,17,[[["self"]],[R[182]]]],[11,R[183],E,E,17,[[["self"]],["poll"]]],[11,"close",E,E,17,[[["self"]],["poll"]]],[11,R[181],E,E,18,[[["self"]],[R[182]]]],[11,R[183],E,E,18,[[["self"]],["poll"]]],[11,"close",E,E,18,[[["self"]],["poll"]]],[11,R[181],E,E,19,[[["self"]],[R[182]]]],[11,R[183],E,E,19,[[["self"]],["poll"]]],[11,"close",E,E,19,[[["self"]],["poll"]]],[11,R[181],E,E,21,[[["self"]],[R[182]]]],[11,R[183],E,E,21,[[["self"]],["poll"]]],[11,"close",E,E,21,[[["self"]],["poll"]]],[11,R[181],E,E,22,[[["self"]],[R[182]]]],[11,R[183],E,E,22,[[["self"]],["poll"]]],[11,"close",E,E,22,[[["self"]],["poll"]]],[11,R[181],E,E,23,[[["self"]],[R[182]]]],[11,R[183],E,E,23,[[["self"]],["poll"]]],[11,"close",E,E,23,[[["self"]],["poll"]]],[11,R[181],E,E,24,[[["self"]],[R[182]]]],[11,R[183],E,E,24,[[["self"]],["poll"]]],[11,"close",E,E,24,[[["self"]],["poll"]]],[11,R[181],E,E,111,[[["self"]],[R[182]]]],[11,R[183],E,E,111,[[["self"]],["poll"]]],[11,"close",E,E,111,[[["self"]],["poll"]]],[11,R[181],E,E,25,[[["self"]],[R[182]]]],[11,R[183],E,E,25,[[["self"]],["poll"]]],[11,"close",E,E,25,[[["self"]],["poll"]]],[11,R[181],E,E,26,[[["self"]],[R[182]]]],[11,R[183],E,E,26,[[["self"]],["poll"]]],[11,"close",E,E,26,[[["self"]],["poll"]]],[11,R[181],E,E,27,[[["self"]],[R[182]]]],[11,R[183],E,E,27,[[["self"]],["poll"]]],[11,"close",E,E,27,[[["self"]],["poll"]]],[11,R[181],E,E,28,[[["self"]],[R[182]]]],[11,R[183],E,E,28,[[["self"]],["poll"]]],[11,"close",E,E,28,[[["self"]],["poll"]]],[11,R[181],E,E,29,[[["self"]],[R[182]]]],[11,R[183],E,E,29,[[["self"]],["poll"]]],[11,"close",E,E,29,[[["self"]],["poll"]]],[11,R[181],E,E,114,[[["self"]],[R[182]]]],[11,R[183],E,E,114,[[["self"]],["poll"]]],[11,"close",E,E,114,[[["self"]],["poll"]]],[11,R[181],E,E,31,[[["self"]],[R[182]]]],[11,R[183],E,E,31,[[["self"]],["poll"]]],[11,"close",E,E,31,[[["self"]],["poll"]]],[11,R[181],E,E,32,[[["self"]],[R[182]]]],[11,R[183],E,E,32,[[["self"]],["poll"]]],[11,"close",E,E,32,[[["self"]],["poll"]]],[11,R[181],E,E,33,[[["self"]],[R[182]]]],[11,R[183],E,E,33,[[["self"]],["poll"]]],[11,"close",E,E,33,[[["self"]],["poll"]]],[11,R[181],E,E,36,[[["self"]],[R[182]]]],[11,R[183],E,E,36,[[["self"]],["poll"]]],[11,"close",E,E,36,[[["self"]],["poll"]]],[11,R[181],R[172],E,40,[[["self"]],[R[182]]]],[11,R[183],E,E,40,[[["self"]],["poll"]]],[11,"close",E,E,40,[[["self"]],["poll"]]],[11,R[181],E,E,41,[[["self"]],[R[182]]]],[11,R[183],E,E,41,[[["self"]],["poll"]]],[11,"close",E,E,41,[[["self"]],["poll"]]],[11,R[181],E,E,43,[[["self"]],[R[182]]]],[11,R[183],E,E,43,[[["self"]],["poll"]]],[11,"close",E,E,43,[[["self"]],["poll"]]],[11,R[181],E,E,45,[[["self"]],[R[182]]]],[11,R[183],E,E,45,[[["self"]],["poll"]]],[11,"close",E,E,45,[[["self"]],["poll"]]],[11,R[181],E,E,46,[[["self"]],[R[182]]]],[11,R[183],E,E,46,[[["self"]],["poll"]]],[11,"close",E,E,46,[[["self"]],["poll"]]],[11,R[181],E,E,47,[[["self"]],[R[182]]]],[11,R[183],E,E,47,[[["self"]],["poll"]]],[11,"close",E,E,47,[[["self"]],["poll"]]],[11,R[181],R[176],E,58,[[["self"],[T]],[[R[139]],[R[182],[R[139]]]]]],[11,R[183],E,E,58,[[["self"]],[["poll",[R[139]]],[R[139]]]]],[11,"close",E,E,58,[[["self"]],[["poll",[R[139]]],[R[139]]]]],[11,R[181],E,E,59,[[["self"],[T]],[[R[139]],[R[182],[R[139]]]]]],[11,R[183],E,E,59,[[["self"]],[["poll",[R[139]]],[R[139]]]]],[11,"close",E,E,59,[[["self"]],[["poll",[R[139]]],[R[139]]]]],[11,R[181],R[177],E,133,[[["self"],[T]],[[R[139]],[R[182],[R[139]]]]]],[11,R[183],E,E,133,[[["self"]],[["poll",[R[139]]],[R[139]]]]],[11,"close",E,E,133,[[["self"]],[["poll",[R[139]]],[R[139]]]]],[11,R[181],E,E,65,[[["self"],[T]],[[R[139]],[R[182],[R[139]]]]]],[11,R[183],E,E,65,[[["self"]],[["poll",[R[139]]],[R[139]]]]],[11,"close",E,E,65,[[["self"]],[["poll",[R[139]]],[R[139]]]]],[11,"eq",R[128],E,0,[[["async"],["self"]],["bool"]]],[11,"ne",E,E,0,[[["async"],["self"]],["bool"]]],[11,"eq",E,E,1,[[[R[184]],["self"]],["bool"]]],[11,"ne",E,E,1,[[[R[184]],["self"]],["bool"]]],[11,"eq",R[169],E,4,[[[R[98]],["self"]],["bool"]]],[11,"eq",R[175],E,129,[[["self"],[R[179]]],["bool"]]],[11,"eq",R[176],E,56,[[[R[139]],["self"]],["bool"]]],[11,"ne",E,E,56,[[[R[139]],["self"]],["bool"]]],[11,"eq",E,E,57,[[["self"],[R[138]]],["bool"]]],[11,"ne",E,E,57,[[["self"],[R[138]]],["bool"]]],[11,R[54],R[130],E,127,[[["self"]],[T]]],[11,R[54],E,E,63,[[["self"]],[T]]],[11,"from",R[128],E,0,[[[T]],["async"]]],[11,"from",R[169],E,74,[[[R[12]]],["self"]]],[11,"from",R[174],E,123,[[["arc"]],[R[185]]]],[11,"from",E,E,123,[[[T]],[R[185]]]],[11,"fmt",R[128],E,0,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,1,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[169],E,71,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,72,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,73,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,74,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,2,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,75,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,76,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,77,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,78,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,5,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,79,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,80,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,81,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,82,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,83,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,84,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,85,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,86,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,87,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,88,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,89,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,90,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,91,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,3,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,92,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,93,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,94,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,95,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,96,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,6,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,97,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,98,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,4,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,11,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[117],E,99,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,100,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,101,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,102,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,14,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,103,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,105,[[["self"],[R[29]]],[R[186]]]],[11,"fmt",E,E,104,[[["self"],[R[29]]],[R[186]]]],[11,"fmt",E,E,106,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,15,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,16,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,17,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,107,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,108,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,18,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,19,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,20,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,21,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,22,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,23,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,24,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,109,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,13,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,110,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,111,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,25,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,112,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,113,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,26,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,27,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,28,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,29,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,114,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,115,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,116,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,30,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,31,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,32,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,117,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,33,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,118,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,34,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,35,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,36,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,12,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[171],E,37,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,119,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[117],E,38,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[172],E,40,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,41,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,42,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,43,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,44,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,120,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,45,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,46,[[["self"],[R[29]]],[R[186]]]],[11,"fmt",E,E,47,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,48,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[173],E,124,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,126,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,125,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,121,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[174],E,122,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,123,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[175],E,54,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,53,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,129,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,55,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,130,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[176],E,58,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,59,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,60,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,61,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,56,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,57,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,131,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,132,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[130],E,62,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,127,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,128,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,63,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[177],E,133,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,64,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,65,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,66,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,67,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,134,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,135,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[178],E,68,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,69,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,70,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,136,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[169],E,98,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[117],E,12,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[175],E,129,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[176],E,56,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,57,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[177],E,67,[[[R[29]],["self"]],[R[12]]]],[11,"deref",R[169],E,97,[[["self"]],[T]]],[11,"deref",E,E,98,[[["self"]],["e"]]],[11,"deref",R[130],E,127,[[["self"]],[T]]],[11,"deref",E,E,63,[[["self"]],[T]]],[11,"drop",R[169],E,6,[[["self"]]]],[11,"drop",R[171],E,37,[[["self"]]]],[11,"drop",R[174],E,123,[[["self"]]]],[11,"drop",R[175],E,53,[[["self"]]]],[11,"drop",E,E,54,[[["self"]]]],[11,"drop",E,E,55,[[["self"]]]],[11,"drop",E,E,130,[[["self"]]]],[11,"drop",R[176],E,58,[[["self"]]]],[11,"drop",E,E,60,[[["self"]]]],[11,"drop",R[130],E,127,[[["self"]]]],[11,"drop",E,E,63,[[["self"]]]],[11,"drop",R[177],E,133,[[["self"]]]],[11,"drop",E,E,64,[[["self"]]]],[11,"drop",R[178],E,68,[[["self"]]]],[11,"drop",E,E,69,[[["self"]]]],[11,"next",R[117],E,34,[[["self"]],[R[52]]]],[11,"next",R[171],E,119,[[["self"]],[["f"],[R[52]]]]],[11,R[53],E,E,119,[[["self"]]]],[11,R[187],E,E,37,[[[T]],["self"]]],[11,R[187],R[117],E,38,[[[T]],["self"]]],[11,"clone",R[128],E,0,[[["self"]],["async"]]],[11,"clone",E,E,1,[[["self"]],[R[184]]]],[11,"clone",R[169],E,74,[[["self"]],[R[92]]]],[11,"clone",E,E,6,[[["self"]],["self"]]],[11,"clone",E,E,97,[[["self"]],[R[188]]]],[11,"clone",E,E,98,[[["self"]],[R[189]]]],[11,"clone",E,E,4,[[["self"]],[R[98]]]],[11,"clone",R[172],E,40,[[["self"]],["with"]]],[11,"clone",E,E,43,[[["self"]],[R[190]]]],[11,"clone",E,E,45,[[["self"]],[R[191]]]],[11,"clone",R[173],E,125,[[["self"]],[R[192]]]],[11,"clone",E,E,121,[[["self"]],["task"]]],[11,"clone",R[174],E,123,[[["self"]],["self"]]],[11,"clone",R[175],E,129,[[["self"]],[R[179]]]],[11,"clone",R[176],E,56,[[["self"]],[R[139]]]],[11,"clone",E,E,57,[[["self"]],[R[138]]]],[11,"clone",E,E,59,[[["self"]],[R[5120]]]],[11,"clone",E,E,58,[[["self"]],["sender"]]],[11,"clone",R[177],E,133,[[["self"]],["self"]]],[11,"clone",E,E,65,[[["self"]],["self"]]],[11,R[79],R[171],E,37,[[],["self"]]],[11,R[79],R[117],E,38,[[],["self"]]],[11,R[79],R[173],E,124,[[],["self"]]],[11,R[30],R[169],E,98,[[["self"]],["str"]]],[11,"cause",E,E,98,[[["self"]],[[R[52],["error"]],["error"]]]],[11,R[30],R[117],E,12,[[["self"]],["str"]]],[11,R[30],R[175],E,129,[[["self"]],["str"]]],[11,R[30],R[176],E,56,[[["self"]],["str"]]],[11,R[30],E,E,57,[[["self"]],["str"]]],[11,R[30],R[177],E,67,[[["self"]],["str"]]],[11,"new",R[173],R[534],124,[[],[R[535]]]],[11,R[540],E,R[536],124,[[["self"]]]],[11,R[537],E,R[538],124,[[["self"],["task"]]]],[11,"notify",E,R[539],124,[[["self"]]]],[11,"with",E,R[5121],126,[[["self"],["f"]],["r"]]],[11,R[5122],R[174],R[5123],122,[[["self"]],[R[12]]]],[11,R[5124],E,R[5125],122,[[["self"]],[[R[12]],[R[52],[R[12]]]]]],[11,"wait_send",E,R[5126],122,[[["self"]],[R[12]]]],[11,"wait_flush",E,R[5127],122,[[["self"]],[R[12]]]],[11,"wait_close",E,R[5128],122,[[["self"]],[R[12]]]],[11,"new",R[173],R[5129],125,[[["arc",["eventset"]],["eventset"],[R[9]]],[R[192]]]],[11,"clone_id",R[174],R[193],51,[[["self"],[R[9]]],[R[9]]]],[11,"drop_id",E,R[194],51,[[["self"],[R[9]]]]],[11,"notify",R[173],R[5130],121,[[["self"]]]],[11,"is_current",E,R[5131],121,[[["self"]],["bool"]]],[11,R[5132],E,R[5133],121,[[["self"]],["bool"]]],[11,R[110],R[174],R[5134],122,[[["self"]],[T]]],[11,R[111],E,R[5135],122,[[["self"]],[T]]],[11,R[46],E,R[5136],122,[[],[T]]],[11,R[5137],E,R[5138],122,[[["self"],["n"],["f"],[R[9]]],["r"]]],[11,R[5139],E,R[5140],122,[[["self"],["n"],[R[9]]],["poll"]]],[11,R[5141],E,R[5142],122,[[["self"],["n"],[R[9]]],[["poll",[R[52]]],[R[52]]]]],[11,R[5143],E,R[5144],122,[[["self"],["n"],[R[9]]],[R[182]]]],[11,R[5145],E,R[5146],122,[[["self"],["n"],[R[9]]],["poll"]]],[11,R[5147],E,R[5148],122,[[["self"],["n"],[R[9]]],["poll"]]],[11,"new",E,"Constructs a new `NotifyHandle` directly.",123,[[],[R[185]]]],[11,"notify",E,"Invokes the underlying instance of `Notify` with the…",123,[[["self"],[R[9]]]]]],"p":[[4,"Async"],[4,R[195]],[4,"Loop"],[4,"Either"],[4,R[196]],[3,"Fuse"],[3,"Shared"],[8,"Future"],[8,R[197]],[8,R[198]],[8,R[4941]],[3,R[199]],[3,R[200]],[4,R[201]],[3,"AndThen"],[3,"Filter"],[3,R[202]],[3,"Flatten"],[3,"FromErr"],[3,"Fuse"],[3,R[203]],[3,"Inspect"],[3,R[204]],[3,"Map"],[3,"MapErr"],[3,"Peekable"],[3,"Skip"],[3,R[205]],[3,"Take"],[3,R[206]],[3,"Forward"],[3,"Buffered"],[3,R[207]],[3,"Chunks"],[3,"Wait"],[3,R[208]],[3,R[209]],[3,R[210]],[3,R[211]],[8,"Stream"],[3,"With"],[3,R[212]],[3,"Flush"],[3,R[213]],[3,"Send"],[3,R[214]],[3,"Fanout"],[3,"Buffer"],[3,"Wait"],[8,"Sink"],[8,"EventSet"],[8,"Notify"],[8,R[215]],[3,"Sender"],[3,R[145]],[3,R[133]],[3,R[148]],[3,R[216]],[3,"Sender"],[3,R[146]],[3,R[145]],[3,R[147]],[3,"BiLock"],[3,R[217]],[3,R[145]],[3,R[146]],[3,R[147]],[3,R[148]],[3,"Sender"],[3,R[145]],[3,R[133]],[3,"Empty"],[3,"Lazy"],[3,"PollFn"],[3,R[218]],[3,"LoopFn"],[3,"AndThen"],[3,"Flatten"],[3,R[219]],[3,R[220]],[3,"Join"],[3,"Join3"],[3,"Join4"],[3,"Join5"],[3,"Map"],[3,"MapErr"],[3,"FromErr"],[3,"OrElse"],[3,"Select"],[3,R[221]],[3,"Select2"],[3,"Then"],[3,"Inspect"],[3,R[104]],[3,"JoinAll"],[3,R[222]],[3,"SelectOk"],[3,R[223]],[3,R[224]],[3,"Iter"],[3,"IterOk"],[3,R[225]],[3,"Repeat"],[3,"Chain"],[3,"Concat"],[3,"Concat2"],[3,"Empty"],[3,"Fold"],[3,"ForEach"],[3,"Merge"],[3,"Once"],[3,"OrElse"],[3,"PollFn"],[3,"Select"],[3,"Then"],[3,"Unfold"],[3,"Zip"],[3,R[104]],[3,"Collect"],[3,R[262]],[3,"SendAll"],[3,"Task"],[3,"Spawn"],[3,R[226]],[3,R[227]],[3,R[228]],[3,"LocalKey"],[3,R[229]],[3,R[230]],[3,"Canceled"],[3,R[231]],[3,R[133]],[3,R[231]],[3,"Sender"],[3,R[133]],[3,R[231]],[3,R[231]]]};
searchIndex[R[1331]]={"doc":"The ChaCha random number generator.","i":[[3,"ChaChaRng",R[1331],R[1332],N,N],[3,"ChaChaCore",E,"The core of `ChaChaRng`, used with `BlockRng`.",N,N],[11,"get_word_pos",E,"Get the offset from the start of the stream, in 32-bit…",0,[[["self"]],["u128"]]],[11,"set_word_pos",E,"Set the offset from the start of the stream, in 32-bit…",0,[[["self"],["u128"]]]],[11,"set_stream",E,"Set the stream number.",0,[[["self"],["u64"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,"into",E,E,0,[[],[U]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[[T],["self"]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,"into",E,E,1,[[],[U]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,[[[T],["self"]]]],[11,"from",E,E,0,[[["chachacore"]],["self"]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,1,[[[R[29]],["self"]],[R[12]]]],[11,"clone",E,E,0,[[["self"]],["chacharng"]]],[11,"clone",E,E,1,[[["self"]],["chachacore"]]],[11,R[19],E,E,0,[[["self"]],["u32"]]],[11,R[20],E,E,0,[[["self"]],["u64"]]],[11,R[21],E,E,0,[[["self"]]]],[11,R[22],E,E,0,[[["self"]],[["error"],[R[12],["error"]]]]],[11,R[23],E,E,0,[[],["self"]]],[11,R[25],E,E,0,[[[R[26]]],[["error"],[R[12],["error"]]]]],[11,R[23],E,E,1,[[],["self"]]],[11,R[2093],E,E,1,[[["self"]]]]],"p":[[3,"ChaChaRng"],[3,"ChaChaCore"]]};
searchIndex[R[1334]]={"doc":"Non-physical true random number generator based on timing…","i":[[3,R[2538],R[1334],R[2519],N,N],[4,R[2520],E,R[2521],N,N],[13,"NoTimer",E,R[2522],0,N],[13,R[2523],E,R[2524],0,N],[13,R[2525],E,R[2526],0,N],[13,R[2527],E,R[2528],0,N],[13,R[2529],E,R[2530],0,N],[11,"new",E,R[2531],1,[[],[[R[12],[R[1336],R[1335]]],[R[1335]],[R[1336]]]]],[11,R[2532],E,R[2533],1,[[],[R[1336]]]],[11,"set_rounds",E,R[2534],1,[[["self"],["u8"]]]],[11,"test_timer",E,R[2535],1,[[["self"]],[[R[12],["u8",R[1335]]],[R[1335]],["u8"]]]],[11,R[2536],E,R[2537],1,[[["self"],["bool"]],["i64"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,"into",E,E,1,[[],[U]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,[[[T],["self"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,"into",E,E,0,[[],[U]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,R[170],E,E,0,[[["self"]],["string"]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[[T],["self"]]]],[11,"eq",E,E,0,[[[R[1335]],["self"]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,1,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,0,[[[R[29]],["self"]],[R[12]]]],[11,"clone",E,E,0,[[["self"]],[R[1335]]]],[11,"clone",E,E,1,[[["self"]],[R[1336]]]],[11,R[30],E,E,0,[[["self"]],["str"]]],[11,R[19],E,E,1,[[["self"]],["u32"]]],[11,R[20],E,E,1,[[["self"]],["u64"]]],[11,R[21],E,E,1,[[["self"]]]],[11,R[22],E,E,1,[[["self"]],[[R[12],["error"]],["error"]]]]],"p":[[4,R[2520]],[3,R[2538]]]};
searchIndex[R[1406]]={"doc":"A library for acquiring a backtrace at runtime","i":[[3,"Frame",R[1406],"A trait representing one frame of a backtrace, yielded to…",N,N],[3,"Symbol",E,"A trait representing the resolution of a symbol in a file.",N,N],[3,"SymbolName",E,"A wrapper around a symbol name to provide ergonomic…",N,N],[3,R[4553],E,"Representation of an owned and self-contained backtrace.",N,N],[3,R[1410],E,"Captured version of a frame in a backtrace.",N,N],[3,R[1411],E,"Captured version of a symbol in a backtrace.",N,N],[4,R[1409],E,"A platform independent representation of a string. When…",N,N],[13,"Bytes",E,"A slice, typically provided on Unix platforms.",0,N],[13,"Wide",E,"Wide strings typically from Windows.",0,N],[5,"trace_unsynchronized",E,"Same as `trace`, only unsafe as it's unsynchronized.",N,[[["fnmut"]]]],[5,"resolve_unsynchronized",E,"Same as `resolve`, only unsafe as it's unsynchronized.",N,[[["f"]]]],[5,"trace",E,"Inspects the current call-stack, passing all active frames…",N,[[["fnmut"]]]],[5,"resolve",E,"Resolve an address to a symbol, passing the symbol to the…",N,[[["fnmut"]]]],[11,"ip",E,"Returns the current instruction pointer of this frame.",1,[[["self"]]]],[11,R[1407],E,"Returns the starting symbol address of the frame of this…",1,[[["self"]]]],[11,"name",E,"Returns the name of this function.",2,[[["self"]],[[R[1405]],[R[52],[R[1405]]]]]],[11,"addr",E,"Returns the starting address of this function.",2,[[["self"]],[R[52]]]],[11,"filename_raw",E,"Returns the raw filename as a slice. This is mainly useful…",2,[[["self"]],[[R[1404]],[R[52],[R[1404]]]]]],[11,"lineno",E,"Returns the line number for where this symbol is currently…",2,[[["self"]],[["u32"],[R[52],["u32"]]]]],[11,"filename",E,"Returns the file name where this function was defined.",2,[[["self"]],[["path"],[R[52],["path"]]]]],[11,"new",E,"Creates a new symbol name from the raw underlying bytes.",3,[[],[R[1405]]]],[11,"as_str",E,"Returns the raw symbol name as a `str` if the symbols is…",3,[[["self"]],[["str"],[R[52],["str"]]]]],[11,"as_bytes",E,"Returns the raw symbol name as a list of bytes",3,[[["self"]]]],[11,"to_str_lossy",E,"Lossy converts to a `Cow<str>`, will allocate if `Bytes`…",0,[[["self"]],[["cow",["str"]],["str"]]]],[11,"into_path_buf",E,"Provides a `Path` representation of `BytesOrWideString`.",0,[[],["pathbuf"]]],[11,"new",E,"Captures a backtrace at the callsite of this function,…",4,[[],[R[1406]]]],[11,"new_unresolved",E,"Similar to `new` except that this does not resolve any…",4,[[],[R[1406]]]],[11,"frames",E,"Returns the frames from when this backtrace was captured.",4,[[["self"]]]],[11,"resolve",E,"If this backtrace was created from `new_unresolved` then…",4,[[["self"]]]],[11,"ip",E,"Same as `Frame::ip`",5,[[["self"]]]],[11,R[1407],E,"Same as `Frame::symbol_address`",5,[[["self"]]]],[11,"symbols",E,"Returns the list of symbols that this frame corresponds to.",5,[[["self"]]]],[11,"name",E,"Same as `Symbol::name`",6,[[["self"]],[[R[1405]],[R[52],[R[1405]]]]]],[11,"addr",E,"Same as `Symbol::addr`",6,[[["self"]],[R[52]]]],[11,"filename",E,"Same as `Symbol::filename`",6,[[["self"]],[["path"],[R[52],["path"]]]]],[11,"lineno",E,"Same as `Symbol::lineno`",6,[[["self"]],[["u32"],[R[52],["u32"]]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,"into",E,E,1,[[],[U]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,"into",E,E,2,[[],[U]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,"into",E,E,3,[[],[U]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,R[170],E,E,3,[[["self"]],["string"]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,"into",E,E,4,[[],[U]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,R[16],E,E,4,[[["self"]],[T]]],[11,R[17],E,E,4,[[[T],["self"]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,"into",E,E,5,[[],[U]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[18],E,E,5,[[["self"]],[R[40]]]],[11,R[16],E,E,5,[[["self"]],[T]]],[11,R[17],E,E,5,[[[T],["self"]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[11],E,E,6,[[[U]],[R[12]]]],[11,R[14],E,E,6,[[],[R[12]]]],[11,"into",E,E,6,[[],[U]]],[11,R[39],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[18],E,E,6,[[["self"]],[R[40]]]],[11,R[16],E,E,6,[[["self"]],[T]]],[11,R[17],E,E,6,[[[T],["self"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,"into",E,E,0,[[],[U]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,R[170],E,E,0,[[["self"]],["string"]]],[11,"from",E,E,4,[[["vec",[R[1408]]],[R[1408]]],["self"]]],[11,"fmt",E,E,1,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,2,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,3,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,4,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,3,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,0,[[[R[29]],["self"]],[R[12]]]],[11,"clone",E,E,4,[[["self"]],[R[1406]]]],[11,"clone",E,E,5,[[["self"]],[R[1408]]]],[11,"clone",E,E,6,[[["self"]],["backtracesymbol"]]],[11,"into",E,E,4,[[],[["vec",[R[1408]]],[R[1408]]]]],[11,R[79],E,E,4,[[],[R[1406]]]]],"p":[[4,R[1409]],[3,"Frame"],[3,"Symbol"],[3,"SymbolName"],[3,R[4553]],[3,R[1410]],[3,R[1411]]]};
searchIndex[R[2250]]={"doc":"Epoch-based memory reclamation.","i":[[3,"Atomic",R[2250],"An atomic pointer that can be safely shared between threads.",N,N],[3,R[2262],E,"The error returned on failed compare-and-set operation.",N,N],[12,"current",E,"The value in the atomic pointer at the time of the failed…",0,N],[12,"new",E,"The new value, which the operation failed to store.",0,N],[3,"Owned",E,"An owned heap-allocated object.",N,N],[3,"Shared",E,"A pointer to an object protected by the epoch GC.",N,N],[3,"Collector",E,"An epoch-based garbage collector.",N,N],[3,R[2263],E,"A handle to a garbage collector.",N,N],[3,"Guard",E,"A guard that keeps the current thread pinned.",N,N],[5,"unprotected",E,"Returns a reference to a dummy guard that allows…",N,[[],["guard"]]],[5,"default_collector",E,"Returns the default global collector.",N,[[],[R[2258]]]],[5,"is_pinned",E,"Returns `true` if the current thread is pinned.",N,[[],["bool"]]],[5,"pin",E,"Pins the current thread.",N,[[],["guard"]]],[11,"null",E,"Returns a new null atomic pointer.",1,[[],["atomic"]]],[11,"new",E,"Allocates `value` on the heap and returns a new atomic…",1,[[[T]],["atomic"]]],[11,"load",E,"Loads a `Shared` from the atomic pointer.",1,[[["guard"],["self"],[R[51]]],["shared"]]],[11,R[2265],E,"Loads a `Shared` from the atomic pointer using a \"consume\"…",1,[[["guard"],["self"]],["shared"]]],[11,"store",E,R[2251],1,[[["pointer"],["self"],[R[51]]]]],[11,"swap",E,R[2251],1,[[["pointer"],["guard"],["self"],[R[51]]],["shared"]]],[11,"compare_and_set",E,R[2253],1,[[["shared"],["o"],["guard"],["self"],["p"]],[["shared"],[R[12],["shared",R[2252]]],[R[2252]]]]],[11,"compare_and_set_weak",E,R[2253],1,[[["shared"],["o"],["guard"],["self"],["p"]],[["shared"],[R[12],["shared",R[2252]]],[R[2252]]]]],[11,R[431],E,"Bitwise \"and\" with the current tag.",1,[[["guard"],["self"],[R[9]],[R[51]]],["shared"]]],[11,R[436],E,"Bitwise \"or\" with the current tag.",1,[[["guard"],["self"],[R[9]],[R[51]]],["shared"]]],[11,R[434],E,"Bitwise \"xor\" with the current tag.",1,[[["guard"],["self"],[R[9]],[R[51]]],["shared"]]],[11,"new",E,"Allocates `value` on the heap and returns a new owned…",2,[[[T]],["owned"]]],[11,"from_raw",E,"Returns a new owned pointer pointing to `raw`.",2,[[],["owned"]]],[11,"into_shared",E,"Converts the owned pointer into a [`Shared`].",2,[[["guard"]],["shared"]]],[11,"into_box",E,"Converts the owned pointer into a `Box`.",2,[[],["box"]]],[11,"tag",E,R[2255],2,[[["self"]],[R[9]]]],[11,"with_tag",E,R[2256],2,[[[R[9]]],["owned"]]],[11,"null",E,"Returns a new null pointer.",3,[[],["shared"]]],[11,"is_null",E,"Returns `true` if the pointer is null.",3,[[["self"]],["bool"]]],[11,"as_raw",E,"Converts the pointer to a raw pointer (without the tag).",3,[[["self"]]]],[11,"deref",E,R[2254],3,[[["self"]],[T]]],[11,R[54],E,R[2254],3,[[["self"]],[T]]],[11,"as_ref",E,"Converts the pointer to a reference.",3,[[["self"]],[[T],[R[52]]]]],[11,"into_owned",E,"Takes ownership of the pointee.",3,[[],["owned"]]],[11,"tag",E,R[2255],3,[[["self"]],[R[9]]]],[11,"with_tag",E,R[2256],3,[[["self"],[R[9]]],["shared"]]],[11,"new",E,"Creates a new collector.",4,[[],["self"]]],[11,R[540],E,"Registers a new handle for the collector.",4,[[["self"]],["localhandle"]]],[11,"pin",E,"Pins the handle.",5,[[["self"]],["guard"]]],[11,"is_pinned",E,"Returns `true` if the handle is pinned.",5,[[["self"]],["bool"]]],[11,R[2258],E,"Returns the `Collector` associated with this handle.",5,[[["self"]],[R[2258]]]],[11,"defer",E,R[2257],6,[[["self"],["f"]]]],[11,"defer_unchecked",E,R[2257],6,[[["self"],["f"]]]],[11,"defer_destroy",E,"Stores a destructor for an object so that it can be…",6,[[["shared"],["self"]]]],[11,"flush",E,"Clears up the thread-local cache of deferred functions by…",6,[[["self"]]]],[11,"repin",E,"Unpins and then immediately re-pins the thread.",6,[[["self"]]]],[11,"repin_after",E,"Temporarily unpins the thread, executes the given function…",6,[[["self"],["f"]],["r"]]],[11,R[2258],E,"Returns the `Collector` associated with this guard.",6,[[["self"]],[[R[52],[R[2258]]],[R[2258]]]]],[8,R[2264],E,"Memory orderings for compare-and-set operations.",N,N],[10,"success",E,"The ordering of the operation when it succeeds.",7,[[["self"]],[R[51]]]],[10,"failure",E,"The ordering of the operation when it fails.",7,[[["self"]],[R[51]]]],[8,"Pointer",E,"A trait for either `Owned` or `Shared` pointers.",N,N],[10,R[2260],E,"Returns the machine representation of the pointer.",8,[[],[R[9]]]],[10,R[2261],E,R[2259],8,[[[R[9]]],["self"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,[[[T],["self"]]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[17],E,E,2,[[[T],["self"]]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[17],E,E,3,[[[T],["self"]]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[16],E,E,4,[[["self"]],[T]]],[11,R[17],E,E,4,[[[T],["self"]]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,R[18],E,E,5,[[["self"]],[R[40]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[11],E,E,6,[[[U]],[R[12]]]],[11,R[39],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[],[R[12]]]],[11,R[18],E,E,6,[[["self"]],[R[40]]]],[11,R[2260],E,E,2,[[],[R[9]]]],[11,R[2261],E,R[2259],2,[[[R[9]]],["self"]]],[11,R[2260],E,E,3,[[],[R[9]]]],[11,R[2261],E,E,3,[[[R[9]]],["self"]]],[11,"eq",E,E,3,[[["self"]],["bool"]]],[11,"eq",E,"Checks if both handles point to the same collector.",4,[[["self"],[R[2258]]],["bool"]]],[11,"clone",E,"Returns a copy of the atomic value.",1,[[["self"]],["self"]]],[11,"clone",E,E,2,[[["self"]],["self"]]],[11,"clone",E,E,3,[[["self"]],["self"]]],[11,"clone",E,"Creates another reference to the same garbage collector.",4,[[["self"]],["self"]]],[11,"cmp",E,E,3,[[["self"]],[R[51]]]],[11,"from",E,"Returns a new atomic pointer pointing to `owned`.",1,[[["owned"]],["self"]]],[11,"from",E,E,1,[[["box"]],["self"]]],[11,"from",E,E,1,[[[T]],["self"]]],[11,"from",E,"Returns a new atomic pointer pointing to `ptr`.",1,[[["shared"]],["self"]]],[11,"from",E,"Returns a new atomic pointer pointing to `raw`.",1,[[],["self"]]],[11,"from",E,E,2,[[[T]],["self"]]],[11,"from",E,"Returns a new owned pointer pointing to `b`.",2,[[["box"]],["self"]]],[11,"from",E,"Returns a new pointer pointing to `raw`.",3,[[],["self"]]],[11,"drop",E,E,2,[[["self"]]]],[11,"drop",E,E,5,[[["self"]]]],[11,"drop",E,E,6,[[["self"]]]],[11,R[264],E,E,3,[[["self"]],[[R[52],[R[51]]],[R[51]]]]],[11,"as_mut",E,E,2,[[["self"]],[T]]],[11,"as_ref",E,E,2,[[["self"]],[T]]],[11,R[79],E,E,1,[[],["self"]]],[11,R[79],E,E,3,[[],["self"]]],[11,R[54],E,E,2,[[["self"]],[T]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,1,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,2,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,3,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,4,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,5,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,6,[[["self"],[R[29]]],[R[12]]]],[11,"deref",E,E,2,[[["self"]],[T]]],[11,"fmt",E,E,1,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,3,[[["self"],[R[29]]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]]],"p":[[3,R[2262]],[3,"Atomic"],[3,"Owned"],[3,"Shared"],[3,"Collector"],[3,R[2263]],[3,"Guard"],[8,R[2264]],[8,"Pointer"]]};
searchIndex[R[2290]]={"doc":"Integer trait and functions.","i":[[3,R[2295],R[2290],"An iterator over binomial coefficients.",N,N],[5,"sqrt",E,R[2292],N,[[["roots"]],["roots"]]],[5,"cbrt",E,R[2293],N,[[["roots"]],["roots"]]],[5,"nth_root",E,R[2291],N,[[["u32"],["roots"]],["roots"]]],[5,"div_rem",E,"Simultaneous integer division and modulus",N,[[["integer"]]]],[5,"div_floor",E,"Floored integer division",N,[[["integer"]],["integer"]]],[5,"mod_floor",E,"Floored integer modulus",N,[[["integer"]],["integer"]]],[5,R[2294],E,"Simultaneous floored integer division and modulus",N,[[["integer"]]]],[5,"gcd",E,"Calculates the Greatest Common Divisor (GCD) of the number…",N,[[["integer"]],["integer"]]],[5,"lcm",E,"Calculates the Lowest Common Multiple (LCM) of the number…",N,[[["integer"]],["integer"]]],[5,"binomial",E,"Calculate the binomial coefficient.",N,[[["integer"],["clone"]],[["integer"],["clone"]]]],[5,"multinomial",E,"Calculate the multinomial coefficient.",N,[[],[["integer"],["clone"]]]],[8,"Roots",E,"Provides methods to compute an integer's square root, cube…",N,N],[10,"nth_root",E,R[2291],0,[[["u32"],["self"]],["self"]]],[11,"sqrt",E,R[2292],0,[[["self"]],["self"]]],[11,"cbrt",E,R[2293],0,[[["self"]],["self"]]],[8,"Integer",E,E,N,N],[10,"div_floor",E,"Floored integer division.",1,[[["self"]],["self"]]],[10,"mod_floor",E,"Floored integer modulo, satisfying:",1,[[["self"]],["self"]]],[10,"gcd",E,"Greatest Common Divisor (GCD).",1,[[["self"]],["self"]]],[10,"lcm",E,"Lowest Common Multiple (LCM).",1,[[["self"]],["self"]]],[10,"divides",E,"Deprecated, use `is_multiple_of` instead.",1,[[["self"]],["bool"]]],[10,"is_multiple_of",E,"Returns `true` if `self` is a multiple of `other`.",1,[[["self"]],["bool"]]],[10,"is_even",E,"Returns `true` if the number is even.",1,[[["self"]],["bool"]]],[10,"is_odd",E,"Returns `true` if the number is odd.",1,[[["self"]],["bool"]]],[10,"div_rem",E,"Simultaneous truncated integer division and modulus.…",1,[[["self"]]]],[11,R[2294],E,"Simultaneous floored integer division and modulus. Returns…",1,[[["self"]]]],[11,"new",E,"For a given n, iterate over all binomial coefficients…",2,[[[T]],["iterbinomial"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[48],E,E,2,[[],["i"]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,"into",E,E,2,[[],[U]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"next",E,E,2,[[["self"]],[R[52]]]],[11,"sqrt",E,R[2292],0,[[["self"]],["self"]]],[11,"cbrt",E,R[2293],0,[[["self"]],["self"]]]],"p":[[8,"Roots"],[8,"Integer"],[3,R[2295]]]};
searchIndex[R[2296]]={"doc":"A library for finding occurrences of many patterns at…","i":[[3,R[2302],R[2296],"An automaton for searching multiple strings in linear time.",N,N],[3,R[2303],E,"A builder for configuring an Aho-Corasick automaton.",N,N],[3,"FindIter",E,"An iterator of non-overlapping matches in a particular…",N,N],[3,R[2304],E,"An iterator of overlapping matches in a particular haystack.",N,N],[3,R[2305],E,"An iterator that reports Aho-Corasick matches in a stream.",N,N],[3,"Error",E,"An error that occurred during the construction of an…",N,N],[3,"Match",E,"A representation of a match reported by an Aho-Corasick…",N,N],[4,"MatchKind",E,"A knob for controlling the match semantics of an…",N,N],[13,"Standard",E,"Use standard match semantics, which support overlapping…",0,N],[13,"LeftmostFirst",E,"Use leftmost-first match semantics, which reports leftmost…",0,N],[13,"LeftmostLongest",E,"Use leftmost-longest match semantics, which reports…",0,N],[4,R[32],E,"The kind of error that occurred.",N,N],[13,"StateIDOverflow",E,"An error that occurs when constructing an automaton would…",1,N],[12,"max",R[2297],"The maximum possible state ID.",1,N],[13,"PremultiplyOverflow",R[2296],"An error that occurs when premultiplication of state IDs…",1,N],[12,"max",R[2297],"The maximum possible state id.",1,N],[12,"requested_max",E,"The maximum ID required by premultiplication.",1,N],[11,"new",R[2296],"Create a new Aho-Corasick automaton using the default…",2,[[["i"]],[R[2298]]]],[11,"new_auto_configured",E,"Build an Aho-Corasick automaton with an automatically…",2,[[],[R[2298]]]],[11,"is_match",E,"Returns true if and only if this automaton matches the…",2,[[["asref"],["self"]],["bool"]]],[11,"earliest_find",E,"Returns the location of the first detected match in…",2,[[["asref"],["self"]],[["match"],[R[52],["match"]]]]],[11,"find",E,"Returns the location of the first match according to the…",2,[[["asref"],["self"]],[["match"],[R[52],["match"]]]]],[11,"find_iter",E,"Returns an iterator of non-overlapping matches, using the…",2,[[["self"],["b"]],["finditer"]]],[11,"find_overlapping_iter",E,"Returns an iterator of overlapping matches in the given…",2,[[["self"],["b"]],["findoverlappingiter"]]],[11,R[3512],E,"Replace all matches with a corresponding value in the…",2,[[["str"],["self"]],["string"]]],[11,"replace_all_bytes",E,"Replace all matches using raw bytes with a corresponding…",2,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"replace_all_with",E,"Replace all matches using a closure called on each match.…",2,[[["string"],["str"],["self"],["f"]]]],[11,"replace_all_with_bytes",E,"Replace all matches using raw bytes with a closure called…",2,[[["self"],["vec"],["f"]]]],[11,"stream_find_iter",E,"Returns an iterator of non-overlapping matches in the…",2,[[["read"],["self"]],[["read"],["streamfinditer"]]]],[11,"stream_replace_all",E,"Search for and replace all matches of this automaton in…",2,[[["w"],["self"],["r"]],[R[12]]]],[11,"stream_replace_all_with",E,"Search the given reader and replace all matches of this…",2,[[["w"],["self"],["f"],["r"]],[R[12]]]],[11,"match_kind",E,"Returns the match kind used by this automaton.",2,[[["self"]],[R[2301]]]],[11,"max_pattern_len",E,"Returns the length of the longest pattern matched by this…",2,[[["self"]],[R[9]]]],[11,"pattern_count",E,"Return the total number of patterns matched by this…",2,[[["self"]],[R[9]]]],[11,"supports_overlapping",E,"Returns true if and only if this automaton supports…",2,[[["self"]],["bool"]]],[11,"supports_stream",E,"Returns true if and only if this automaton supports stream…",2,[[["self"]],["bool"]]],[11,"heap_bytes",E,"Returns the total amount of heap used by this automaton,…",2,[[["self"]],[R[9]]]],[11,"new",E,"Create a new builder for configuring an Aho-Corasick…",3,[[],[R[2300]]]],[11,"build",E,R[2299],3,[[["i"],["self"]],[R[2298]]]],[11,"build_with_size",E,R[2299],3,[[["i"],["self"]],[[R[12],[R[2298],"error"]],[R[2298]],["error"]]]],[11,"auto_configure",E,"Automatically configure the settings on this builder…",3,[[["self"]],[R[2300]]]],[11,"match_kind",E,"Set the desired match semantics.",3,[[["self"],[R[2301]]],[R[2300]]]],[11,"ascii_case_insensitive",E,"Enable ASCII-aware case insensitive matching.",3,[[["self"],["bool"]],[R[2300]]]],[11,"dense_depth",E,"Set the limit on how many NFA states use a dense…",3,[[["self"],[R[9]]],[R[2300]]]],[11,"dfa",E,"Compile the standard Aho-Corasick automaton into a…",3,[[["self"],["bool"]],[R[2300]]]],[11,"prefilter",E,"Enable heuristic prefilter optimizations.",3,[[["self"],["bool"]],[R[2300]]]],[11,"byte_classes",E,"Shrink the size of the transition alphabet by mapping…",3,[[["self"],["bool"]],[R[2300]]]],[11,"premultiply",E,"Premultiply state identifiers in the transition table.…",3,[[["self"],["bool"]],[R[2300]]]],[11,"kind",E,"Return the kind of this error.",4,[[["self"]],[R[1]]]],[8,"StateID",E,"A trait describing the representation of an automaton's…",N,N],[10,R[2261],E,"Convert from a `usize` to this implementation's…",5,[[[R[9]]],["self"]]],[10,"to_usize",E,"Convert this implementation's representation to a `usize`.",5,[[],[R[9]]]],[10,"max_id",E,"Return the maximum state identifier supported by this…",5,[[],[R[9]]]],[11,R[274],E,"Returns the identifier of the pattern that matched.",6,[[["self"]],[R[9]]]],[11,"start",E,"The starting position of the match.",6,[[["self"]],[R[9]]]],[11,"end",E,"The ending position of the match.",6,[[["self"]],[R[9]]]],[11,R[69],E,"Returns true if and only if this match is empty. That is,…",6,[[["self"]],["bool"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[17],E,E,2,[[[T],["self"]]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[17],E,E,3,[[[T],["self"]]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[48],E,E,7,[[],["i"]]],[11,"into",E,E,7,[[],[U]]],[11,R[11],E,E,7,[[[U]],[R[12]]]],[11,R[39],E,E,7,[[["self"]],[T]]],[11,R[13],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[],[R[12]]]],[11,R[18],E,E,7,[[["self"]],[R[40]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[48],E,E,8,[[],["i"]]],[11,"into",E,E,8,[[],[U]]],[11,R[11],E,E,8,[[[U]],[R[12]]]],[11,R[39],E,E,8,[[["self"]],[T]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[],[R[12]]]],[11,R[18],E,E,8,[[["self"]],[R[40]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[48],E,E,9,[[],["i"]]],[11,"into",E,E,9,[[],[U]]],[11,R[11],E,E,9,[[[U]],[R[12]]]],[11,R[39],E,E,9,[[["self"]],[T]]],[11,R[13],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[],[R[12]]]],[11,R[18],E,E,9,[[["self"]],[R[40]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[16],E,E,4,[[["self"]],[T]]],[11,R[17],E,E,4,[[[T],["self"]]]],[11,R[170],E,E,4,[[["self"]],["string"]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[16],E,E,6,[[["self"]],[T]]],[11,R[17],E,E,6,[[[T],["self"]]]],[11,R[11],E,E,6,[[[U]],[R[12]]]],[11,R[39],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[],[R[12]]]],[11,R[18],E,E,6,[[["self"]],[R[40]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[[T],["self"]]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,[[[T],["self"]]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"eq",E,E,0,[[["self"],[R[2301]]],["bool"]]],[11,"eq",E,E,6,[[["self"],["match"]],["bool"]]],[11,"ne",E,E,6,[[["self"],["match"]],["bool"]]],[11,"clone",E,E,2,[[["self"]],[R[2298]]]],[11,"clone",E,E,3,[[["self"]],[R[2300]]]],[11,"clone",E,E,0,[[["self"]],[R[2301]]]],[11,"clone",E,E,4,[[["self"]],["error"]]],[11,"clone",E,E,1,[[["self"]],[R[1]]]],[11,"clone",E,E,6,[[["self"]],["match"]]],[11,"next",E,E,7,[[["self"]],[["match"],[R[52],["match"]]]]],[11,"next",E,E,8,[[["self"]],[["match"],[R[52],["match"]]]]],[11,"next",E,E,9,[[["self"]],[[R[52],[R[12]]],[R[12],["match"]]]]],[11,R[79],E,E,3,[[],[R[2300]]]],[11,R[79],E,E,0,[[],[R[2301]]]],[11,"fmt",E,E,2,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,7,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,8,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,9,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,3,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,0,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,4,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,1,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,6,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,4,[[["self"],[R[29]]],[R[12]]]],[11,"hash",E,E,6,[[["self"],["__h"]]]],[11,R[30],E,E,4,[[["self"]],["str"]]]],"p":[[4,"MatchKind"],[4,R[32]],[3,R[2302]],[3,R[2303]],[3,"Error"],[8,"StateID"],[3,"Match"],[3,"FindIter"],[3,R[2304]],[3,R[2305]]]};
searchIndex[R[2306]]={"doc":"A single-threaded executor which executes tasks on the…","i":[[3,R[2319],R[2306],"Executes tasks on the current thread",N,N],[3,R[2320],E,R[5149],N,N],[3,"Turn",E,"Returned by the `turn` function.",N,N],[3,"Entered",E,"A `CurrentThread` instance bound to a supplied execution…",N,N],[3,"RunError",E,"Error returned by the `run` function.",N,N],[3,R[2321],E,"Error returned by the `run_timeout` function.",N,N],[3,"TurnError",E,"Error returned by the `turn` function.",N,N],[3,"BlockError",E,"Error returned by the `block_on` function.",N,N],[3,"Handle",E,R[5150],N,N],[5,R[4826],E,"Run the executor bootstrapping the execution with the…",N,[[["f"]],[R[12]]]],[5,"spawn",E,R[5151],N,[[["f"]]]],[11,"has_polled",E,"`true` if any futures were polled at all and `false`…",0,[[["self"]],["bool"]]],[11,"new",E,"Create a new instance of `CurrentThread`.",1,[[],["self"]]],[11,"new_with_park",E,"Create a new instance of `CurrentThread` backed by the…",1,[[["p"]],["self"]]],[11,"is_idle",E,"Returns `true` if the executor is currently idle.",1,[[["self"]],["bool"]]],[11,"spawn",E,R[2309],1,[[["self"],["f"]],["self"]]],[11,"block_on",E,R[2310],1,[[["self"],["f"]],[[R[2311]],[R[12],[R[2311]]]]]],[11,"run",E,R[2307],1,[[["self"]],[["runerror"],[R[12],["runerror"]]]]],[11,R[2312],E,R[2307],1,[[[R[1358]],["self"]],[[R[12],[R[2308]]],[R[2308]]]]],[11,"turn",E,R[2313],1,[[[R[1358]],["self"],[R[52],[R[1358]]]],[["turn"],[R[12],["turn",R[2314]]],[R[2314]]]]],[11,"enter",E,"Bind `CurrentThread` instance with an execution context.",1,[[["self"],["enter"]],["entered"]]],[11,"get_park",E,R[2315],1,[[["self"]],["p"]]],[11,R[2316],E,R[2317],1,[[["self"]],["p"]]],[11,"handle",E,"Get a new handle to spawn futures on the executor",1,[[["self"]],["handle"]]],[11,"spawn",E,R[2309],2,[[["self"],["f"]],["self"]]],[11,"block_on",E,R[2310],2,[[["self"],["f"]],[[R[2311]],[R[12],[R[2311]]]]]],[11,"run",E,R[2307],2,[[["self"]],[["runerror"],[R[12],["runerror"]]]]],[11,R[2312],E,R[2307],2,[[[R[1358]],["self"]],[[R[12],[R[2308]]],[R[2308]]]]],[11,"turn",E,R[2313],2,[[[R[1358]],["self"],[R[52],[R[1358]]]],[["turn"],[R[12],["turn",R[2314]]],[R[2314]]]]],[11,"get_park",E,R[2315],2,[[["self"]],["p"]]],[11,R[2316],E,R[2317],2,[[["self"]],["p"]]],[11,"spawn",E,"Spawn a future onto the `CurrentThread` instance…",3,[[["self"],["f"]],[[R[1279]],[R[12],[R[1279]]]]]],[11,"status",E,R[1280],3,[[["self"]],[[R[1279]],[R[12],[R[1279]]]]]],[11,"current",E,R[5152],4,[[],[R[2318]]]],[11,R[5153],E,R[5154],4,[[["self"],["future"],["box",["future"]]],[[R[1279]],[R[12],[R[1279]]]]]],[11,"is_timeout",E,"Returns `true` if the error was caused by the operation…",5,[[["self"]],["bool"]]],[11,R[46],E,"Returns the error yielded by the future being blocked on",6,[[],[R[52]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[16],E,E,4,[[["self"]],[T]]],[11,R[17],E,E,4,[[[T],["self"]]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[170],E,E,7,[[["self"]],["string"]]],[11,R[11],E,E,7,[[[U]],[R[12]]]],[11,R[39],E,E,7,[[["self"]],[T]]],[11,R[13],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[],[R[12]]]],[11,R[18],E,E,7,[[["self"]],[R[40]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[170],E,E,5,[[["self"]],["string"]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,R[18],E,E,5,[[["self"]],[R[40]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[170],E,E,8,[[["self"]],["string"]]],[11,R[11],E,E,8,[[[U]],[R[12]]]],[11,R[39],E,E,8,[[["self"]],[T]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[],[R[12]]]],[11,R[18],E,E,8,[[["self"]],[R[40]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[170],E,E,6,[[["self"]],["string"]]],[11,R[11],E,E,6,[[[U]],[R[12]]]],[11,R[39],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[],[R[12]]]],[11,R[18],E,E,6,[[["self"]],[R[40]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[17],E,E,3,[[[T],["self"]]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"clone",E,E,4,[[["self"]],[R[2318]]]],[11,"clone",E,E,3,[[["self"]],["handle"]]],[11,"from",E,E,5,[[[R[2322]]],["self"]]],[11,"from",E,E,6,[[[R[2322]]],["self"]]],[11,"drop",E,E,1,[[["self"]]]],[11,"fmt",E,E,4,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,0,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,7,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,5,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,8,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,6,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,1,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,2,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,3,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,7,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,5,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,8,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,6,[[["self"],[R[29]]],[R[12]]]],[11,R[30],E,E,7,[[["self"]],["str"]]],[11,R[30],E,E,5,[[["self"]],["str"]]],[11,R[30],E,E,8,[[["self"]],["str"]]],[11,R[30],E,E,6,[[["self"]],["str"]]],[11,"execute",E,E,4,[[["self"],["f"]],[[R[97]],[R[12],[R[97]]]]]],[11,"spawn",E,E,1,[[["future"],["self"],["box",["future"]]],[[R[1279]],[R[12],[R[1279]]]]]],[11,"spawn",E,E,4,[[["future"],["self"],["box",["future"]]],[[R[1279]],[R[12],[R[1279]]]]]],[11,"spawn",E,E,1,[[["self"],[T]],[[R[1279]],[R[12],[R[1279]]]]]],[11,"spawn",E,E,4,[[["self"],["f"]],[[R[1279]],[R[12],[R[1279]]]]]]],"p":[[3,"Turn"],[3,R[2319]],[3,"Entered"],[3,"Handle"],[3,R[2320]],[3,R[2321]],[3,"BlockError"],[3,"RunError"],[3,"TurnError"]]};
searchIndex[R[2323]]={"doc":R[5155],"i":[[3,R[2342],R[2323],R[2324],N,N],[3,"Delay",E,R[5156],N,N],[3,"Error",E,R[5157],N,N],[3,"Interval",E,R[5158],N,N],[3,"Timeout",E,R[2329],N,N],[5,R[1287],E,R[2332],N,[[["enter"],["f"],["handle"]],["r"]]],[5,"sleep",E,"Create a Future that completes in `duration` from now.",N,[[[R[1358]]],["delay"]]],[0,"clock",E,R[5159],N,N],[3,"Clock",R[2339],R[2331],N,N],[5,"now",E,R[5160],N,[[],["instant"]]],[5,R[1287],E,"Set the default clock for the duration of the closure.",N,[[["clock"],["enter"],["f"]],["r"]]],[11,"new",E,"Return a new `Clock` instance that uses the current…",0,[[],["clock"]]],[11,R[2333],E,"Return a new `Clock` instance that uses `now` as the…",0,[[["now"]],["clock"]]],[11,"system",E,"Return a new `Clock` instance that uses [`Instant::now`]…",0,[[],["clock"]]],[11,"now",E,"Returns an instant corresponding to \"now\" by using the…",0,[[["self"]],["instant"]]],[8,"Now",E,"Returns [`Instant`] values representing the current…",N,N],[10,"now",E,"Returns an instant corresponding to \"now\".",1,[[["self"]],["instant"]]],[0,R[5161],R[2323],R[2324],N,N],[3,R[2342],R[2337],R[2324],N,N],[3,"Expired",E,R[5162],N,N],[3,"Key",E,R[5163],N,N],[11,"new",E,R[5164],2,[[],[R[2325]]]],[11,R[5165],E,R[5166],2,[[[R[9]],["handle"]],[R[2325]]]],[11,R[73],E,R[5167],2,[[[R[9]]],[R[2325]]]],[11,"insert_at",E,R[5168],2,[[["self"],["instant"],[T]],["key"]]],[11,"insert",E,R[5169],2,[[[R[1358]],["self"],[T]],["key"]]],[11,"remove",E,R[5170],2,[[["self"],["key"]],["expired"]]],[11,"reset_at",E,R[2326],2,[[["self"],["instant"],["key"]]]],[11,"reset",E,R[2326],2,[[[R[1358]],["self"],["key"]]]],[11,"clear",E,R[5171],2,[[["self"]]]],[11,R[74],E,R[5172],2,[[["self"]],[R[9]]]],[11,"reserve",E,R[5173],2,[[["self"],[R[9]]]]],[11,R[69],E,R[5174],2,[[["self"]],["bool"]]],[11,R[110],E,R[5175],3,[[["self"]],[T]]],[11,R[111],E,R[2348],3,[[["self"]],[T]]],[11,R[46],E,R[5176],3,[[],[T]]],[0,R[5177],R[2323],R[2327],N,N],[3,"Throttle",R[2340],R[2327],N,N],[3,R[2343],E,"Either the error of the underlying stream, or an error…",N,N],[11,"new",E,R[2327],4,[[[R[1358]],[T]],["self"]]],[11,R[110],E,R[107],4,[[["self"]],[T]]],[11,R[111],E,R[108],4,[[["self"]],[T]]],[11,R[46],E,R[109],4,[[],[T]]],[11,"from_stream_err",E,"Creates a new `ThrottleError` from the given stream error.",5,[[[T]],["self"]]],[11,"from_timer_err",E,"Creates a new `ThrottleError` from the given tokio timer…",5,[[["error"]],["self"]]],[11,"get_stream_error",E,"Attempts to get the underlying stream error, if it is…",5,[[["self"]],[[R[52]],[T]]]],[11,"get_timer_error",E,"Attempts to get the underlying timer error, if it is…",5,[[["self"]],[["error"],[R[52],["error"]]]]],[11,"into_stream_error",E,"Attempts to extract the underlying stream error, if it is…",5,[[],[R[52]]]],[11,"into_timer_error",E,"Attempts to extract the underlying timer error, if it is…",5,[[],[[R[52],["error"]],["error"]]]],[11,"is_stream_error",E,R[2328],5,[[["self"]],["bool"]]],[11,"is_timer_error",E,R[2328],5,[[["self"]],["bool"]]],[0,"timeout",R[2323],R[5178],N,N],[3,"Timeout",R[2338],R[2329],N,N],[3,"Error",E,R[5179],N,N],[11,"new",E,R[5180],6,[[[R[1358]],[T]],["timeout"]]],[11,R[110],E,R[5181],6,[[["self"]],[T]]],[11,R[111],E,R[5182],6,[[["self"]],[T]]],[11,R[46],E,R[5183],6,[[],[T]]],[11,"new_at",E,R[5184],6,[[["instant"],[T]],["timeout"]]],[11,"inner",E,R[5185],7,[[[T]],["error"]]],[11,"is_inner",E,R[2330],7,[[["self"]],["bool"]]],[11,R[46],E,R[5186],7,[[],[R[52]]]],[11,"elapsed",E,R[5187],7,[[],["error"]]],[11,R[5188],E,R[2330],7,[[["self"]],["bool"]]],[11,"timer",E,R[5189],7,[[["error"]],["error"]]],[11,"is_timer",E,R[5190],7,[[["self"]],["bool"]]],[11,"into_timer",E,R[5191],7,[[],[[R[52],["error"]],["error"]]]],[0,"timer",R[2323],"Timer implementation.",N,N],[3,"Handle",R[2341],"Handle to timer instance.",N,N],[3,"SystemNow",E,R[2331],N,N],[3,"Timer",E,"Timer implementation that drives [`Delay`], [`Interval`],…",N,N],[3,"Turn",E,"Return value from the `turn` method on `Timer`.",N,N],[5,R[1287],E,R[2332],N,[[["enter"],["f"],["handle"]],["r"]]],[11,"current",E,"Returns a handle to the current timer.",8,[[],["handle"]]],[11,"delay",E,"Create a `Delay` driven by this handle's associated `Timer`.",8,[[["instant"],["self"]],["delay"]]],[11,"deadline",E,"Create a `Deadline` driven by this handle's associated…",8,[[["instant"],["self"],[T]],["deadline"]]],[11,"interval",E,R[2336],8,[[[R[1358]],["instant"],["self"]],["interval"]]],[11,"new",E,R[2334],9,[[[T]],["self"]]],[11,"get_park",E,R[2315],9,[[["self"]],[T]]],[11,R[2316],E,R[2317],9,[[["self"]],[T]]],[11,R[2333],E,R[2334],9,[[["n"],[T]],["self"]]],[11,"handle",E,"Returns a handle to the timer.",9,[[["self"]],["handle"]]],[11,"turn",E,"Performs one iteration of the timer loop.",9,[[[R[1358]],["self"],[R[52],[R[1358]]]],[["turn"],[R[12],["turn"]]]]],[11,"new",R[2323],R[5192],10,[[["instant"]],["delay"]]],[11,"deadline",E,R[5193],10,[[["self"]],["instant"]]],[11,R[5188],E,R[5194],10,[[["self"]],["bool"]]],[11,"reset",E,R[5195],10,[[["self"],["instant"]]]],[11,R[2344],E,R[5196],11,[[],["error"]]],[11,R[2346],E,R[2335],11,[[["self"]],["bool"]]],[11,R[2345],E,R[5197],11,[[],["error"]]],[11,R[2347],E,R[2335],11,[[["self"]],["bool"]]],[11,"new",E,R[2336],12,[[[R[1358]],["instant"]],["interval"]]],[11,R[5198],E,R[5199],12,[[[R[1358]]],["interval"]]],[11,"from",R[2337],E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",R[2323],E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[11],E,E,10,[[[U]],[R[12]]]],[11,R[39],E,E,10,[[["self"]],[T]]],[11,R[13],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[],[R[12]]]],[11,R[18],E,E,10,[[["self"]],[R[40]]]],[11,R[99],E,E,10,[[],["f"]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[170],E,E,11,[[["self"]],["string"]]],[11,R[11],E,E,11,[[[U]],[R[12]]]],[11,R[39],E,E,11,[[["self"]],[T]]],[11,R[13],E,E,11,[[["self"]],[T]]],[11,R[14],E,E,11,[[],[R[12]]]],[11,R[18],E,E,11,[[["self"]],[R[40]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[11],E,E,12,[[[U]],[R[12]]]],[11,R[39],E,E,12,[[["self"]],[T]]],[11,R[13],E,E,12,[[["self"]],[T]]],[11,R[14],E,E,12,[[],[R[12]]]],[11,R[18],E,E,12,[[["self"]],[R[40]]]],[11,"from",R[2338],E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[11],E,E,6,[[[U]],[R[12]]]],[11,R[39],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[],[R[12]]]],[11,R[18],E,E,6,[[["self"]],[R[40]]]],[11,R[99],E,E,6,[[],["f"]]],[11,"from",R[2339],E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[[T],["self"]]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",R[2337],E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[16],E,E,13,[[["self"]],[T]]],[11,R[17],E,E,13,[[[T],["self"]]]],[11,R[11],E,E,13,[[[U]],[R[12]]]],[11,R[39],E,E,13,[[["self"]],[T]]],[11,R[13],E,E,13,[[["self"]],[T]]],[11,R[14],E,E,13,[[],[R[12]]]],[11,R[18],E,E,13,[[["self"]],[R[40]]]],[11,"from",R[2340],E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[170],E,E,5,[[["self"]],["string"]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,R[18],E,E,5,[[["self"]],[R[40]]]],[11,"from",R[2338],E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[170],E,E,7,[[["self"]],["string"]]],[11,R[11],E,E,7,[[[U]],[R[12]]]],[11,R[39],E,E,7,[[["self"]],[T]]],[11,R[13],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[],[R[12]]]],[11,R[18],E,E,7,[[["self"]],[R[40]]]],[11,"from",R[2341],E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[16],E,E,8,[[["self"]],[T]]],[11,R[17],E,E,8,[[[T],["self"]]]],[11,R[11],E,E,8,[[[U]],[R[12]]]],[11,R[39],E,E,8,[[["self"]],[T]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[],[R[12]]]],[11,R[18],E,E,8,[[["self"]],[R[40]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[11],E,E,9,[[[U]],[R[12]]]],[11,R[39],E,E,9,[[["self"]],[T]]],[11,R[13],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[],[R[12]]]],[11,R[18],E,E,9,[[["self"]],[R[40]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[11],E,E,14,[[[U]],[R[12]]]],[11,R[39],E,E,14,[[["self"]],[T]]],[11,R[13],E,E,14,[[["self"]],[T]]],[11,R[14],E,E,14,[[],[R[12]]]],[11,R[18],E,E,14,[[["self"]],[R[40]]]],[11,"clone",R[2339],E,0,[[["self"]],["clock"]]],[11,"clone",R[2337],E,13,[[["self"]],["key"]]],[11,"clone",R[2341],E,8,[[["self"]],["handle"]]],[11,"drop",E,E,9,[[["self"]]]],[11,R[79],R[2339],E,0,[[],["clock"]]],[11,R[79],R[2341],E,8,[[],["handle"]]],[11,R[79],E,E,9,[[],["self"]]],[11,"fmt",R[2339],E,0,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[2337],E,2,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,3,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,13,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[2340],E,4,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,5,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[2338],E,6,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,7,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[2341],E,8,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,9,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,14,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[2323],E,10,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,11,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,12,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[2340],E,5,[[[R[29]],["self"]],[R[186]]]],[11,"fmt",R[2338],E,7,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[2323],E,11,[[["self"],[R[29]]],[R[12]]]],[11,R[30],R[2340],E,5,[[["self"]],["str"]]],[11,"cause",E,E,5,[[["self"]],[[R[31]],[R[52],[R[31]]]]]],[11,R[30],R[2338],E,7,[[["self"]],["str"]]],[11,R[30],R[2323],E,11,[[["self"]],["str"]]],[11,"poll",R[2338],E,6,[[["self"]],["poll"]]],[11,"poll",R[2323],E,10,[[["self"]],["poll"]]],[11,"poll",R[2337],E,2,[[["self"]],[[R[52]],["error"],["poll",[R[52],"error"]]]]],[11,"poll",R[2340],E,4,[[["self"]],[[R[52]],["poll",[R[52]]]]]],[11,"poll",R[2338],E,6,[[["self"]],[[R[52]],["poll",[R[52]]]]]],[11,"poll",R[2323],E,12,[[["self"]],[[R[52]],["poll",[R[52]]]]]],[11,"unpark",R[2341],E,9,[[["self"]]]],[11,"park",E,E,9,[[["self"]],[R[12]]]],[11,R[1282],E,E,9,[[[R[1358]],["self"]],[R[12]]]]],"p":[[3,"Clock"],[8,"Now"],[3,R[2342]],[3,"Expired"],[3,"Throttle"],[3,R[2343]],[3,"Timeout"],[3,"Error"],[3,"Handle"],[3,"Timer"],[3,"Delay"],[3,"Error"],[3,"Interval"],[3,"Key"],[3,"Turn"]]};
searchIndex[R[233]]={"doc":"Demangle Rust compiler symbol names.","i":[[3,"Demangle",R[233],"Representation of a demangled symbol name.",N,N],[3,R[236],E,"Error returned from the `try_demangle` function below when…",N,N],[5,R[234],E,"De-mangles a Rust symbol into a more readable version",N,[[["str"]],[R[234]]]],[5,"try_demangle",E,"The same as `demangle`, except return an `Err` if the…",N,[[["str"]],[[R[12],[R[234],R[235]]],[R[235]],[R[234]]]]],[11,"as_str",E,"Returns the underlying string that's being demangled.",0,[[["self"]],["str"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,"into",E,E,0,[[],[U]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,"into",E,E,1,[[],[U]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"fmt",E,E,1,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,0,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,0,[[[R[29]],["self"]],[R[12]]]],[11,"clone",E,E,1,[[["self"]],[R[235]]]]],"p":[[3,"Demangle"],[3,R[236]]]};
searchIndex[R[2349]]={"doc":"This crate provides wrappers around the underlying…","i":[[0,"array",R[2349],R[2805],N,N],[6,R[1419],R[2389],E,N,N],[6,R[1420],E,E,N,N],[6,R[1421],E,E,N,N],[6,R[1422],E,E,N,N],[3,R[1308],E,E,N,N],[12,"version",E,E,0,N],[12,"retain",E,E,0,N],[12,"release",E,E,0,N],[12,R[1289],E,E,0,N],[12,"equal",E,E,0,N],[3,R[1748],E,E,N,N],[6,R[2454],E,E,N,N],[7,R[1412],E,E,N,N],[5,R[1413],E,E,N,[[["i64"]]]],[5,R[1414],E,E,N,[[]]],[5,R[1415],E,E,N,[[],["i64"]]],[5,R[1416],E,E,N,[[["cfrange"]]]],[5,R[1417],E,E,N,[[["i64"]]]],[5,R[1418],E,E,N,[[],["u64"]]],[6,"CFIndex",E,E,N,N],[3,"CFArray",E,R[2806],N,N],[3,R[2448],E,E,N,N],[11,"from_copyable",E,R[2350],1,[[],["cfarray"]]],[11,R[2807],E,R[2350],1,[[],["cfarray"]]],[11,R[2360],E,E,1,[[["self"]],["cfarray"]]],[11,R[2357],E,R[2808],1,[[],["cfarray"]]],[11,"iter",E,R[2809],1,[[["self"]],[R[2810]]]],[11,"len",E,E,1,[[["self"]],["cfindex"]]],[11,R[2453],E,E,1,[[["cfindex"],["self"]],["itemref"]]],[11,"get",E,E,1,[[["cfindex"],["self"]],[[R[52],["itemref"]],["itemref"]]]],[11,R[3656],E,E,1,[[["cfrange"],["self"]],["vec"]]],[11,R[2811],E,E,1,[[["self"]],["vec"]]],[0,R[2455],R[2349],E,N,N],[3,R[1321],R[2391],E,N,N],[6,R[2450],E,E,N,N],[6,R[2451],E,E,N,N],[5,R[2456],E,E,N,[[]]],[5,R[2457],E,E,N,[[],["i64"]]],[5,R[2458],E,E,N,[[],["u64"]]],[5,R[2459],E,E,N,[[["i64"]]]],[5,R[2460],E,E,N,[[["i64"]]]],[5,R[2461],E,E,N,[[["cfrange"]]]],[5,R[2462],E,E,N,[[["cfrange"]]]],[5,R[2463],E,E,N,[[],["u64"]]],[3,R[2436],E,E,N,N],[3,R[2437],E,E,N,N],[11,"new",E,E,2,[[[R[2368]]],["self"]]],[11,"char_len",E,E,2,[[["self"]],["cfindex"]]],[11,"new",E,E,3,[[],["self"]]],[11,"char_len",E,E,3,[[["self"]],["cfindex"]]],[11,"replace_str",E,E,3,[[[R[2368]],["self"],["cfrange"]]]],[11,"set_attribute",E,E,3,[[[R[2422]],["self"],["tcftype"],["cfrange"]]]],[0,"base",R[2349],E,N,N],[6,"Boolean",R[2394],E,N,N],[6,"CFIndex",E,E,N,N],[6,R[1443],E,E,N,N],[6,R[1444],E,E,N,N],[6,R[2812],E,E,N,N],[6,R[2467],E,E,N,N],[6,"CFTypeID",E,E,N,N],[6,R[2468],E,E,N,N],[6,R[1445],E,E,N,N],[6,"OSStatus",E,E,N,N],[6,"SInt32",E,E,N,N],[4,R[1310],E,E,N,N],[13,"LessThan",E,E,4,N],[13,"EqualTo",E,E,4,N],[13,R[1424],E,E,4,N],[3,"CFRange",E,E,N,N],[12,"location",E,E,5,N],[12,"length",E,E,5,N],[6,R[1446],E,E,N,N],[6,R[1447],E,E,N,N],[6,R[1448],E,E,N,N],[6,R[1449],E,E,N,N],[6,R[1450],E,E,N,N],[6,R[1451],E,E,N,N],[6,R[1452],E,E,N,N],[3,R[1309],E,E,N,N],[12,"version",E,E,6,N],[12,"info",E,E,6,N],[12,"retain",E,E,6,N],[12,"release",E,E,6,N],[12,R[1289],E,E,6,N],[12,R[2813],E,E,6,N],[12,R[2465],E,E,6,N],[12,R[2466],E,E,6,N],[12,R[1423],E,E,6,N],[8,R[1453],E,R[1454],N,N],[10,R[1455],E,E,7,[[["self"]]]],[10,R[1456],E,E,7,[[],["self"]]],[7,R[1425],E,E,N,N],[7,R[1426],E,E,N,N],[7,R[1427],E,E,N,N],[7,R[1428],E,E,N,N],[7,R[1429],E,E,N,N],[7,R[1430],E,E,N,N],[5,R[1431],E,E,N,[[]]],[5,R[1432],E,E,N,[[["u32"],["i64"]]]],[5,R[1433],E,E,N,[[]]],[5,R[1434],E,E,N,[[["u32"],["i64"]],["i64"]]],[5,R[1435],E,E,N,[[["u32"],["i64"]]]],[5,R[1436],E,E,N,[[]]],[5,R[1437],E,E,N,[[]]],[5,R[1438],E,E,N,[[]]],[5,R[1439],E,E,N,[[],["u64"]]],[7,"kCFNull",E,E,N,N],[5,R[1440],E,E,N,[[]]],[5,"CFEqual",E,E,N,[[],["u8"]]],[5,R[1441],E,E,N,[[],["i64"]]],[5,R[1442],E,E,N,[[],["u64"]]],[5,"CFHash",E,E,N,[[],["u64"]]],[5,R[2814],E,E,N,[[]]],[5,"CFRetain",E,E,N,[[]]],[5,"CFShow",E,E,N,[[]]],[3,"CFType",E,R[2815],N,N],[3,R[2440],E,E,N,N],[3,"ItemRef",E,"A reference to an element inside a container",N,N],[3,"ItemMutRef",E,"A reference to a mutable element inside a container",N,N],[8,R[2438],E,E,N,N],[10,"to_CFIndex",E,R[2816],8,[[],["cfindex"]]],[8,"TCFType",E,R[2817],N,N],[16,"Ref",E,R[2818],9,N],[10,R[2371],E,R[2819],9,[[["self"]]]],[10,R[2376],E,R[2351],9,[[],["self"]]],[10,R[18],E,R[2820],9,[[],[R[2415]]]],[11,R[2879],E,R[2821],9,[[["self"]],["cftype"]]],[11,R[2374],E,R[2822],9,[[],["cftype"]]],[10,R[2375],E,R[2823],9,[[["self"]],[R[2412]]]],[10,R[2372],E,R[2351],9,[[],["self"]]],[11,R[2377],E,R[2378],9,[[["self"]],["cfindex"]]],[11,"type_of",E,R[2824],9,[[["self"]],[R[2415]]]],[11,"show",E,R[2379],9,[[["self"]]]],[11,R[2380],E,R[2381],9,[[["self"]],["bool"]]],[8,R[2439],E,"A trait describing how to convert from the stored *mut…",N,N],[10,R[2390],E,E,10,[[],[R[2392]]]],[8,"FromVoid",E,R[2352],N,N],[10,R[2393],E,E,11,[[],["itemref"]]],[8,"ToVoid",E,R[2352],N,N],[10,"to_void",E,E,12,[[["self"]]]],[11,"downcast",E,R[2825],13,[[["self"]],[[R[2353]],[R[52]]]]],[11,R[2382],E,R[2383],13,[[],[[R[2353]],[R[52]]]]],[11,"new",E,E,14,[[[R[1742]]],[R[2429]]]],[0,"boolean",R[2349],R[2354],N,N],[6,R[1553],R[2395],E,N,N],[5,R[1548],E,E,N,[[],["u64"]]],[7,R[1546],E,E,N,N],[7,R[1547],E,E,N,N],[3,R[2910],E,R[2354],N,N],[11,"true_value",E,E,15,[[],[R[2433]]]],[11,R[2826],E,E,15,[[],[R[2433]]]],[0,"data",R[2349],R[2827],N,N],[3,R[2828],R[2396],E,N,N],[6,R[2469],E,E,N,N],[5,R[1467],E,E,N,[[["i64"]]]],[5,R[1468],E,E,N,[[]]],[5,R[1469],E,E,N,[[],["i64"]]],[5,R[1470],E,E,N,[[],["u64"]]],[3,"CFData",E,R[2829],N,N],[11,R[2830],E,E,16,[[],["cfdata"]]],[11,"bytes",E,R[2831],16,[[["self"]]]],[11,"len",E,R[2832],16,[[["self"]],["cfindex"]]],[0,"date",R[2349],R[2833],N,N],[3,R[2834],R[2397],E,N,N],[6,R[2470],E,E,N,N],[6,R[1479],E,E,N,N],[6,R[1480],E,E,N,N],[7,R[1471],E,E,N,N],[7,R[1472],E,E,N,N],[5,R[1473],E,E,N,[[],["f64"]]],[5,R[1474],E,E,N,[[["f64"]]]],[5,R[1475],E,E,N,[[],["f64"]]],[5,R[1476],E,E,N,[[],["f64"]]],[5,R[1477],E,E,N,[[],[R[1741]]]],[5,R[1478],E,E,N,[[],["u64"]]],[3,"CFDate",E,"A date.",N,N],[11,"new",E,E,17,[[[R[2355]]],["cfdate"]]],[11,"now",E,E,17,[[],["cfdate"]]],[11,"abs_time",E,E,17,[[["self"]],[R[2355]]]],[0,R[2471],R[2349],R[2835],N,N],[6,R[1497],R[2398],E,N,N],[6,R[1498],E,E,N,N],[6,R[1499],E,E,N,N],[6,R[1500],E,E,N,N],[6,R[1501],E,E,N,N],[6,R[1502],E,E,N,N],[3,R[1311],E,E,N,N],[12,"version",E,E,18,N],[12,"retain",E,E,18,N],[12,"release",E,E,18,N],[12,R[1289],E,E,18,N],[12,"equal",E,E,18,N],[12,"hash",E,E,18,N],[3,R[1312],E,E,N,N],[12,"version",E,E,19,N],[12,"retain",E,E,19,N],[12,"release",E,E,19,N],[12,R[1289],E,E,19,N],[12,"equal",E,E,19,N],[3,R[1322],E,E,N,N],[6,R[1503],E,E,N,N],[6,R[1504],E,E,N,N],[7,R[1481],E,E,N,N],[7,R[1482],E,E,N,N],[5,R[1483],E,E,N,[[],["u8"]]],[5,R[1484],E,E,N,[[["i64"]]]],[5,R[1485],E,E,N,[[],["i64"]]],[5,R[1486],E,E,N,[[],["u64"]]],[5,R[1487],E,E,N,[[],["u8"]]],[5,R[1488],E,E,N,[[]]],[5,R[1489],E,E,N,[[]]],[5,R[1490],E,E,N,[[["i64"]]]],[5,R[1491],E,E,N,[[["i64"]]]],[5,R[1492],E,E,N,[[]]],[5,R[1493],E,E,N,[[]]],[5,R[1494],E,E,N,[[]]],[5,R[1495],E,E,N,[[]]],[5,R[1496],E,E,N,[[]]],[3,R[2441],E,E,N,N],[3,R[2442],E,E,N,N],[11,R[2358],E,E,20,[[],[R[2356]]]],[11,R[2360],E,E,20,[[["self"]],[R[2356]]]],[11,"to_mutable",E,"Returns a `CFMutableDictionary` pointing to the same…",20,[[["self"]],[R[2359]]]],[11,R[2357],E,R[2361],20,[[],[R[2356]]]],[11,"len",E,E,20,[[["self"]],[R[9]]]],[11,R[69],E,E,20,[[["self"]],["bool"]]],[11,R[2362],E,E,20,[[["k"],["self"]],["bool"]]],[11,"find",E,E,20,[[["tovoid"],["self"]],[["itemref"],[R[52],["itemref"]]]]],[11,"get",E,"Panics",20,[[["tovoid"],["self"]],["itemref"]]],[11,R[2363],E,E,20,[[["self"]]]],[11,"new",E,E,21,[[],["self"]]],[11,R[73],E,E,21,[[["isize"]],["self"]]],[11,R[2836],E,E,21,[[["isize"],["self"]],["self"]]],[11,R[2358],E,E,21,[[],[R[2359]]]],[11,R[2360],E,E,21,[[["self"]],[R[2359]]]],[11,R[2357],E,R[2361],21,[[],[R[2359]]]],[11,"to_immutable",E,"Returns a `CFDictionary` pointing to the same underlying…",21,[[["self"]],[R[2356]]]],[11,"len",E,E,21,[[["self"]],[R[9]]]],[11,R[69],E,E,21,[[["self"]],["bool"]]],[11,R[2362],E,E,21,[[["self"]],["bool"]]],[11,"find",E,E,21,[[["k"],["self"]],[["itemref"],[R[52],["itemref"]]]]],[11,"get",E,"Panics",21,[[["k"],["self"]],["itemref"]]],[11,R[2363],E,E,21,[[["self"]]]],[11,"add",E,R[2837],21,[[["k"],["self"],["v"]]]],[11,"set",E,R[2838],21,[[["k"],["self"],["v"]]]],[11,"replace",E,R[2839],21,[[["k"],["self"],["v"]]]],[11,"remove",E,R[2840],21,[[["k"],["self"]]]],[11,"remove_all",E,E,21,[[["self"]]]],[0,"error",R[2349],R[2841],N,N],[3,R[1749],R[2399],E,N,N],[6,R[2464],E,E,N,N],[5,R[1505],E,E,N,[[],["u64"]]],[7,R[1506],E,E,N,N],[7,R[1507],E,E,N,N],[7,R[1508],E,E,N,N],[7,R[1509],E,E,N,N],[5,R[1510],E,E,N,[[]]],[5,R[1511],E,E,N,[[],["i64"]]],[5,R[1512],E,E,N,[[]]],[3,"CFError",E,R[2842],N,N],[11,"domain",E,R[2843],22,[[["self"]],[R[2368]]]],[11,"code",E,R[2844],22,[[["self"]],["cfindex"]]],[11,R[30],E,R[2845],22,[[["self"]],[R[2368]]]],[0,R[1513],R[2349],E,N,N],[6,R[1523],R[2400],E,N,N],[3,R[1323],E,E,N,N],[6,R[1524],E,E,N,N],[17,R[1526],E,E,N,N],[17,R[1527],E,E,N,N],[6,R[1525],E,E,N,N],[3,R[1313],E,E,N,N],[12,"version",E,E,23,N],[12,"info",E,E,23,N],[12,"retain",E,E,23,N],[12,"release",E,E,23,N],[12,R[1289],E,E,23,N],[5,R[1514],E,E,N,[[],["u64"]]],[5,R[1515],E,E,N,[[["i32"],["u8"]]]],[5,R[1516],E,E,N,[[],["i32"]]],[5,R[1517],E,E,N,[[]]],[5,R[1518],E,E,N,[[["u32"]]]],[5,R[1519],E,E,N,[[["u32"]]]],[5,R[1520],E,E,N,[[]]],[5,R[1521],E,E,N,[[],["u8"]]],[5,R[1522],E,E,N,[[["i64"]]]],[3,R[2443],E,E,N,N],[11,"new",E,E,24,[[[R[1745]],[R[52],[R[1745]]],["bool"],[R[2846]],["rawfd"]],[[R[2364]],[R[52],[R[2364]]]]]],[11,"context",E,E,24,[[["self"]],[R[1745]]]],[11,R[2847],E,E,24,[[[R[2365]],["self"]]]],[11,R[2848],E,E,24,[[[R[2365]],["self"]]]],[11,"valid",E,E,24,[[["self"]],["bool"]]],[11,"invalidate",E,E,24,[[["self"]]]],[11,R[2849],E,E,24,[[["cfindex"],["self"]],[[R[52],[R[2366]]],[R[2366]]]]],[0,"number",R[2349],R[2850],N,N],[3,R[1325],R[2401],E,N,N],[6,R[1553],E,E,N,N],[6,R[1554],E,E,N,N],[7,R[1556],E,E,N,N],[7,R[1557],E,E,N,N],[7,R[1558],E,E,N,N],[7,R[1559],E,E,N,N],[4,R[1545],E,E,N,N],[6,R[1555],E,E,N,N],[7,R[1546],E,E,N,N],[7,R[1547],E,E,N,N],[5,R[1548],E,E,N,[[],["u64"]]],[5,R[1549],E,E,N,[[["u32"]]]],[5,R[1550],E,E,N,[[["u32"]],["bool"]]],[5,R[1551],E,E,N,[[],[R[1741]]]],[5,R[1552],E,E,N,[[],["u64"]]],[3,"CFNumber",E,R[2851],N,N],[11,"to_i32",E,E,25,[[["self"]],[["i32"],[R[52],["i32"]]]]],[11,"to_i64",E,E,25,[[["self"]],[[R[52],["i64"]],["i64"]]]],[11,"to_f32",E,E,25,[[["self"]],[[R[52],["f32"]],["f32"]]]],[11,"to_f64",E,E,25,[[["self"]],[[R[52],["f64"]],["f64"]]]],[0,"set",R[2349],R[2367],N,N],[6,R[1646],R[2402],E,N,N],[6,R[1647],E,E,N,N],[6,R[1648],E,E,N,N],[6,R[1649],E,E,N,N],[6,R[1650],E,E,N,N],[6,R[1651],E,E,N,N],[3,R[1319],E,E,N,N],[12,"version",E,E,26,N],[12,"retain",E,E,26,N],[12,"release",E,E,26,N],[12,R[1289],E,E,26,N],[12,"equal",E,E,26,N],[12,"hash",E,E,26,N],[3,"__CFSet",E,E,N,N],[6,"CFSetRef",E,E,N,N],[7,R[1641],E,E,N,N],[5,R[1642],E,E,N,[[["i64"]]]],[5,R[1643],E,E,N,[[]]],[5,R[1644],E,E,N,[[],["i64"]]],[5,R[1645],E,E,N,[[],["u64"]]],[3,"CFSet",E,R[2367],N,N],[11,R[2029],E,R[2852],27,[[],["cfset"]]],[0,"string",R[2349],R[2853],N,N],[6,"UniChar",R[2403],E,N,N],[6,R[1661],E,E,N,N],[6,R[1662],E,E,N,N],[7,R[1665],E,E,N,N],[6,R[1663],E,E,N,N],[3,R[1652],E,E,N,N],[6,R[1664],E,E,N,N],[5,R[1653],E,E,N,[[["u32"],["u8"],["i64"]]]],[5,R[1654],E,E,N,[[["u32"],["u8"],["i64"]]]],[5,R[1655],E,E,N,[[["u32"]]]],[5,R[1656],E,E,N,[[["u32"],["cfrange"],["u8"],["i64"]],["i64"]]],[5,R[1657],E,E,N,[[["u32"],["i64"]],["u8"]]],[5,R[1658],E,E,N,[[["u32"]]]],[5,R[1659],E,E,N,[[],["i64"]]],[5,R[1660],E,E,N,[[],["u64"]]],[3,"CFString",E,R[2854],N,N],[11,"new",E,R[2855],28,[[["str"]],[R[2368]]]],[11,R[2856],E,R[2857],28,[[["str"]],[R[2368]]]],[11,"char_len",E,R[2858],28,[[["self"]],["cfindex"]]],[0,"url",R[2349],R[2859],N,N],[3,"__CFURL",R[2404],E,N,N],[6,"CFURLRef",E,E,N,N],[6,R[1731],E,E,N,N],[6,R[1732],E,E,N,N],[17,R[1733],E,E,N,N],[17,R[1734],E,E,N,N],[17,R[1735],E,E,N,N],[7,R[1672],E,E,N,N],[7,R[1673],E,E,N,N],[7,R[1674],E,E,N,N],[7,R[1675],E,E,N,N],[7,R[1676],E,E,N,N],[7,R[1677],E,E,N,N],[7,R[1678],E,E,N,N],[7,R[1679],E,E,N,N],[7,R[1680],E,E,N,N],[7,R[1681],E,E,N,N],[7,R[1682],E,E,N,N],[7,R[1683],E,E,N,N],[7,R[1684],E,E,N,N],[7,R[1685],E,E,N,N],[7,R[1686],E,E,N,N],[7,R[1687],E,E,N,N],[7,R[1688],E,E,N,N],[7,R[1689],E,E,N,N],[7,R[1690],E,E,N,N],[7,R[1691],E,E,N,N],[7,R[1692],E,E,N,N],[7,R[1693],E,E,N,N],[7,R[1694],E,E,N,N],[7,R[1695],E,E,N,N],[7,R[1696],E,E,N,N],[7,R[1697],E,E,N,N],[7,R[1698],E,E,N,N],[7,R[1699],E,E,N,N],[7,R[1700],E,E,N,N],[7,R[1701],E,E,N,N],[5,R[1702],E,E,N,[[]]],[5,R[1703],E,E,N,[[]]],[5,R[1704],E,E,N,[[["u8"],["i64"]]]],[5,R[1705],E,E,N,[[["u32"],["i64"]]]],[5,R[1706],E,E,N,[[["u8"],["i64"]]]],[5,R[1707],E,E,N,[[["u8"],["i64"]]]],[5,R[1708],E,E,N,[[],["u8"]]],[5,R[1709],E,E,N,[[["i64"]]]],[5,R[1710],E,E,N,[[]]],[5,R[1711],E,E,N,[[]]],[5,R[1712],E,E,N,[[]]],[5,R[1713],E,E,N,[[]]],[5,R[1714],E,E,N,[[]]],[5,R[1715],E,E,N,[[]]],[5,R[1716],E,E,N,[[]]],[5,R[1717],E,E,N,[[]]],[5,R[1718],E,E,N,[[]]],[5,R[1719],E,E,N,[[]]],[5,R[1720],E,E,N,[[]]],[5,R[1721],E,E,N,[[]]],[5,R[1722],E,E,N,[[]]],[5,R[1723],E,E,N,[[],["i32"]]],[5,R[1724],E,E,N,[[],["u8"]]],[5,R[1725],E,E,N,[[["u8"],["i64"]],["u8"]]],[5,R[1726],E,E,N,[[]]],[5,R[1727],E,E,N,[[["i64"]],["i64"]]],[5,R[1728],E,E,N,[[],["u64"]]],[5,R[1729],E,E,N,[[]]],[5,R[1730],E,E,N,[[],["u8"]]],[3,"CFURL",E,E,N,N],[11,"from_path",E,E,29,[[["asref",["path"]],["path"],["bool"]],[[R[52],["cfurl"]],["cfurl"]]]],[11,R[2860],E,E,29,[[["bool"],[R[2369]],[R[2368]]],["cfurl"]]],[11,"to_path",E,E,29,[[["self"]],[[R[52],["pathbuf"]],["pathbuf"]]]],[11,"get_string",E,E,29,[[["self"]],[R[2368]]]],[11,R[2861],E,E,29,[[["self"],[R[2369]]],[R[2368]]]],[11,"absolute",E,E,29,[[["self"]],["cfurl"]]],[0,"bundle",R[2349],R[2862],N,N],[3,R[1457],R[2405],E,N,N],[6,R[1466],E,E,N,N],[5,R[1458],E,E,N,[[]]],[5,R[1459],E,E,N,[[]]],[5,R[1460],E,E,N,[[]]],[5,R[1461],E,E,N,[[]]],[5,R[1462],E,E,N,[[]]],[5,R[1463],E,E,N,[[],["u64"]]],[5,R[1464],E,E,N,[[]]],[5,R[1465],E,E,N,[[]]],[3,"CFBundle",E,R[2863],N,N],[11,"new",E,E,30,[[["cfurl"]],[[R[52],[R[2434]]],[R[2434]]]]],[11,"bundle_with_identifier",E,E,30,[[[R[2368]]],[[R[52],[R[2434]]],[R[2434]]]]],[11,"function_pointer_for_name",E,E,30,[[["self"],[R[2368]]]]],[11,R[2864],E,E,30,[[],[R[2434]]]],[11,R[2865],E,E,30,[[["self"]],[[R[2356],[R[2368],"cftype"]],["cftype"],[R[2368]]]]],[11,R[2866],E,E,30,[[["self"]],[[R[52],["cfurl"]],["cfurl"]]]],[11,R[2867],E,E,30,[[["self"]],[[R[52],["cfurl"]],["cfurl"]]]],[0,R[1560],R[2349],R[2868],N,N],[6,R[1564],R[2406],E,N,N],[6,R[1565],E,E,N,N],[17,R[1567],E,E,N,N],[17,R[1568],E,E,N,N],[17,R[1569],E,E,N,N],[6,R[1566],E,E,N,N],[17,R[1570],E,E,N,N],[17,R[1571],E,E,N,N],[17,R[1572],E,E,N,N],[5,R[1561],E,E,N,[[["u32"]]]],[5,R[1563],E,E,N,[[["u32"],["i64"]]]],[3,R[2445],E,R[2869],N,N],[5,R[2870],E,E,N,[[[R[2871]],["cfdata"]],[[R[12],["cferror"]],["cferror"]]]],[5,R[2872],E,E,N,[[[R[2873]]],[[R[12],["cfdata","cferror"]],["cferror"],["cfdata"]]]],[8,R[2444],E,R[2874],N,N],[11,R[2875],E,R[2876],31,[[["self"]],[R[2370]]]],[11,R[2877],E,R[2878],31,[[],[R[2370]]]],[11,R[2371],E,E,32,[[["self"]],[R[2373]]]],[11,R[2372],E,E,32,[[[R[2373]]],[R[2370]]]],[11,R[2879],E,E,32,[[["self"]],["cftype"]]],[11,R[2374],E,E,32,[[],["cftype"]]],[11,R[2375],E,E,32,[[["self"]],[R[2412]]]],[11,R[2376],E,E,32,[[[R[2373]]],[R[2370]]]],[11,R[2377],E,R[2378],32,[[["self"]],["cfindex"]]],[11,"type_of",E,R[2880],32,[[["self"]],[R[2415]]]],[11,"show",E,R[2379],32,[[["self"]]]],[11,R[2380],E,R[2381],32,[[["self"]],["bool"]]],[11,"downcast",E,R[2881],32,[[["self"]],[[R[52]],[R[2384]]]]],[11,R[2382],E,R[2383],32,[[],[[R[52]],[R[2384]]]]],[0,"runloop",R[2349],E,N,N],[3,R[1326],R[2407],E,N,N],[6,R[1623],E,E,N,N],[3,R[1327],E,E,N,N],[6,R[1624],E,E,N,N],[3,R[1328],E,E,N,N],[6,R[1625],E,E,N,N],[17,R[1630],E,E,N,N],[17,R[1631],E,E,N,N],[17,R[1632],E,E,N,N],[17,R[1633],E,E,N,N],[6,R[1626],E,E,N,N],[17,R[1634],E,E,N,N],[17,R[1635],E,E,N,N],[17,R[1636],E,E,N,N],[17,R[1637],E,E,N,N],[17,R[1638],E,E,N,N],[17,R[1639],E,E,N,N],[17,R[1640],E,E,N,N],[3,R[1315],E,E,N,N],[12,"version",E,E,33,N],[12,"info",E,E,33,N],[12,"retain",E,E,33,N],[12,"release",E,E,33,N],[12,R[1289],E,E,33,N],[12,"equal",E,E,33,N],[12,"hash",E,E,33,N],[12,"schedule",E,E,33,N],[12,"cancel",E,E,33,N],[12,"perform",E,E,33,N],[3,R[1316],E,E,N,N],[12,"version",E,E,34,N],[12,"info",E,E,34,N],[12,"retain",E,E,34,N],[12,"release",E,E,34,N],[12,R[1289],E,E,34,N],[12,"equal",E,E,34,N],[12,"hash",E,E,34,N],[12,"getPort",E,E,34,N],[12,"perform",E,E,34,N],[3,R[1317],E,E,N,N],[12,"version",E,E,35,N],[12,"info",E,E,35,N],[12,"retain",E,E,35,N],[12,"release",E,E,35,N],[12,R[1289],E,E,35,N],[6,R[1627],E,E,N,N],[3,R[1318],E,E,N,N],[12,"version",E,E,36,N],[12,"info",E,E,36,N],[12,"retain",E,E,36,N],[12,"release",E,E,36,N],[12,R[1289],E,E,36,N],[6,R[1628],E,E,N,N],[3,R[1329],E,E,N,N],[6,R[1629],E,E,N,N],[7,R[1573],E,E,N,N],[7,R[1574],E,E,N,N],[5,R[1575],E,E,N,[[],["u64"]]],[5,R[1576],E,E,N,[[]]],[5,R[1577],E,E,N,[[]]],[5,R[1578],E,E,N,[[]]],[5,R[1579],E,E,N,[[]]],[5,R[1580],E,E,N,[[]]],[5,R[1581],E,E,N,[[],["f64"]]],[5,R[1582],E,E,N,[[]]],[5,R[1583],E,E,N,[[["f64"],["u8"]],["i32"]]],[5,R[1584],E,E,N,[[],["u8"]]],[5,R[1585],E,E,N,[[]]],[5,R[1586],E,E,N,[[]]],[5,R[1587],E,E,N,[[],["u8"]]],[5,R[1588],E,E,N,[[]]],[5,R[1589],E,E,N,[[]]],[5,R[1590],E,E,N,[[],["u8"]]],[5,R[1591],E,E,N,[[]]],[5,R[1592],E,E,N,[[]]],[5,R[1593],E,E,N,[[],["u8"]]],[5,R[1594],E,E,N,[[]]],[5,R[1595],E,E,N,[[]]],[5,R[1596],E,E,N,[[],["u64"]]],[5,R[1597],E,E,N,[[["i64"]]]],[5,R[1598],E,E,N,[[],["i64"]]],[5,R[1599],E,E,N,[[]]],[5,R[1600],E,E,N,[[],["u8"]]],[5,R[1601],E,E,N,[[]]],[5,R[1602],E,E,N,[[]]],[5,R[1603],E,E,N,[[],["u64"]]],[5,R[1604],E,E,N,[[["u32"],["u8"],["i64"]]]],[5,R[1605],E,E,N,[[],["u32"]]],[5,R[1606],E,E,N,[[],["u8"]]],[5,R[1607],E,E,N,[[],["i64"]]],[5,R[1608],E,E,N,[[]]],[5,R[1609],E,E,N,[[],["u8"]]],[5,R[1610],E,E,N,[[]]],[5,R[1611],E,E,N,[[],["u64"]]],[5,R[1612],E,E,N,[[["u32"],["f64"],["i64"]]]],[5,R[1613],E,E,N,[[],["f64"]]],[5,R[1614],E,E,N,[[["f64"]]]],[5,R[1615],E,E,N,[[],["f64"]]],[5,R[1616],E,E,N,[[],["u8"]]],[5,R[1617],E,E,N,[[],["i64"]]],[5,R[1618],E,E,N,[[]]],[5,R[1619],E,E,N,[[],["u8"]]],[5,R[1620],E,E,N,[[]]],[5,R[1621],E,E,N,[[],["f64"]]],[5,R[1622],E,E,N,[[["f64"]]]],[3,R[2911],E,E,N,N],[3,R[2446],E,E,N,N],[3,R[2447],E,E,N,N],[3,R[2449],E,E,N,N],[6,R[2882],E,E,N,N],[11,R[2883],E,E,37,[[],[R[2435]]]],[11,"get_main",E,E,37,[[],[R[2435]]]],[11,R[2884],E,E,37,[[]]],[11,"stop",E,E,37,[[["self"]]]],[11,R[2885],E,E,37,[[["self"]],[["string"],[R[52],["string"]]]]],[11,R[2886],E,E,37,[[[R[2385]],[R[2386]],["self"]],["bool"]]],[11,"add_timer",E,E,37,[[[R[2385]],[R[2386]],["self"]]]],[11,R[2887],E,E,37,[[[R[2385]],[R[2386]],["self"]]]],[11,R[2888],E,E,37,[[[R[2385]],[R[2366]],["self"]],["bool"]]],[11,"add_source",E,E,37,[[[R[2385]],[R[2366]],["self"]]]],[11,R[2889],E,E,37,[[[R[2385]],[R[2366]],["self"]]]],[11,R[2890],E,E,37,[[[R[2385]],["self"],[R[2387]]],["bool"]]],[11,R[2891],E,E,37,[[[R[2385]],["self"],[R[2387]]]]],[11,R[2892],E,E,37,[[[R[2385]],["self"],[R[2387]]]]],[11,"new",E,E,38,[[[R[2388]],["cfindex"],[R[2355]],[R[2365]],[R[2893]]],[R[2386]]]],[11,R[2894],E,E,39,[[[R[2364]],["cfindex"]],[[R[52],[R[2366]]],[R[2366]]]]],[0,R[788],R[2349],R[2895],N,N],[3,R[1330],R[2408],E,N,N],[6,R[1671],E,E,N,N],[5,R[1666],E,E,N,[[]]],[5,R[1667],E,E,N,[[]]],[5,R[1668],E,E,N,[[["f64"]]]],[5,R[1669],E,E,N,[[["f64"]],["f64"]]],[5,R[1670],E,E,N,[[],["u64"]]],[3,R[2896],E,R[2897],N,N],[11,"new",E,E,40,[[[R[2388]]],[R[2430]]]],[11,"system",E,E,40,[[],[R[2430]]]],[11,R[2898],E,E,40,[[["cfdate"],["self"]],[R[2388]]]],[0,"uuid",R[2349],R[2899],N,N],[3,R[2900],R[2409],E,N,N],[6,R[2472],E,E,N,N],[3,R[1320],E,E,N,N],[12,"byte0",E,E,41,N],[12,"byte1",E,E,41,N],[12,"byte2",E,E,41,N],[12,"byte3",E,E,41,N],[12,"byte4",E,E,41,N],[12,"byte5",E,E,41,N],[12,"byte6",E,E,41,N],[12,"byte7",E,E,41,N],[12,"byte8",E,E,41,N],[12,"byte9",E,E,41,N],[12,"byte10",E,E,41,N],[12,"byte11",E,E,41,N],[12,"byte12",E,E,41,N],[12,"byte13",E,E,41,N],[12,"byte14",E,E,41,N],[12,"byte15",E,E,41,N],[5,R[1736],E,E,N,[[]]],[5,R[1737],E,E,N,[[[R[1307]]]]],[5,R[1738],E,E,N,[[],[R[1307]]]],[5,R[1739],E,E,N,[[],["u64"]]],[3,"CFUUID",E,"A UUID.",N,N],[11,"new",E,E,42,[[],["cfuuid"]]],[8,"ConcreteCFType",R[2349],E,N,N],[14,R[2901],E,"Declare a Rust type that wraps an underlying…",N,N],[14,R[2902],E,"Provide an implementation of the [`TCFType`] trait for the…",N,N],[14,R[2903],E,"Implement `std::fmt::Debug` for the given type.",N,N],[14,R[2904],E,E,N,N],[11,"from",R[2389],E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[[T],["self"]]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",E,E,43,[[[T]],[T]]],[11,"into",E,E,43,[[],[U]]],[11,R[11],E,E,43,[[[U]],[R[12]]]],[11,R[39],E,E,43,[[["self"]],[T]]],[11,R[13],E,E,43,[[["self"]],[T]]],[11,R[14],E,E,43,[[],[R[12]]]],[11,R[18],E,E,43,[[["self"]],[R[40]]]],[11,R[2390],E,E,1,[[],[R[2392]]]],[11,R[2393],E,E,1,[[],["itemref"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,[[[T],["self"]]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[48],E,E,44,[[],["i"]]],[11,"into",E,E,44,[[],[U]]],[11,R[11],E,E,44,[[[U]],[R[12]]]],[11,R[39],E,E,44,[[["self"]],[T]]],[11,R[13],E,E,44,[[["self"]],[T]]],[11,R[14],E,E,44,[[],[R[12]]]],[11,R[18],E,E,44,[[["self"]],[R[40]]]],[11,"from",R[2391],E,45,[[[T]],[T]]],[11,"into",E,E,45,[[],[U]]],[11,R[11],E,E,45,[[[U]],[R[12]]]],[11,R[39],E,E,45,[[["self"]],[T]]],[11,R[13],E,E,45,[[["self"]],[T]]],[11,R[14],E,E,45,[[],[R[12]]]],[11,R[18],E,E,45,[[["self"]],[R[40]]]],[11,R[2390],E,E,2,[[],[R[2392]]]],[11,R[2393],E,E,2,[[],["itemref"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[17],E,E,2,[[[T],["self"]]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,R[2390],E,E,3,[[],[R[2392]]]],[11,R[2393],E,E,3,[[],["itemref"]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[17],E,E,3,[[[T],["self"]]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"from",R[2394],E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[16],E,E,4,[[["self"]],[T]]],[11,R[17],E,E,4,[[[T],["self"]]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[16],E,E,5,[[["self"]],[T]]],[11,R[17],E,E,5,[[[T],["self"]]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,R[18],E,E,5,[[["self"]],[R[40]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[16],E,E,6,[[["self"]],[T]]],[11,R[17],E,E,6,[[[T],["self"]]]],[11,R[11],E,E,6,[[[U]],[R[12]]]],[11,R[39],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[],[R[12]]]],[11,R[18],E,E,6,[[["self"]],[R[40]]]],[11,R[2390],E,E,13,[[],[R[2392]]]],[11,R[2393],E,E,13,[[],["itemref"]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[16],E,E,13,[[["self"]],[T]]],[11,R[17],E,E,13,[[[T],["self"]]]],[11,R[11],E,E,13,[[[U]],[R[12]]]],[11,R[39],E,E,13,[[["self"]],[T]]],[11,R[13],E,E,13,[[["self"]],[T]]],[11,R[14],E,E,13,[[],[R[12]]]],[11,R[18],E,E,13,[[["self"]],[R[40]]]],[11,R[2390],E,E,14,[[],[R[2392]]]],[11,R[2393],E,E,14,[[],["itemref"]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[16],E,E,14,[[["self"]],[T]]],[11,R[17],E,E,14,[[[T],["self"]]]],[11,R[11],E,E,14,[[[U]],[R[12]]]],[11,R[39],E,E,14,[[["self"]],[T]]],[11,R[13],E,E,14,[[["self"]],[T]]],[11,R[14],E,E,14,[[],[R[12]]]],[11,R[18],E,E,14,[[["self"]],[R[40]]]],[11,"from",E,E,46,[[[T]],[T]]],[11,"into",E,E,46,[[],[U]]],[11,R[11],E,E,46,[[[U]],[R[12]]]],[11,R[39],E,E,46,[[["self"]],[T]]],[11,R[13],E,E,46,[[["self"]],[T]]],[11,R[14],E,E,46,[[],[R[12]]]],[11,R[18],E,E,46,[[["self"]],[R[40]]]],[11,"from",E,E,47,[[[T]],[T]]],[11,"into",E,E,47,[[],[U]]],[11,R[11],E,E,47,[[[U]],[R[12]]]],[11,R[39],E,E,47,[[["self"]],[T]]],[11,R[13],E,E,47,[[["self"]],[T]]],[11,R[14],E,E,47,[[],[R[12]]]],[11,R[18],E,E,47,[[["self"]],[R[40]]]],[11,R[2390],R[2395],E,15,[[],[R[2392]]]],[11,R[2393],E,E,15,[[],["itemref"]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[16],E,E,15,[[["self"]],[T]]],[11,R[17],E,E,15,[[[T],["self"]]]],[11,R[11],E,E,15,[[[U]],[R[12]]]],[11,R[39],E,E,15,[[["self"]],[T]]],[11,R[13],E,E,15,[[["self"]],[T]]],[11,R[14],E,E,15,[[],[R[12]]]],[11,R[18],E,E,15,[[["self"]],[R[40]]]],[11,"from",R[2396],E,48,[[[T]],[T]]],[11,"into",E,E,48,[[],[U]]],[11,R[11],E,E,48,[[[U]],[R[12]]]],[11,R[39],E,E,48,[[["self"]],[T]]],[11,R[13],E,E,48,[[["self"]],[T]]],[11,R[14],E,E,48,[[],[R[12]]]],[11,R[18],E,E,48,[[["self"]],[R[40]]]],[11,R[2390],E,E,16,[[],[R[2392]]]],[11,R[2393],E,E,16,[[],["itemref"]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[16],E,E,16,[[["self"]],[T]]],[11,R[17],E,E,16,[[[T],["self"]]]],[11,R[11],E,E,16,[[[U]],[R[12]]]],[11,R[39],E,E,16,[[["self"]],[T]]],[11,R[13],E,E,16,[[["self"]],[T]]],[11,R[14],E,E,16,[[],[R[12]]]],[11,R[18],E,E,16,[[["self"]],[R[40]]]],[11,"from",R[2397],E,49,[[[T]],[T]]],[11,"into",E,E,49,[[],[U]]],[11,R[11],E,E,49,[[[U]],[R[12]]]],[11,R[39],E,E,49,[[["self"]],[T]]],[11,R[13],E,E,49,[[["self"]],[T]]],[11,R[14],E,E,49,[[],[R[12]]]],[11,R[18],E,E,49,[[["self"]],[R[40]]]],[11,R[2390],E,E,17,[[],[R[2392]]]],[11,R[2393],E,E,17,[[],["itemref"]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[16],E,E,17,[[["self"]],[T]]],[11,R[17],E,E,17,[[[T],["self"]]]],[11,R[11],E,E,17,[[[U]],[R[12]]]],[11,R[39],E,E,17,[[["self"]],[T]]],[11,R[13],E,E,17,[[["self"]],[T]]],[11,R[14],E,E,17,[[],[R[12]]]],[11,R[18],E,E,17,[[["self"]],[R[40]]]],[11,"from",R[2398],E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[16],E,E,18,[[["self"]],[T]]],[11,R[17],E,E,18,[[[T],["self"]]]],[11,R[11],E,E,18,[[[U]],[R[12]]]],[11,R[39],E,E,18,[[["self"]],[T]]],[11,R[13],E,E,18,[[["self"]],[T]]],[11,R[14],E,E,18,[[],[R[12]]]],[11,R[18],E,E,18,[[["self"]],[R[40]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[16],E,E,19,[[["self"]],[T]]],[11,R[17],E,E,19,[[[T],["self"]]]],[11,R[11],E,E,19,[[[U]],[R[12]]]],[11,R[39],E,E,19,[[["self"]],[T]]],[11,R[13],E,E,19,[[["self"]],[T]]],[11,R[14],E,E,19,[[],[R[12]]]],[11,R[18],E,E,19,[[["self"]],[R[40]]]],[11,"from",E,E,50,[[[T]],[T]]],[11,"into",E,E,50,[[],[U]]],[11,R[11],E,E,50,[[[U]],[R[12]]]],[11,R[39],E,E,50,[[["self"]],[T]]],[11,R[13],E,E,50,[[["self"]],[T]]],[11,R[14],E,E,50,[[],[R[12]]]],[11,R[18],E,E,50,[[["self"]],[R[40]]]],[11,R[2390],E,E,20,[[],[R[2392]]]],[11,R[2393],E,E,20,[[],["itemref"]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[16],E,E,20,[[["self"]],[T]]],[11,R[17],E,E,20,[[[T],["self"]]]],[11,R[11],E,E,20,[[[U]],[R[12]]]],[11,R[39],E,E,20,[[["self"]],[T]]],[11,R[13],E,E,20,[[["self"]],[T]]],[11,R[14],E,E,20,[[],[R[12]]]],[11,R[18],E,E,20,[[["self"]],[R[40]]]],[11,R[2390],E,E,21,[[],[R[2392]]]],[11,R[2393],E,E,21,[[],["itemref"]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[16],E,E,21,[[["self"]],[T]]],[11,R[17],E,E,21,[[[T],["self"]]]],[11,R[11],E,E,21,[[[U]],[R[12]]]],[11,R[39],E,E,21,[[["self"]],[T]]],[11,R[13],E,E,21,[[["self"]],[T]]],[11,R[14],E,E,21,[[],[R[12]]]],[11,R[18],E,E,21,[[["self"]],[R[40]]]],[11,"from",R[2399],E,51,[[[T]],[T]]],[11,"into",E,E,51,[[],[U]]],[11,R[11],E,E,51,[[[U]],[R[12]]]],[11,R[39],E,E,51,[[["self"]],[T]]],[11,R[13],E,E,51,[[["self"]],[T]]],[11,R[14],E,E,51,[[],[R[12]]]],[11,R[18],E,E,51,[[["self"]],[R[40]]]],[11,R[2390],E,E,22,[[],[R[2392]]]],[11,R[2393],E,E,22,[[],["itemref"]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[16],E,E,22,[[["self"]],[T]]],[11,R[17],E,E,22,[[[T],["self"]]]],[11,R[170],E,E,22,[[["self"]],["string"]]],[11,R[11],E,E,22,[[[U]],[R[12]]]],[11,R[39],E,E,22,[[["self"]],[T]]],[11,R[13],E,E,22,[[["self"]],[T]]],[11,R[14],E,E,22,[[],[R[12]]]],[11,R[18],E,E,22,[[["self"]],[R[40]]]],[11,"from",R[2400],E,52,[[[T]],[T]]],[11,"into",E,E,52,[[],[U]]],[11,R[11],E,E,52,[[[U]],[R[12]]]],[11,R[39],E,E,52,[[["self"]],[T]]],[11,R[13],E,E,52,[[["self"]],[T]]],[11,R[14],E,E,52,[[],[R[12]]]],[11,R[18],E,E,52,[[["self"]],[R[40]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[16],E,E,23,[[["self"]],[T]]],[11,R[17],E,E,23,[[[T],["self"]]]],[11,R[11],E,E,23,[[[U]],[R[12]]]],[11,R[39],E,E,23,[[["self"]],[T]]],[11,R[13],E,E,23,[[["self"]],[T]]],[11,R[14],E,E,23,[[],[R[12]]]],[11,R[18],E,E,23,[[["self"]],[R[40]]]],[11,R[2390],E,E,24,[[],[R[2392]]]],[11,R[2393],E,E,24,[[],["itemref"]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[16],E,E,24,[[["self"]],[T]]],[11,R[17],E,E,24,[[[T],["self"]]]],[11,R[11],E,E,24,[[[U]],[R[12]]]],[11,R[39],E,E,24,[[["self"]],[T]]],[11,R[13],E,E,24,[[["self"]],[T]]],[11,R[14],E,E,24,[[],[R[12]]]],[11,R[18],E,E,24,[[["self"]],[R[40]]]],[11,"from",R[2401],E,53,[[[T]],[T]]],[11,"into",E,E,53,[[],[U]]],[11,R[11],E,E,53,[[[U]],[R[12]]]],[11,R[39],E,E,53,[[["self"]],[T]]],[11,R[13],E,E,53,[[["self"]],[T]]],[11,R[14],E,E,53,[[],[R[12]]]],[11,R[18],E,E,53,[[["self"]],[R[40]]]],[11,"from",E,E,54,[[[T]],[T]]],[11,"into",E,E,54,[[],[U]]],[11,R[11],E,E,54,[[[U]],[R[12]]]],[11,R[39],E,E,54,[[["self"]],[T]]],[11,R[13],E,E,54,[[["self"]],[T]]],[11,R[14],E,E,54,[[],[R[12]]]],[11,R[18],E,E,54,[[["self"]],[R[40]]]],[11,R[2390],E,E,25,[[],[R[2392]]]],[11,R[2393],E,E,25,[[],["itemref"]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[16],E,E,25,[[["self"]],[T]]],[11,R[17],E,E,25,[[[T],["self"]]]],[11,R[11],E,E,25,[[[U]],[R[12]]]],[11,R[39],E,E,25,[[["self"]],[T]]],[11,R[13],E,E,25,[[["self"]],[T]]],[11,R[14],E,E,25,[[],[R[12]]]],[11,R[18],E,E,25,[[["self"]],[R[40]]]],[11,"from",R[2402],E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[16],E,E,26,[[["self"]],[T]]],[11,R[17],E,E,26,[[[T],["self"]]]],[11,R[11],E,E,26,[[[U]],[R[12]]]],[11,R[39],E,E,26,[[["self"]],[T]]],[11,R[13],E,E,26,[[["self"]],[T]]],[11,R[14],E,E,26,[[],[R[12]]]],[11,R[18],E,E,26,[[["self"]],[R[40]]]],[11,"from",E,E,55,[[[T]],[T]]],[11,"into",E,E,55,[[],[U]]],[11,R[11],E,E,55,[[[U]],[R[12]]]],[11,R[39],E,E,55,[[["self"]],[T]]],[11,R[13],E,E,55,[[["self"]],[T]]],[11,R[14],E,E,55,[[],[R[12]]]],[11,R[18],E,E,55,[[["self"]],[R[40]]]],[11,R[2390],E,E,27,[[],[R[2392]]]],[11,R[2393],E,E,27,[[],["itemref"]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[16],E,E,27,[[["self"]],[T]]],[11,R[17],E,E,27,[[[T],["self"]]]],[11,R[11],E,E,27,[[[U]],[R[12]]]],[11,R[39],E,E,27,[[["self"]],[T]]],[11,R[13],E,E,27,[[["self"]],[T]]],[11,R[14],E,E,27,[[],[R[12]]]],[11,R[18],E,E,27,[[["self"]],[R[40]]]],[11,"from",R[2403],E,56,[[[T]],[T]]],[11,"into",E,E,56,[[],[U]]],[11,R[11],E,E,56,[[[U]],[R[12]]]],[11,R[39],E,E,56,[[["self"]],[T]]],[11,R[13],E,E,56,[[["self"]],[T]]],[11,R[14],E,E,56,[[],[R[12]]]],[11,R[18],E,E,56,[[["self"]],[R[40]]]],[11,R[2390],E,E,28,[[],[R[2392]]]],[11,R[2393],E,E,28,[[],["itemref"]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[16],E,E,28,[[["self"]],[T]]],[11,R[17],E,E,28,[[[T],["self"]]]],[11,R[170],E,E,28,[[["self"]],["string"]]],[11,R[11],E,E,28,[[[U]],[R[12]]]],[11,R[39],E,E,28,[[["self"]],[T]]],[11,R[13],E,E,28,[[["self"]],[T]]],[11,R[14],E,E,28,[[],[R[12]]]],[11,R[18],E,E,28,[[["self"]],[R[40]]]],[11,"from",R[2404],E,57,[[[T]],[T]]],[11,"into",E,E,57,[[],[U]]],[11,R[11],E,E,57,[[[U]],[R[12]]]],[11,R[39],E,E,57,[[["self"]],[T]]],[11,R[13],E,E,57,[[["self"]],[T]]],[11,R[14],E,E,57,[[],[R[12]]]],[11,R[18],E,E,57,[[["self"]],[R[40]]]],[11,R[2390],E,E,29,[[],[R[2392]]]],[11,R[2393],E,E,29,[[],["itemref"]]],[11,"from",E,E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[16],E,E,29,[[["self"]],[T]]],[11,R[17],E,E,29,[[[T],["self"]]]],[11,R[11],E,E,29,[[[U]],[R[12]]]],[11,R[39],E,E,29,[[["self"]],[T]]],[11,R[13],E,E,29,[[["self"]],[T]]],[11,R[14],E,E,29,[[],[R[12]]]],[11,R[18],E,E,29,[[["self"]],[R[40]]]],[11,"from",R[2405],E,58,[[[T]],[T]]],[11,"into",E,E,58,[[],[U]]],[11,R[11],E,E,58,[[[U]],[R[12]]]],[11,R[39],E,E,58,[[["self"]],[T]]],[11,R[13],E,E,58,[[["self"]],[T]]],[11,R[14],E,E,58,[[],[R[12]]]],[11,R[18],E,E,58,[[["self"]],[R[40]]]],[11,R[2390],E,E,30,[[],[R[2392]]]],[11,R[2393],E,E,30,[[],["itemref"]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[16],E,E,30,[[["self"]],[T]]],[11,R[17],E,E,30,[[[T],["self"]]]],[11,R[11],E,E,30,[[[U]],[R[12]]]],[11,R[39],E,E,30,[[["self"]],[T]]],[11,R[13],E,E,30,[[["self"]],[T]]],[11,R[14],E,E,30,[[],[R[12]]]],[11,R[18],E,E,30,[[["self"]],[R[40]]]],[11,"from",R[2406],E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[16],E,E,32,[[["self"]],[T]]],[11,R[17],E,E,32,[[[T],["self"]]]],[11,R[11],E,E,32,[[[U]],[R[12]]]],[11,R[39],E,E,32,[[["self"]],[T]]],[11,R[13],E,E,32,[[["self"]],[T]]],[11,R[14],E,E,32,[[],[R[12]]]],[11,R[18],E,E,32,[[["self"]],[R[40]]]],[11,"from",R[2407],E,59,[[[T]],[T]]],[11,"into",E,E,59,[[],[U]]],[11,R[11],E,E,59,[[[U]],[R[12]]]],[11,R[39],E,E,59,[[["self"]],[T]]],[11,R[13],E,E,59,[[["self"]],[T]]],[11,R[14],E,E,59,[[],[R[12]]]],[11,R[18],E,E,59,[[["self"]],[R[40]]]],[11,"from",E,E,60,[[[T]],[T]]],[11,"into",E,E,60,[[],[U]]],[11,R[11],E,E,60,[[[U]],[R[12]]]],[11,R[39],E,E,60,[[["self"]],[T]]],[11,R[13],E,E,60,[[["self"]],[T]]],[11,R[14],E,E,60,[[],[R[12]]]],[11,R[18],E,E,60,[[["self"]],[R[40]]]],[11,"from",E,E,61,[[[T]],[T]]],[11,"into",E,E,61,[[],[U]]],[11,R[11],E,E,61,[[[U]],[R[12]]]],[11,R[39],E,E,61,[[["self"]],[T]]],[11,R[13],E,E,61,[[["self"]],[T]]],[11,R[14],E,E,61,[[],[R[12]]]],[11,R[18],E,E,61,[[["self"]],[R[40]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[11],E,E,33,[[[U]],[R[12]]]],[11,R[39],E,E,33,[[["self"]],[T]]],[11,R[13],E,E,33,[[["self"]],[T]]],[11,R[14],E,E,33,[[],[R[12]]]],[11,R[18],E,E,33,[[["self"]],[R[40]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[11],E,E,34,[[[U]],[R[12]]]],[11,R[39],E,E,34,[[["self"]],[T]]],[11,R[13],E,E,34,[[["self"]],[T]]],[11,R[14],E,E,34,[[],[R[12]]]],[11,R[18],E,E,34,[[["self"]],[R[40]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[11],E,E,35,[[[U]],[R[12]]]],[11,R[39],E,E,35,[[["self"]],[T]]],[11,R[13],E,E,35,[[["self"]],[T]]],[11,R[14],E,E,35,[[],[R[12]]]],[11,R[18],E,E,35,[[["self"]],[R[40]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,R[11],E,E,36,[[[U]],[R[12]]]],[11,R[39],E,E,36,[[["self"]],[T]]],[11,R[13],E,E,36,[[["self"]],[T]]],[11,R[14],E,E,36,[[],[R[12]]]],[11,R[18],E,E,36,[[["self"]],[R[40]]]],[11,"from",E,E,62,[[[T]],[T]]],[11,"into",E,E,62,[[],[U]]],[11,R[11],E,E,62,[[[U]],[R[12]]]],[11,R[39],E,E,62,[[["self"]],[T]]],[11,R[13],E,E,62,[[["self"]],[T]]],[11,R[14],E,E,62,[[],[R[12]]]],[11,R[18],E,E,62,[[["self"]],[R[40]]]],[11,R[2390],E,E,37,[[],[R[2392]]]],[11,R[2393],E,E,37,[[],["itemref"]]],[11,"from",E,E,37,[[[T]],[T]]],[11,"into",E,E,37,[[],[U]]],[11,R[16],E,E,37,[[["self"]],[T]]],[11,R[17],E,E,37,[[[T],["self"]]]],[11,R[11],E,E,37,[[[U]],[R[12]]]],[11,R[39],E,E,37,[[["self"]],[T]]],[11,R[13],E,E,37,[[["self"]],[T]]],[11,R[14],E,E,37,[[],[R[12]]]],[11,R[18],E,E,37,[[["self"]],[R[40]]]],[11,R[2390],E,E,38,[[],[R[2392]]]],[11,R[2393],E,E,38,[[],["itemref"]]],[11,"from",E,E,38,[[[T]],[T]]],[11,"into",E,E,38,[[],[U]]],[11,R[16],E,E,38,[[["self"]],[T]]],[11,R[17],E,E,38,[[[T],["self"]]]],[11,R[11],E,E,38,[[[U]],[R[12]]]],[11,R[39],E,E,38,[[["self"]],[T]]],[11,R[13],E,E,38,[[["self"]],[T]]],[11,R[14],E,E,38,[[],[R[12]]]],[11,R[18],E,E,38,[[["self"]],[R[40]]]],[11,R[2390],E,E,39,[[],[R[2392]]]],[11,R[2393],E,E,39,[[],["itemref"]]],[11,"from",E,E,39,[[[T]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,R[16],E,E,39,[[["self"]],[T]]],[11,R[17],E,E,39,[[[T],["self"]]]],[11,R[11],E,E,39,[[[U]],[R[12]]]],[11,R[39],E,E,39,[[["self"]],[T]]],[11,R[13],E,E,39,[[["self"]],[T]]],[11,R[14],E,E,39,[[],[R[12]]]],[11,R[18],E,E,39,[[["self"]],[R[40]]]],[11,R[2390],E,E,63,[[],[R[2392]]]],[11,R[2393],E,E,63,[[],["itemref"]]],[11,"from",E,E,63,[[[T]],[T]]],[11,"into",E,E,63,[[],[U]]],[11,R[16],E,E,63,[[["self"]],[T]]],[11,R[17],E,E,63,[[[T],["self"]]]],[11,R[11],E,E,63,[[[U]],[R[12]]]],[11,R[39],E,E,63,[[["self"]],[T]]],[11,R[13],E,E,63,[[["self"]],[T]]],[11,R[14],E,E,63,[[],[R[12]]]],[11,R[18],E,E,63,[[["self"]],[R[40]]]],[11,"from",R[2408],E,64,[[[T]],[T]]],[11,"into",E,E,64,[[],[U]]],[11,R[11],E,E,64,[[[U]],[R[12]]]],[11,R[39],E,E,64,[[["self"]],[T]]],[11,R[13],E,E,64,[[["self"]],[T]]],[11,R[14],E,E,64,[[],[R[12]]]],[11,R[18],E,E,64,[[["self"]],[R[40]]]],[11,R[2390],E,E,40,[[],[R[2392]]]],[11,R[2393],E,E,40,[[],["itemref"]]],[11,"from",E,E,40,[[[T]],[T]]],[11,"into",E,E,40,[[],[U]]],[11,R[16],E,E,40,[[["self"]],[T]]],[11,R[17],E,E,40,[[[T],["self"]]]],[11,R[11],E,E,40,[[[U]],[R[12]]]],[11,R[39],E,E,40,[[["self"]],[T]]],[11,R[13],E,E,40,[[["self"]],[T]]],[11,R[14],E,E,40,[[],[R[12]]]],[11,R[18],E,E,40,[[["self"]],[R[40]]]],[11,"from",R[2409],E,65,[[[T]],[T]]],[11,"into",E,E,65,[[],[U]]],[11,R[11],E,E,65,[[[U]],[R[12]]]],[11,R[39],E,E,65,[[["self"]],[T]]],[11,R[13],E,E,65,[[["self"]],[T]]],[11,R[14],E,E,65,[[],[R[12]]]],[11,R[18],E,E,65,[[["self"]],[R[40]]]],[11,"from",E,E,41,[[[T]],[T]]],[11,"into",E,E,41,[[],[U]]],[11,R[16],E,E,41,[[["self"]],[T]]],[11,R[17],E,E,41,[[[T],["self"]]]],[11,R[11],E,E,41,[[[U]],[R[12]]]],[11,R[39],E,E,41,[[["self"]],[T]]],[11,R[13],E,E,41,[[["self"]],[T]]],[11,R[14],E,E,41,[[],[R[12]]]],[11,R[18],E,E,41,[[["self"]],[R[40]]]],[11,R[2390],E,E,42,[[],[R[2392]]]],[11,R[2393],E,E,42,[[],["itemref"]]],[11,"from",E,E,42,[[[T]],[T]]],[11,"into",E,E,42,[[],[U]]],[11,R[16],E,E,42,[[["self"]],[T]]],[11,R[17],E,E,42,[[[T],["self"]]]],[11,R[11],E,E,42,[[[U]],[R[12]]]],[11,R[39],E,E,42,[[["self"]],[T]]],[11,R[13],E,E,42,[[["self"]],[T]]],[11,R[14],E,E,42,[[],[R[12]]]],[11,R[18],E,E,42,[[["self"]],[R[40]]]],[11,"clone",R[2394],E,6,[[["self"]],[R[1742]]]],[11,"clone",E,E,5,[[["self"]],["cfrange"]]],[11,"clone",R[2398],E,18,[[["self"]],[R[1743]]]],[11,"clone",R[2400],E,23,[[["self"]],[R[1745]]]],[11,"clone",R[2398],E,19,[[["self"]],[R[1744]]]],[11,"clone",R[2402],E,26,[[["self"]],[R[1747]]]],[11,"clone",R[2389],E,0,[[["self"]],[R[1740]]]],[11,"clone",R[2394],E,4,[[["self"]],[R[1741]]]],[11,"clone",R[2409],E,41,[[["self"]],[R[1307]]]],[11,"into",R[2394],E,4,[[],[R[51]]]],[11,R[79],R[2409],E,41,[[],[R[1307]]]],[11,R[2371],R[2389],E,1,[[["self"]],[R[2410]]]],[11,R[2372],E,E,1,[[[R[2410]]],["self"]]],[11,R[2375],E,E,1,[[["self"]],[R[2412]]]],[11,R[2376],E,E,1,[[[R[2410]]],["self"]]],[11,R[18],E,E,1,[[],[R[2415]]]],[11,R[2371],R[2391],E,2,[[["self"]],[R[2411]]]],[11,R[2372],E,E,2,[[[R[2411]]],["self"]]],[11,R[2375],E,E,2,[[["self"]],[R[2412]]]],[11,R[2376],E,E,2,[[[R[2411]]],["self"]]],[11,R[18],E,E,2,[[],[R[2415]]]],[11,R[2371],E,E,3,[[["self"]],[R[2413]]]],[11,R[2372],E,E,3,[[[R[2413]]],["self"]]],[11,R[2375],E,E,3,[[["self"]],[R[2412]]]],[11,R[2376],E,E,3,[[[R[2413]]],["self"]]],[11,R[18],E,E,3,[[],[R[2415]]]],[11,R[2371],R[2394],E,14,[[["self"]],[R[2414]]]],[11,R[2372],E,E,14,[[[R[2414]]],["self"]]],[11,R[2375],E,E,14,[[["self"]],[R[2412]]]],[11,R[2376],E,E,14,[[[R[2414]]],["self"]]],[11,R[18],E,E,14,[[],[R[2415]]]],[11,R[2371],E,E,13,[[["self"]],[R[2412]]]],[11,R[2372],E,E,13,[[[R[2412]]],["cftype"]]],[11,R[2375],E,E,13,[[["self"]],[R[2412]]]],[11,R[2376],E,E,13,[[[R[2412]]],["cftype"]]],[11,R[18],E,E,13,[[],[R[2415]]]],[11,R[2371],R[2395],E,15,[[["self"]],[R[2416]]]],[11,R[2372],E,E,15,[[[R[2416]]],["self"]]],[11,R[2375],E,E,15,[[["self"]],[R[2412]]]],[11,R[2376],E,E,15,[[[R[2416]]],["self"]]],[11,R[18],E,E,15,[[],[R[2415]]]],[11,R[2371],R[2396],E,16,[[["self"]],[R[2905]]]],[11,R[2372],E,E,16,[[[R[2905]]],["self"]]],[11,R[2375],E,E,16,[[["self"]],[R[2412]]]],[11,R[2376],E,E,16,[[[R[2905]]],["self"]]],[11,R[18],E,E,16,[[],[R[2415]]]],[11,R[2371],R[2397],E,17,[[["self"]],[R[2906]]]],[11,R[2372],E,E,17,[[[R[2906]]],["self"]]],[11,R[2375],E,E,17,[[["self"]],[R[2412]]]],[11,R[2376],E,E,17,[[[R[2906]]],["self"]]],[11,R[18],E,E,17,[[],[R[2415]]]],[11,R[2371],R[2398],E,20,[[["self"]],[R[2417]]]],[11,R[2372],E,E,20,[[[R[2417]]],["self"]]],[11,R[2375],E,E,20,[[["self"]],[R[2412]]]],[11,R[2376],E,E,20,[[[R[2417]]],["self"]]],[11,R[18],E,E,20,[[],[R[2415]]]],[11,R[2371],E,E,21,[[["self"]],[R[2418]]]],[11,R[2372],E,E,21,[[[R[2418]]],["self"]]],[11,R[2375],E,E,21,[[["self"]],[R[2412]]]],[11,R[2376],E,E,21,[[[R[2418]]],["self"]]],[11,R[18],E,E,21,[[],[R[2415]]]],[11,R[2371],R[2399],E,22,[[["self"]],[R[2419]]]],[11,R[2372],E,E,22,[[[R[2419]]],["self"]]],[11,R[2375],E,E,22,[[["self"]],[R[2412]]]],[11,R[2376],E,E,22,[[[R[2419]]],["self"]]],[11,R[18],E,E,22,[[],[R[2415]]]],[11,R[2371],R[2400],E,24,[[["self"]],[R[2420]]]],[11,R[2372],E,E,24,[[[R[2420]]],["self"]]],[11,R[2375],E,E,24,[[["self"]],[R[2412]]]],[11,R[2376],E,E,24,[[[R[2420]]],["self"]]],[11,R[18],E,E,24,[[],[R[2415]]]],[11,R[2371],R[2401],E,25,[[["self"]],[R[2421]]]],[11,R[2372],E,E,25,[[[R[2421]]],["self"]]],[11,R[2375],E,E,25,[[["self"]],[R[2412]]]],[11,R[2376],E,E,25,[[[R[2421]]],["self"]]],[11,R[18],E,E,25,[[],[R[2415]]]],[11,R[2371],R[2402],E,27,[[["self"]],["cfsetref"]]],[11,R[2372],E,E,27,[[["cfsetref"]],["self"]]],[11,R[2375],E,E,27,[[["self"]],[R[2412]]]],[11,R[2376],E,E,27,[[["cfsetref"]],["self"]]],[11,R[18],E,E,27,[[],[R[2415]]]],[11,R[2371],R[2403],E,28,[[["self"]],[R[2422]]]],[11,R[2372],E,E,28,[[[R[2422]]],["self"]]],[11,R[2375],E,E,28,[[["self"]],[R[2412]]]],[11,R[2376],E,E,28,[[[R[2422]]],["self"]]],[11,R[18],E,E,28,[[],[R[2415]]]],[11,R[2371],R[2404],E,29,[[["self"]],["cfurlref"]]],[11,R[2372],E,E,29,[[["cfurlref"]],["self"]]],[11,R[2375],E,E,29,[[["self"]],[R[2412]]]],[11,R[2376],E,E,29,[[["cfurlref"]],["self"]]],[11,R[18],E,E,29,[[],[R[2415]]]],[11,R[2371],R[2405],E,30,[[["self"]],[R[2423]]]],[11,R[2372],E,E,30,[[[R[2423]]],["self"]]],[11,R[2375],E,E,30,[[["self"]],[R[2412]]]],[11,R[2376],E,E,30,[[[R[2423]]],["self"]]],[11,R[18],E,E,30,[[],[R[2415]]]],[11,R[2371],R[2407],E,37,[[["self"]],[R[2424]]]],[11,R[2372],E,E,37,[[[R[2424]]],["self"]]],[11,R[2375],E,E,37,[[["self"]],[R[2412]]]],[11,R[2376],E,E,37,[[[R[2424]]],["self"]]],[11,R[18],E,E,37,[[],[R[2415]]]],[11,R[2371],E,E,38,[[["self"]],[R[2425]]]],[11,R[2372],E,E,38,[[[R[2425]]],["self"]]],[11,R[2375],E,E,38,[[["self"]],[R[2412]]]],[11,R[2376],E,E,38,[[[R[2425]]],["self"]]],[11,R[18],E,E,38,[[],[R[2415]]]],[11,R[2371],E,E,39,[[["self"]],[R[2426]]]],[11,R[2372],E,E,39,[[[R[2426]]],["self"]]],[11,R[2375],E,E,39,[[["self"]],[R[2412]]]],[11,R[2376],E,E,39,[[[R[2426]]],["self"]]],[11,R[18],E,E,39,[[],[R[2415]]]],[11,R[2371],E,E,63,[[["self"]],[R[2427]]]],[11,R[2372],E,E,63,[[[R[2427]]],["self"]]],[11,R[2375],E,E,63,[[["self"]],[R[2412]]]],[11,R[2376],E,E,63,[[[R[2427]]],["self"]]],[11,R[18],E,E,63,[[],[R[2415]]]],[11,R[2371],R[2408],E,40,[[["self"]],[R[2428]]]],[11,R[2372],E,E,40,[[[R[2428]]],["self"]]],[11,R[2375],E,E,40,[[["self"]],[R[2412]]]],[11,R[2376],E,E,40,[[[R[2428]]],["self"]]],[11,R[18],E,E,40,[[],[R[2415]]]],[11,R[2371],R[2409],E,42,[[["self"]],[R[2907]]]],[11,R[2372],E,E,42,[[[R[2907]]],["self"]]],[11,R[2375],E,E,42,[[["self"]],[R[2412]]]],[11,R[2376],E,E,42,[[[R[2907]]],["self"]]],[11,R[18],E,E,42,[[],[R[2415]]]],[11,"to_void",R[2389],E,1,[[["self"]]]],[11,"to_void",R[2349],E,66,[[["self"]]]],[11,"to_void",R[2391],E,2,[[["self"]]]],[11,"to_void",R[2349],E,67,[[["self"]]]],[11,"to_void",R[2391],E,3,[[["self"]]]],[11,"to_void",R[2349],E,68,[[["self"]]]],[11,"to_void",R[2394],E,14,[[["self"]]]],[11,"to_void",R[2349],E,69,[[["self"]]]],[11,"to_void",R[2394],E,13,[[["self"]]]],[11,"to_void",R[2349],E,70,[[["self"]]]],[11,"to_void",R[2395],E,15,[[["self"]]]],[11,"to_void",R[2349],E,71,[[["self"]]]],[11,"to_void",R[2396],E,16,[[["self"]]]],[11,"to_void",R[2349],E,72,[[["self"]]]],[11,"to_void",R[2397],E,17,[[["self"]]]],[11,"to_void",R[2349],E,73,[[["self"]]]],[11,"to_void",R[2398],E,20,[[["self"]]]],[11,"to_void",R[2349],E,74,[[["self"]]]],[11,"to_void",R[2398],E,21,[[["self"]]]],[11,"to_void",R[2349],E,75,[[["self"]]]],[11,"to_void",R[2399],E,22,[[["self"]]]],[11,"to_void",R[2349],E,76,[[["self"]]]],[11,"to_void",R[2400],E,24,[[["self"]]]],[11,"to_void",R[2349],E,77,[[["self"]]]],[11,"to_void",R[2401],E,25,[[["self"]]]],[11,"to_void",R[2349],E,78,[[["self"]]]],[11,"to_void",R[2402],E,27,[[["self"]]]],[11,"to_void",R[2349],E,79,[[["self"]]]],[11,"to_void",R[2403],E,28,[[["self"]]]],[11,"to_void",R[2349],E,80,[[["self"]]]],[11,"to_void",R[2404],E,29,[[["self"]]]],[11,"to_void",R[2349],E,81,[[["self"]]]],[11,"to_void",R[2405],E,30,[[["self"]]]],[11,"to_void",R[2349],E,82,[[["self"]]]],[11,"to_void",R[2407],E,37,[[["self"]]]],[11,"to_void",R[2349],E,83,[[["self"]]]],[11,"to_void",R[2407],E,38,[[["self"]]]],[11,"to_void",R[2349],E,84,[[["self"]]]],[11,"to_void",R[2407],E,39,[[["self"]]]],[11,"to_void",R[2349],E,85,[[["self"]]]],[11,"to_void",R[2407],E,63,[[["self"]]]],[11,"to_void",R[2349],E,86,[[["self"]]]],[11,"to_void",R[2408],E,40,[[["self"]]]],[11,"to_void",R[2349],E,87,[[["self"]]]],[11,"to_void",R[2409],E,42,[[["self"]]]],[11,"to_void",R[2349],E,88,[[["self"]]]],[11,"eq",R[2389],E,1,[[["cfarray"],["self"]],["bool"]]],[11,"eq",R[2391],E,2,[[[R[2431]],["self"]],["bool"]]],[11,"eq",E,E,3,[[[R[2432]],["self"]],["bool"]]],[11,"eq",R[2394],E,13,[[["cftype"],["self"]],["bool"]]],[11,"eq",E,E,14,[[[R[2429]],["self"]],["bool"]]],[11,"eq",E,E,46,[[["self"]],["bool"]]],[11,"eq",E,E,47,[[["self"]],["bool"]]],[11,"eq",R[2395],E,15,[[[R[2433]],["self"]],["bool"]]],[11,"eq",R[2396],E,16,[[["cfdata"],["self"]],["bool"]]],[11,"eq",R[2397],E,17,[[["cfdate"],["self"]],["bool"]]],[11,"eq",R[2398],E,20,[[[R[2356]],["self"]],["bool"]]],[11,"eq",E,E,21,[[["self"],[R[2359]]],["bool"]]],[11,"eq",R[2399],E,22,[[["self"],["cferror"]],["bool"]]],[11,"eq",R[2400],E,24,[[[R[2364]],["self"]],["bool"]]],[11,"eq",R[2401],E,25,[[[R[2908]],["self"]],["bool"]]],[11,"eq",R[2402],E,27,[[["cfset"],["self"]],["bool"]]],[11,"eq",R[2403],E,28,[[[R[2368]],["self"]],["bool"]]],[11,"eq",R[2404],E,29,[[["self"],["cfurl"]],["bool"]]],[11,"eq",R[2405],E,30,[[[R[2434]],["self"]],["bool"]]],[11,"eq",R[2406],E,32,[[[R[2370]],["self"]],["bool"]]],[11,"eq",R[2407],E,37,[[["self"],[R[2435]]],["bool"]]],[11,"eq",E,E,38,[[[R[2386]],["self"]],["bool"]]],[11,"eq",E,E,39,[[[R[2366]],["self"]],["bool"]]],[11,"eq",E,E,63,[[["self"],[R[2387]]],["bool"]]],[11,"eq",R[2408],E,40,[[[R[2430]],["self"]],["bool"]]],[11,"eq",R[2409],E,42,[[["cfuuid"],["self"]],["bool"]]],[11,"clone",R[2389],E,1,[[["self"]],["cfarray"]]],[11,"clone",R[2391],E,2,[[["self"]],[R[2431]]]],[11,"clone",E,E,3,[[["self"]],[R[2432]]]],[11,"clone",R[2394],E,13,[[["self"]],["cftype"]]],[11,"clone",E,E,14,[[["self"]],[R[2429]]]],[11,"clone",R[2395],E,15,[[["self"]],[R[2433]]]],[11,"clone",R[2396],E,16,[[["self"]],["cfdata"]]],[11,"clone",R[2397],E,17,[[["self"]],["cfdate"]]],[11,"clone",R[2398],E,20,[[["self"]],[R[2356]]]],[11,"clone",E,E,21,[[["self"]],[R[2359]]]],[11,"clone",R[2399],E,22,[[["self"]],["cferror"]]],[11,"clone",R[2400],E,24,[[["self"]],[R[2364]]]],[11,"clone",R[2401],E,25,[[["self"]],[R[2908]]]],[11,"clone",R[2402],E,27,[[["self"]],["cfset"]]],[11,"clone",R[2403],E,28,[[["self"]],[R[2368]]]],[11,"clone",R[2404],E,29,[[["self"]],["cfurl"]]],[11,"clone",R[2405],E,30,[[["self"]],[R[2434]]]],[11,"clone",R[2406],E,32,[[["self"]],[R[2370]]]],[11,"clone",R[2407],E,37,[[["self"]],[R[2435]]]],[11,"clone",E,E,38,[[["self"]],[R[2386]]]],[11,"clone",E,E,39,[[["self"]],[R[2366]]]],[11,"clone",E,E,63,[[["self"]],[R[2387]]]],[11,"clone",R[2408],E,40,[[["self"]],[R[2430]]]],[11,"clone",R[2409],E,42,[[["self"]],["cfuuid"]]],[11,"cmp",R[2397],E,17,[[["cfdate"],["self"]],[R[51]]]],[11,"cmp",R[2401],E,25,[[[R[2908]],["self"]],[R[51]]]],[11,"from",R[2395],E,15,[[["bool"]],[R[2433]]]],[11,"from",R[2398],"Creates a new mutable dictionary with the key-value pairs…",21,[[[R[2356]]],["self"]]],[11,"from",R[2401],E,25,[[["i32"]],["self"]]],[11,"from",E,E,25,[[["i64"]],["self"]]],[11,"from",E,E,25,[[["f32"]],["self"]]],[11,"from",E,E,25,[[["f64"]],["self"]]],[11,"from",R[2403],E,28,[[["str"]],[R[2368]]]],[11,"drop",R[2389],E,1,[[["self"]]]],[11,"drop",R[2391],E,2,[[["self"]]]],[11,"drop",E,E,3,[[["self"]]]],[11,"drop",R[2394],E,13,[[["self"]]]],[11,"drop",E,E,14,[[["self"]]]],[11,"drop",R[2395],E,15,[[["self"]]]],[11,"drop",R[2396],E,16,[[["self"]]]],[11,"drop",R[2397],E,17,[[["self"]]]],[11,"drop",R[2398],E,20,[[["self"]]]],[11,"drop",E,E,21,[[["self"]]]],[11,"drop",R[2399],E,22,[[["self"]]]],[11,"drop",R[2400],E,24,[[["self"]]]],[11,"drop",R[2401],E,25,[[["self"]]]],[11,"drop",R[2402],E,27,[[["self"]]]],[11,"drop",R[2403],E,28,[[["self"]]]],[11,"drop",R[2404],E,29,[[["self"]]]],[11,"drop",R[2405],E,30,[[["self"]]]],[11,"drop",R[2406],E,32,[[["self"]]]],[11,"drop",R[2407],E,37,[[["self"]]]],[11,"drop",E,E,38,[[["self"]]]],[11,"drop",E,E,39,[[["self"]]]],[11,"drop",E,E,63,[[["self"]]]],[11,"drop",R[2408],E,40,[[["self"]]]],[11,"drop",R[2409],E,42,[[["self"]]]],[11,R[264],R[2397],E,17,[[["cfdate"],["self"]],[[R[51]],[R[52],[R[51]]]]]],[11,R[264],R[2401],E,25,[[[R[2908]],["self"]],[[R[51]],[R[52],[R[51]]]]]],[11,"next",R[2389],E,44,[[["self"]],[[R[52],["itemref"]],["itemref"]]]],[11,"len",E,E,44,[[["self"]],[R[9]]]],[11,R[79],R[2391],E,3,[[],["self"]]],[11,R[79],R[2398],E,21,[[],["self"]]],[11,R[79],R[2408],E,40,[[],[R[2430]]]],[11,R[79],R[2409],E,42,[[],["self"]]],[11,R[407],R[2403],R[2909],28,[[["str"]],[[R[12],[R[2368]]],[R[2368]]]]],[11,R[54],R[2394],E,47,[[["self"]],[T]]],[11,"fmt",R[2389],E,1,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[2394],"Formats the value using [`CFCopyDescription`].",13,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,46,[[["self"],[R[29]]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,47,[[["self"],[R[29]]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[2395],E,15,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[2396],E,16,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[2397],E,17,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[2398],E,20,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,21,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[2399],E,22,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[2401],E,25,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[2402],E,27,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[2403],E,28,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[2404],E,29,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[2407],E,37,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[2408],E,40,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[2409],E,42,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[2399],E,22,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[2403],E,28,[[["self"],[R[29]]],[R[12]]]],[11,"deref",R[2394],E,46,[[["self"]],[T]]],[11,"deref",E,E,47,[[["self"]],[T]]],[11,"deref",R[2396],E,16,[[["self"]]]],[11,R[30],R[2399],E,22,[[["self"]],["str"]]],[11,R[2452],R[2400],E,24,[[["self"]],["rawfd"]]],[11,"init",R[2394],E,5,[[["i64"]],["cfrange"]]]],"p":[[3,R[1308]],[3,"CFArray"],[3,R[2436]],[3,R[2437]],[4,R[1310]],[3,"CFRange"],[3,R[1309]],[8,R[1453]],[8,R[2438]],[8,"TCFType"],[8,R[2439]],[8,"FromVoid"],[8,"ToVoid"],[3,"CFType"],[3,R[2440]],[3,R[2910]],[3,"CFData"],[3,"CFDate"],[3,R[1311]],[3,R[1312]],[3,R[2441]],[3,R[2442]],[3,"CFError"],[3,R[1313]],[3,R[2443]],[3,"CFNumber"],[3,R[1319]],[3,"CFSet"],[3,"CFString"],[3,"CFURL"],[3,"CFBundle"],[8,R[2444]],[3,R[2445]],[3,R[1315]],[3,R[1316]],[3,R[1317]],[3,R[1318]],[3,R[2911]],[3,R[2446]],[3,R[2447]],[3,R[2896]],[3,R[1320]],[3,"CFUUID"],[3,R[1748]],[3,R[2448]],[3,R[1321]],[3,"ItemRef"],[3,"ItemMutRef"],[3,R[2828]],[3,R[2834]],[3,R[1322]],[3,R[1749]],[3,R[1323]],[3,R[1325]],[4,R[1545]],[3,"__CFSet"],[3,R[1652]],[3,"__CFURL"],[3,R[1457]],[3,R[1326]],[3,R[1327]],[3,R[1328]],[3,R[1329]],[3,R[2449]],[3,R[1330]],[3,R[2900]],[6,R[2454]],[6,R[2450]],[6,R[2451]],[6,R[1444]],[6,R[2468]],[6,R[1553]],[6,R[2469]],[6,R[2470]],[6,R[1503]],[6,R[1504]],[6,R[2464]],[6,R[1524]],[6,R[1555]],[6,"CFSetRef"],[6,R[1664]],[6,"CFURLRef"],[6,R[1466]],[6,R[1623]],[6,R[1629]],[6,R[1624]],[6,R[1625]],[6,R[1671]],[6,R[2472]]]};
searchIndex[R[2349]]={"doc":E,"i":[[0,"array",R[2349],R[2805],N,N],[6,R[1419],R[2389],E,N,N],[6,R[1420],E,E,N,N],[6,R[1421],E,E,N,N],[6,R[1422],E,E,N,N],[3,R[1308],E,E,N,N],[12,"version",E,E,0,N],[12,"retain",E,E,0,N],[12,"release",E,E,0,N],[12,R[1289],E,E,0,N],[12,"equal",E,E,0,N],[3,R[1748],E,E,N,N],[6,R[2454],E,E,N,N],[7,R[1412],E,E,N,N],[5,R[1413],E,E,N,[[["i64"]]]],[5,R[1414],E,E,N,[[]]],[5,R[1415],E,E,N,[[],["i64"]]],[5,R[1416],E,E,N,[[["cfrange"]]]],[5,R[1417],E,E,N,[[["i64"]]]],[5,R[1418],E,E,N,[[],["u64"]]],[6,"CFIndex",E,E,N,N],[3,"CFArray",E,R[2806],N,N],[3,"ItemRef",E,"A reference to an element inside the array",N,N],[3,R[2448],E,E,N,N],[8,"FromVoid",E,R[2352],N,N],[10,R[2393],E,E,1,[[],["itemref"]]],[11,R[2807],E,R[2350],2,[[],["cfarray"]]],[11,R[2360],E,E,2,[[["self"]],["cfarray"]]],[11,R[2357],E,R[2808],2,[[],["cfarray"]]],[11,"iter",E,R[2809],2,[[["self"]],[R[2810]]]],[11,"len",E,E,2,[[["self"]],["cfindex"]]],[11,R[2453],E,E,2,[[["cfindex"],["self"]],["itemref"]]],[11,"get",E,E,2,[[["cfindex"],["self"]],[["itemref"],[R[52],["itemref"]]]]],[11,R[3656],E,E,2,[[["self"],["cfrange"]],["vec"]]],[11,R[2811],E,E,2,[[["self"]],["vec"]]],[0,"base",R[2349],E,N,N],[6,"Boolean",R[2394],E,N,N],[6,"CFIndex",E,E,N,N],[6,R[1443],E,E,N,N],[6,R[1444],E,E,N,N],[6,R[2812],E,E,N,N],[6,R[2467],E,E,N,N],[6,"CFTypeID",E,E,N,N],[6,R[2468],E,E,N,N],[6,R[1445],E,E,N,N],[6,"OSStatus",E,E,N,N],[6,"SInt32",E,E,N,N],[4,R[1310],E,E,N,N],[13,"LessThan",E,E,3,N],[13,"EqualTo",E,E,3,N],[13,R[1424],E,E,3,N],[3,"CFRange",E,E,N,N],[12,"location",E,E,4,N],[12,"length",E,E,4,N],[6,R[1446],E,E,N,N],[6,R[1447],E,E,N,N],[6,R[1448],E,E,N,N],[6,R[1449],E,E,N,N],[6,R[1450],E,E,N,N],[6,R[1451],E,E,N,N],[6,R[1452],E,E,N,N],[3,R[1309],E,E,N,N],[12,"version",E,E,5,N],[12,"info",E,E,5,N],[12,"retain",E,E,5,N],[12,"release",E,E,5,N],[12,R[1289],E,E,5,N],[12,R[2813],E,E,5,N],[12,R[2465],E,E,5,N],[12,R[2466],E,E,5,N],[12,R[1423],E,E,5,N],[8,R[1453],E,R[1454],N,N],[10,R[1455],E,E,6,[[["self"]]]],[10,R[1456],E,E,6,[[],["self"]]],[7,R[1425],E,E,N,N],[7,R[1426],E,E,N,N],[7,R[1427],E,E,N,N],[7,R[1428],E,E,N,N],[7,R[1429],E,E,N,N],[7,R[1430],E,E,N,N],[5,R[1431],E,E,N,[[]]],[5,R[1432],E,E,N,[[["u32"],["i64"]]]],[5,R[1433],E,E,N,[[]]],[5,R[1434],E,E,N,[[["u32"],["i64"]],["i64"]]],[5,R[1435],E,E,N,[[["u32"],["i64"]]]],[5,R[1436],E,E,N,[[]]],[5,R[1437],E,E,N,[[]]],[5,R[1438],E,E,N,[[]]],[5,R[1439],E,E,N,[[],["u64"]]],[7,"kCFNull",E,E,N,N],[5,R[1440],E,E,N,[[]]],[5,"CFEqual",E,E,N,[[],["u8"]]],[5,R[1441],E,E,N,[[],["i64"]]],[5,R[1442],E,E,N,[[],["u64"]]],[5,"CFHash",E,E,N,[[],["u64"]]],[5,R[2814],E,E,N,[[]]],[5,"CFRetain",E,E,N,[[]]],[5,"CFShow",E,E,N,[[]]],[3,"CFType",E,R[2815],N,N],[3,R[2440],E,E,N,N],[8,R[2438],E,E,N,N],[10,"to_CFIndex",E,R[2816],7,[[],["cfindex"]]],[8,"TCFType",E,R[2817],N,N],[16,"Ref",E,R[2818],8,N],[10,R[2371],E,R[2819],8,[[["self"]]]],[10,R[2376],E,R[2351],8,[[],["self"]]],[10,R[18],E,R[2820],8,[[],[R[2415]]]],[11,R[2879],E,R[2821],8,[[["self"]],["cftype"]]],[11,R[2374],E,R[2822],8,[[],["cftype"]]],[10,R[2375],E,R[2823],8,[[["self"]],[R[2412]]]],[10,R[2372],E,R[2351],8,[[],["self"]]],[11,R[2377],E,R[2378],8,[[["self"]],["cfindex"]]],[11,"type_of",E,R[2824],8,[[["self"]],[R[2415]]]],[11,"show",E,R[2379],8,[[["self"]]]],[11,R[2380],E,R[2381],8,[[["self"]],["bool"]]],[11,"downcast",E,R[2825],9,[[["self"]],[[R[52]],["tcftype"]]]],[11,R[2382],E,R[2383],9,[[],[[R[52]],["tcftype"]]]],[11,"new",E,E,10,[[[R[1742]]],[R[2429]]]],[0,"boolean",R[2349],R[2354],N,N],[6,R[1553],R[2395],E,N,N],[5,R[1548],E,E,N,[[],["u64"]]],[7,R[1546],E,E,N,N],[7,R[1547],E,E,N,N],[3,R[2910],E,R[2354],N,N],[11,"true_value",E,E,11,[[],[R[2433]]]],[11,R[2826],E,E,11,[[],[R[2433]]]],[0,"data",R[2349],R[2827],N,N],[3,R[2828],R[2396],E,N,N],[6,R[2469],E,E,N,N],[5,R[1467],E,E,N,[[["i64"]]]],[5,R[1468],E,E,N,[[]]],[5,R[1469],E,E,N,[[],["i64"]]],[5,R[1470],E,E,N,[[],["u64"]]],[3,"CFData",E,R[2829],N,N],[11,R[2830],E,E,12,[[],["cfdata"]]],[11,"bytes",E,R[2831],12,[[["self"]]]],[11,"len",E,R[2832],12,[[["self"]],["cfindex"]]],[0,"date",R[2349],R[2833],N,N],[3,R[2834],R[2397],E,N,N],[6,R[2470],E,E,N,N],[6,R[1479],E,E,N,N],[6,R[1480],E,E,N,N],[7,R[1471],E,E,N,N],[7,R[1472],E,E,N,N],[5,R[1473],E,E,N,[[],["f64"]]],[5,R[1474],E,E,N,[[["f64"]]]],[5,R[1475],E,E,N,[[],["f64"]]],[5,R[1476],E,E,N,[[],["f64"]]],[5,R[1477],E,E,N,[[],[R[1741]]]],[5,R[1478],E,E,N,[[],["u64"]]],[3,"CFDate",E,"A date.",N,N],[11,"new",E,E,13,[[[R[2355]]],["cfdate"]]],[11,"now",E,E,13,[[],["cfdate"]]],[11,"abs_time",E,E,13,[[["self"]],[R[2355]]]],[0,R[2471],R[2349],R[2835],N,N],[6,R[1497],R[2398],E,N,N],[6,R[1498],E,E,N,N],[6,R[1499],E,E,N,N],[6,R[1500],E,E,N,N],[6,R[1501],E,E,N,N],[6,R[1502],E,E,N,N],[3,R[1311],E,E,N,N],[12,"version",E,E,14,N],[12,"retain",E,E,14,N],[12,"release",E,E,14,N],[12,R[1289],E,E,14,N],[12,"equal",E,E,14,N],[12,"hash",E,E,14,N],[3,R[1312],E,E,N,N],[12,"version",E,E,15,N],[12,"retain",E,E,15,N],[12,"release",E,E,15,N],[12,R[1289],E,E,15,N],[12,"equal",E,E,15,N],[3,R[1322],E,E,N,N],[6,R[1503],E,E,N,N],[6,R[1504],E,E,N,N],[7,R[1481],E,E,N,N],[7,R[1482],E,E,N,N],[5,R[1483],E,E,N,[[],["u8"]]],[5,R[1484],E,E,N,[[["i64"]]]],[5,R[1485],E,E,N,[[],["i64"]]],[5,R[1486],E,E,N,[[],["u64"]]],[5,R[1487],E,E,N,[[],["u8"]]],[5,R[1488],E,E,N,[[]]],[5,R[1489],E,E,N,[[]]],[5,R[1490],E,E,N,[[["i64"]]]],[5,R[1491],E,E,N,[[["i64"]]]],[5,R[1492],E,E,N,[[]]],[5,R[1493],E,E,N,[[]]],[5,R[1494],E,E,N,[[]]],[5,R[1495],E,E,N,[[]]],[5,R[1496],E,E,N,[[]]],[3,R[2441],E,R[3657],N,N],[3,R[2442],E,"An mutable dictionary of key-value pairs.",N,N],[11,R[2358],E,E,16,[[],[R[2356]]]],[11,"len",E,E,16,[[["self"]],[R[9]]]],[11,R[69],E,E,16,[[["self"]],["bool"]]],[11,R[2362],E,E,16,[[["self"]],["bool"]]],[11,R[2801],E,R[2802],16,[[["k"],["self"]],["bool"]]],[11,"find",E,E,16,[[["self"]],[R[52]]]],[11,"find2",E,R[2803],16,[[["k"],["self"]],[R[52]]]],[11,"get",E,"Panics",16,[[["self"]]]],[11,R[3658],E,R[2804],16,[[["self"]],["cftype"]]],[11,R[2363],E,E,16,[[["self"]]]],[11,"new",E,E,17,[[],["self"]]],[11,R[73],E,E,17,[[["isize"]],["self"]]],[11,R[2836],E,E,17,[[["isize"],["self"]],["self"]]],[11,R[2358],E,E,17,[[],[R[2359]]]],[11,"len",E,E,17,[[["self"]],[R[9]]]],[11,R[69],E,E,17,[[["self"]],["bool"]]],[11,R[2362],E,E,17,[[["self"]],["bool"]]],[11,R[2801],E,R[2802],17,[[["k"],["self"]],["bool"]]],[11,"find",E,E,17,[[["self"]],[R[52]]]],[11,"find2",E,R[2803],17,[[["k"],["self"]],[R[52]]]],[11,"get",E,"Panics",17,[[["self"]]]],[11,R[3658],E,R[2804],17,[[["self"]],["cftype"]]],[11,R[2363],E,E,17,[[["self"]]]],[11,"add",E,R[2837],17,[[["self"]]]],[11,"add2",E,"Similar to `add` but acts on a higher level, automatically…",17,[[["k"],["self"],["v"]]]],[11,"set",E,R[2838],17,[[["self"]]]],[11,"set2",E,"Similar to `set` but acts on a higher level, automatically…",17,[[["k"],["self"],["v"]]]],[11,"replace",E,R[2839],17,[[["self"]]]],[11,"replace2",E,"Similar to `replace` but acts on a higher level,…",17,[[["k"],["self"],["v"]]]],[11,"remove",E,R[2840],17,[[["self"]]]],[11,"remove2",E,"Similar to `remove` but acts on a higher level,…",17,[[["k"],["self"]]]],[11,"remove_all",E,E,17,[[["self"]]]],[0,"error",R[2349],R[2841],N,N],[3,R[1749],R[2399],E,N,N],[6,R[2464],E,E,N,N],[5,R[1505],E,E,N,[[],["u64"]]],[7,R[1506],E,E,N,N],[7,R[1507],E,E,N,N],[7,R[1508],E,E,N,N],[7,R[1509],E,E,N,N],[5,R[1510],E,E,N,[[]]],[5,R[1511],E,E,N,[[],["i64"]]],[5,R[1512],E,E,N,[[]]],[3,"CFError",E,R[2842],N,N],[11,"domain",E,R[2843],18,[[["self"]],[R[2368]]]],[11,"code",E,R[2844],18,[[["self"]],["cfindex"]]],[11,R[30],E,R[2845],18,[[["self"]],[R[2368]]]],[0,R[1513],R[2349],E,N,N],[6,R[1523],R[2400],E,N,N],[3,R[1323],E,E,N,N],[6,R[1524],E,E,N,N],[17,R[1526],E,E,N,N],[17,R[1527],E,E,N,N],[6,R[1525],E,E,N,N],[3,R[1313],E,E,N,N],[12,"version",E,E,19,N],[12,"info",E,E,19,N],[12,"retain",E,E,19,N],[12,"release",E,E,19,N],[12,R[1289],E,E,19,N],[5,R[1514],E,E,N,[[],["u64"]]],[5,R[1515],E,E,N,[[["i32"],["u8"]]]],[5,R[1516],E,E,N,[[],["i32"]]],[5,R[1517],E,E,N,[[]]],[5,R[1518],E,E,N,[[["u32"]]]],[5,R[1519],E,E,N,[[["u32"]]]],[5,R[1520],E,E,N,[[]]],[5,R[1521],E,E,N,[[],["u8"]]],[5,R[1522],E,E,N,[[["i64"]]]],[3,R[2443],E,E,N,N],[11,"new",E,E,20,[[[R[2846]],["bool"],[R[52],[R[1745]]],[R[1745]],["rawfd"]],[[R[2364]],[R[52],[R[2364]]]]]],[11,"context",E,E,20,[[["self"]],[R[1745]]]],[11,R[2847],E,E,20,[[["self"],[R[2365]]]]],[11,R[2848],E,E,20,[[["self"],[R[2365]]]]],[11,"valid",E,E,20,[[["self"]],["bool"]]],[11,"invalidate",E,E,20,[[["self"]]]],[11,R[2849],E,E,20,[[["cfindex"],["self"]],[[R[52],[R[2366]]],[R[2366]]]]],[0,"number",R[2349],R[2850],N,N],[3,R[1325],R[2401],E,N,N],[6,R[1553],E,E,N,N],[6,R[1554],E,E,N,N],[7,R[1556],E,E,N,N],[7,R[1557],E,E,N,N],[7,R[1558],E,E,N,N],[7,R[1559],E,E,N,N],[4,R[1545],E,E,N,N],[6,R[1555],E,E,N,N],[7,R[1546],E,E,N,N],[7,R[1547],E,E,N,N],[5,R[1548],E,E,N,[[],["u64"]]],[5,R[1549],E,E,N,[[["u32"]]]],[5,R[1550],E,E,N,[[["u32"]],["bool"]]],[5,R[1551],E,E,N,[[],[R[1741]]]],[5,R[1552],E,E,N,[[],["u64"]]],[3,"CFNumber",E,R[2851],N,N],[11,"to_i64",E,E,21,[[["self"]],[[R[52],["i64"]],["i64"]]]],[11,"to_f32",E,E,21,[[["self"]],[[R[52],["f32"]],["f32"]]]],[11,"to_f64",E,E,21,[[["self"]],[[R[52],["f64"]],["f64"]]]],[0,"set",R[2349],R[2367],N,N],[6,R[1646],R[2402],E,N,N],[6,R[1647],E,E,N,N],[6,R[1648],E,E,N,N],[6,R[1649],E,E,N,N],[6,R[1650],E,E,N,N],[6,R[1651],E,E,N,N],[3,R[1319],E,E,N,N],[12,"version",E,E,22,N],[12,"retain",E,E,22,N],[12,"release",E,E,22,N],[12,R[1289],E,E,22,N],[12,"equal",E,E,22,N],[12,"hash",E,E,22,N],[3,"__CFSet",E,E,N,N],[6,"CFSetRef",E,E,N,N],[7,R[1641],E,E,N,N],[5,R[1642],E,E,N,[[["i64"]]]],[5,R[1643],E,E,N,[[]]],[5,R[1644],E,E,N,[[],["i64"]]],[5,R[1645],E,E,N,[[],["u64"]]],[3,"CFSet",E,R[2367],N,N],[11,R[2029],E,R[2852],23,[[],["cfset"]]],[0,"string",R[2349],R[2853],N,N],[6,"UniChar",R[2403],E,N,N],[6,R[1661],E,E,N,N],[6,R[1662],E,E,N,N],[7,R[1665],E,E,N,N],[6,R[1663],E,E,N,N],[3,R[1652],E,E,N,N],[6,R[1664],E,E,N,N],[5,R[1653],E,E,N,[[["u32"],["u8"],["i64"]]]],[5,R[1654],E,E,N,[[["u32"],["u8"],["i64"]]]],[5,R[1655],E,E,N,[[["u32"]]]],[5,R[1656],E,E,N,[[["u32"],["u8"],["i64"],["cfrange"]],["i64"]]],[5,R[1657],E,E,N,[[["u32"],["i64"]],["u8"]]],[5,R[1658],E,E,N,[[["u32"]]]],[5,R[1659],E,E,N,[[],["i64"]]],[5,R[1660],E,E,N,[[],["u64"]]],[3,"CFString",E,R[2854],N,N],[11,"new",E,R[2855],24,[[["str"]],[R[2368]]]],[11,R[2856],E,R[2857],24,[[["str"]],[R[2368]]]],[11,"char_len",E,R[2858],24,[[["self"]],["cfindex"]]],[0,"url",R[2349],R[2859],N,N],[3,"__CFURL",R[2404],E,N,N],[6,"CFURLRef",E,E,N,N],[6,R[1731],E,E,N,N],[6,R[1732],E,E,N,N],[17,R[1733],E,E,N,N],[17,R[1734],E,E,N,N],[17,R[1735],E,E,N,N],[7,R[1672],E,E,N,N],[7,R[1673],E,E,N,N],[7,R[1674],E,E,N,N],[7,R[1675],E,E,N,N],[7,R[1676],E,E,N,N],[7,R[1677],E,E,N,N],[7,R[1678],E,E,N,N],[7,R[1679],E,E,N,N],[7,R[1680],E,E,N,N],[7,R[1681],E,E,N,N],[7,R[1682],E,E,N,N],[7,R[1683],E,E,N,N],[7,R[1684],E,E,N,N],[7,R[1685],E,E,N,N],[7,R[1686],E,E,N,N],[7,R[1687],E,E,N,N],[7,R[1688],E,E,N,N],[7,R[1689],E,E,N,N],[7,R[1690],E,E,N,N],[7,R[1691],E,E,N,N],[7,R[1692],E,E,N,N],[7,R[1693],E,E,N,N],[7,R[1694],E,E,N,N],[7,R[1695],E,E,N,N],[7,R[1696],E,E,N,N],[7,R[1697],E,E,N,N],[7,R[1698],E,E,N,N],[7,R[1699],E,E,N,N],[7,R[1700],E,E,N,N],[7,R[1701],E,E,N,N],[5,R[1702],E,E,N,[[]]],[5,R[1703],E,E,N,[[]]],[5,R[1704],E,E,N,[[["u8"],["i64"]]]],[5,R[1705],E,E,N,[[["u32"],["i64"]]]],[5,R[1706],E,E,N,[[["u8"],["i64"]]]],[5,R[1707],E,E,N,[[["u8"],["i64"]]]],[5,R[1708],E,E,N,[[],["u8"]]],[5,R[1709],E,E,N,[[["i64"]]]],[5,R[1710],E,E,N,[[]]],[5,R[1711],E,E,N,[[]]],[5,R[1712],E,E,N,[[]]],[5,R[1713],E,E,N,[[]]],[5,R[1714],E,E,N,[[]]],[5,R[1715],E,E,N,[[]]],[5,R[1716],E,E,N,[[]]],[5,R[1717],E,E,N,[[]]],[5,R[1718],E,E,N,[[]]],[5,R[1719],E,E,N,[[]]],[5,R[1720],E,E,N,[[]]],[5,R[1721],E,E,N,[[]]],[5,R[1722],E,E,N,[[]]],[5,R[1723],E,E,N,[[],["i32"]]],[5,R[1724],E,E,N,[[],["u8"]]],[5,R[1725],E,E,N,[[["u8"],["i64"]],["u8"]]],[5,R[1726],E,E,N,[[]]],[5,R[1727],E,E,N,[[["i64"]],["i64"]]],[5,R[1728],E,E,N,[[],["u64"]]],[5,R[1729],E,E,N,[[]]],[5,R[1730],E,E,N,[[],["u8"]]],[3,"CFURL",E,E,N,N],[11,"from_path",E,E,25,[[["asref",["path"]],["path"],["bool"]],[[R[52],["cfurl"]],["cfurl"]]]],[11,R[2860],E,E,25,[[[R[2369]],["bool"],[R[2368]]],["cfurl"]]],[11,"to_path",E,E,25,[[["self"]],[[R[52],["pathbuf"]],["pathbuf"]]]],[11,"get_string",E,E,25,[[["self"]],[R[2368]]]],[11,R[2861],E,E,25,[[[R[2369]],["self"]],[R[2368]]]],[11,"absolute",E,E,25,[[["self"]],["cfurl"]]],[0,"bundle",R[2349],R[2862],N,N],[3,R[1457],R[2405],E,N,N],[6,R[1466],E,E,N,N],[5,R[1458],E,E,N,[[]]],[5,R[1459],E,E,N,[[]]],[5,R[1460],E,E,N,[[]]],[5,R[1461],E,E,N,[[]]],[5,R[1462],E,E,N,[[]]],[5,R[1463],E,E,N,[[],["u64"]]],[5,R[1464],E,E,N,[[]]],[5,R[1465],E,E,N,[[]]],[3,"CFBundle",E,R[2863],N,N],[11,"new",E,E,26,[[["cfurl"]],[[R[52],[R[2434]]],[R[2434]]]]],[11,R[2864],E,E,26,[[],[R[2434]]]],[11,R[2865],E,E,26,[[["self"]],[R[2356]]]],[11,R[2866],E,E,26,[[["self"]],[[R[52],["cfurl"]],["cfurl"]]]],[11,R[2867],E,E,26,[[["self"]],[[R[52],["cfurl"]],["cfurl"]]]],[0,R[1560],R[2349],R[2868],N,N],[6,R[1564],R[2406],E,N,N],[6,R[1565],E,E,N,N],[17,R[1567],E,E,N,N],[17,R[1568],E,E,N,N],[17,R[1569],E,E,N,N],[6,R[1566],E,E,N,N],[17,R[1570],E,E,N,N],[17,R[1571],E,E,N,N],[17,R[1572],E,E,N,N],[5,R[1561],E,E,N,[[["u32"]]]],[5,R[1563],E,E,N,[[["u32"],["i64"]]]],[3,R[2445],E,R[2869],N,N],[5,R[2870],E,E,N,[[[R[2871]],["cfdata"]],[["cferror"],[R[12],["cferror"]]]]],[5,R[2872],E,E,N,[[[R[2873]]],[[R[12],["cfdata","cferror"]],["cfdata"],["cferror"]]]],[8,R[2444],E,R[2874],N,N],[11,R[2875],E,R[2876],27,[[["self"]],[R[2370]]]],[11,R[2877],E,R[2878],27,[[],[R[2370]]]],[11,R[2371],E,E,28,[[["self"]],[R[2373]]]],[11,R[2372],E,E,28,[[[R[2373]]],[R[2370]]]],[11,R[2879],E,E,28,[[["self"]],["cftype"]]],[11,R[2374],E,E,28,[[],["cftype"]]],[11,R[2375],E,E,28,[[["self"]],[R[2412]]]],[11,R[2376],E,E,28,[[[R[2373]]],[R[2370]]]],[11,R[2377],E,R[2378],28,[[["self"]],["cfindex"]]],[11,"type_of",E,R[2880],28,[[["self"]],[R[2415]]]],[11,"show",E,R[2379],28,[[["self"]]]],[11,R[2380],E,R[2381],28,[[["self"]],["bool"]]],[11,"downcast",E,R[2881],28,[[["self"]],[[R[52]],[R[2384]]]]],[11,R[2382],E,R[2383],28,[[],[[R[52]],[R[2384]]]]],[0,"runloop",R[2349],E,N,N],[3,R[1326],R[2407],E,N,N],[6,R[1623],E,E,N,N],[3,R[1327],E,E,N,N],[6,R[1624],E,E,N,N],[3,R[1328],E,E,N,N],[6,R[1625],E,E,N,N],[17,R[1630],E,E,N,N],[17,R[1631],E,E,N,N],[17,R[1632],E,E,N,N],[17,R[1633],E,E,N,N],[6,R[1626],E,E,N,N],[17,R[1634],E,E,N,N],[17,R[1635],E,E,N,N],[17,R[1636],E,E,N,N],[17,R[1637],E,E,N,N],[17,R[1638],E,E,N,N],[17,R[1639],E,E,N,N],[17,R[1640],E,E,N,N],[3,R[1315],E,E,N,N],[12,"version",E,E,29,N],[12,"info",E,E,29,N],[12,"retain",E,E,29,N],[12,"release",E,E,29,N],[12,R[1289],E,E,29,N],[12,"equal",E,E,29,N],[12,"hash",E,E,29,N],[12,"schedule",E,E,29,N],[12,"cancel",E,E,29,N],[12,"perform",E,E,29,N],[3,R[1316],E,E,N,N],[12,"version",E,E,30,N],[12,"info",E,E,30,N],[12,"retain",E,E,30,N],[12,"release",E,E,30,N],[12,R[1289],E,E,30,N],[12,"equal",E,E,30,N],[12,"hash",E,E,30,N],[12,"getPort",E,E,30,N],[12,"perform",E,E,30,N],[3,R[1317],E,E,N,N],[12,"version",E,E,31,N],[12,"info",E,E,31,N],[12,"retain",E,E,31,N],[12,"release",E,E,31,N],[12,R[1289],E,E,31,N],[6,R[1627],E,E,N,N],[3,R[1318],E,E,N,N],[12,"version",E,E,32,N],[12,"info",E,E,32,N],[12,"retain",E,E,32,N],[12,"release",E,E,32,N],[12,R[1289],E,E,32,N],[6,R[1628],E,E,N,N],[3,R[1329],E,E,N,N],[6,R[1629],E,E,N,N],[7,R[1573],E,E,N,N],[7,R[1574],E,E,N,N],[5,R[1575],E,E,N,[[],["u64"]]],[5,R[1576],E,E,N,[[]]],[5,R[1577],E,E,N,[[]]],[5,R[1578],E,E,N,[[]]],[5,R[1579],E,E,N,[[]]],[5,R[1580],E,E,N,[[]]],[5,R[1581],E,E,N,[[],["f64"]]],[5,R[1582],E,E,N,[[]]],[5,R[1583],E,E,N,[[["f64"],["u8"]],["i32"]]],[5,R[1584],E,E,N,[[],["u8"]]],[5,R[1585],E,E,N,[[]]],[5,R[1586],E,E,N,[[]]],[5,R[1587],E,E,N,[[],["u8"]]],[5,R[1588],E,E,N,[[]]],[5,R[1589],E,E,N,[[]]],[5,R[1590],E,E,N,[[],["u8"]]],[5,R[1591],E,E,N,[[]]],[5,R[1592],E,E,N,[[]]],[5,R[1593],E,E,N,[[],["u8"]]],[5,R[1594],E,E,N,[[]]],[5,R[1595],E,E,N,[[]]],[5,R[1596],E,E,N,[[],["u64"]]],[5,R[1597],E,E,N,[[["i64"]]]],[5,R[1598],E,E,N,[[],["i64"]]],[5,R[1599],E,E,N,[[]]],[5,R[1600],E,E,N,[[],["u8"]]],[5,R[1601],E,E,N,[[]]],[5,R[1602],E,E,N,[[]]],[5,R[1603],E,E,N,[[],["u64"]]],[5,R[1604],E,E,N,[[["u32"],["u8"],["i64"]]]],[5,R[1605],E,E,N,[[],["u32"]]],[5,R[1606],E,E,N,[[],["u8"]]],[5,R[1607],E,E,N,[[],["i64"]]],[5,R[1608],E,E,N,[[]]],[5,R[1609],E,E,N,[[],["u8"]]],[5,R[1610],E,E,N,[[]]],[5,R[1611],E,E,N,[[],["u64"]]],[5,R[1612],E,E,N,[[["u32"],["f64"],["i64"]]]],[5,R[1613],E,E,N,[[],["f64"]]],[5,R[1614],E,E,N,[[["f64"]]]],[5,R[1615],E,E,N,[[],["f64"]]],[5,R[1616],E,E,N,[[],["u8"]]],[5,R[1617],E,E,N,[[],["i64"]]],[5,R[1618],E,E,N,[[]]],[5,R[1619],E,E,N,[[],["u8"]]],[5,R[1620],E,E,N,[[]]],[5,R[1621],E,E,N,[[],["f64"]]],[5,R[1622],E,E,N,[[["f64"]]]],[3,R[2911],E,E,N,N],[3,R[2446],E,E,N,N],[3,R[2447],E,E,N,N],[3,R[2449],E,E,N,N],[6,R[2882],E,E,N,N],[11,R[2883],E,E,33,[[],[R[2435]]]],[11,"get_main",E,E,33,[[],[R[2435]]]],[11,R[2884],E,E,33,[[]]],[11,"stop",E,E,33,[[["self"]]]],[11,R[2885],E,E,33,[[["self"]],[["string"],[R[52],["string"]]]]],[11,R[2886],E,E,33,[[[R[2385]],["self"],[R[2386]]],["bool"]]],[11,"add_timer",E,E,33,[[[R[2385]],["self"],[R[2386]]]]],[11,R[2887],E,E,33,[[[R[2385]],["self"],[R[2386]]]]],[11,R[2888],E,E,33,[[[R[2385]],[R[2366]],["self"]],["bool"]]],[11,"add_source",E,E,33,[[[R[2385]],[R[2366]],["self"]]]],[11,R[2889],E,E,33,[[[R[2385]],[R[2366]],["self"]]]],[11,R[2890],E,E,33,[[[R[2385]],[R[2387]],["self"]],["bool"]]],[11,R[2891],E,E,33,[[[R[2385]],[R[2387]],["self"]]]],[11,R[2892],E,E,33,[[[R[2385]],[R[2387]],["self"]]]],[11,"new",E,E,34,[[["cfindex"],[R[2893]],[R[2355]],[R[2388]],[R[2365]]],[R[2386]]]],[11,R[2894],E,E,35,[[["cfindex"],[R[2364]]],[[R[52],[R[2366]]],[R[2366]]]]],[0,R[788],R[2349],R[2895],N,N],[3,R[1330],R[2408],E,N,N],[6,R[1671],E,E,N,N],[5,R[1666],E,E,N,[[]]],[5,R[1667],E,E,N,[[]]],[5,R[1668],E,E,N,[[["f64"]]]],[5,R[1669],E,E,N,[[["f64"]],["f64"]]],[5,R[1670],E,E,N,[[],["u64"]]],[3,R[2896],E,R[2897],N,N],[11,"new",E,E,36,[[[R[2388]]],[R[2430]]]],[11,"system",E,E,36,[[],[R[2430]]]],[11,R[2898],E,E,36,[[["cfdate"],["self"]],[R[2388]]]],[0,"uuid",R[2349],R[2899],N,N],[3,R[2900],R[2409],E,N,N],[6,R[2472],E,E,N,N],[3,R[1320],E,E,N,N],[12,"byte0",E,E,37,N],[12,"byte1",E,E,37,N],[12,"byte2",E,E,37,N],[12,"byte3",E,E,37,N],[12,"byte4",E,E,37,N],[12,"byte5",E,E,37,N],[12,"byte6",E,E,37,N],[12,"byte7",E,E,37,N],[12,"byte8",E,E,37,N],[12,"byte9",E,E,37,N],[12,"byte10",E,E,37,N],[12,"byte11",E,E,37,N],[12,"byte12",E,E,37,N],[12,"byte13",E,E,37,N],[12,"byte14",E,E,37,N],[12,"byte15",E,E,37,N],[5,R[1736],E,E,N,[[]]],[5,R[1737],E,E,N,[[[R[1307]]]]],[5,R[1738],E,E,N,[[],[R[1307]]]],[5,R[1739],E,E,N,[[],["u64"]]],[3,"CFUUID",E,"A UUID.",N,N],[11,"new",E,E,38,[[],["cfuuid"]]],[14,R[2901],R[2349],E,N,N],[14,R[2902],E,E,N,N],[14,"impl_TCFTypeGeneric",E,E,N,N],[14,R[2903],E,E,N,N],[14,"impl_CFTypeDescriptionGeneric",E,E,N,N],[14,R[2904],E,E,N,N],[11,"from",R[2389],E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[[T],["self"]]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,R[11],E,E,39,[[[U]],[R[12]]]],[11,R[39],E,E,39,[[["self"]],[T]]],[11,R[13],E,E,39,[[["self"]],[T]]],[11,R[14],E,E,39,[[],[R[12]]]],[11,R[18],E,E,39,[[["self"]],[R[40]]]],[11,R[2393],E,E,2,[[],["itemref"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[17],E,E,2,[[[T],["self"]]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,"into",E,E,40,[[],[U]]],[11,R[11],E,E,40,[[[U]],[R[12]]]],[11,R[39],E,E,40,[[["self"]],[T]]],[11,R[13],E,E,40,[[["self"]],[T]]],[11,R[14],E,E,40,[[],[R[12]]]],[11,R[18],E,E,40,[[["self"]],[R[40]]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[48],E,E,41,[[],["i"]]],[11,"into",E,E,41,[[],[U]]],[11,R[11],E,E,41,[[[U]],[R[12]]]],[11,R[39],E,E,41,[[["self"]],[T]]],[11,R[13],E,E,41,[[["self"]],[T]]],[11,R[14],E,E,41,[[],[R[12]]]],[11,R[18],E,E,41,[[["self"]],[R[40]]]],[11,"from",R[2394],E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[17],E,E,3,[[[T],["self"]]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[16],E,E,4,[[["self"]],[T]]],[11,R[17],E,E,4,[[[T],["self"]]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[16],E,E,5,[[["self"]],[T]]],[11,R[17],E,E,5,[[[T],["self"]]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,R[18],E,E,5,[[["self"]],[R[40]]]],[11,R[2393],E,E,9,[[],["itemref"]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[16],E,E,9,[[["self"]],[T]]],[11,R[17],E,E,9,[[[T],["self"]]]],[11,R[11],E,E,9,[[[U]],[R[12]]]],[11,R[39],E,E,9,[[["self"]],[T]]],[11,R[13],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[],[R[12]]]],[11,R[18],E,E,9,[[["self"]],[R[40]]]],[11,R[2393],E,E,10,[[],["itemref"]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[16],E,E,10,[[["self"]],[T]]],[11,R[17],E,E,10,[[[T],["self"]]]],[11,R[11],E,E,10,[[[U]],[R[12]]]],[11,R[39],E,E,10,[[["self"]],[T]]],[11,R[13],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[],[R[12]]]],[11,R[18],E,E,10,[[["self"]],[R[40]]]],[11,R[2393],R[2395],E,11,[[],["itemref"]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[16],E,E,11,[[["self"]],[T]]],[11,R[17],E,E,11,[[[T],["self"]]]],[11,R[11],E,E,11,[[[U]],[R[12]]]],[11,R[39],E,E,11,[[["self"]],[T]]],[11,R[13],E,E,11,[[["self"]],[T]]],[11,R[14],E,E,11,[[],[R[12]]]],[11,R[18],E,E,11,[[["self"]],[R[40]]]],[11,"from",R[2396],E,42,[[[T]],[T]]],[11,"into",E,E,42,[[],[U]]],[11,R[11],E,E,42,[[[U]],[R[12]]]],[11,R[39],E,E,42,[[["self"]],[T]]],[11,R[13],E,E,42,[[["self"]],[T]]],[11,R[14],E,E,42,[[],[R[12]]]],[11,R[18],E,E,42,[[["self"]],[R[40]]]],[11,R[2393],E,E,12,[[],["itemref"]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[16],E,E,12,[[["self"]],[T]]],[11,R[17],E,E,12,[[[T],["self"]]]],[11,R[11],E,E,12,[[[U]],[R[12]]]],[11,R[39],E,E,12,[[["self"]],[T]]],[11,R[13],E,E,12,[[["self"]],[T]]],[11,R[14],E,E,12,[[],[R[12]]]],[11,R[18],E,E,12,[[["self"]],[R[40]]]],[11,"from",R[2397],E,43,[[[T]],[T]]],[11,"into",E,E,43,[[],[U]]],[11,R[11],E,E,43,[[[U]],[R[12]]]],[11,R[39],E,E,43,[[["self"]],[T]]],[11,R[13],E,E,43,[[["self"]],[T]]],[11,R[14],E,E,43,[[],[R[12]]]],[11,R[18],E,E,43,[[["self"]],[R[40]]]],[11,R[2393],E,E,13,[[],["itemref"]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[16],E,E,13,[[["self"]],[T]]],[11,R[17],E,E,13,[[[T],["self"]]]],[11,R[11],E,E,13,[[[U]],[R[12]]]],[11,R[39],E,E,13,[[["self"]],[T]]],[11,R[13],E,E,13,[[["self"]],[T]]],[11,R[14],E,E,13,[[],[R[12]]]],[11,R[18],E,E,13,[[["self"]],[R[40]]]],[11,"from",R[2398],E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[16],E,E,14,[[["self"]],[T]]],[11,R[17],E,E,14,[[[T],["self"]]]],[11,R[11],E,E,14,[[[U]],[R[12]]]],[11,R[39],E,E,14,[[["self"]],[T]]],[11,R[13],E,E,14,[[["self"]],[T]]],[11,R[14],E,E,14,[[],[R[12]]]],[11,R[18],E,E,14,[[["self"]],[R[40]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[16],E,E,15,[[["self"]],[T]]],[11,R[17],E,E,15,[[[T],["self"]]]],[11,R[11],E,E,15,[[[U]],[R[12]]]],[11,R[39],E,E,15,[[["self"]],[T]]],[11,R[13],E,E,15,[[["self"]],[T]]],[11,R[14],E,E,15,[[],[R[12]]]],[11,R[18],E,E,15,[[["self"]],[R[40]]]],[11,"from",E,E,44,[[[T]],[T]]],[11,"into",E,E,44,[[],[U]]],[11,R[11],E,E,44,[[[U]],[R[12]]]],[11,R[39],E,E,44,[[["self"]],[T]]],[11,R[13],E,E,44,[[["self"]],[T]]],[11,R[14],E,E,44,[[],[R[12]]]],[11,R[18],E,E,44,[[["self"]],[R[40]]]],[11,R[2393],E,E,16,[[],["itemref"]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[16],E,E,16,[[["self"]],[T]]],[11,R[17],E,E,16,[[[T],["self"]]]],[11,R[11],E,E,16,[[[U]],[R[12]]]],[11,R[39],E,E,16,[[["self"]],[T]]],[11,R[13],E,E,16,[[["self"]],[T]]],[11,R[14],E,E,16,[[],[R[12]]]],[11,R[18],E,E,16,[[["self"]],[R[40]]]],[11,R[2393],E,E,17,[[],["itemref"]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[16],E,E,17,[[["self"]],[T]]],[11,R[17],E,E,17,[[[T],["self"]]]],[11,R[11],E,E,17,[[[U]],[R[12]]]],[11,R[39],E,E,17,[[["self"]],[T]]],[11,R[13],E,E,17,[[["self"]],[T]]],[11,R[14],E,E,17,[[],[R[12]]]],[11,R[18],E,E,17,[[["self"]],[R[40]]]],[11,"from",R[2399],E,45,[[[T]],[T]]],[11,"into",E,E,45,[[],[U]]],[11,R[11],E,E,45,[[[U]],[R[12]]]],[11,R[39],E,E,45,[[["self"]],[T]]],[11,R[13],E,E,45,[[["self"]],[T]]],[11,R[14],E,E,45,[[],[R[12]]]],[11,R[18],E,E,45,[[["self"]],[R[40]]]],[11,R[2393],E,E,18,[[],["itemref"]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[16],E,E,18,[[["self"]],[T]]],[11,R[17],E,E,18,[[[T],["self"]]]],[11,R[170],E,E,18,[[["self"]],["string"]]],[11,R[11],E,E,18,[[[U]],[R[12]]]],[11,R[39],E,E,18,[[["self"]],[T]]],[11,R[13],E,E,18,[[["self"]],[T]]],[11,R[14],E,E,18,[[],[R[12]]]],[11,R[18],E,E,18,[[["self"]],[R[40]]]],[11,"from",R[2400],E,46,[[[T]],[T]]],[11,"into",E,E,46,[[],[U]]],[11,R[11],E,E,46,[[[U]],[R[12]]]],[11,R[39],E,E,46,[[["self"]],[T]]],[11,R[13],E,E,46,[[["self"]],[T]]],[11,R[14],E,E,46,[[],[R[12]]]],[11,R[18],E,E,46,[[["self"]],[R[40]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[16],E,E,19,[[["self"]],[T]]],[11,R[17],E,E,19,[[[T],["self"]]]],[11,R[11],E,E,19,[[[U]],[R[12]]]],[11,R[39],E,E,19,[[["self"]],[T]]],[11,R[13],E,E,19,[[["self"]],[T]]],[11,R[14],E,E,19,[[],[R[12]]]],[11,R[18],E,E,19,[[["self"]],[R[40]]]],[11,R[2393],E,E,20,[[],["itemref"]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[16],E,E,20,[[["self"]],[T]]],[11,R[17],E,E,20,[[[T],["self"]]]],[11,R[11],E,E,20,[[[U]],[R[12]]]],[11,R[39],E,E,20,[[["self"]],[T]]],[11,R[13],E,E,20,[[["self"]],[T]]],[11,R[14],E,E,20,[[],[R[12]]]],[11,R[18],E,E,20,[[["self"]],[R[40]]]],[11,"from",R[2401],E,47,[[[T]],[T]]],[11,"into",E,E,47,[[],[U]]],[11,R[11],E,E,47,[[[U]],[R[12]]]],[11,R[39],E,E,47,[[["self"]],[T]]],[11,R[13],E,E,47,[[["self"]],[T]]],[11,R[14],E,E,47,[[],[R[12]]]],[11,R[18],E,E,47,[[["self"]],[R[40]]]],[11,"from",E,E,48,[[[T]],[T]]],[11,"into",E,E,48,[[],[U]]],[11,R[11],E,E,48,[[[U]],[R[12]]]],[11,R[39],E,E,48,[[["self"]],[T]]],[11,R[13],E,E,48,[[["self"]],[T]]],[11,R[14],E,E,48,[[],[R[12]]]],[11,R[18],E,E,48,[[["self"]],[R[40]]]],[11,R[2393],E,E,21,[[],["itemref"]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[16],E,E,21,[[["self"]],[T]]],[11,R[17],E,E,21,[[[T],["self"]]]],[11,R[11],E,E,21,[[[U]],[R[12]]]],[11,R[39],E,E,21,[[["self"]],[T]]],[11,R[13],E,E,21,[[["self"]],[T]]],[11,R[14],E,E,21,[[],[R[12]]]],[11,R[18],E,E,21,[[["self"]],[R[40]]]],[11,"from",R[2402],E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[16],E,E,22,[[["self"]],[T]]],[11,R[17],E,E,22,[[[T],["self"]]]],[11,R[11],E,E,22,[[[U]],[R[12]]]],[11,R[39],E,E,22,[[["self"]],[T]]],[11,R[13],E,E,22,[[["self"]],[T]]],[11,R[14],E,E,22,[[],[R[12]]]],[11,R[18],E,E,22,[[["self"]],[R[40]]]],[11,"from",E,E,49,[[[T]],[T]]],[11,"into",E,E,49,[[],[U]]],[11,R[11],E,E,49,[[[U]],[R[12]]]],[11,R[39],E,E,49,[[["self"]],[T]]],[11,R[13],E,E,49,[[["self"]],[T]]],[11,R[14],E,E,49,[[],[R[12]]]],[11,R[18],E,E,49,[[["self"]],[R[40]]]],[11,R[2393],E,E,23,[[],["itemref"]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[16],E,E,23,[[["self"]],[T]]],[11,R[17],E,E,23,[[[T],["self"]]]],[11,R[11],E,E,23,[[[U]],[R[12]]]],[11,R[39],E,E,23,[[["self"]],[T]]],[11,R[13],E,E,23,[[["self"]],[T]]],[11,R[14],E,E,23,[[],[R[12]]]],[11,R[18],E,E,23,[[["self"]],[R[40]]]],[11,"from",R[2403],E,50,[[[T]],[T]]],[11,"into",E,E,50,[[],[U]]],[11,R[11],E,E,50,[[[U]],[R[12]]]],[11,R[39],E,E,50,[[["self"]],[T]]],[11,R[13],E,E,50,[[["self"]],[T]]],[11,R[14],E,E,50,[[],[R[12]]]],[11,R[18],E,E,50,[[["self"]],[R[40]]]],[11,R[2393],E,E,24,[[],["itemref"]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[16],E,E,24,[[["self"]],[T]]],[11,R[17],E,E,24,[[[T],["self"]]]],[11,R[170],E,E,24,[[["self"]],["string"]]],[11,R[11],E,E,24,[[[U]],[R[12]]]],[11,R[39],E,E,24,[[["self"]],[T]]],[11,R[13],E,E,24,[[["self"]],[T]]],[11,R[14],E,E,24,[[],[R[12]]]],[11,R[18],E,E,24,[[["self"]],[R[40]]]],[11,"from",R[2404],E,51,[[[T]],[T]]],[11,"into",E,E,51,[[],[U]]],[11,R[11],E,E,51,[[[U]],[R[12]]]],[11,R[39],E,E,51,[[["self"]],[T]]],[11,R[13],E,E,51,[[["self"]],[T]]],[11,R[14],E,E,51,[[],[R[12]]]],[11,R[18],E,E,51,[[["self"]],[R[40]]]],[11,R[2393],E,E,25,[[],["itemref"]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[16],E,E,25,[[["self"]],[T]]],[11,R[17],E,E,25,[[[T],["self"]]]],[11,R[11],E,E,25,[[[U]],[R[12]]]],[11,R[39],E,E,25,[[["self"]],[T]]],[11,R[13],E,E,25,[[["self"]],[T]]],[11,R[14],E,E,25,[[],[R[12]]]],[11,R[18],E,E,25,[[["self"]],[R[40]]]],[11,"from",R[2405],E,52,[[[T]],[T]]],[11,"into",E,E,52,[[],[U]]],[11,R[11],E,E,52,[[[U]],[R[12]]]],[11,R[39],E,E,52,[[["self"]],[T]]],[11,R[13],E,E,52,[[["self"]],[T]]],[11,R[14],E,E,52,[[],[R[12]]]],[11,R[18],E,E,52,[[["self"]],[R[40]]]],[11,R[2393],E,E,26,[[],["itemref"]]],[11,"from",E,E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[16],E,E,26,[[["self"]],[T]]],[11,R[17],E,E,26,[[[T],["self"]]]],[11,R[11],E,E,26,[[[U]],[R[12]]]],[11,R[39],E,E,26,[[["self"]],[T]]],[11,R[13],E,E,26,[[["self"]],[T]]],[11,R[14],E,E,26,[[],[R[12]]]],[11,R[18],E,E,26,[[["self"]],[R[40]]]],[11,"from",R[2406],E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[16],E,E,28,[[["self"]],[T]]],[11,R[17],E,E,28,[[[T],["self"]]]],[11,R[11],E,E,28,[[[U]],[R[12]]]],[11,R[39],E,E,28,[[["self"]],[T]]],[11,R[13],E,E,28,[[["self"]],[T]]],[11,R[14],E,E,28,[[],[R[12]]]],[11,R[18],E,E,28,[[["self"]],[R[40]]]],[11,"from",R[2407],E,53,[[[T]],[T]]],[11,"into",E,E,53,[[],[U]]],[11,R[11],E,E,53,[[[U]],[R[12]]]],[11,R[39],E,E,53,[[["self"]],[T]]],[11,R[13],E,E,53,[[["self"]],[T]]],[11,R[14],E,E,53,[[],[R[12]]]],[11,R[18],E,E,53,[[["self"]],[R[40]]]],[11,"from",E,E,54,[[[T]],[T]]],[11,"into",E,E,54,[[],[U]]],[11,R[11],E,E,54,[[[U]],[R[12]]]],[11,R[39],E,E,54,[[["self"]],[T]]],[11,R[13],E,E,54,[[["self"]],[T]]],[11,R[14],E,E,54,[[],[R[12]]]],[11,R[18],E,E,54,[[["self"]],[R[40]]]],[11,"from",E,E,55,[[[T]],[T]]],[11,"into",E,E,55,[[],[U]]],[11,R[11],E,E,55,[[[U]],[R[12]]]],[11,R[39],E,E,55,[[["self"]],[T]]],[11,R[13],E,E,55,[[["self"]],[T]]],[11,R[14],E,E,55,[[],[R[12]]]],[11,R[18],E,E,55,[[["self"]],[R[40]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[11],E,E,29,[[[U]],[R[12]]]],[11,R[39],E,E,29,[[["self"]],[T]]],[11,R[13],E,E,29,[[["self"]],[T]]],[11,R[14],E,E,29,[[],[R[12]]]],[11,R[18],E,E,29,[[["self"]],[R[40]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[11],E,E,30,[[[U]],[R[12]]]],[11,R[39],E,E,30,[[["self"]],[T]]],[11,R[13],E,E,30,[[["self"]],[T]]],[11,R[14],E,E,30,[[],[R[12]]]],[11,R[18],E,E,30,[[["self"]],[R[40]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[11],E,E,31,[[[U]],[R[12]]]],[11,R[39],E,E,31,[[["self"]],[T]]],[11,R[13],E,E,31,[[["self"]],[T]]],[11,R[14],E,E,31,[[],[R[12]]]],[11,R[18],E,E,31,[[["self"]],[R[40]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[11],E,E,32,[[[U]],[R[12]]]],[11,R[39],E,E,32,[[["self"]],[T]]],[11,R[13],E,E,32,[[["self"]],[T]]],[11,R[14],E,E,32,[[],[R[12]]]],[11,R[18],E,E,32,[[["self"]],[R[40]]]],[11,"from",E,E,56,[[[T]],[T]]],[11,"into",E,E,56,[[],[U]]],[11,R[11],E,E,56,[[[U]],[R[12]]]],[11,R[39],E,E,56,[[["self"]],[T]]],[11,R[13],E,E,56,[[["self"]],[T]]],[11,R[14],E,E,56,[[],[R[12]]]],[11,R[18],E,E,56,[[["self"]],[R[40]]]],[11,R[2393],E,E,33,[[],["itemref"]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[16],E,E,33,[[["self"]],[T]]],[11,R[17],E,E,33,[[[T],["self"]]]],[11,R[11],E,E,33,[[[U]],[R[12]]]],[11,R[39],E,E,33,[[["self"]],[T]]],[11,R[13],E,E,33,[[["self"]],[T]]],[11,R[14],E,E,33,[[],[R[12]]]],[11,R[18],E,E,33,[[["self"]],[R[40]]]],[11,R[2393],E,E,34,[[],["itemref"]]],[11,"from",E,E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[16],E,E,34,[[["self"]],[T]]],[11,R[17],E,E,34,[[[T],["self"]]]],[11,R[11],E,E,34,[[[U]],[R[12]]]],[11,R[39],E,E,34,[[["self"]],[T]]],[11,R[13],E,E,34,[[["self"]],[T]]],[11,R[14],E,E,34,[[],[R[12]]]],[11,R[18],E,E,34,[[["self"]],[R[40]]]],[11,R[2393],E,E,35,[[],["itemref"]]],[11,"from",E,E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[16],E,E,35,[[["self"]],[T]]],[11,R[17],E,E,35,[[[T],["self"]]]],[11,R[11],E,E,35,[[[U]],[R[12]]]],[11,R[39],E,E,35,[[["self"]],[T]]],[11,R[13],E,E,35,[[["self"]],[T]]],[11,R[14],E,E,35,[[],[R[12]]]],[11,R[18],E,E,35,[[["self"]],[R[40]]]],[11,R[2393],E,E,57,[[],["itemref"]]],[11,"from",E,E,57,[[[T]],[T]]],[11,"into",E,E,57,[[],[U]]],[11,R[16],E,E,57,[[["self"]],[T]]],[11,R[17],E,E,57,[[[T],["self"]]]],[11,R[11],E,E,57,[[[U]],[R[12]]]],[11,R[39],E,E,57,[[["self"]],[T]]],[11,R[13],E,E,57,[[["self"]],[T]]],[11,R[14],E,E,57,[[],[R[12]]]],[11,R[18],E,E,57,[[["self"]],[R[40]]]],[11,"from",R[2408],E,58,[[[T]],[T]]],[11,"into",E,E,58,[[],[U]]],[11,R[11],E,E,58,[[[U]],[R[12]]]],[11,R[39],E,E,58,[[["self"]],[T]]],[11,R[13],E,E,58,[[["self"]],[T]]],[11,R[14],E,E,58,[[],[R[12]]]],[11,R[18],E,E,58,[[["self"]],[R[40]]]],[11,R[2393],E,E,36,[[],["itemref"]]],[11,"from",E,E,36,[[[T]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,R[16],E,E,36,[[["self"]],[T]]],[11,R[17],E,E,36,[[[T],["self"]]]],[11,R[11],E,E,36,[[[U]],[R[12]]]],[11,R[39],E,E,36,[[["self"]],[T]]],[11,R[13],E,E,36,[[["self"]],[T]]],[11,R[14],E,E,36,[[],[R[12]]]],[11,R[18],E,E,36,[[["self"]],[R[40]]]],[11,"from",R[2409],E,59,[[[T]],[T]]],[11,"into",E,E,59,[[],[U]]],[11,R[11],E,E,59,[[[U]],[R[12]]]],[11,R[39],E,E,59,[[["self"]],[T]]],[11,R[13],E,E,59,[[["self"]],[T]]],[11,R[14],E,E,59,[[],[R[12]]]],[11,R[18],E,E,59,[[["self"]],[R[40]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,"into",E,E,37,[[],[U]]],[11,R[16],E,E,37,[[["self"]],[T]]],[11,R[17],E,E,37,[[[T],["self"]]]],[11,R[11],E,E,37,[[[U]],[R[12]]]],[11,R[39],E,E,37,[[["self"]],[T]]],[11,R[13],E,E,37,[[["self"]],[T]]],[11,R[14],E,E,37,[[],[R[12]]]],[11,R[18],E,E,37,[[["self"]],[R[40]]]],[11,R[2393],E,E,38,[[],["itemref"]]],[11,"from",E,E,38,[[[T]],[T]]],[11,"into",E,E,38,[[],[U]]],[11,R[16],E,E,38,[[["self"]],[T]]],[11,R[17],E,E,38,[[[T],["self"]]]],[11,R[11],E,E,38,[[[U]],[R[12]]]],[11,R[39],E,E,38,[[["self"]],[T]]],[11,R[13],E,E,38,[[["self"]],[T]]],[11,R[14],E,E,38,[[],[R[12]]]],[11,R[18],E,E,38,[[["self"]],[R[40]]]],[11,"clone",R[2400],E,19,[[["self"]],[R[1745]]]],[11,"clone",R[2402],E,22,[[["self"]],[R[1747]]]],[11,"clone",R[2389],E,0,[[["self"]],[R[1740]]]],[11,"clone",R[2394],E,4,[[["self"]],["cfrange"]]],[11,"clone",E,E,5,[[["self"]],[R[1742]]]],[11,"clone",E,E,3,[[["self"]],[R[1741]]]],[11,"clone",R[2409],E,37,[[["self"]],[R[1307]]]],[11,"clone",R[2398],E,14,[[["self"]],[R[1743]]]],[11,"clone",E,E,15,[[["self"]],[R[1744]]]],[11,"into",R[2394],E,3,[[],[R[51]]]],[11,R[79],R[2409],E,37,[[],[R[1307]]]],[11,R[2371],R[2389],E,2,[[["self"]],[R[2410]]]],[11,R[2372],E,E,2,[[[R[2410]]],["cfarray"]]],[11,R[2375],E,E,2,[[["self"]],[R[2412]]]],[11,R[2376],E,E,2,[[[R[2410]]],["cfarray"]]],[11,R[18],E,E,2,[[],[R[2415]]]],[11,R[2371],R[2394],E,10,[[["self"]],[R[2414]]]],[11,R[2372],E,E,10,[[[R[2414]]],[R[2429]]]],[11,R[2375],E,E,10,[[["self"]],[R[2412]]]],[11,R[2376],E,E,10,[[[R[2414]]],[R[2429]]]],[11,R[18],E,E,10,[[],[R[2415]]]],[11,R[2371],E,E,9,[[["self"]],[R[2412]]]],[11,R[2372],E,E,9,[[[R[2412]]],["cftype"]]],[11,R[2375],E,E,9,[[["self"]],[R[2412]]]],[11,R[2376],E,E,9,[[[R[2412]]],["cftype"]]],[11,R[18],E,E,9,[[],[R[2415]]]],[11,R[2371],R[2395],E,11,[[["self"]],[R[2416]]]],[11,R[2372],E,E,11,[[[R[2416]]],[R[2433]]]],[11,R[2375],E,E,11,[[["self"]],[R[2412]]]],[11,R[2376],E,E,11,[[[R[2416]]],[R[2433]]]],[11,R[18],E,E,11,[[],[R[2415]]]],[11,R[2371],R[2396],E,12,[[["self"]],[R[2905]]]],[11,R[2372],E,E,12,[[[R[2905]]],["cfdata"]]],[11,R[2375],E,E,12,[[["self"]],[R[2412]]]],[11,R[2376],E,E,12,[[[R[2905]]],["cfdata"]]],[11,R[18],E,E,12,[[],[R[2415]]]],[11,R[2371],R[2397],E,13,[[["self"]],[R[2906]]]],[11,R[2372],E,E,13,[[[R[2906]]],["cfdate"]]],[11,R[2375],E,E,13,[[["self"]],[R[2412]]]],[11,R[2376],E,E,13,[[[R[2906]]],["cfdate"]]],[11,R[18],E,E,13,[[],[R[2415]]]],[11,R[2371],R[2398],E,16,[[["self"]],[R[2417]]]],[11,R[2372],E,E,16,[[[R[2417]]],[R[2356]]]],[11,R[2375],E,E,16,[[["self"]],[R[2412]]]],[11,R[2376],E,E,16,[[[R[2417]]],[R[2356]]]],[11,R[18],E,E,16,[[],[R[2415]]]],[11,R[2371],E,E,17,[[["self"]],[R[2418]]]],[11,R[2372],E,E,17,[[[R[2418]]],[R[2359]]]],[11,R[2375],E,E,17,[[["self"]],[R[2412]]]],[11,R[2376],E,E,17,[[[R[2418]]],[R[2359]]]],[11,R[18],E,E,17,[[],[R[2415]]]],[11,R[2371],R[2399],E,18,[[["self"]],[R[2419]]]],[11,R[2372],E,E,18,[[[R[2419]]],["cferror"]]],[11,R[2375],E,E,18,[[["self"]],[R[2412]]]],[11,R[2376],E,E,18,[[[R[2419]]],["cferror"]]],[11,R[18],E,E,18,[[],[R[2415]]]],[11,R[2371],R[2400],E,20,[[["self"]],[R[2420]]]],[11,R[2372],E,E,20,[[[R[2420]]],[R[2364]]]],[11,R[2375],E,E,20,[[["self"]],[R[2412]]]],[11,R[2376],E,E,20,[[[R[2420]]],[R[2364]]]],[11,R[18],E,E,20,[[],[R[2415]]]],[11,R[2371],R[2401],E,21,[[["self"]],[R[2421]]]],[11,R[2372],E,E,21,[[[R[2421]]],[R[2908]]]],[11,R[2375],E,E,21,[[["self"]],[R[2412]]]],[11,R[2376],E,E,21,[[[R[2421]]],[R[2908]]]],[11,R[18],E,E,21,[[],[R[2415]]]],[11,R[2371],R[2402],E,23,[[["self"]],["cfsetref"]]],[11,R[2372],E,E,23,[[["cfsetref"]],["cfset"]]],[11,R[2375],E,E,23,[[["self"]],[R[2412]]]],[11,R[2376],E,E,23,[[["cfsetref"]],["cfset"]]],[11,R[18],E,E,23,[[],[R[2415]]]],[11,R[2371],R[2403],E,24,[[["self"]],[R[2422]]]],[11,R[2372],E,E,24,[[[R[2422]]],[R[2368]]]],[11,R[2375],E,E,24,[[["self"]],[R[2412]]]],[11,R[2376],E,E,24,[[[R[2422]]],[R[2368]]]],[11,R[18],E,E,24,[[],[R[2415]]]],[11,R[2371],R[2404],E,25,[[["self"]],["cfurlref"]]],[11,R[2372],E,E,25,[[["cfurlref"]],["cfurl"]]],[11,R[2375],E,E,25,[[["self"]],[R[2412]]]],[11,R[2376],E,E,25,[[["cfurlref"]],["cfurl"]]],[11,R[18],E,E,25,[[],[R[2415]]]],[11,R[2371],R[2405],E,26,[[["self"]],[R[2423]]]],[11,R[2372],E,E,26,[[[R[2423]]],[R[2434]]]],[11,R[2375],E,E,26,[[["self"]],[R[2412]]]],[11,R[2376],E,E,26,[[[R[2423]]],[R[2434]]]],[11,R[18],E,E,26,[[],[R[2415]]]],[11,R[2371],R[2407],E,33,[[["self"]],[R[2424]]]],[11,R[2372],E,E,33,[[[R[2424]]],[R[2435]]]],[11,R[2375],E,E,33,[[["self"]],[R[2412]]]],[11,R[2376],E,E,33,[[[R[2424]]],[R[2435]]]],[11,R[18],E,E,33,[[],[R[2415]]]],[11,R[2371],E,E,34,[[["self"]],[R[2425]]]],[11,R[2372],E,E,34,[[[R[2425]]],[R[2386]]]],[11,R[2375],E,E,34,[[["self"]],[R[2412]]]],[11,R[2376],E,E,34,[[[R[2425]]],[R[2386]]]],[11,R[18],E,E,34,[[],[R[2415]]]],[11,R[2371],E,E,35,[[["self"]],[R[2426]]]],[11,R[2372],E,E,35,[[[R[2426]]],[R[2366]]]],[11,R[2375],E,E,35,[[["self"]],[R[2412]]]],[11,R[2376],E,E,35,[[[R[2426]]],[R[2366]]]],[11,R[18],E,E,35,[[],[R[2415]]]],[11,R[2371],E,E,57,[[["self"]],[R[2427]]]],[11,R[2372],E,E,57,[[[R[2427]]],[R[2387]]]],[11,R[2375],E,E,57,[[["self"]],[R[2412]]]],[11,R[2376],E,E,57,[[[R[2427]]],[R[2387]]]],[11,R[18],E,E,57,[[],[R[2415]]]],[11,R[2371],R[2408],E,36,[[["self"]],[R[2428]]]],[11,R[2372],E,E,36,[[[R[2428]]],[R[2430]]]],[11,R[2375],E,E,36,[[["self"]],[R[2412]]]],[11,R[2376],E,E,36,[[[R[2428]]],[R[2430]]]],[11,R[18],E,E,36,[[],[R[2415]]]],[11,R[2371],R[2409],E,38,[[["self"]],[R[2907]]]],[11,R[2372],E,E,38,[[[R[2907]]],["cfuuid"]]],[11,R[2375],E,E,38,[[["self"]],[R[2412]]]],[11,R[2376],E,E,38,[[[R[2907]]],["cfuuid"]]],[11,R[18],E,E,38,[[],[R[2415]]]],[11,"eq",R[2389],E,2,[[["cfarray"],["self"]],["bool"]]],[11,"eq",R[2394],E,9,[[["cftype"],["self"]],["bool"]]],[11,"eq",E,E,10,[[[R[2429]],["self"]],["bool"]]],[11,"eq",R[2395],E,11,[[["self"],[R[2433]]],["bool"]]],[11,"eq",R[2396],E,12,[[["self"],["cfdata"]],["bool"]]],[11,"eq",R[2397],E,13,[[["self"],["cfdate"]],["bool"]]],[11,"eq",R[2398],E,16,[[[R[2356]],["self"]],["bool"]]],[11,"eq",E,E,17,[[[R[2359]],["self"]],["bool"]]],[11,"eq",R[2399],E,18,[[["cferror"],["self"]],["bool"]]],[11,"eq",R[2400],E,20,[[["self"],[R[2364]]],["bool"]]],[11,"eq",R[2401],E,21,[[[R[2908]],["self"]],["bool"]]],[11,"eq",R[2402],E,23,[[["self"],["cfset"]],["bool"]]],[11,"eq",R[2403],E,24,[[["self"],[R[2368]]],["bool"]]],[11,"eq",R[2404],E,25,[[["self"],["cfurl"]],["bool"]]],[11,"eq",R[2405],E,26,[[[R[2434]],["self"]],["bool"]]],[11,"eq",R[2406],E,28,[[["self"],[R[2370]]],["bool"]]],[11,"eq",R[2407],E,33,[[[R[2435]],["self"]],["bool"]]],[11,"eq",E,E,34,[[["self"],[R[2386]]],["bool"]]],[11,"eq",E,E,35,[[[R[2366]],["self"]],["bool"]]],[11,"eq",E,E,57,[[[R[2387]],["self"]],["bool"]]],[11,"eq",R[2408],E,36,[[["self"],[R[2430]]],["bool"]]],[11,"eq",R[2409],E,38,[[["self"],["cfuuid"]],["bool"]]],[11,"clone",R[2389],E,2,[[["self"]],["cfarray"]]],[11,"clone",R[2394],E,9,[[["self"]],["cftype"]]],[11,"clone",E,E,10,[[["self"]],[R[2429]]]],[11,"clone",R[2395],E,11,[[["self"]],[R[2433]]]],[11,"clone",R[2396],E,12,[[["self"]],["cfdata"]]],[11,"clone",R[2397],E,13,[[["self"]],["cfdate"]]],[11,"clone",R[2398],E,16,[[["self"]],[R[2356]]]],[11,"clone",E,E,17,[[["self"]],[R[2359]]]],[11,"clone",R[2399],E,18,[[["self"]],["cferror"]]],[11,"clone",R[2400],E,20,[[["self"]],[R[2364]]]],[11,"clone",R[2401],E,21,[[["self"]],[R[2908]]]],[11,"clone",R[2402],E,23,[[["self"]],["cfset"]]],[11,"clone",R[2403],E,24,[[["self"]],[R[2368]]]],[11,"clone",R[2404],E,25,[[["self"]],["cfurl"]]],[11,"clone",R[2405],E,26,[[["self"]],[R[2434]]]],[11,"clone",R[2406],E,28,[[["self"]],[R[2370]]]],[11,"clone",R[2407],E,33,[[["self"]],[R[2435]]]],[11,"clone",E,E,34,[[["self"]],[R[2386]]]],[11,"clone",E,E,35,[[["self"]],[R[2366]]]],[11,"clone",E,E,57,[[["self"]],[R[2387]]]],[11,"clone",R[2408],E,36,[[["self"]],[R[2430]]]],[11,"clone",R[2409],E,38,[[["self"]],["cfuuid"]]],[11,"cmp",R[2397],E,13,[[["self"],["cfdate"]],[R[51]]]],[11,"cmp",R[2401],E,21,[[[R[2908]],["self"]],[R[51]]]],[11,"from",R[2395],E,11,[[["bool"]],[R[2433]]]],[11,"from",R[2401],E,21,[[["i32"]],["self"]]],[11,"from",E,E,21,[[["i64"]],["self"]]],[11,"from",E,E,21,[[["f32"]],["self"]]],[11,"from",E,E,21,[[["f64"]],["self"]]],[11,"from",R[2403],E,24,[[["str"]],[R[2368]]]],[11,"drop",R[2389],E,2,[[["self"]]]],[11,"drop",R[2394],E,9,[[["self"]]]],[11,"drop",E,E,10,[[["self"]]]],[11,"drop",R[2395],E,11,[[["self"]]]],[11,"drop",R[2396],E,12,[[["self"]]]],[11,"drop",R[2397],E,13,[[["self"]]]],[11,"drop",R[2398],E,16,[[["self"]]]],[11,"drop",E,E,17,[[["self"]]]],[11,"drop",R[2399],E,18,[[["self"]]]],[11,"drop",R[2400],E,20,[[["self"]]]],[11,"drop",R[2401],E,21,[[["self"]]]],[11,"drop",R[2402],E,23,[[["self"]]]],[11,"drop",R[2403],E,24,[[["self"]]]],[11,"drop",R[2404],E,25,[[["self"]]]],[11,"drop",R[2405],E,26,[[["self"]]]],[11,"drop",R[2406],E,28,[[["self"]]]],[11,"drop",R[2407],E,33,[[["self"]]]],[11,"drop",E,E,34,[[["self"]]]],[11,"drop",E,E,35,[[["self"]]]],[11,"drop",E,E,57,[[["self"]]]],[11,"drop",R[2408],E,36,[[["self"]]]],[11,"drop",R[2409],E,38,[[["self"]]]],[11,R[264],R[2397],E,13,[[["self"],["cfdate"]],[[R[51]],[R[52],[R[51]]]]]],[11,R[264],R[2401],E,21,[[[R[2908]],["self"]],[[R[51]],[R[52],[R[51]]]]]],[11,"next",R[2389],E,41,[[["self"]],[["itemref"],[R[52],["itemref"]]]]],[11,"len",E,E,41,[[["self"]],[R[9]]]],[11,R[79],R[2408],E,36,[[],[R[2430]]]],[11,R[407],R[2403],R[2909],24,[[["str"]],[[R[12],[R[2368]]],[R[2368]]]]],[11,"fmt",R[2389],E,40,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,2,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[2394],E,9,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[2395],E,11,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[2396],E,12,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[2397],E,13,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[2398],E,16,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,17,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[2399],E,18,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[2401],E,21,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[2402],E,23,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[2403],E,24,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[2404],E,25,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[2407],E,33,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[2408],E,36,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[2409],E,38,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[2399],E,18,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[2403],E,24,[[["self"],[R[29]]],[R[12]]]],[11,"deref",R[2389],E,40,[[["self"]],[T]]],[11,"deref",R[2396],E,12,[[["self"]]]],[11,R[30],R[2399],E,18,[[["self"]],["str"]]],[11,R[2452],R[2400],E,20,[[["self"]],["rawfd"]]],[11,"init",R[2394],E,4,[[["i64"]],["cfrange"]]]],"p":[[3,R[1308]],[8,"FromVoid"],[3,"CFArray"],[4,R[1310]],[3,"CFRange"],[3,R[1309]],[8,R[1453]],[8,R[2438]],[8,"TCFType"],[3,"CFType"],[3,R[2440]],[3,R[2910]],[3,"CFData"],[3,"CFDate"],[3,R[1311]],[3,R[1312]],[3,R[2441]],[3,R[2442]],[3,"CFError"],[3,R[1313]],[3,R[2443]],[3,"CFNumber"],[3,R[1319]],[3,"CFSet"],[3,"CFString"],[3,"CFURL"],[3,"CFBundle"],[8,R[2444]],[3,R[2445]],[3,R[1315]],[3,R[1316]],[3,R[1317]],[3,R[1318]],[3,R[2911]],[3,R[2446]],[3,R[2447]],[3,R[2896]],[3,R[1320]],[3,"CFUUID"],[3,R[1748]],[3,"ItemRef"],[3,R[2448]],[3,R[2828]],[3,R[2834]],[3,R[1322]],[3,R[1749]],[3,R[1323]],[3,R[1325]],[4,R[1545]],[3,"__CFSet"],[3,R[1652]],[3,"__CFURL"],[3,R[1457]],[3,R[1326]],[3,R[1327]],[3,R[1328]],[3,R[1329]],[3,R[2449]],[3,R[1330]],[3,R[2900]]]};
searchIndex[R[237]]={"doc":"Determine displayed width of `char` and `str` types…","i":[[17,R[243],R[237],"The version of Unicode that this version of unicode-width…",N,N],[8,R[241],E,"Methods for determining displayed width of Unicode…",N,N],[10,"width",E,R[238],0,[[],[[R[52],[R[9]]],[R[9]]]]],[10,R[239],E,R[238],0,[[],[[R[52],[R[9]]],[R[9]]]]],[8,R[242],E,"Methods for determining displayed width of Unicode strings.",N,N],[10,"width",E,R[240],1,[[["self"]],[R[9]]]],[10,R[239],E,R[240],1,[[["self"]],[R[9]]]]],"p":[[8,R[241]],[8,R[242]]]};
searchIndex[R[244]]={"doc":"Internal crate used by foreign-types","i":[[3,"Opaque",R[244],R[729],N,N],[8,R[247],E,R[730],N,N],[16,"CType",E,R[245],0,N],[16,"Ref",E,R[731],0,N],[10,R[732],E,R[733],0,[[],["self"]]],[10,"as_ptr",E,R[246],0,[[["self"]]]],[8,R[248],E,R[734],N,N],[16,"CType",E,R[245],1,N],[11,R[732],E,R[735],1,[[],["self"]]],[11,R[736],E,R[737],1,[[],["self"]]],[11,"as_ptr",E,R[246],1,[[["self"]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,"into",E,E,2,[[],[U]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]]],"p":[[8,R[247]],[8,R[248]],[3,"Opaque"]]};
searchIndex[R[249]]={"doc":"A typesafe bitmask flag generator useful for sets of…","i":[[14,R[249],R[249],"The macro used to generate the flag structure.",N,N]],"p":[]};
searchIndex[R[250]]={"doc":"Crate `utf8-ranges` converts ranges of Unicode scalar…","i":[[3,R[253],R[250],"A single inclusive range of UTF-8 bytes.",N,N],[12,"start",E,"Start of byte range (inclusive).",0,N],[12,"end",E,"End of byte range (inclusive).",0,N],[3,R[255],E,"An iterator over ranges of matching UTF-8 byte sequences.",N,N],[4,R[254],E,"Utf8Sequence represents a sequence of byte ranges.",N,N],[13,"One",E,"One byte range.",1,N],[13,"Two",E,"Two successive byte ranges.",1,N],[13,"Three",E,"Three successive byte ranges.",1,N],[13,"Four",E,"Four successive byte ranges.",1,N],[11,R[818],E,"Returns the underlying sequence of byte ranges as a slice.",1,[[["self"]]]],[11,"len",E,"Returns the number of byte ranges in this sequence.",1,[[["self"]],[R[9]]]],[11,"matches",E,"Returns true if and only if a prefix of `bytes` matches…",1,[[["self"]],["bool"]]],[11,"matches",E,"Returns true if and only if the given byte is in this range.",0,[[["u8"],["self"]],["bool"]]],[11,"new",E,"Create a new iterator over UTF-8 byte ranges for the…",2,[[["char"]],["self"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[[T],["self"]]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[48],E,E,2,[[],["i"]]],[11,"into",E,E,2,[[],[U]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,[[[T],["self"]]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"eq",E,E,1,[[["self"],[R[251]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[251]]],["bool"]]],[11,"eq",E,E,0,[[[R[252]],["self"]],["bool"]]],[11,"ne",E,E,0,[[[R[252]],["self"]],["bool"]]],[11,"clone",E,E,1,[[["self"]],[R[251]]]],[11,"clone",E,E,0,[[["self"]],[R[252]]]],[11,"next",E,E,2,[[["self"]],[R[52]]]],[11,"fmt",E,E,1,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[R[12]]]]],"p":[[3,R[253]],[4,R[254]],[3,R[255]]]};
searchIndex[R[279]]={"doc":"This is a library for controlling colours and formatting,…","i":[[3,"Prefix",R[279],"Like `ANSIString`, but only displays the style prefix.",N,N],[3,"Infix",E,"Like `ANSIString`, but only displays the difference…",N,N],[3,"Suffix",E,"Like `ANSIString`, but only displays the style suffix.",N,N],[3,"Style",E,"A style is a collection of properties that can format a…",N,N],[12,"foreground",E,"The style's foreground colour, if it has one.",0,N],[12,R[4538],E,"The style's background colour, if it has one.",0,N],[12,"is_bold",E,"Whether this style is bold.",0,N],[12,"is_dimmed",E,"Whether this style is dimmed.",0,N],[12,"is_italic",E,"Whether this style is italic.",0,N],[12,"is_underline",E,"Whether this style is underlined.",0,N],[12,"is_blink",E,"Whether this style is blinking.",0,N],[12,"is_reverse",E,"Whether this style has reverse colours.",0,N],[12,"is_hidden",E,"Whether this style is hidden.",0,N],[12,"is_strikethrough",E,"Whether this style is struckthrough.",0,N],[3,R[306],E,"An `ANSIGenericString` includes a generic string type and…",N,N],[3,R[305],E,"A set of `ANSIGenericString`s collected together, in order…",N,N],[12,"0",E,E,1,N],[4,"Colour",E,R[280],N,N],[13,"Black",E,R[281],2,N],[13,"Red",E,R[282],2,N],[13,"Green",E,R[283],2,N],[13,"Yellow",E,R[284],2,N],[13,"Blue",E,R[285],2,N],[13,"Purple",E,R[286],2,N],[13,"Cyan",E,R[287],2,N],[13,"White",E,R[288],2,N],[13,"Fixed",E,R[289],2,N],[13,"RGB",E,R[290],2,N],[4,"Color",E,R[280],N,N],[13,"Black",E,R[281],2,N],[13,"Red",E,R[282],2,N],[13,"Green",E,R[283],2,N],[13,"Yellow",E,R[284],2,N],[13,"Blue",E,R[285],2,N],[13,"Purple",E,R[286],2,N],[13,"Cyan",E,R[287],2,N],[13,"White",E,R[288],2,N],[13,"Fixed",E,R[289],2,N],[13,"RGB",E,R[290],2,N],[5,R[303],E,"A function to construct an `ANSIStrings` instance.",N,[[],["ansistrings"]]],[5,R[304],E,"A function to construct an `ANSIByteStrings` instance.",N,[[],["ansibytestrings"]]],[11,"prefix",E,"The prefix for this style.",0,[[],["prefix"]]],[11,"infix",E,"The infix between this style and another.",0,[[["style"]],["infix"]]],[11,"suffix",E,"The suffix for this style.",0,[[],["suffix"]]],[11,"prefix",E,"The prefix for this colour.",2,[[],["prefix"]]],[11,"infix",E,"The infix between this colour and another.",2,[[["colour"]],["infix"]]],[11,"suffix",E,"The suffix for this colour.",2,[[],["suffix"]]],[11,"new",E,"Creates a new Style with no differences.",0,[[],["style"]]],[11,"bold",E,R[292],0,[[["self"]],["style"]]],[11,"dimmed",E,R[293],0,[[["self"]],["style"]]],[11,"italic",E,R[294],0,[[["self"]],["style"]]],[11,R[295],E,R[296],0,[[["self"]],["style"]]],[11,"blink",E,R[297],0,[[["self"]],["style"]]],[11,"reverse",E,R[298],0,[[["self"]],["style"]]],[11,"hidden",E,R[291],0,[[["self"]],["style"]]],[11,R[299],E,R[291],0,[[["self"]],["style"]]],[11,"fg",E,"Returns a `Style` with the foreground colour property set.",0,[[["colour"],["self"]],["style"]]],[11,"on",E,R[300],0,[[["colour"],["self"]],["style"]]],[11,"is_plain",E,"Return true if this `Style` has no actual styles, and can…",0,[[],["bool"]]],[11,"normal",E,"Return a `Style` with the foreground colour set to this…",2,[[],["style"]]],[11,"bold",E,R[292],2,[[],["style"]]],[11,"dimmed",E,R[293],2,[[],["style"]]],[11,"italic",E,R[294],2,[[],["style"]]],[11,R[295],E,R[296],2,[[],["style"]]],[11,"blink",E,R[297],2,[[],["style"]]],[11,"reverse",E,R[298],2,[[],["style"]]],[11,"hidden",E,R[291],2,[[],["style"]]],[11,R[299],E,"Returns a `Style` with the strikethrough property set.",2,[[],["style"]]],[11,"on",E,R[300],2,[[["colour"]],["style"]]],[11,"paint",E,R[301],0,[[["i"]],[[R[302]],["toowned"],["sized"]]]],[11,"paint",E,R[301],2,[[["i"]],[[R[302]],["toowned"],["sized"]]]],[6,R[307],E,"An ANSI String is a string coupled with the `Style` to…",N,N],[6,R[308],E,"An `ANSIByteString` represents a formatted series of…",N,N],[6,R[303],E,"A set of `ANSIString`s collected together, in order to be…",N,N],[6,R[304],E,"A set of `ANSIByteString`s collected together, in order to…",N,N],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[17],E,E,3,[[[T],["self"]]]],[11,R[170],E,E,3,[[["self"]],["string"]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[16],E,E,4,[[["self"]],[T]]],[11,R[17],E,E,4,[[[T],["self"]]]],[11,R[170],E,E,4,[[["self"]],["string"]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[16],E,E,5,[[["self"]],[T]]],[11,R[17],E,E,5,[[[T],["self"]]]],[11,R[170],E,E,5,[[["self"]],["string"]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,R[18],E,E,5,[[["self"]],[R[40]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[[T],["self"]]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[16],E,E,6,[[["self"]],[T]]],[11,R[17],E,E,6,[[[T],["self"]]]],[11,R[170],E,E,6,[[["self"]],["string"]]],[11,R[11],E,E,6,[[[U]],[R[12]]]],[11,R[39],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[],[R[12]]]],[11,R[18],E,E,6,[[["self"]],[R[40]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[170],E,E,1,[[["self"]],["string"]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[17],E,E,2,[[[T],["self"]]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"eq",E,E,0,[[["style"],["self"]],["bool"]]],[11,"ne",E,E,0,[[["style"],["self"]],["bool"]]],[11,"eq",E,E,2,[[["self"],["colour"]],["bool"]]],[11,"ne",E,E,2,[[["self"],["colour"]],["bool"]]],[11,"eq",E,E,6,[[[R[302]],["self"]],["bool"]]],[11,"ne",E,E,6,[[[R[302]],["self"]],["bool"]]],[11,"clone",E,E,3,[[["self"]],["prefix"]]],[11,"clone",E,E,4,[[["self"]],["infix"]]],[11,"clone",E,E,5,[[["self"]],["suffix"]]],[11,"clone",E,E,0,[[["self"]],["style"]]],[11,"clone",E,E,2,[[["self"]],["colour"]]],[11,"clone",E,E,6,[[["self"]],[R[302]]]],[11,"from",E,"You can turn a `Colour` into a `Style` with the foreground…",0,[[["colour"]],["style"]]],[11,"from",E,E,6,[[["i"]],[R[302]]]],[11,R[79],E,"Returns a style with no properties set. Formatting text…",0,[[],["style"]]],[11,"fmt",E,E,3,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,4,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,5,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,2,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,6,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,3,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,4,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,5,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,7,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,8,[[["self"],[R[29]]],[R[12]]]],[11,"deref",E,E,6,[[["self"]],["s"]]],[11,"write_to",E,"Write an `ANSIByteString` to an `io::Write`. This writes…",9,[[["self"],["w"]],[R[12]]]],[11,"write_to",E,"Write `ANSIByteStrings` to an `io::Write`. This writes the…",10,[[["self"],["w"]],[R[12]]]]],"p":[[3,"Style"],[3,R[305]],[4,"Colour"],[3,"Prefix"],[3,"Infix"],[3,"Suffix"],[3,R[306]],[6,R[307]],[6,R[303]],[6,R[308]],[6,R[304]]]};
searchIndex[R[2928]]={"doc":E,"i":[[3,"ReadStream",R[2928],E,N,N],[3,"Sender",E,"A handle that allows message to be sent to a `WriteQueue`.",N,N],[3,"WriteQueue",E,"A queue of messages being written.",N,N],[5,"write_queue",E,"Creates a new WriteQueue that wraps the given writer.",N,[[["w"]]]],[0,R[2289],E,"Asynchronous reading and writing of messages using the…",N,N],[3,R[2248],R[2929],E,N,N],[3,"Read",E,"An in-progress read operation.",N,N],[3,"Write",E,"An in-progress write operation.",N,N],[3,"Transport",E,E,N,N],[5,R[2164],E,"Begins an asynchronous read of a message from `reader`.",N,[[[R[2113]],["r"]],["read"]]],[5,R[2166],E,"Begins an asynchronous write of provided message to…",N,[[["m"],["w"]],["write"]]],[8,R[2930],E,"Something that contains segments ready to be written out.",N,N],[10,"as_output_segments",E,E,0,[[["self"]],[R[2127]]]],[11,"new",E,E,1,[[["s"],[R[2113]]],["self"]]],[11,"new",R[2928],E,2,[[[R[2113]],["r"]],["readstream"]]],[11,"send",E,"Enqueues a message to be written.",3,[[["m"],["self"]],[["box",["future"]],["future"]]]],[11,"len",E,"Returns the number of messages queued to be written, not…",3,[[["self"]],[R[9]]]],[11,"terminate",E,"Commands the queue to stop writing messages once it is…",3,[[["self"],[R[12],["error"]],["error"]],[["box",["future"]],["future"]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[17],E,E,3,[[[T],["self"]]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,R[99],E,E,4,[[],["f"]]],[11,"from",R[2929],E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,R[18],E,E,5,[[["self"]],[R[40]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[11],E,E,6,[[[U]],[R[12]]]],[11,R[39],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[],[R[12]]]],[11,R[18],E,E,6,[[["self"]],[R[40]]]],[11,R[99],E,E,6,[[],["f"]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[11],E,E,7,[[[U]],[R[12]]]],[11,R[39],E,E,7,[[["self"]],[T]]],[11,R[13],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[],[R[12]]]],[11,R[18],E,E,7,[[["self"]],[R[40]]]],[11,R[99],E,E,7,[[],["f"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"clone",R[2928],E,3,[[["self"]],["sender"]]],[11,"drop",E,E,3,[[["self"]]]],[11,"fmt",R[2929],E,7,[[[R[29]],["self"]],[R[12]]]],[11,"poll",E,E,6,[[["self"]],[["poll",["error"]],["error"]]]],[11,"poll",E,E,7,[[["self"]],[["poll",["error"]],["error"]]]],[11,"poll",R[2928],E,4,[[["self"]],["poll"]]],[11,R[2123],R[2929],E,5,[[["u32"],["self"]],[R[52]]]],[11,"poll",E,E,1,[[["self"]],[["poll",[R[52],"error"]],["error"],[R[52]]]]],[11,"poll",R[2928],E,2,[[["self"]],[["poll",[R[52],"error"]],["error"],[R[52]]]]],[11,R[181],R[2929],E,1,[[["self"]],[R[182]]]],[11,R[183],E,E,1,[[["self"]],["poll"]]]],"p":[[8,R[2930]],[3,"Transport"],[3,"ReadStream"],[3,"Sender"],[3,"WriteQueue"],[3,R[2248]],[3,"Read"],[3,"Write"]]};
searchIndex[R[2931]]={"doc":"Concurrent work-stealing deques.","i":[[3,"Worker",R[2931],"A worker queue.",N,N],[3,"Stealer",E,"A stealer handle of a worker queue.",N,N],[3,"Injector",E,"An injector queue.",N,N],[4,"Steal",E,"Possible outcomes of a steal operation.",N,N],[13,"Empty",E,"The queue was empty at the time of stealing.",0,N],[13,"Success",E,"At least one task was successfully stolen.",0,N],[13,"Retry",E,"The steal operation needs to be retried.",0,N],[11,"new_fifo",E,"Creates a FIFO worker queue.",1,[[],["worker"]]],[11,"new_lifo",E,"Creates a LIFO worker queue.",1,[[],["worker"]]],[11,"stealer",E,"Creates a stealer for this queue.",1,[[["self"]],["stealer"]]],[11,R[69],E,R[1275],1,[[["self"]],["bool"]]],[11,"push",E,R[2932],1,[[["self"],[T]]]],[11,"pop",E,"Pops a task from the queue.",1,[[["self"]],[R[52]]]],[11,R[69],E,R[1275],2,[[["self"]],["bool"]]],[11,"steal",E,R[2933],2,[[["self"]],["steal"]]],[11,R[2934],E,"Steals a batch of tasks and pushes them into another worker.",2,[[["self"],["worker"]],["steal"]]],[11,R[2935],E,"Steals a batch of tasks, pushes them into another worker,…",2,[[["self"],["worker"]],["steal"]]],[11,"new",E,"Creates a new injector queue.",3,[[],["injector"]]],[11,"push",E,R[2932],3,[[["self"],[T]]]],[11,"steal",E,R[2933],3,[[["self"]],["steal"]]],[11,R[2934],E,"Steals a batch of tasks and pushes them into a worker.",3,[[["self"],["worker"]],["steal"]]],[11,R[2935],E,"Steals a batch of tasks, pushes them into a worker, and…",3,[[["self"],["worker"]],["steal"]]],[11,R[69],E,R[1275],3,[[["self"]],["bool"]]],[11,R[69],E,"Returns `true` if the queue was empty at the time of…",0,[[["self"]],["bool"]]],[11,"is_success",E,"Returns `true` if at least one task was stolen.",0,[[["self"]],["bool"]]],[11,"is_retry",E,"Returns `true` if the steal operation needs to be retried.",0,[[["self"]],["bool"]]],[11,"success",E,"Returns the result of the operation, if successful.",0,[[],[R[52]]]],[11,"or_else",E,"If no task was stolen, attempts another steal operation.",0,[[["f"]],["steal"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[17],E,E,2,[[[T],["self"]]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[[T],["self"]]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"eq",E,E,0,[[["self"],["steal"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["steal"]],["bool"]]],[11,"clone",E,E,2,[[["self"]],["stealer"]]],[11,"clone",E,E,0,[[["self"]],["steal"]]],[11,"drop",E,E,3,[[["self"]]]],[11,"fmt",E,E,1,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,2,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,3,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[R[12]]]],[11,R[187],E,"Consumes items until a `Success` is found and returns it.",0,[[["i"]],["steal"]]]],"p":[[4,"Steal"],[3,"Worker"],[3,"Stealer"],[3,"Injector"]]};
searchIndex[R[3549]]={"doc":"This library exposes a low-level API for creating your own…","i":[[3,"ParkToken",R[3549],"A value associated with a parked thread which can be used…",N,N],[12,"0",E,E,0,N],[3,R[3554],E,"Result of an unpark operation.",N,N],[12,"unparked_threads",E,"The number of threads that were unparked.",1,N],[12,"requeued_threads",E,"The number of threads that were requeued.",1,N],[12,"have_more_threads",E,"Whether there are any threads remaining in the queue. This…",1,N],[12,"be_fair",E,"This is set to true on average once every 0.5ms for any…",1,N],[3,R[3555],E,"A value which is passed from an unparker to a parked thread.",N,N],[12,"0",E,E,2,N],[3,"SpinWait",E,"A counter used to perform exponential backoff in spin loops.",N,N],[4,"FilterOp",E,"Operation that `unpark_filter` should perform for each…",N,N],[13,"Unpark",E,"Unpark the thread and continue scanning the list of parked…",3,N],[13,"Skip",E,"Don't unpark the thread and continue scanning the list of…",3,N],[13,"Stop",E,"Don't unpark the thread and stop scanning the list of…",3,N],[4,"ParkResult",E,"Result of a park operation.",N,N],[13,"Unparked",E,"We were unparked by another thread with the given token.",4,N],[13,"Invalid",E,"The validation callback returned false.",4,N],[13,"TimedOut",E,"The timeout expired.",4,N],[4,"RequeueOp",E,"Operation that `unpark_requeue` should perform.",N,N],[13,"Abort",E,"Abort the operation without doing anything.",5,N],[13,"UnparkOneRequeueRest",E,"Unpark one thread and requeue the rest onto the target…",5,N],[13,"RequeueAll",E,"Requeue all threads onto the target queue.",5,N],[13,"UnparkOne",E,"Unpark one thread and leave the rest parked. No requeuing…",5,N],[13,"RequeueOne",E,"Requeue one thread and leave the rest parked on the…",5,N],[5,"park",E,"Parks the current thread in the queue associated with the…",N,[[[R[3553]],[R[52],["instant"]],["instant"],["v"],[R[9]],["b"],[T]],[R[3551]]]],[5,"unpark_all",E,"Unparks all threads in the queue associated with the given…",N,[[[R[3552]],[R[9]]],[R[9]]]],[5,"unpark_filter",E,"Unparks a number of threads from the front of the queue…",N,[[["c"],["f"],[R[9]]],[R[3550]]]],[5,"unpark_one",E,"Unparks one thread from the queue associated with the…",N,[[["c"],[R[9]]],[R[3550]]]],[5,"unpark_requeue",E,"Removes all threads from the queue associated with…",N,[[["c"],["v"],[R[9]]],[R[3550]]]],[11,"is_unparked",E,"Returns true if we were unparked by another thread.",4,[[],["bool"]]],[11,"new",E,"Creates a new `SpinWait`.",6,[[],["spinwait"]]],[11,"reset",E,"Resets a `SpinWait` to its initial state.",6,[[["self"]]]],[11,"spin",E,"Spins until the sleep threshold has been reached.",6,[[["self"]],["bool"]]],[11,"spin_no_yield",E,"Spins without yielding the thread to the OS.",6,[[["self"]]]],[0,"deadlock",E,"[Experimental] Deadlock detection",N,N],[5,"acquire_resource","parking_lot_core::deadlock","Acquire a resource identified by key in the deadlock…",N,[[[R[9]]]]],[5,"release_resource",E,"Release a resource identified by key in the deadlock…",N,[[[R[9]]]]],[17,"DEFAULT_PARK_TOKEN",R[3549],"A default park token to use.",N,N],[17,"DEFAULT_UNPARK_TOKEN",E,"A default unpark token to use.",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[[T],["self"]]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,[[[T],["self"]]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[17],E,E,2,[[[T],["self"]]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[11],E,E,6,[[[U]],[R[12]]]],[11,R[39],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[],[R[12]]]],[11,R[18],E,E,6,[[["self"]],[R[40]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[17],E,E,3,[[[T],["self"]]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[16],E,E,4,[[["self"]],[T]]],[11,R[17],E,E,4,[[[T],["self"]]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[16],E,E,5,[[["self"]],[T]]],[11,R[17],E,E,5,[[[T],["self"]]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,R[18],E,E,5,[[["self"]],[R[40]]]],[11,"eq",E,E,4,[[[R[3551]],["self"]],["bool"]]],[11,"ne",E,E,4,[[[R[3551]],["self"]],["bool"]]],[11,"eq",E,E,1,[[[R[3550]],["self"]],["bool"]]],[11,"ne",E,E,1,[[[R[3550]],["self"]],["bool"]]],[11,"eq",E,E,5,[[["requeueop"],["self"]],["bool"]]],[11,"eq",E,E,3,[[["self"],["filterop"]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[3552]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[3552]]],["bool"]]],[11,"eq",E,E,0,[[[R[3553]],["self"]],["bool"]]],[11,"ne",E,E,0,[[[R[3553]],["self"]],["bool"]]],[11,"clone",E,E,4,[[["self"]],[R[3551]]]],[11,"clone",E,E,1,[[["self"]],[R[3550]]]],[11,"clone",E,E,5,[[["self"]],["requeueop"]]],[11,"clone",E,E,3,[[["self"]],["filterop"]]],[11,"clone",E,E,2,[[["self"]],[R[3552]]]],[11,"clone",E,E,0,[[["self"]],[R[3553]]]],[11,R[79],E,E,1,[[],[R[3550]]]],[11,R[79],E,E,6,[[],["spinwait"]]],[11,"fmt",E,E,4,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,1,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,5,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,3,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,2,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,0,[[[R[29]],["self"]],[R[12]]]]],"p":[[3,"ParkToken"],[3,R[3554]],[3,R[3555]],[4,"FilterOp"],[4,"ParkResult"],[4,"RequeueOp"],[3,"SpinWait"]]};
searchIndex[R[3583]]={"doc":E,"i":[[0,"base",R[3583],E,N,N],[6,"boolean_t","core_graphics::base",E,N,N],[6,"CGFloat",E,E,N,N],[6,"CGError",E,E,N,N],[17,"kCGImageAlphaNone",E,E,N,N],[17,"kCGImageAlphaPremultipliedLast",E,E,N,N],[17,"kCGImageAlphaPremultipliedFirst",E,E,N,N],[17,"kCGImageAlphaLast",E,E,N,N],[17,"kCGImageAlphaFirst",E,E,N,N],[17,"kCGImageAlphaNoneSkipLast",E,E,N,N],[17,"kCGImageAlphaNoneSkipFirst",E,E,N,N],[17,"kCGBitmapByteOrderDefault",E,E,N,N],[17,"kCGBitmapByteOrder16Little",E,E,N,N],[17,"kCGBitmapByteOrder32Little",E,E,N,N],[17,"kCGBitmapByteOrder16Big",E,E,N,N],[17,"kCGBitmapByteOrder32Big",E,E,N,N],[17,"kCGBitmapByteOrder16Host",E,E,N,N],[17,"kCGBitmapByteOrder32Host",E,E,N,N],[0,R[3609],R[3583],E,N,N],[3,R[3635],R[3610],E,N,N],[3,R[3651],E,E,N,N],[7,"kCGColorSpaceSRGB",E,E,N,N],[7,"kCGColorSpaceAdobeRGB1998",E,E,N,N],[7,"kCGColorSpaceGenericGray",E,E,N,N],[7,"kCGColorSpaceGenericRGB",E,E,N,N],[7,"kCGColorSpaceGenericCMYK",E,E,N,N],[7,"kCGColorSpaceGenericRGBLinear",E,E,N,N],[7,"kCGColorSpaceGenericGrayGamma2_2",E,E,N,N],[11,R[18],E,E,0,[[],[R[2415]]]],[11,"create_with_name",E,E,0,[[[R[2422]]],[[R[3584]],[R[52],[R[3584]]]]]],[11,"create_device_rgb",E,E,0,[[],[R[3584]]]],[0,"context",R[3583],E,N,N],[3,"CGContext",R[3611],E,N,N],[3,R[3652],E,E,N,N],[4,R[3636],E,E,N,N],[13,"CGTextFill",E,E,1,N],[13,"CGTextStroke",E,E,1,N],[13,"CGTextFillStroke",E,E,1,N],[13,"CGTextInvisible",E,E,1,N],[13,"CGTextFillClip",E,E,1,N],[13,"CGTextStrokeClip",E,E,1,N],[13,"CGTextClip",E,E,1,N],[11,R[18],E,E,2,[[],[R[2415]]]],[11,"create_bitmap_context",E,E,2,[[["u32"],[R[3584]],[R[52]],["size_t"]],["cgcontext"]]],[11,"data",E,E,2,[[["self"]]]],[11,"width",E,E,2,[[["self"]],["size_t"]]],[11,"height",E,E,2,[[["self"]],["size_t"]]],[11,R[3608],E,E,2,[[["self"]],["size_t"]]],[11,"set_rgb_fill_color",E,E,2,[[["self"],["cgfloat"]]]],[11,"set_allows_font_smoothing",E,E,2,[[["self"],["bool"]]]],[11,"set_font_smoothing_style",E,E,2,[[["i32"],["self"]]]],[11,"set_should_smooth_fonts",E,E,2,[[["self"],["bool"]]]],[11,"set_allows_antialiasing",E,E,2,[[["self"],["bool"]]]],[11,"set_should_antialias",E,E,2,[[["self"],["bool"]]]],[11,"set_allows_font_subpixel_quantization",E,E,2,[[["self"],["bool"]]]],[11,"set_should_subpixel_quantize_fonts",E,E,2,[[["self"],["bool"]]]],[11,"set_allows_font_subpixel_positioning",E,E,2,[[["self"],["bool"]]]],[11,"set_should_subpixel_position_fonts",E,E,2,[[["self"],["bool"]]]],[11,"set_text_drawing_mode",E,E,2,[[["self"],["cgtextdrawingmode"]]]],[11,"fill_rect",E,E,2,[[["cgrect"],["self"]]]],[11,"draw_image",E,E,2,[[["cgrect"],["self"],["cgimage"]]]],[11,"create_image",E,E,2,[[["self"]],[[R[52],["cgimage"]],["cgimage"]]]],[11,"set_font",E,E,2,[[["cgfont"],["self"]]]],[11,"set_font_size",E,E,2,[[["self"],["cgfloat"]]]],[11,"set_text_matrix",E,E,2,[[[R[3606]],["self"]]]],[11,"show_glyphs_at_positions",E,E,2,[[["self"]]]],[0,"data_provider",R[3583],E,N,N],[3,R[3637],R[3612],E,N,N],[3,R[3638],E,E,N,N],[6,"CGDataProviderGetBytesCallback",E,E,N,N],[6,"CGDataProviderReleaseInfoCallback",E,E,N,N],[6,"CGDataProviderRewindCallback",E,E,N,N],[6,"CGDataProviderSkipBytesCallback",E,E,N,N],[6,"CGDataProviderSkipForwardCallback",E,E,N,N],[6,"CGDataProviderGetBytePointerCallback",E,E,N,N],[6,"CGDataProviderGetBytesAtOffsetCallback",E,E,N,N],[6,"CGDataProviderReleaseBytePointerCallback",E,E,N,N],[6,"CGDataProviderReleaseDataCallback",E,E,N,N],[6,"CGDataProviderGetBytesAtPositionCallback",E,E,N,N],[11,R[18],E,E,3,[[],[R[2415]]]],[11,R[2830],E,"Creates a data provider from the given reference-counted…",3,[[["arc",["vec"]],["vec",["u8"]]],["self"]]],[11,"copy_data",E,"Creates a copy of the data from the underlying…",4,[[["self"]],["cfdata"]]],[0,"display",R[3583],E,N,N],[3,R[2441],R[3613],R[3657],N,N],[6,R[1503],E,E,N,N],[5,R[1487],E,E,N,[[],["u8"]]],[3,"CFArray",E,R[2806],N,N],[6,R[2454],E,E,N,N],[5,R[1415],E,E,N,[[],["i64"]]],[5,R[1417],E,E,N,[[["i64"]]]],[6,"CFIndex",E,E,N,N],[5,R[2814],E,E,N,[[]]],[6,R[2468],E,E,N,N],[3,"CGDisplay",E,E,N,N],[12,"id",E,E,5,N],[3,R[3639],E,E,N,N],[3,R[3653],E,E,N,N],[7,"CGRectNull",E,E,N,N],[7,"CGRectInfinite",E,E,N,N],[5,"CGDisplayModeRelease",E,E,N,N],[5,"CGMainDisplayID",E,E,N,N],[5,"CGDisplayIsActive",E,E,N,N],[5,"CGDisplayIsAlwaysInMirrorSet",E,E,N,N],[5,"CGDisplayIsAsleep",E,E,N,N],[5,"CGDisplayIsBuiltin",E,E,N,N],[5,"CGDisplayIsInHWMirrorSet",E,E,N,N],[5,"CGDisplayIsInMirrorSet",E,E,N,N],[5,"CGDisplayIsMain",E,E,N,N],[5,"CGDisplayIsOnline",E,E,N,N],[5,"CGDisplayIsStereo",E,E,N,N],[5,"CGDisplayMirrorsDisplay",E,E,N,N],[5,"CGDisplayPrimaryDisplay",E,E,N,N],[5,"CGDisplayRotation",E,E,N,N],[5,"CGDisplayScreenSize",E,E,N,N],[5,"CGDisplaySerialNumber",E,E,N,N],[5,"CGDisplayUnitNumber",E,E,N,N],[5,"CGDisplayUsesOpenGLAcceleration",E,E,N,N],[5,"CGDisplayVendorNumber",E,E,N,N],[5,"CGGetActiveDisplayList",E,E,N,N],[5,"CGDisplayModelNumber",E,E,N,N],[5,"CGDisplayPixelsHigh",E,E,N,N],[5,"CGDisplayPixelsWide",E,E,N,N],[5,"CGDisplayBounds",E,E,N,N],[5,"CGDisplayCreateImage",E,E,N,N],[5,"CGDisplayCopyDisplayMode",E,E,N,N],[5,"CGDisplayModeGetHeight",E,E,N,N],[5,"CGDisplayModeGetWidth",E,E,N,N],[5,"CGDisplayModeGetPixelHeight",E,E,N,N],[5,"CGDisplayModeGetPixelWidth",E,E,N,N],[5,"CGDisplayModeGetRefreshRate",E,E,N,N],[5,"CGDisplayHideCursor",E,E,N,N],[5,"CGDisplayShowCursor",E,E,N,N],[5,"CGDisplayMoveCursorToPoint",E,E,N,N],[5,"CGWarpMouseCursorPosition",E,E,N,N],[5,"CGAssociateMouseAndMouseCursorPosition",E,E,N,N],[5,"CGWindowListCopyWindowInfo",E,E,N,N],[5,"CGWindowListCreateImage",E,E,N,N],[5,"CGWindowListCreateImageFromArray",E,E,N,N],[6,"CGDirectDisplayID",E,E,N,N],[6,"CGWindowID",E,E,N,N],[6,"CGWindowListOption",E,E,N,N],[6,"CGWindowImageOption",E,E,N,N],[17,"kCGNullWindowID",E,E,N,N],[17,"kCGWindowListOptionAll",E,E,N,N],[17,"kCGWindowListOptionOnScreenOnly",E,E,N,N],[17,"kCGWindowListOptionOnScreenAboveWindow",E,E,N,N],[17,"kCGWindowListOptionOnScreenBelowWindow",E,E,N,N],[17,"kCGWindowListOptionIncludingWindow",E,E,N,N],[17,"kCGWindowListExcludeDesktopElements",E,E,N,N],[17,"kCGWindowImageDefault",E,E,N,N],[17,"kCGWindowImageBoundsIgnoreFraming",E,E,N,N],[17,"kCGWindowImageShouldBeOpaque",E,E,N,N],[17,"kCGWindowImageOnlyShadows",E,E,N,N],[17,"kCGWindowImageBestResolution",E,E,N,N],[17,"kCGWindowImageNominalResolution",E,E,N,N],[11,"new",E,E,5,[[[R[3591]]],["cgdisplay"]]],[11,"main",E,"Returns the the main display.",5,[[],["cgdisplay"]]],[11,"bounds",E,"Returns the bounds of a display in the global display…",5,[[["self"]],["cgrect"]]],[11,"display_mode",E,"Returns information about a display's current configuration.",5,[[["self"]],[[R[3585]],[R[52],[R[3585]]]]]],[11,"image",E,"Returns an image containing the contents of the specified…",5,[[["self"]],[[R[52],["cgimage"]],["cgimage"]]]],[11,"screenshot",E,"Returns a composite image based on a dynamically generated…",5,[[[R[3587]],["cgrect"],[R[3586]],[R[3588]]],[[R[52],["cgimage"]],["cgimage"]]]],[11,"screenshot_from_windows",E,"Returns a composite image of the specified windows.",5,[[["cfarray"],["cgrect"],[R[3586]]],[[R[52],["cgimage"]],["cgimage"]]]],[11,"window_list_info",E,"Generates and returns information about the selected…",5,[[[R[3587]],[R[52],[R[3588]]],[R[3588]]],[["cfarray"],[R[52],["cfarray"]]]]],[11,"is_active",E,"Returns a Boolean value indicating whether a display is…",5,[[["self"]],["bool"]]],[11,"is_always_in_mirror_set",E,"Returns a boolean indicating whether a display is always…",5,[[["self"]],["bool"]]],[11,"is_asleep",E,"Returns a boolean indicating whether a display is sleeping…",5,[[["self"]],["bool"]]],[11,"is_builtin",E,R[3590],5,[[["self"]],["bool"]]],[11,"is_in_hw_mirror_set",E,R[3589],5,[[["self"]],["bool"]]],[11,"is_in_mirror_set",E,R[3589],5,[[["self"]],["bool"]]],[11,"is_main",E,"Returns a boolean indicating whether a display is the main…",5,[[["self"]],["bool"]]],[11,"is_online",E,R[3590],5,[[["self"]],["bool"]]],[11,"uses_open_gl_acceleration",E,"Returns a boolean indicating whether Quartz is using…",5,[[["self"]],["bool"]]],[11,"is_stereo",E,"Returns a boolean indicating whether a display is running…",5,[[["self"]],["bool"]]],[11,"mirrors_display",E,"For a secondary display in a mirroring set, returns the…",5,[[["self"]],[R[3591]]]],[11,"primary_display",E,"Returns the primary display in a hardware mirroring set.",5,[[["self"]],[R[3591]]]],[11,"rotation",E,"Returns the rotation angle of a display in degrees.",5,[[["self"]],["f64"]]],[11,"screen_size",E,"Returns the width and height of a display in millimeters.",5,[[["self"]],["cgsize"]]],[11,R[4706],E,"Returns the serial number of a display monitor.",5,[[["self"]],["u32"]]],[11,"unit_number",E,"Returns the logical unit number of a display.",5,[[["self"]],["u32"]]],[11,"vendor_number",E,"Returns the vendor number of the specified display's…",5,[[["self"]],["u32"]]],[11,"model_number",E,"Returns the model number of a display monitor.",5,[[["self"]],["u32"]]],[11,"pixels_high",E,"Returns the display height in pixel units.",5,[[["self"]],["u64"]]],[11,"pixels_wide",E,"Returns the display width in pixel units.",5,[[["self"]],["u64"]]],[11,"active_displays",E,"Provides a list of displays that are active (or drawable).",5,[[],[[R[12],["vec","cgerror"]],["cgerror"],["vec",[R[3591]]]]]],[11,"active_display_count",E,"Provides count of displays that are active (or drawable).",5,[[],[["u32"],["cgerror"],[R[12],["u32","cgerror"]]]]],[11,"hide_cursor",E,"Hides the mouse cursor, and increments the hide cursor…",5,[[["self"]],[[R[12],["cgerror"]],["cgerror"]]]],[11,"show_cursor",E,"Decrements the hide cursor count, and shows the mouse…",5,[[["self"]],[[R[12],["cgerror"]],["cgerror"]]]],[11,"move_cursor_to_point",E,"Moves the mouse cursor to a specified point relative to…",5,[[["self"],["cgpoint"]],[[R[12],["cgerror"]],["cgerror"]]]],[11,"warp_mouse_cursor_position",E,"Moves the mouse cursor without generating events.",5,[[["cgpoint"]],[[R[12],["cgerror"]],["cgerror"]]]],[11,"associate_mouse_and_mouse_cursor_position",E,"Connects or disconnects the mouse and cursor while an…",5,[[["bool"]],[[R[12],["cgerror"]],["cgerror"]]]],[11,"height",E,E,6,[[["self"]],["u64"]]],[11,"width",E,E,6,[[["self"]],["u64"]]],[11,"pixel_height",E,E,6,[[["self"]],["u64"]]],[11,"pixel_width",E,E,6,[[["self"]],["u64"]]],[11,"refresh_rate",E,E,6,[[["self"]],["f64"]]],[0,"event",R[3583],E,N,N],[3,R[3643],R[3614],E,N,N],[3,"KeyCode",E,"Key codes for keys that are independent of keyboard layout.",N,N],[3,"EventField",E,"Constants used as keys to access specialized fields in…",N,N],[3,"CGEvent",E,E,N,N],[3,"CGEventRef",E,E,N,N],[4,R[3640],E,"Constants that specify the different types of input events.",N,N],[13,"Null",E,E,7,N],[13,"LeftMouseDown",E,E,7,N],[13,"LeftMouseUp",E,E,7,N],[13,"RightMouseDown",E,E,7,N],[13,"RightMouseUp",E,E,7,N],[13,"MouseMoved",E,E,7,N],[13,"LeftMouseDragged",E,E,7,N],[13,"RightMouseDragged",E,E,7,N],[13,"KeyDown",E,E,7,N],[13,"KeyUp",E,E,7,N],[13,"FlagsChanged",E,E,7,N],[13,"ScrollWheel",E,E,7,N],[13,"TabletPointer",E,E,7,N],[13,"TabletProximity",E,E,7,N],[13,"OtherMouseDown",E,E,7,N],[13,"OtherMouseUp",E,E,7,N],[13,"OtherMouseDragged",E,E,7,N],[13,"TapDisabledByTimeout",E,E,7,N],[13,"TapDisabledByUserInput",E,E,7,N],[4,R[3641],E,E,N,N],[13,"Left",E,E,8,N],[13,"Right",E,E,8,N],[13,"Center",E,E,8,N],[4,R[3642],E,"Possible tapping points for events.",N,N],[13,"HID",E,E,9,N],[13,"Session",E,E,9,N],[13,"AnnotatedSession",E,E,9,N],[6,"CGEventField",E,E,N,N],[6,"CGKeyCode",E,E,N,N],[18,"CGEventFlagNull",E,E,10,N],[18,"CGEventFlagAlphaShift",E,E,10,N],[18,"CGEventFlagShift",E,E,10,N],[18,"CGEventFlagControl",E,E,10,N],[18,"CGEventFlagAlternate",E,E,10,N],[18,"CGEventFlagCommand",E,E,10,N],[18,"CGEventFlagHelp",E,E,10,N],[18,"CGEventFlagSecondaryFn",E,E,10,N],[18,"CGEventFlagNumericPad",E,E,10,N],[18,"CGEventFlagNonCoalesced",E,E,10,N],[11,"empty",E,R[1777],10,[[],[R[3592]]]],[11,"all",E,R[1778],10,[[],[R[3592]]]],[11,"bits",E,R[1779],10,[[["self"]],["u64"]]],[11,R[1807],E,R[1780],10,[[["u64"]],[[R[52],[R[3592]]],[R[3592]]]]],[11,R[1781],E,R[1782],10,[[["u64"]],[R[3592]]]],[11,R[69],E,R[1783],10,[[["self"]],["bool"]]],[11,"is_all",E,R[1784],10,[[["self"]],["bool"]]],[11,R[1791],E,R[1785],10,[[[R[3592]],["self"]],["bool"]]],[11,R[473],E,R[1786],10,[[[R[3592]],["self"]],["bool"]]],[11,"insert",E,R[1787],10,[[["self"],[R[3592]]]]],[11,"remove",E,R[1788],10,[[["self"],[R[3592]]]]],[11,"toggle",E,R[1789],10,[[["self"],[R[3592]]]]],[11,"set",E,R[1790],10,[[["self"],[R[3592]],["bool"]]]],[18,"RETURN",E,E,11,N],[18,"TAB",E,E,11,N],[18,"SPACE",E,E,11,N],[18,"DELETE",E,E,11,N],[18,"ESCAPE",E,E,11,N],[18,"COMMAND",E,E,11,N],[18,"SHIFT",E,E,11,N],[18,"CAPS_LOCK",E,E,11,N],[18,"OPTION",E,E,11,N],[18,"CONTROL",E,E,11,N],[18,"RIGHT_COMMAND",E,E,11,N],[18,"RIGHT_SHIFT",E,E,11,N],[18,"RIGHT_OPTION",E,E,11,N],[18,"RIGHT_CONTROL",E,E,11,N],[18,"FUNCTION",E,E,11,N],[18,"VOLUME_UP",E,E,11,N],[18,"VOLUME_DOWN",E,E,11,N],[18,"MUTE",E,E,11,N],[18,"F1",E,E,11,N],[18,"F2",E,E,11,N],[18,"F3",E,E,11,N],[18,"F4",E,E,11,N],[18,"F5",E,E,11,N],[18,"F6",E,E,11,N],[18,"F7",E,E,11,N],[18,"F8",E,E,11,N],[18,"F9",E,E,11,N],[18,"F10",E,E,11,N],[18,"F11",E,E,11,N],[18,"F12",E,E,11,N],[18,"F13",E,E,11,N],[18,"F14",E,E,11,N],[18,"F15",E,E,11,N],[18,"F16",E,E,11,N],[18,"F17",E,E,11,N],[18,"F18",E,E,11,N],[18,"F19",E,E,11,N],[18,"F20",E,E,11,N],[18,"HELP",E,E,11,N],[18,"HOME",E,E,11,N],[18,"PAGE_UP",E,E,11,N],[18,"FORWARD_DELETE",E,E,11,N],[18,"END",E,E,11,N],[18,"PAGE_DOWN",E,E,11,N],[18,"LEFT_ARROW",E,E,11,N],[18,"RIGHT_ARROW",E,E,11,N],[18,"DOWN_ARROW",E,E,11,N],[18,"UP_ARROW",E,E,11,N],[18,"MOUSE_EVENT_NUMBER",E,R[3593],12,N],[18,"MOUSE_EVENT_CLICK_STATE",E,R[3593],12,N],[18,"MOUSE_EVENT_PRESSURE",E,"Key to access a double field that contains the mouse…",12,N],[18,"MOUSE_EVENT_BUTTON_NUMBER",E,R[3593],12,N],[18,"MOUSE_EVENT_DELTA_X",E,R[3599],12,N],[18,"MOUSE_EVENT_DELTA_Y",E,"Key to access an integer field that contains the vertical…",12,N],[18,"MOUSE_EVENT_INSTANT_MOUSER",E,"Key to access an integer field. The value is non-zero if…",12,N],[18,"MOUSE_EVENT_SUB_TYPE",E,"Key to access an integer field that encodes the mouse…",12,N],[18,"KEYBOARD_EVENT_AUTOREPEAT",E,"Key to access an integer field, non-zero when this is an…",12,N],[18,"KEYBOARD_EVENT_KEYCODE",E,"Key to access an integer field that contains the virtual…",12,N],[18,"KEYBOARD_EVENT_KEYBOARD_TYPE",E,"Key to access an integer field that contains the keyboard…",12,N],[18,"SCROLL_WHEEL_EVENT_DELTA_AXIS_1",E,R[3594],12,N],[18,"SCROLL_WHEEL_EVENT_DELTA_AXIS_2",E,R[3594],12,N],[18,"SCROLL_WHEEL_EVENT_FIXED_POINT_DELTA_AXIS_1",E,R[3595],12,N],[18,"SCROLL_WHEEL_EVENT_FIXED_POINT_DELTA_AXIS_2",E,R[3595],12,N],[18,"SCROLL_WHEEL_EVENT_POINT_DELTA_AXIS_1",E,R[3596],12,N],[18,"SCROLL_WHEEL_EVENT_POINT_DELTA_AXIS_2",E,R[3596],12,N],[18,"SCROLL_WHEEL_EVENT_INSTANT_MOUSER",E,R[3601],12,N],[18,"TABLET_EVENT_POINT_X",E,R[3597],12,N],[18,"TABLET_EVENT_POINT_Y",E,R[3597],12,N],[18,"TABLET_EVENT_POINT_Z",E,R[3597],12,N],[18,"TABLET_EVENT_POINT_BUTTONS",E,"Key to access an integer field that contains the tablet…",12,N],[18,"TABLET_EVENT_POINT_PRESSURE",E,R[3598],12,N],[18,"TABLET_EVENT_TILT_X",E,"Key to access a double field that contains the horizontal…",12,N],[18,"TABLET_EVENT_TILT_Y",E,"Key to access a double field that contains the vertical…",12,N],[18,"TABLET_EVENT_ROTATION",E,R[3598],12,N],[18,"TABLET_EVENT_TANGENTIAL_PRESSURE",E,"Key to access a double field that contains the tangential…",12,N],[18,"TABLET_EVENT_DEVICE_ID",E,R[3599],12,N],[18,"TABLET_EVENT_VENDOR_1",E,R[3600],12,N],[18,"TABLET_EVENT_VENDOR_2",E,R[3600],12,N],[18,"TABLET_EVENT_VENDOR_3",E,R[3600],12,N],[18,"TABLET_PROXIMITY_EVENT_VENDOR_ID",E,R[3599],12,N],[18,"TABLET_PROXIMITY_EVENT_TABLET_ID",E,R[3599],12,N],[18,"TABLET_PROXIMITY_EVENT_POINTER_ID",E,R[3599],12,N],[18,"TABLET_PROXIMITY_EVENT_DEVICE_ID",E,R[3599],12,N],[18,"TABLET_PROXIMITY_EVENT_SYSTEM_TABLET_ID",E,R[3599],12,N],[18,"TABLET_PROXIMITY_EVENT_VENDOR_POINTER_TYPE",E,R[3599],12,N],[18,"TABLET_PROXIMITY_EVENT_VENDOR_POINTER_SERIAL_NUMBER",E,R[3599],12,N],[18,"TABLET_PROXIMITY_EVENT_VENDOR_UNIQUE_ID",E,R[3599],12,N],[18,"TABLET_PROXIMITY_EVENT_CAPABILITY_MASK",E,"Key to access an integer field that contains the device…",12,N],[18,"TABLET_PROXIMITY_EVENT_POINTER_TYPE",E,"Key to access an integer field that contains the pointer…",12,N],[18,"TABLET_PROXIMITY_EVENT_ENTER_PROXIMITY",E,R[3601],12,N],[18,"EVENT_TARGET_PROCESS_SERIAL_NUMBER",E,"Key to access a field that contains the event target…",12,N],[18,"EVENT_TARGET_UNIX_PROCESS_ID",E,"Key to access a field that contains the event target Unix…",12,N],[18,"EVENT_SOURCE_UNIX_PROCESS_ID",E,R[3602],12,N],[18,"EVENT_SOURCE_USER_DATA",E,"Key to access a field that contains the event source…",12,N],[18,"EVENT_SOURCE_USER_ID",E,R[3602],12,N],[18,"EVENT_SOURCE_GROUP_ID",E,R[3602],12,N],[18,"EVENT_SOURCE_STATE_ID",E,"Key to access a field that contains the event source state…",12,N],[18,"SCROLL_WHEEL_EVENT_IS_CONTINUOUS",E,"Key to access an integer field that indicates whether a…",12,N],[18,"MOUSE_EVENT_WINDOW_UNDER_MOUSE_POINTER",E,"Added in 10.5; made public in 10.7.",12,N],[18,"MOUSE_EVENT_WINDOW_UNDER_MOUSE_POINTER_THAT_CAN_HANDLE_THIS_EVENT",E,E,12,N],[11,R[18],E,E,13,[[],[R[2415]]]],[11,"new",E,E,13,[[[R[3603]]],[[R[12],["cgevent"]],["cgevent"]]]],[11,"new_keyboard_event",E,E,13,[[["bool"],[R[3603]],["cgkeycode"]],[[R[12],["cgevent"]],["cgevent"]]]],[11,"new_mouse_event",E,E,13,[[[R[3604]],[R[3622]],["cgpoint"],[R[3603]]],[[R[12],["cgevent"]],["cgevent"]]]],[11,"post",E,E,13,[[[R[3623]],["self"]]]],[11,"location",E,E,13,[[["self"]],["cgpoint"]]],[11,"set_flags",E,E,13,[[[R[3592]],["self"]]]],[11,"get_flags",E,E,13,[[["self"]],[R[3592]]]],[11,"set_type",E,E,13,[[[R[3604]],["self"]]]],[11,R[4349],E,E,13,[[["self"]],[R[3604]]]],[11,"set_string_from_utf16_unchecked",E,E,13,[[["self"]]]],[11,"set_string",E,E,13,[[["str"],["self"]]]],[11,"get_integer_value_field",E,E,13,[[["self"],[R[3605]]],["i64"]]],[11,"set_integer_value_field",E,E,13,[[["i64"],["self"],[R[3605]]]]],[11,"get_double_value_field",E,E,13,[[["self"],[R[3605]]],["f64"]]],[11,"set_double_value_field",E,E,13,[[["f64"],["self"],[R[3605]]]]],[0,"event_source",R[3583],E,N,N],[3,R[3645],R[3615],E,N,N],[3,R[3654],E,E,N,N],[4,R[3644],E,"Possible source states of an event source.",N,N],[13,"Private",E,E,14,N],[13,"CombinedSessionState",E,E,14,N],[13,"HIDSystemState",E,E,14,N],[11,R[18],E,E,15,[[],[R[2415]]]],[11,"new",E,E,15,[[[R[3624]]],[R[12]]]],[0,"font",R[3583],E,N,N],[3,"CGFont",R[3616],E,N,N],[3,"CGFontRef",E,E,N,N],[6,"CGGlyph",E,E,N,N],[11,R[18],E,E,16,[[],[R[2415]]]],[11,"from_data_provider",E,E,16,[[[R[3621]]],[[R[12],["cgfont"]],["cgfont"]]]],[11,"from_name",E,E,16,[[[R[2368]]],[[R[12],["cgfont"]],["cgfont"]]]],[11,"create_copy_from_variations",E,E,16,[[["self"],[R[2356]]],[[R[12],["cgfont"]],["cgfont"]]]],[11,"postscript_name",E,E,16,[[["self"]],[R[2368]]]],[11,"get_glyph_b_boxes",E,E,16,[[["self"]],["bool"]]],[11,"get_glyph_advances",E,E,16,[[["self"]],["bool"]]],[11,"get_units_per_em",E,E,16,[[["self"]],["c_int"]]],[11,"copy_table_tags",E,E,16,[[["self"]],[["u32"],["cfarray",["u32"]]]]],[11,"copy_table_for_tag",E,E,16,[[["u32"],["self"]],[["cfdata"],[R[52],["cfdata"]]]]],[0,"geometry",R[3583],E,N,N],[3,"CGSize",R[3617],E,N,N],[12,"width",E,E,17,N],[12,"height",E,E,17,N],[3,"CGPoint",E,E,N,N],[12,"x",E,E,18,N],[12,"y",E,E,18,N],[3,"CGRect",E,E,N,N],[12,"origin",E,E,19,N],[12,"size",E,E,19,N],[3,R[3646],E,E,N,N],[12,"a",E,E,20,N],[12,"b",E,E,20,N],[12,"c",E,E,20,N],[12,"d",E,E,20,N],[12,"tx",E,E,20,N],[12,"ty",E,E,20,N],[17,"CG_ZERO_POINT",E,E,N,N],[17,"CG_ZERO_SIZE",E,E,N,N],[17,"CG_ZERO_RECT",E,E,N,N],[17,"CG_AFFINE_TRANSFORM_IDENTITY",E,E,N,N],[11,"new",E,E,17,[[["cgfloat"]],["cgsize"]]],[11,R[3607],E,E,17,[[[R[3606]],["self"]],["cgsize"]]],[11,"new",E,E,18,[[["cgfloat"]],["cgpoint"]]],[11,R[3607],E,E,18,[[[R[3606]],["self"]],["cgpoint"]]],[11,"new",E,E,19,[[["cgpoint"],["cgsize"]],["cgrect"]]],[11,"inset",E,E,19,[[["self"],["cgsize"]],["cgrect"]]],[11,"from_dict_representation",E,E,19,[[[R[2356]]],[[R[52],["cgrect"]],["cgrect"]]]],[11,R[69],E,E,19,[[["self"]],["bool"]]],[11,"is_intersects",E,E,19,[[["cgrect"],["self"]],["bool"]]],[11,R[3607],E,E,19,[[[R[3606]],["self"]],["cgrect"]]],[11,"new",E,E,20,[[["cgfloat"]],[R[3606]]]],[11,"invert",E,E,20,[[["self"]],[R[3606]]]],[0,"private",R[3583],"Evil private APIs.",N,N],[3,"CGSRegion",R[3618],E,N,N],[3,"CGSSurface",E,"This should always be memory-safe; the window server…",N,N],[11,"from_rect",E,E,21,[[["cgrect"]],["cgsregion"]]],[11,"from_rects",E,E,21,[[],["cgsregion"]]],[11,"from_ids",E,E,22,[[["c_int"],["c_uint"]],["cgssurface"]]],[11,"id",E,E,22,[[["self"]],["c_uint"]]],[11,"set_shape",E,E,22,[[["self"],["cgsregion"]]]],[0,"image",R[3583],E,N,N],[3,"CGImage",R[3619],E,N,N],[3,"CGImageRef",E,E,N,N],[4,R[3647],E,E,N,N],[13,"CGImageAlphaNone",E,E,23,N],[13,"CGImageAlphaPremultipliedLast",E,E,23,N],[13,"CGImageAlphaPremultipliedFirst",E,E,23,N],[13,"CGImageAlphaLast",E,E,23,N],[13,"CGImageAlphaFirst",E,E,23,N],[13,"CGImageAlphaNoneSkipLast",E,E,23,N],[13,"CGImageAlphaNoneSkipFirst",E,E,23,N],[13,"CGImageAlphaOnly",E,E,23,N],[4,R[3648],E,E,N,N],[13,"CGImageByteOrderMask",E,E,24,N],[13,"CGImageByteOrder16Little",E,E,24,N],[13,"CGImageByteOrder32Little",E,E,24,N],[13,"CGImageByteOrder16Big",E,E,24,N],[13,"CGImageByteOrder32Big",E,E,24,N],[11,R[18],E,E,25,[[],[R[2415]]]],[11,"width",E,E,26,[[["self"]],["size_t"]]],[11,"height",E,E,26,[[["self"]],["size_t"]]],[11,"bits_per_component",E,E,26,[[["self"]],["size_t"]]],[11,"bits_per_pixel",E,E,26,[[["self"]],["size_t"]]],[11,R[3608],E,E,26,[[["self"]],["size_t"]]],[11,R[3609],E,E,26,[[["self"]],[R[3584]]]],[11,"data",E,"Returns the raw image bytes wrapped in `CFData`. Note, the…",26,[[["self"]],["cfdata"]]],[0,"path",R[3583],E,N,N],[3,"CGPath",R[3620],E,N,N],[3,"CGPathRef",E,E,N,N],[3,R[3655],E,E,N,N],[3,R[3649],E,E,N,N],[12,"element_type",E,E,27,N],[4,R[3650],E,E,N,N],[13,"MoveToPoint",E,E,28,N],[13,"AddLineToPoint",E,E,28,N],[13,"AddQuadCurveToPoint",E,E,28,N],[13,"AddCurveToPoint",E,E,28,N],[13,"CloseSubpath",E,E,28,N],[11,R[18],E,E,29,[[],[R[2415]]]],[11,"apply",E,E,29,[[["f"],["self"]]]],[11,"points",E,E,27,[[["self"]]]],[11,"from",R[3610],E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[[T],["self"]]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[16],E,E,30,[[["self"]],[T]]],[11,R[17],E,E,30,[[[T],["self"]]]],[11,R[11],E,E,30,[[[U]],[R[12]]]],[11,R[39],E,E,30,[[["self"]],[T]]],[11,R[13],E,E,30,[[["self"]],[T]]],[11,R[14],E,E,30,[[],[R[12]]]],[11,R[18],E,E,30,[[["self"]],[R[40]]]],[11,"from",R[3611],E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[17],E,E,2,[[[T],["self"]]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[16],E,E,31,[[["self"]],[T]]],[11,R[17],E,E,31,[[[T],["self"]]]],[11,R[11],E,E,31,[[[U]],[R[12]]]],[11,R[39],E,E,31,[[["self"]],[T]]],[11,R[13],E,E,31,[[["self"]],[T]]],[11,R[14],E,E,31,[[],[R[12]]]],[11,R[18],E,E,31,[[["self"]],[R[40]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",R[3612],E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[17],E,E,3,[[[T],["self"]]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[16],E,E,4,[[["self"]],[T]]],[11,R[17],E,E,4,[[[T],["self"]]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,"from",R[3613],E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[16],E,E,32,[[["self"]],[T]]],[11,R[17],E,E,32,[[[T],["self"]]]],[11,R[11],E,E,32,[[[U]],[R[12]]]],[11,R[39],E,E,32,[[["self"]],[T]]],[11,R[13],E,E,32,[[["self"]],[T]]],[11,R[14],E,E,32,[[],[R[12]]]],[11,R[18],E,E,32,[[["self"]],[R[40]]]],[11,R[2393],E,E,32,[[],["itemref"]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[16],E,E,33,[[["self"]],[T]]],[11,R[17],E,E,33,[[[T],["self"]]]],[11,R[11],E,E,33,[[[U]],[R[12]]]],[11,R[39],E,E,33,[[["self"]],[T]]],[11,R[13],E,E,33,[[["self"]],[T]]],[11,R[14],E,E,33,[[],[R[12]]]],[11,R[18],E,E,33,[[["self"]],[R[40]]]],[11,R[2393],E,E,33,[[],["itemref"]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[16],E,E,5,[[["self"]],[T]]],[11,R[17],E,E,5,[[[T],["self"]]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,R[18],E,E,5,[[["self"]],[R[40]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[16],E,E,6,[[["self"]],[T]]],[11,R[17],E,E,6,[[[T],["self"]]]],[11,R[11],E,E,6,[[[U]],[R[12]]]],[11,R[39],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[],[R[12]]]],[11,R[18],E,E,6,[[["self"]],[R[40]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[16],E,E,34,[[["self"]],[T]]],[11,R[17],E,E,34,[[[T],["self"]]]],[11,R[11],E,E,34,[[[U]],[R[12]]]],[11,R[39],E,E,34,[[["self"]],[T]]],[11,R[13],E,E,34,[[["self"]],[T]]],[11,R[14],E,E,34,[[],[R[12]]]],[11,R[18],E,E,34,[[["self"]],[R[40]]]],[11,"from",R[3614],E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[16],E,E,10,[[["self"]],[T]]],[11,R[17],E,E,10,[[[T],["self"]]]],[11,R[11],E,E,10,[[[U]],[R[12]]]],[11,R[39],E,E,10,[[["self"]],[T]]],[11,R[13],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[],[R[12]]]],[11,R[18],E,E,10,[[["self"]],[R[40]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[11],E,E,11,[[[U]],[R[12]]]],[11,R[39],E,E,11,[[["self"]],[T]]],[11,R[13],E,E,11,[[["self"]],[T]]],[11,R[14],E,E,11,[[],[R[12]]]],[11,R[18],E,E,11,[[["self"]],[R[40]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[11],E,E,12,[[[U]],[R[12]]]],[11,R[39],E,E,12,[[["self"]],[T]]],[11,R[13],E,E,12,[[["self"]],[T]]],[11,R[14],E,E,12,[[],[R[12]]]],[11,R[18],E,E,12,[[["self"]],[R[40]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[16],E,E,13,[[["self"]],[T]]],[11,R[17],E,E,13,[[[T],["self"]]]],[11,R[11],E,E,13,[[[U]],[R[12]]]],[11,R[39],E,E,13,[[["self"]],[T]]],[11,R[13],E,E,13,[[["self"]],[T]]],[11,R[14],E,E,13,[[],[R[12]]]],[11,R[18],E,E,13,[[["self"]],[R[40]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[16],E,E,35,[[["self"]],[T]]],[11,R[17],E,E,35,[[[T],["self"]]]],[11,R[11],E,E,35,[[[U]],[R[12]]]],[11,R[39],E,E,35,[[["self"]],[T]]],[11,R[13],E,E,35,[[["self"]],[T]]],[11,R[14],E,E,35,[[],[R[12]]]],[11,R[18],E,E,35,[[["self"]],[R[40]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[16],E,E,7,[[["self"]],[T]]],[11,R[17],E,E,7,[[[T],["self"]]]],[11,R[11],E,E,7,[[[U]],[R[12]]]],[11,R[39],E,E,7,[[["self"]],[T]]],[11,R[13],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[],[R[12]]]],[11,R[18],E,E,7,[[["self"]],[R[40]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[16],E,E,8,[[["self"]],[T]]],[11,R[17],E,E,8,[[[T],["self"]]]],[11,R[11],E,E,8,[[[U]],[R[12]]]],[11,R[39],E,E,8,[[["self"]],[T]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[],[R[12]]]],[11,R[18],E,E,8,[[["self"]],[R[40]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[16],E,E,9,[[["self"]],[T]]],[11,R[17],E,E,9,[[[T],["self"]]]],[11,R[11],E,E,9,[[[U]],[R[12]]]],[11,R[39],E,E,9,[[["self"]],[T]]],[11,R[13],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[],[R[12]]]],[11,R[18],E,E,9,[[["self"]],[R[40]]]],[11,"from",R[3615],E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[16],E,E,15,[[["self"]],[T]]],[11,R[17],E,E,15,[[[T],["self"]]]],[11,R[11],E,E,15,[[[U]],[R[12]]]],[11,R[39],E,E,15,[[["self"]],[T]]],[11,R[13],E,E,15,[[["self"]],[T]]],[11,R[14],E,E,15,[[],[R[12]]]],[11,R[18],E,E,15,[[["self"]],[R[40]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,R[16],E,E,36,[[["self"]],[T]]],[11,R[17],E,E,36,[[[T],["self"]]]],[11,R[11],E,E,36,[[[U]],[R[12]]]],[11,R[39],E,E,36,[[["self"]],[T]]],[11,R[13],E,E,36,[[["self"]],[T]]],[11,R[14],E,E,36,[[],[R[12]]]],[11,R[18],E,E,36,[[["self"]],[R[40]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[16],E,E,14,[[["self"]],[T]]],[11,R[17],E,E,14,[[[T],["self"]]]],[11,R[11],E,E,14,[[[U]],[R[12]]]],[11,R[39],E,E,14,[[["self"]],[T]]],[11,R[13],E,E,14,[[["self"]],[T]]],[11,R[14],E,E,14,[[],[R[12]]]],[11,R[18],E,E,14,[[["self"]],[R[40]]]],[11,"from",R[3616],E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[16],E,E,16,[[["self"]],[T]]],[11,R[17],E,E,16,[[[T],["self"]]]],[11,R[11],E,E,16,[[[U]],[R[12]]]],[11,R[39],E,E,16,[[["self"]],[T]]],[11,R[13],E,E,16,[[["self"]],[T]]],[11,R[14],E,E,16,[[],[R[12]]]],[11,R[18],E,E,16,[[["self"]],[R[40]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,"into",E,E,37,[[],[U]]],[11,R[16],E,E,37,[[["self"]],[T]]],[11,R[17],E,E,37,[[[T],["self"]]]],[11,R[11],E,E,37,[[[U]],[R[12]]]],[11,R[39],E,E,37,[[["self"]],[T]]],[11,R[13],E,E,37,[[["self"]],[T]]],[11,R[14],E,E,37,[[],[R[12]]]],[11,R[18],E,E,37,[[["self"]],[R[40]]]],[11,"from",R[3617],E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[16],E,E,17,[[["self"]],[T]]],[11,R[17],E,E,17,[[[T],["self"]]]],[11,R[11],E,E,17,[[[U]],[R[12]]]],[11,R[39],E,E,17,[[["self"]],[T]]],[11,R[13],E,E,17,[[["self"]],[T]]],[11,R[14],E,E,17,[[],[R[12]]]],[11,R[18],E,E,17,[[["self"]],[R[40]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[16],E,E,18,[[["self"]],[T]]],[11,R[17],E,E,18,[[[T],["self"]]]],[11,R[11],E,E,18,[[[U]],[R[12]]]],[11,R[39],E,E,18,[[["self"]],[T]]],[11,R[13],E,E,18,[[["self"]],[T]]],[11,R[14],E,E,18,[[],[R[12]]]],[11,R[18],E,E,18,[[["self"]],[R[40]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[16],E,E,19,[[["self"]],[T]]],[11,R[17],E,E,19,[[[T],["self"]]]],[11,R[11],E,E,19,[[[U]],[R[12]]]],[11,R[39],E,E,19,[[["self"]],[T]]],[11,R[13],E,E,19,[[["self"]],[T]]],[11,R[14],E,E,19,[[],[R[12]]]],[11,R[18],E,E,19,[[["self"]],[R[40]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[16],E,E,20,[[["self"]],[T]]],[11,R[17],E,E,20,[[[T],["self"]]]],[11,R[11],E,E,20,[[[U]],[R[12]]]],[11,R[39],E,E,20,[[["self"]],[T]]],[11,R[13],E,E,20,[[["self"]],[T]]],[11,R[14],E,E,20,[[],[R[12]]]],[11,R[18],E,E,20,[[["self"]],[R[40]]]],[11,"from",R[3618],E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[11],E,E,21,[[[U]],[R[12]]]],[11,R[39],E,E,21,[[["self"]],[T]]],[11,R[13],E,E,21,[[["self"]],[T]]],[11,R[14],E,E,21,[[],[R[12]]]],[11,R[18],E,E,21,[[["self"]],[R[40]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[11],E,E,22,[[[U]],[R[12]]]],[11,R[39],E,E,22,[[["self"]],[T]]],[11,R[13],E,E,22,[[["self"]],[T]]],[11,R[14],E,E,22,[[],[R[12]]]],[11,R[18],E,E,22,[[["self"]],[R[40]]]],[11,"from",R[3619],E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[16],E,E,25,[[["self"]],[T]]],[11,R[17],E,E,25,[[[T],["self"]]]],[11,R[11],E,E,25,[[[U]],[R[12]]]],[11,R[39],E,E,25,[[["self"]],[T]]],[11,R[13],E,E,25,[[["self"]],[T]]],[11,R[14],E,E,25,[[],[R[12]]]],[11,R[18],E,E,25,[[["self"]],[R[40]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[16],E,E,26,[[["self"]],[T]]],[11,R[17],E,E,26,[[[T],["self"]]]],[11,R[11],E,E,26,[[[U]],[R[12]]]],[11,R[39],E,E,26,[[["self"]],[T]]],[11,R[13],E,E,26,[[["self"]],[T]]],[11,R[14],E,E,26,[[],[R[12]]]],[11,R[18],E,E,26,[[["self"]],[R[40]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[11],E,E,23,[[[U]],[R[12]]]],[11,R[39],E,E,23,[[["self"]],[T]]],[11,R[13],E,E,23,[[["self"]],[T]]],[11,R[14],E,E,23,[[],[R[12]]]],[11,R[18],E,E,23,[[["self"]],[R[40]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[11],E,E,24,[[[U]],[R[12]]]],[11,R[39],E,E,24,[[["self"]],[T]]],[11,R[13],E,E,24,[[["self"]],[T]]],[11,R[14],E,E,24,[[],[R[12]]]],[11,R[18],E,E,24,[[["self"]],[R[40]]]],[11,"from",R[3620],E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[16],E,E,29,[[["self"]],[T]]],[11,R[17],E,E,29,[[[T],["self"]]]],[11,R[11],E,E,29,[[[U]],[R[12]]]],[11,R[39],E,E,29,[[["self"]],[T]]],[11,R[13],E,E,29,[[["self"]],[T]]],[11,R[14],E,E,29,[[],[R[12]]]],[11,R[18],E,E,29,[[["self"]],[R[40]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,"into",E,E,38,[[],[U]]],[11,R[16],E,E,38,[[["self"]],[T]]],[11,R[17],E,E,38,[[[T],["self"]]]],[11,R[11],E,E,38,[[[U]],[R[12]]]],[11,R[39],E,E,38,[[["self"]],[T]]],[11,R[13],E,E,38,[[["self"]],[T]]],[11,R[14],E,E,38,[[],[R[12]]]],[11,R[18],E,E,38,[[["self"]],[R[40]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,R[11],E,E,39,[[[U]],[R[12]]]],[11,R[39],E,E,39,[[["self"]],[T]]],[11,R[13],E,E,39,[[["self"]],[T]]],[11,R[14],E,E,39,[[],[R[12]]]],[11,R[18],E,E,39,[[["self"]],[R[40]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[11],E,E,27,[[[U]],[R[12]]]],[11,R[39],E,E,27,[[["self"]],[T]]],[11,R[13],E,E,27,[[["self"]],[T]]],[11,R[14],E,E,27,[[],[R[12]]]],[11,R[18],E,E,27,[[["self"]],[R[40]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[16],E,E,28,[[["self"]],[T]]],[11,R[17],E,E,28,[[[T],["self"]]]],[11,R[11],E,E,28,[[[U]],[R[12]]]],[11,R[39],E,E,28,[[["self"]],[T]]],[11,R[13],E,E,28,[[["self"]],[T]]],[11,R[14],E,E,28,[[],[R[12]]]],[11,R[18],E,E,28,[[["self"]],[R[40]]]],[11,R[2371],R[3613],E,33,[[["self"]]]],[11,R[2372],E,E,33,[[],["cfarray"]]],[11,R[2375],E,E,33,[[["self"]]]],[11,R[2376],E,E,33,[[],["cfarray"]]],[11,R[18],E,E,33,[[],["u64"]]],[11,R[2371],E,E,32,[[["self"]]]],[11,R[2372],E,E,32,[[],[R[2356]]]],[11,R[2375],E,E,32,[[["self"]]]],[11,R[2376],E,E,32,[[],[R[2356]]]],[11,R[18],E,E,32,[[],["u64"]]],[11,"clone",E,E,32,[[["self"]],[R[2356]]]],[11,"clone",E,E,33,[[["self"]],["cfarray"]]],[11,"drop",E,E,32,[[["self"]]]],[11,"drop",E,E,33,[[["self"]]]],[11,"fmt",E,E,33,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,32,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"eq",E,E,33,[[["cfarray"],["self"]],["bool"]]],[11,"eq",E,E,32,[[[R[2356]],["self"]],["bool"]]],[11,"eq",R[3614],E,10,[[["self"],[R[3592]]],["bool"]]],[11,"ne",E,E,10,[[["self"],[R[3592]]],["bool"]]],[11,"eq",R[3620],E,28,[[["self"],[R[3625]]],["bool"]]],[11,"clone",R[3610],E,0,[[["self"]],[R[3584]]]],[11,"clone",R[3611],E,2,[[["self"]],["cgcontext"]]],[11,"clone",R[3612],E,3,[[["self"]],[R[3621]]]],[11,"clone",R[3613],E,5,[[["self"]],["cgdisplay"]]],[11,"clone",E,E,6,[[["self"]],[R[3585]]]],[11,"clone",R[3614],E,10,[[["self"]],[R[3592]]]],[11,"clone",E,E,7,[[["self"]],[R[3604]]]],[11,"clone",E,E,8,[[["self"]],[R[3622]]]],[11,"clone",E,E,9,[[["self"]],[R[3623]]]],[11,"clone",E,E,13,[[["self"]],["cgevent"]]],[11,"clone",R[3615],E,14,[[["self"]],[R[3624]]]],[11,"clone",E,E,15,[[["self"]],[R[3603]]]],[11,"clone",R[3616],E,16,[[["self"]],["cgfont"]]],[11,"clone",R[3617],E,17,[[["self"]],["cgsize"]]],[11,"clone",E,E,18,[[["self"]],["cgpoint"]]],[11,"clone",E,E,19,[[["self"]],["cgrect"]]],[11,"clone",E,E,20,[[["self"]],[R[3606]]]],[11,"clone",R[3619],E,25,[[["self"]],["cgimage"]]],[11,"clone",R[3620],E,29,[[["self"]],["cgpath"]]],[11,"clone",E,E,28,[[["self"]],[R[3625]]]],[11,"cmp",R[3614],E,10,[[["self"],[R[3592]]],[R[51]]]],[11,"extend",E,E,10,[[[R[50]],["self"]]]],[11,"drop",R[3610],E,0,[[["self"]]]],[11,"drop",R[3611],E,2,[[["self"]]]],[11,"drop",R[3612],E,3,[[["self"]]]],[11,"drop",R[3613],E,6,[[["self"]]]],[11,"drop",R[3614],E,13,[[["self"]]]],[11,"drop",R[3615],E,15,[[["self"]]]],[11,"drop",R[3616],E,16,[[["self"]]]],[11,"drop",R[3618],E,21,[[["self"]]]],[11,"drop",R[3619],E,25,[[["self"]]]],[11,"drop",R[3620],E,29,[[["self"]]]],[11,R[16],R[3610],E,30,[[["self"]],[R[3584]]]],[11,R[16],R[3611],E,31,[[["self"]],["cgcontext"]]],[11,R[16],R[3612],E,4,[[["self"]],[R[3621]]]],[11,R[16],R[3613],E,34,[[["self"]],[R[3585]]]],[11,R[16],R[3614],E,35,[[["self"]],["cgevent"]]],[11,R[16],R[3615],E,36,[[["self"]],[R[3603]]]],[11,R[16],R[3616],E,37,[[["self"]],["cgfont"]]],[11,R[16],R[3619],E,26,[[["self"]],["cgimage"]]],[11,R[16],R[3620],E,38,[[["self"]],["cgpath"]]],[11,R[264],R[3614],E,10,[[["self"],[R[3592]]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,10,[[["self"],[R[3592]]],["bool"]]],[11,"le",E,E,10,[[["self"],[R[3592]]],["bool"]]],[11,"gt",E,E,10,[[["self"],[R[3592]]],["bool"]]],[11,"ge",E,E,10,[[["self"],[R[3592]]],["bool"]]],[11,"as_ref",R[3610],E,0,[[["self"]],[R[3626]]]],[11,"as_ref",R[3611],E,2,[[["self"]],[R[3627]]]],[11,"as_ref",R[3612],E,3,[[["self"]],[R[3628]]]],[11,"as_ref",R[3613],E,6,[[["self"]],[R[3629]]]],[11,"as_ref",R[3614],E,13,[[["self"]],[R[3631]]]],[11,"as_ref",R[3615],E,15,[[["self"]],[R[3630]]]],[11,"as_ref",R[3616],E,16,[[["self"]],[R[3633]]]],[11,"as_ref",R[3619],E,25,[[["self"]],[R[3632]]]],[11,"as_ref",R[3620],E,29,[[["self"]],[R[3634]]]],[11,R[79],R[3617],E,17,[[],["cgsize"]]],[11,R[79],E,E,18,[[],["cgpoint"]]],[11,R[79],E,E,19,[[],["cgrect"]]],[11,R[79],E,E,20,[[],[R[3606]]]],[11,"fmt",R[3614],E,10,[[[R[29]],["self"]],[R[12]]]],[11,R[54],R[3610],E,0,[[["self"]],[R[3626]]]],[11,R[54],R[3611],E,2,[[["self"]],[R[3627]]]],[11,R[54],R[3612],E,3,[[["self"]],[R[3628]]]],[11,R[54],R[3613],E,6,[[["self"]],[R[3629]]]],[11,R[54],R[3614],E,13,[[["self"]],[R[3631]]]],[11,R[54],R[3615],E,15,[[["self"]],[R[3630]]]],[11,R[54],R[3616],E,16,[[["self"]],[R[3633]]]],[11,R[54],R[3619],E,25,[[["self"]],[R[3632]]]],[11,R[54],R[3620],E,29,[[["self"]],[R[3634]]]],[11,"fmt",R[3613],E,5,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[3614],E,10,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,7,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,8,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,9,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[3615],E,14,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[3617],E,17,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,18,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,19,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,20,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[3620],E,28,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,27,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"sub",R[3614],R[1979],10,[[[R[3592]]],[R[3592]]]],[11,R[1981],E,R[1980],10,[[["self"],[R[3592]]]]],[11,"not",E,R[1982],10,[[],[R[3592]]]],[11,"bitand",E,R[1983],10,[[[R[3592]]],[R[3592]]]],[11,"bitor",E,R[1984],10,[[[R[3592]]],[R[3592]]]],[11,"bitxor",E,R[1985],10,[[[R[3592]]],[R[3592]]]],[11,R[1986],E,R[1987],10,[[["self"],[R[3592]]]]],[11,R[1988],E,R[1989],10,[[["self"],[R[3592]]]]],[11,R[1990],E,R[1991],10,[[["self"],[R[3592]]]]],[11,"deref",R[3610],E,0,[[["self"]],[R[3626]]]],[11,"deref",R[3611],E,2,[[["self"]],[R[3627]]]],[11,"deref",R[3612],E,3,[[["self"]],[R[3628]]]],[11,"deref",R[3613],E,6,[[["self"]],[R[3629]]]],[11,"deref",R[3614],E,13,[[["self"]],[R[3631]]]],[11,"deref",R[3615],E,15,[[["self"]],[R[3630]]]],[11,"deref",R[3616],E,16,[[["self"]],[R[3633]]]],[11,"deref",R[3619],E,25,[[["self"]],[R[3632]]]],[11,"deref",R[3620],E,29,[[["self"]],[R[3634]]]],[11,"deref",E,E,39,[[["self"]],["cgpathelement"]]],[11,"hash",R[3614],E,10,[[["self"],["__h"]]]],[11,R[187],E,E,10,[[[R[50]]],[R[3592]]]],[11,"fmt",E,E,10,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,10,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,10,[[[R[29]],["self"]],[R[12]]]],[11,R[39],R[3610],E,0,[[["self"]],[R[3626]]]],[11,R[39],R[3611],E,2,[[["self"]],[R[3627]]]],[11,R[39],R[3612],E,3,[[["self"]],[R[3628]]]],[11,R[39],R[3613],E,6,[[["self"]],[R[3629]]]],[11,R[39],R[3614],E,13,[[["self"]],[R[3631]]]],[11,R[39],R[3615],E,15,[[["self"]],[R[3630]]]],[11,R[39],R[3616],E,16,[[["self"]],[R[3633]]]],[11,R[39],R[3619],E,25,[[["self"]],[R[3632]]]],[11,R[39],R[3620],E,29,[[["self"]],[R[3634]]]],[11,R[2358],R[3613],E,32,[[],[R[2356]]]],[11,"len",E,E,32,[[["self"]],[R[9]]]],[11,R[69],E,E,32,[[["self"]],["bool"]]],[11,R[2362],E,E,32,[[["self"]],["bool"]]],[11,R[2801],E,R[2802],32,[[["k"],["self"]],["bool"]]],[11,"find",E,E,32,[[["self"]],[R[52]]]],[11,"find2",E,R[2803],32,[[["k"],["self"]],[R[52]]]],[11,"get",E,"Panics",32,[[["self"]]]],[11,R[3658],E,R[2804],32,[[["self"]],["cftype"]]],[11,R[2363],E,E,32,[[["self"]]]],[11,R[2807],E,R[2350],33,[[],["cfarray"]]],[11,R[2360],E,E,33,[[["self"]],["cfarray"]]],[11,R[2357],E,R[2808],33,[[],["cfarray"]]],[11,"iter",E,R[2809],33,[[["self"]],[R[2810]]]],[11,"len",E,E,33,[[["self"]],["i64"]]],[11,R[2453],E,E,33,[[["i64"],["self"]],["itemref"]]],[11,"get",E,E,33,[[["i64"],["self"]],[["itemref"],[R[52],["itemref"]]]]],[11,R[3656],E,E,33,[[["cfrange"],["self"]],["vec"]]],[11,R[2811],E,E,33,[[["self"]],["vec"]]]],"p":[[3,R[3635]],[4,R[3636]],[3,"CGContext"],[3,R[3637]],[3,R[3638]],[3,"CGDisplay"],[3,R[3639]],[4,R[3640]],[4,R[3641]],[4,R[3642]],[3,R[3643]],[3,"KeyCode"],[3,"EventField"],[3,"CGEvent"],[4,R[3644]],[3,R[3645]],[3,"CGFont"],[3,"CGSize"],[3,"CGPoint"],[3,"CGRect"],[3,R[3646]],[3,"CGSRegion"],[3,"CGSSurface"],[4,R[3647]],[4,R[3648]],[3,"CGImage"],[3,"CGImageRef"],[3,R[3649]],[4,R[3650]],[3,"CGPath"],[3,R[3651]],[3,R[3652]],[3,R[2441]],[3,"CFArray"],[3,R[3653]],[3,"CGEventRef"],[3,R[3654]],[3,"CGFontRef"],[3,"CGPathRef"],[3,R[3655]]]};
searchIndex[R[367]]={"doc":R[368],"i":[[8,"StableAddress",R[367],R[394],N,N],[8,"CloneStableAddress",E,R[395],N,N],[3,R[391],E,R[368],N,N],[3,R[392],E,"An mutable owning reference.",N,N],[3,R[393],E,"`OwningHandle` is a complement to `OwningRef`. Where…",N,N],[6,"BoxRef",E,"Typedef of a owning reference that uses a `Box` as the…",N,N],[6,"VecRef",E,"Typedef of a owning reference that uses a `Vec` as the…",N,N],[6,"StringRef",E,"Typedef of a owning reference that uses a `String` as the…",N,N],[6,"RcRef",E,"Typedef of a owning reference that uses a `Rc` as the owner.",N,N],[6,"ArcRef",E,"Typedef of a owning reference that uses a `Arc` as the…",N,N],[6,"RefRef",E,"Typedef of a owning reference that uses a `Ref` as the…",N,N],[6,"RefMutRef",E,"Typedef of a owning reference that uses a `RefMut` as the…",N,N],[6,"MutexGuardRef",E,"Typedef of a owning reference that uses a `MutexGuard` as…",N,N],[6,"RwLockReadGuardRef",E,R[369],N,N],[6,"RwLockWriteGuardRef",E,R[369],N,N],[6,"BoxRefMut",E,"Typedef of a mutable owning reference that uses a `Box` as…",N,N],[6,"VecRefMut",E,"Typedef of a mutable owning reference that uses a `Vec` as…",N,N],[6,"StringRefMut",E,"Typedef of a mutable owning reference that uses a `String`…",N,N],[6,"RefMutRefMut",E,"Typedef of a mutable owning reference that uses a `RefMut`…",N,N],[6,"MutexGuardRefMut",E,R[370],N,N],[6,"RwLockWriteGuardRefMut",E,R[370],N,N],[6,"ErasedBoxRef",E,"Typedef of a owning reference that uses an erased `Box` as…",N,N],[6,"ErasedRcRef",E,"Typedef of a owning reference that uses an erased `Rc` as…",N,N],[6,"ErasedArcRef",E,"Typedef of a owning reference that uses an erased `Arc` as…",N,N],[6,"ErasedBoxRefMut",E,"Typedef of a mutable owning reference that uses an erased…",N,N],[8,"Erased",E,"Helper trait for an erased concrete type an owner…",N,N],[8,R[389],E,"Helper trait for erasing the concrete type of what an…",N,N],[16,"Erased",E,"Owner with the dereference type substituted to `Erased`.",0,N],[10,"into_erased",E,"Perform the type erasure.",0,[[]]],[8,"ToHandle",E,"Trait to implement the conversion of owner to handle for…",N,N],[16,"Handle",E,R[371],1,N],[10,"to_handle",E,R[372],1,[[]]],[8,R[390],E,"Trait to implement the conversion of owner to mutable…",N,N],[16,"HandleMut",E,R[371],2,N],[10,"to_handle_mut",E,R[372],2,[[]]],[11,"new",E,R[374],3,[[["o"]],["self"]]],[11,R[375],E,R[376],3,[[["o"]],["self"]]],[11,"map",E,"Converts `self` into a new owning reference that points at…",3,[[["f"]],[[R[373]],["sized"]]]],[11,"try_map",E,"Tries to convert `self` into a new owning reference that…",3,[[["f"]],[[R[373]],[R[12],[R[373]]]]]],[11,R[378],E,R[379],3,[[["f"]],[R[373]]]],[11,R[380],E,R[381],3,[[],[["box"],[R[373],["box"]]]]],[11,R[382],E,R[383],3,[[],[R[373]]]],[11,R[388],E,R[384],3,[[["self"]],["o"]]],[11,R[385],E,R[386],3,[[],["o"]]],[11,"new",E,R[374],4,[[["o"]],["self"]]],[11,R[375],E,R[376],4,[[["o"]],["self"]]],[11,"map",E,"Converts `self` into a new shared owning reference that…",4,[[["f"]],[[R[373]],["sized"]]]],[11,"map_mut",E,"Converts `self` into a new mutable owning reference that…",4,[[["f"]],[["sized"],[R[377]]]]],[11,"try_map",E,"Tries to convert `self` into a new shared owning reference…",4,[[["f"]],[[R[373]],[R[12],[R[373]]]]]],[11,"try_map_mut",E,"Tries to convert `self` into a new mutable owning…",4,[[["f"]],[[R[12],[R[377]]],[R[377]]]]],[11,R[378],E,R[379],4,[[["f"]],[R[377]]]],[11,R[380],E,R[381],4,[[],[[R[377],["box"]],["box"]]]],[11,R[382],E,R[383],4,[[],[R[377]]]],[11,R[388],E,R[384],4,[[["self"]],["o"]]],[11,"as_owner_mut",E,"A mutable reference to the underlying owner.",4,[[["self"]],["o"]]],[11,R[385],E,R[386],4,[[],["o"]]],[11,"new",E,"Create a new `OwningHandle` for a type that implements…",5,[[["o"]],["self"]]],[11,"new_mut",E,"Create a new mutable `OwningHandle` for a type that…",5,[[["o"]],["self"]]],[11,"new_with_fn",E,R[387],5,[[["o"],["f"]],["self"]]],[11,"try_new",E,R[387],5,[[["o"],["f"]],[R[12]]]],[11,R[388],E,"A getter for the underlying owner.",5,[[["self"]],["o"]]],[11,R[385],E,"Discards the dependent object and returns the owner.",5,[[],["o"]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[17],E,E,3,[[[T],["self"]]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,R[18],E,E,5,[[["self"]],[R[40]]]],[11,"eq",E,E,3,[[["self"]],["bool"]]],[11,"eq",E,E,4,[[["self"]],["bool"]]],[11,"clone",E,E,3,[[["self"]],["self"]]],[11,"cmp",E,E,3,[[["self"]],[R[51]]]],[11,"cmp",E,E,4,[[["self"]],[R[51]]]],[11,"from",E,E,3,[[["o"]],["self"]]],[11,"from",E,E,4,[[["o"]],["self"]]],[11,"from",E,E,3,[[[R[377]]],["self"]]],[11,R[264],E,E,3,[[["self"]],[[R[52],[R[51]]],[R[51]]]]],[11,R[264],E,E,4,[[["self"]],[[R[52],[R[51]]],[R[51]]]]],[11,"as_mut",E,E,4,[[["self"]],[T]]],[11,"as_ref",E,E,3,[[["self"]],[T]]],[11,"as_ref",E,E,4,[[["self"]],[T]]],[11,R[54],E,E,5,[[["self"]]]],[11,R[54],E,E,4,[[["self"]],[T]]],[11,"fmt",E,E,3,[[["self"],[R[29]]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,4,[[["self"],[R[29]]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,6,[[["self"],[R[29]]],[[R[12],["error"]],["error"]]]],[11,"deref",E,E,5,[[["self"]]]],[11,"deref",E,E,3,[[["self"]],[T]]],[11,"deref",E,E,4,[[["self"]],[T]]],[11,"hash",E,E,3,[[["h"],["self"]]]],[11,"hash",E,E,4,[[["h"],["self"]]]],[11,R[39],E,E,3,[[["self"]],[T]]]],"p":[[8,R[389]],[8,"ToHandle"],[8,R[390]],[3,R[391]],[3,R[392]],[3,R[393]],[8,"Erased"]]};
searchIndex[R[37]]={"doc":"Determine if a `char` is a valid identifier for a parser…","i":[[17,R[243],R[37],"The version of Unicode that this version of unicode-xid is…",N,N],[8,R[38],E,"Methods for determining if a character is a valid…",N,N],[10,"is_xid_start",E,"Returns whether the specified character satisfies the…",0,[[],["bool"]]],[10,"is_xid_continue",E,"Returns whether the specified `char` satisfies the…",0,[[],["bool"]]]],"p":[[8,R[38]]]};
searchIndex[R[413]]={"doc":"Per-object thread-local storage","i":[[3,R[423],R[413],"Thread-local variable wrapper",N,N],[3,R[262],E,"Mutable iterator over the contents of a `ThreadLocal`.",N,N],[3,R[60],E,"An iterator that moves out of a `ThreadLocal`.",N,N],[3,R[424],E,"Wrapper around `ThreadLocal` which adds a fast path for a…",N,N],[6,"CachedIterMut",E,"Mutable iterator over the contents of a `CachedThreadLocal`.",N,N],[6,"CachedIntoIter",E,"An iterator that moves out of a `CachedThreadLocal`.",N,N],[11,"new",E,"Creates a new empty `ThreadLocal`.",0,[[],[R[421]]]],[11,"get",E,R[415],0,[[["self"]],[[R[52]],[T]]]],[11,"get_or",E,R[414],0,[[["self"],["f"]],[T]]],[11,R[416],E,R[414],0,[[["self"],["f"]],[[R[12]],[T]]]],[11,R[261],E,R[417],0,[[["self"]],["itermut"]]],[11,"clear",E,R[418],0,[[["self"]]]],[11,R[419],E,R[420],0,[[["self"]],[T]]],[11,"new",E,"Creates a new empty `CachedThreadLocal`.",1,[[],[R[422]]]],[11,"get",E,R[415],1,[[["self"]],[[R[52]],[T]]]],[11,"get_or",E,R[414],1,[[["self"],["f"]],[T]]],[11,R[416],E,R[414],1,[[["self"],["f"]],[[R[12]],[T]]]],[11,R[261],E,R[417],1,[[["self"]],["cacheditermut"]]],[11,"clear",E,R[418],1,[[["self"]]]],[11,R[419],E,R[420],1,[[["self"]],[T]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[48],E,E,0,[[],["i"]]],[11,"into",E,E,0,[[],[U]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[48],E,E,2,[[],["i"]]],[11,"into",E,E,2,[[],[U]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[48],E,E,3,[[],["i"]]],[11,"into",E,E,3,[[],[U]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[48],E,E,1,[[],["i"]]],[11,"into",E,E,1,[[],[U]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,R[48],E,E,0,[[],[R[800]]]],[11,R[48],E,E,1,[[],["cachedintoiter"]]],[11,"drop",E,E,0,[[["self"]]]],[11,"next",E,E,2,[[["self"]],[[R[52],["box"]],["box"]]]],[11,R[53],E,E,2,[[["self"]]]],[11,"next",E,E,3,[[["self"]],[[R[52],["box"]],["box"]]]],[11,R[53],E,E,3,[[["self"]]]],[11,R[79],E,E,0,[[],[R[421]]]],[11,R[79],E,E,1,[[],[R[422]]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,1,[[["self"],[R[29]]],[R[12]]]]],"p":[[3,R[423]],[3,R[424]],[3,R[262]],[3,R[60]]]};
searchIndex[R[41]]={"doc":"This module defines an unsafe marker trait, StableDeref,…","i":[[8,"StableDeref",R[41],R[394],N,N],[8,"CloneStableDeref",E,R[395],N,N]],"p":[]};
searchIndex[R[425]]={"doc":"Miscellaneous tools for concurrent programming.","i":[[3,R[454],R[425],R[437],N,N],[3,"Backoff",E,"Performs exponential backoff in spin loops.",N,N],[0,"atomic",E,"Atomic types.",N,N],[3,R[452],R[444],"A thread-safe mutable memory location.",N,N],[11,"new",E,"Creates a new atomic cell initialized with `val`.",0,[[[T]],[R[450]]]],[11,R[111],E,R[2348],0,[[["self"]],[T]]],[11,R[46],E,"Unwraps the atomic cell and returns its inner value.",0,[[],[T]]],[11,"is_lock_free",E,"Returns `true` if operations on values of this type are…",0,[[],["bool"]]],[11,"store",E,"Stores `val` into the atomic cell.",0,[[["self"],[T]]]],[11,"swap",E,"Stores `val` into the atomic cell and returns the previous…",0,[[["self"],[T]],[T]]],[11,"load",E,"Loads a value.",0,[[["self"]],[T]]],[11,"compare_and_swap",E,R[426],0,[[["self"],[T]],[T]]],[11,"compare_exchange",E,R[426],0,[[["self"],[T]],[R[12]]]],[11,R[427],E,R[428],0,[[["u8"],["self"]],["u8"]]],[11,R[429],E,R[430],0,[[["u8"],["self"]],["u8"]]],[11,R[431],E,R[432],0,[[["u8"],["self"]],["u8"]]],[11,R[436],E,R[433],0,[[["u8"],["self"]],["u8"]]],[11,R[434],E,R[435],0,[[["u8"],["self"]],["u8"]]],[11,R[427],E,R[428],0,[[["self"],["i8"]],["i8"]]],[11,R[429],E,R[430],0,[[["self"],["i8"]],["i8"]]],[11,R[431],E,R[432],0,[[["self"],["i8"]],["i8"]]],[11,R[436],E,R[433],0,[[["self"],["i8"]],["i8"]]],[11,R[434],E,R[435],0,[[["self"],["i8"]],["i8"]]],[11,R[427],E,R[428],0,[[["u16"],["self"]],["u16"]]],[11,R[429],E,R[430],0,[[["u16"],["self"]],["u16"]]],[11,R[431],E,R[432],0,[[["u16"],["self"]],["u16"]]],[11,R[436],E,R[433],0,[[["u16"],["self"]],["u16"]]],[11,R[434],E,R[435],0,[[["u16"],["self"]],["u16"]]],[11,R[427],E,R[428],0,[[["i16"],["self"]],["i16"]]],[11,R[429],E,R[430],0,[[["i16"],["self"]],["i16"]]],[11,R[431],E,R[432],0,[[["i16"],["self"]],["i16"]]],[11,R[436],E,R[433],0,[[["i16"],["self"]],["i16"]]],[11,R[434],E,R[435],0,[[["i16"],["self"]],["i16"]]],[11,R[427],E,R[428],0,[[["u32"],["self"]],["u32"]]],[11,R[429],E,R[430],0,[[["u32"],["self"]],["u32"]]],[11,R[431],E,R[432],0,[[["u32"],["self"]],["u32"]]],[11,R[436],E,R[433],0,[[["u32"],["self"]],["u32"]]],[11,R[434],E,R[435],0,[[["u32"],["self"]],["u32"]]],[11,R[427],E,R[428],0,[[["i32"],["self"]],["i32"]]],[11,R[429],E,R[430],0,[[["i32"],["self"]],["i32"]]],[11,R[431],E,R[432],0,[[["i32"],["self"]],["i32"]]],[11,R[436],E,R[433],0,[[["i32"],["self"]],["i32"]]],[11,R[434],E,R[435],0,[[["i32"],["self"]],["i32"]]],[11,R[427],E,R[428],0,[[["self"],["u64"]],["u64"]]],[11,R[429],E,R[430],0,[[["self"],["u64"]],["u64"]]],[11,R[431],E,R[432],0,[[["self"],["u64"]],["u64"]]],[11,R[436],E,R[433],0,[[["self"],["u64"]],["u64"]]],[11,R[434],E,R[435],0,[[["self"],["u64"]],["u64"]]],[11,R[427],E,R[428],0,[[["i64"],["self"]],["i64"]]],[11,R[429],E,R[430],0,[[["i64"],["self"]],["i64"]]],[11,R[431],E,R[432],0,[[["i64"],["self"]],["i64"]]],[11,R[436],E,R[433],0,[[["i64"],["self"]],["i64"]]],[11,R[434],E,R[435],0,[[["i64"],["self"]],["i64"]]],[11,R[427],E,R[428],0,[[["u128"],["self"]],["u128"]]],[11,R[429],E,R[430],0,[[["u128"],["self"]],["u128"]]],[11,R[431],E,R[432],0,[[["u128"],["self"]],["u128"]]],[11,R[436],E,R[433],0,[[["u128"],["self"]],["u128"]]],[11,R[434],E,R[435],0,[[["u128"],["self"]],["u128"]]],[11,R[427],E,R[428],0,[[["i128"],["self"]],["i128"]]],[11,R[429],E,R[430],0,[[["i128"],["self"]],["i128"]]],[11,R[431],E,R[432],0,[[["i128"],["self"]],["i128"]]],[11,R[436],E,R[433],0,[[["i128"],["self"]],["i128"]]],[11,R[434],E,R[435],0,[[["i128"],["self"]],["i128"]]],[11,R[427],E,R[428],0,[[["self"],[R[9]]],[R[9]]]],[11,R[429],E,R[430],0,[[["self"],[R[9]]],[R[9]]]],[11,R[431],E,R[432],0,[[["self"],[R[9]]],[R[9]]]],[11,R[436],E,R[433],0,[[["self"],[R[9]]],[R[9]]]],[11,R[434],E,R[435],0,[[["self"],[R[9]]],[R[9]]]],[11,R[427],E,R[428],0,[[["isize"],["self"]],["isize"]]],[11,R[429],E,R[430],0,[[["isize"],["self"]],["isize"]]],[11,R[431],E,R[432],0,[[["isize"],["self"]],["isize"]]],[11,R[436],E,R[433],0,[[["isize"],["self"]],["isize"]]],[11,R[434],E,R[435],0,[[["isize"],["self"]],["isize"]]],[11,R[431],E,"Applies logical \"and\" to the current value and returns the…",0,[[["self"],["bool"]],["bool"]]],[11,R[436],E,"Applies logical \"or\" to the current value and returns the…",0,[[["self"],["bool"]],["bool"]]],[11,R[434],E,"Applies logical \"xor\" to the current value and returns the…",0,[[["self"],["bool"]],["bool"]]],[8,R[453],E,"Trait which allows reading from primitive atomic types…",N,N],[16,"Val",E,"Type returned by `load_consume`.",1,N],[10,R[2265],E,"Loads a value from the atomic using a \"consume\" memory…",1,[[["self"]]]],[11,"new",R[425],R[437],2,[[[T]],[R[447]]]],[11,R[46],E,"Returns the value value.",2,[[],[T]]],[11,"new",E,"Creates a new `Backoff`.",3,[[],["self"]]],[11,"reset",E,"Resets the `Backoff`.",3,[[["self"]]]],[11,"spin",E,"Backs off in a lock-free loop.",3,[[["self"]]]],[11,"snooze",E,"Backs off in a blocking loop.",3,[[["self"]]]],[11,"is_completed",E,"Returns `true` if exponential backoff has completed and…",3,[[["self"]],["bool"]]],[0,"sync",E,"Thread synchronization primitives.",N,N],[3,R[455],R[445],"A sharded reader-writer lock.",N,N],[3,R[459],E,"A guard used to release the shared read access of a…",N,N],[3,R[460],E,"A guard used to release the exclusive write access of a…",N,N],[3,"Parker",E,"A thread parking primitive.",N,N],[3,"Unparker",E,"Unparks a thread parked by the associated [`Parker`].",N,N],[3,R[456],E,"Enables threads to synchronize the beginning or end of…",N,N],[11,"new",E,"Creates a new `Parker`.",4,[[],["parker"]]],[11,"park",E,"Blocks the current thread until the token is made available.",4,[[["self"]]]],[11,R[1282],E,"Blocks the current thread until the token is made…",4,[[[R[1358]],["self"]]]],[11,R[448],E,"Returns a reference to an associated [`Unparker`].",4,[[["self"]],[R[448]]]],[11,"unpark",E,"Atomically makes the token available if it is not already.",5,[[["self"]]]],[11,"new",E,"Creates a new sharded reader-writer lock.",6,[[[T]],[R[451]]]],[11,R[46],E,"Consumes this lock, returning the underlying data.",6,[[],[R[438]]]],[11,"is_poisoned",E,"Returns `true` if the lock is poisoned.",6,[[["self"]],["bool"]]],[11,R[111],E,R[1194],6,[[["self"]],[[R[438]],[T]]]],[11,"try_read",E,"Attempts to acquire this lock with shared read access.",6,[[["self"]],[[R[440],[R[439]]],[R[439]]]]],[11,"read",E,"Locks with shared read access, blocking the current thread…",6,[[["self"]],[[R[439]],[R[438],[R[439]]]]]],[11,"try_write",E,"Attempts to acquire this lock with exclusive write access.",6,[[["self"]],[[R[441]],[R[440],[R[441]]]]]],[11,"write",E,"Locks with exclusive write access, blocking the current…",6,[[["self"]],[[R[441]],[R[438],[R[441]]]]]],[11,"new",E,"Creates a new wait group and returns the single reference…",7,[[],[R[449]]]],[11,"wait",E,"Drops this reference and waits until all other references…",7,[[]]],[0,"thread",R[425],"Threads that can borrow variables from the stack.",N,N],[3,"Scope",R[446],"A scope for spawning threads.",N,N],[3,R[457],E,"Configures the properties of a new thread.",N,N],[3,R[458],E,"A handle that can be used to join its scoped thread.",N,N],[5,"scope",E,"Creates a new scope for spawning threads.",N,[[["f"]],[R[12]]]],[11,"spawn",E,"Spawns a scoped thread.",8,[[["self"],["f"]],[R[443]]]],[11,"builder",E,"Creates a builder that can configure a thread before…",8,[[["self"]],[R[442]]]],[11,"name",E,"Sets the name for the new thread.",9,[[["string"]],[R[442]]]],[11,R[5201],E,"Sets the size of the stack for the new thread.",9,[[[R[9]]],[R[442]]]],[11,"spawn",E,"Spawns a scoped thread with this configuration.",9,[[["f"]],[[R[12],[R[443]]],[R[443]]]]],[11,"join",E,"Waits for the thread to finish and returns its result.",10,[[],[R[12]]]],[11,"thread",E,"Returns a handle to the underlying thread.",10,[[["self"]],["thread"]]],[11,"from",R[425],E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[17],E,E,2,[[[T],["self"]]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"from",R[444],E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",R[445],E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[11],E,E,6,[[[U]],[R[12]]]],[11,R[39],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[],[R[12]]]],[11,R[18],E,E,6,[[["self"]],[R[40]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[170],E,E,11,[[["self"]],["string"]]],[11,R[11],E,E,11,[[[U]],[R[12]]]],[11,R[39],E,E,11,[[["self"]],[T]]],[11,R[13],E,E,11,[[["self"]],[T]]],[11,R[14],E,E,11,[[],[R[12]]]],[11,R[18],E,E,11,[[["self"]],[R[40]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[170],E,E,12,[[["self"]],["string"]]],[11,R[11],E,E,12,[[[U]],[R[12]]]],[11,R[39],E,E,12,[[["self"]],[T]]],[11,R[13],E,E,12,[[["self"]],[T]]],[11,R[14],E,E,12,[[],[R[12]]]],[11,R[18],E,E,12,[[["self"]],[R[40]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[16],E,E,5,[[["self"]],[T]]],[11,R[17],E,E,5,[[[T],["self"]]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,R[18],E,E,5,[[["self"]],[R[40]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[16],E,E,7,[[["self"]],[T]]],[11,R[17],E,E,7,[[[T],["self"]]]],[11,R[11],E,E,7,[[[U]],[R[12]]]],[11,R[39],E,E,7,[[["self"]],[T]]],[11,R[13],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[],[R[12]]]],[11,R[18],E,E,7,[[["self"]],[R[40]]]],[11,"from",R[446],E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[11],E,E,8,[[[U]],[R[12]]]],[11,R[39],E,E,8,[[["self"]],[T]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[],[R[12]]]],[11,R[18],E,E,8,[[["self"]],[R[40]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[11],E,E,9,[[[U]],[R[12]]]],[11,R[39],E,E,9,[[["self"]],[T]]],[11,R[13],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[],[R[12]]]],[11,R[18],E,E,9,[[["self"]],[R[40]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[11],E,E,10,[[[U]],[R[12]]]],[11,R[39],E,E,10,[[["self"]],[T]]],[11,R[13],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[],[R[12]]]],[11,R[18],E,E,10,[[["self"]],[R[40]]]],[11,"eq",R[425],E,2,[[[R[447]],["self"]],["bool"]]],[11,"ne",E,E,2,[[[R[447]],["self"]],["bool"]]],[11,"clone",E,E,2,[[["self"]],[R[447]]]],[11,"clone",R[445],E,5,[[["self"]],[R[448]]]],[11,"clone",E,E,7,[[["self"]],[R[449]]]],[11,"from",R[425],E,2,[[[T]],["self"]]],[11,"from",R[445],E,6,[[[T]],["self"]]],[11,"drop",E,E,12,[[["self"]]]],[11,"drop",E,E,7,[[["self"]]]],[11,R[79],R[444],E,0,[[],[R[450]]]],[11,R[79],R[425],E,2,[[],[R[447]]]],[11,R[79],E,E,3,[[],["backoff"]]],[11,R[79],R[445],E,6,[[],[R[451]]]],[11,R[54],R[425],E,2,[[["self"]],[T]]],[11,R[54],R[445],E,12,[[["self"]],[T]]],[11,"fmt",R[444],E,0,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[425],E,2,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,3,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[445],E,4,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,5,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,6,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,11,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,12,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,7,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[446],E,8,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,9,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,10,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[445],E,11,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,12,[[["self"],[R[29]]],[R[12]]]],[11,"deref",R[425],E,2,[[["self"]],[T]]],[11,"deref",R[445],E,11,[[["self"]],[T]]],[11,"deref",E,E,12,[[["self"]],[T]]],[11,"hash",R[425],E,2,[[["self"],["__ht"]]]]],"p":[[3,R[452]],[8,R[453]],[3,R[454]],[3,"Backoff"],[3,"Parker"],[3,"Unparker"],[3,R[455]],[3,R[456]],[3,"Scope"],[3,R[457]],[3,R[458]],[3,R[459]],[3,R[460]]]};
searchIndex[R[42]]={"doc":"A macro for declaring lazily evaluated statics.","i":[[5,R[5415],R[42],"Takes a shared reference to a lazy static and initializes…",N,[[[T]]]],[8,"LazyStatic",E,"Support trait for enabling a few common operation on lazy…",N,N],[14,R[42],E,E,N,N]],"p":[]};
searchIndex[R[4350]]={"doc":"A work-stealing based thread pool for executing futures.","i":[[3,R[4354],R[4350],"Error raised by `blocking`.",N,N],[3,"Builder",E,"Builds a thread pool with custom configuration values.",N,N],[3,"Sender",E,"Submit futures to the associated thread pool for execution.",N,N],[3,R[4358],E,"Future that resolves when the thread pool is shutdown.",N,N],[3,R[133],E,"Handle returned from ThreadPool::spawn_handle.",N,N],[3,"ThreadPool",E,"Work-stealing based thread pool for executing futures.",N,N],[3,"Worker",E,"Thread worker",N,N],[3,"WorkerId",E,"Identifies a thread pool worker.",N,N],[5,"blocking",E,"Enter a blocking section of code.",N,[[["f"]],[["poll",[R[4351]]],[R[4351]]]]],[0,"park",E,"Thread parking utilities.",N,N],[3,R[4353],R[4352],"Parks the thread.",N,N],[3,R[4355],E,"Unparks threads that were parked by `DefaultPark`.",N,N],[3,R[4357],E,R[4356],N,N],[11,"new",E,"Creates a new `DefaultPark` instance.",0,[[],["defaultpark"]]],[11,"new",R[4350],"Returns a new thread pool builder initialized with default…",1,[[],["builder"]]],[11,"pool_size",E,"Set the maximum number of worker threads for the thread…",1,[[["self"],[R[9]]],["self"]]],[11,"max_blocking",E,"Set the maximum number of concurrent blocking sections.",1,[[["self"],[R[9]]],["self"]]],[11,"keep_alive",E,"Set the thread keep alive duration",1,[[[R[1358]],["self"],[R[52],[R[1358]]]],["self"]]],[11,R[5200],E,"Set name prefix of threads spawned by the scheduler",1,[[["string"],["self"],["into",["string"]]],["self"]]],[11,R[5201],E,R[5202],1,[[["self"],[R[9]]],["self"]]],[11,"around_worker",E,"Execute function `f` on each worker thread.",1,[[["self"],["f"]],["self"]]],[11,R[5203],E,R[5204],1,[[["self"],["f"]],["self"]]],[11,R[5205],E,R[5206],1,[[["self"],["f"]],["self"]]],[11,"custom_park",E,"Customize the `park` instance used by each worker thread.",1,[[["self"],["f"]],["self"]]],[11,"build",E,"Create the configured `ThreadPool`.",1,[[["self"]],["threadpool"]]],[11,"spawn",E,"Spawn a future onto the thread pool",2,[[["self"],["f"]],[[R[1279]],[R[12],[R[1279]]]]]],[11,"new",E,"Create a new `ThreadPool` with default values.",3,[[],["threadpool"]]],[11,"spawn",E,"Spawn a future onto the thread pool.",3,[[["self"],["f"]]]],[11,"spawn_handle",E,"Spawn a future on to the thread pool, return a future…",3,[[["self"],["f"]],[R[129]]]],[11,"sender",E,"Return a reference to the sender handle",3,[[["self"]],["sender"]]],[11,"sender_mut",E,"Return a mutable reference to the sender handle",3,[[["self"]],["sender"]]],[11,R[4541],E,"Shutdown the pool once it becomes idle.",3,[[],[R[2344]]]],[11,R[2344],E,"Shutdown the pool",3,[[],[R[2344]]]],[11,R[4542],E,"Shutdown the pool immediately",3,[[],[R[2344]]]],[11,"id",E,"Returns a reference to the worker's identifier.",4,[[["self"]],["workerid"]]],[11,"run",E,"Run the worker",4,[[["self"]]]],[11,"to_usize",E,"Returns this identifier represented as an integer.",5,[[["self"]],[R[9]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[170],E,E,6,[[["self"]],["string"]]],[11,R[11],E,E,6,[[[U]],[R[12]]]],[11,R[39],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[],[R[12]]]],[11,R[18],E,E,6,[[["self"]],[R[40]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[17],E,E,2,[[[T],["self"]]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[11],E,E,7,[[[U]],[R[12]]]],[11,R[39],E,E,7,[[["self"]],[T]]],[11,R[13],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[],[R[12]]]],[11,R[18],E,E,7,[[["self"]],[R[40]]]],[11,R[99],E,E,7,[[],["f"]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[11],E,E,8,[[[U]],[R[12]]]],[11,R[39],E,E,8,[[["self"]],[T]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[],[R[12]]]],[11,R[18],E,E,8,[[["self"]],[R[40]]]],[11,R[99],E,E,8,[[],["f"]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[16],E,E,5,[[["self"]],[T]]],[11,R[17],E,E,5,[[[T],["self"]]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,R[18],E,E,5,[[["self"]],[R[40]]]],[11,"from",R[4352],E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[11],E,E,9,[[[U]],[R[12]]]],[11,R[39],E,E,9,[[["self"]],[T]]],[11,R[13],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[],[R[12]]]],[11,R[18],E,E,9,[[["self"]],[R[40]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[170],E,E,10,[[["self"]],["string"]]],[11,R[11],E,E,10,[[[U]],[R[12]]]],[11,R[39],E,E,10,[[["self"]],[T]]],[11,R[13],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[],[R[12]]]],[11,R[18],E,E,10,[[["self"]],[R[40]]]],[11,"eq",R[4350],E,5,[[["workerid"],["self"]],["bool"]]],[11,"ne",E,E,5,[[["workerid"],["self"]],["bool"]]],[11,"clone",E,E,2,[[["self"]],["sender"]]],[11,"clone",E,E,5,[[["self"]],["workerid"]]],[11,"drop",E,E,3,[[["self"]]]],[11,"drop",E,E,4,[[["self"]]]],[11,"fmt",R[4352],E,0,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,9,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,10,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[4350],E,6,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,1,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,2,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,7,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,3,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,8,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,4,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,5,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[4352],E,10,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[4350],E,6,[[["self"],[R[29]]],[R[12]]]],[11,"hash",E,E,5,[[["self"],["__h"]]]],[11,R[30],R[4352],E,10,[[["self"]],["str"]]],[11,R[30],R[4350],E,6,[[["self"]],["str"]]],[11,"poll",E,E,7,[[["self"]],["poll"]]],[11,"poll",E,E,8,[[["self"]],["poll"]]],[11,"execute",E,E,2,[[["self"],[T]],[[R[12],[R[97]]],[R[97]]]]],[11,"status",E,E,2,[[["self"]],[[R[1279]],[R[12],[R[1279]]]]]],[11,"spawn",E,E,2,[[["self"],["box",["future"]],["future"]],[[R[1279]],[R[12],[R[1279]]]]]],[11,"unpark",R[4352],E,0,[[["self"]]]],[11,"park",E,E,0,[[["self"]],[R[12]]]],[11,R[1282],E,E,0,[[[R[1358]],["self"]],[R[12]]]],[11,"unpark",E,E,9,[[["self"]]]],[11,"status",R[4350],E,2,[[["self"]],[[R[1279]],[R[12],[R[1279]]]]]],[11,"spawn",E,E,2,[[["self"],[T]],[[R[1279]],[R[12],[R[1279]]]]]]],"p":[[3,R[4353]],[3,"Builder"],[3,"Sender"],[3,"ThreadPool"],[3,"Worker"],[3,"WorkerId"],[3,R[4354]],[3,R[4358]],[3,R[133]],[3,R[4355]],[3,R[4357]]]};
searchIndex[R[4359]]={"doc":"This crate provides helper types for matching against enum…","i":[[3,R[4373],R[4359],"Information about a specific binding. This contains both…",N,N],[12,"binding",E,"The name which this BindingInfo will bind to.",0,N],[12,"style",E,"The type of binding which this BindingInfo will create.",0,N],[3,"VariantAst",E,"This type is similar to `syn`'s `Variant` type, however…",N,N],[12,"attrs",E,E,1,N],[12,"ident",E,E,1,N],[12,"fields",E,E,1,N],[12,R[4360],E,E,1,N],[3,R[4374],E,"A wrapper around a `syn::DeriveInput`'s variant which…",N,N],[12,"prefix",E,E,2,N],[3,"Structure",E,"A wrapper around a `syn::DeriveInput` which provides…",N,N],[4,"AddBounds",E,"Changes how bounds are added",N,N],[13,"Both",E,"Add for fields and generics",3,N],[13,"Fields",E,"Fields only",3,N],[13,"Generics",E,"Generics only",3,N],[13,"None",E,"None",3,N],[4,"BindStyle",E,"The type of binding to use when generating a pattern.",N,N],[13,"Move",E,"`x`",4,N],[13,"MoveMut",E,"`mut x`",4,N],[13,"Ref",E,"`ref x`",4,N],[13,"RefMut",E,"`ref mut x`",4,N],[5,"unpretty_print",E,"Dumps an unpretty version of a tokenstream. Takes any type…",N,[[["display"]],["string"]]],[11,"ast",E,R[4364],0,[[["self"]],["field"]]],[11,"pat",E,"Generates the pattern fragment for this field binding.",0,[[["self"]],[R[790]]]],[11,R[4362],E,R[4363],0,[[["self"]],[["vec",["ident"]],["ident"]]]],[11,"bindings",E,"Returns a slice of the bindings in this Variant.",2,[[["self"]]]],[11,"bindings_mut",E,"Returns a mut slice of the bindings in this Variant.",2,[[["self"]]]],[11,"ast",E,"Returns a `VariantAst` object which contains references to…",2,[[["self"]],[R[4370]]]],[11,"omitted_bindings",E,"True if any bindings were omitted due to a `filter` call.",2,[[["self"]],["bool"]]],[11,"pat",E,"Generates the match-arm pattern which could be used to…",2,[[["self"]],[R[790]]]],[11,"construct",E,"Generates the token stream required to construct the…",2,[[["self"],["f"]],[R[790]]]],[11,"each",E,R[4361],2,[[["self"],["f"]],[R[790]]]],[11,"fold",E,R[4361],2,[[["i"],["self"],["f"]],[R[790]]]],[11,"filter",E,"Filter the bindings created by this `Variant` object. This…",2,[[["self"],["f"]],["self"]]],[11,"remove_binding",E,"Remove the binding at the given index.",2,[[["self"],[R[9]]],["self"]]],[11,"bind_with",E,R[4365],2,[[["self"],["f"]],["self"]]],[11,R[4366],E,R[4367],2,[[["self"],["f"]],["self"]]],[11,R[4362],E,R[4363],2,[[["self"]],[["vec",["ident"]],["ident"]]]],[11,"new",E,"Create a new `Structure` with the variants and fields from…",5,[[[R[3050]]],["self"]]],[11,"variants",E,"Returns a slice of the variants in this Structure.",5,[[["self"]]]],[11,"variants_mut",E,"Returns a mut slice of the variants in this Structure.",5,[[["self"]]]],[11,"ast",E,R[4364],5,[[["self"]],[R[3050]]]],[11,"omitted_variants",E,"True if any variants were omitted due to a…",5,[[["self"]],["bool"]]],[11,"each",E,R[4361],5,[[["self"],["f"]],[R[790]]]],[11,"fold",E,R[4361],5,[[["i"],["self"],["f"]],[R[790]]]],[11,"each_variant",E,"Runs the passed-in function once for each variant, passing…",5,[[["self"],["f"]],[R[790]]]],[11,"filter",E,"Filter the bindings created by this `Structure` object.…",5,[[["self"],["f"]],["self"]]],[11,"add_bounds",E,"Specify which bounds should be generated by…",5,[[[R[4372]],["self"]],["self"]]],[11,"filter_variants",E,"Filter the variants matched by this `Structure` object.…",5,[[["self"],["f"]],["self"]]],[11,"remove_variant",E,"Remove the variant at the given index.",5,[[["self"],[R[9]]],["self"]]],[11,"bind_with",E,R[4365],5,[[["self"],["f"]],["self"]]],[11,R[4366],E,R[4367],5,[[["self"],["f"]],["self"]]],[11,R[4362],E,"Returns a list of the type parameters which are refrenced…",5,[[["self"]],[["vec",["ident"]],["ident"]]]],[11,"add_impl_generic",E,"Adds an `impl<>` generic parameter. This can be used when…",5,[[["self"],[R[3071]]],["self"]]],[11,"add_trait_bounds",E,"Add trait bounds for a trait with the given path for each…",5,[[[R[52]],[R[4372]],["self"],[R[3178]]]]],[11,"bound_impl",E,R[4368],5,[[["self"],["totokens"]],[R[790]]]],[11,"unsafe_bound_impl",E,R[4368],5,[[["self"],["totokens"]],[R[790]]]],[11,"unbound_impl",E,R[4368],5,[[["self"],["totokens"]],[R[790]]]],[11,"unsafe_unbound_impl",E,R[4368],5,[[["self"],["totokens"]],[R[790]]]],[11,"gen_impl",E,"Generate an impl block for the given struct. This impl…",5,[[[R[790]],["self"]],[R[790]]]],[14,"decl_derive",E,"The `decl_derive!` macro declares a custom derive wrapper.…",N,N],[14,"test_derive",E,"Run a test on a custom derive. This macro expands both the…",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[[T],["self"]]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"span",E,E,0,[[["self"]],["span"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,[[[T],["self"]]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[17],E,E,2,[[[T],["self"]]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[16],E,E,5,[[["self"]],[T]]],[11,R[17],E,E,5,[[[T],["self"]]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,R[18],E,E,5,[[["self"]],[R[40]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[17],E,E,3,[[[T],["self"]]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[16],E,E,4,[[["self"]],[T]]],[11,R[17],E,E,4,[[[T],["self"]]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,"span",E,E,4,[[["self"]],["span"]]],[11,"eq",E,E,3,[[[R[4372]],["self"]],["bool"]]],[11,"eq",E,E,4,[[["bindstyle"],["self"]],["bool"]]],[11,"eq",E,E,0,[[[R[4369]],["self"]],["bool"]]],[11,"ne",E,E,0,[[[R[4369]],["self"]],["bool"]]],[11,"eq",E,E,1,[[[R[4370]],["self"]],["bool"]]],[11,"ne",E,E,1,[[[R[4370]],["self"]],["bool"]]],[11,"eq",E,E,2,[[[R[4371]],["self"]],["bool"]]],[11,"ne",E,E,2,[[[R[4371]],["self"]],["bool"]]],[11,"eq",E,E,5,[[["structure"],["self"]],["bool"]]],[11,"ne",E,E,5,[[["structure"],["self"]],["bool"]]],[11,"clone",E,E,3,[[["self"]],[R[4372]]]],[11,"clone",E,E,4,[[["self"]],["bindstyle"]]],[11,"clone",E,E,0,[[["self"]],[R[4369]]]],[11,"clone",E,E,1,[[["self"]],[R[4370]]]],[11,"clone",E,E,2,[[["self"]],[R[4371]]]],[11,"clone",E,E,5,[[["self"]],["structure"]]],[11,"fmt",E,E,3,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,4,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,0,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,1,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,2,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,5,[[[R[29]],["self"]],[R[12]]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,"hash",E,E,4,[[["self"],["__h"]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"hash",E,E,2,[[["self"],["__h"]]]],[11,"hash",E,E,5,[[["self"],["__h"]]]],[11,R[3216],E,E,4,[[[R[790]],["self"]]]],[11,R[3216],E,E,0,[[[R[790]],["self"]]]]],"p":[[3,R[4373]],[3,"VariantAst"],[3,R[4374]],[4,"AddBounds"],[4,"BindStyle"],[3,"Structure"]]};
searchIndex[R[4375]]={"doc":"A flexible and easy-to-use logger that writes logs to…","i":[[4,"Level",R[4375],R[4414],N,N],[13,"Error",E,R[466],0,N],[13,"Warn",E,R[467],0,N],[13,"Info",E,R[468],0,N],[13,"Debug",E,R[469],0,N],[13,"Trace",E,R[470],0,N],[4,R[408],E,R[4415],N,N],[13,"Off",E,R[4416],1,N],[13,"Error",E,R[4417],1,N],[13,"Warn",E,R[4418],1,N],[13,"Info",E,R[4419],1,N],[13,"Debug",E,R[4420],1,N],[13,"Trace",E,R[4421],1,N],[3,"Record",E,R[4413],N,N],[3,R[4409],E,"Builder for `LogSpecification`.",N,N],[3,R[4408],E,"Immutable struct that defines which loglines are to be…",N,N],[3,"Logger",E,"The entry-point for using `flexi_logger`.",N,N],[3,R[4410],E,"Allows reconfiguring the logger programmatically.",N,N],[4,R[4407],E,"Describes errors in the initialization of `flexi_logger`.",N,N],[13,"BadDirectory",E,"Log file cannot be written because the specified path is…",2,N],[13,"Io",E,"Log cannot be written because the configured output…",2,N],[13,R[408],E,"Invalid level filter",2,N],[13,"Parse",E,"Some error occured during parsing",2,N],[13,"Log",E,"Logger initialization failed.",2,N],[4,"Duplicate",E,"Used to control which messages are to be duplicated to…",N,N],[13,"None",E,"No messages are duplicated.",3,N],[13,"Error",E,"Only error messages are duplicated.",3,N],[13,"Warn",E,"Error and warn messages are duplicated.",3,N],[13,"Info",E,"Error, warn, and info messages are duplicated.",3,N],[13,"Debug",E,"Error, warn, info, and debug messages are duplicated.",3,N],[13,"Trace",E,R[4376],3,N],[13,"All",E,R[4376],3,N],[5,"default_format",E,"A logline-formatter that produces log lines like `INFO…",N,[[["write"],["record"]],[[R[12],["error"]],["error"]]]],[5,"opt_format",E,R[4377],N,[[["write"],["record"]],[[R[12],["error"]],["error"]]]],[5,"detailed_format",E,R[4377],N,[[["write"],["record"]],[[R[12],["error"]],["error"]]]],[5,"with_thread",E,R[4377],N,[[["write"],["record"]],[[R[12],["error"]],["error"]]]],[11,"enabled",E,"Implementation of Log::enabled() with easier testable…",4,[[["str"],["level"],["self"]],["bool"]]],[11,"off",E,"Returns a `LogSpecification` where all traces are switched…",4,[[],[R[4378]]]],[11,"parse",E,"Returns a log specification from a String.",4,[[["str"]],[[R[12],[R[4378],R[4379]]],[R[4379]],[R[4378]]]]],[11,"env",E,R[4380],4,[[],[[R[12],[R[4378],R[4379]]],[R[4379]],[R[4378]]]]],[11,"env_or_parse",E,R[4380],4,[[["str"],["asref",["str"]]],[[R[12],[R[4378],R[4379]]],[R[4379]],[R[4378]]]]],[11,"to_toml",E,"Serializes itself in toml format",4,[[["write"],["self"]],[[R[4379]],[R[12],[R[4379]]]]]],[11,R[79],E,"Creates a LogSpecBuilder, setting the default log level.",4,[[[R[396]]],[R[4381]]]],[11,"module_filters",E,"Provides a reference to the module filters.",4,[[["self"]],["vec"]]],[11,"text_filter",E,"Provides a reference to the text filter.",4,[[["self"]],[R[52]]]],[11,"new",E,"Creates a LogSpecBuilder with all logging turned off.",5,[[],[R[4381]]]],[11,"from_module_filters",E,"Creates a LogSpecBuilder from given module filters.",5,[[],[R[4381]]]],[11,R[79],E,"Adds a default log level filter, or updates the default…",5,[[["self"],[R[396]]],[R[4381]]]],[11,"module",E,R[4382],5,[[["self"],[R[396]],["str"],["asref",["str"]]],[R[4381]]]],[11,"remove",E,R[4382],5,[[["self"],["str"],["asref",["str"]]],[R[4381]]]],[11,"finalize",E,"Creates a log specification without text filter.",5,[[],[R[4378]]]],[11,"finalize_with_textfilter",E,"Creates a log specification with text filter.",5,[[["regex"]],[R[4378]]]],[11,"build",E,"Creates a log specification without being consumed.",5,[[["self"]],[R[4378]]]],[11,"build_with_textfilter",E,"Creates a log specification without being consumed,…",5,[[["regex"],["self"],[R[52],["regex"]]],[R[4378]]]],[11,"with",E,"Creates a Logger that you provide with an explicit…",6,[[[R[4378]]],["logger"]]],[11,"with_str",E,"Creates a Logger that reads the LogSpecification from a…",6,[[["str"],["asref",["str"]]],["logger"]]],[11,"with_env",E,R[4383],6,[[],["logger"]]],[11,"with_env_or_str",E,R[4383],6,[[["str"],["asref",["str"]]],["logger"]]],[11,"start",E,"Consumes the Logger object and initializes `flexi_logger`…",6,[[],[[R[4379]],[R[12],[R[4384],R[4379]]],[R[4384]]]]],[11,"start_reconfigurable",E,"This method is deprecated, because there is no performance…",6,[[],[[R[4379]],[R[12],[R[4384],R[4379]]],[R[4384]]]]],[11,"check_parser_error",E,"Allows verifying that no parsing errors have occured in…",6,[[],[[R[12],["logger",R[4379]]],[R[4379]],["logger"]]]],[11,"log_to_file",E,"Makes the logger write all logs to a file, rather than to…",6,[[],["logger"]]],[11,"do_not_log",E,"Makes the logger write no logs at all.",6,[[],["logger"]]],[11,R[4389],E,"Makes the logger print an info message to stdout with the…",6,[[],["logger"]]],[11,"duplicate_to_stderr",E,"Makes the logger write messages with the specified minimum…",6,[[["duplicate"]],["logger"]]],[11,"duplicate_error",E,"Makes the logger write all logged error messages…",6,[[],["logger"]]],[11,"duplicate_info",E,"Makes the logger write all logged error, warning, and info…",6,[[],["logger"]]],[11,"format",E,"Makes the logger use the provided format function for the…",6,[[[R[4390]]],["logger"]]],[11,"directory",E,R[4385],6,[[["string"],["into",["string"]]],["logger"]]],[11,"suffix",E,"Specifies a suffix for the log files.",6,[[["string"],["into",["string"]]],["logger"]]],[11,R[4392],E,R[4393],6,[[],["logger"]]],[11,R[4394],E,R[4395],6,[[[R[9]]],["logger"]]],[11,"append",E,"Makes the logger append to the specified output file, if…",6,[[],["logger"]]],[11,R[4360],E,"The specified String is added to the log file name after…",6,[[["string"],["into",["string"]]],["logger"]]],[11,R[4396],E,R[4397],6,[[["string"],["into",["string"]]],["logger"]]],[11,"add_writer",E,"Registers a LogWriter implementation under the given…",6,[[["string"],["box",["logwriter"]],["into",["string"]],["logwriter"]],["logger"]]],[11,"o_log_to_file",E,"With true, makes the logger write all logs to a file,…",6,[[["bool"]],["logger"]]],[11,R[4399],E,"With true, makes the logger print an info message to…",6,[[["bool"]],["logger"]]],[11,"o_duplicate_error",E,"With true, makes the logger write all logged error…",6,[[["bool"]],["logger"]]],[11,"o_duplicate_info",E,"With true, makes the logger write all logged error,…",6,[[["bool"]],["logger"]]],[11,R[4400],E,R[4385],6,[[["string"],[R[52]],["into",["string"]]],["logger"]]],[11,R[4402],E,R[4386],6,[[[R[52],[R[9]]],[R[9]]],["logger"]]],[11,R[4401],E,"With true, makes the logger include a timestamp into the…",6,[[["bool"]],["logger"]]],[11,"o_append",E,R[4386],6,[[["bool"]],["logger"]]],[11,R[4403],E,R[4386],6,[[["string"],[R[52]],["into",["string"]]],["logger"]]],[11,R[4405],E,R[4386],6,[[["string"],[R[52]],["into",["string"]]],["logger"]]],[11,"set_new_spec",E,R[4387],7,[[["self"],[R[4378]]]]],[11,"parse_new_spec",E,R[4387],7,[[["str"],["self"]]]],[11,"push_temp_spec",E,R[4388],7,[[["self"],[R[4378]]]]],[11,"parse_and_push_temp_spec",E,R[4388],7,[[["str"],["self"]]]],[11,"pop_temp_spec",E,"Allows pushing a new LogSpecification for the current…",7,[[["self"]]]],[0,"writers",E,"This module contains a trait for additional log writers,…",N,N],[3,R[4412],R[4406],"A configurable `LogWriter` that writes to a file or, if…",N,N],[3,R[4411],E,"Builder for `FileLogWriter`.",N,N],[11,R[4389],E,"Makes the `FileLogWriter` print an info message to stdout…",8,[[],[R[4391]]]],[11,"format",E,"Makes the `FileLogWriter` use the provided format function…",8,[[[R[4390]]],[R[4391]]]],[11,"directory",E,R[4385],8,[[["string"],["into",["string"]]],[R[4391]]]],[11,"suffix",E,"Specifies a suffix for the log files. The default is \"log\".",8,[[["string"],["into",["string"]]],[R[4391]]]],[11,R[4392],E,R[4393],8,[[],[R[4391]]]],[11,R[4394],E,R[4395],8,[[[R[9]]],[R[4391]]]],[11,"append",E,"Makes the logger append to the given file, if it exists;…",8,[[],[R[4391]]]],[11,R[4360],E,R[4404],8,[[["string"],["into",["string"]]],[R[4391]]]],[11,R[4396],E,R[4397],8,[[["string"],["into",["string"]]],[R[4391]]]],[11,"instantiate",E,"Produces the FileLogWriter.",8,[[],[[R[4379]],[R[12],[R[4398],R[4379]]],[R[4398]]]]],[11,R[4399],E,"With true, makes the FileLogWriterBuilder print an info…",8,[[["bool"]],[R[4391]]]],[11,R[4400],E,R[4385],8,[[["string"],[R[52]],["into",["string"]]],[R[4391]]]],[11,R[4401],E,"With true, makes the FileLogWriterBuilder include a…",8,[[["bool"]],[R[4391]]]],[11,R[4402],E,"By default, and with None, the log file will grow…",8,[[[R[52],[R[9]]],[R[9]]],[R[4391]]]],[11,"o_append",E,"If append is set to true, makes the logger append to the…",8,[[["bool"]],[R[4391]]]],[11,R[4403],E,R[4404],8,[[["string"],[R[52]],["into",["string"]]],[R[4391]]]],[11,R[4405],E,"If a String is specified, it will be used on linux systems…",8,[[["string"],[R[52]],["into",["string"]]],[R[4391]]]],[11,"builder",E,"Instantiates a builder for `FileLogWriter`.",9,[[],[R[4391]]]],[11,"format",E,"Returns a reference to its configured output format…",9,[[["self"]],[R[4390]]]],[8,"LogWriter",E,"Writes to a single log output stream.",N,N],[10,"write",E,"write out a log line",10,[[["record"],["self"]],[R[12]]]],[10,"flush",E,R[4422],10,[[["self"]],[R[12]]]],[6,"FormatFunction",R[4375],"Function type for Format functions.",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[[T],["self"]]]],[11,R[170],E,E,0,[[["self"]],["string"]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,[[[T],["self"]]]],[11,R[170],E,E,1,[[["self"]],["string"]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[16],E,E,11,[[["self"]],[T]]],[11,R[17],E,E,11,[[[T],["self"]]]],[11,R[11],E,E,11,[[[U]],[R[12]]]],[11,R[39],E,E,11,[[["self"]],[T]]],[11,R[13],E,E,11,[[["self"]],[T]]],[11,R[14],E,E,11,[[],[R[12]]]],[11,R[18],E,E,11,[[["self"]],[R[40]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[16],E,E,5,[[["self"]],[T]]],[11,R[17],E,E,5,[[[T],["self"]]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,R[18],E,E,5,[[["self"]],[R[40]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[16],E,E,4,[[["self"]],[T]]],[11,R[17],E,E,4,[[[T],["self"]]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[11],E,E,6,[[[U]],[R[12]]]],[11,R[39],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[],[R[12]]]],[11,R[18],E,E,6,[[["self"]],[R[40]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[11],E,E,7,[[[U]],[R[12]]]],[11,R[39],E,E,7,[[["self"]],[T]]],[11,R[13],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[],[R[12]]]],[11,R[18],E,E,7,[[["self"]],[R[40]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[170],E,E,2,[[["self"]],["string"]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"from",R[4406],E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[11],E,E,9,[[[U]],[R[12]]]],[11,R[39],E,E,9,[[["self"]],[T]]],[11,R[13],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[],[R[12]]]],[11,R[18],E,E,9,[[["self"]],[R[40]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[11],E,E,8,[[[U]],[R[12]]]],[11,R[39],E,E,8,[[["self"]],[T]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[],[R[12]]]],[11,R[18],E,E,8,[[["self"]],[R[40]]]],[11,"hash",R[4375],E,1,[[["self"],["__h"]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,R[407],E,E,0,[[["str"]],[["level"],[R[12],["level"]]]]],[11,R[407],E,E,1,[[["str"]],[[R[12],[R[396]]],[R[396]]]]],[11,"cmp",E,E,1,[[[R[396]],["self"]],[R[51]]]],[11,"cmp",E,E,0,[[["level"],["self"]],[R[51]]]],[11,"clone",E,E,1,[[["self"]],[R[396]]]],[11,"clone",E,E,0,[[["self"]],["level"]]],[11,"clone",E,E,11,[[["self"]],["record"]]],[11,"fmt",E,E,11,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,1,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,0,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,R[264],E,E,0,[[[R[396]],["self"]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,0,[[[R[396]],["self"]],["bool"]]],[11,"le",E,E,0,[[[R[396]],["self"]],["bool"]]],[11,"gt",E,E,0,[[[R[396]],["self"]],["bool"]]],[11,"ge",E,E,0,[[[R[396]],["self"]],["bool"]]],[11,R[264],E,E,0,[[["level"],["self"]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,0,[[["level"],["self"]],["bool"]]],[11,"le",E,E,0,[[["level"],["self"]],["bool"]]],[11,"gt",E,E,0,[[["level"],["self"]],["bool"]]],[11,"ge",E,E,0,[[["level"],["self"]],["bool"]]],[11,R[264],E,E,1,[[["level"],["self"]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,1,[[["level"],["self"]],["bool"]]],[11,"le",E,E,1,[[["level"],["self"]],["bool"]]],[11,"gt",E,E,1,[[["level"],["self"]],["bool"]]],[11,"ge",E,E,1,[[["level"],["self"]],["bool"]]],[11,R[264],E,E,1,[[[R[396]],["self"]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,1,[[[R[396]],["self"]],["bool"]]],[11,"le",E,E,1,[[[R[396]],["self"]],["bool"]]],[11,"gt",E,E,1,[[[R[396]],["self"]],["bool"]]],[11,"ge",E,E,1,[[[R[396]],["self"]],["bool"]]],[11,"fmt",E,E,0,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,1,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"eq",E,E,1,[[["level"],["self"]],["bool"]]],[11,"eq",E,E,0,[[["level"],["self"]],["bool"]]],[11,"eq",E,E,1,[[[R[396]],["self"]],["bool"]]],[11,"eq",E,E,0,[[[R[396]],["self"]],["bool"]]],[11,"write",R[4406],E,9,[[["record"],["self"]],[R[12]]]],[11,"flush",E,E,9,[[["self"]],[R[12]]]],[11,"clone",R[4375],E,4,[[["self"]],[R[4378]]]],[11,"clone",E,E,5,[[["self"]],[R[4381]]]],[11,"from",E,E,2,[[[R[397]]],[R[4379]]]],[11,"from",E,E,2,[[["error"]],[R[4379]]]],[11,R[79],E,E,4,[[],[R[4378]]]],[11,R[79],E,E,5,[[],[R[4381]]]],[11,"fmt",E,E,2,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,4,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,2,[[["self"],[R[29]]],[R[12]]]],[11,R[30],E,E,2,[[["self"]],["str"]]],[11,"cause",E,E,2,[[["self"]],[[R[52],["error"]],["error"]]]],[11,"max",E,R[4423],0,[[],["level"]]],[11,R[4424],E,R[4425],0,[[["self"]],[R[396]]]],[11,"max",E,R[4426],1,[[],[R[396]]]],[11,"to_level",E,R[4427],1,[[["self"]],[["level"],[R[52],["level"]]]]],[11,"builder",E,R[402],11,[[],[R[399]]]],[11,"args",E,R[4428],11,[[["self"]],[R[400]]]],[11,R[398],E,R[4429],11,[[["self"]],[R[398]]]],[11,"level",E,R[403],11,[[["self"]],["level"]]],[11,"target",E,R[404],11,[[["self"]],["str"]]],[11,R[401],E,R[4430],11,[[["self"]],[["str"],[R[52],["str"]]]]],[11,"file",E,R[4431],11,[[["self"]],[["str"],[R[52],["str"]]]]],[11,"line",E,R[4432],11,[[["self"]],[["u32"],[R[52],["u32"]]]]]],"p":[[4,"Level"],[4,R[408]],[4,R[4407]],[4,"Duplicate"],[3,R[4408]],[3,R[4409]],[3,"Logger"],[3,R[4410]],[3,R[4411]],[3,R[4412]],[8,"LogWriter"],[3,"Record"]]};
searchIndex[R[43]]={"doc":"A crate used for calculating offsets of struct members and…","i":[[14,"offset_of",R[43],"Calculates the offset of the specified field from the…",N,N],[14,"span_of",E,"Produces a range instance representing the sub-slice…",N,N]],"p":[]};
searchIndex[R[4433]]={"doc":"This library provides implementations of `Mutex`,…","i":[[3,"Condvar",R[4433],"A Condition Variable",N,N],[3,R[4473],E,"A type indicating whether a timed wait on a condition…",N,N],[3,"Once",E,"A synchronization primitive which can be used to run a…",N,N],[3,"RawMutex",E,"Raw mutex type backed by the parking lot.",N,N],[3,R[4474],E,"Raw reader-writer lock type backed by the parking lot.",N,N],[3,R[4475],E,"Implementation of the `GetThreadId` trait for…",N,N],[4,"OnceState",E,"Current state of a `Once`.",N,N],[13,"New",E,"A closure has not been executed yet",0,N],[13,"Poisoned",E,"A closure was executed but panicked.",0,N],[13,"InProgress",E,"A thread is currently executing a closure.",0,N],[13,"Done",E,"A closure has completed successfully.",0,N],[11,"timed_out",E,"Returns whether the wait was known to have timed out.",1,[[["self"]],["bool"]]],[11,"new",E,"Creates a new condition variable which is ready to be…",2,[[],["condvar"]]],[11,"notify_one",E,"Wakes up one blocked thread on this condvar.",2,[[["self"]],["bool"]]],[11,"notify_all",E,"Wakes up all blocked threads on this condvar.",2,[[["self"]],[R[9]]]],[11,"wait",E,"Blocks the current thread until this condition variable…",2,[[["self"],[R[1183]]]]],[11,"wait_until",E,R[4434],2,[[["instant"],["self"],[R[1183]]],[R[4435]]]],[11,"wait_for",E,R[4434],2,[[[R[1358]],["self"],[R[1183]]],[R[4435]]]],[11,"poisoned",E,"Returns whether the associated `Once` has been poisoned.",0,[[["self"]],["bool"]]],[11,"done",E,"Returns whether the associated `Once` has successfully…",0,[[["self"]],["bool"]]],[11,"new",E,"Creates a new `Once` value.",3,[[],["once"]]],[11,"state",E,"Returns the current state of this `Once`.",3,[[["self"]],["oncestate"]]],[11,"call_once",E,"Performs an initialization routine once and only once. The…",3,[[["self"],["f"]]]],[11,"call_once_force",E,"Performs the same function as `call_once` except ignores…",3,[[["self"],["f"]]]],[6,R[1252],E,R[4436],N,N],[6,"Mutex",E,R[4437],N,N],[6,R[4438],E,R[4439],N,N],[6,R[1255],E,R[4440],N,N],[6,R[1253],E,R[4441],N,N],[6,R[1254],E,R[4442],N,N],[6,R[1259],E,R[4443],N,N],[6,R[1260],E,R[4444],N,N],[6,"RwLock",E,R[4445],N,N],[6,R[1256],E,R[4446],N,N],[6,R[1258],E,R[4447],N,N],[6,R[1257],E,R[4448],N,N],[17,"ONCE_INIT",E,"Initialization value for static `Once` values.",N,N],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,[[[T],["self"]]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,R[18],E,E,5,[[["self"]],[R[40]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[11],E,E,6,[[[U]],[R[12]]]],[11,R[39],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[],[R[12]]]],[11,R[18],E,E,6,[[["self"]],[R[40]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[[T],["self"]]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"eq",E,E,1,[[["self"],[R[4435]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[4435]]],["bool"]]],[11,"eq",E,E,0,[[["oncestate"],["self"]],["bool"]]],[11,"clone",E,E,1,[[["self"]],[R[4435]]]],[11,"clone",E,E,0,[[["self"]],["oncestate"]]],[11,R[79],E,E,2,[[],["condvar"]]],[11,R[79],E,E,3,[[],["once"]]],[11,"fmt",E,E,1,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,2,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,0,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,3,[[["self"],[R[29]]],[R[12]]]],[11,"lock",E,E,4,[[["self"]]]],[11,"try_lock",E,E,4,[[["self"]],["bool"]]],[11,"unlock",E,E,4,[[["self"]]]],[11,R[1189],E,E,4,[[["self"]]]],[11,"bump",E,E,4,[[["self"]]]],[11,R[1200],E,E,4,[[["instant"],["self"]],["bool"]]],[11,R[1199],E,E,4,[[[R[1358]],["self"]],["bool"]]],[11,R[4449],E,E,6,[[["self"]],[R[9]]]],[11,R[4450],E,E,5,[[["self"]]]],[11,R[4451],E,E,5,[[["self"]],["bool"]]],[11,R[4452],E,E,5,[[["self"]]]],[11,R[4453],E,E,5,[[["self"]]]],[11,R[4454],E,E,5,[[["self"]],["bool"]]],[11,R[4455],E,E,5,[[["self"]]]],[11,R[4456],E,E,5,[[["self"]]]],[11,R[4457],E,E,5,[[["self"]]]],[11,R[1246],E,E,5,[[["self"]]]],[11,R[1248],E,E,5,[[["self"]]]],[11,R[1229],E,E,5,[[["self"]]]],[11,R[4458],E,E,5,[[["self"]],["bool"]]],[11,R[4459],E,E,5,[[["self"]],["bool"]]],[11,R[4460],E,E,5,[[[R[1358]],["self"]],["bool"]]],[11,R[4461],E,E,5,[[["instant"],["self"]],["bool"]]],[11,R[4462],E,E,5,[[["self"]]]],[11,R[4463],E,E,5,[[["self"]],["bool"]]],[11,R[4464],E,E,5,[[["self"]],["bool"]]],[11,R[4465],E,E,5,[[["self"]],["bool"]]],[11,R[4466],E,E,5,[[["self"]]]],[11,R[4467],E,E,5,[[["self"]],["bool"]]],[11,R[4468],E,E,5,[[["self"]]]],[11,"upgrade",E,E,5,[[["self"]]]],[11,R[1236],E,E,5,[[["self"]],["bool"]]],[11,R[4469],E,E,5,[[["self"]]]],[11,R[1250],E,E,5,[[["self"]]]],[11,R[4470],E,E,5,[[["self"]]]],[11,R[1238],E,E,5,[[["self"]]]],[11,R[4471],E,E,5,[[["instant"],["self"]],["bool"]]],[11,R[4472],E,E,5,[[[R[1358]],["self"]],["bool"]]],[11,R[1242],E,E,5,[[["instant"],["self"]],["bool"]]],[11,R[1240],E,E,5,[[[R[1358]],["self"]],["bool"]]]],"p":[[4,"OnceState"],[3,R[4473]],[3,"Condvar"],[3,"Once"],[3,"RawMutex"],[3,R[4474]],[3,R[4475]]]};
searchIndex[R[4476]]={"doc":R[5207],"i":[[8,"Decoder",R[4476],R[5208],N,N],[16,"Item",E,R[5209],0,N],[16,"Error",E,R[5210],0,N],[10,"decode",E,R[5211],0,[[["self"],[R[2548]]],[[R[12],[R[52]]],[R[52]]]]],[11,R[5212],E,R[5213],0,[[["self"],[R[2548]]],[[R[12],[R[52]]],[R[52]]]]],[11,"framed",E,R[3564],0,[[[T]],["framed"]]],[8,"Encoder",E,R[5214],N,N],[16,"Item",E,R[5215],1,N],[16,"Error",E,R[5216],1,N],[10,"encode",E,R[5217],1,[[["self"],[R[2548]]],[R[12]]]],[3,"Framed",E,R[4687],N,N],[3,R[4484],E,R[5218],N,N],[12,"io",E,R[5219],2,N],[12,"codec",E,"The codec",2,N],[12,R[4872],E,R[5220],2,N],[12,R[4486],E,R[5221],2,N],[3,R[5222],E,R[5223],N,N],[3,R[4485],E,R[5224],N,N],[3,R[5225],E,R[5226],N,N],[3,R[5227],E,R[5228],N,N],[11,"new",E,R[5229],3,[[],[R[4477]]]],[11,"new",E,R[5230],4,[[],[R[4478]]]],[11,R[5231],E,R[5232],4,[[[R[9]]],["self"]]],[11,"max_length",E,R[5233],4,[[["self"]],[R[9]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,R[18],E,E,5,[[["self"]],[R[40]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[11],E,E,6,[[[U]],[R[12]]]],[11,R[39],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[],[R[12]]]],[11,R[18],E,E,6,[[["self"]],[R[40]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[11],E,E,7,[[[U]],[R[12]]]],[11,R[39],E,E,7,[[["self"]],[T]]],[11,R[13],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[],[R[12]]]],[11,R[18],E,E,7,[[["self"]],[R[40]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[17],E,E,3,[[[T],["self"]]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[16],E,E,4,[[["self"]],[T]]],[11,R[17],E,E,4,[[[T],["self"]]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,"poll",E,E,6,[[["self"]],[["async",[R[52]]],[R[12],["async"]]]]],[11,"poll",E,E,5,[[["self"]],[[R[12],["async"]],["async",[R[52]]]]]],[11,"poll",E,E,7,[[["self"]],[[R[12],["async"]],["async",[R[52]]]]]],[11,"fmt",E,E,5,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,2,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,7,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,6,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,R[181],E,E,6,[[["self"]],[[R[184]],[R[12],[R[184]]]]]],[11,R[183],E,E,6,[[["self"]],[["async"],[R[12],["async"]]]]],[11,"close",E,E,6,[[["self"]],[["async"],[R[12],["async"]]]]],[11,R[181],E,E,7,[[["self"]],[[R[184]],[R[12],[R[184]]]]]],[11,R[183],E,E,7,[[["self"]],[["async"],[R[12],["async"]]]]],[11,"close",E,E,7,[[["self"]],[["async"],[R[12],["async"]]]]],[11,R[181],E,E,5,[[["self"]],[[R[12],[R[184]]],[R[184]]]]],[11,R[183],E,E,5,[[["self"]],[["async"],[R[12],["async"]]]]],[11,"close",E,E,5,[[["self"]],[["async"],[R[12],["async"]]]]],[11,"eq",E,E,3,[[["self"],[R[4477]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[4477]]],["bool"]]],[11,"eq",E,E,4,[[["self"],[R[4478]]],["bool"]]],[11,"ne",E,E,4,[[["self"],[R[4478]]],["bool"]]],[11,"clone",E,E,3,[[["self"]],[R[4477]]]],[11,"clone",E,E,4,[[["self"]],[R[4478]]]],[11,"cmp",E,E,3,[[["self"],[R[4477]]],[R[51]]]],[11,"cmp",E,E,4,[[["self"],[R[4478]]],[R[51]]]],[11,R[264],E,E,3,[[["self"],[R[4477]]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,3,[[["self"],[R[4477]]],["bool"]]],[11,"le",E,E,3,[[["self"],[R[4477]]],["bool"]]],[11,"gt",E,E,3,[[["self"],[R[4477]]],["bool"]]],[11,"ge",E,E,3,[[["self"],[R[4477]]],["bool"]]],[11,R[264],E,E,4,[[["self"],[R[4478]]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,4,[[["self"],[R[4478]]],["bool"]]],[11,"le",E,E,4,[[["self"],[R[4478]]],["bool"]]],[11,"gt",E,E,4,[[["self"],[R[4478]]],["bool"]]],[11,"ge",E,E,4,[[["self"],[R[4478]]],["bool"]]],[11,"fmt",E,E,3,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,4,[[[R[29]],["self"]],[R[12]]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,"hash",E,E,4,[[["self"],["__h"]]]],[11,"encode",E,E,3,[[["bytes"],["self"],[R[2548]]],[[R[12],["error"]],["error"]]]],[11,"encode",E,E,4,[[["string"],["self"],[R[2548]]],[[R[12],["error"]],["error"]]]],[11,"decode",E,E,3,[[["self"],[R[2548]]],[["error"],[R[52],[R[2548]]],[R[12],[R[52],"error"]]]]],[11,"decode",E,E,4,[[["self"],[R[2548]]],[["error"],[R[12],[R[52],"error"]],[R[52],["string"]]]]],[11,R[5212],E,E,4,[[["self"],[R[2548]]],[["error"],[R[12],[R[52],"error"]],[R[52],["string"]]]]],[11,"new",E,R[3564],5,[[[U],[T]],["framed"]]],[11,"from_parts",E,R[3564],5,[[[R[4479]]],["framed"]]],[11,R[110],E,R[4480],5,[[["self"]],[T]]],[11,R[111],E,R[4481],5,[[["self"]],[T]]],[11,"codec",E,R[5234],5,[[["self"]],[U]]],[11,"codec_mut",E,R[5235],5,[[["self"]],[U]]],[11,R[46],E,R[5236],5,[[],[T]]],[11,R[4907],E,R[5237],5,[[],[R[4479]]]],[11,"new",E,R[5238],2,[[[U],[T]],[R[4479]]]],[11,"new",E,R[5239],6,[[["d"],[T]],[R[5240]]]],[11,R[110],E,R[4480],6,[[["self"]],[T]]],[11,R[111],E,R[4481],6,[[["self"]],[T]]],[11,R[46],E,R[5241],6,[[],[T]]],[11,"decoder",E,R[4482],6,[[["self"]],["d"]]],[11,R[5242],E,R[4483],6,[[["self"]],["d"]]],[11,"new",E,R[5243],7,[[["e"],[T]],[R[4847]]]],[11,R[110],E,R[4480],7,[[["self"]],[T]]],[11,R[111],E,R[4481],7,[[["self"]],[T]]],[11,R[46],E,R[5244],7,[[],[T]]],[11,"encoder",E,R[4482],7,[[["self"]],["e"]]],[11,R[5245],E,R[4483],7,[[["self"]],["e"]]]],"p":[[8,"Decoder"],[8,"Encoder"],[3,R[4484]],[3,R[5225]],[3,R[5227]],[3,"Framed"],[3,R[5222]],[3,R[4485]]]};
searchIndex[R[4487]]={"doc":"A preview of Tokio w/ `async` / `await` support.","i":[[0,"io",R[4487],"Use I/O with `async` / `await`.",N,N],[3,"Flush",R[4489],R[4494],N,N],[3,"Read",E,"A future which can be used to read bytes.",N,N],[3,R[4497],E,"A future which can be used to read exactly enough bytes to…",N,N],[3,"Write",E,"A future used to write data.",N,N],[3,"WriteAll",E,"A future used to write the entire contents of a buffer.",N,N],[8,R[4492],E,R[4488],N,N],[11,"read_async",E,R[4495],0,[[["self"]],["read"]]],[11,R[5246],E,R[4496],0,[[["self"]],[R[5247]]]],[8,R[4493],E,R[4488],N,N],[11,R[5248],E,R[5249],1,[[["self"]],["write"]]],[11,R[5250],E,R[5251],1,[[["self"]],["writeall"]]],[11,R[5252],E,R[5253],1,[[["self"]],["flush"]]],[0,"sink",R[4487],"Use sinks with `async` / `await`.",N,N],[3,"Send",R[4490],"Future for the `SinkExt::send_async` combinator, which…",N,N],[8,"SinkExt",E,R[5254],N,N],[11,"send_async",E,R[5255],2,[[["self"]],["send"]]],[0,"stream",R[4487],"Use streams with `async` / `await`.",N,N],[3,"Next",R[4491],"A future of the next element of a stream.",N,N],[8,R[545],E,R[5256],N,N],[11,"next",E,R[5257],3,[[["self"]],["next"]]],[14,"await",R[4487],R[5258],N,N],[11,"from",R[4489],E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,R[18],E,E,5,[[["self"]],[R[40]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[11],E,E,6,[[[U]],[R[12]]]],[11,R[39],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[],[R[12]]]],[11,R[18],E,E,6,[[["self"]],[R[40]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[11],E,E,7,[[[U]],[R[12]]]],[11,R[39],E,E,7,[[["self"]],[T]]],[11,R[13],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[],[R[12]]]],[11,R[18],E,E,7,[[["self"]],[R[40]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[11],E,E,8,[[[U]],[R[12]]]],[11,R[39],E,E,8,[[["self"]],[T]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[],[R[12]]]],[11,R[18],E,E,8,[[["self"]],[R[40]]]],[11,"from",R[4490],E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[11],E,E,9,[[[U]],[R[12]]]],[11,R[39],E,E,9,[[["self"]],[T]]],[11,R[13],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[],[R[12]]]],[11,R[18],E,E,9,[[["self"]],[R[40]]]],[11,"from",R[4491],E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[11],E,E,10,[[[U]],[R[12]]]],[11,R[39],E,E,10,[[["self"]],[T]]],[11,R[13],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[],[R[12]]]],[11,R[18],E,E,10,[[["self"]],[R[40]]]],[11,"fmt",R[4489],E,4,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,5,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,6,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,7,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,8,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[4490],E,9,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[4491],E,10,[[[R[29]],["self"]],[R[12]]]],[11,"poll",R[4489],E,4,[[["self"],["pin"],["waker"]],["poll"]]],[11,"poll",E,E,5,[[["self"],["waker"],["pin"]],["poll"]]],[11,"poll",E,E,6,[[["self"],["waker"],["pin"]],["poll"]]],[11,"poll",E,E,7,[[["self"],["waker"],["pin"]],[[R[12],[R[9]]],["poll",[R[12]]]]]],[11,"poll",E,E,8,[[["self"],["waker"],["pin"]],[[R[12]],["poll",[R[12]]]]]],[11,"poll",R[4490],E,9,[[["self"],["waker"],["pin"]],["poll"]]],[11,"poll",R[4491],E,10,[[["self"],["pin"],["waker"]],["poll"]]]],"p":[[8,R[4492]],[8,R[4493]],[8,"SinkExt"],[8,R[545]],[3,"Flush"],[3,"Read"],[3,R[4497]],[3,"Write"],[3,"WriteAll"],[3,"Send"],[3,"Next"]]};
searchIndex[R[4498]]={"doc":"Asynchronous TLS/SSL streams for Tokio using Rustls.","i":[[3,R[4503],R[4498],E,N,N],[3,R[4504],E,E,N,N],[3,"Connect",E,"Future returned from `ClientConfigExt::connect_async`…",N,N],[3,"Accept",E,"Future returned from `ServerConfigExt::accept_async` which…",N,N],[3,"TlsStream",E,"A wrapper around an underlying raw stream which implements…",N,N],[11,"connect",E,E,0,[[[R[2913]],["io"],["self"]],["connect"]]],[11,"connect_with_session",E,E,0,[[[R[4499]],["io"]],["connect"]]],[11,"accept",E,E,1,[[["io"],["self"]],["accept"]]],[11,"accept_with_session",E,E,1,[[["io"],[R[4500]]],["accept"]]],[11,R[110],E,E,2,[[["self"]]]],[11,R[111],E,E,2,[[["self"]]]],[11,R[46],E,E,2,[[]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[[T],["self"]]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,[[[T],["self"]]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,R[99],E,E,3,[[],["f"]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,R[99],E,E,4,[[],["f"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"clone",E,E,0,[[["self"]],[R[4501]]]],[11,"clone",E,E,1,[[["self"]],[R[4502]]]],[11,"from",E,E,0,[[["arc",[R[4225]]],[R[4225]]],[R[4501]]]],[11,"from",E,E,1,[[[R[4224]],["arc",[R[4224]]]],[R[4502]]]],[11,"from",E,E,2,[[],["tlsstream"]]],[11,"fmt",E,E,2,[[[R[29]],["self"]],[R[12]]]],[11,"read",E,E,2,[[["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,"write",E,E,2,[[["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,"flush",E,E,2,[[["self"]],[R[12]]]],[11,"poll",E,E,3,[[["self"]],["poll"]]],[11,"poll",E,E,4,[[["self"]],["poll"]]],[11,R[2344],E,E,2,[[["self"]],[["poll",["error"]],["error"]]]],[11,R[3560],E,E,2,[[["self"]],["bool"]]]],"p":[[3,R[4503]],[3,R[4504]],[3,"TlsStream"],[3,"Connect"],[3,"Accept"]]};
searchIndex[R[44]]={"doc":"Small vectors in various sizes. These store a certain…","i":[[3,"Drain",R[44],"An iterator that removes the items from a `SmallVec` and…",N,N],[3,R[59],E,"A `Vec`-like container that can store a small number of…",N,N],[3,R[60],E,"An iterator that consumes a `SmallVec` and yields its…",N,N],[5,R[267],E,"Hint to the optimizer that any code path which calls this…",N,[[]]],[8,"VecLike",E,"Common operations implemented by both `Vec` and `SmallVec`.",N,N],[10,"push",E,"Append an element to the vector.",0,[[["self"],[T]]]],[8,R[58],E,"Trait to be implemented by a collection that can be…",N,N],[10,R[47],E,"Extends a collection from a slice of its element type",1,[[["self"]]]],[8,"Array",E,"Types that can be used as the backing store for a SmallVec",N,N],[16,"Item",E,"The type of the array's elements.",2,N],[10,"size",E,"Returns the number of items the array can hold.",2,[[],[R[9]]]],[10,"ptr",E,"Returns a pointer to the first element of the array.",2,[[["self"]]]],[10,"ptr_mut",E,"Returns a mutable pointer to the first element of the array.",2,[[["self"]]]],[11,"new",E,"Construct an empty vector",3,[[],[R[44]]]],[11,R[73],E,"Construct an empty vector with enough capacity…",3,[[[R[9]]],["self"]]],[11,"from_vec",E,"Construct a new `SmallVec` from a `Vec<A::Item>`.",3,[[["vec"]],[R[44]]]],[11,"from_buf",E,R[45],3,[[["a"]],[R[44]]]],[11,"from_buf_and_len",E,R[45],3,[[["a"],[R[9]]],[R[44]]]],[11,"from_buf_and_len_unchecked",E,R[45],3,[[["a"],[R[9]]],[R[44]]]],[11,"set_len",E,"Sets the length of a vector.",3,[[["self"],[R[9]]]]],[11,"inline_size",E,"The maximum number of elements this vector can hold inline",3,[[["self"]],[R[9]]]],[11,"len",E,"The number of elements stored in the vector",3,[[["self"]],[R[9]]]],[11,R[69],E,"Returns `true` if the vector is empty",3,[[["self"]],["bool"]]],[11,R[74],E,"The number of items the vector can hold without reallocating",3,[[["self"]],[R[9]]]],[11,"spilled",E,"Returns `true` if the data has spilled into a separate…",3,[[["self"]],["bool"]]],[11,"drain",E,"Empty the vector and return an iterator over its former…",3,[[["self"]],["drain"]]],[11,"push",E,"Append an item to the vector.",3,[[["self"]]]],[11,"pop",E,"Remove an item from the end of the vector and return it,…",3,[[["self"]],[R[52]]]],[11,"grow",E,"Re-allocate to set the capacity to `max(new_cap,…",3,[[["self"],[R[9]]]]],[11,"reserve",E,"Reserve capacity for `additional` more elements to be…",3,[[["self"],[R[9]]]]],[11,R[75],E,"Reserve the minimum capacity for `additional` more…",3,[[["self"],[R[9]]]]],[11,R[76],E,"Shrink the capacity of the vector as much as possible.",3,[[["self"]]]],[11,R[817],E,"Shorten the vector, keeping the first `len` elements and…",3,[[["self"],[R[9]]]]],[11,R[818],E,"Extracts a slice containing the entire vector.",3,[[["self"]]]],[11,R[819],E,"Extracts a mutable slice of the entire vector.",3,[[["self"]]]],[11,R[820],E,"Remove the element at position `index`, replacing it with…",3,[[["self"],[R[9]]]]],[11,"clear",E,"Remove all elements from the vector.",3,[[["self"]]]],[11,"remove",E,"Remove and return the element at position `index`,…",3,[[["self"],[R[9]]]]],[11,"insert",E,"Insert an element at position `index`, shifting all…",3,[[["self"],[R[9]]]]],[11,"insert_many",E,"Insert multiple elements at position `index`, shifting all…",3,[[["self"],[R[50]],[R[9]]]]],[11,"into_vec",E,"Convert a SmallVec to a Vec, without reallocating if the…",3,[[],["vec"]]],[11,R[46],E,"Convert the SmallVec into an `A` if possible. Otherwise…",3,[[],[R[12]]]],[11,"retain",E,R[263],3,[[["self"],["fnmut"]]]],[11,"dedup",E,"Removes consecutive duplicate elements.",3,[[["self"]]]],[11,"dedup_by",E,"Removes consecutive duplicate elements using the given…",3,[[["self"],["f"]]]],[11,"dedup_by_key",E,"Removes consecutive elements that map to the same key.",3,[[["self"],["f"]]]],[11,"from_raw_parts",E,"Creates a `SmallVec` directly from the raw components of…",3,[[[R[9]]],[R[44]]]],[11,R[2029],E,"Copy the elements from a slice into a new `SmallVec`.",3,[[],["self"]]],[11,"insert_from_slice",E,"Copy elements from a slice into the vector at position…",3,[[["self"],[R[9]]]]],[11,R[47],E,"Copy elements from a slice and append them to the vector.",3,[[["self"]]]],[11,"resize",E,"Resizes the vector so that its length is equal to `len`.",3,[[["self"],[R[9]]]]],[11,"from_elem",E,"Creates a `SmallVec` with `n` copies of `elem`. ``` use…",3,[[[R[9]]],["self"]]],[14,R[44],E,"Creates a [`SmallVec`] containing the arguments.",N,N],[11,"from",E,E,4,[[[T]],[T]]],[11,R[48],E,E,4,[[],["i"]]],[11,"into",E,E,4,[[],[U]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[48],E,E,3,[[],["i"]]],[11,"into",E,E,3,[[],[U]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[17],E,E,3,[[[T],["self"]]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[48],E,E,5,[[],["i"]]],[11,"into",E,E,5,[[],[U]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,R[18],E,E,5,[[["self"]],[R[40]]]],[11,"push",E,E,3,[[["self"]]]],[11,R[47],E,E,3,[[["self"]]]],[11,"eq",E,E,3,[[[R[44]],["self"]],["bool"]]],[11,"ne",E,E,3,[[[R[44]],["self"]],["bool"]]],[11,R[49],E,E,4,[[["self"]],[R[52]]]],[11,R[49],E,E,5,[[["self"]],[R[52]]]],[11,"clone",E,E,3,[[["self"]],[R[44]]]],[11,"cmp",E,E,3,[[[R[44]],["self"]],[R[51]]]],[11,"from",E,E,3,[[],[R[44]]]],[11,"from",E,E,3,[[["vec"]],[R[44]]]],[11,"from",E,E,3,[[["a"]],[R[44]]]],[11,R[48],E,E,3,[[]]],[11,"extend",E,E,3,[[["self"],[R[50]]]]],[11,"drop",E,E,4,[[["self"]]]],[11,"drop",E,E,3,[[["self"]]]],[11,"drop",E,E,5,[[["self"]]]],[11,R[264],E,E,3,[[[R[44]],["self"]],[[R[52],[R[51]]],[R[51]]]]],[11,"as_mut",E,E,3,[[["self"]]]],[11,"next",E,E,4,[[["self"]],[R[52]]]],[11,R[53],E,E,4,[[["self"]]]],[11,"next",E,E,5,[[["self"]],[R[52]]]],[11,R[53],E,E,5,[[["self"]]]],[11,"as_ref",E,E,3,[[["self"]]]],[11,R[79],E,E,3,[[],[R[44]]]],[11,R[54],E,E,3,[[["self"]]]],[11,"fmt",E,E,3,[[["self"],[R[29]]],[R[12]]]],[11,"deref",E,E,3,[[["self"]]]],[11,"index",E,E,3,[[["self"],[R[9]]]]],[11,"index",E,E,3,[[["range",[R[9]]],["self"],[R[9]]]]],[11,"index",E,E,3,[[["self"],[R[56],[R[9]]],[R[9]]]]],[11,"index",E,E,3,[[["rangeto",[R[9]]],["self"],[R[9]]]]],[11,"index",E,E,3,[[[R[57]],["self"]]]],[11,R[55],E,E,3,[[["self"],[R[9]]]]],[11,R[55],E,E,3,[[["self"],["range",[R[9]]],[R[9]]]]],[11,R[55],E,E,3,[[["self"],[R[56],[R[9]]],[R[9]]]]],[11,R[55],E,E,3,[[["self"],["rangeto",[R[9]]],[R[9]]]]],[11,R[55],E,E,3,[[[R[57]],["self"]]]],[11,"hash",E,E,3,[[["h"],["self"]]]],[11,R[187],E,E,3,[[[R[50]]],[R[44]]]],[11,R[39],E,E,3,[[["self"]]]],[11,"write",E,E,3,[[["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,R[4866],E,E,3,[[["self"]],[R[12]]]],[11,"flush",E,E,3,[[["self"]],[R[12]]]],[11,R[13],E,E,3,[[["self"]]]]],"p":[[8,"VecLike"],[8,R[58]],[8,"Array"],[3,R[59]],[3,"Drain"],[3,R[60]]]};
searchIndex[R[4519]]={"doc":"Asynchronous file and standard stream adaptation.","i":[[3,R[4520],R[4519],"Future returned by `create_dir`.",N,N],[3,R[4521],E,"Future returned by `create_dir_all`.",N,N],[3,R[4507],E,R[4508],N,N],[3,R[4522],E,"Future returned by `hard_link`.",N,N],[3,R[4506],E,"Future returned by `metadata`.",N,N],[3,"ReadFile",E,R[5259],N,N],[3,"DirEntry",E,"Entries returned by the [`ReadDir`] stream.",N,N],[3,"ReadDir",E,"Stream of the entries in a directory.",N,N],[3,R[4523],E,"Future returned by `read_dir`.",N,N],[3,R[4524],E,"Future returned by `read_link`.",N,N],[3,R[4525],E,"Future returned by `remove_dir`.",N,N],[3,R[4526],E,"Future returned by `remove_file`.",N,N],[3,R[4527],E,"Future returned by `rename`.",N,N],[3,R[4528],E,"Future returned by `set_permissions`.",N,N],[3,"Stderr",E,R[5260],N,N],[3,"Stdin",E,R[5261],N,N],[3,"Stdout",E,R[5262],N,N],[3,R[4529],E,"Future returned by `symlink_metadata`.",N,N],[3,R[5329],E,R[5263],N,N],[5,"create_dir",E,R[5264],N,[[["asref",["path"]],["path"]],[[R[5265]],["asref",["path"]],["path"]]]],[5,R[5266],E,R[5267],N,[[["asref",["path"]],["path"]],[["asref",["path"]],["path"],[R[5268]]]]],[5,"hard_link",E,R[5269],N,[[["asref",["path"]],["path"]],[["asref",["path"]],["path"],[R[5270]]]]],[5,R[398],E,R[4505],N,[[["p"]],[R[4513]]]],[5,"read",E,R[5271],N,[[["p"]],["readfile"]]],[5,"read_dir",E,R[5272],N,[[["p"]],[R[5273]]]],[5,"read_link",E,R[5274],N,[[["asref",["path"]],["path"]],[["asref",["path"]],["path"],[R[5275]]]]],[5,"remove_dir",E,R[5276],N,[[["asref",["path"]],["path"]],[["asref",["path"]],["path"],[R[5277]]]]],[5,R[5278],E,R[5279],N,[[["asref",["path"]],["path"]],[["asref",["path"]],["path"],[R[5280]]]]],[5,"rename",E,R[5281],N,[[["asref",["path"]],["path"]],[["asref",["path"]],[R[5282]],["path"]]]],[5,R[5283],E,R[5284],N,[[[R[4516]],["asref",["path"]],["path"]],[["asref",["path"]],["path"],[R[5285]]]]],[5,"stderr",E,R[5286],N,[[],["stderr"]]],[5,"stdin",E,R[5287],N,[[],["stdin"]]],[5,"stdout",E,R[5288],N,[[],["stdout"]]],[5,R[5289],E,R[4505],N,[[["p"]],[R[5290]]]],[5,"write",E,R[5291],N,[[["asref"],["p"]],[["asref"],["writefile"]]]],[0,"file",E,R[5292],N,N],[3,R[4530],R[4510],R[5293],N,N],[3,R[4531],E,R[5294],N,N],[3,R[4506],E,R[5295],N,N],[3,R[5296],E,R[5297],N,N],[3,R[4507],E,R[4508],N,N],[3,R[5298],E,R[5299],N,N],[3,"File",E,R[4711],N,N],[11,"new",R[4519],R[5300],0,[[],[R[4509]]]],[11,"read",E,R[5301],0,[[["self"],["bool"]],[R[4509]]]],[11,"write",E,R[5302],0,[[["self"],["bool"]],[R[4509]]]],[11,"append",E,R[5303],0,[[["self"],["bool"]],[R[4509]]]],[11,R[817],E,R[5304],0,[[["self"],["bool"]],[R[4509]]]],[11,"create",E,R[5305],0,[[["self"],["bool"]],[R[4509]]]],[11,"create_new",E,R[5306],0,[[["self"],["bool"]],[R[4509]]]],[11,"open",E,R[5307],0,[[["self"],["p"]],[R[5308]]]],[11,"open",R[4510],R[5309],1,[[["p"]],[R[5308]]]],[11,"create",E,R[5310],1,[[["p"]],[R[5311]]]],[11,R[4511],E,R[5312],1,[[["stdfile"]],["file"]]],[11,"poll_seek",E,R[4512],1,[[["seekfrom"],["self"]],[["poll",["u64","error"]],["error"],["u64"]]]],[11,"seek",E,R[4512],1,[[["seekfrom"]],["seekfuture"]]],[11,R[5313],E,R[5314],1,[[["self"]],[["poll",["error"]],["error"]]]],[11,R[5315],E,R[5316],1,[[["self"]],[["poll",["error"]],["error"]]]],[11,R[5317],E,R[5318],1,[[["self"],["u64"]],[["poll",["error"]],["error"]]]],[11,R[398],E,R[4514],1,[[],[R[4513]]]],[11,R[4517],E,R[4514],1,[[["self"]],[["poll",[R[398],"error"]],[R[398]],["error"]]]],[11,R[5319],E,R[4515],1,[[["self"]],[["error"],["poll",["file","error"]],["file"]]]],[11,R[3570],E,R[4515],1,[[],[R[5320]]]],[11,R[5321],E,R[5322],1,[[["self"],[R[4516]]],[["poll",["error"]],["error"]]]],[11,"into_std",E,R[5323],1,[[],["stdfile"]]],[0,"os",R[4519],R[5324],N,N],[0,"unix","tokio_fs::os",R[5325],N,N],[3,R[4532],R[4518],R[5326],N,N],[5,"symlink",E,R[5327],N,[[["asref",["path"]],["path"]],[["asref",["path"]],["path"],[R[5328]]]]],[11,"into_std",R[4519],"Destructures the `tokio_fs::DirEntry` into a…",2,[[],["stddirentry"]]],[11,"path",E,"Returns the full path to the file that this entry…",2,[[["self"]],["pathbuf"]]],[11,"file_name",E,"Returns the bare file name of this directory entry without…",2,[[["self"]],["osstring"]]],[11,R[4517],E,"Return the metadata for the file that this entry points at.",2,[[["self"]],[["poll",[R[398],"error"]],[R[398]],["error"]]]],[11,"poll_file_type",E,"Return the file type for the file that this entry points at.",2,[[["self"]],[["error"],["filetype"],["poll",["filetype","error"]]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,R[99],E,E,3,[[],["f"]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,R[99],E,E,4,[[],["f"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[[T],["self"]]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,R[18],E,E,5,[[["self"]],[R[40]]]],[11,R[99],E,E,5,[[],["f"]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[11],E,E,6,[[[U]],[R[12]]]],[11,R[39],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[],[R[12]]]],[11,R[18],E,E,6,[[["self"]],[R[40]]]],[11,R[99],E,E,6,[[],["f"]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[11],E,E,7,[[[U]],[R[12]]]],[11,R[39],E,E,7,[[["self"]],[T]]],[11,R[13],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[],[R[12]]]],[11,R[18],E,E,7,[[["self"]],[R[40]]]],[11,R[99],E,E,7,[[],["f"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[11],E,E,8,[[[U]],[R[12]]]],[11,R[39],E,E,8,[[["self"]],[T]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[],[R[12]]]],[11,R[18],E,E,8,[[["self"]],[R[40]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[11],E,E,9,[[[U]],[R[12]]]],[11,R[39],E,E,9,[[["self"]],[T]]],[11,R[13],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[],[R[12]]]],[11,R[18],E,E,9,[[["self"]],[R[40]]]],[11,R[99],E,E,9,[[],["f"]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[11],E,E,10,[[[U]],[R[12]]]],[11,R[39],E,E,10,[[["self"]],[T]]],[11,R[13],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[],[R[12]]]],[11,R[18],E,E,10,[[["self"]],[R[40]]]],[11,R[99],E,E,10,[[],["f"]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[11],E,E,11,[[[U]],[R[12]]]],[11,R[39],E,E,11,[[["self"]],[T]]],[11,R[13],E,E,11,[[["self"]],[T]]],[11,R[14],E,E,11,[[],[R[12]]]],[11,R[18],E,E,11,[[["self"]],[R[40]]]],[11,R[99],E,E,11,[[],["f"]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[11],E,E,12,[[[U]],[R[12]]]],[11,R[39],E,E,12,[[["self"]],[T]]],[11,R[13],E,E,12,[[["self"]],[T]]],[11,R[14],E,E,12,[[],[R[12]]]],[11,R[18],E,E,12,[[["self"]],[R[40]]]],[11,R[99],E,E,12,[[],["f"]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[11],E,E,13,[[[U]],[R[12]]]],[11,R[39],E,E,13,[[["self"]],[T]]],[11,R[13],E,E,13,[[["self"]],[T]]],[11,R[14],E,E,13,[[],[R[12]]]],[11,R[18],E,E,13,[[["self"]],[R[40]]]],[11,R[99],E,E,13,[[],["f"]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[11],E,E,14,[[[U]],[R[12]]]],[11,R[39],E,E,14,[[["self"]],[T]]],[11,R[13],E,E,14,[[["self"]],[T]]],[11,R[14],E,E,14,[[],[R[12]]]],[11,R[18],E,E,14,[[["self"]],[R[40]]]],[11,R[99],E,E,14,[[],["f"]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[11],E,E,15,[[[U]],[R[12]]]],[11,R[39],E,E,15,[[["self"]],[T]]],[11,R[13],E,E,15,[[["self"]],[T]]],[11,R[14],E,E,15,[[],[R[12]]]],[11,R[18],E,E,15,[[["self"]],[R[40]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[11],E,E,16,[[[U]],[R[12]]]],[11,R[39],E,E,16,[[["self"]],[T]]],[11,R[13],E,E,16,[[["self"]],[T]]],[11,R[14],E,E,16,[[],[R[12]]]],[11,R[18],E,E,16,[[["self"]],[R[40]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[11],E,E,17,[[[U]],[R[12]]]],[11,R[39],E,E,17,[[["self"]],[T]]],[11,R[13],E,E,17,[[["self"]],[T]]],[11,R[14],E,E,17,[[],[R[12]]]],[11,R[18],E,E,17,[[["self"]],[R[40]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[11],E,E,18,[[[U]],[R[12]]]],[11,R[39],E,E,18,[[["self"]],[T]]],[11,R[13],E,E,18,[[["self"]],[T]]],[11,R[14],E,E,18,[[],[R[12]]]],[11,R[18],E,E,18,[[["self"]],[R[40]]]],[11,R[99],E,E,18,[[],["f"]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[11],E,E,19,[[[U]],[R[12]]]],[11,R[39],E,E,19,[[["self"]],[T]]],[11,R[13],E,E,19,[[["self"]],[T]]],[11,R[14],E,E,19,[[],[R[12]]]],[11,R[18],E,E,19,[[["self"]],[R[40]]]],[11,R[99],E,E,19,[[],["f"]]],[11,"from",R[4510],E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[11],E,E,20,[[[U]],[R[12]]]],[11,R[39],E,E,20,[[["self"]],[T]]],[11,R[13],E,E,20,[[["self"]],[T]]],[11,R[14],E,E,20,[[],[R[12]]]],[11,R[18],E,E,20,[[["self"]],[R[40]]]],[11,R[99],E,E,20,[[],["f"]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[11],E,E,21,[[[U]],[R[12]]]],[11,R[39],E,E,21,[[["self"]],[T]]],[11,R[13],E,E,21,[[["self"]],[T]]],[11,R[14],E,E,21,[[],[R[12]]]],[11,R[18],E,E,21,[[["self"]],[R[40]]]],[11,R[99],E,E,21,[[],["f"]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[11],E,E,22,[[[U]],[R[12]]]],[11,R[39],E,E,22,[[["self"]],[T]]],[11,R[13],E,E,22,[[["self"]],[T]]],[11,R[14],E,E,22,[[],[R[12]]]],[11,R[18],E,E,22,[[["self"]],[R[40]]]],[11,R[99],E,E,22,[[],["f"]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[11],E,E,23,[[[U]],[R[12]]]],[11,R[39],E,E,23,[[["self"]],[T]]],[11,R[13],E,E,23,[[["self"]],[T]]],[11,R[14],E,E,23,[[],[R[12]]]],[11,R[18],E,E,23,[[["self"]],[R[40]]]],[11,R[99],E,E,23,[[],["f"]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[11],E,E,24,[[[U]],[R[12]]]],[11,R[39],E,E,24,[[["self"]],[T]]],[11,R[13],E,E,24,[[["self"]],[T]]],[11,R[14],E,E,24,[[],[R[12]]]],[11,R[18],E,E,24,[[["self"]],[R[40]]]],[11,R[99],E,E,24,[[],["f"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",R[4518],E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[11],E,E,25,[[[U]],[R[12]]]],[11,R[39],E,E,25,[[["self"]],[T]]],[11,R[13],E,E,25,[[["self"]],[T]]],[11,R[14],E,E,25,[[],[R[12]]]],[11,R[18],E,E,25,[[["self"]],[R[40]]]],[11,R[99],E,E,25,[[],["f"]]],[11,"clone",R[4519],E,0,[[["self"]],[R[4509]]]],[11,"from",E,E,0,[[["stdopenoptions"]],[R[4509]]]],[11,"drop",R[4510],E,1,[[["self"]]]],[11,"fmt",R[4519],E,3,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,4,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[4510],E,20,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,21,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,22,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,23,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[4519],E,0,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[4510],E,24,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,1,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[4519],E,5,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,6,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[4518],E,25,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[4519],E,7,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,9,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,8,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,2,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,10,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,11,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,12,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,13,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,14,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,15,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,16,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,17,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,18,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,19,[[[R[29]],["self"]],[R[12]]]],[11,"ino",E,E,2,[[["self"]],["u64"]]],[11,"read",R[4510],E,1,[[["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,"read",R[4519],E,16,[[["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,"write",R[4510],E,1,[[["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,"flush",E,E,1,[[["self"]],[R[12]]]],[11,"write",R[4519],E,15,[[["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,"flush",E,E,15,[[["self"]],[R[12]]]],[11,"write",E,E,17,[[["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,"flush",E,E,17,[[["self"]],[R[12]]]],[11,"poll",E,E,3,[[["self"]],["poll"]]],[11,"poll",E,E,4,[[["self"]],["poll"]]],[11,"poll",R[4510],E,20,[[["self"]],["poll"]]],[11,"poll",E,E,21,[[["self"]],["poll"]]],[11,"poll",E,E,22,[[["self"]],["poll"]]],[11,"poll",E,E,23,[[["self"]],["poll"]]],[11,"poll",E,E,24,[[["self"]],["poll"]]],[11,"poll",R[4519],E,5,[[["self"]],["poll"]]],[11,"poll",E,E,6,[[["self"]],["poll"]]],[11,"poll",R[4518],E,25,[[["self"]],["poll"]]],[11,"poll",R[4519],E,7,[[["self"]],["poll"]]],[11,"poll",E,E,9,[[["self"]],[["error"],["poll",["error"]]]]],[11,"poll",E,E,10,[[["self"]],["poll"]]],[11,"poll",E,E,11,[[["self"]],["poll"]]],[11,"poll",E,E,12,[[["self"]],["poll"]]],[11,"poll",E,E,13,[[["self"]],["poll"]]],[11,"poll",E,E,14,[[["self"]],["poll"]]],[11,"poll",E,E,18,[[["self"]],["poll"]]],[11,"poll",E,E,19,[[["self"]],["poll"]]],[11,"poll",E,E,8,[[["self"]],[[R[52]],["poll",[R[52]]]]]],[11,R[2344],R[4510],E,1,[[["self"]],[["poll",["error"]],["error"]]]],[11,R[2344],R[4519],E,15,[[["self"]],[["poll",["error"]],["error"]]]],[11,R[2344],E,E,17,[[["self"]],[["poll",["error"]],["error"]]]],[11,R[3560],R[4510],E,1,[[["self"]],["bool"]]],[11,R[3560],R[4519],E,16,[[["self"]],["bool"]]]],"p":[[3,R[4507]],[3,"File"],[3,"DirEntry"],[3,R[4520]],[3,R[4521]],[3,R[4522]],[3,R[4506]],[3,"ReadFile"],[3,"ReadDir"],[3,R[4523]],[3,R[4524]],[3,R[4525]],[3,R[4526]],[3,R[4527]],[3,R[4528]],[3,"Stderr"],[3,"Stdin"],[3,"Stdout"],[3,R[4529]],[3,R[5329]],[3,R[4530]],[3,R[4531]],[3,R[4506]],[3,R[5296]],[3,R[5298]],[3,R[4532]]]};
searchIndex[R[4533]]={"doc":E,"i":[[24,"Fail",R[4533],E,N,N]],"p":[]};
searchIndex[R[4534]]={"doc":R[5330],"i":[[3,R[5331],R[4534],R[5332],N,N],[3,R[4358],E,"Future that resolves when the reactor thread has shutdown.",N,N],[3,R[4539],E,R[5333],N,N],[3,R[2739],E,R[5334],N,N],[3,"Reactor",E,R[5335],N,N],[3,"Handle",E,R[5336],N,N],[3,"Turn",E,R[5337],N,N],[3,R[4540],E,"Error returned from `Handle::set_fallback`.",N,N],[5,R[1287],E,"Set the default reactor for the duration of the closure",N,[[["enter"],["f"],["handle"]],["r"]]],[11,"handle",E,R[5338],0,[[["self"]],["handle"]]],[11,R[4541],E,R[5339],0,[[],[R[2344]]]],[11,R[4542],E,R[5340],0,[[],[R[2344]]]],[11,"forget",E,R[5341],0,[[]]],[11,"new",E,R[5342],1,[[["e"]],[R[4848]]]],[11,R[5343],E,R[5344],1,[[["e"],["handle"]],[R[12]]]],[11,R[110],E,R[5345],1,[[["self"]],["e"]]],[11,R[111],E,R[5346],1,[[["self"]],["e"]]],[11,R[46],E,R[5347],1,[[],[R[12]]]],[11,R[4535],E,R[5348],1,[[["ready"],["self"]],[["poll",["ready","error"]],["error"],["ready"]]]],[11,R[5349],E,R[5350],1,[[["ready"],["self"]],[R[12]]]],[11,R[4536],E,R[5351],1,[[["self"]],[["poll",["ready","error"]],["error"],["ready"]]]],[11,R[5352],E,R[5353],1,[[["self"]],[R[12]]]],[11,"new",E,R[5354],2,[[],[R[5355]]]],[11,R[540],E,R[5356],2,[[[T],["self"]],[["bool"],[R[12],["bool"]]]]],[11,R[2734],E,R[5357],2,[[["self"],[T]],[R[12]]]],[11,R[5358],E,R[5359],2,[[[T],["self"],["handle"]],[["bool"],[R[12],["bool"]]]]],[11,R[4535],E,R[5360],2,[[["self"]],[["poll",["ready","error"]],["error"],["ready"]]]],[11,R[5361],E,R[5362],2,[[["self"]],[[R[52],["ready"]],[R[12],[R[52]]]]]],[11,R[4536],E,R[5363],2,[[["self"]],[["poll",["ready","error"]],["error"],["ready"]]]],[11,R[5364],E,R[5365],2,[[["self"]],[[R[52],["ready"]],[R[12],[R[52]]]]]],[11,"new",E,R[5366],3,[[],[[R[12],["reactor"]],["reactor"]]]],[11,"handle",E,R[5367],3,[[["self"]],["handle"]]],[11,R[5368],E,R[5369],3,[[["self"]],[[R[4537]],[R[12],[R[4537]]]]]],[11,"turn",E,R[5370],3,[[[R[1358]],["self"],[R[52],[R[1358]]]],[["turn"],[R[12],["turn"]]]]],[11,"is_idle",E,R[5371],3,[[["self"]],["bool"]]],[11,R[4538],E,R[5372],3,[[],[[R[4538]],[R[12],[R[4538]]]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,R[99],E,E,4,[[],["f"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[16],E,E,5,[[["self"]],[T]]],[11,R[17],E,E,5,[[[T],["self"]]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,R[18],E,E,5,[[["self"]],[R[40]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[11],E,E,6,[[[U]],[R[12]]]],[11,R[39],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[],[R[12]]]],[11,R[18],E,E,6,[[["self"]],[R[40]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[16],E,E,7,[[["self"]],[T]]],[11,R[17],E,E,7,[[[T],["self"]]]],[11,R[170],E,E,7,[[["self"]],["string"]]],[11,R[11],E,E,7,[[[U]],[R[12]]]],[11,R[39],E,E,7,[[["self"]],[T]]],[11,R[13],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[],[R[12]]]],[11,R[18],E,E,7,[[["self"]],[R[40]]]],[11,"clone",E,E,5,[[["self"]],["handle"]]],[11,"clone",E,E,7,[[["self"]],[R[4537]]]],[11,"drop",E,E,0,[[["self"]]]],[11,"drop",E,E,1,[[["self"]]]],[11,R[79],E,R[5373],5,[[],["handle"]]],[11,"fmt",E,E,0,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,4,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,1,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,2,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,6,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,7,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,3,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,5,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,7,[[["self"],[R[29]]],[R[12]]]],[11,R[30],E,E,7,[[["self"]],["str"]]],[11,R[2452],E,E,3,[[["self"]],["rawfd"]]],[11,"read",E,E,1,[[["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,"write",E,E,1,[[["self"]],[[R[12],[R[9]]],[R[9]]]]],[11,"flush",E,E,1,[[["self"]],[R[12]]]],[11,"poll",E,E,4,[[["self"]],["poll"]]],[11,"unpark",E,E,3,[[["self"]]]],[11,"park",E,E,3,[[["self"]],[R[12]]]],[11,R[1282],E,E,3,[[[R[1358]],["self"]],[R[12]]]],[11,"unpark",E,E,5,[[["self"]]]],[11,R[2344],E,E,1,[[["self"]],[["error"],["poll",["error"]]]]]],"p":[[3,R[5331]],[3,R[4539]],[3,R[2739]],[3,"Reactor"],[3,R[4358]],[3,"Handle"],[3,"Turn"],[3,R[4540]]]};
searchIndex[R[461]]={"doc":"Core primitives for `tokio-trace`.","i":[[0,R[462],R[461],"Callsites represent the source locations from which spans…",N,N],[3,R[500],R[488],"Uniquely identifies a [`Callsite`]",N,N],[5,R[540],E,"Register a new `Callsite` with the global registry.",N,[[[R[462]]]]],[8,"Callsite",E,"Trait implemented by callsites.",N,N],[10,"add_interest",E,"Adds the [`Interest`] returned by [registering] the…",0,[[["self"],[R[476]]]]],[10,"clear_interest",E,"Remove all [`Interest`] from the callsite, disabling it.",0,[[["self"]]]],[10,R[398],E,"Returns the [metadata] associated with the callsite.",0,[[["self"]],[R[398]]]],[0,"dispatcher",R[461],"Dispatches trace events to `Subscriber`s.",N,N],[3,"Dispatch",R[489],"`Dispatch` trace data to a [`Subscriber`].",N,N],[5,R[1287],E,"Sets this dispatch as the default for the duration of a…",N,[[[R[495]]],[T]]],[5,R[419],E,"Executes a closure with a reference to this thread's…",N,[[["f"]],[T]]],[11,"none",E,"Returns a new `Dispatch` that discards events and spans.",1,[[],["self"]]],[11,"new",E,"Returns a `Dispatch` that forwards to the given…",1,[[["s"]],["self"]]],[11,R[474],E,R[475],1,[[[R[398]],["self"]],[R[476]]]],[11,"new_span",E,"Record the construction of a new span, returning a new…",1,[[[R[477]],["self"]],["id"]]],[11,"record",E,R[478],1,[[["id"],["self"],["record"]]]],[11,R[479],E,R[480],1,[[["id"],["self"]]]],[11,"enabled",E,"Returns true if a span with the specified [metadata] would…",1,[[[R[398]],["self"]],["bool"]]],[11,"event",E,R[481],1,[[["event"],["self"]]]],[11,"enter",E,R[482],1,[[["id"],["self"]]]],[11,"exit",E,R[483],1,[[["id"],["self"]]]],[11,R[484],E,R[485],1,[[["id"],["self"]],["id"]]],[11,R[486],E,R[487],1,[[["id"],["self"]]]],[0,"event",R[461],"Events represent single points in time during the…",N,N],[3,"Event",R[490],"`Event`s represent single points in time where something…",N,N],[11,R[495],E,"Constructs a new `Event` with the specified metadata and…",2,[[[R[398]],[R[471]]]]],[11,"record",E,"Visits all the fields on this `Event` with the specified…",2,[[["self"],["visit"]]]],[11,"fields",E,"Returns an iterator over the set of values on this `Event`.",2,[[["self"]],["iter"]]],[11,R[398],E,"Returns [metadata] describing this `Event`.",2,[[["self"]],[R[398]]]],[0,"field",R[461],"Span and `Event` key-value data.",N,N],[3,"Field",R[491],"An opaque key allowing O(1) access to a field in a…",N,N],[3,"FieldSet",E,"Describes the fields present on a span.",N,N],[3,"ValueSet",E,"A set of fields and values for a span.",N,N],[3,"Iter",E,"An iterator over a set of fields.",N,N],[3,R[501],E,"A `Value` which serializes as a string using `fmt::Display`.",N,N],[3,R[502],E,"A `Value` which serializes as a string using `fmt::Debug`.",N,N],[5,"display",E,"Wraps a type implementing `fmt::Display` as a `Value` that…",N,[[[T]],[R[496]]]],[5,"debug",E,"Wraps a type implementing `fmt::Debug` as a `Value` that…",N,[[[T]],[R[497]]]],[8,"Visit",E,"Visits typed values.",N,N],[11,"record_i64",E,"Visit a signed 64-bit integer value.",3,[[["self"],["i64"],["field"]]]],[11,"record_u64",E,"Visit an umsigned 64-bit integer value.",3,[[["self"],["field"],["u64"]]]],[11,"record_bool",E,"Visit a boolean value.",3,[[["self"],["field"],["bool"]]]],[11,"record_str",E,"Visit a string value.",3,[[["str"],["self"],["field"]]]],[10,"record_debug",E,"Visit a value implementing `fmt::Debug`.",3,[[["self"],["field"],["debug"]]]],[8,"Value",E,"A field value of an erased type.",N,N],[10,"record",E,"Visits this value with the given `Visitor`.",4,[[["visit"],["self"],["field"]]]],[11,R[462],E,R[463],5,[[["self"]],[R[464]]]],[11,"name",E,"Returns a string representing the name of the field.",5,[[["self"]],["str"]]],[11,"field",E,"Returns the [`Field`] named `name`, or `None` if no such…",6,[[["q"],["self"]],[[R[52],["field"]],["field"]]]],[11,R[473],E,"Returns `true` if `self` contains the given `field`.",6,[[["self"],["field"]],["bool"]]],[11,"iter",E,"Returns an iterator over the `Field`s in this `FieldSet`.",6,[[["self"]],["iter"]]],[11,"len",E,"Returns the number of fields in this `FieldSet`.",6,[[["self"]],[R[9]]]],[11,R[462],E,R[463],7,[[["self"]],[R[464]]]],[0,R[398],R[461],"Metadata describing trace data.",N,N],[3,R[465],R[492],"Metadata describing a [span] or [event].",N,N],[3,"Level",E,"Describes the level of verbosity of a span or event.",N,N],[11,"new",E,"Construct new metadata for a span, with a name, target,…",8,[[["str"],["u32"],[R[462]],[R[52],["u32"]],["level"],[R[52],["str"]],["str"]],["self"]]],[11,"fields",E,"Returns the set of fields on the described span.",8,[[["self"]],["fieldset"]]],[11,"level",E,"Returns the level of verbosity of the described span.",8,[[["self"]],["level"]]],[11,"name",E,"Returns the name of the span.",8,[[["self"]],["str"]]],[11,"target",E,"Returns a string describing the part of the system where…",8,[[["self"]],["str"]]],[11,R[401],E,"Returns the path to the Rust module where the span…",8,[[["self"]],[["str"],[R[52],["str"]]]]],[11,"file",E,"Returns the name of the source code file where the span…",8,[[["self"]],[["str"],[R[52],["str"]]]]],[11,"line",E,"Returns the line number in the source code file where the…",8,[[["self"]],[["u32"],[R[52],["u32"]]]]],[11,R[462],E,"Returns an opaque `Identifier` that uniquely identifies…",8,[[["self"]],[R[464]]]],[18,"ERROR",E,R[466],9,N],[18,"WARN",E,R[467],9,N],[18,"INFO",E,R[468],9,N],[18,"DEBUG",E,R[469],9,N],[18,"TRACE",E,R[470],9,N],[0,"span",R[461],"Spans represent periods of time in the execution of a…",N,N],[3,"Id",R[493],"Identifies a span within the context of a subscriber.",N,N],[3,R[498],E,"Attributes provided to a `Subscriber` describing a new…",N,N],[3,"Record",E,"A set of fields recorded by a span.",N,N],[11,"from_u64",E,"Constructs a new span ID from the given `u64`.",10,[[["u64"]],["self"]]],[11,"into_u64",E,"Returns the span's ID as a  `u64`.",10,[[["self"]],["u64"]]],[11,"new",E,R[472],11,[[[R[398]],[R[471]]],["self"]]],[11,"new_root",E,"Returns `Attributes` describing a new span at the root of…",11,[[[R[398]],[R[471]]],["self"]]],[11,"child_of",E,R[472],11,[[["id"],[R[398]],[R[471]]],["self"]]],[11,R[398],E,"Returns a reference to the new span's metadata.",11,[[["self"]],[R[398]]]],[11,"values",E,"Returns a reference to a `ValueSet` containing any values…",11,[[["self"]],[R[471]]]],[11,"is_root",E,"Returns true if the new span shoold be a root.",11,[[["self"]],["bool"]]],[11,"is_contextual",E,"Returns true if the new span's parent should be determined…",11,[[["self"]],["bool"]]],[11,"parent",E,"Returns the new span's explicitly-specified parent, if…",11,[[["self"]],[[R[52],["id"]],["id"]]]],[11,"record",E,"Records all the fields in this set of `Attributes` with…",11,[[["self"],["visit"]]]],[11,R[473],E,"Returns `true` if this set of `Attributes` contains a…",11,[[["self"],["field"]],["bool"]]],[11,R[69],E,"Returns true if this set of `Attributes` contains no values.",11,[[["self"]],["bool"]]],[11,"new",E,"Constructs a new `Record` from a `ValueSet`.",12,[[[R[471]]],["self"]]],[11,"record",E,"Records all the fields in this `Record` with the provided…",12,[[["self"],["visit"]]]],[11,R[473],E,"Returns `true` if this `Record` contains a value for the…",12,[[["self"],["field"]],["bool"]]],[11,R[69],E,"Returns true if this `Record` contains no values.",12,[[["self"]],["bool"]]],[0,"subscriber",R[461],"Subscribers collect and record trace data.",N,N],[3,"Interest",R[494],"Indicates a [`Subscriber`]'s interest in a particular…",N,N],[8,R[499],E,"Trait representing the functions required to collect trace…",N,N],[11,R[474],E,R[475],13,[[[R[398]],["self"]],[R[476]]]],[10,"enabled",E,"Returns true if a span or event with the specified…",13,[[[R[398]],["self"]],["bool"]]],[10,"new_span",E,"Visit the construction of a new span, returning a new…",13,[[[R[477]],["self"]],["id"]]],[10,"record",E,R[478],13,[[["id"],["self"],["record"]]]],[10,R[479],E,R[480],13,[[["id"],["self"]]]],[10,"event",E,R[481],13,[[["event"],["self"]]]],[10,"enter",E,R[482],13,[[["id"],["self"]]]],[10,"exit",E,R[483],13,[[["id"],["self"]]]],[11,R[484],E,R[485],13,[[["id"],["self"]],["id"]]],[11,R[486],E,R[487],13,[[["id"],["self"]]]],[11,"never",E,"Returns an `Interest` indicating that the subscriber is…",14,[[],["self"]]],[11,"sometimes",E,"Returns an `Interest` indicating the subscriber is…",14,[[],["self"]]],[11,"always",E,"Returns an `Interest` indicating the subscriber is always…",14,[[],["self"]]],[11,"is_never",E,"Returns `true` if the subscriber is never interested in…",14,[[["self"]],["bool"]]],[11,"is_sometimes",E,"Returns `true` if the subscriber is sometimes interested…",14,[[["self"]],["bool"]]],[11,"is_always",E,"Returns `true` if the subscriber is always interested in…",14,[[["self"]],["bool"]]],[14,"identify_callsite",R[461],"Statically constructs an [`Identifier`] for the provided…",N,N],[14,R[398],E,"Statically constructs new span [metadata].",N,N],[11,"from",R[488],E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[16],E,E,15,[[["self"]],[T]]],[11,R[17],E,E,15,[[[T],["self"]]]],[11,R[11],E,E,15,[[[U]],[R[12]]]],[11,R[39],E,E,15,[[["self"]],[T]]],[11,R[13],E,E,15,[[["self"]],[T]]],[11,R[14],E,E,15,[[],[R[12]]]],[11,R[18],E,E,15,[[["self"]],[R[40]]]],[11,"from",R[489],E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,[[[T],["self"]]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",R[490],E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",R[491],E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[16],E,E,5,[[["self"]],[T]]],[11,R[17],E,E,5,[[[T],["self"]]]],[11,R[170],E,E,5,[[["self"]],["string"]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,R[18],E,E,5,[[["self"]],[R[40]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[11],E,E,6,[[[U]],[R[12]]]],[11,R[39],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[],[R[12]]]],[11,R[18],E,E,6,[[["self"]],[R[40]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[11],E,E,7,[[[U]],[R[12]]]],[11,R[39],E,E,7,[[["self"]],[T]]],[11,R[13],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[],[R[12]]]],[11,R[18],E,E,7,[[["self"]],[R[40]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[48],E,E,16,[[],["i"]]],[11,"into",E,E,16,[[],[U]]],[11,R[11],E,E,16,[[[U]],[R[12]]]],[11,R[39],E,E,16,[[["self"]],[T]]],[11,R[13],E,E,16,[[["self"]],[T]]],[11,R[14],E,E,16,[[],[R[12]]]],[11,R[18],E,E,16,[[["self"]],[R[40]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[16],E,E,17,[[["self"]],[T]]],[11,R[17],E,E,17,[[[T],["self"]]]],[11,R[11],E,E,17,[[[U]],[R[12]]]],[11,R[39],E,E,17,[[["self"]],[T]]],[11,R[13],E,E,17,[[["self"]],[T]]],[11,R[14],E,E,17,[[],[R[12]]]],[11,R[18],E,E,17,[[["self"]],[R[40]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[16],E,E,18,[[["self"]],[T]]],[11,R[17],E,E,18,[[[T],["self"]]]],[11,R[11],E,E,18,[[[U]],[R[12]]]],[11,R[39],E,E,18,[[["self"]],[T]]],[11,R[13],E,E,18,[[["self"]],[T]]],[11,R[14],E,E,18,[[],[R[12]]]],[11,R[18],E,E,18,[[["self"]],[R[40]]]],[11,"from",R[492],E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[11],E,E,8,[[[U]],[R[12]]]],[11,R[39],E,E,8,[[["self"]],[T]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[],[R[12]]]],[11,R[18],E,E,8,[[["self"]],[R[40]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[16],E,E,9,[[["self"]],[T]]],[11,R[17],E,E,9,[[[T],["self"]]]],[11,R[11],E,E,9,[[[U]],[R[12]]]],[11,R[39],E,E,9,[[["self"]],[T]]],[11,R[13],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[],[R[12]]]],[11,R[18],E,E,9,[[["self"]],[R[40]]]],[11,"from",R[493],E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[16],E,E,10,[[["self"]],[T]]],[11,R[17],E,E,10,[[[T],["self"]]]],[11,R[11],E,E,10,[[[U]],[R[12]]]],[11,R[39],E,E,10,[[["self"]],[T]]],[11,R[13],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[],[R[12]]]],[11,R[18],E,E,10,[[["self"]],[R[40]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[11],E,E,11,[[[U]],[R[12]]]],[11,R[39],E,E,11,[[["self"]],[T]]],[11,R[13],E,E,11,[[["self"]],[T]]],[11,R[14],E,E,11,[[],[R[12]]]],[11,R[18],E,E,11,[[["self"]],[R[40]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[11],E,E,12,[[[U]],[R[12]]]],[11,R[39],E,E,12,[[["self"]],[T]]],[11,R[13],E,E,12,[[["self"]],[T]]],[11,R[14],E,E,12,[[],[R[12]]]],[11,R[18],E,E,12,[[["self"]],[R[40]]]],[11,"from",R[494],E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[16],E,E,14,[[["self"]],[T]]],[11,R[17],E,E,14,[[[T],["self"]]]],[11,R[11],E,E,14,[[[U]],[R[12]]]],[11,R[39],E,E,14,[[["self"]],[T]]],[11,R[13],E,E,14,[[["self"]],[T]]],[11,R[14],E,E,14,[[],[R[12]]]],[11,R[18],E,E,14,[[["self"]],[R[40]]]],[11,"record",R[491],E,17,[[["visit"],["self"],["field"]]]],[11,"record",E,E,18,[[["visit"],["self"],["field"]]]],[11,"eq",R[488],E,15,[[[R[464]],["self"]],["bool"]]],[11,"eq",R[491],E,5,[[["self"]],["bool"]]],[11,"eq",R[492],E,9,[[["level"],["self"]],["bool"]]],[11,"ne",E,E,9,[[["level"],["self"]],["bool"]]],[11,"eq",R[493],E,10,[[["self"],["id"]],["bool"]]],[11,"ne",E,E,10,[[["self"],["id"]],["bool"]]],[11,"clone",R[488],E,15,[[["self"]],[R[464]]]],[11,"clone",R[489],E,1,[[["self"]],[R[495]]]],[11,"clone",R[491],E,17,[[["self"]],[R[496]]]],[11,"clone",E,E,18,[[["self"]],[R[497]]]],[11,"clone",E,E,5,[[["self"]],["self"]]],[11,"clone",R[492],E,9,[[["self"]],["level"]]],[11,"clone",R[493],E,10,[[["self"]],["id"]]],[11,"clone",R[494],E,14,[[["self"]],[R[476]]]],[11,"cmp",R[492],E,9,[[["level"],["self"]],[R[51]]]],[11,"from",R[489],E,1,[[["s"]],["self"]]],[11,R[264],R[492],E,9,[[["level"],["self"]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,9,[[["level"],["self"]],["bool"]]],[11,"le",E,E,9,[[["level"],["self"]],["bool"]]],[11,"gt",E,E,9,[[["level"],["self"]],["bool"]]],[11,"ge",E,E,9,[[["level"],["self"]],["bool"]]],[11,"next",R[491],E,16,[[["self"]],[[R[52],["field"]],["field"]]]],[11,"as_ref",E,E,5,[[["self"]],["str"]]],[11,"fmt",R[488],E,15,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[489],E,1,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[490],E,2,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[491],E,5,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,16,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,17,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,18,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,6,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,7,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[492],E,9,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,8,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[493],E,10,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,11,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,12,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[494],E,14,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[491],E,5,[[["self"],[R[29]]],[R[12]]]],[11,"hash",R[488],E,15,[[["h"],["self"]]]],[11,"hash",R[491],E,5,[[["h"],["self"]]]],[11,"hash",R[493],E,10,[[["self"],["__h"]]]]],"p":[[8,"Callsite"],[3,"Dispatch"],[3,"Event"],[8,"Visit"],[8,"Value"],[3,"Field"],[3,"FieldSet"],[3,"ValueSet"],[3,R[465]],[3,"Level"],[3,"Id"],[3,R[498]],[3,"Record"],[8,R[499]],[3,"Interest"],[3,R[500]],[3,"Iter"],[3,R[501]],[3,R[502]]]};
searchIndex[R[4627]]={"doc":"An implementation of the Cap'n Proto remote procedure call…","i":[[3,"RpcSystem",R[4627],"A portal to objects available on the network.",N,N],[3,"Server",E,"Hook that allows local implementations of interfaces to be…",N,N],[3,R[4663],E,E,N,N],[5,"new_promise_client",E,"Converts a promise for a client into a client that queues…",N,[[["f"]],[T]]],[0,"rpc_capnp",E,"Code generated from [rpc.capnp]…",N,N],[0,"message",R[4566],E,N,N],[3,"Owned",R[4630],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[4,"Which",E,E,N,N],[13,R[4554],E,E,0,N],[13,"Abort",E,E,0,N],[13,"Call",E,E,0,N],[13,"Return",E,E,0,N],[13,"Finish",E,E,0,N],[13,"Resolve",E,E,0,N],[13,"Release",E,E,0,N],[13,"ObsoleteSave",E,E,0,N],[13,"Bootstrap",E,E,0,N],[13,"ObsoleteDelete",E,E,0,N],[13,"Provide",E,E,0,N],[13,"Accept",E,E,0,N],[13,"Join",E,E,0,N],[13,"Disembargo",E,E,0,N],[6,R[4572],E,E,N,N],[6,R[4573],E,E,N,N],[11,R[2122],E,E,1,[[["self"]],["reader"]]],[11,R[4555],E,E,1,[[["self"]],[[R[12],[R[2098]]],[R[2098]]]]],[11,R[4557],E,E,1,[[["self"]],["bool"]]],[11,"has_abort",E,E,1,[[["self"]],["bool"]]],[11,"has_call",E,E,1,[[["self"]],["bool"]]],[11,"has_return",E,E,1,[[["self"]],["bool"]]],[11,"has_finish",E,E,1,[[["self"]],["bool"]]],[11,R[4558],E,E,1,[[["self"]],["bool"]]],[11,R[4559],E,E,1,[[["self"]],["bool"]]],[11,R[4560],E,E,1,[[["self"]],["bool"]]],[11,R[4561],E,E,1,[[["self"]],["bool"]]],[11,R[4562],E,E,1,[[["self"]],["bool"]]],[11,R[4563],E,E,1,[[["self"]],["bool"]]],[11,"has_accept",E,E,1,[[["self"]],["bool"]]],[11,"has_join",E,E,1,[[["self"]],["bool"]]],[11,R[4564],E,E,1,[[["self"]],["bool"]]],[11,"which",E,E,1,[[],[[R[4556]],[R[12],[R[4556],R[2110]]],[R[2110]]]]],[11,R[2111],E,E,2,[[],["reader"]]],[11,R[2107],E,E,2,[[],["reader"]]],[11,R[2122],E,E,2,[[["self"]],["builder"]]],[11,R[4567],E,E,2,[[["self"]],["reader"]]],[11,R[4555],E,E,2,[[["self"]],[[R[12],[R[2098]]],[R[2098]]]]],[11,"set_unimplemented",E,E,2,[[["self"],["reader"]],[R[12]]]],[11,"init_unimplemented",E,E,2,[[],["builder"]]],[11,R[4557],E,E,2,[[["self"]],["bool"]]],[11,"set_abort",E,E,2,[[["self"],["reader"]],[R[12]]]],[11,"init_abort",E,E,2,[[],["builder"]]],[11,"has_abort",E,E,2,[[["self"]],["bool"]]],[11,"set_call",E,E,2,[[["reader"],["self"]],[R[12]]]],[11,"init_call",E,E,2,[[],["builder"]]],[11,"has_call",E,E,2,[[["self"]],["bool"]]],[11,"set_return",E,E,2,[[["self"],["reader"]],[R[12]]]],[11,"init_return",E,E,2,[[],["builder"]]],[11,"has_return",E,E,2,[[["self"]],["bool"]]],[11,"set_finish",E,E,2,[[["self"],["reader"]],[R[12]]]],[11,"init_finish",E,E,2,[[],["builder"]]],[11,"has_finish",E,E,2,[[["self"]],["bool"]]],[11,"set_resolve",E,E,2,[[["self"],["reader"]],[R[12]]]],[11,"init_resolve",E,E,2,[[],["builder"]]],[11,R[4558],E,E,2,[[["self"]],["bool"]]],[11,"set_release",E,E,2,[[["self"],["reader"]],[R[12]]]],[11,"init_release",E,E,2,[[],["builder"]]],[11,R[4559],E,E,2,[[["self"]],["bool"]]],[11,"init_obsolete_save",E,E,2,[[],["builder"]]],[11,R[4560],E,E,2,[[["self"]],["bool"]]],[11,"set_bootstrap",E,E,2,[[["reader"],["self"]],[R[12]]]],[11,"init_bootstrap",E,E,2,[[],["builder"]]],[11,R[4561],E,E,2,[[["self"]],["bool"]]],[11,"init_obsolete_delete",E,E,2,[[],["builder"]]],[11,R[4562],E,E,2,[[["self"]],["bool"]]],[11,R[4593],E,E,2,[[["reader"],["self"]],[R[12]]]],[11,"init_provide",E,E,2,[[],["builder"]]],[11,R[4563],E,E,2,[[["self"]],["bool"]]],[11,"set_accept",E,E,2,[[["self"],["reader"]],[R[12]]]],[11,"init_accept",E,E,2,[[],["builder"]]],[11,"has_accept",E,E,2,[[["self"]],["bool"]]],[11,"set_join",E,E,2,[[["self"],["reader"]],[R[12]]]],[11,"init_join",E,E,2,[[],["builder"]]],[11,"has_join",E,E,2,[[["self"]],["bool"]]],[11,"set_disembargo",E,E,2,[[["self"],["reader"]],[R[12]]]],[11,"init_disembargo",E,E,2,[[],["builder"]]],[11,R[4564],E,E,2,[[["self"]],["bool"]]],[11,"which",E,E,2,[[],[[R[12],[R[4565],R[2110]]],[R[4565]],[R[2110]]]]],[0,"bootstrap",R[4566],E,N,N],[3,"Owned",R[4631],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[11,R[2122],E,E,3,[[["self"]],["reader"]]],[11,R[4555],E,E,3,[[["self"]],[[R[12],[R[2098]]],[R[2098]]]]],[11,R[4568],E,E,3,[[],["u32"]]],[11,R[4569],E,E,3,[[],["reader"]]],[11,R[4570],E,E,3,[[["self"]],["bool"]]],[11,R[2111],E,E,4,[[],["reader"]]],[11,R[2107],E,E,4,[[],["reader"]]],[11,R[2122],E,E,4,[[["self"]],["builder"]]],[11,R[4567],E,E,4,[[["self"]],["reader"]]],[11,R[4555],E,E,4,[[["self"]],[[R[12],[R[2098]]],[R[2098]]]]],[11,R[4568],E,E,4,[[],["u32"]]],[11,R[4576],E,E,4,[[["u32"],["self"]]]],[11,R[4569],E,E,4,[[],["builder"]]],[11,"init_deprecated_object_id",E,E,4,[[],["builder"]]],[11,R[4570],E,E,4,[[["self"]],["bool"]]],[11,R[4569],E,E,5,[[["self"]],[R[2188]]]],[0,"call",R[4566],E,N,N],[3,"Owned",R[4575],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[0,"send_results_to",E,E,N,N],[3,"Owned",R[4632],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[4,"Which",E,E,N,N],[13,"Caller",E,E,6,N],[13,"Yourself",E,E,6,N],[13,"ThirdParty",E,E,6,N],[6,R[4572],E,E,N,N],[6,R[4573],E,E,N,N],[11,R[2122],E,E,7,[[["self"]],["reader"]]],[11,R[4555],E,E,7,[[["self"]],[[R[12],[R[2098]]],[R[2098]]]]],[11,R[4574],E,E,7,[[["self"]],["bool"]]],[11,"which",E,E,7,[[],[[R[4556]],[R[12],[R[4556],R[2110]]],[R[2110]]]]],[11,R[2111],E,E,8,[[],["reader"]]],[11,R[2107],E,E,8,[[],["reader"]]],[11,R[2122],E,E,8,[[["self"]],["builder"]]],[11,R[4567],E,E,8,[[["self"]],["reader"]]],[11,R[4555],E,E,8,[[["self"]],[[R[12],[R[2098]]],[R[2098]]]]],[11,"set_caller",E,E,8,[[["self"]]]],[11,"set_yourself",E,E,8,[[["self"]]]],[11,"init_third_party",E,E,8,[[],["builder"]]],[11,R[4574],E,E,8,[[["self"]],["bool"]]],[11,"which",E,E,8,[[],[[R[2110]],[R[4565]],[R[12],[R[4565],R[2110]]]]]],[11,R[2122],R[4575],E,9,[[["self"]],["reader"]]],[11,R[4555],E,E,9,[[["self"]],[[R[12],[R[2098]]],[R[2098]]]]],[11,R[4568],E,E,9,[[],["u32"]]],[11,R[4581],E,E,9,[[],[[R[12],["reader"]],["reader"]]]],[11,R[4595],E,E,9,[[["self"]],["bool"]]],[11,R[4577],E,E,9,[[],["u64"]]],[11,R[4578],E,E,9,[[],["u16"]]],[11,R[4582],E,E,9,[[],[["reader"],[R[12],["reader"]]]]],[11,"has_params",E,E,9,[[["self"]],["bool"]]],[11,R[4579],E,E,9,[[],["reader"]]],[11,R[4580],E,E,9,[[],["bool"]]],[11,R[2111],E,E,10,[[],["reader"]]],[11,R[2107],E,E,10,[[],["reader"]]],[11,R[2122],E,E,10,[[["self"]],["builder"]]],[11,R[4567],E,E,10,[[["self"]],["reader"]]],[11,R[4555],E,E,10,[[["self"]],[[R[12],[R[2098]]],[R[2098]]]]],[11,R[4568],E,E,10,[[],["u32"]]],[11,R[4576],E,E,10,[[["u32"],["self"]]]],[11,R[4581],E,E,10,[[],[["builder"],[R[12],["builder"]]]]],[11,R[4598],E,E,10,[[["self"],["reader"]],[R[12]]]],[11,R[4596],E,E,10,[[],["builder"]]],[11,R[4595],E,E,10,[[["self"]],["bool"]]],[11,R[4577],E,E,10,[[],["u64"]]],[11,"set_interface_id",E,E,10,[[["self"],["u64"]]]],[11,R[4578],E,E,10,[[],["u16"]]],[11,"set_method_id",E,E,10,[[["self"],["u16"]]]],[11,R[4582],E,E,10,[[],[[R[12],["builder"]],["builder"]]]],[11,"set_params",E,E,10,[[["self"],["reader"]],[R[12]]]],[11,"init_params",E,E,10,[[],["builder"]]],[11,"has_params",E,E,10,[[["self"]],["bool"]]],[11,R[4579],E,E,10,[[],["builder"]]],[11,"init_send_results_to",E,E,10,[[],["builder"]]],[11,R[4580],E,E,10,[[],["bool"]]],[11,"set_allow_third_party_tail_call",E,E,10,[[["self"],["bool"]]]],[11,R[4581],E,E,11,[[["self"]],[R[2188]]]],[11,R[4582],E,E,11,[[["self"]],[R[2188]]]],[11,R[4579],E,E,11,[[["self"]],[R[2188]]]],[0,"return_",R[4566],E,N,N],[3,"Owned",R[4633],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[4,"Which",E,E,N,N],[13,"Results",E,E,12,N],[13,"Exception",E,E,12,N],[13,"Canceled",E,E,12,N],[13,"ResultsSentElsewhere",E,E,12,N],[13,"TakeFromOtherQuestion",E,E,12,N],[13,"AcceptFromThirdParty",E,E,12,N],[6,R[4572],E,E,N,N],[6,R[4573],E,E,N,N],[11,R[2122],E,E,13,[[["self"]],["reader"]]],[11,R[4555],E,E,13,[[["self"]],[[R[12],[R[2098]]],[R[2098]]]]],[11,R[4583],E,E,13,[[],["u32"]]],[11,R[4584],E,E,13,[[],["bool"]]],[11,R[4585],E,E,13,[[["self"]],["bool"]]],[11,R[4586],E,E,13,[[["self"]],["bool"]]],[11,R[4587],E,E,13,[[["self"]],["bool"]]],[11,"which",E,E,13,[[],[[R[4556]],[R[12],[R[4556],R[2110]]],[R[2110]]]]],[11,R[2111],E,E,14,[[],["reader"]]],[11,R[2107],E,E,14,[[],["reader"]]],[11,R[2122],E,E,14,[[["self"]],["builder"]]],[11,R[4567],E,E,14,[[["self"]],["reader"]]],[11,R[4555],E,E,14,[[["self"]],[[R[12],[R[2098]]],[R[2098]]]]],[11,R[4583],E,E,14,[[],["u32"]]],[11,"set_answer_id",E,E,14,[[["u32"],["self"]]]],[11,R[4584],E,E,14,[[],["bool"]]],[11,"set_release_param_caps",E,E,14,[[["self"],["bool"]]]],[11,"set_results",E,E,14,[[["self"],["reader"]],[R[12]]]],[11,"init_results",E,E,14,[[],["builder"]]],[11,R[4585],E,E,14,[[["self"]],["bool"]]],[11,R[4590],E,E,14,[[["self"],["reader"]],[R[12]]]],[11,R[4591],E,E,14,[[],["builder"]]],[11,R[4586],E,E,14,[[["self"]],["bool"]]],[11,"set_canceled",E,E,14,[[["self"]]]],[11,"set_results_sent_elsewhere",E,E,14,[[["self"]]]],[11,"set_take_from_other_question",E,E,14,[[["u32"],["self"]]]],[11,"init_accept_from_third_party",E,E,14,[[],["builder"]]],[11,R[4587],E,E,14,[[["self"]],["bool"]]],[11,"which",E,E,14,[[],[[R[2110]],[R[12],[R[4565],R[2110]]],[R[4565]]]]],[0,"finish",R[4566],E,N,N],[3,"Owned",R[4634],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[11,R[2122],E,E,15,[[["self"]],["reader"]]],[11,R[4555],E,E,15,[[["self"]],[[R[12],[R[2098]]],[R[2098]]]]],[11,R[4568],E,E,15,[[],["u32"]]],[11,R[4588],E,E,15,[[],["bool"]]],[11,R[2111],E,E,16,[[],["reader"]]],[11,R[2107],E,E,16,[[],["reader"]]],[11,R[2122],E,E,16,[[["self"]],["builder"]]],[11,R[4567],E,E,16,[[["self"]],["reader"]]],[11,R[4555],E,E,16,[[["self"]],[[R[12],[R[2098]]],[R[2098]]]]],[11,R[4568],E,E,16,[[],["u32"]]],[11,R[4576],E,E,16,[[["u32"],["self"]]]],[11,R[4588],E,E,16,[[],["bool"]]],[11,"set_release_result_caps",E,E,16,[[["self"],["bool"]]]],[0,"resolve",R[4566],E,N,N],[3,"Owned",R[4635],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[4,"Which",E,E,N,N],[13,"Cap",E,E,17,N],[13,"Exception",E,E,17,N],[6,R[4572],E,E,N,N],[6,R[4573],E,E,N,N],[11,R[2122],E,E,18,[[["self"]],["reader"]]],[11,R[4555],E,E,18,[[["self"]],[[R[12],[R[2098]]],[R[2098]]]]],[11,R[4589],E,E,18,[[],["u32"]]],[11,"has_cap",E,E,18,[[["self"]],["bool"]]],[11,R[4586],E,E,18,[[["self"]],["bool"]]],[11,"which",E,E,18,[[],[[R[12],[R[4556],R[2110]]],[R[4556]],[R[2110]]]]],[11,R[2111],E,E,19,[[],["reader"]]],[11,R[2107],E,E,19,[[],["reader"]]],[11,R[2122],E,E,19,[[["self"]],["builder"]]],[11,R[4567],E,E,19,[[["self"]],["reader"]]],[11,R[4555],E,E,19,[[["self"]],[[R[12],[R[2098]]],[R[2098]]]]],[11,R[4589],E,E,19,[[],["u32"]]],[11,"set_promise_id",E,E,19,[[["u32"],["self"]]]],[11,"set_cap",E,E,19,[[["reader"],["self"]],[R[12]]]],[11,"init_cap",E,E,19,[[],["builder"]]],[11,"has_cap",E,E,19,[[["self"]],["bool"]]],[11,R[4590],E,E,19,[[["self"],["reader"]],[R[12]]]],[11,R[4591],E,E,19,[[],["builder"]]],[11,R[4586],E,E,19,[[["self"]],["bool"]]],[11,"which",E,E,19,[[],[[R[4565]],[R[12],[R[4565],R[2110]]],[R[2110]]]]],[0,"release",R[4566],E,N,N],[3,"Owned",R[4636],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[11,R[2122],E,E,20,[[["self"]],["reader"]]],[11,R[4555],E,E,20,[[["self"]],[[R[12],[R[2098]]],[R[2098]]]]],[11,"get_id",E,E,20,[[],["u32"]]],[11,R[4592],E,E,20,[[],["u32"]]],[11,R[2111],E,E,21,[[],["reader"]]],[11,R[2107],E,E,21,[[],["reader"]]],[11,R[2122],E,E,21,[[["self"]],["builder"]]],[11,R[4567],E,E,21,[[["self"]],["reader"]]],[11,R[4555],E,E,21,[[["self"]],[[R[12],[R[2098]]],[R[2098]]]]],[11,"get_id",E,E,21,[[],["u32"]]],[11,"set_id",E,E,21,[[["u32"],["self"]]]],[11,R[4592],E,E,21,[[],["u32"]]],[11,"set_reference_count",E,E,21,[[["u32"],["self"]]]],[0,"disembargo",R[4566],E,N,N],[3,"Owned",R[4594],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[0,"context",E,E,N,N],[3,"Owned",R[4637],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[4,"Which",E,E,N,N],[13,"SenderLoopback",E,E,22,N],[13,"ReceiverLoopback",E,E,22,N],[13,"Accept",E,E,22,N],[13,"Provide",E,E,22,N],[6,R[4572],E,E,N,N],[6,R[4573],E,E,N,N],[11,R[2122],E,E,23,[[["self"]],["reader"]]],[11,R[4555],E,E,23,[[["self"]],[[R[12],[R[2098]]],[R[2098]]]]],[11,"which",E,E,23,[[],[[R[12],[R[4556],R[2110]]],[R[4556]],[R[2110]]]]],[11,R[2111],E,E,24,[[],["reader"]]],[11,R[2107],E,E,24,[[],["reader"]]],[11,R[2122],E,E,24,[[["self"]],["builder"]]],[11,R[4567],E,E,24,[[["self"]],["reader"]]],[11,R[4555],E,E,24,[[["self"]],[[R[12],[R[2098]]],[R[2098]]]]],[11,"set_sender_loopback",E,E,24,[[["u32"],["self"]]]],[11,"set_receiver_loopback",E,E,24,[[["u32"],["self"]]]],[11,"set_accept",E,E,24,[[["self"]]]],[11,R[4593],E,E,24,[[["u32"],["self"]]]],[11,"which",E,E,24,[[],[[R[4565]],[R[12],[R[4565],R[2110]]],[R[2110]]]]],[11,R[2122],R[4594],E,25,[[["self"]],["reader"]]],[11,R[4555],E,E,25,[[["self"]],[[R[12],[R[2098]]],[R[2098]]]]],[11,R[4581],E,E,25,[[],[[R[12],["reader"]],["reader"]]]],[11,R[4595],E,E,25,[[["self"]],["bool"]]],[11,R[4597],E,E,25,[[],["reader"]]],[11,R[2111],E,E,26,[[],["reader"]]],[11,R[2107],E,E,26,[[],["reader"]]],[11,R[2122],E,E,26,[[["self"]],["builder"]]],[11,R[4567],E,E,26,[[["self"]],["reader"]]],[11,R[4555],E,E,26,[[["self"]],[[R[12],[R[2098]]],[R[2098]]]]],[11,R[4581],E,E,26,[[],[["builder"],[R[12],["builder"]]]]],[11,R[4598],E,E,26,[[["self"],["reader"]],[R[12]]]],[11,R[4596],E,E,26,[[],["builder"]]],[11,R[4595],E,E,26,[[["self"]],["bool"]]],[11,R[4597],E,E,26,[[],["builder"]]],[11,"init_context",E,E,26,[[],["builder"]]],[11,R[4581],E,E,27,[[["self"]],[R[2188]]]],[11,R[4597],E,E,27,[[["self"]],[R[2188]]]],[0,"provide",R[4566],E,N,N],[3,"Owned",R[4638],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[11,R[2122],E,E,28,[[["self"]],["reader"]]],[11,R[4555],E,E,28,[[["self"]],[[R[12],[R[2098]]],[R[2098]]]]],[11,R[4568],E,E,28,[[],["u32"]]],[11,R[4581],E,E,28,[[],[[R[12],["reader"]],["reader"]]]],[11,R[4595],E,E,28,[[["self"]],["bool"]]],[11,R[4599],E,E,28,[[],["reader"]]],[11,R[4600],E,E,28,[[["self"]],["bool"]]],[11,R[2111],E,E,29,[[],["reader"]]],[11,R[2107],E,E,29,[[],["reader"]]],[11,R[2122],E,E,29,[[["self"]],["builder"]]],[11,R[4567],E,E,29,[[["self"]],["reader"]]],[11,R[4555],E,E,29,[[["self"]],[[R[12],[R[2098]]],[R[2098]]]]],[11,R[4568],E,E,29,[[],["u32"]]],[11,R[4576],E,E,29,[[["u32"],["self"]]]],[11,R[4581],E,E,29,[[],[["builder"],[R[12],["builder"]]]]],[11,R[4598],E,E,29,[[["self"],["reader"]],[R[12]]]],[11,R[4596],E,E,29,[[],["builder"]]],[11,R[4595],E,E,29,[[["self"]],["bool"]]],[11,R[4599],E,E,29,[[],["builder"]]],[11,"init_recipient",E,E,29,[[],["builder"]]],[11,R[4600],E,E,29,[[["self"]],["bool"]]],[11,R[4581],E,E,30,[[["self"]],[R[2188]]]],[11,R[4599],E,E,30,[[["self"]],[R[2188]]]],[0,"accept",R[4566],E,N,N],[3,"Owned",R[4639],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[11,R[2122],E,E,31,[[["self"]],["reader"]]],[11,R[4555],E,E,31,[[["self"]],[[R[12],[R[2098]]],[R[2098]]]]],[11,R[4568],E,E,31,[[],["u32"]]],[11,R[4601],E,E,31,[[],["reader"]]],[11,R[4602],E,E,31,[[["self"]],["bool"]]],[11,R[4603],E,E,31,[[],["bool"]]],[11,R[2111],E,E,32,[[],["reader"]]],[11,R[2107],E,E,32,[[],["reader"]]],[11,R[2122],E,E,32,[[["self"]],["builder"]]],[11,R[4567],E,E,32,[[["self"]],["reader"]]],[11,R[4555],E,E,32,[[["self"]],[[R[12],[R[2098]]],[R[2098]]]]],[11,R[4568],E,E,32,[[],["u32"]]],[11,R[4576],E,E,32,[[["u32"],["self"]]]],[11,R[4601],E,E,32,[[],["builder"]]],[11,"init_provision",E,E,32,[[],["builder"]]],[11,R[4602],E,E,32,[[["self"]],["bool"]]],[11,R[4603],E,E,32,[[],["bool"]]],[11,"set_embargo",E,E,32,[[["self"],["bool"]]]],[11,R[4601],E,E,33,[[["self"]],[R[2188]]]],[0,"join",R[4566],E,N,N],[3,"Owned",R[4640],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[11,R[2122],E,E,34,[[["self"]],["reader"]]],[11,R[4555],E,E,34,[[["self"]],[[R[12],[R[2098]]],[R[2098]]]]],[11,R[4568],E,E,34,[[],["u32"]]],[11,R[4581],E,E,34,[[],[[R[12],["reader"]],["reader"]]]],[11,R[4595],E,E,34,[[["self"]],["bool"]]],[11,R[4604],E,E,34,[[],["reader"]]],[11,R[4605],E,E,34,[[["self"]],["bool"]]],[11,R[2111],E,E,35,[[],["reader"]]],[11,R[2107],E,E,35,[[],["reader"]]],[11,R[2122],E,E,35,[[["self"]],["builder"]]],[11,R[4567],E,E,35,[[["self"]],["reader"]]],[11,R[4555],E,E,35,[[["self"]],[[R[12],[R[2098]]],[R[2098]]]]],[11,R[4568],E,E,35,[[],["u32"]]],[11,R[4576],E,E,35,[[["u32"],["self"]]]],[11,R[4581],E,E,35,[[],[["builder"],[R[12],["builder"]]]]],[11,R[4598],E,E,35,[[["self"],["reader"]],[R[12]]]],[11,R[4596],E,E,35,[[],["builder"]]],[11,R[4595],E,E,35,[[["self"]],["bool"]]],[11,R[4604],E,E,35,[[],["builder"]]],[11,"init_key_part",E,E,35,[[],["builder"]]],[11,R[4605],E,E,35,[[["self"]],["bool"]]],[11,R[4581],E,E,36,[[["self"]],[R[2188]]]],[11,R[4604],E,E,36,[[["self"]],[R[2188]]]],[0,"message_target",R[4566],E,N,N],[3,"Owned",R[4641],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[4,"Which",E,E,N,N],[13,"ImportedCap",E,E,37,N],[13,"PromisedAnswer",E,E,37,N],[6,R[4572],E,E,N,N],[6,R[4573],E,E,N,N],[11,R[2122],E,E,38,[[["self"]],["reader"]]],[11,R[4555],E,E,38,[[["self"]],[[R[12],[R[2098]]],[R[2098]]]]],[11,R[4606],E,E,38,[[["self"]],["bool"]]],[11,"which",E,E,38,[[],[[R[4556]],[R[12],[R[4556],R[2110]]],[R[2110]]]]],[11,R[2111],E,E,39,[[],["reader"]]],[11,R[2107],E,E,39,[[],["reader"]]],[11,R[2122],E,E,39,[[["self"]],["builder"]]],[11,R[4567],E,E,39,[[["self"]],["reader"]]],[11,R[4555],E,E,39,[[["self"]],[[R[12],[R[2098]]],[R[2098]]]]],[11,"set_imported_cap",E,E,39,[[["u32"],["self"]]]],[11,"set_promised_answer",E,E,39,[[["self"],["reader"]],[R[12]]]],[11,"init_promised_answer",E,E,39,[[],["builder"]]],[11,R[4606],E,E,39,[[["self"]],["bool"]]],[11,"which",E,E,39,[[],[[R[12],[R[4565],R[2110]]],[R[2110]],[R[4565]]]]],[0,"payload",R[4566],E,N,N],[3,"Owned",R[4642],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[11,R[2122],E,E,40,[[["self"]],["reader"]]],[11,R[4555],E,E,40,[[["self"]],[[R[12],[R[2098]]],[R[2098]]]]],[11,R[4607],E,E,40,[[],["reader"]]],[11,R[4608],E,E,40,[[["self"]],["bool"]]],[11,R[4609],E,E,40,[[],[[R[12],["reader"]],["reader",["owned"]]]]],[11,R[4610],E,E,40,[[["self"]],["bool"]]],[11,R[2111],E,E,41,[[],["reader"]]],[11,R[2107],E,E,41,[[],["reader"]]],[11,R[2122],E,E,41,[[["self"]],["builder"]]],[11,R[4567],E,E,41,[[["self"]],["reader"]]],[11,R[4555],E,E,41,[[["self"]],[[R[12],[R[2098]]],[R[2098]]]]],[11,R[4607],E,E,41,[[],["builder"]]],[11,"init_content",E,E,41,[[],["builder"]]],[11,R[4608],E,E,41,[[["self"]],["bool"]]],[11,R[4609],E,E,41,[[],[[R[12],["builder"]],["builder",["owned"]]]]],[11,"set_cap_table",E,E,41,[[["self"],["owned"],["reader",["owned"]]],[R[12]]]],[11,"init_cap_table",E,E,41,[[["u32"]],[["owned"],["builder",["owned"]]]]],[11,R[4610],E,E,41,[[["self"]],["bool"]]],[11,R[4607],E,E,42,[[["self"]],[R[2188]]]],[0,"cap_descriptor",R[4566],E,N,N],[3,"Owned",R[4643],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[4,"Which",E,E,N,N],[13,"None",E,E,43,N],[13,"SenderHosted",E,E,43,N],[13,"SenderPromise",E,E,43,N],[13,"ReceiverHosted",E,E,43,N],[13,"ReceiverAnswer",E,E,43,N],[13,"ThirdPartyHosted",E,E,43,N],[6,R[4572],E,E,N,N],[6,R[4573],E,E,N,N],[11,R[2122],E,E,44,[[["self"]],["reader"]]],[11,R[4555],E,E,44,[[["self"]],[[R[12],[R[2098]]],[R[2098]]]]],[11,R[4611],E,E,44,[[["self"]],["bool"]]],[11,R[4612],E,E,44,[[["self"]],["bool"]]],[11,"which",E,E,44,[[],[[R[12],[R[4556],R[2110]]],[R[2110]],[R[4556]]]]],[11,R[2111],E,E,45,[[],["reader"]]],[11,R[2107],E,E,45,[[],["reader"]]],[11,R[2122],E,E,45,[[["self"]],["builder"]]],[11,R[4567],E,E,45,[[["self"]],["reader"]]],[11,R[4555],E,E,45,[[["self"]],[[R[12],[R[2098]]],[R[2098]]]]],[11,"set_none",E,E,45,[[["self"]]]],[11,"set_sender_hosted",E,E,45,[[["u32"],["self"]]]],[11,"set_sender_promise",E,E,45,[[["u32"],["self"]]]],[11,"set_receiver_hosted",E,E,45,[[["u32"],["self"]]]],[11,"set_receiver_answer",E,E,45,[[["self"],["reader"]],[R[12]]]],[11,"init_receiver_answer",E,E,45,[[],["builder"]]],[11,R[4611],E,E,45,[[["self"]],["bool"]]],[11,"set_third_party_hosted",E,E,45,[[["self"],["reader"]],[R[12]]]],[11,"init_third_party_hosted",E,E,45,[[],["builder"]]],[11,R[4612],E,E,45,[[["self"]],["bool"]]],[11,"which",E,E,45,[[],[[R[12],[R[4565],R[2110]]],[R[4565]],[R[2110]]]]],[0,"promised_answer",R[4566],E,N,N],[3,"Owned",R[4614],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[0,"op",E,E,N,N],[3,"Owned",R[4644],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[4,"Which",E,E,N,N],[13,"Noop",E,E,46,N],[13,R[4613],E,E,46,N],[6,R[4572],E,E,N,N],[6,R[4573],E,E,N,N],[11,R[2122],E,E,47,[[["self"]],["reader"]]],[11,R[4555],E,E,47,[[["self"]],[[R[12],[R[2098]]],[R[2098]]]]],[11,"which",E,E,47,[[],[[R[4556]],[R[12],[R[4556],R[2110]]],[R[2110]]]]],[11,R[2111],E,E,48,[[],["reader"]]],[11,R[2107],E,E,48,[[],["reader"]]],[11,R[2122],E,E,48,[[["self"]],["builder"]]],[11,R[4567],E,E,48,[[["self"]],["reader"]]],[11,R[4555],E,E,48,[[["self"]],[[R[12],[R[2098]]],[R[2098]]]]],[11,"set_noop",E,E,48,[[["self"]]]],[11,"set_get_pointer_field",E,E,48,[[["self"],["u16"]]]],[11,"which",E,E,48,[[],[[R[12],[R[4565],R[2110]]],[R[2110]],[R[4565]]]]],[11,R[2122],R[4614],E,49,[[["self"]],["reader"]]],[11,R[4555],E,E,49,[[["self"]],[[R[12],[R[2098]]],[R[2098]]]]],[11,R[4568],E,E,49,[[],["u32"]]],[11,R[4615],E,E,49,[[],[["reader",["owned"]],[R[12],["reader"]]]]],[11,R[4616],E,E,49,[[["self"]],["bool"]]],[11,R[2111],E,E,50,[[],["reader"]]],[11,R[2107],E,E,50,[[],["reader"]]],[11,R[2122],E,E,50,[[["self"]],["builder"]]],[11,R[4567],E,E,50,[[["self"]],["reader"]]],[11,R[4555],E,E,50,[[["self"]],[[R[12],[R[2098]]],[R[2098]]]]],[11,R[4568],E,E,50,[[],["u32"]]],[11,R[4576],E,E,50,[[["u32"],["self"]]]],[11,R[4615],E,E,50,[[],[["builder",["owned"]],[R[12],["builder"]]]]],[11,"set_transform",E,E,50,[[["self"],["reader",["owned"]],["owned"]],[R[12]]]],[11,"init_transform",E,E,50,[[["u32"]],[["builder",["owned"]],["owned"]]]],[11,R[4616],E,E,50,[[["self"]],["bool"]]],[0,"third_party_cap_descriptor",R[4566],E,N,N],[3,"Owned",R[4645],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[11,R[2122],E,E,51,[[["self"]],["reader"]]],[11,R[4555],E,E,51,[[["self"]],[[R[12],[R[2098]]],[R[2098]]]]],[11,"get_id",E,E,51,[[],["reader"]]],[11,"has_id",E,E,51,[[["self"]],["bool"]]],[11,R[4617],E,E,51,[[],["u32"]]],[11,R[2111],E,E,52,[[],["reader"]]],[11,R[2107],E,E,52,[[],["reader"]]],[11,R[2122],E,E,52,[[["self"]],["builder"]]],[11,R[4567],E,E,52,[[["self"]],["reader"]]],[11,R[4555],E,E,52,[[["self"]],[[R[12],[R[2098]]],[R[2098]]]]],[11,"get_id",E,E,52,[[],["builder"]]],[11,"init_id",E,E,52,[[],["builder"]]],[11,"has_id",E,E,52,[[["self"]],["bool"]]],[11,R[4617],E,E,52,[[],["u32"]]],[11,"set_vine_id",E,E,52,[[["u32"],["self"]]]],[11,"get_id",E,E,53,[[["self"]],[R[2188]]]],[0,"exception",R[4566],E,N,N],[3,"Owned",R[4646],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[4,"Type",E,E,N,N],[13,"Failed",E,E,54,N],[13,"Overloaded",E,E,54,N],[13,R[4618],E,E,54,N],[13,R[4554],E,E,54,N],[11,R[2122],E,E,55,[[["self"]],["reader"]]],[11,R[4555],E,E,55,[[["self"]],[[R[12],[R[2098]]],[R[2098]]]]],[11,"get_reason",E,E,55,[[],[[R[12],["reader"]],["reader"]]]],[11,"has_reason",E,E,55,[[["self"]],["bool"]]],[11,R[4619],E,E,55,[[],["bool"]]],[11,R[4620],E,E,55,[[],["u16"]]],[11,R[4349],E,E,55,[[],[["type"],[R[12],["type",R[2110]]],[R[2110]]]]],[11,R[2111],E,E,56,[[],["reader"]]],[11,R[2107],E,E,56,[[],["reader"]]],[11,R[2122],E,E,56,[[["self"]],["builder"]]],[11,R[4567],E,E,56,[[["self"]],["reader"]]],[11,R[4555],E,E,56,[[["self"]],[[R[12],[R[2098]]],[R[2098]]]]],[11,"get_reason",E,E,56,[[],[[R[12],["builder"]],["builder"]]]],[11,"set_reason",E,E,56,[[["self"],["reader"]]]],[11,"init_reason",E,E,56,[[["u32"]],["builder"]]],[11,"has_reason",E,E,56,[[["self"]],["bool"]]],[11,R[4619],E,E,56,[[],["bool"]]],[11,"set_obsolete_is_callers_fault",E,E,56,[[["self"],["bool"]]]],[11,R[4620],E,E,56,[[],["u16"]]],[11,"set_obsolete_durability",E,E,56,[[["self"],["u16"]]]],[11,R[4349],E,E,56,[[],[["type"],[R[12],["type",R[2110]]],[R[2110]]]]],[11,"set_type",E,E,56,[[["type"],["self"]]]],[0,"rpc_twoparty_capnp",R[4627],"Code generated from [rpc-twoparty.capnp]…",N,N],[4,"Side",R[4621],E,N,N],[13,"Server",E,E,57,N],[13,"Client",E,E,57,N],[0,"vat_id",E,E,N,N],[3,"Owned",R[4647],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[11,R[2122],E,E,58,[[["self"]],["reader"]]],[11,R[4555],E,E,58,[[["self"]],[[R[12],[R[2098]]],[R[2098]]]]],[11,"get_side",E,E,58,[[],[[R[12],["side",R[2110]]],[R[2110]],["side"]]]],[11,R[2111],E,E,59,[[],["reader"]]],[11,R[2107],E,E,59,[[],["reader"]]],[11,R[2122],E,E,59,[[["self"]],["builder"]]],[11,R[4567],E,E,59,[[["self"]],["reader"]]],[11,R[4555],E,E,59,[[["self"]],[[R[12],[R[2098]]],[R[2098]]]]],[11,"get_side",E,E,59,[[],[[R[12],["side",R[2110]]],[R[2110]],["side"]]]],[11,"set_side",E,E,59,[[["self"],["side"]]]],[0,"provision_id",R[4621],E,N,N],[3,"Owned",R[4648],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[11,R[2122],E,E,60,[[["self"]],["reader"]]],[11,R[4555],E,E,60,[[["self"]],[[R[12],[R[2098]]],[R[2098]]]]],[11,R[4622],E,E,60,[[],["u32"]]],[11,R[2111],E,E,61,[[],["reader"]]],[11,R[2107],E,E,61,[[],["reader"]]],[11,R[2122],E,E,61,[[["self"]],["builder"]]],[11,R[4567],E,E,61,[[["self"]],["reader"]]],[11,R[4555],E,E,61,[[["self"]],[[R[12],[R[2098]]],[R[2098]]]]],[11,R[4622],E,E,61,[[],["u32"]]],[11,R[4623],E,E,61,[[["u32"],["self"]]]],[0,"recipient_id",R[4621],E,N,N],[3,"Owned",R[4649],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[11,R[2122],E,E,62,[[["self"]],["reader"]]],[11,R[4555],E,E,62,[[["self"]],[[R[12],[R[2098]]],[R[2098]]]]],[11,R[2111],E,E,63,[[],["reader"]]],[11,R[2107],E,E,63,[[],["reader"]]],[11,R[2122],E,E,63,[[["self"]],["builder"]]],[11,R[4567],E,E,63,[[["self"]],["reader"]]],[11,R[4555],E,E,63,[[["self"]],[[R[12],[R[2098]]],[R[2098]]]]],[0,"third_party_cap_id",R[4621],E,N,N],[3,"Owned",R[4650],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[11,R[2122],E,E,64,[[["self"]],["reader"]]],[11,R[4555],E,E,64,[[["self"]],[[R[12],[R[2098]]],[R[2098]]]]],[11,R[2111],E,E,65,[[],["reader"]]],[11,R[2107],E,E,65,[[],["reader"]]],[11,R[2122],E,E,65,[[["self"]],["builder"]]],[11,R[4567],E,E,65,[[["self"]],["reader"]]],[11,R[4555],E,E,65,[[["self"]],[[R[12],[R[2098]]],[R[2098]]]]],[0,"join_key_part",R[4621],E,N,N],[3,"Owned",R[4651],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[11,R[2122],E,E,66,[[["self"]],["reader"]]],[11,R[4555],E,E,66,[[["self"]],[[R[12],[R[2098]]],[R[2098]]]]],[11,R[4622],E,E,66,[[],["u32"]]],[11,R[4624],E,E,66,[[],["u16"]]],[11,R[4625],E,E,66,[[],["u16"]]],[11,R[2111],E,E,67,[[],["reader"]]],[11,R[2107],E,E,67,[[],["reader"]]],[11,R[2122],E,E,67,[[["self"]],["builder"]]],[11,R[4567],E,E,67,[[["self"]],["reader"]]],[11,R[4555],E,E,67,[[["self"]],[[R[12],[R[2098]]],[R[2098]]]]],[11,R[4622],E,E,67,[[],["u32"]]],[11,R[4623],E,E,67,[[["u32"],["self"]]]],[11,R[4624],E,E,67,[[],["u16"]]],[11,"set_part_count",E,E,67,[[["self"],["u16"]]]],[11,R[4625],E,E,67,[[],["u16"]]],[11,"set_part_num",E,E,67,[[["self"],["u16"]]]],[0,"join_result",R[4621],E,N,N],[3,"Owned",R[4652],E,N,N],[3,"Reader",E,E,N,N],[3,"Builder",E,E,N,N],[3,R[4571],E,E,N,N],[11,R[2122],E,E,68,[[["self"]],["reader"]]],[11,R[4555],E,E,68,[[["self"]],[[R[12],[R[2098]]],[R[2098]]]]],[11,R[4622],E,E,68,[[],["u32"]]],[11,R[4626],E,E,68,[[],["bool"]]],[11,"get_cap",E,E,68,[[],["reader"]]],[11,"has_cap",E,E,68,[[["self"]],["bool"]]],[11,R[2111],E,E,69,[[],["reader"]]],[11,R[2107],E,E,69,[[],["reader"]]],[11,R[2122],E,E,69,[[["self"]],["builder"]]],[11,R[4567],E,E,69,[[["self"]],["reader"]]],[11,R[4555],E,E,69,[[["self"]],[[R[12],[R[2098]]],[R[2098]]]]],[11,R[4622],E,E,69,[[],["u32"]]],[11,R[4623],E,E,69,[[["u32"],["self"]]]],[11,R[4626],E,E,69,[[],["bool"]]],[11,"set_succeeded",E,E,69,[[["self"],["bool"]]]],[11,"get_cap",E,E,69,[[],["builder"]]],[11,"init_cap",E,E,69,[[],["builder"]]],[11,"has_cap",E,E,69,[[["self"]],["bool"]]],[11,"get_cap",E,E,70,[[["self"]],[R[2188]]]],[0,"twoparty",R[4627],"An implementation of `VatNetwork` for the common case of a…",N,N],[3,R[4660],R[4653],"A vat networks with two parties, the client and the server.",N,N],[6,"VatId",E,E,N,N],[11,"new",E,"Creates a new two-party vat network that will receive data…",71,[[[U],[R[2113]],["side"],[T]],[R[4629]]]],[8,R[4661],R[4627],E,N,N],[10,"get_body",E,E,72,[[["self"]],[[R[12],["builder"]],["builder"]]]],[10,"get_body_as_reader",E,E,72,[[["self"]],[["reader"],[R[12],["reader"]]]]],[10,"send",E,"Sends the message. Returns a promise for the message that…",72,[[["box"]]]],[10,"take",E,E,72,[[["box"]],[[R[2117]],["builder",[R[2117]]]]]],[8,R[4662],E,E,N,N],[10,"get_body",E,E,73,[[["self"]],[["reader"],[R[12],["reader"]]]]],[8,"Connection",E,E,N,N],[10,"get_peer_vat_id",E,E,74,[[["self"]],["vatid"]]],[10,"new_outgoing_message",E,E,74,[[["u32"],["self"]],[["box",[R[4628]]],[R[4628]]]]],[10,"receive_incoming_message",E,"Waits for a message to be received and returns it. If the…",74,[[["self"]],[["error"],["promise",[R[52],"error"]],[R[52],["box"]]]]],[10,R[2344],E,E,74,[[["self"],[R[12]]],[["promise",["error"]],["error"]]]],[8,R[4660],E,E,N,N],[10,"connect",E,"Returns None if `hostId` refers to the local vat.",75,[[["self"],["vatid"]],[[R[52],["box"]],["box",[R[4654]]]]]],[10,"accept",E,"Waits for the next incoming connection and return it.",75,[[["self"]],[["box",[R[4654]]],["error"],["promise",["box","error"]]]]],[10,R[4655],E,E,75,[[["self"]],[["promise",["error"]],["error"]]]],[11,"new",E,"Constructs a new `RpcSystem` with the given network and…",76,[[[R[4629]],[R[52],["client"]],["client"],["box",[R[4629]]]],["rpcsystem"]]],[11,"bootstrap",E,"Connects to the given vat and returns its bootstrap…",76,[[["self"],["vatid"]],[T]]],[11,"get_disconnector",E,"Returns a `Disconnector` future that can be run to cleanly…",76,[[["self"]],["disconnector"]]],[11,"new",E,E,77,[[["a"]],["self"]]],[11,"get_root",E,E,77,[[["self"]],[R[12]]]],[11,"set_root",E,E,77,[[["self"],["from"]],[R[12]]]],[14,"pry",E,"Like `try!()`, but for functions that return a `Promise<T,…",N,N],[11,"from",E,E,76,[[[T]],[T]]],[11,"into",E,E,76,[[],[U]]],[11,R[11],E,E,76,[[[U]],[R[12]]]],[11,R[39],E,E,76,[[["self"]],[T]]],[11,R[13],E,E,76,[[["self"]],[T]]],[11,R[14],E,E,76,[[],[R[12]]]],[11,R[18],E,E,76,[[["self"]],[R[40]]]],[11,R[99],E,E,76,[[],["f"]]],[11,"from",E,E,78,[[[T]],[T]]],[11,"into",E,E,78,[[],[U]]],[11,R[11],E,E,78,[[[U]],[R[12]]]],[11,R[39],E,E,78,[[["self"]],[T]]],[11,R[13],E,E,78,[[["self"]],[T]]],[11,R[14],E,E,78,[[],[R[12]]]],[11,R[18],E,E,78,[[["self"]],[R[40]]]],[11,"from",E,E,77,[[[T]],[T]]],[11,"into",E,E,77,[[],[U]]],[11,R[11],E,E,77,[[[U]],[R[12]]]],[11,R[39],E,E,77,[[["self"]],[T]]],[11,R[13],E,E,77,[[["self"]],[T]]],[11,R[14],E,E,77,[[],[R[12]]]],[11,R[18],E,E,77,[[["self"]],[R[40]]]],[11,"from",R[4630],E,79,[[[T]],[T]]],[11,"into",E,E,79,[[],[U]]],[11,R[16],E,E,79,[[["self"]],[T]]],[11,R[17],E,E,79,[[[T],["self"]]]],[11,R[11],E,E,79,[[[U]],[R[12]]]],[11,R[39],E,E,79,[[["self"]],[T]]],[11,R[13],E,E,79,[[["self"]],[T]]],[11,R[14],E,E,79,[[],[R[12]]]],[11,R[18],E,E,79,[[["self"]],[R[40]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,[[[T],["self"]]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",E,E,80,[[[T]],[T]]],[11,"into",E,E,80,[[],[U]]],[11,R[11],E,E,80,[[[U]],[R[12]]]],[11,R[39],E,E,80,[[["self"]],[T]]],[11,R[13],E,E,80,[[["self"]],[T]]],[11,R[14],E,E,80,[[],[R[12]]]],[11,R[18],E,E,80,[[["self"]],[R[40]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",R[4631],E,81,[[[T]],[T]]],[11,"into",E,E,81,[[],[U]]],[11,R[16],E,E,81,[[["self"]],[T]]],[11,R[17],E,E,81,[[[T],["self"]]]],[11,R[11],E,E,81,[[[U]],[R[12]]]],[11,R[39],E,E,81,[[["self"]],[T]]],[11,R[13],E,E,81,[[["self"]],[T]]],[11,R[14],E,E,81,[[],[R[12]]]],[11,R[18],E,E,81,[[["self"]],[R[40]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[17],E,E,3,[[[T],["self"]]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,R[18],E,E,5,[[["self"]],[R[40]]]],[11,"from",R[4575],E,82,[[[T]],[T]]],[11,"into",E,E,82,[[],[U]]],[11,R[16],E,E,82,[[["self"]],[T]]],[11,R[17],E,E,82,[[[T],["self"]]]],[11,R[11],E,E,82,[[[U]],[R[12]]]],[11,R[39],E,E,82,[[["self"]],[T]]],[11,R[13],E,E,82,[[["self"]],[T]]],[11,R[14],E,E,82,[[],[R[12]]]],[11,R[18],E,E,82,[[["self"]],[R[40]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[16],E,E,9,[[["self"]],[T]]],[11,R[17],E,E,9,[[[T],["self"]]]],[11,R[11],E,E,9,[[[U]],[R[12]]]],[11,R[39],E,E,9,[[["self"]],[T]]],[11,R[13],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[],[R[12]]]],[11,R[18],E,E,9,[[["self"]],[R[40]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[11],E,E,10,[[[U]],[R[12]]]],[11,R[39],E,E,10,[[["self"]],[T]]],[11,R[13],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[],[R[12]]]],[11,R[18],E,E,10,[[["self"]],[R[40]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[11],E,E,11,[[[U]],[R[12]]]],[11,R[39],E,E,11,[[["self"]],[T]]],[11,R[13],E,E,11,[[["self"]],[T]]],[11,R[14],E,E,11,[[],[R[12]]]],[11,R[18],E,E,11,[[["self"]],[R[40]]]],[11,"from",R[4632],E,83,[[[T]],[T]]],[11,"into",E,E,83,[[],[U]]],[11,R[16],E,E,83,[[["self"]],[T]]],[11,R[17],E,E,83,[[[T],["self"]]]],[11,R[11],E,E,83,[[[U]],[R[12]]]],[11,R[39],E,E,83,[[["self"]],[T]]],[11,R[13],E,E,83,[[["self"]],[T]]],[11,R[14],E,E,83,[[],[R[12]]]],[11,R[18],E,E,83,[[["self"]],[R[40]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[16],E,E,7,[[["self"]],[T]]],[11,R[17],E,E,7,[[[T],["self"]]]],[11,R[11],E,E,7,[[[U]],[R[12]]]],[11,R[39],E,E,7,[[["self"]],[T]]],[11,R[13],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[],[R[12]]]],[11,R[18],E,E,7,[[["self"]],[R[40]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[11],E,E,8,[[[U]],[R[12]]]],[11,R[39],E,E,8,[[["self"]],[T]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[],[R[12]]]],[11,R[18],E,E,8,[[["self"]],[R[40]]]],[11,"from",E,E,84,[[[T]],[T]]],[11,"into",E,E,84,[[],[U]]],[11,R[11],E,E,84,[[[U]],[R[12]]]],[11,R[39],E,E,84,[[["self"]],[T]]],[11,R[13],E,E,84,[[["self"]],[T]]],[11,R[14],E,E,84,[[],[R[12]]]],[11,R[18],E,E,84,[[["self"]],[R[40]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[11],E,E,6,[[[U]],[R[12]]]],[11,R[39],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[],[R[12]]]],[11,R[18],E,E,6,[[["self"]],[R[40]]]],[11,"from",R[4633],E,85,[[[T]],[T]]],[11,"into",E,E,85,[[],[U]]],[11,R[16],E,E,85,[[["self"]],[T]]],[11,R[17],E,E,85,[[[T],["self"]]]],[11,R[11],E,E,85,[[[U]],[R[12]]]],[11,R[39],E,E,85,[[["self"]],[T]]],[11,R[13],E,E,85,[[["self"]],[T]]],[11,R[14],E,E,85,[[],[R[12]]]],[11,R[18],E,E,85,[[["self"]],[R[40]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[16],E,E,13,[[["self"]],[T]]],[11,R[17],E,E,13,[[[T],["self"]]]],[11,R[11],E,E,13,[[[U]],[R[12]]]],[11,R[39],E,E,13,[[["self"]],[T]]],[11,R[13],E,E,13,[[["self"]],[T]]],[11,R[14],E,E,13,[[],[R[12]]]],[11,R[18],E,E,13,[[["self"]],[R[40]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[11],E,E,14,[[[U]],[R[12]]]],[11,R[39],E,E,14,[[["self"]],[T]]],[11,R[13],E,E,14,[[["self"]],[T]]],[11,R[14],E,E,14,[[],[R[12]]]],[11,R[18],E,E,14,[[["self"]],[R[40]]]],[11,"from",E,E,86,[[[T]],[T]]],[11,"into",E,E,86,[[],[U]]],[11,R[11],E,E,86,[[[U]],[R[12]]]],[11,R[39],E,E,86,[[["self"]],[T]]],[11,R[13],E,E,86,[[["self"]],[T]]],[11,R[14],E,E,86,[[],[R[12]]]],[11,R[18],E,E,86,[[["self"]],[R[40]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[11],E,E,12,[[[U]],[R[12]]]],[11,R[39],E,E,12,[[["self"]],[T]]],[11,R[13],E,E,12,[[["self"]],[T]]],[11,R[14],E,E,12,[[],[R[12]]]],[11,R[18],E,E,12,[[["self"]],[R[40]]]],[11,"from",R[4634],E,87,[[[T]],[T]]],[11,"into",E,E,87,[[],[U]]],[11,R[16],E,E,87,[[["self"]],[T]]],[11,R[17],E,E,87,[[[T],["self"]]]],[11,R[11],E,E,87,[[[U]],[R[12]]]],[11,R[39],E,E,87,[[["self"]],[T]]],[11,R[13],E,E,87,[[["self"]],[T]]],[11,R[14],E,E,87,[[],[R[12]]]],[11,R[18],E,E,87,[[["self"]],[R[40]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[16],E,E,15,[[["self"]],[T]]],[11,R[17],E,E,15,[[[T],["self"]]]],[11,R[11],E,E,15,[[[U]],[R[12]]]],[11,R[39],E,E,15,[[["self"]],[T]]],[11,R[13],E,E,15,[[["self"]],[T]]],[11,R[14],E,E,15,[[],[R[12]]]],[11,R[18],E,E,15,[[["self"]],[R[40]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[11],E,E,16,[[[U]],[R[12]]]],[11,R[39],E,E,16,[[["self"]],[T]]],[11,R[13],E,E,16,[[["self"]],[T]]],[11,R[14],E,E,16,[[],[R[12]]]],[11,R[18],E,E,16,[[["self"]],[R[40]]]],[11,"from",E,E,88,[[[T]],[T]]],[11,"into",E,E,88,[[],[U]]],[11,R[11],E,E,88,[[[U]],[R[12]]]],[11,R[39],E,E,88,[[["self"]],[T]]],[11,R[13],E,E,88,[[["self"]],[T]]],[11,R[14],E,E,88,[[],[R[12]]]],[11,R[18],E,E,88,[[["self"]],[R[40]]]],[11,"from",R[4635],E,89,[[[T]],[T]]],[11,"into",E,E,89,[[],[U]]],[11,R[16],E,E,89,[[["self"]],[T]]],[11,R[17],E,E,89,[[[T],["self"]]]],[11,R[11],E,E,89,[[[U]],[R[12]]]],[11,R[39],E,E,89,[[["self"]],[T]]],[11,R[13],E,E,89,[[["self"]],[T]]],[11,R[14],E,E,89,[[],[R[12]]]],[11,R[18],E,E,89,[[["self"]],[R[40]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[16],E,E,18,[[["self"]],[T]]],[11,R[17],E,E,18,[[[T],["self"]]]],[11,R[11],E,E,18,[[[U]],[R[12]]]],[11,R[39],E,E,18,[[["self"]],[T]]],[11,R[13],E,E,18,[[["self"]],[T]]],[11,R[14],E,E,18,[[],[R[12]]]],[11,R[18],E,E,18,[[["self"]],[R[40]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[11],E,E,19,[[[U]],[R[12]]]],[11,R[39],E,E,19,[[["self"]],[T]]],[11,R[13],E,E,19,[[["self"]],[T]]],[11,R[14],E,E,19,[[],[R[12]]]],[11,R[18],E,E,19,[[["self"]],[R[40]]]],[11,"from",E,E,90,[[[T]],[T]]],[11,"into",E,E,90,[[],[U]]],[11,R[11],E,E,90,[[[U]],[R[12]]]],[11,R[39],E,E,90,[[["self"]],[T]]],[11,R[13],E,E,90,[[["self"]],[T]]],[11,R[14],E,E,90,[[],[R[12]]]],[11,R[18],E,E,90,[[["self"]],[R[40]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[11],E,E,17,[[[U]],[R[12]]]],[11,R[39],E,E,17,[[["self"]],[T]]],[11,R[13],E,E,17,[[["self"]],[T]]],[11,R[14],E,E,17,[[],[R[12]]]],[11,R[18],E,E,17,[[["self"]],[R[40]]]],[11,"from",R[4636],E,91,[[[T]],[T]]],[11,"into",E,E,91,[[],[U]]],[11,R[16],E,E,91,[[["self"]],[T]]],[11,R[17],E,E,91,[[[T],["self"]]]],[11,R[11],E,E,91,[[[U]],[R[12]]]],[11,R[39],E,E,91,[[["self"]],[T]]],[11,R[13],E,E,91,[[["self"]],[T]]],[11,R[14],E,E,91,[[],[R[12]]]],[11,R[18],E,E,91,[[["self"]],[R[40]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[16],E,E,20,[[["self"]],[T]]],[11,R[17],E,E,20,[[[T],["self"]]]],[11,R[11],E,E,20,[[[U]],[R[12]]]],[11,R[39],E,E,20,[[["self"]],[T]]],[11,R[13],E,E,20,[[["self"]],[T]]],[11,R[14],E,E,20,[[],[R[12]]]],[11,R[18],E,E,20,[[["self"]],[R[40]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[11],E,E,21,[[[U]],[R[12]]]],[11,R[39],E,E,21,[[["self"]],[T]]],[11,R[13],E,E,21,[[["self"]],[T]]],[11,R[14],E,E,21,[[],[R[12]]]],[11,R[18],E,E,21,[[["self"]],[R[40]]]],[11,"from",E,E,92,[[[T]],[T]]],[11,"into",E,E,92,[[],[U]]],[11,R[11],E,E,92,[[[U]],[R[12]]]],[11,R[39],E,E,92,[[["self"]],[T]]],[11,R[13],E,E,92,[[["self"]],[T]]],[11,R[14],E,E,92,[[],[R[12]]]],[11,R[18],E,E,92,[[["self"]],[R[40]]]],[11,"from",R[4594],E,93,[[[T]],[T]]],[11,"into",E,E,93,[[],[U]]],[11,R[16],E,E,93,[[["self"]],[T]]],[11,R[17],E,E,93,[[[T],["self"]]]],[11,R[11],E,E,93,[[[U]],[R[12]]]],[11,R[39],E,E,93,[[["self"]],[T]]],[11,R[13],E,E,93,[[["self"]],[T]]],[11,R[14],E,E,93,[[],[R[12]]]],[11,R[18],E,E,93,[[["self"]],[R[40]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[16],E,E,25,[[["self"]],[T]]],[11,R[17],E,E,25,[[[T],["self"]]]],[11,R[11],E,E,25,[[[U]],[R[12]]]],[11,R[39],E,E,25,[[["self"]],[T]]],[11,R[13],E,E,25,[[["self"]],[T]]],[11,R[14],E,E,25,[[],[R[12]]]],[11,R[18],E,E,25,[[["self"]],[R[40]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[11],E,E,26,[[[U]],[R[12]]]],[11,R[39],E,E,26,[[["self"]],[T]]],[11,R[13],E,E,26,[[["self"]],[T]]],[11,R[14],E,E,26,[[],[R[12]]]],[11,R[18],E,E,26,[[["self"]],[R[40]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[11],E,E,27,[[[U]],[R[12]]]],[11,R[39],E,E,27,[[["self"]],[T]]],[11,R[13],E,E,27,[[["self"]],[T]]],[11,R[14],E,E,27,[[],[R[12]]]],[11,R[18],E,E,27,[[["self"]],[R[40]]]],[11,"from",R[4637],E,94,[[[T]],[T]]],[11,"into",E,E,94,[[],[U]]],[11,R[16],E,E,94,[[["self"]],[T]]],[11,R[17],E,E,94,[[[T],["self"]]]],[11,R[11],E,E,94,[[[U]],[R[12]]]],[11,R[39],E,E,94,[[["self"]],[T]]],[11,R[13],E,E,94,[[["self"]],[T]]],[11,R[14],E,E,94,[[],[R[12]]]],[11,R[18],E,E,94,[[["self"]],[R[40]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[16],E,E,23,[[["self"]],[T]]],[11,R[17],E,E,23,[[[T],["self"]]]],[11,R[11],E,E,23,[[[U]],[R[12]]]],[11,R[39],E,E,23,[[["self"]],[T]]],[11,R[13],E,E,23,[[["self"]],[T]]],[11,R[14],E,E,23,[[],[R[12]]]],[11,R[18],E,E,23,[[["self"]],[R[40]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[11],E,E,24,[[[U]],[R[12]]]],[11,R[39],E,E,24,[[["self"]],[T]]],[11,R[13],E,E,24,[[["self"]],[T]]],[11,R[14],E,E,24,[[],[R[12]]]],[11,R[18],E,E,24,[[["self"]],[R[40]]]],[11,"from",E,E,95,[[[T]],[T]]],[11,"into",E,E,95,[[],[U]]],[11,R[11],E,E,95,[[[U]],[R[12]]]],[11,R[39],E,E,95,[[["self"]],[T]]],[11,R[13],E,E,95,[[["self"]],[T]]],[11,R[14],E,E,95,[[],[R[12]]]],[11,R[18],E,E,95,[[["self"]],[R[40]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[11],E,E,22,[[[U]],[R[12]]]],[11,R[39],E,E,22,[[["self"]],[T]]],[11,R[13],E,E,22,[[["self"]],[T]]],[11,R[14],E,E,22,[[],[R[12]]]],[11,R[18],E,E,22,[[["self"]],[R[40]]]],[11,"from",R[4638],E,96,[[[T]],[T]]],[11,"into",E,E,96,[[],[U]]],[11,R[16],E,E,96,[[["self"]],[T]]],[11,R[17],E,E,96,[[[T],["self"]]]],[11,R[11],E,E,96,[[[U]],[R[12]]]],[11,R[39],E,E,96,[[["self"]],[T]]],[11,R[13],E,E,96,[[["self"]],[T]]],[11,R[14],E,E,96,[[],[R[12]]]],[11,R[18],E,E,96,[[["self"]],[R[40]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[16],E,E,28,[[["self"]],[T]]],[11,R[17],E,E,28,[[[T],["self"]]]],[11,R[11],E,E,28,[[[U]],[R[12]]]],[11,R[39],E,E,28,[[["self"]],[T]]],[11,R[13],E,E,28,[[["self"]],[T]]],[11,R[14],E,E,28,[[],[R[12]]]],[11,R[18],E,E,28,[[["self"]],[R[40]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[11],E,E,29,[[[U]],[R[12]]]],[11,R[39],E,E,29,[[["self"]],[T]]],[11,R[13],E,E,29,[[["self"]],[T]]],[11,R[14],E,E,29,[[],[R[12]]]],[11,R[18],E,E,29,[[["self"]],[R[40]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[11],E,E,30,[[[U]],[R[12]]]],[11,R[39],E,E,30,[[["self"]],[T]]],[11,R[13],E,E,30,[[["self"]],[T]]],[11,R[14],E,E,30,[[],[R[12]]]],[11,R[18],E,E,30,[[["self"]],[R[40]]]],[11,"from",R[4639],E,97,[[[T]],[T]]],[11,"into",E,E,97,[[],[U]]],[11,R[16],E,E,97,[[["self"]],[T]]],[11,R[17],E,E,97,[[[T],["self"]]]],[11,R[11],E,E,97,[[[U]],[R[12]]]],[11,R[39],E,E,97,[[["self"]],[T]]],[11,R[13],E,E,97,[[["self"]],[T]]],[11,R[14],E,E,97,[[],[R[12]]]],[11,R[18],E,E,97,[[["self"]],[R[40]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[16],E,E,31,[[["self"]],[T]]],[11,R[17],E,E,31,[[[T],["self"]]]],[11,R[11],E,E,31,[[[U]],[R[12]]]],[11,R[39],E,E,31,[[["self"]],[T]]],[11,R[13],E,E,31,[[["self"]],[T]]],[11,R[14],E,E,31,[[],[R[12]]]],[11,R[18],E,E,31,[[["self"]],[R[40]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[11],E,E,32,[[[U]],[R[12]]]],[11,R[39],E,E,32,[[["self"]],[T]]],[11,R[13],E,E,32,[[["self"]],[T]]],[11,R[14],E,E,32,[[],[R[12]]]],[11,R[18],E,E,32,[[["self"]],[R[40]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[11],E,E,33,[[[U]],[R[12]]]],[11,R[39],E,E,33,[[["self"]],[T]]],[11,R[13],E,E,33,[[["self"]],[T]]],[11,R[14],E,E,33,[[],[R[12]]]],[11,R[18],E,E,33,[[["self"]],[R[40]]]],[11,"from",R[4640],E,98,[[[T]],[T]]],[11,"into",E,E,98,[[],[U]]],[11,R[16],E,E,98,[[["self"]],[T]]],[11,R[17],E,E,98,[[[T],["self"]]]],[11,R[11],E,E,98,[[[U]],[R[12]]]],[11,R[39],E,E,98,[[["self"]],[T]]],[11,R[13],E,E,98,[[["self"]],[T]]],[11,R[14],E,E,98,[[],[R[12]]]],[11,R[18],E,E,98,[[["self"]],[R[40]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[16],E,E,34,[[["self"]],[T]]],[11,R[17],E,E,34,[[[T],["self"]]]],[11,R[11],E,E,34,[[[U]],[R[12]]]],[11,R[39],E,E,34,[[["self"]],[T]]],[11,R[13],E,E,34,[[["self"]],[T]]],[11,R[14],E,E,34,[[],[R[12]]]],[11,R[18],E,E,34,[[["self"]],[R[40]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[11],E,E,35,[[[U]],[R[12]]]],[11,R[39],E,E,35,[[["self"]],[T]]],[11,R[13],E,E,35,[[["self"]],[T]]],[11,R[14],E,E,35,[[],[R[12]]]],[11,R[18],E,E,35,[[["self"]],[R[40]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,R[11],E,E,36,[[[U]],[R[12]]]],[11,R[39],E,E,36,[[["self"]],[T]]],[11,R[13],E,E,36,[[["self"]],[T]]],[11,R[14],E,E,36,[[],[R[12]]]],[11,R[18],E,E,36,[[["self"]],[R[40]]]],[11,"from",R[4641],E,99,[[[T]],[T]]],[11,"into",E,E,99,[[],[U]]],[11,R[16],E,E,99,[[["self"]],[T]]],[11,R[17],E,E,99,[[[T],["self"]]]],[11,R[11],E,E,99,[[[U]],[R[12]]]],[11,R[39],E,E,99,[[["self"]],[T]]],[11,R[13],E,E,99,[[["self"]],[T]]],[11,R[14],E,E,99,[[],[R[12]]]],[11,R[18],E,E,99,[[["self"]],[R[40]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,"into",E,E,38,[[],[U]]],[11,R[16],E,E,38,[[["self"]],[T]]],[11,R[17],E,E,38,[[[T],["self"]]]],[11,R[11],E,E,38,[[[U]],[R[12]]]],[11,R[39],E,E,38,[[["self"]],[T]]],[11,R[13],E,E,38,[[["self"]],[T]]],[11,R[14],E,E,38,[[],[R[12]]]],[11,R[18],E,E,38,[[["self"]],[R[40]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,R[11],E,E,39,[[[U]],[R[12]]]],[11,R[39],E,E,39,[[["self"]],[T]]],[11,R[13],E,E,39,[[["self"]],[T]]],[11,R[14],E,E,39,[[],[R[12]]]],[11,R[18],E,E,39,[[["self"]],[R[40]]]],[11,"from",E,E,100,[[[T]],[T]]],[11,"into",E,E,100,[[],[U]]],[11,R[11],E,E,100,[[[U]],[R[12]]]],[11,R[39],E,E,100,[[["self"]],[T]]],[11,R[13],E,E,100,[[["self"]],[T]]],[11,R[14],E,E,100,[[],[R[12]]]],[11,R[18],E,E,100,[[["self"]],[R[40]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,"into",E,E,37,[[],[U]]],[11,R[11],E,E,37,[[[U]],[R[12]]]],[11,R[39],E,E,37,[[["self"]],[T]]],[11,R[13],E,E,37,[[["self"]],[T]]],[11,R[14],E,E,37,[[],[R[12]]]],[11,R[18],E,E,37,[[["self"]],[R[40]]]],[11,"from",R[4642],E,101,[[[T]],[T]]],[11,"into",E,E,101,[[],[U]]],[11,R[16],E,E,101,[[["self"]],[T]]],[11,R[17],E,E,101,[[[T],["self"]]]],[11,R[11],E,E,101,[[[U]],[R[12]]]],[11,R[39],E,E,101,[[["self"]],[T]]],[11,R[13],E,E,101,[[["self"]],[T]]],[11,R[14],E,E,101,[[],[R[12]]]],[11,R[18],E,E,101,[[["self"]],[R[40]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,"into",E,E,40,[[],[U]]],[11,R[16],E,E,40,[[["self"]],[T]]],[11,R[17],E,E,40,[[[T],["self"]]]],[11,R[11],E,E,40,[[[U]],[R[12]]]],[11,R[39],E,E,40,[[["self"]],[T]]],[11,R[13],E,E,40,[[["self"]],[T]]],[11,R[14],E,E,40,[[],[R[12]]]],[11,R[18],E,E,40,[[["self"]],[R[40]]]],[11,"from",E,E,41,[[[T]],[T]]],[11,"into",E,E,41,[[],[U]]],[11,R[11],E,E,41,[[[U]],[R[12]]]],[11,R[39],E,E,41,[[["self"]],[T]]],[11,R[13],E,E,41,[[["self"]],[T]]],[11,R[14],E,E,41,[[],[R[12]]]],[11,R[18],E,E,41,[[["self"]],[R[40]]]],[11,"from",E,E,42,[[[T]],[T]]],[11,"into",E,E,42,[[],[U]]],[11,R[11],E,E,42,[[[U]],[R[12]]]],[11,R[39],E,E,42,[[["self"]],[T]]],[11,R[13],E,E,42,[[["self"]],[T]]],[11,R[14],E,E,42,[[],[R[12]]]],[11,R[18],E,E,42,[[["self"]],[R[40]]]],[11,"from",R[4643],E,102,[[[T]],[T]]],[11,"into",E,E,102,[[],[U]]],[11,R[16],E,E,102,[[["self"]],[T]]],[11,R[17],E,E,102,[[[T],["self"]]]],[11,R[11],E,E,102,[[[U]],[R[12]]]],[11,R[39],E,E,102,[[["self"]],[T]]],[11,R[13],E,E,102,[[["self"]],[T]]],[11,R[14],E,E,102,[[],[R[12]]]],[11,R[18],E,E,102,[[["self"]],[R[40]]]],[11,"from",E,E,44,[[[T]],[T]]],[11,"into",E,E,44,[[],[U]]],[11,R[16],E,E,44,[[["self"]],[T]]],[11,R[17],E,E,44,[[[T],["self"]]]],[11,R[11],E,E,44,[[[U]],[R[12]]]],[11,R[39],E,E,44,[[["self"]],[T]]],[11,R[13],E,E,44,[[["self"]],[T]]],[11,R[14],E,E,44,[[],[R[12]]]],[11,R[18],E,E,44,[[["self"]],[R[40]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,"into",E,E,45,[[],[U]]],[11,R[11],E,E,45,[[[U]],[R[12]]]],[11,R[39],E,E,45,[[["self"]],[T]]],[11,R[13],E,E,45,[[["self"]],[T]]],[11,R[14],E,E,45,[[],[R[12]]]],[11,R[18],E,E,45,[[["self"]],[R[40]]]],[11,"from",E,E,103,[[[T]],[T]]],[11,"into",E,E,103,[[],[U]]],[11,R[11],E,E,103,[[[U]],[R[12]]]],[11,R[39],E,E,103,[[["self"]],[T]]],[11,R[13],E,E,103,[[["self"]],[T]]],[11,R[14],E,E,103,[[],[R[12]]]],[11,R[18],E,E,103,[[["self"]],[R[40]]]],[11,"from",E,E,43,[[[T]],[T]]],[11,"into",E,E,43,[[],[U]]],[11,R[11],E,E,43,[[[U]],[R[12]]]],[11,R[39],E,E,43,[[["self"]],[T]]],[11,R[13],E,E,43,[[["self"]],[T]]],[11,R[14],E,E,43,[[],[R[12]]]],[11,R[18],E,E,43,[[["self"]],[R[40]]]],[11,"from",R[4614],E,104,[[[T]],[T]]],[11,"into",E,E,104,[[],[U]]],[11,R[16],E,E,104,[[["self"]],[T]]],[11,R[17],E,E,104,[[[T],["self"]]]],[11,R[11],E,E,104,[[[U]],[R[12]]]],[11,R[39],E,E,104,[[["self"]],[T]]],[11,R[13],E,E,104,[[["self"]],[T]]],[11,R[14],E,E,104,[[],[R[12]]]],[11,R[18],E,E,104,[[["self"]],[R[40]]]],[11,"from",E,E,49,[[[T]],[T]]],[11,"into",E,E,49,[[],[U]]],[11,R[16],E,E,49,[[["self"]],[T]]],[11,R[17],E,E,49,[[[T],["self"]]]],[11,R[11],E,E,49,[[[U]],[R[12]]]],[11,R[39],E,E,49,[[["self"]],[T]]],[11,R[13],E,E,49,[[["self"]],[T]]],[11,R[14],E,E,49,[[],[R[12]]]],[11,R[18],E,E,49,[[["self"]],[R[40]]]],[11,"from",E,E,50,[[[T]],[T]]],[11,"into",E,E,50,[[],[U]]],[11,R[11],E,E,50,[[[U]],[R[12]]]],[11,R[39],E,E,50,[[["self"]],[T]]],[11,R[13],E,E,50,[[["self"]],[T]]],[11,R[14],E,E,50,[[],[R[12]]]],[11,R[18],E,E,50,[[["self"]],[R[40]]]],[11,"from",E,E,105,[[[T]],[T]]],[11,"into",E,E,105,[[],[U]]],[11,R[11],E,E,105,[[[U]],[R[12]]]],[11,R[39],E,E,105,[[["self"]],[T]]],[11,R[13],E,E,105,[[["self"]],[T]]],[11,R[14],E,E,105,[[],[R[12]]]],[11,R[18],E,E,105,[[["self"]],[R[40]]]],[11,"from",R[4644],E,106,[[[T]],[T]]],[11,"into",E,E,106,[[],[U]]],[11,R[16],E,E,106,[[["self"]],[T]]],[11,R[17],E,E,106,[[[T],["self"]]]],[11,R[11],E,E,106,[[[U]],[R[12]]]],[11,R[39],E,E,106,[[["self"]],[T]]],[11,R[13],E,E,106,[[["self"]],[T]]],[11,R[14],E,E,106,[[],[R[12]]]],[11,R[18],E,E,106,[[["self"]],[R[40]]]],[11,"from",E,E,47,[[[T]],[T]]],[11,"into",E,E,47,[[],[U]]],[11,R[16],E,E,47,[[["self"]],[T]]],[11,R[17],E,E,47,[[[T],["self"]]]],[11,R[11],E,E,47,[[[U]],[R[12]]]],[11,R[39],E,E,47,[[["self"]],[T]]],[11,R[13],E,E,47,[[["self"]],[T]]],[11,R[14],E,E,47,[[],[R[12]]]],[11,R[18],E,E,47,[[["self"]],[R[40]]]],[11,"from",E,E,48,[[[T]],[T]]],[11,"into",E,E,48,[[],[U]]],[11,R[11],E,E,48,[[[U]],[R[12]]]],[11,R[39],E,E,48,[[["self"]],[T]]],[11,R[13],E,E,48,[[["self"]],[T]]],[11,R[14],E,E,48,[[],[R[12]]]],[11,R[18],E,E,48,[[["self"]],[R[40]]]],[11,"from",E,E,107,[[[T]],[T]]],[11,"into",E,E,107,[[],[U]]],[11,R[11],E,E,107,[[[U]],[R[12]]]],[11,R[39],E,E,107,[[["self"]],[T]]],[11,R[13],E,E,107,[[["self"]],[T]]],[11,R[14],E,E,107,[[],[R[12]]]],[11,R[18],E,E,107,[[["self"]],[R[40]]]],[11,"from",E,E,46,[[[T]],[T]]],[11,"into",E,E,46,[[],[U]]],[11,R[11],E,E,46,[[[U]],[R[12]]]],[11,R[39],E,E,46,[[["self"]],[T]]],[11,R[13],E,E,46,[[["self"]],[T]]],[11,R[14],E,E,46,[[],[R[12]]]],[11,R[18],E,E,46,[[["self"]],[R[40]]]],[11,"from",R[4645],E,108,[[[T]],[T]]],[11,"into",E,E,108,[[],[U]]],[11,R[16],E,E,108,[[["self"]],[T]]],[11,R[17],E,E,108,[[[T],["self"]]]],[11,R[11],E,E,108,[[[U]],[R[12]]]],[11,R[39],E,E,108,[[["self"]],[T]]],[11,R[13],E,E,108,[[["self"]],[T]]],[11,R[14],E,E,108,[[],[R[12]]]],[11,R[18],E,E,108,[[["self"]],[R[40]]]],[11,"from",E,E,51,[[[T]],[T]]],[11,"into",E,E,51,[[],[U]]],[11,R[16],E,E,51,[[["self"]],[T]]],[11,R[17],E,E,51,[[[T],["self"]]]],[11,R[11],E,E,51,[[[U]],[R[12]]]],[11,R[39],E,E,51,[[["self"]],[T]]],[11,R[13],E,E,51,[[["self"]],[T]]],[11,R[14],E,E,51,[[],[R[12]]]],[11,R[18],E,E,51,[[["self"]],[R[40]]]],[11,"from",E,E,52,[[[T]],[T]]],[11,"into",E,E,52,[[],[U]]],[11,R[11],E,E,52,[[[U]],[R[12]]]],[11,R[39],E,E,52,[[["self"]],[T]]],[11,R[13],E,E,52,[[["self"]],[T]]],[11,R[14],E,E,52,[[],[R[12]]]],[11,R[18],E,E,52,[[["self"]],[R[40]]]],[11,"from",E,E,53,[[[T]],[T]]],[11,"into",E,E,53,[[],[U]]],[11,R[11],E,E,53,[[[U]],[R[12]]]],[11,R[39],E,E,53,[[["self"]],[T]]],[11,R[13],E,E,53,[[["self"]],[T]]],[11,R[14],E,E,53,[[],[R[12]]]],[11,R[18],E,E,53,[[["self"]],[R[40]]]],[11,"from",R[4646],E,109,[[[T]],[T]]],[11,"into",E,E,109,[[],[U]]],[11,R[16],E,E,109,[[["self"]],[T]]],[11,R[17],E,E,109,[[[T],["self"]]]],[11,R[11],E,E,109,[[[U]],[R[12]]]],[11,R[39],E,E,109,[[["self"]],[T]]],[11,R[13],E,E,109,[[["self"]],[T]]],[11,R[14],E,E,109,[[],[R[12]]]],[11,R[18],E,E,109,[[["self"]],[R[40]]]],[11,"from",E,E,55,[[[T]],[T]]],[11,"into",E,E,55,[[],[U]]],[11,R[16],E,E,55,[[["self"]],[T]]],[11,R[17],E,E,55,[[[T],["self"]]]],[11,R[11],E,E,55,[[[U]],[R[12]]]],[11,R[39],E,E,55,[[["self"]],[T]]],[11,R[13],E,E,55,[[["self"]],[T]]],[11,R[14],E,E,55,[[],[R[12]]]],[11,R[18],E,E,55,[[["self"]],[R[40]]]],[11,"from",E,E,56,[[[T]],[T]]],[11,"into",E,E,56,[[],[U]]],[11,R[11],E,E,56,[[[U]],[R[12]]]],[11,R[39],E,E,56,[[["self"]],[T]]],[11,R[13],E,E,56,[[["self"]],[T]]],[11,R[14],E,E,56,[[],[R[12]]]],[11,R[18],E,E,56,[[["self"]],[R[40]]]],[11,"from",E,E,110,[[[T]],[T]]],[11,"into",E,E,110,[[],[U]]],[11,R[11],E,E,110,[[[U]],[R[12]]]],[11,R[39],E,E,110,[[["self"]],[T]]],[11,R[13],E,E,110,[[["self"]],[T]]],[11,R[14],E,E,110,[[],[R[12]]]],[11,R[18],E,E,110,[[["self"]],[R[40]]]],[11,"from",E,E,54,[[[T]],[T]]],[11,"into",E,E,54,[[],[U]]],[11,R[16],E,E,54,[[["self"]],[T]]],[11,R[17],E,E,54,[[[T],["self"]]]],[11,R[11],E,E,54,[[[U]],[R[12]]]],[11,R[39],E,E,54,[[["self"]],[T]]],[11,R[13],E,E,54,[[["self"]],[T]]],[11,R[14],E,E,54,[[],[R[12]]]],[11,R[18],E,E,54,[[["self"]],[R[40]]]],[11,"from",R[4621],E,57,[[[T]],[T]]],[11,"into",E,E,57,[[],[U]]],[11,R[16],E,E,57,[[["self"]],[T]]],[11,R[17],E,E,57,[[[T],["self"]]]],[11,R[11],E,E,57,[[[U]],[R[12]]]],[11,R[39],E,E,57,[[["self"]],[T]]],[11,R[13],E,E,57,[[["self"]],[T]]],[11,R[14],E,E,57,[[],[R[12]]]],[11,R[18],E,E,57,[[["self"]],[R[40]]]],[11,"from",R[4647],E,111,[[[T]],[T]]],[11,"into",E,E,111,[[],[U]]],[11,R[16],E,E,111,[[["self"]],[T]]],[11,R[17],E,E,111,[[[T],["self"]]]],[11,R[11],E,E,111,[[[U]],[R[12]]]],[11,R[39],E,E,111,[[["self"]],[T]]],[11,R[13],E,E,111,[[["self"]],[T]]],[11,R[14],E,E,111,[[],[R[12]]]],[11,R[18],E,E,111,[[["self"]],[R[40]]]],[11,"from",E,E,58,[[[T]],[T]]],[11,"into",E,E,58,[[],[U]]],[11,R[16],E,E,58,[[["self"]],[T]]],[11,R[17],E,E,58,[[[T],["self"]]]],[11,R[11],E,E,58,[[[U]],[R[12]]]],[11,R[39],E,E,58,[[["self"]],[T]]],[11,R[13],E,E,58,[[["self"]],[T]]],[11,R[14],E,E,58,[[],[R[12]]]],[11,R[18],E,E,58,[[["self"]],[R[40]]]],[11,"from",E,E,59,[[[T]],[T]]],[11,"into",E,E,59,[[],[U]]],[11,R[11],E,E,59,[[[U]],[R[12]]]],[11,R[39],E,E,59,[[["self"]],[T]]],[11,R[13],E,E,59,[[["self"]],[T]]],[11,R[14],E,E,59,[[],[R[12]]]],[11,R[18],E,E,59,[[["self"]],[R[40]]]],[11,"from",E,E,112,[[[T]],[T]]],[11,"into",E,E,112,[[],[U]]],[11,R[11],E,E,112,[[[U]],[R[12]]]],[11,R[39],E,E,112,[[["self"]],[T]]],[11,R[13],E,E,112,[[["self"]],[T]]],[11,R[14],E,E,112,[[],[R[12]]]],[11,R[18],E,E,112,[[["self"]],[R[40]]]],[11,"from",R[4648],E,113,[[[T]],[T]]],[11,"into",E,E,113,[[],[U]]],[11,R[16],E,E,113,[[["self"]],[T]]],[11,R[17],E,E,113,[[[T],["self"]]]],[11,R[11],E,E,113,[[[U]],[R[12]]]],[11,R[39],E,E,113,[[["self"]],[T]]],[11,R[13],E,E,113,[[["self"]],[T]]],[11,R[14],E,E,113,[[],[R[12]]]],[11,R[18],E,E,113,[[["self"]],[R[40]]]],[11,"from",E,E,60,[[[T]],[T]]],[11,"into",E,E,60,[[],[U]]],[11,R[16],E,E,60,[[["self"]],[T]]],[11,R[17],E,E,60,[[[T],["self"]]]],[11,R[11],E,E,60,[[[U]],[R[12]]]],[11,R[39],E,E,60,[[["self"]],[T]]],[11,R[13],E,E,60,[[["self"]],[T]]],[11,R[14],E,E,60,[[],[R[12]]]],[11,R[18],E,E,60,[[["self"]],[R[40]]]],[11,"from",E,E,61,[[[T]],[T]]],[11,"into",E,E,61,[[],[U]]],[11,R[11],E,E,61,[[[U]],[R[12]]]],[11,R[39],E,E,61,[[["self"]],[T]]],[11,R[13],E,E,61,[[["self"]],[T]]],[11,R[14],E,E,61,[[],[R[12]]]],[11,R[18],E,E,61,[[["self"]],[R[40]]]],[11,"from",E,E,114,[[[T]],[T]]],[11,"into",E,E,114,[[],[U]]],[11,R[11],E,E,114,[[[U]],[R[12]]]],[11,R[39],E,E,114,[[["self"]],[T]]],[11,R[13],E,E,114,[[["self"]],[T]]],[11,R[14],E,E,114,[[],[R[12]]]],[11,R[18],E,E,114,[[["self"]],[R[40]]]],[11,"from",R[4649],E,115,[[[T]],[T]]],[11,"into",E,E,115,[[],[U]]],[11,R[16],E,E,115,[[["self"]],[T]]],[11,R[17],E,E,115,[[[T],["self"]]]],[11,R[11],E,E,115,[[[U]],[R[12]]]],[11,R[39],E,E,115,[[["self"]],[T]]],[11,R[13],E,E,115,[[["self"]],[T]]],[11,R[14],E,E,115,[[],[R[12]]]],[11,R[18],E,E,115,[[["self"]],[R[40]]]],[11,"from",E,E,62,[[[T]],[T]]],[11,"into",E,E,62,[[],[U]]],[11,R[16],E,E,62,[[["self"]],[T]]],[11,R[17],E,E,62,[[[T],["self"]]]],[11,R[11],E,E,62,[[[U]],[R[12]]]],[11,R[39],E,E,62,[[["self"]],[T]]],[11,R[13],E,E,62,[[["self"]],[T]]],[11,R[14],E,E,62,[[],[R[12]]]],[11,R[18],E,E,62,[[["self"]],[R[40]]]],[11,"from",E,E,63,[[[T]],[T]]],[11,"into",E,E,63,[[],[U]]],[11,R[11],E,E,63,[[[U]],[R[12]]]],[11,R[39],E,E,63,[[["self"]],[T]]],[11,R[13],E,E,63,[[["self"]],[T]]],[11,R[14],E,E,63,[[],[R[12]]]],[11,R[18],E,E,63,[[["self"]],[R[40]]]],[11,"from",E,E,116,[[[T]],[T]]],[11,"into",E,E,116,[[],[U]]],[11,R[11],E,E,116,[[[U]],[R[12]]]],[11,R[39],E,E,116,[[["self"]],[T]]],[11,R[13],E,E,116,[[["self"]],[T]]],[11,R[14],E,E,116,[[],[R[12]]]],[11,R[18],E,E,116,[[["self"]],[R[40]]]],[11,"from",R[4650],E,117,[[[T]],[T]]],[11,"into",E,E,117,[[],[U]]],[11,R[16],E,E,117,[[["self"]],[T]]],[11,R[17],E,E,117,[[[T],["self"]]]],[11,R[11],E,E,117,[[[U]],[R[12]]]],[11,R[39],E,E,117,[[["self"]],[T]]],[11,R[13],E,E,117,[[["self"]],[T]]],[11,R[14],E,E,117,[[],[R[12]]]],[11,R[18],E,E,117,[[["self"]],[R[40]]]],[11,"from",E,E,64,[[[T]],[T]]],[11,"into",E,E,64,[[],[U]]],[11,R[16],E,E,64,[[["self"]],[T]]],[11,R[17],E,E,64,[[[T],["self"]]]],[11,R[11],E,E,64,[[[U]],[R[12]]]],[11,R[39],E,E,64,[[["self"]],[T]]],[11,R[13],E,E,64,[[["self"]],[T]]],[11,R[14],E,E,64,[[],[R[12]]]],[11,R[18],E,E,64,[[["self"]],[R[40]]]],[11,"from",E,E,65,[[[T]],[T]]],[11,"into",E,E,65,[[],[U]]],[11,R[11],E,E,65,[[[U]],[R[12]]]],[11,R[39],E,E,65,[[["self"]],[T]]],[11,R[13],E,E,65,[[["self"]],[T]]],[11,R[14],E,E,65,[[],[R[12]]]],[11,R[18],E,E,65,[[["self"]],[R[40]]]],[11,"from",E,E,118,[[[T]],[T]]],[11,"into",E,E,118,[[],[U]]],[11,R[11],E,E,118,[[[U]],[R[12]]]],[11,R[39],E,E,118,[[["self"]],[T]]],[11,R[13],E,E,118,[[["self"]],[T]]],[11,R[14],E,E,118,[[],[R[12]]]],[11,R[18],E,E,118,[[["self"]],[R[40]]]],[11,"from",R[4651],E,119,[[[T]],[T]]],[11,"into",E,E,119,[[],[U]]],[11,R[16],E,E,119,[[["self"]],[T]]],[11,R[17],E,E,119,[[[T],["self"]]]],[11,R[11],E,E,119,[[[U]],[R[12]]]],[11,R[39],E,E,119,[[["self"]],[T]]],[11,R[13],E,E,119,[[["self"]],[T]]],[11,R[14],E,E,119,[[],[R[12]]]],[11,R[18],E,E,119,[[["self"]],[R[40]]]],[11,"from",E,E,66,[[[T]],[T]]],[11,"into",E,E,66,[[],[U]]],[11,R[16],E,E,66,[[["self"]],[T]]],[11,R[17],E,E,66,[[[T],["self"]]]],[11,R[11],E,E,66,[[[U]],[R[12]]]],[11,R[39],E,E,66,[[["self"]],[T]]],[11,R[13],E,E,66,[[["self"]],[T]]],[11,R[14],E,E,66,[[],[R[12]]]],[11,R[18],E,E,66,[[["self"]],[R[40]]]],[11,"from",E,E,67,[[[T]],[T]]],[11,"into",E,E,67,[[],[U]]],[11,R[11],E,E,67,[[[U]],[R[12]]]],[11,R[39],E,E,67,[[["self"]],[T]]],[11,R[13],E,E,67,[[["self"]],[T]]],[11,R[14],E,E,67,[[],[R[12]]]],[11,R[18],E,E,67,[[["self"]],[R[40]]]],[11,"from",E,E,120,[[[T]],[T]]],[11,"into",E,E,120,[[],[U]]],[11,R[11],E,E,120,[[[U]],[R[12]]]],[11,R[39],E,E,120,[[["self"]],[T]]],[11,R[13],E,E,120,[[["self"]],[T]]],[11,R[14],E,E,120,[[],[R[12]]]],[11,R[18],E,E,120,[[["self"]],[R[40]]]],[11,"from",R[4652],E,121,[[[T]],[T]]],[11,"into",E,E,121,[[],[U]]],[11,R[16],E,E,121,[[["self"]],[T]]],[11,R[17],E,E,121,[[[T],["self"]]]],[11,R[11],E,E,121,[[[U]],[R[12]]]],[11,R[39],E,E,121,[[["self"]],[T]]],[11,R[13],E,E,121,[[["self"]],[T]]],[11,R[14],E,E,121,[[],[R[12]]]],[11,R[18],E,E,121,[[["self"]],[R[40]]]],[11,"from",E,E,68,[[[T]],[T]]],[11,"into",E,E,68,[[],[U]]],[11,R[16],E,E,68,[[["self"]],[T]]],[11,R[17],E,E,68,[[[T],["self"]]]],[11,R[11],E,E,68,[[[U]],[R[12]]]],[11,R[39],E,E,68,[[["self"]],[T]]],[11,R[13],E,E,68,[[["self"]],[T]]],[11,R[14],E,E,68,[[],[R[12]]]],[11,R[18],E,E,68,[[["self"]],[R[40]]]],[11,"from",E,E,69,[[[T]],[T]]],[11,"into",E,E,69,[[],[U]]],[11,R[11],E,E,69,[[[U]],[R[12]]]],[11,R[39],E,E,69,[[["self"]],[T]]],[11,R[13],E,E,69,[[["self"]],[T]]],[11,R[14],E,E,69,[[],[R[12]]]],[11,R[18],E,E,69,[[["self"]],[R[40]]]],[11,"from",E,E,70,[[[T]],[T]]],[11,"into",E,E,70,[[],[U]]],[11,R[11],E,E,70,[[[U]],[R[12]]]],[11,R[39],E,E,70,[[["self"]],[T]]],[11,R[13],E,E,70,[[["self"]],[T]]],[11,R[14],E,E,70,[[],[R[12]]]],[11,R[18],E,E,70,[[["self"]],[R[40]]]],[11,"from",R[4653],E,71,[[[T]],[T]]],[11,"into",E,E,71,[[],[U]]],[11,R[11],E,E,71,[[[U]],[R[12]]]],[11,R[39],E,E,71,[[["self"]],[T]]],[11,R[13],E,E,71,[[["self"]],[T]]],[11,R[14],E,E,71,[[],[R[12]]]],[11,R[18],E,E,71,[[["self"]],[R[40]]]],[11,"connect",E,E,71,[[["vatid"],["self"]],[["box",[R[4654]]],[R[52],["box"]]]]],[11,"accept",E,E,71,[[["self"]],[["promise",["box","error"]],["box",[R[4654]]],["error"]]]],[11,R[4655],E,E,71,[[["self"]],[["promise",["error"]],["error"]]]],[11,"eq",R[4646],E,54,[[["type"],["self"]],["bool"]]],[11,"eq",R[4621],E,57,[[["side"],["self"]],["bool"]]],[11,"clone",R[4630],E,79,[[["self"]],["owned"]]],[11,"clone",E,E,1,[[["self"]],["reader"]]],[11,"clone",R[4631],E,81,[[["self"]],["owned"]]],[11,"clone",E,E,3,[[["self"]],["reader"]]],[11,"clone",R[4575],E,82,[[["self"]],["owned"]]],[11,"clone",E,E,9,[[["self"]],["reader"]]],[11,"clone",R[4632],E,83,[[["self"]],["owned"]]],[11,"clone",E,E,7,[[["self"]],["reader"]]],[11,"clone",R[4633],E,85,[[["self"]],["owned"]]],[11,"clone",E,E,13,[[["self"]],["reader"]]],[11,"clone",R[4634],E,87,[[["self"]],["owned"]]],[11,"clone",E,E,15,[[["self"]],["reader"]]],[11,"clone",R[4635],E,89,[[["self"]],["owned"]]],[11,"clone",E,E,18,[[["self"]],["reader"]]],[11,"clone",R[4636],E,91,[[["self"]],["owned"]]],[11,"clone",E,E,20,[[["self"]],["reader"]]],[11,"clone",R[4594],E,93,[[["self"]],["owned"]]],[11,"clone",E,E,25,[[["self"]],["reader"]]],[11,"clone",R[4637],E,94,[[["self"]],["owned"]]],[11,"clone",E,E,23,[[["self"]],["reader"]]],[11,"clone",R[4638],E,96,[[["self"]],["owned"]]],[11,"clone",E,E,28,[[["self"]],["reader"]]],[11,"clone",R[4639],E,97,[[["self"]],["owned"]]],[11,"clone",E,E,31,[[["self"]],["reader"]]],[11,"clone",R[4640],E,98,[[["self"]],["owned"]]],[11,"clone",E,E,34,[[["self"]],["reader"]]],[11,"clone",R[4641],E,99,[[["self"]],["owned"]]],[11,"clone",E,E,38,[[["self"]],["reader"]]],[11,"clone",R[4642],E,101,[[["self"]],["owned"]]],[11,"clone",E,E,40,[[["self"]],["reader"]]],[11,"clone",R[4643],E,102,[[["self"]],["owned"]]],[11,"clone",E,E,44,[[["self"]],["reader"]]],[11,"clone",R[4614],E,104,[[["self"]],["owned"]]],[11,"clone",E,E,49,[[["self"]],["reader"]]],[11,"clone",R[4644],E,106,[[["self"]],["owned"]]],[11,"clone",E,E,47,[[["self"]],["reader"]]],[11,"clone",R[4645],E,108,[[["self"]],["owned"]]],[11,"clone",E,E,51,[[["self"]],["reader"]]],[11,"clone",R[4646],E,109,[[["self"]],["owned"]]],[11,"clone",E,E,55,[[["self"]],["reader"]]],[11,"clone",E,E,54,[[["self"]],["type"]]],[11,"clone",R[4621],E,57,[[["self"]],["side"]]],[11,"clone",R[4647],E,111,[[["self"]],["owned"]]],[11,"clone",E,E,58,[[["self"]],["reader"]]],[11,"clone",R[4648],E,113,[[["self"]],["owned"]]],[11,"clone",E,E,60,[[["self"]],["reader"]]],[11,"clone",R[4649],E,115,[[["self"]],["owned"]]],[11,"clone",E,E,62,[[["self"]],["reader"]]],[11,"clone",R[4650],E,117,[[["self"]],["owned"]]],[11,"clone",E,E,64,[[["self"]],["reader"]]],[11,"clone",R[4651],E,119,[[["self"]],["owned"]]],[11,"clone",E,E,66,[[["self"]],["reader"]]],[11,"clone",R[4652],E,121,[[["self"]],["owned"]]],[11,"clone",E,E,68,[[["self"]],["reader"]]],[11,R[2196],R[4630],E,1,[[["reader"],[R[2149]],["bool"]],[R[12]]]],[11,R[2196],R[4631],E,3,[[["reader"],[R[2149]],["bool"]],[R[12]]]],[11,R[2196],R[4575],E,9,[[[R[2149]],["bool"],["reader"]],[R[12]]]],[11,R[2196],R[4632],E,7,[[[R[2149]],["reader"],["bool"]],[R[12]]]],[11,R[2196],R[4633],E,13,[[[R[2149]],["reader"],["bool"]],[R[12]]]],[11,R[2196],R[4634],E,15,[[[R[2149]],["bool"],["reader"]],[R[12]]]],[11,R[2196],R[4635],E,18,[[[R[2149]],["reader"],["bool"]],[R[12]]]],[11,R[2196],R[4636],E,20,[[["reader"],[R[2149]],["bool"]],[R[12]]]],[11,R[2196],R[4594],E,25,[[[R[2149]],["reader"],["bool"]],[R[12]]]],[11,R[2196],R[4637],E,23,[[["reader"],[R[2149]],["bool"]],[R[12]]]],[11,R[2196],R[4638],E,28,[[[R[2149]],["reader"],["bool"]],[R[12]]]],[11,R[2196],R[4639],E,31,[[[R[2149]],["reader"],["bool"]],[R[12]]]],[11,R[2196],R[4640],E,34,[[["reader"],[R[2149]],["bool"]],[R[12]]]],[11,R[2196],R[4641],E,38,[[["reader"],[R[2149]],["bool"]],[R[12]]]],[11,R[2196],R[4642],E,40,[[[R[2149]],["bool"],["reader"]],[R[12]]]],[11,R[2196],R[4643],E,44,[[[R[2149]],["reader"],["bool"]],[R[12]]]],[11,R[2196],R[4614],E,49,[[[R[2149]],["reader"],["bool"]],[R[12]]]],[11,R[2196],R[4644],E,47,[[[R[2149]],["reader"],["bool"]],[R[12]]]],[11,R[2196],R[4645],E,51,[[[R[2149]],["reader"],["bool"]],[R[12]]]],[11,R[2196],R[4646],E,55,[[[R[2149]],["reader"],["bool"]],[R[12]]]],[11,R[2196],R[4647],E,58,[[[R[2149]],["reader"],["bool"]],[R[12]]]],[11,R[2196],R[4648],E,60,[[[R[2149]],["reader"],["bool"]],[R[12]]]],[11,R[2196],R[4649],E,62,[[[R[2149]],["reader"],["bool"]],[R[12]]]],[11,R[2196],R[4650],E,64,[[["reader"],[R[2149]],["bool"]],[R[12]]]],[11,R[2196],R[4651],E,66,[[[R[2149]],["reader"],["bool"]],[R[12]]]],[11,R[2196],R[4652],E,68,[[[R[2149]],["reader"],["bool"]],[R[12]]]],[11,R[2195],R[4630],E,2,[[[R[2149]],["u32"]],["builder"]]],[11,R[2168],E,E,2,[[[R[2149]]],[["builder"],[R[12],["builder"]]]]],[11,R[2195],R[4631],E,4,[[[R[2149]],["u32"]],["builder"]]],[11,R[2168],E,E,4,[[[R[2149]]],[["builder"],[R[12],["builder"]]]]],[11,R[2195],R[4575],E,10,[[[R[2149]],["u32"]],["builder"]]],[11,R[2168],E,E,10,[[[R[2149]]],[["builder"],[R[12],["builder"]]]]],[11,R[2195],R[4632],E,8,[[[R[2149]],["u32"]],["builder"]]],[11,R[2168],E,E,8,[[[R[2149]]],[[R[12],["builder"]],["builder"]]]],[11,R[2195],R[4633],E,14,[[[R[2149]],["u32"]],["builder"]]],[11,R[2168],E,E,14,[[[R[2149]]],[[R[12],["builder"]],["builder"]]]],[11,R[2195],R[4634],E,16,[[[R[2149]],["u32"]],["builder"]]],[11,R[2168],E,E,16,[[[R[2149]]],[[R[12],["builder"]],["builder"]]]],[11,R[2195],R[4635],E,19,[[[R[2149]],["u32"]],["builder"]]],[11,R[2168],E,E,19,[[[R[2149]]],[[R[12],["builder"]],["builder"]]]],[11,R[2195],R[4636],E,21,[[[R[2149]],["u32"]],["builder"]]],[11,R[2168],E,E,21,[[[R[2149]]],[["builder"],[R[12],["builder"]]]]],[11,R[2195],R[4594],E,26,[[[R[2149]],["u32"]],["builder"]]],[11,R[2168],E,E,26,[[[R[2149]]],[["builder"],[R[12],["builder"]]]]],[11,R[2195],R[4637],E,24,[[[R[2149]],["u32"]],["builder"]]],[11,R[2168],E,E,24,[[[R[2149]]],[[R[12],["builder"]],["builder"]]]],[11,R[2195],R[4638],E,29,[[[R[2149]],["u32"]],["builder"]]],[11,R[2168],E,E,29,[[[R[2149]]],[[R[12],["builder"]],["builder"]]]],[11,R[2195],R[4639],E,32,[[[R[2149]],["u32"]],["builder"]]],[11,R[2168],E,E,32,[[[R[2149]]],[["builder"],[R[12],["builder"]]]]],[11,R[2195],R[4640],E,35,[[[R[2149]],["u32"]],["builder"]]],[11,R[2168],E,E,35,[[[R[2149]]],[[R[12],["builder"]],["builder"]]]],[11,R[2195],R[4641],E,39,[[[R[2149]],["u32"]],["builder"]]],[11,R[2168],E,E,39,[[[R[2149]]],[["builder"],[R[12],["builder"]]]]],[11,R[2195],R[4642],E,41,[[[R[2149]],["u32"]],["builder"]]],[11,R[2168],E,E,41,[[[R[2149]]],[[R[12],["builder"]],["builder"]]]],[11,R[2195],R[4643],E,45,[[[R[2149]],["u32"]],["builder"]]],[11,R[2168],E,E,45,[[[R[2149]]],[[R[12],["builder"]],["builder"]]]],[11,R[2195],R[4614],E,50,[[[R[2149]],["u32"]],["builder"]]],[11,R[2168],E,E,50,[[[R[2149]]],[[R[12],["builder"]],["builder"]]]],[11,R[2195],R[4644],E,48,[[[R[2149]],["u32"]],["builder"]]],[11,R[2168],E,E,48,[[[R[2149]]],[[R[12],["builder"]],["builder"]]]],[11,R[2195],R[4645],E,52,[[[R[2149]],["u32"]],["builder"]]],[11,R[2168],E,E,52,[[[R[2149]]],[["builder"],[R[12],["builder"]]]]],[11,R[2195],R[4646],E,56,[[[R[2149]],["u32"]],["builder"]]],[11,R[2168],E,E,56,[[[R[2149]]],[[R[12],["builder"]],["builder"]]]],[11,R[2195],R[4647],E,59,[[[R[2149]],["u32"]],["builder"]]],[11,R[2168],E,E,59,[[[R[2149]]],[[R[12],["builder"]],["builder"]]]],[11,R[2195],R[4648],E,61,[[[R[2149]],["u32"]],["builder"]]],[11,R[2168],E,E,61,[[[R[2149]]],[["builder"],[R[12],["builder"]]]]],[11,R[2195],R[4649],E,63,[[[R[2149]],["u32"]],["builder"]]],[11,R[2168],E,E,63,[[[R[2149]]],[["builder"],[R[12],["builder"]]]]],[11,R[2195],R[4650],E,65,[[[R[2149]],["u32"]],["builder"]]],[11,R[2168],E,E,65,[[[R[2149]]],[[R[12],["builder"]],["builder"]]]],[11,R[2195],R[4651],E,67,[[[R[2149]],["u32"]],["builder"]]],[11,R[2168],E,E,67,[[[R[2149]]],[["builder"],[R[12],["builder"]]]]],[11,R[2195],R[4652],E,69,[[[R[2149]],["u32"]],["builder"]]],[11,R[2168],E,E,69,[[[R[2149]]],[["builder"],[R[12],["builder"]]]]],[11,R[2168],R[4630],E,1,[[[R[2144]]],[["reader"],[R[12],["reader"]]]]],[11,R[2168],R[4631],E,3,[[[R[2144]]],[["reader"],[R[12],["reader"]]]]],[11,R[2168],R[4575],E,9,[[[R[2144]]],[[R[12],["reader"]],["reader"]]]],[11,R[2168],R[4632],E,7,[[[R[2144]]],[["reader"],[R[12],["reader"]]]]],[11,R[2168],R[4633],E,13,[[[R[2144]]],[["reader"],[R[12],["reader"]]]]],[11,R[2168],R[4634],E,15,[[[R[2144]]],[[R[12],["reader"]],["reader"]]]],[11,R[2168],R[4635],E,18,[[[R[2144]]],[[R[12],["reader"]],["reader"]]]],[11,R[2168],R[4636],E,20,[[[R[2144]]],[["reader"],[R[12],["reader"]]]]],[11,R[2168],R[4594],E,25,[[[R[2144]]],[[R[12],["reader"]],["reader"]]]],[11,R[2168],R[4637],E,23,[[[R[2144]]],[["reader"],[R[12],["reader"]]]]],[11,R[2168],R[4638],E,28,[[[R[2144]]],[[R[12],["reader"]],["reader"]]]],[11,R[2168],R[4639],E,31,[[[R[2144]]],[["reader"],[R[12],["reader"]]]]],[11,R[2168],R[4640],E,34,[[[R[2144]]],[["reader"],[R[12],["reader"]]]]],[11,R[2168],R[4641],E,38,[[[R[2144]]],[["reader"],[R[12],["reader"]]]]],[11,R[2168],R[4642],E,40,[[[R[2144]]],[[R[12],["reader"]],["reader"]]]],[11,R[2168],R[4643],E,44,[[[R[2144]]],[["reader"],[R[12],["reader"]]]]],[11,R[2168],R[4614],E,49,[[[R[2144]]],[["reader"],[R[12],["reader"]]]]],[11,R[2168],R[4644],E,47,[[[R[2144]]],[[R[12],["reader"]],["reader"]]]],[11,R[2168],R[4645],E,51,[[[R[2144]]],[["reader"],[R[12],["reader"]]]]],[11,R[2168],R[4646],E,55,[[[R[2144]]],[["reader"],[R[12],["reader"]]]]],[11,R[2168],R[4647],E,58,[[[R[2144]]],[[R[12],["reader"]],["reader"]]]],[11,R[2168],R[4648],E,60,[[[R[2144]]],[["reader"],[R[12],["reader"]]]]],[11,R[2168],R[4649],E,62,[[[R[2144]]],[[R[12],["reader"]],["reader"]]]],[11,R[2168],R[4650],E,64,[[[R[2144]]],[["reader"],[R[12],["reader"]]]]],[11,R[2168],R[4651],E,66,[[[R[2144]]],[["reader"],[R[12],["reader"]]]]],[11,R[2168],R[4652],E,68,[[[R[2144]]],[[R[12],["reader"]],["reader"]]]],[11,"new",R[4630],E,80,[[[R[2188]]],[R[2188]]]],[11,"new",R[4631],E,5,[[[R[2188]]],[R[2188]]]],[11,"new",R[4575],E,11,[[[R[2188]]],[R[2188]]]],[11,"new",R[4632],E,84,[[[R[2188]]],[R[2188]]]],[11,"new",R[4633],E,86,[[[R[2188]]],[R[2188]]]],[11,"new",R[4634],E,88,[[[R[2188]]],[R[2188]]]],[11,"new",R[4635],E,90,[[[R[2188]]],[R[2188]]]],[11,"new",R[4636],E,92,[[[R[2188]]],[R[2188]]]],[11,"new",R[4594],E,27,[[[R[2188]]],[R[2188]]]],[11,"new",R[4637],E,95,[[[R[2188]]],[R[2188]]]],[11,"new",R[4638],E,30,[[[R[2188]]],[R[2188]]]],[11,"new",R[4639],E,33,[[[R[2188]]],[R[2188]]]],[11,"new",R[4640],E,36,[[[R[2188]]],[R[2188]]]],[11,"new",R[4641],E,100,[[[R[2188]]],[R[2188]]]],[11,"new",R[4642],E,42,[[[R[2188]]],[R[2188]]]],[11,"new",R[4643],E,103,[[[R[2188]]],[R[2188]]]],[11,"new",R[4614],E,105,[[[R[2188]]],[R[2188]]]],[11,"new",R[4644],E,107,[[[R[2188]]],[R[2188]]]],[11,"new",R[4645],E,53,[[[R[2188]]],[R[2188]]]],[11,"new",R[4646],E,110,[[[R[2188]]],[R[2188]]]],[11,"new",R[4647],E,112,[[[R[2188]]],[R[2188]]]],[11,"new",R[4648],E,114,[[[R[2188]]],[R[2188]]]],[11,"new",R[4649],E,116,[[[R[2188]]],[R[2188]]]],[11,"new",R[4650],E,118,[[[R[2188]]],[R[2188]]]],[11,"new",R[4651],E,120,[[[R[2188]]],[R[2188]]]],[11,"new",R[4652],E,70,[[[R[2188]]],[R[2188]]]],[11,"poll",R[4627],E,76,[[["self"]],["poll"]]],[11,"from_u16",R[4646],E,54,[[["u16"]],[[R[12],["type",R[2110]]],["type"],[R[2110]]]]],[11,"from_u16",R[4621],E,57,[[["u16"]],[[R[12],["side",R[2110]]],[R[2110]],["side"]]]],[11,"to_u16",R[4646],E,54,[[],["u16"]]],[11,"to_u16",R[4621],E,57,[[],["u16"]]],[11,"new_client",R[4627],E,78,[[["server"],["box",["server"]]],["client"]]],[11,R[4656],R[4630],E,1,[[],[R[2145]]]],[11,R[4656],R[4631],E,3,[[],[R[2145]]]],[11,R[4656],R[4575],E,9,[[],[R[2145]]]],[11,R[4656],R[4632],E,7,[[],[R[2145]]]],[11,R[4656],R[4633],E,13,[[],[R[2145]]]],[11,R[4656],R[4634],E,15,[[],[R[2145]]]],[11,R[4656],R[4635],E,18,[[],[R[2145]]]],[11,R[4656],R[4636],E,20,[[],[R[2145]]]],[11,R[4656],R[4594],E,25,[[],[R[2145]]]],[11,R[4656],R[4637],E,23,[[],[R[2145]]]],[11,R[4656],R[4638],E,28,[[],[R[2145]]]],[11,R[4656],R[4639],E,31,[[],[R[2145]]]],[11,R[4656],R[4640],E,34,[[],[R[2145]]]],[11,R[4656],R[4641],E,38,[[],[R[2145]]]],[11,R[4656],R[4642],E,40,[[],[R[2145]]]],[11,R[4656],R[4643],E,44,[[],[R[2145]]]],[11,R[4656],R[4614],E,49,[[],[R[2145]]]],[11,R[4656],R[4644],E,47,[[],[R[2145]]]],[11,R[4656],R[4645],E,51,[[],[R[2145]]]],[11,R[4656],R[4646],E,55,[[],[R[2145]]]],[11,R[4656],R[4647],E,58,[[],[R[2145]]]],[11,R[4656],R[4648],E,60,[[],[R[2145]]]],[11,R[4656],R[4649],E,62,[[],[R[2145]]]],[11,R[4656],R[4650],E,64,[[],[R[2145]]]],[11,R[4656],R[4651],E,66,[[],[R[2145]]]],[11,R[4656],R[4652],E,68,[[],[R[2145]]]],[11,"new",R[4630],E,1,[[[R[2145]]],["reader"]]],[11,"new",R[4631],E,3,[[[R[2145]]],["reader"]]],[11,"new",R[4575],E,9,[[[R[2145]]],["reader"]]],[11,"new",R[4632],E,7,[[[R[2145]]],["reader"]]],[11,"new",R[4633],E,13,[[[R[2145]]],["reader"]]],[11,"new",R[4634],E,15,[[[R[2145]]],["reader"]]],[11,"new",R[4635],E,18,[[[R[2145]]],["reader"]]],[11,"new",R[4636],E,20,[[[R[2145]]],["reader"]]],[11,"new",R[4594],E,25,[[[R[2145]]],["reader"]]],[11,"new",R[4637],E,23,[[[R[2145]]],["reader"]]],[11,"new",R[4638],E,28,[[[R[2145]]],["reader"]]],[11,"new",R[4639],E,31,[[[R[2145]]],["reader"]]],[11,"new",R[4640],E,34,[[[R[2145]]],["reader"]]],[11,"new",R[4641],E,38,[[[R[2145]]],["reader"]]],[11,"new",R[4642],E,40,[[[R[2145]]],["reader"]]],[11,"new",R[4643],E,44,[[[R[2145]]],["reader"]]],[11,"new",R[4614],E,49,[[[R[2145]]],["reader"]]],[11,"new",R[4644],E,47,[[[R[2145]]],["reader"]]],[11,"new",R[4645],E,51,[[[R[2145]]],["reader"]]],[11,"new",R[4646],E,55,[[[R[2145]]],["reader"]]],[11,"new",R[4647],E,58,[[[R[2145]]],["reader"]]],[11,"new",R[4648],E,60,[[[R[2145]]],["reader"]]],[11,"new",R[4649],E,62,[[[R[2145]]],["reader"]]],[11,"new",R[4650],E,64,[[[R[2145]]],["reader"]]],[11,"new",R[4651],E,66,[[[R[2145]]],["reader"]]],[11,"new",R[4652],E,68,[[[R[2145]]],["reader"]]],[11,"new",R[4630],E,2,[[[R[2150]]],["builder"]]],[11,"new",R[4631],E,4,[[[R[2150]]],["builder"]]],[11,"new",R[4575],E,10,[[[R[2150]]],["builder"]]],[11,"new",R[4632],E,8,[[[R[2150]]],["builder"]]],[11,"new",R[4633],E,14,[[[R[2150]]],["builder"]]],[11,"new",R[4634],E,16,[[[R[2150]]],["builder"]]],[11,"new",R[4635],E,19,[[[R[2150]]],["builder"]]],[11,"new",R[4636],E,21,[[[R[2150]]],["builder"]]],[11,"new",R[4594],E,26,[[[R[2150]]],["builder"]]],[11,"new",R[4637],E,24,[[[R[2150]]],["builder"]]],[11,"new",R[4638],E,29,[[[R[2150]]],["builder"]]],[11,"new",R[4639],E,32,[[[R[2150]]],["builder"]]],[11,"new",R[4640],E,35,[[[R[2150]]],["builder"]]],[11,"new",R[4641],E,39,[[[R[2150]]],["builder"]]],[11,"new",R[4642],E,41,[[[R[2150]]],["builder"]]],[11,"new",R[4643],E,45,[[[R[2150]]],["builder"]]],[11,"new",R[4614],E,50,[[[R[2150]]],["builder"]]],[11,"new",R[4644],E,48,[[[R[2150]]],["builder"]]],[11,"new",R[4645],E,52,[[[R[2150]]],["builder"]]],[11,"new",R[4646],E,56,[[[R[2150]]],["builder"]]],[11,"new",R[4647],E,59,[[[R[2150]]],["builder"]]],[11,"new",R[4648],E,61,[[[R[2150]]],["builder"]]],[11,"new",R[4649],E,63,[[[R[2150]]],["builder"]]],[11,"new",R[4650],E,65,[[[R[2150]]],["builder"]]],[11,"new",R[4651],E,67,[[[R[2150]]],["builder"]]],[11,"new",R[4652],E,69,[[[R[2150]]],["builder"]]],[11,R[4657],R[4630],E,2,[[],[R[2151]]]],[11,R[4657],R[4631],E,4,[[],[R[2151]]]],[11,R[4657],R[4575],E,10,[[],[R[2151]]]],[11,R[4657],R[4632],E,8,[[],[R[2151]]]],[11,R[4657],R[4633],E,14,[[],[R[2151]]]],[11,R[4657],R[4634],E,16,[[],[R[2151]]]],[11,R[4657],R[4635],E,19,[[],[R[2151]]]],[11,R[4657],R[4636],E,21,[[],[R[2151]]]],[11,R[4657],R[4594],E,26,[[],[R[2151]]]],[11,R[4657],R[4637],E,24,[[],[R[2151]]]],[11,R[4657],R[4638],E,29,[[],[R[2151]]]],[11,R[4657],R[4639],E,32,[[],[R[2151]]]],[11,R[4657],R[4640],E,35,[[],[R[2151]]]],[11,R[4657],R[4641],E,39,[[],[R[2151]]]],[11,R[4657],R[4642],E,41,[[],[R[2151]]]],[11,R[4657],R[4643],E,45,[[],[R[2151]]]],[11,R[4657],R[4614],E,50,[[],[R[2151]]]],[11,R[4657],R[4644],E,48,[[],[R[2151]]]],[11,R[4657],R[4645],E,52,[[],[R[2151]]]],[11,R[4657],R[4646],E,56,[[],[R[2151]]]],[11,R[4657],R[4647],E,59,[[],[R[2151]]]],[11,R[4657],R[4648],E,61,[[],[R[2151]]]],[11,R[4657],R[4649],E,63,[[],[R[2151]]]],[11,R[4657],R[4650],E,65,[[],[R[2151]]]],[11,R[4657],R[4651],E,67,[[],[R[2151]]]],[11,R[4657],R[4652],E,69,[[],[R[2151]]]],[11,"imbue",R[4630],E,1,[[["self"],[R[4658]]]]],[11,"imbue",R[4631],E,3,[[["self"],[R[4658]]]]],[11,"imbue",R[4575],E,9,[[["self"],[R[4658]]]]],[11,"imbue",R[4632],E,7,[[["self"],[R[4658]]]]],[11,"imbue",R[4633],E,13,[[["self"],[R[4658]]]]],[11,"imbue",R[4634],E,15,[[["self"],[R[4658]]]]],[11,"imbue",R[4635],E,18,[[["self"],[R[4658]]]]],[11,"imbue",R[4636],E,20,[[["self"],[R[4658]]]]],[11,"imbue",R[4594],E,25,[[["self"],[R[4658]]]]],[11,"imbue",R[4637],E,23,[[["self"],[R[4658]]]]],[11,"imbue",R[4638],E,28,[[["self"],[R[4658]]]]],[11,"imbue",R[4639],E,31,[[["self"],[R[4658]]]]],[11,"imbue",R[4640],E,34,[[["self"],[R[4658]]]]],[11,"imbue",R[4641],E,38,[[["self"],[R[4658]]]]],[11,"imbue",R[4642],E,40,[[["self"],[R[4658]]]]],[11,"imbue",R[4643],E,44,[[["self"],[R[4658]]]]],[11,"imbue",R[4614],E,49,[[["self"],[R[4658]]]]],[11,"imbue",R[4644],E,47,[[["self"],[R[4658]]]]],[11,"imbue",R[4645],E,51,[[["self"],[R[4658]]]]],[11,"imbue",R[4646],E,55,[[["self"],[R[4658]]]]],[11,"imbue",R[4647],E,58,[[["self"],[R[4658]]]]],[11,"imbue",R[4648],E,60,[[["self"],[R[4658]]]]],[11,"imbue",R[4649],E,62,[[["self"],[R[4658]]]]],[11,"imbue",R[4650],E,64,[[["self"],[R[4658]]]]],[11,"imbue",R[4651],E,66,[[["self"],[R[4658]]]]],[11,"imbue",R[4652],E,68,[[["self"],[R[4658]]]]],[11,R[4659],R[4630],E,2,[[[R[4658]],["self"]]]],[11,R[4659],R[4631],E,4,[[[R[4658]],["self"]]]],[11,R[4659],R[4575],E,10,[[[R[4658]],["self"]]]],[11,R[4659],R[4632],E,8,[[[R[4658]],["self"]]]],[11,R[4659],R[4633],E,14,[[[R[4658]],["self"]]]],[11,R[4659],R[4634],E,16,[[[R[4658]],["self"]]]],[11,R[4659],R[4635],E,19,[[[R[4658]],["self"]]]],[11,R[4659],R[4636],E,21,[[[R[4658]],["self"]]]],[11,R[4659],R[4594],E,26,[[[R[4658]],["self"]]]],[11,R[4659],R[4637],E,24,[[[R[4658]],["self"]]]],[11,R[4659],R[4638],E,29,[[[R[4658]],["self"]]]],[11,R[4659],R[4639],E,32,[[[R[4658]],["self"]]]],[11,R[4659],R[4640],E,35,[[[R[4658]],["self"]]]],[11,R[4659],R[4641],E,39,[[[R[4658]],["self"]]]],[11,R[4659],R[4642],E,41,[[[R[4658]],["self"]]]],[11,R[4659],R[4643],E,45,[[[R[4658]],["self"]]]],[11,R[4659],R[4614],E,50,[[[R[4658]],["self"]]]],[11,R[4659],R[4644],E,48,[[[R[4658]],["self"]]]],[11,R[4659],R[4645],E,52,[[[R[4658]],["self"]]]],[11,R[4659],R[4646],E,56,[[[R[4658]],["self"]]]],[11,R[4659],R[4647],E,59,[[[R[4658]],["self"]]]],[11,R[4659],R[4648],E,61,[[[R[4658]],["self"]]]],[11,R[4659],R[4649],E,63,[[[R[4658]],["self"]]]],[11,R[4659],R[4650],E,65,[[[R[4658]],["self"]]]],[11,R[4659],R[4651],E,67,[[[R[4658]],["self"]]]],[11,R[4659],R[4652],E,69,[[[R[4658]],["self"]]]],[11,R[18],R[4630],E,1,[[],["u64"]]],[11,R[18],E,E,2,[[],["u64"]]],[11,R[18],R[4631],E,3,[[],["u64"]]],[11,R[18],E,E,4,[[],["u64"]]],[11,R[18],R[4575],E,9,[[],["u64"]]],[11,R[18],E,E,10,[[],["u64"]]],[11,R[18],R[4632],E,7,[[],["u64"]]],[11,R[18],E,E,8,[[],["u64"]]],[11,R[18],R[4633],E,13,[[],["u64"]]],[11,R[18],E,E,14,[[],["u64"]]],[11,R[18],R[4634],E,15,[[],["u64"]]],[11,R[18],E,E,16,[[],["u64"]]],[11,R[18],R[4635],E,18,[[],["u64"]]],[11,R[18],E,E,19,[[],["u64"]]],[11,R[18],R[4636],E,20,[[],["u64"]]],[11,R[18],E,E,21,[[],["u64"]]],[11,R[18],R[4594],E,25,[[],["u64"]]],[11,R[18],E,E,26,[[],["u64"]]],[11,R[18],R[4637],E,23,[[],["u64"]]],[11,R[18],E,E,24,[[],["u64"]]],[11,R[18],R[4638],E,28,[[],["u64"]]],[11,R[18],E,E,29,[[],["u64"]]],[11,R[18],R[4639],E,31,[[],["u64"]]],[11,R[18],E,E,32,[[],["u64"]]],[11,R[18],R[4640],E,34,[[],["u64"]]],[11,R[18],E,E,35,[[],["u64"]]],[11,R[18],R[4641],E,38,[[],["u64"]]],[11,R[18],E,E,39,[[],["u64"]]],[11,R[18],R[4642],E,40,[[],["u64"]]],[11,R[18],E,E,41,[[],["u64"]]],[11,R[18],R[4643],E,44,[[],["u64"]]],[11,R[18],E,E,45,[[],["u64"]]],[11,R[18],R[4614],E,49,[[],["u64"]]],[11,R[18],E,E,50,[[],["u64"]]],[11,R[18],R[4644],E,47,[[],["u64"]]],[11,R[18],E,E,48,[[],["u64"]]],[11,R[18],R[4645],E,51,[[],["u64"]]],[11,R[18],E,E,52,[[],["u64"]]],[11,R[18],R[4646],E,55,[[],["u64"]]],[11,R[18],E,E,56,[[],["u64"]]],[11,R[18],E,E,54,[[],["u64"]]],[11,R[18],R[4621],E,57,[[],["u64"]]],[11,R[18],R[4647],E,58,[[],["u64"]]],[11,R[18],E,E,59,[[],["u64"]]],[11,R[18],R[4648],E,60,[[],["u64"]]],[11,R[18],E,E,61,[[],["u64"]]],[11,R[18],R[4649],E,62,[[],["u64"]]],[11,R[18],E,E,63,[[],["u64"]]],[11,R[18],R[4650],E,64,[[],["u64"]]],[11,R[18],E,E,65,[[],["u64"]]],[11,R[18],R[4651],E,66,[[],["u64"]]],[11,R[18],E,E,67,[[],["u64"]]],[11,R[18],R[4652],E,68,[[],["u64"]]],[11,R[18],E,E,69,[[],["u64"]]]],"p":[[4,"Which"],[3,"Reader"],[3,"Builder"],[3,"Reader"],[3,"Builder"],[3,R[4571]],[4,"Which"],[3,"Reader"],[3,"Builder"],[3,"Reader"],[3,"Builder"],[3,R[4571]],[4,"Which"],[3,"Reader"],[3,"Builder"],[3,"Reader"],[3,"Builder"],[4,"Which"],[3,"Reader"],[3,"Builder"],[3,"Reader"],[3,"Builder"],[4,"Which"],[3,"Reader"],[3,"Builder"],[3,"Reader"],[3,"Builder"],[3,R[4571]],[3,"Reader"],[3,"Builder"],[3,R[4571]],[3,"Reader"],[3,"Builder"],[3,R[4571]],[3,"Reader"],[3,"Builder"],[3,R[4571]],[4,"Which"],[3,"Reader"],[3,"Builder"],[3,"Reader"],[3,"Builder"],[3,R[4571]],[4,"Which"],[3,"Reader"],[3,"Builder"],[4,"Which"],[3,"Reader"],[3,"Builder"],[3,"Reader"],[3,"Builder"],[3,"Reader"],[3,"Builder"],[3,R[4571]],[4,"Type"],[3,"Reader"],[3,"Builder"],[4,"Side"],[3,"Reader"],[3,"Builder"],[3,"Reader"],[3,"Builder"],[3,"Reader"],[3,"Builder"],[3,"Reader"],[3,"Builder"],[3,"Reader"],[3,"Builder"],[3,"Reader"],[3,"Builder"],[3,R[4571]],[3,R[4660]],[8,R[4661]],[8,R[4662]],[8,"Connection"],[8,R[4660]],[3,"RpcSystem"],[3,R[4663]],[3,"Server"],[3,"Owned"],[3,R[4571]],[3,"Owned"],[3,"Owned"],[3,"Owned"],[3,R[4571]],[3,"Owned"],[3,R[4571]],[3,"Owned"],[3,R[4571]],[3,"Owned"],[3,R[4571]],[3,"Owned"],[3,R[4571]],[3,"Owned"],[3,"Owned"],[3,R[4571]],[3,"Owned"],[3,"Owned"],[3,"Owned"],[3,"Owned"],[3,R[4571]],[3,"Owned"],[3,"Owned"],[3,R[4571]],[3,"Owned"],[3,R[4571]],[3,"Owned"],[3,R[4571]],[3,"Owned"],[3,"Owned"],[3,R[4571]],[3,"Owned"],[3,R[4571]],[3,"Owned"],[3,R[4571]],[3,"Owned"],[3,R[4571]],[3,"Owned"],[3,R[4571]],[3,"Owned"],[3,R[4571]],[3,"Owned"]]};
searchIndex[R[503]]={"doc":"Asynchronous synchronization primitives.","i":[[0,"mpsc",R[503],R[5374],N,N],[3,R[145],R[516],R[5375],N,N],[3,"Sender",E,R[5376],N,N],[3,R[147],E,R[5377],N,N],[3,R[146],E,R[5378],N,N],[5,R[533],E,R[5379],N,[[[R[9]]]]],[5,R[5380],E,R[5381],N,[[]]],[11,"close",E,R[504],0,[[["self"]]]],[11,R[532],E,R[5382],1,[[["self"]],[[R[139]],["poll",[R[139]]]]]],[11,R[531],E,R[5383],1,[[["self"],[T]],[[R[138]],[R[12],[R[138]]]]]],[11,"close",E,R[504],2,[[["self"]]]],[11,R[531],E,R[5384],3,[[["self"],[T]],[[R[12],[R[505]]],[R[505]]]]],[0,"error",E,R[5385],N,N],[3,R[506],R[517],R[5386],N,N],[3,R[148],E,R[5387],N,N],[3,R[216],E,R[5388],N,N],[3,R[527],E,R[5389],N,N],[3,R[525],E,R[5390],N,N],[3,R[526],E,R[5391],N,N],[0,"oneshot",R[503],R[5392],N,N],[3,"Sender",R[507],R[5393],N,N],[3,R[145],E,R[5394],N,N],[5,R[533],E,R[5395],N,[[]]],[0,"error",E,R[5396],N,N],[3,R[506],R[518],R[5397],N,N],[3,R[528],E,R[5398],N,N],[11,"send",R[507],R[162],4,[[[T]],[R[12]]]],[11,R[515],E,R[508],4,[[["self"]],["poll"]]],[11,R[140],E,R[508],4,[[["self"]],["bool"]]],[11,"close",E,R[5399],5,[[["self"]]]],[11,"try_recv",E,R[5400],5,[[["self"]],[[R[509]],[R[12],[R[509]]]]]],[0,R[510],R[503],"Thread-safe, asynchronous counting semaphore.",N,N],[3,R[523],R[519],"Futures-aware semaphore.",N,N],[3,"Permit",E,"A semaphore permit",N,N],[3,R[529],E,"Error returned by `Permit::poll_acquire`.",N,N],[3,R[524],E,"Error returned by `Permit::try_acquire`.",N,N],[11,"new",E,"Creates a new semaphore with the initial number of permits",6,[[[R[9]]],[R[510]]]],[11,"available_permits",E,"Returns the current number of available permits",6,[[["self"]],[R[9]]]],[11,"close",E,"Close the semaphore. This prevents the semaphore from…",6,[[["self"]]]],[11,"add_permits",E,"Add `n` new permits to the semaphore.",6,[[["self"],[R[9]]]]],[11,"new",E,"Create a new `Permit`.",7,[[],["permit"]]],[11,"is_acquired",E,"Returns true if the permit has been acquired",7,[[["self"]],["bool"]]],[11,"poll_acquire",E,"Try to acquire the permit. If no permits are available,…",7,[[[R[510]],["self"]],[[R[511]],["poll",[R[511]]]]]],[11,"try_acquire",E,"Try to acquire the permit.",7,[[[R[510]],["self"]],[[R[12],[R[512]]],[R[512]]]]],[11,"release",E,"Release a permit back to the semaphore",7,[[[R[510]],["self"]]]],[11,"forget",E,"Forget the permit without releasing it back to the…",7,[[["self"]]]],[11,R[140],E,"Returns true if the error was caused by a closed semaphore.",8,[[["self"]],["bool"]]],[11,"is_no_permits",E,"Returns true if the error was caused by calling…",8,[[["self"]],["bool"]]],[0,"task",R[503],"Thread-safe task notification primitives.",N,N],[3,R[227],R[520],R[530],N,N],[11,"new",E,R[534],9,[[],[R[535]]]],[11,R[540],E,R[536],9,[[["self"]]]],[11,R[537],E,R[538],9,[[["self"],["task"]]]],[11,"notify",E,R[539],9,[[["self"]]]],[11,"take_task",E,"Attempts to take the `Task` value out of the `AtomicTask`…",9,[[["self"]],[[R[52],["task"]],["task"]]]],[0,"watch",R[503],R[5401],N,N],[3,R[145],R[513],R[5402],N,N],[3,"Sender",E,R[5403],N,N],[3,"Ref",E,R[5404],N,N],[5,R[533],E,R[5405],N,[[[T]]]],[0,"error",E,R[5406],N,N],[3,R[506],R[521],R[5407],N,N],[3,R[148],E,R[5408],N,N],[11,R[110],R[513],R[5409],10,[[["self"]],["ref"]]],[11,"poll_ref",E,R[5410],10,[[["self"]],[[R[514]],[R[52],["ref"]],["poll",[R[52],R[514]]]]]],[11,R[2030],E,R[5411],11,[[["self"],[T]],[[R[139]],[R[12],[R[139]]]]]],[11,R[515],E,R[5412],11,[[["self"]],["poll"]]],[11,"from",R[516],E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,[[[T],["self"]]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[17],E,E,3,[[[T],["self"]]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"from",R[517],E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[170],E,E,12,[[["self"]],["string"]]],[11,R[11],E,E,12,[[[U]],[R[12]]]],[11,R[39],E,E,12,[[["self"]],[T]]],[11,R[13],E,E,12,[[["self"]],[T]]],[11,R[14],E,E,12,[[],[R[12]]]],[11,R[18],E,E,12,[[["self"]],[R[40]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[170],E,E,13,[[["self"]],["string"]]],[11,R[11],E,E,13,[[[U]],[R[12]]]],[11,R[39],E,E,13,[[["self"]],[T]]],[11,R[13],E,E,13,[[["self"]],[T]]],[11,R[14],E,E,13,[[],[R[12]]]],[11,R[18],E,E,13,[[["self"]],[R[40]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[170],E,E,14,[[["self"]],["string"]]],[11,R[11],E,E,14,[[[U]],[R[12]]]],[11,R[39],E,E,14,[[["self"]],[T]]],[11,R[13],E,E,14,[[["self"]],[T]]],[11,R[14],E,E,14,[[],[R[12]]]],[11,R[18],E,E,14,[[["self"]],[R[40]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[170],E,E,15,[[["self"]],["string"]]],[11,R[11],E,E,15,[[[U]],[R[12]]]],[11,R[39],E,E,15,[[["self"]],[T]]],[11,R[13],E,E,15,[[["self"]],[T]]],[11,R[14],E,E,15,[[],[R[12]]]],[11,R[18],E,E,15,[[["self"]],[R[40]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[170],E,E,16,[[["self"]],["string"]]],[11,R[11],E,E,16,[[[U]],[R[12]]]],[11,R[39],E,E,16,[[["self"]],[T]]],[11,R[13],E,E,16,[[["self"]],[T]]],[11,R[14],E,E,16,[[],[R[12]]]],[11,R[18],E,E,16,[[["self"]],[R[40]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[170],E,E,17,[[["self"]],["string"]]],[11,R[11],E,E,17,[[[U]],[R[12]]]],[11,R[39],E,E,17,[[["self"]],[T]]],[11,R[13],E,E,17,[[["self"]],[T]]],[11,R[14],E,E,17,[[],[R[12]]]],[11,R[18],E,E,17,[[["self"]],[R[40]]]],[11,"from",R[507],E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,R[18],E,E,5,[[["self"]],[R[40]]]],[11,R[99],E,E,5,[[],["f"]]],[11,"from",R[518],E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[170],E,E,18,[[["self"]],["string"]]],[11,R[11],E,E,18,[[[U]],[R[12]]]],[11,R[39],E,E,18,[[["self"]],[T]]],[11,R[13],E,E,18,[[["self"]],[T]]],[11,R[14],E,E,18,[[],[R[12]]]],[11,R[18],E,E,18,[[["self"]],[R[40]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[170],E,E,19,[[["self"]],["string"]]],[11,R[11],E,E,19,[[[U]],[R[12]]]],[11,R[39],E,E,19,[[["self"]],[T]]],[11,R[13],E,E,19,[[["self"]],[T]]],[11,R[14],E,E,19,[[],[R[12]]]],[11,R[18],E,E,19,[[["self"]],[R[40]]]],[11,"from",R[519],E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[11],E,E,6,[[[U]],[R[12]]]],[11,R[39],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[],[R[12]]]],[11,R[18],E,E,6,[[["self"]],[R[40]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[11],E,E,7,[[[U]],[R[12]]]],[11,R[39],E,E,7,[[["self"]],[T]]],[11,R[13],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[],[R[12]]]],[11,R[18],E,E,7,[[["self"]],[R[40]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[170],E,E,20,[[["self"]],["string"]]],[11,R[11],E,E,20,[[[U]],[R[12]]]],[11,R[39],E,E,20,[[["self"]],[T]]],[11,R[13],E,E,20,[[["self"]],[T]]],[11,R[14],E,E,20,[[],[R[12]]]],[11,R[18],E,E,20,[[["self"]],[R[40]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[170],E,E,8,[[["self"]],["string"]]],[11,R[11],E,E,8,[[[U]],[R[12]]]],[11,R[39],E,E,8,[[["self"]],[T]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[],[R[12]]]],[11,R[18],E,E,8,[[["self"]],[R[40]]]],[11,"from",R[520],E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[11],E,E,9,[[[U]],[R[12]]]],[11,R[39],E,E,9,[[["self"]],[T]]],[11,R[13],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[],[R[12]]]],[11,R[18],E,E,9,[[["self"]],[R[40]]]],[11,"from",R[513],E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[16],E,E,10,[[["self"]],[T]]],[11,R[17],E,E,10,[[[T],["self"]]]],[11,R[11],E,E,10,[[[U]],[R[12]]]],[11,R[39],E,E,10,[[["self"]],[T]]],[11,R[13],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[],[R[12]]]],[11,R[18],E,E,10,[[["self"]],[R[40]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[11],E,E,11,[[[U]],[R[12]]]],[11,R[39],E,E,11,[[["self"]],[T]]],[11,R[13],E,E,11,[[["self"]],[T]]],[11,R[14],E,E,11,[[],[R[12]]]],[11,R[18],E,E,11,[[["self"]],[R[40]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[11],E,E,21,[[[U]],[R[12]]]],[11,R[39],E,E,21,[[["self"]],[T]]],[11,R[13],E,E,21,[[["self"]],[T]]],[11,R[14],E,E,21,[[],[R[12]]]],[11,R[18],E,E,21,[[["self"]],[R[40]]]],[11,"from",R[521],E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[170],E,E,22,[[["self"]],["string"]]],[11,R[11],E,E,22,[[[U]],[R[12]]]],[11,R[39],E,E,22,[[["self"]],[T]]],[11,R[13],E,E,22,[[["self"]],[T]]],[11,R[14],E,E,22,[[],[R[12]]]],[11,R[18],E,E,22,[[["self"]],[R[40]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[170],E,E,23,[[["self"]],["string"]]],[11,R[11],E,E,23,[[[U]],[R[12]]]],[11,R[39],E,E,23,[[["self"]],[T]]],[11,R[13],E,E,23,[[["self"]],[T]]],[11,R[14],E,E,23,[[],[R[12]]]],[11,R[18],E,E,23,[[["self"]],[R[40]]]],[11,"clone",R[516],E,1,[[["self"]],["self"]]],[11,"clone",E,E,3,[[["self"]],["self"]]],[11,"clone",R[513],E,10,[[["self"]],["self"]]],[11,"from",R[517],E,13,[[],[R[138]]]],[11,"from",E,E,16,[[],[R[505]]]],[11,"drop",R[507],E,4,[[["self"]]]],[11,"drop",E,E,5,[[["self"]]]],[11,"drop",R[513],E,10,[[["self"]]]],[11,"drop",E,E,11,[[["self"]]]],[11,R[79],R[520],E,9,[[],["self"]]],[11,"fmt",R[516],E,1,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[517],E,12,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,13,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,14,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[516],E,3,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,2,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[517],E,15,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,16,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,17,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[507],E,4,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,5,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[518],E,18,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,19,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[519],E,7,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,20,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,8,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,6,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[520],E,9,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[513],E,10,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,11,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,21,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[521],E,22,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,23,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[517],E,12,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,13,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,14,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,15,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,16,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,17,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[518],E,18,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,19,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[519],E,20,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,8,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[521],E,22,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,23,[[["self"],[R[29]]],[R[12]]]],[11,"deref",R[513],E,21,[[["self"]],[T]]],[11,R[30],R[517],E,12,[[["self"]],["str"]]],[11,R[30],E,E,13,[[["self"]],["str"]]],[11,R[30],E,E,14,[[["self"]],["str"]]],[11,R[30],E,E,15,[[["self"]],["str"]]],[11,R[30],E,E,16,[[["self"]],["str"]]],[11,R[30],E,E,17,[[["self"]],["str"]]],[11,R[30],R[518],E,18,[[["self"]],["str"]]],[11,R[30],E,E,19,[[["self"]],["str"]]],[11,R[30],R[519],E,20,[[["self"]],["str"]]],[11,R[30],E,E,8,[[["self"]],["str"]]],[11,R[30],R[521],E,22,[[["self"]],["str"]]],[11,R[30],E,E,23,[[["self"]],["str"]]],[11,"poll",R[507],E,5,[[["self"]],[[R[514]],["poll",[R[514]]]]]],[11,"poll",R[516],E,0,[[["self"]],[["poll",[R[52]]],[R[52]]]]],[11,"poll",E,E,2,[[["self"]],[["poll",[R[52]]],[R[52]]]]],[11,"poll",R[513],E,10,[[["self"]],[[R[514]],[R[52]],["poll",[R[52],R[514]]]]]],[11,R[181],R[516],E,1,[[["self"],[T]],[R[182]]]],[11,R[183],E,E,1,[[["self"]],["poll"]]],[11,"close",E,E,1,[[["self"]],["poll"]]],[11,R[181],E,E,3,[[["self"],[T]],[R[182]]]],[11,R[183],E,E,3,[[["self"]],["poll"]]],[11,"close",E,E,3,[[["self"]],["poll"]]],[11,R[181],R[513],E,11,[[["self"],[T]],[[R[182],[R[139]]],[R[139]]]]],[11,R[183],E,E,11,[[["self"]],[[R[139]],["poll",[R[139]]]]]],[11,R[46],R[517],R[522],13,[[],[T]]],[11,R[140],E,R[5413],13,[[["self"]],["bool"]]],[11,"is_full",E,R[5414],13,[[["self"]],["bool"]]],[11,R[46],E,R[522],16,[[],[T]]]],"p":[[3,R[145]],[3,"Sender"],[3,R[147]],[3,R[146]],[3,"Sender"],[3,R[145]],[3,R[523]],[3,"Permit"],[3,R[524]],[3,R[227]],[3,R[145]],[3,"Sender"],[3,R[148]],[3,R[216]],[3,R[506]],[3,R[525]],[3,R[526]],[3,R[527]],[3,R[506]],[3,R[528]],[3,R[529]],[3,"Ref"],[3,R[506]],[3,R[148]]]};
searchIndex[R[541]]={"doc":"This crate provides multiple mechanisms for interrupting a…","i":[[3,R[546],R[541],R[547],N,N],[3,"Tripwire",E,"A `Tripwire` is a convenient mechanism for implementing…",N,N],[3,"Valve",E,"A `Valve` is associated with a [`Trigger`], and can be…",N,N],[3,"Valved",E,"A `Valved` is wrapper around a `Stream` that enables the…",N,N],[3,"Trigger",E,"A handle to a set of cancellable streams.",N,N],[11,"new",E,"Make a new `Tripwire` and an associated [`Trigger`].",0,[[]]],[11,"new",E,"Make a new `Valve` and an associated [`Trigger`].",1,[[]]],[11,"wrap",E,"Wrap the given `stream` with this `Valve`.",1,[[["s"],["self"]],["valved"]]],[11,"new",E,"Make the given stream cancellable.",2,[[["s"]]]],[8,R[545],E,"This `Stream` extension trait provides a `take_until`…",N,N],[11,R[543],E,R[544],3,[[[U]],[R[542]]]],[11,"cancel",E,"Cancel all associated streams, and make them immediately…",4,[[]]],[11,"disable",E,"Disable the `Trigger`, and leave all associated streams…",4,[[]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[16],E,E,5,[[["self"]],[T]]],[11,R[17],E,E,5,[[[T],["self"]]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,R[18],E,E,5,[[["self"]],[R[40]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[[T],["self"]]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,R[99],E,E,0,[[],["f"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,[[[T],["self"]]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[17],E,E,2,[[[T],["self"]]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,"clone",E,E,5,[[["self"]],[R[542]]]],[11,"clone",E,E,0,[[["self"]],["tripwire"]]],[11,"clone",E,E,1,[[["self"]],["valve"]]],[11,"clone",E,E,2,[[["self"]],["valved"]]],[11,"drop",E,E,4,[[["self"]]]],[11,"fmt",E,E,5,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,0,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,1,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,2,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,4,[[[R[29]],["self"]],[R[12]]]],[11,"poll",E,E,0,[[["self"]],[["async"],[R[12],["async"]]]]],[11,"poll",E,E,5,[[["self"]],[[R[52]],["poll",[R[52]]]]]],[11,"poll",E,E,2,[[["self"]],[[R[52]],["poll",[R[52]]]]]],[11,R[543],E,R[544],3,[[[U]],[R[542]]]]],"p":[[3,"Tripwire"],[3,"Valve"],[3,"Valved"],[8,R[545]],[3,"Trigger"],[3,R[546]]]};
searchIndex[R[560]]={"doc":"This crate provides a robust regular expression parser.","i":[[3,"Parser",R[560],"A convenience parser for regular expressions.",N,N],[3,R[577],E,R[578],N,N],[4,"Error",E,"This error type encompasses any error that can be returned…",N,N],[13,"Parse",E,"An error that occurred while translating concrete syntax…",0,N],[13,"Translate",E,"An error that occurred while translating abstract syntax…",0,N],[5,"escape",E,R[3548],N,[[["str"]],["string"]]],[5,"escape_into",E,"Escapes all meta characters in `text` and writes the…",N,[[["string"],["str"]]]],[5,"is_meta_character",E,"Returns true if the give character has significance in a…",N,[[["char"]],["bool"]]],[5,"is_word_character",E,"Returns true if and only if the given character is a…",N,[[["char"]],["bool"]]],[5,"is_word_byte",E,"Returns true if and only if the given character is an…",N,[[["u8"]],["bool"]]],[0,"ast",E,"Defines an abstract syntax for regular expressions.",N,N],[3,"Error",R[562],"An error that occurred while parsing a regular expression…",N,N],[3,"Span",E,"Span represents the position information of a single AST…",N,N],[12,"start",E,"The start byte offset.",1,N],[12,"end",E,"The end byte offset.",1,N],[3,"Position",E,"A single position in a regular expression.",N,N],[12,"offset",E,"The absolute offset of this position, starting at `0` from…",2,N],[12,"line",E,"The line number, starting at `1`.",2,N],[12,"column",E,"The approximate column number, starting at `1`.",2,N],[3,R[701],E,"An abstract syntax tree for a singular expression along…",N,N],[12,"ast",E,"The actual ast.",3,N],[12,"comments",E,"All comments found in the original regular expression.",3,N],[3,"Comment",E,"A comment from a regular expression with an associated span.",N,N],[12,"span",E,"The span of this comment, including the beginning `#` and…",4,N],[12,"comment",E,"The comment text, starting with the first character…",4,N],[3,R[569],E,R[570],N,N],[12,"span",E,"The span of this alternation.",5,N],[12,"asts",E,"The alternate regular expressions.",5,N],[3,"Concat",E,R[571],N,N],[12,"span",E,"The span of this concatenation.",6,N],[12,"asts",E,"The concatenation regular expressions.",6,N],[3,R[602],E,"A single literal expression.",N,N],[12,"span",E,"The span of this literal.",7,N],[12,"kind",E,"The kind of this literal.",7,N],[12,"c",E,"The Unicode scalar value corresponding to this literal.",7,N],[3,R[702],E,"A Perl character class.",N,N],[12,"span",E,R[561],8,N],[12,"kind",E,"The kind of Perl class.",8,N],[12,"negated",E,"Whether the class is negated or not. e.g., `\\d` is not…",8,N],[3,R[703],E,"An ASCII character class.",N,N],[12,"span",E,R[561],9,N],[12,"kind",E,"The kind of ASCII class.",9,N],[12,"negated",E,"Whether the class is negated or not. e.g., `[[:alpha:]]`…",9,N],[3,R[585],E,"A Unicode character class.",N,N],[12,"span",E,R[561],10,N],[12,"negated",E,"Whether this class is negated or not.",10,N],[12,"kind",E,"The kind of Unicode class.",10,N],[3,R[704],E,"A bracketed character class, e.g., `[a-z0-9]`.",N,N],[12,"span",E,R[561],11,N],[12,"negated",E,"Whether this class is negated or not. e.g., `[a]` is not…",11,N],[12,"kind",E,"The type of this set. A set is either a normal union of…",11,N],[3,R[705],E,"A single character class range in a set.",N,N],[12,"span",E,"The span of this range.",12,N],[12,"start",E,"The start of this range.",12,N],[12,"end",E,"The end of this range.",12,N],[3,R[706],E,"A union of items inside a character class set.",N,N],[12,"span",E,"The span of the items in this operation. e.g., the…",13,N],[12,"items",E,"The sequence of items that make up this union.",13,N],[3,R[707],E,"A Unicode character class set operation.",N,N],[12,"span",E,"The span of this operation. e.g., the `a-z--[h-p]` in…",14,N],[12,"kind",E,"The type of this set operation.",14,N],[12,"lhs",E,"The left hand side of the operation.",14,N],[12,"rhs",E,"The right hand side of the operation.",14,N],[3,R[565],E,R[566],N,N],[12,"span",E,"The span of this assertion.",15,N],[12,"kind",E,"The assertion kind, e.g., `\\b` or `^`.",15,N],[3,R[567],E,"A repetition operation applied to a regular expression.",N,N],[12,"span",E,"The span of this operation.",16,N],[12,"op",E,"The actual operation.",16,N],[12,"greedy",E,"Whether this operation was applied greedily or not.",16,N],[12,"ast",E,"The regular expression under repetition.",16,N],[3,R[708],E,"The repetition operator itself.",N,N],[12,"span",E,"The span of this operator. This includes things like `+`,…",17,N],[12,"kind",E,"The type of operation.",17,N],[3,"Group",E,R[568],N,N],[12,"span",E,"The span of this group.",18,N],[12,"kind",E,"The kind of this group.",18,N],[12,"ast",E,"The regular expression in this group.",18,N],[3,R[576],E,"A capture name.",N,N],[12,"span",E,"The span of this capture name.",19,N],[12,"name",E,"The capture name.",19,N],[12,"index",E,"The capture index.",19,N],[3,"SetFlags",E,"A group of flags that is not applied to a particular…",N,N],[12,"span",E,"The span of these flags, including the grouping parentheses.",20,N],[12,"flags",E,"The actual sequence of flags.",20,N],[3,"Flags",E,"A group of flags.",N,N],[12,"span",E,"The span of this group of flags.",21,N],[12,"items",E,"A sequence of flag items. Each item is either a flag or a…",21,N],[3,R[709],E,"A single item in a group of flags.",N,N],[12,"span",E,"The span of this item.",22,N],[12,"kind",E,"The kind of this item.",22,N],[4,R[32],E,"The type of an error that occurred while building an AST.",N,N],[13,"CaptureLimitExceeded",E,"The capturing group limit was exceeded.",23,N],[13,"ClassEscapeInvalid",E,"An invalid escape sequence was found in a character class…",23,N],[13,"ClassRangeInvalid",E,"An invalid character class range was found. An invalid…",23,N],[13,"ClassRangeLiteral",E,"An invalid range boundary was found in a character class.…",23,N],[13,"ClassUnclosed",E,"An opening `[` was found with no corresponding closing `]`.",23,N],[13,"DecimalEmpty",E,"An empty decimal number was given where one was expected.",23,N],[13,"DecimalInvalid",E,"An invalid decimal number was given where one was expected.",23,N],[13,"EscapeHexEmpty",E,"A bracketed hex literal was empty.",23,N],[13,"EscapeHexInvalid",E,"A bracketed hex literal did not correspond to a Unicode…",23,N],[13,"EscapeHexInvalidDigit",E,"An invalid hexadecimal digit was found.",23,N],[13,"EscapeUnexpectedEof",E,"EOF was found before an escape sequence was completed.",23,N],[13,"EscapeUnrecognized",E,"An unrecognized escape sequence.",23,N],[13,"FlagDanglingNegation",E,"A dangling negation was used when setting flags, e.g., `i-`.",23,N],[13,"FlagDuplicate",E,"A flag was used twice, e.g., `i-i`.",23,N],[12,R[564],R[563],"The position of the original flag. The error position…",23,N],[13,"FlagRepeatedNegation",R[562],"The negation operator was used twice, e.g., `-i-s`.",23,N],[12,R[564],R[563],"The position of the original negation operator. The error…",23,N],[13,"FlagUnexpectedEof",R[562],"Expected a flag but got EOF, e.g., `(?`.",23,N],[13,"FlagUnrecognized",E,"Unrecognized flag, e.g., `a`.",23,N],[13,"GroupNameDuplicate",E,"A duplicate capture name was found.",23,N],[12,R[564],R[563],"The position of the initial occurrence of the capture…",23,N],[13,"GroupNameEmpty",R[562],"A capture group name is empty, e.g., `(?P<>abc)`.",23,N],[13,"GroupNameInvalid",E,"An invalid character was seen for a capture group name.…",23,N],[13,"GroupNameUnexpectedEof",E,"A closing `>` could not be found for a capture group name.",23,N],[13,"GroupUnclosed",E,"An unclosed group, e.g., `(ab`.",23,N],[13,"GroupUnopened",E,"An unopened group, e.g., `ab)`.",23,N],[13,"NestLimitExceeded",E,"The nest limit was exceeded. The limit stored here is the…",23,N],[13,"RepetitionCountInvalid",E,"The range provided in a counted repetition operator is…",23,N],[13,"RepetitionCountUnclosed",E,"An opening `{` was found with no corresponding closing `}`.",23,N],[13,"RepetitionMissing",E,"A repetition operator was applied to a missing…",23,N],[13,"UnsupportedBackreference",E,"When octal support is disabled, this error is produced…",23,N],[13,"UnsupportedLookAround",E,"When syntax similar to PCRE's look-around is used, this…",23,N],[4,"Ast",E,"An abstract syntax tree for a single regular expression.",N,N],[13,"Empty",E,"An empty regex that matches everything.",24,N],[13,"Flags",E,"A set of flags, e.g., `(?is)`.",24,N],[13,R[602],E,"A single character literal, which includes escape sequences.",24,N],[13,"Dot",E,"The \"any character\" class.",24,N],[13,R[565],E,R[566],24,N],[13,"Class",E,"A single character class. This includes all forms of…",24,N],[13,R[567],E,"A repetition operator applied to an arbitrary regular…",24,N],[13,"Group",E,R[568],24,N],[13,R[569],E,R[570],24,N],[13,"Concat",E,R[571],24,N],[4,R[710],E,"The kind of a single literal expression.",N,N],[13,"Verbatim",E,"The literal is written verbatim, e.g., `a` or `☃`.",25,N],[13,"Punctuation",E,"The literal is written as an escape because it is…",25,N],[13,"Octal",E,"The literal is written as an octal escape, e.g., `\\141`.",25,N],[13,"HexFixed",E,"The literal is written as a hex code with a fixed number…",25,N],[13,"HexBrace",E,"The literal is written as a hex code with a bracketed…",25,N],[13,"Special",E,"The literal is written as a specially recognized escape,…",25,N],[4,R[711],E,"The type of a special literal.",N,N],[13,"Bell",E,"Bell, spelled `\\a` (`\\x07`).",26,N],[13,"FormFeed",E,"Form feed, spelled `\\f` (`\\x0C`).",26,N],[13,"Tab",E,"Tab, spelled `\\t` (`\\x09`).",26,N],[13,"LineFeed",E,"Line feed, spelled `\\n` (`\\x0A`).",26,N],[13,"CarriageReturn",E,"Carriage return, spelled `\\r` (`\\x0D`).",26,N],[13,"VerticalTab",E,"Vertical tab, spelled `\\v` (`\\x0B`).",26,N],[13,"Space",E,"Space, spelled `\\` (`\\x20`). Note that this can only…",26,N],[4,R[712],E,"The type of a Unicode hex literal.",N,N],[13,"X",E,"A `\\x` prefix. When used without brackets, this form is…",27,N],[13,"UnicodeShort",E,"A `\\u` prefix. When used without brackets, this form is…",27,N],[13,"UnicodeLong",E,"A `\\U` prefix. When used without brackets, this form is…",27,N],[4,"Class",E,"A single character class expression.",N,N],[13,R[590],E,R[572],28,N],[13,"Perl",E,R[573],28,N],[13,R[574],E,R[575],28,N],[4,R[713],E,"The available Perl character classes.",N,N],[13,"Digit",E,"Decimal numbers.",29,N],[13,"Space",E,"Whitespace.",29,N],[13,"Word",E,"Word characters.",29,N],[4,R[714],E,"The available ASCII character classes.",N,N],[13,"Alnum",E,"`[0-9A-Za-z]`",30,N],[13,"Alpha",E,"`[A-Za-z]`",30,N],[13,"Ascii",E,"`[\\x00-\\x7F]`",30,N],[13,"Blank",E,"`[ \\t]`",30,N],[13,"Cntrl",E,"`[\\x00-\\x1F\\x7F]`",30,N],[13,"Digit",E,"`[0-9]`",30,N],[13,"Graph",E,"`[!-~]`",30,N],[13,"Lower",E,"`[a-z]`",30,N],[13,"Print",E,"`[ -~]`",30,N],[13,"Punct",E,"`[!-/:-@\\[-`{-~]`",30,N],[13,"Space",E,"`[\\t\\n\\v\\f\\r ]`",30,N],[13,"Upper",E,"`[A-Z]`",30,N],[13,"Word",E,"`[0-9A-Za-z_]`",30,N],[13,"Xdigit",E,"`[0-9A-Fa-f]`",30,N],[4,R[715],E,"The available forms of Unicode character classes.",N,N],[13,"OneLetter",E,"A one letter abbreviated class, e.g., `\\pN`.",31,N],[13,"Named",E,"A binary property, general category or script. The string…",31,N],[13,"NamedValue",E,"A property name and an associated value.",31,N],[12,"op","regex_syntax::ast::ClassUnicodeKind","The type of Unicode op used to associate `name` with…",31,N],[12,"name",E,"The property name (which may be empty).",31,N],[12,"value",E,"The property value (which may be empty).",31,N],[4,R[716],R[562],"The type of op used in a Unicode character class.",N,N],[13,"Equal",E,"A property set to a specific value, e.g.,…",32,N],[13,"Colon",E,"A property set to a specific value using a colon, e.g.,…",32,N],[13,"NotEqual",E,"A property that isn't a particular value, e.g.,…",32,N],[4,"ClassSet",E,"A character class set.",N,N],[13,"Item",E,"An item, which can be a single literal, range, nested…",33,N],[13,"BinaryOp",E,"A single binary operation (i.e., &&, -- or ~~).",33,N],[4,R[717],E,"A single component of a character class set.",N,N],[13,"Empty",E,"An empty item.",34,N],[13,R[602],E,"A single literal.",34,N],[13,"Range",E,"A range between two literals.",34,N],[13,"Ascii",E,"An ASCII character class, e.g., `[:alnum:]` or `[:punct:]`.",34,N],[13,R[590],E,R[572],34,N],[13,"Perl",E,R[573],34,N],[13,R[574],E,R[575],34,N],[13,"Union",E,"A union of items.",34,N],[4,R[718],E,"The type of a Unicode character class set operation.",N,N],[13,"Intersection",E,"The intersection of two sets, e.g., `\\pN&&[a-z]`.",35,N],[13,"Difference",E,"The difference of two sets, e.g., `\\pN--[0-9]`.",35,N],[13,"SymmetricDifference",E,"The symmetric difference of two sets. The symmetric…",35,N],[4,R[719],E,"An assertion kind.",N,N],[13,R[588],E,"`^`",36,N],[13,"EndLine",E,"`$`",36,N],[13,R[589],E,"`\\A`",36,N],[13,"EndText",E,"`\\z`",36,N],[13,R[586],E,"`\\b`",36,N],[13,"NotWordBoundary",E,"`\\B`",36,N],[4,R[595],E,R[596],N,N],[13,R[597],E,"`?`",37,N],[13,R[598],E,"`*`",37,N],[13,R[599],E,"`+`",37,N],[13,"Range",E,"`{m,n}`",37,N],[4,R[600],E,"A range repetition operator.",N,N],[13,"Exactly",E,"`{m}`",38,N],[13,"AtLeast",E,"`{m,}`",38,N],[13,"Bounded",E,"`{m,n}`",38,N],[4,R[591],E,"The kind of a group.",N,N],[13,R[592],E,"`(a)`",39,N],[13,R[576],E,"`(?P<name>a)`",39,N],[13,R[593],E,"`(?:a)` and `(?i:a)`",39,N],[4,R[720],E,"The kind of an item in a group of flags.",N,N],[13,"Negation",E,"A negation operator applied to all subsequent flags in the…",40,N],[13,"Flag",E,"A single flag in a group.",40,N],[4,"Flag",E,"A single flag.",N,N],[13,R[2800],E,"`i`",41,N],[13,"MultiLine",E,"`m`",41,N],[13,"DotMatchesNewLine",E,"`s`",41,N],[13,"SwapGreed",E,"`U`",41,N],[13,R[590],E,"`u`",41,N],[13,"IgnoreWhitespace",E,"`x`",41,N],[5,"visit",E,R[601],N,[[["visitor"],["ast"]],[R[12]]]],[0,"parse",E,"This module provides a regular expression parser.",N,N],[3,R[577],R[653],R[578],N,N],[3,"Parser",E,"A regular expression parser.",N,N],[11,"new",E,R[639],42,[[],[R[579]]]],[11,"build",E,R[640],42,[[["self"]],["parser"]]],[11,R[641],E,R[642],42,[[["u32"],["self"]],[R[579]]]],[11,"octal",E,R[643],42,[[["self"],["bool"]],[R[579]]]],[11,R[645],E,R[646],42,[[["self"],["bool"]],[R[579]]]],[11,"new",E,R[652],43,[[],["parser"]]],[11,"parse",E,"Parse the regular expression into an abstract syntax tree.",43,[[["str"],["self"]],[[R[12],["ast","error"]],["error"],["ast"]]]],[11,"parse_with_comments",E,"Parse the regular expression and return an abstract syntax…",43,[[["str"],["self"]],[[R[580]],["error"],[R[12],[R[580],"error"]]]]],[0,"print",R[562],"This module provides a regular expression printer for `Ast`.",N,N],[3,"Printer",R[654],"A printer for a regular expression abstract syntax tree.",N,N],[11,"new",E,R[604],44,[[],["printer"]]],[11,"print",E,R[605],44,[[["write"],["self"],["ast"]],[R[12]]]],[8,"Visitor",R[562],"A trait for visiting an abstract syntax tree (AST) in…",N,N],[16,"Output",E,"The result of visiting an AST.",45,N],[16,"Err",E,"An error that visiting an AST might return.",45,N],[10,"finish",E,R[609],45,[[],[R[12]]]],[11,"start",E,R[683],45,[[["self"]]]],[11,R[610],E,R[684],45,[[["self"],["ast"]],[R[12]]]],[11,R[611],E,R[685],45,[[["self"],["ast"]],[R[12]]]],[11,R[612],E,R[686],45,[[["self"]],[R[12]]]],[11,R[687],E,R[688],45,[[["self"],[R[581]]],[R[12]]]],[11,R[689],E,R[690],45,[[["self"],[R[581]]],[R[12]]]],[11,R[691],E,R[692],45,[[[R[582]],["self"]],[R[12]]]],[11,R[693],E,R[694],45,[[[R[582]],["self"]],[R[12]]]],[11,R[695],E,R[696],45,[[[R[582]],["self"]],[R[12]]]],[11,"kind",E,R[613],46,[[["self"]],[R[1]]]],[11,R[274],E,R[614],46,[[["self"]],["str"]]],[11,"span",E,R[615],46,[[["self"]],["span"]]],[11,"auxiliary_span",E,"Return an auxiliary span. This span exists only for some…",46,[[["self"]],[["span"],[R[52],["span"]]]]],[11,"new",E,"Create a new span with the given positions.",1,[[[R[583]]],["span"]]],[11,"splat",E,"Create a new span using the given position as the start…",1,[[[R[583]]],["span"]]],[11,"with_start",E,"Create a new span by replacing the starting the position…",1,[[[R[583]]],["span"]]],[11,"with_end",E,"Create a new span by replacing the ending the position…",1,[[[R[583]]],["span"]]],[11,"is_one_line",E,"Returns true if and only if this span occurs on a single…",1,[[["self"]],["bool"]]],[11,R[69],E,"Returns true if and only if this span is empty. That is,…",1,[[["self"]],["bool"]]],[11,"new",E,"Create a new position with the given information.",2,[[[R[9]]],[R[583]]]],[11,"span",E,"Return the span of this abstract syntax tree.",24,[[["self"]],["span"]]],[11,R[69],E,"Return true if and only if this Ast is empty.",24,[[["self"]],["bool"]]],[11,"into_ast",E,"Return this alternation as an AST.",5,[[],["ast"]]],[11,"into_ast",E,"Return this concatenation as an AST.",6,[[],["ast"]]],[11,"byte",E,"If this literal was written as a `\\x` hex escape, then…",7,[[["self"]],[["u8"],[R[52],["u8"]]]]],[11,"digits",E,"The number of digits that must be used with this literal…",27,[[["self"]],["u32"]]],[11,"span",E,"Return the span of this character class.",28,[[["self"]],["span"]]],[11,"from_name",E,"Return the corresponding ClassAsciiKind variant for the…",30,[[["str"]],[[R[584]],[R[52],[R[584]]]]]],[11,R[637],E,"Returns true if this class has been negated.",10,[[["self"]],["bool"]]],[11,"is_equal",E,"Whether the op is an equality op or not.",32,[[["self"]],["bool"]]],[11,"union",E,"Build a set from a union.",33,[[[R[666]]],[R[664]]]],[11,"span",E,"Return the span of this character class set.",33,[[["self"]],["span"]]],[11,"span",E,"Return the span of this character class set item.",34,[[["self"]],["span"]]],[11,"is_valid",E,"Returns true if and only if this character class range is…",12,[[["self"]],["bool"]]],[11,"push",E,"Push a new item in this union.",13,[[["self"],[R[581]]]]],[11,"into_item",E,"Return this union as a character class set item.",13,[[],[R[581]]]],[11,"is_valid",E,"Returns true if and only if this repetition range is valid.",38,[[["self"]],["bool"]]],[11,"flags",E,"If this group is non-capturing, then this returns the…",18,[[["self"]],[[R[52],["flags"]],["flags"]]]],[11,"is_capturing",E,"Returns true if and only if this group is capturing.",18,[[["self"]],["bool"]]],[11,"capture_index",E,"Returns the capture index of this group, if this is a…",18,[[["self"]],[["u32"],[R[52],["u32"]]]]],[11,"add_item",E,"Add the given item to this sequence of flags.",21,[[["self"],[R[673]]],[[R[52],[R[9]]],[R[9]]]]],[11,"flag_state",E,"Returns the state of the given flag in this set.",21,[[["self"],["flag"]],[[R[52],["bool"]],["bool"]]]],[11,"is_negation",E,"Returns true if and only if this item is a negation…",40,[[["self"]],["bool"]]],[0,"hir",R[560],"Defines a high-level intermediate representation for…",N,N],[3,"Error",R[594],"An error that can occur while translating an `Ast` to a…",N,N],[3,"Hir",E,"A high-level intermediate representation (HIR) for a…",N,N],[3,R[585],E,R[587],N,N],[3,R[726],E,"An iterator over all ranges in a Unicode character class.",N,N],[3,R[723],E,"A single range of characters represented by Unicode scalar…",N,N],[3,R[724],E,"A set of characters represented by arbitrary bytes (where…",N,N],[3,R[727],E,"An iterator over all ranges in a byte character class.",N,N],[3,R[725],E,"A single range of characters represented by arbitrary bytes.",N,N],[3,"Group",E,"The high-level intermediate representation for a group.",N,N],[12,"kind",E,"The kind of this group. If it is a capturing group, then…",47,N],[12,"hir",E,"The expression inside the capturing group, which may be…",47,N],[3,R[567],E,"The high-level intermediate representation of a repetition…",N,N],[12,"kind",E,"The kind of this repetition operator.",48,N],[12,"greedy",E,"Whether this repetition operator is greedy or not. A…",48,N],[12,"hir",E,"The expression being repeated.",48,N],[4,R[32],E,"The type of an error that occurred while building an `Hir`.",N,N],[13,"UnicodeNotAllowed",E,"This error occurs when a Unicode feature is used when…",49,N],[13,R[2031],E,"This error occurs when translating a pattern that could…",49,N],[13,"UnicodePropertyNotFound",E,"This occurs when an unrecognized Unicode property name…",49,N],[13,"UnicodePropertyValueNotFound",E,"This occurs when an unrecognized Unicode property value…",49,N],[13,"EmptyClassNotAllowed",E,"This occurs when the translator attempts to construct a…",49,N],[4,"HirKind",E,"The kind of an arbitrary `Hir` expression.",N,N],[13,"Empty",E,"The empty regular expression, which matches everything,…",50,N],[13,R[602],E,"A single literal character that matches exactly this…",50,N],[13,"Class",E,"A single character class that matches any of the…",50,N],[13,"Anchor",E,"An anchor assertion. An anchor assertion match always has…",50,N],[13,R[586],E,"A word boundary assertion, which may or may not be Unicode…",50,N],[13,R[567],E,"A repetition operation applied to a child expression.",50,N],[13,"Group",E,"A possibly capturing group, which contains a child…",50,N],[13,"Concat",E,"A concatenation of expressions. A concatenation always has…",50,N],[13,R[569],E,"An alternation of expressions. An alternation always has…",50,N],[4,R[602],E,"The high-level intermediate representation of a literal.",N,N],[13,R[590],E,"A single character represented by a Unicode scalar value.",51,N],[13,"Byte",E,"A single character represented by an arbitrary byte.",51,N],[4,"Class",E,"The high-level intermediate representation of a character…",N,N],[13,R[590],E,R[587],52,N],[13,"Bytes",E,"A set of characters represented by arbitrary bytes (one…",52,N],[4,"Anchor",E,"The high-level intermediate representation for an anchor…",N,N],[13,R[588],E,"Match the beginning of a line or the beginning of text.…",53,N],[13,"EndLine",E,"Match the end of a line or the end of text. Specifically,…",53,N],[13,R[589],E,"Match the beginning of text. Specifically, this matches at…",53,N],[13,"EndText",E,"Match the end of text. Specifically, this matches at the…",53,N],[4,R[586],E,"The high-level intermediate representation for a…",N,N],[13,R[590],E,"Match a Unicode-aware word boundary. That is, this matches…",54,N],[13,"UnicodeNegate",E,"Match a Unicode-aware negation of a word boundary.",54,N],[13,"Ascii",E,"Match an ASCII-only word boundary. That is, this matches a…",54,N],[13,"AsciiNegate",E,"Match an ASCII-only negation of a word boundary.",54,N],[4,R[591],E,"The kind of group.",N,N],[13,R[592],E,"A normal unnamed capturing group.",55,N],[13,R[576],E,"A named capturing group.",55,N],[12,"name","regex_syntax::hir::GroupKind","The name of the group.",55,N],[12,"index",E,"The capture index of the group.",55,N],[13,R[593],R[594],"A non-capturing group.",55,N],[4,R[595],E,R[596],N,N],[13,R[597],E,"Matches a sub-expression zero or one times.",56,N],[13,R[598],E,"Matches a sub-expression zero or more times.",56,N],[13,R[599],E,"Matches a sub-expression one or more times.",56,N],[13,"Range",E,"Matches a sub-expression within a bounded range of times.",56,N],[4,R[600],E,"The kind of a counted repetition operator.",N,N],[13,"Exactly",E,"Matches a sub-expression exactly this many times.",57,N],[13,"AtLeast",E,"Matches a sub-expression at least this many times.",57,N],[13,"Bounded",E,"Matches a sub-expression at least `m` times and at most…",57,N],[5,"visit",E,R[601],N,[[["visitor"],["hir"]],[R[12]]]],[0,R[616],E,"Provides routines for extracting literal prefixes and…",N,N],[3,"Literals",R[655],"A set of literal byte strings extracted from a regular…",N,N],[3,R[602],E,"A single member of a set of literals extracted from a…",N,N],[11,"empty",E,"Returns a new empty set of literals using default limits.",58,[[],[R[603]]]],[11,"prefixes",E,"Returns a set of literal prefixes extracted from the given…",58,[[["hir"]],[R[603]]]],[11,"suffixes",E,"Returns a set of literal suffixes extracted from the given…",58,[[["hir"]],[R[603]]]],[11,"limit_size",E,"Get the approximate size limit (in bytes) of this set.",58,[[["self"]],[R[9]]]],[11,"set_limit_size",E,"Set the approximate size limit (in bytes) of this set.",58,[[["self"],[R[9]]],[R[603]]]],[11,"limit_class",E,"Get the character class size limit for this set.",58,[[["self"]],[R[9]]]],[11,"set_limit_class",E,"Limits the size of character(or byte) classes considered.",58,[[["self"],[R[9]]],[R[603]]]],[11,R[603],E,"Returns the set of literals as a slice. Its order is…",58,[[["self"]]]],[11,"min_len",E,"Returns the length of the smallest literal.",58,[[["self"]],[[R[52],[R[9]]],[R[9]]]]],[11,"all_complete",E,"Returns true if all members in this set are complete.",58,[[["self"]],["bool"]]],[11,"any_complete",E,"Returns true if any member in this set is complete.",58,[[["self"]],["bool"]]],[11,"contains_empty",E,"Returns true if this set contains an empty literal.",58,[[["self"]],["bool"]]],[11,R[69],E,"Returns true if this set is empty or if all of its members…",58,[[["self"]],["bool"]]],[11,"to_empty",E,"Returns a new empty set of literals using this set's limits.",58,[[["self"]],[R[603]]]],[11,"longest_common_prefix",E,"Returns the longest common prefix of all members in this…",58,[[["self"]]]],[11,"longest_common_suffix",E,"Returns the longest common suffix of all members in this…",58,[[["self"]]]],[11,"trim_suffix",E,"Returns a new set of literals with the given number of…",58,[[["self"],[R[9]]],[[R[603]],[R[52],[R[603]]]]]],[11,"unambiguous_prefixes",E,"Returns a new set of prefixes of this set of literals that…",58,[[["self"]],[R[603]]]],[11,"unambiguous_suffixes",E,"Returns a new set of suffixes of this set of literals that…",58,[[["self"]],[R[603]]]],[11,"union_prefixes",E,"Unions the prefixes from the given expression to this set.",58,[[["self"],["hir"]],["bool"]]],[11,"union_suffixes",E,"Unions the suffixes from the given expression to this set.",58,[[["self"],["hir"]],["bool"]]],[11,"union",E,"Unions this set with another set.",58,[[[R[603]],["self"]],["bool"]]],[11,"cross_product",E,"Extends this set with another set.",58,[[[R[603]],["self"]],["bool"]]],[11,"cross_add",E,"Extends each literal in this set with the bytes given.",58,[[["self"]],["bool"]]],[11,"add",E,"Adds the given literal to this set.",58,[[[R[616]],["self"]],["bool"]]],[11,"add_char_class",E,"Extends each literal in this set with the character class…",58,[[["self"],[R[621]]],["bool"]]],[11,"add_byte_class",E,"Extends each literal in this set with the byte class given.",58,[[["self"],[R[625]]],["bool"]]],[11,"cut",E,"Cuts every member of this set. When a member is cut, it…",58,[[["self"]]]],[11,"reverse",E,"Reverses all members in place.",58,[[["self"]]]],[11,"clear",E,"Clears this set of all members.",58,[[["self"]]]],[11,"new",E,"Returns a new complete literal with the bytes given.",59,[[["u8"],["vec",["u8"]]],[R[616]]]],[11,"empty",E,"Returns a new complete empty literal.",59,[[],[R[616]]]],[11,"is_cut",E,"Returns true if this literal was \"cut.\"",59,[[["self"]],["bool"]]],[11,"cut",E,"Cuts this literal.",59,[[["self"]]]],[0,"print",R[594],"This module provides a regular expression printer for `Hir`.",N,N],[3,"Printer",R[656],"A printer for a regular expression's high-level…",N,N],[11,"new",E,R[604],60,[[],["printer"]]],[11,"print",E,R[605],60,[[["write"],["self"],["hir"]],[R[12]]]],[0,R[608],R[594],"Defines a translator that converts an `Ast` to an `Hir`.",N,N],[3,R[721],R[657],"A builder for constructing an AST->HIR translator.",N,N],[3,R[722],E,"A translator maps abstract syntax to a high level…",N,N],[11,"new",E,"Create a new translator builder with a default c…",61,[[],[R[606]]]],[11,"build",E,"Build a translator using the current configuration.",61,[[["self"]],[R[607]]]],[11,R[644],E,"When enabled, translation will permit the construction of…",61,[[["self"],["bool"]],[R[606]]]],[11,R[647],E,"Enable or disable the case insensitive flag (`i`) by…",61,[[["self"],["bool"]],[R[606]]]],[11,R[648],E,"Enable or disable the multi-line matching flag (`m`) by…",61,[[["self"],["bool"]],[R[606]]]],[11,R[649],E,"Enable or disable the \"dot matches any character\" flag…",61,[[["self"],["bool"]],[R[606]]]],[11,R[650],E,"Enable or disable the \"swap greed\" flag (`U`) by default.",61,[[["self"],["bool"]],[R[606]]]],[11,"unicode",E,R[651],61,[[["self"],["bool"]],[R[606]]]],[11,"new",E,"Create a new translator using the default configuration.",62,[[],[R[607]]]],[11,R[608],E,"Translate the given abstract syntax tree (AST) into a high…",62,[[["str"],["self"],["ast"]],[["hir"],["error"],[R[12],["hir","error"]]]]],[8,"Visitor",R[594],"A trait for visiting the high-level IR (HIR) in depth…",N,N],[16,"Output",E,"The result of visiting an HIR.",63,N],[16,"Err",E,"An error that visiting an HIR might return.",63,N],[10,"finish",E,R[609],63,[[],[R[12]]]],[11,"start",E,R[697],63,[[["self"]]]],[11,R[610],E,R[698],63,[[["self"],["hir"]],[R[12]]]],[11,R[611],E,R[699],63,[[["self"],["hir"]],[R[12]]]],[11,R[612],E,R[700],63,[[["self"]],[R[12]]]],[11,"kind",E,R[613],64,[[["self"]],[R[1]]]],[11,R[274],E,R[614],64,[[["self"]],["str"]]],[11,"span",E,R[615],64,[[["self"]],["span"]]],[11,"kind",E,"Returns a reference to the underlying HIR kind.",65,[[["self"]],["hirkind"]]],[11,"into_kind",E,"Consumes ownership of this HIR expression and returns its…",65,[[],["hirkind"]]],[11,"empty",E,"Returns an empty HIR expression.",65,[[],["hir"]]],[11,R[616],E,"Creates a literal HIR expression.",65,[[[R[616]]],["hir"]]],[11,"class",E,"Creates a class HIR expression.",65,[[["class"]],["hir"]]],[11,"anchor",E,"Creates an anchor assertion HIR expression.",65,[[["anchor"]],["hir"]]],[11,"word_boundary",E,"Creates a word boundary assertion HIR expression.",65,[[[R[675]]],["hir"]]],[11,R[617],E,"Creates a repetition HIR expression.",65,[[[R[617]]],["hir"]]],[11,"group",E,"Creates a group HIR expression.",65,[[["group"]],["hir"]]],[11,"concat",E,"Returns the concatenation of the given expressions.",65,[[["hir"],["vec",["hir"]]],["hir"]]],[11,R[658],E,"Returns the alternation of the given expressions.",65,[[["hir"],["vec",["hir"]]],["hir"]]],[11,"dot",E,"Build an HIR expression for `.`.",65,[[["bool"]],["hir"]]],[11,"any",E,"Build an HIR expression for `(?s).`.",65,[[["bool"]],["hir"]]],[11,R[620],E,"Return true if and only if this HIR will always match…",65,[[["self"]],["bool"]]],[11,"is_all_assertions",E,"Returns true if and only if this entire HIR expression is…",65,[[["self"]],["bool"]]],[11,"is_anchored_start",E,R[618],65,[[["self"]],["bool"]]],[11,"is_anchored_end",E,R[618],65,[[["self"]],["bool"]]],[11,"is_line_anchored_start",E,R[618],65,[[["self"]],["bool"]]],[11,"is_line_anchored_end",E,R[618],65,[[["self"]],["bool"]]],[11,"is_any_anchored_start",E,R[619],65,[[["self"]],["bool"]]],[11,"is_any_anchored_end",E,R[619],65,[[["self"]],["bool"]]],[11,R[638],E,"Return true if and only if the empty string is part of the…",65,[[["self"]],["bool"]]],[11,"is_literal",E,"Return true if and only if this HIR is a simple literal.…",65,[[["self"]],["bool"]]],[11,"is_alternation_literal",E,"Return true if and only if this HIR is either a simple…",65,[[["self"]],["bool"]]],[11,R[69],E,"Return true if and only if this HIR is the empty regular…",50,[[["self"]],["bool"]]],[11,"has_subexprs",E,"Returns true if and only if this kind has any (including…",50,[[["self"]],["bool"]]],[11,"is_unicode",E,"Returns true if and only if this literal corresponds to a…",51,[[["self"]],["bool"]]],[11,R[622],E,"Apply Unicode simple case folding to this character class,…",52,[[["self"]]]],[11,"negate",E,"Negate this character class in place.",52,[[["self"]]]],[11,R[620],E,"Returns true if and only if this character class will only…",52,[[["self"]],["bool"]]],[11,"new",E,R[624],66,[[["i"]],[R[621]]]],[11,"empty",E,R[626],66,[[],[R[621]]]],[11,"push",E,R[627],66,[[["self"],[R[623]]]]],[11,"iter",E,R[628],66,[[["self"]],["classunicodeiter"]]],[11,"ranges",E,R[629],66,[[["self"]]]],[11,R[622],E,R[630],66,[[["self"]]]],[11,"negate",E,"Negate this character class.",66,[[["self"]]]],[11,"union",E,"Union this character class with the given character class,…",66,[[["self"],[R[621]]]]],[11,R[631],E,"Intersect this character class with the given character…",66,[[["self"],[R[621]]]]],[11,R[632],E,"Subtract the given character class from this character…",66,[[["self"],[R[621]]]]],[11,R[633],E,"Compute the symmetric difference of the given character…",66,[[["self"],[R[621]]]]],[11,"new",E,"Create a new Unicode scalar value range for a character…",67,[[["char"]],[R[623]]]],[11,"start",E,R[635],67,[[["self"]],["char"]]],[11,"end",E,R[636],67,[[["self"]],["char"]]],[11,"new",E,R[624],68,[[["i"]],[R[625]]]],[11,"empty",E,R[626],68,[[],[R[625]]]],[11,"push",E,R[627],68,[[["self"],[R[634]]]]],[11,"iter",E,R[628],68,[[["self"]],["classbytesiter"]]],[11,"ranges",E,R[629],68,[[["self"]]]],[11,R[622],E,R[630],68,[[["self"]]]],[11,"negate",E,"Negate this byte class.",68,[[["self"]]]],[11,"union",E,"Union this byte class with the given byte class, in place.",68,[[[R[625]],["self"]]]],[11,R[631],E,"Intersect this byte class with the given byte class, in…",68,[[[R[625]],["self"]]]],[11,R[632],E,"Subtract the given byte class from this byte class, in…",68,[[[R[625]],["self"]]]],[11,R[633],E,"Compute the symmetric difference of the given byte…",68,[[[R[625]],["self"]]]],[11,"is_all_ascii",E,"Returns true if and only if this character class will…",68,[[["self"]],["bool"]]],[11,"new",E,"Create a new byte range for a character class.",69,[[["u8"]],[R[634]]]],[11,"start",E,R[635],69,[[["self"]],["u8"]]],[11,"end",E,R[636],69,[[["self"]],["u8"]]],[11,R[637],E,"Returns true if and only if this word boundary assertion…",54,[[["self"]],["bool"]]],[11,R[638],E,"Returns true if and only if this repetition operator makes…",48,[[["self"]],["bool"]]],[11,"new",R[560],R[639],70,[[],[R[579]]]],[11,"build",E,R[640],70,[[["self"]],["parser"]]],[11,R[641],E,R[642],70,[[["u32"],["self"]],[R[579]]]],[11,"octal",E,R[643],70,[[["self"],["bool"]],[R[579]]]],[11,R[644],E,"When enabled, the parser will permit the construction of a…",70,[[["self"],["bool"]],[R[579]]]],[11,R[645],E,R[646],70,[[["self"],["bool"]],[R[579]]]],[11,R[647],E,"Enable or disable the case insensitive flag by default.",70,[[["self"],["bool"]],[R[579]]]],[11,R[648],E,"Enable or disable the multi-line matching flag by default.",70,[[["self"],["bool"]],[R[579]]]],[11,R[649],E,"Enable or disable the \"dot matches any character\" flag by…",70,[[["self"],["bool"]],[R[579]]]],[11,R[650],E,"Enable or disable the \"swap greed\" flag by default.",70,[[["self"],["bool"]],[R[579]]]],[11,"unicode",E,R[651],70,[[["self"],["bool"]],[R[579]]]],[11,"new",E,R[652],71,[[],["parser"]]],[11,"parse",E,"Parse the regular expression into a high level…",71,[[["str"],["self"]],[["hir"],[R[12],["hir"]]]]],[6,"Result",E,"A type alias for dealing with errors returned by this crate.",N,N],[11,"from",E,E,71,[[[T]],[T]]],[11,"into",E,E,71,[[],[U]]],[11,R[16],E,E,71,[[["self"]],[T]]],[11,R[17],E,E,71,[[[T],["self"]]]],[11,R[11],E,E,71,[[[U]],[R[12]]]],[11,R[39],E,E,71,[[["self"]],[T]]],[11,R[13],E,E,71,[[["self"]],[T]]],[11,R[14],E,E,71,[[],[R[12]]]],[11,R[18],E,E,71,[[["self"]],[R[40]]]],[11,"from",E,E,70,[[[T]],[T]]],[11,"into",E,E,70,[[],[U]]],[11,R[16],E,E,70,[[["self"]],[T]]],[11,R[17],E,E,70,[[[T],["self"]]]],[11,R[11],E,E,70,[[[U]],[R[12]]]],[11,R[39],E,E,70,[[["self"]],[T]]],[11,R[13],E,E,70,[[["self"]],[T]]],[11,R[14],E,E,70,[[],[R[12]]]],[11,R[18],E,E,70,[[["self"]],[R[40]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[[T],["self"]]]],[11,R[170],E,E,0,[[["self"]],["string"]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",R[562],E,46,[[[T]],[T]]],[11,"into",E,E,46,[[],[U]]],[11,R[16],E,E,46,[[["self"]],[T]]],[11,R[17],E,E,46,[[[T],["self"]]]],[11,R[170],E,E,46,[[["self"]],["string"]]],[11,R[11],E,E,46,[[[U]],[R[12]]]],[11,R[39],E,E,46,[[["self"]],[T]]],[11,R[13],E,E,46,[[["self"]],[T]]],[11,R[14],E,E,46,[[],[R[12]]]],[11,R[18],E,E,46,[[["self"]],[R[40]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,[[[T],["self"]]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[17],E,E,2,[[[T],["self"]]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[17],E,E,3,[[[T],["self"]]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[16],E,E,4,[[["self"]],[T]]],[11,R[17],E,E,4,[[[T],["self"]]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[16],E,E,5,[[["self"]],[T]]],[11,R[17],E,E,5,[[[T],["self"]]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,R[18],E,E,5,[[["self"]],[R[40]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[16],E,E,6,[[["self"]],[T]]],[11,R[17],E,E,6,[[[T],["self"]]]],[11,R[11],E,E,6,[[[U]],[R[12]]]],[11,R[39],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[],[R[12]]]],[11,R[18],E,E,6,[[["self"]],[R[40]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[16],E,E,7,[[["self"]],[T]]],[11,R[17],E,E,7,[[[T],["self"]]]],[11,R[11],E,E,7,[[[U]],[R[12]]]],[11,R[39],E,E,7,[[["self"]],[T]]],[11,R[13],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[],[R[12]]]],[11,R[18],E,E,7,[[["self"]],[R[40]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[16],E,E,8,[[["self"]],[T]]],[11,R[17],E,E,8,[[[T],["self"]]]],[11,R[11],E,E,8,[[[U]],[R[12]]]],[11,R[39],E,E,8,[[["self"]],[T]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[],[R[12]]]],[11,R[18],E,E,8,[[["self"]],[R[40]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[16],E,E,9,[[["self"]],[T]]],[11,R[17],E,E,9,[[[T],["self"]]]],[11,R[11],E,E,9,[[[U]],[R[12]]]],[11,R[39],E,E,9,[[["self"]],[T]]],[11,R[13],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[],[R[12]]]],[11,R[18],E,E,9,[[["self"]],[R[40]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[16],E,E,10,[[["self"]],[T]]],[11,R[17],E,E,10,[[[T],["self"]]]],[11,R[11],E,E,10,[[[U]],[R[12]]]],[11,R[39],E,E,10,[[["self"]],[T]]],[11,R[13],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[],[R[12]]]],[11,R[18],E,E,10,[[["self"]],[R[40]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[16],E,E,11,[[["self"]],[T]]],[11,R[17],E,E,11,[[[T],["self"]]]],[11,R[11],E,E,11,[[[U]],[R[12]]]],[11,R[39],E,E,11,[[["self"]],[T]]],[11,R[13],E,E,11,[[["self"]],[T]]],[11,R[14],E,E,11,[[],[R[12]]]],[11,R[18],E,E,11,[[["self"]],[R[40]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[16],E,E,12,[[["self"]],[T]]],[11,R[17],E,E,12,[[[T],["self"]]]],[11,R[11],E,E,12,[[[U]],[R[12]]]],[11,R[39],E,E,12,[[["self"]],[T]]],[11,R[13],E,E,12,[[["self"]],[T]]],[11,R[14],E,E,12,[[],[R[12]]]],[11,R[18],E,E,12,[[["self"]],[R[40]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[16],E,E,13,[[["self"]],[T]]],[11,R[17],E,E,13,[[[T],["self"]]]],[11,R[11],E,E,13,[[[U]],[R[12]]]],[11,R[39],E,E,13,[[["self"]],[T]]],[11,R[13],E,E,13,[[["self"]],[T]]],[11,R[14],E,E,13,[[],[R[12]]]],[11,R[18],E,E,13,[[["self"]],[R[40]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[16],E,E,14,[[["self"]],[T]]],[11,R[17],E,E,14,[[[T],["self"]]]],[11,R[11],E,E,14,[[[U]],[R[12]]]],[11,R[39],E,E,14,[[["self"]],[T]]],[11,R[13],E,E,14,[[["self"]],[T]]],[11,R[14],E,E,14,[[],[R[12]]]],[11,R[18],E,E,14,[[["self"]],[R[40]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[16],E,E,15,[[["self"]],[T]]],[11,R[17],E,E,15,[[[T],["self"]]]],[11,R[11],E,E,15,[[[U]],[R[12]]]],[11,R[39],E,E,15,[[["self"]],[T]]],[11,R[13],E,E,15,[[["self"]],[T]]],[11,R[14],E,E,15,[[],[R[12]]]],[11,R[18],E,E,15,[[["self"]],[R[40]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[16],E,E,16,[[["self"]],[T]]],[11,R[17],E,E,16,[[[T],["self"]]]],[11,R[11],E,E,16,[[[U]],[R[12]]]],[11,R[39],E,E,16,[[["self"]],[T]]],[11,R[13],E,E,16,[[["self"]],[T]]],[11,R[14],E,E,16,[[],[R[12]]]],[11,R[18],E,E,16,[[["self"]],[R[40]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[16],E,E,17,[[["self"]],[T]]],[11,R[17],E,E,17,[[[T],["self"]]]],[11,R[11],E,E,17,[[[U]],[R[12]]]],[11,R[39],E,E,17,[[["self"]],[T]]],[11,R[13],E,E,17,[[["self"]],[T]]],[11,R[14],E,E,17,[[],[R[12]]]],[11,R[18],E,E,17,[[["self"]],[R[40]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[16],E,E,18,[[["self"]],[T]]],[11,R[17],E,E,18,[[[T],["self"]]]],[11,R[11],E,E,18,[[[U]],[R[12]]]],[11,R[39],E,E,18,[[["self"]],[T]]],[11,R[13],E,E,18,[[["self"]],[T]]],[11,R[14],E,E,18,[[],[R[12]]]],[11,R[18],E,E,18,[[["self"]],[R[40]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[16],E,E,19,[[["self"]],[T]]],[11,R[17],E,E,19,[[[T],["self"]]]],[11,R[11],E,E,19,[[[U]],[R[12]]]],[11,R[39],E,E,19,[[["self"]],[T]]],[11,R[13],E,E,19,[[["self"]],[T]]],[11,R[14],E,E,19,[[],[R[12]]]],[11,R[18],E,E,19,[[["self"]],[R[40]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[16],E,E,20,[[["self"]],[T]]],[11,R[17],E,E,20,[[[T],["self"]]]],[11,R[11],E,E,20,[[[U]],[R[12]]]],[11,R[39],E,E,20,[[["self"]],[T]]],[11,R[13],E,E,20,[[["self"]],[T]]],[11,R[14],E,E,20,[[],[R[12]]]],[11,R[18],E,E,20,[[["self"]],[R[40]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[16],E,E,21,[[["self"]],[T]]],[11,R[17],E,E,21,[[[T],["self"]]]],[11,R[11],E,E,21,[[[U]],[R[12]]]],[11,R[39],E,E,21,[[["self"]],[T]]],[11,R[13],E,E,21,[[["self"]],[T]]],[11,R[14],E,E,21,[[],[R[12]]]],[11,R[18],E,E,21,[[["self"]],[R[40]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[16],E,E,22,[[["self"]],[T]]],[11,R[17],E,E,22,[[[T],["self"]]]],[11,R[11],E,E,22,[[[U]],[R[12]]]],[11,R[39],E,E,22,[[["self"]],[T]]],[11,R[13],E,E,22,[[["self"]],[T]]],[11,R[14],E,E,22,[[],[R[12]]]],[11,R[18],E,E,22,[[["self"]],[R[40]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[16],E,E,23,[[["self"]],[T]]],[11,R[17],E,E,23,[[[T],["self"]]]],[11,R[170],E,E,23,[[["self"]],["string"]]],[11,R[11],E,E,23,[[[U]],[R[12]]]],[11,R[39],E,E,23,[[["self"]],[T]]],[11,R[13],E,E,23,[[["self"]],[T]]],[11,R[14],E,E,23,[[],[R[12]]]],[11,R[18],E,E,23,[[["self"]],[R[40]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[16],E,E,24,[[["self"]],[T]]],[11,R[17],E,E,24,[[[T],["self"]]]],[11,R[170],E,E,24,[[["self"]],["string"]]],[11,R[11],E,E,24,[[[U]],[R[12]]]],[11,R[39],E,E,24,[[["self"]],[T]]],[11,R[13],E,E,24,[[["self"]],[T]]],[11,R[14],E,E,24,[[],[R[12]]]],[11,R[18],E,E,24,[[["self"]],[R[40]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[16],E,E,25,[[["self"]],[T]]],[11,R[17],E,E,25,[[[T],["self"]]]],[11,R[11],E,E,25,[[[U]],[R[12]]]],[11,R[39],E,E,25,[[["self"]],[T]]],[11,R[13],E,E,25,[[["self"]],[T]]],[11,R[14],E,E,25,[[],[R[12]]]],[11,R[18],E,E,25,[[["self"]],[R[40]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[16],E,E,26,[[["self"]],[T]]],[11,R[17],E,E,26,[[[T],["self"]]]],[11,R[11],E,E,26,[[[U]],[R[12]]]],[11,R[39],E,E,26,[[["self"]],[T]]],[11,R[13],E,E,26,[[["self"]],[T]]],[11,R[14],E,E,26,[[],[R[12]]]],[11,R[18],E,E,26,[[["self"]],[R[40]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[16],E,E,27,[[["self"]],[T]]],[11,R[17],E,E,27,[[[T],["self"]]]],[11,R[11],E,E,27,[[[U]],[R[12]]]],[11,R[39],E,E,27,[[["self"]],[T]]],[11,R[13],E,E,27,[[["self"]],[T]]],[11,R[14],E,E,27,[[],[R[12]]]],[11,R[18],E,E,27,[[["self"]],[R[40]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[16],E,E,28,[[["self"]],[T]]],[11,R[17],E,E,28,[[[T],["self"]]]],[11,R[11],E,E,28,[[[U]],[R[12]]]],[11,R[39],E,E,28,[[["self"]],[T]]],[11,R[13],E,E,28,[[["self"]],[T]]],[11,R[14],E,E,28,[[],[R[12]]]],[11,R[18],E,E,28,[[["self"]],[R[40]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[16],E,E,29,[[["self"]],[T]]],[11,R[17],E,E,29,[[[T],["self"]]]],[11,R[11],E,E,29,[[[U]],[R[12]]]],[11,R[39],E,E,29,[[["self"]],[T]]],[11,R[13],E,E,29,[[["self"]],[T]]],[11,R[14],E,E,29,[[],[R[12]]]],[11,R[18],E,E,29,[[["self"]],[R[40]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[16],E,E,30,[[["self"]],[T]]],[11,R[17],E,E,30,[[[T],["self"]]]],[11,R[11],E,E,30,[[[U]],[R[12]]]],[11,R[39],E,E,30,[[["self"]],[T]]],[11,R[13],E,E,30,[[["self"]],[T]]],[11,R[14],E,E,30,[[],[R[12]]]],[11,R[18],E,E,30,[[["self"]],[R[40]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[16],E,E,31,[[["self"]],[T]]],[11,R[17],E,E,31,[[[T],["self"]]]],[11,R[11],E,E,31,[[[U]],[R[12]]]],[11,R[39],E,E,31,[[["self"]],[T]]],[11,R[13],E,E,31,[[["self"]],[T]]],[11,R[14],E,E,31,[[],[R[12]]]],[11,R[18],E,E,31,[[["self"]],[R[40]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[16],E,E,32,[[["self"]],[T]]],[11,R[17],E,E,32,[[[T],["self"]]]],[11,R[11],E,E,32,[[[U]],[R[12]]]],[11,R[39],E,E,32,[[["self"]],[T]]],[11,R[13],E,E,32,[[["self"]],[T]]],[11,R[14],E,E,32,[[],[R[12]]]],[11,R[18],E,E,32,[[["self"]],[R[40]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[16],E,E,33,[[["self"]],[T]]],[11,R[17],E,E,33,[[[T],["self"]]]],[11,R[11],E,E,33,[[[U]],[R[12]]]],[11,R[39],E,E,33,[[["self"]],[T]]],[11,R[13],E,E,33,[[["self"]],[T]]],[11,R[14],E,E,33,[[],[R[12]]]],[11,R[18],E,E,33,[[["self"]],[R[40]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[16],E,E,34,[[["self"]],[T]]],[11,R[17],E,E,34,[[[T],["self"]]]],[11,R[11],E,E,34,[[[U]],[R[12]]]],[11,R[39],E,E,34,[[["self"]],[T]]],[11,R[13],E,E,34,[[["self"]],[T]]],[11,R[14],E,E,34,[[],[R[12]]]],[11,R[18],E,E,34,[[["self"]],[R[40]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[16],E,E,35,[[["self"]],[T]]],[11,R[17],E,E,35,[[[T],["self"]]]],[11,R[11],E,E,35,[[[U]],[R[12]]]],[11,R[39],E,E,35,[[["self"]],[T]]],[11,R[13],E,E,35,[[["self"]],[T]]],[11,R[14],E,E,35,[[],[R[12]]]],[11,R[18],E,E,35,[[["self"]],[R[40]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,R[16],E,E,36,[[["self"]],[T]]],[11,R[17],E,E,36,[[[T],["self"]]]],[11,R[11],E,E,36,[[[U]],[R[12]]]],[11,R[39],E,E,36,[[["self"]],[T]]],[11,R[13],E,E,36,[[["self"]],[T]]],[11,R[14],E,E,36,[[],[R[12]]]],[11,R[18],E,E,36,[[["self"]],[R[40]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,"into",E,E,37,[[],[U]]],[11,R[16],E,E,37,[[["self"]],[T]]],[11,R[17],E,E,37,[[[T],["self"]]]],[11,R[11],E,E,37,[[[U]],[R[12]]]],[11,R[39],E,E,37,[[["self"]],[T]]],[11,R[13],E,E,37,[[["self"]],[T]]],[11,R[14],E,E,37,[[],[R[12]]]],[11,R[18],E,E,37,[[["self"]],[R[40]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,"into",E,E,38,[[],[U]]],[11,R[16],E,E,38,[[["self"]],[T]]],[11,R[17],E,E,38,[[[T],["self"]]]],[11,R[11],E,E,38,[[[U]],[R[12]]]],[11,R[39],E,E,38,[[["self"]],[T]]],[11,R[13],E,E,38,[[["self"]],[T]]],[11,R[14],E,E,38,[[],[R[12]]]],[11,R[18],E,E,38,[[["self"]],[R[40]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,R[16],E,E,39,[[["self"]],[T]]],[11,R[17],E,E,39,[[[T],["self"]]]],[11,R[11],E,E,39,[[[U]],[R[12]]]],[11,R[39],E,E,39,[[["self"]],[T]]],[11,R[13],E,E,39,[[["self"]],[T]]],[11,R[14],E,E,39,[[],[R[12]]]],[11,R[18],E,E,39,[[["self"]],[R[40]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,"into",E,E,40,[[],[U]]],[11,R[16],E,E,40,[[["self"]],[T]]],[11,R[17],E,E,40,[[[T],["self"]]]],[11,R[11],E,E,40,[[[U]],[R[12]]]],[11,R[39],E,E,40,[[["self"]],[T]]],[11,R[13],E,E,40,[[["self"]],[T]]],[11,R[14],E,E,40,[[],[R[12]]]],[11,R[18],E,E,40,[[["self"]],[R[40]]]],[11,"from",E,E,41,[[[T]],[T]]],[11,"into",E,E,41,[[],[U]]],[11,R[16],E,E,41,[[["self"]],[T]]],[11,R[17],E,E,41,[[[T],["self"]]]],[11,R[11],E,E,41,[[[U]],[R[12]]]],[11,R[39],E,E,41,[[["self"]],[T]]],[11,R[13],E,E,41,[[["self"]],[T]]],[11,R[14],E,E,41,[[],[R[12]]]],[11,R[18],E,E,41,[[["self"]],[R[40]]]],[11,"from",R[653],E,42,[[[T]],[T]]],[11,"into",E,E,42,[[],[U]]],[11,R[16],E,E,42,[[["self"]],[T]]],[11,R[17],E,E,42,[[[T],["self"]]]],[11,R[11],E,E,42,[[[U]],[R[12]]]],[11,R[39],E,E,42,[[["self"]],[T]]],[11,R[13],E,E,42,[[["self"]],[T]]],[11,R[14],E,E,42,[[],[R[12]]]],[11,R[18],E,E,42,[[["self"]],[R[40]]]],[11,"from",E,E,43,[[[T]],[T]]],[11,"into",E,E,43,[[],[U]]],[11,R[16],E,E,43,[[["self"]],[T]]],[11,R[17],E,E,43,[[[T],["self"]]]],[11,R[11],E,E,43,[[[U]],[R[12]]]],[11,R[39],E,E,43,[[["self"]],[T]]],[11,R[13],E,E,43,[[["self"]],[T]]],[11,R[14],E,E,43,[[],[R[12]]]],[11,R[18],E,E,43,[[["self"]],[R[40]]]],[11,"from",R[654],E,44,[[[T]],[T]]],[11,"into",E,E,44,[[],[U]]],[11,R[11],E,E,44,[[[U]],[R[12]]]],[11,R[39],E,E,44,[[["self"]],[T]]],[11,R[13],E,E,44,[[["self"]],[T]]],[11,R[14],E,E,44,[[],[R[12]]]],[11,R[18],E,E,44,[[["self"]],[R[40]]]],[11,"from",R[594],E,64,[[[T]],[T]]],[11,"into",E,E,64,[[],[U]]],[11,R[16],E,E,64,[[["self"]],[T]]],[11,R[17],E,E,64,[[[T],["self"]]]],[11,R[170],E,E,64,[[["self"]],["string"]]],[11,R[11],E,E,64,[[[U]],[R[12]]]],[11,R[39],E,E,64,[[["self"]],[T]]],[11,R[13],E,E,64,[[["self"]],[T]]],[11,R[14],E,E,64,[[],[R[12]]]],[11,R[18],E,E,64,[[["self"]],[R[40]]]],[11,"from",E,E,65,[[[T]],[T]]],[11,"into",E,E,65,[[],[U]]],[11,R[16],E,E,65,[[["self"]],[T]]],[11,R[17],E,E,65,[[[T],["self"]]]],[11,R[170],E,E,65,[[["self"]],["string"]]],[11,R[11],E,E,65,[[[U]],[R[12]]]],[11,R[39],E,E,65,[[["self"]],[T]]],[11,R[13],E,E,65,[[["self"]],[T]]],[11,R[14],E,E,65,[[],[R[12]]]],[11,R[18],E,E,65,[[["self"]],[R[40]]]],[11,"from",E,E,66,[[[T]],[T]]],[11,"into",E,E,66,[[],[U]]],[11,R[16],E,E,66,[[["self"]],[T]]],[11,R[17],E,E,66,[[[T],["self"]]]],[11,R[11],E,E,66,[[[U]],[R[12]]]],[11,R[39],E,E,66,[[["self"]],[T]]],[11,R[13],E,E,66,[[["self"]],[T]]],[11,R[14],E,E,66,[[],[R[12]]]],[11,R[18],E,E,66,[[["self"]],[R[40]]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[48],E,E,72,[[],["i"]]],[11,"into",E,E,72,[[],[U]]],[11,R[11],E,E,72,[[[U]],[R[12]]]],[11,R[39],E,E,72,[[["self"]],[T]]],[11,R[13],E,E,72,[[["self"]],[T]]],[11,R[14],E,E,72,[[],[R[12]]]],[11,R[18],E,E,72,[[["self"]],[R[40]]]],[11,"from",E,E,67,[[[T]],[T]]],[11,"into",E,E,67,[[],[U]]],[11,R[16],E,E,67,[[["self"]],[T]]],[11,R[17],E,E,67,[[[T],["self"]]]],[11,R[11],E,E,67,[[[U]],[R[12]]]],[11,R[39],E,E,67,[[["self"]],[T]]],[11,R[13],E,E,67,[[["self"]],[T]]],[11,R[14],E,E,67,[[],[R[12]]]],[11,R[18],E,E,67,[[["self"]],[R[40]]]],[11,"from",E,E,68,[[[T]],[T]]],[11,"into",E,E,68,[[],[U]]],[11,R[16],E,E,68,[[["self"]],[T]]],[11,R[17],E,E,68,[[[T],["self"]]]],[11,R[11],E,E,68,[[[U]],[R[12]]]],[11,R[39],E,E,68,[[["self"]],[T]]],[11,R[13],E,E,68,[[["self"]],[T]]],[11,R[14],E,E,68,[[],[R[12]]]],[11,R[18],E,E,68,[[["self"]],[R[40]]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[48],E,E,73,[[],["i"]]],[11,"into",E,E,73,[[],[U]]],[11,R[11],E,E,73,[[[U]],[R[12]]]],[11,R[39],E,E,73,[[["self"]],[T]]],[11,R[13],E,E,73,[[["self"]],[T]]],[11,R[14],E,E,73,[[],[R[12]]]],[11,R[18],E,E,73,[[["self"]],[R[40]]]],[11,"from",E,E,69,[[[T]],[T]]],[11,"into",E,E,69,[[],[U]]],[11,R[16],E,E,69,[[["self"]],[T]]],[11,R[17],E,E,69,[[[T],["self"]]]],[11,R[11],E,E,69,[[[U]],[R[12]]]],[11,R[39],E,E,69,[[["self"]],[T]]],[11,R[13],E,E,69,[[["self"]],[T]]],[11,R[14],E,E,69,[[],[R[12]]]],[11,R[18],E,E,69,[[["self"]],[R[40]]]],[11,"from",E,E,47,[[[T]],[T]]],[11,"into",E,E,47,[[],[U]]],[11,R[16],E,E,47,[[["self"]],[T]]],[11,R[17],E,E,47,[[[T],["self"]]]],[11,R[11],E,E,47,[[[U]],[R[12]]]],[11,R[39],E,E,47,[[["self"]],[T]]],[11,R[13],E,E,47,[[["self"]],[T]]],[11,R[14],E,E,47,[[],[R[12]]]],[11,R[18],E,E,47,[[["self"]],[R[40]]]],[11,"from",E,E,48,[[[T]],[T]]],[11,"into",E,E,48,[[],[U]]],[11,R[16],E,E,48,[[["self"]],[T]]],[11,R[17],E,E,48,[[[T],["self"]]]],[11,R[11],E,E,48,[[[U]],[R[12]]]],[11,R[39],E,E,48,[[["self"]],[T]]],[11,R[13],E,E,48,[[["self"]],[T]]],[11,R[14],E,E,48,[[],[R[12]]]],[11,R[18],E,E,48,[[["self"]],[R[40]]]],[11,"from",E,E,49,[[[T]],[T]]],[11,"into",E,E,49,[[],[U]]],[11,R[16],E,E,49,[[["self"]],[T]]],[11,R[17],E,E,49,[[[T],["self"]]]],[11,R[170],E,E,49,[[["self"]],["string"]]],[11,R[11],E,E,49,[[[U]],[R[12]]]],[11,R[39],E,E,49,[[["self"]],[T]]],[11,R[13],E,E,49,[[["self"]],[T]]],[11,R[14],E,E,49,[[],[R[12]]]],[11,R[18],E,E,49,[[["self"]],[R[40]]]],[11,"from",E,E,50,[[[T]],[T]]],[11,"into",E,E,50,[[],[U]]],[11,R[16],E,E,50,[[["self"]],[T]]],[11,R[17],E,E,50,[[[T],["self"]]]],[11,R[11],E,E,50,[[[U]],[R[12]]]],[11,R[39],E,E,50,[[["self"]],[T]]],[11,R[13],E,E,50,[[["self"]],[T]]],[11,R[14],E,E,50,[[],[R[12]]]],[11,R[18],E,E,50,[[["self"]],[R[40]]]],[11,"from",E,E,51,[[[T]],[T]]],[11,"into",E,E,51,[[],[U]]],[11,R[16],E,E,51,[[["self"]],[T]]],[11,R[17],E,E,51,[[[T],["self"]]]],[11,R[11],E,E,51,[[[U]],[R[12]]]],[11,R[39],E,E,51,[[["self"]],[T]]],[11,R[13],E,E,51,[[["self"]],[T]]],[11,R[14],E,E,51,[[],[R[12]]]],[11,R[18],E,E,51,[[["self"]],[R[40]]]],[11,"from",E,E,52,[[[T]],[T]]],[11,"into",E,E,52,[[],[U]]],[11,R[16],E,E,52,[[["self"]],[T]]],[11,R[17],E,E,52,[[[T],["self"]]]],[11,R[11],E,E,52,[[[U]],[R[12]]]],[11,R[39],E,E,52,[[["self"]],[T]]],[11,R[13],E,E,52,[[["self"]],[T]]],[11,R[14],E,E,52,[[],[R[12]]]],[11,R[18],E,E,52,[[["self"]],[R[40]]]],[11,"from",E,E,53,[[[T]],[T]]],[11,"into",E,E,53,[[],[U]]],[11,R[16],E,E,53,[[["self"]],[T]]],[11,R[17],E,E,53,[[[T],["self"]]]],[11,R[11],E,E,53,[[[U]],[R[12]]]],[11,R[39],E,E,53,[[["self"]],[T]]],[11,R[13],E,E,53,[[["self"]],[T]]],[11,R[14],E,E,53,[[],[R[12]]]],[11,R[18],E,E,53,[[["self"]],[R[40]]]],[11,"from",E,E,54,[[[T]],[T]]],[11,"into",E,E,54,[[],[U]]],[11,R[16],E,E,54,[[["self"]],[T]]],[11,R[17],E,E,54,[[[T],["self"]]]],[11,R[11],E,E,54,[[[U]],[R[12]]]],[11,R[39],E,E,54,[[["self"]],[T]]],[11,R[13],E,E,54,[[["self"]],[T]]],[11,R[14],E,E,54,[[],[R[12]]]],[11,R[18],E,E,54,[[["self"]],[R[40]]]],[11,"from",E,E,55,[[[T]],[T]]],[11,"into",E,E,55,[[],[U]]],[11,R[16],E,E,55,[[["self"]],[T]]],[11,R[17],E,E,55,[[[T],["self"]]]],[11,R[11],E,E,55,[[[U]],[R[12]]]],[11,R[39],E,E,55,[[["self"]],[T]]],[11,R[13],E,E,55,[[["self"]],[T]]],[11,R[14],E,E,55,[[],[R[12]]]],[11,R[18],E,E,55,[[["self"]],[R[40]]]],[11,"from",E,E,56,[[[T]],[T]]],[11,"into",E,E,56,[[],[U]]],[11,R[16],E,E,56,[[["self"]],[T]]],[11,R[17],E,E,56,[[[T],["self"]]]],[11,R[11],E,E,56,[[[U]],[R[12]]]],[11,R[39],E,E,56,[[["self"]],[T]]],[11,R[13],E,E,56,[[["self"]],[T]]],[11,R[14],E,E,56,[[],[R[12]]]],[11,R[18],E,E,56,[[["self"]],[R[40]]]],[11,"from",E,E,57,[[[T]],[T]]],[11,"into",E,E,57,[[],[U]]],[11,R[16],E,E,57,[[["self"]],[T]]],[11,R[17],E,E,57,[[[T],["self"]]]],[11,R[11],E,E,57,[[[U]],[R[12]]]],[11,R[39],E,E,57,[[["self"]],[T]]],[11,R[13],E,E,57,[[["self"]],[T]]],[11,R[14],E,E,57,[[],[R[12]]]],[11,R[18],E,E,57,[[["self"]],[R[40]]]],[11,"from",R[655],E,58,[[[T]],[T]]],[11,"into",E,E,58,[[],[U]]],[11,R[16],E,E,58,[[["self"]],[T]]],[11,R[17],E,E,58,[[[T],["self"]]]],[11,R[11],E,E,58,[[[U]],[R[12]]]],[11,R[39],E,E,58,[[["self"]],[T]]],[11,R[13],E,E,58,[[["self"]],[T]]],[11,R[14],E,E,58,[[],[R[12]]]],[11,R[18],E,E,58,[[["self"]],[R[40]]]],[11,"from",E,E,59,[[[T]],[T]]],[11,"into",E,E,59,[[],[U]]],[11,R[16],E,E,59,[[["self"]],[T]]],[11,R[17],E,E,59,[[[T],["self"]]]],[11,R[11],E,E,59,[[[U]],[R[12]]]],[11,R[39],E,E,59,[[["self"]],[T]]],[11,R[13],E,E,59,[[["self"]],[T]]],[11,R[14],E,E,59,[[],[R[12]]]],[11,R[18],E,E,59,[[["self"]],[R[40]]]],[11,"from",R[656],E,60,[[[T]],[T]]],[11,"into",E,E,60,[[],[U]]],[11,R[11],E,E,60,[[[U]],[R[12]]]],[11,R[39],E,E,60,[[["self"]],[T]]],[11,R[13],E,E,60,[[["self"]],[T]]],[11,R[14],E,E,60,[[],[R[12]]]],[11,R[18],E,E,60,[[["self"]],[R[40]]]],[11,"from",R[657],E,61,[[[T]],[T]]],[11,"into",E,E,61,[[],[U]]],[11,R[16],E,E,61,[[["self"]],[T]]],[11,R[17],E,E,61,[[[T],["self"]]]],[11,R[11],E,E,61,[[[U]],[R[12]]]],[11,R[39],E,E,61,[[["self"]],[T]]],[11,R[13],E,E,61,[[["self"]],[T]]],[11,R[14],E,E,61,[[],[R[12]]]],[11,R[18],E,E,61,[[["self"]],[R[40]]]],[11,"from",E,E,62,[[[T]],[T]]],[11,"into",E,E,62,[[],[U]]],[11,R[16],E,E,62,[[["self"]],[T]]],[11,R[17],E,E,62,[[[T],["self"]]]],[11,R[11],E,E,62,[[[U]],[R[12]]]],[11,R[39],E,E,62,[[["self"]],[T]]],[11,R[13],E,E,62,[[["self"]],[T]]],[11,R[14],E,E,62,[[],[R[12]]]],[11,R[18],E,E,62,[[["self"]],[R[40]]]],[11,"eq",R[562],E,46,[[["error"],["self"]],["bool"]]],[11,"ne",E,E,46,[[["error"],["self"]],["bool"]]],[11,"eq",E,E,23,[[["self"],[R[1]]],["bool"]]],[11,"ne",E,E,23,[[["self"],[R[1]]],["bool"]]],[11,"eq",E,E,1,[[["self"],["span"]],["bool"]]],[11,"ne",E,E,1,[[["self"],["span"]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[583]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[583]]],["bool"]]],[11,"eq",E,E,3,[[[R[580]],["self"]],["bool"]]],[11,"ne",E,E,3,[[[R[580]],["self"]],["bool"]]],[11,"eq",E,E,4,[[["self"],["comment"]],["bool"]]],[11,"ne",E,E,4,[[["self"],["comment"]],["bool"]]],[11,"eq",E,E,24,[[["ast"],["self"]],["bool"]]],[11,"ne",E,E,24,[[["ast"],["self"]],["bool"]]],[11,"eq",E,E,5,[[[R[658]],["self"]],["bool"]]],[11,"ne",E,E,5,[[[R[658]],["self"]],["bool"]]],[11,"eq",E,E,6,[[["concat"],["self"]],["bool"]]],[11,"ne",E,E,6,[[["concat"],["self"]],["bool"]]],[11,"eq",E,E,7,[[["self"],[R[616]]],["bool"]]],[11,"ne",E,E,7,[[["self"],[R[616]]],["bool"]]],[11,"eq",E,E,25,[[[R[659]],["self"]],["bool"]]],[11,"ne",E,E,25,[[[R[659]],["self"]],["bool"]]],[11,"eq",E,E,26,[[["self"],[R[676]]],["bool"]]],[11,"eq",E,E,27,[[["self"],[R[677]]],["bool"]]],[11,"eq",E,E,28,[[["self"],["class"]],["bool"]]],[11,"ne",E,E,28,[[["self"],["class"]],["bool"]]],[11,"eq",E,E,8,[[["self"],[R[660]]],["bool"]]],[11,"ne",E,E,8,[[["self"],[R[660]]],["bool"]]],[11,"eq",E,E,29,[[[R[678]],["self"]],["bool"]]],[11,"eq",E,E,9,[[[R[661]],["self"]],["bool"]]],[11,"ne",E,E,9,[[[R[661]],["self"]],["bool"]]],[11,"eq",E,E,30,[[[R[584]],["self"]],["bool"]]],[11,"eq",E,E,10,[[["self"],[R[621]]],["bool"]]],[11,"ne",E,E,10,[[["self"],[R[621]]],["bool"]]],[11,"eq",E,E,31,[[[R[662]],["self"]],["bool"]]],[11,"ne",E,E,31,[[[R[662]],["self"]],["bool"]]],[11,"eq",E,E,32,[[[R[679]],["self"]],["bool"]]],[11,"eq",E,E,11,[[[R[663]],["self"]],["bool"]]],[11,"ne",E,E,11,[[[R[663]],["self"]],["bool"]]],[11,"eq",E,E,33,[[[R[664]],["self"]],["bool"]]],[11,"ne",E,E,33,[[[R[664]],["self"]],["bool"]]],[11,"eq",E,E,34,[[[R[581]],["self"]],["bool"]]],[11,"ne",E,E,34,[[[R[581]],["self"]],["bool"]]],[11,"eq",E,E,12,[[[R[665]],["self"]],["bool"]]],[11,"ne",E,E,12,[[[R[665]],["self"]],["bool"]]],[11,"eq",E,E,13,[[[R[666]],["self"]],["bool"]]],[11,"ne",E,E,13,[[[R[666]],["self"]],["bool"]]],[11,"eq",E,E,14,[[[R[582]],["self"]],["bool"]]],[11,"ne",E,E,14,[[[R[582]],["self"]],["bool"]]],[11,"eq",E,E,35,[[[R[680]],["self"]],["bool"]]],[11,"eq",E,E,15,[[["self"],[R[667]]],["bool"]]],[11,"ne",E,E,15,[[["self"],[R[667]]],["bool"]]],[11,"eq",E,E,36,[[["self"],[R[681]]],["bool"]]],[11,"eq",E,E,16,[[[R[617]],["self"]],["bool"]]],[11,"ne",E,E,16,[[[R[617]],["self"]],["bool"]]],[11,"eq",E,E,17,[[["self"],[R[668]]],["bool"]]],[11,"ne",E,E,17,[[["self"],[R[668]]],["bool"]]],[11,"eq",E,E,37,[[["self"],[R[669]]],["bool"]]],[11,"ne",E,E,37,[[["self"],[R[669]]],["bool"]]],[11,"eq",E,E,38,[[[R[670]],["self"]],["bool"]]],[11,"ne",E,E,38,[[[R[670]],["self"]],["bool"]]],[11,"eq",E,E,18,[[["self"],["group"]],["bool"]]],[11,"ne",E,E,18,[[["self"],["group"]],["bool"]]],[11,"eq",E,E,39,[[[R[671]],["self"]],["bool"]]],[11,"ne",E,E,39,[[[R[671]],["self"]],["bool"]]],[11,"eq",E,E,19,[[[R[672]],["self"]],["bool"]]],[11,"ne",E,E,19,[[[R[672]],["self"]],["bool"]]],[11,"eq",E,E,20,[[[R[682]],["self"]],["bool"]]],[11,"ne",E,E,20,[[[R[682]],["self"]],["bool"]]],[11,"eq",E,E,21,[[["flags"],["self"]],["bool"]]],[11,"ne",E,E,21,[[["flags"],["self"]],["bool"]]],[11,"eq",E,E,22,[[[R[673]],["self"]],["bool"]]],[11,"ne",E,E,22,[[[R[673]],["self"]],["bool"]]],[11,"eq",E,E,40,[[["self"],[R[674]]],["bool"]]],[11,"ne",E,E,40,[[["self"],[R[674]]],["bool"]]],[11,"eq",E,E,41,[[["flag"],["self"]],["bool"]]],[11,"eq",R[560],E,0,[[["error"],["self"]],["bool"]]],[11,"ne",E,E,0,[[["error"],["self"]],["bool"]]],[11,"eq",R[655],E,58,[[[R[603]],["self"]],["bool"]]],[11,"ne",E,E,58,[[[R[603]],["self"]],["bool"]]],[11,"eq",E,E,59,[[[R[616]],["self"]],["bool"]]],[11,"eq",R[594],E,64,[[["self"],["error"]],["bool"]]],[11,"ne",E,E,64,[[["self"],["error"]],["bool"]]],[11,"eq",E,E,49,[[[R[1]],["self"]],["bool"]]],[11,"eq",E,E,65,[[["self"],["hir"]],["bool"]]],[11,"ne",E,E,65,[[["self"],["hir"]],["bool"]]],[11,"eq",E,E,50,[[["self"],["hirkind"]],["bool"]]],[11,"ne",E,E,50,[[["self"],["hirkind"]],["bool"]]],[11,"eq",E,E,51,[[[R[616]],["self"]],["bool"]]],[11,"ne",E,E,51,[[[R[616]],["self"]],["bool"]]],[11,"eq",E,E,52,[[["self"],["class"]],["bool"]]],[11,"ne",E,E,52,[[["self"],["class"]],["bool"]]],[11,"eq",E,E,66,[[[R[621]],["self"]],["bool"]]],[11,"ne",E,E,66,[[[R[621]],["self"]],["bool"]]],[11,"eq",E,E,67,[[[R[623]],["self"]],["bool"]]],[11,"ne",E,E,67,[[[R[623]],["self"]],["bool"]]],[11,"eq",E,E,68,[[[R[625]],["self"]],["bool"]]],[11,"ne",E,E,68,[[[R[625]],["self"]],["bool"]]],[11,"eq",E,E,69,[[[R[634]],["self"]],["bool"]]],[11,"ne",E,E,69,[[[R[634]],["self"]],["bool"]]],[11,"eq",E,E,53,[[["self"],["anchor"]],["bool"]]],[11,"eq",E,E,54,[[[R[675]],["self"]],["bool"]]],[11,"eq",E,E,47,[[["group"],["self"]],["bool"]]],[11,"ne",E,E,47,[[["group"],["self"]],["bool"]]],[11,"eq",E,E,55,[[[R[671]],["self"]],["bool"]]],[11,"ne",E,E,55,[[[R[671]],["self"]],["bool"]]],[11,"eq",E,E,48,[[[R[617]],["self"]],["bool"]]],[11,"ne",E,E,48,[[[R[617]],["self"]],["bool"]]],[11,"eq",E,E,56,[[[R[669]],["self"]],["bool"]]],[11,"ne",E,E,56,[[[R[669]],["self"]],["bool"]]],[11,"eq",E,E,57,[[["self"],[R[670]]],["bool"]]],[11,"ne",E,E,57,[[["self"],[R[670]]],["bool"]]],[11,"clone",R[653],E,42,[[["self"]],[R[579]]]],[11,"clone",E,E,43,[[["self"]],["parser"]]],[11,"clone",R[562],E,46,[[["self"]],["error"]]],[11,"clone",E,E,23,[[["self"]],[R[1]]]],[11,"clone",E,E,1,[[["self"]],["span"]]],[11,"clone",E,E,2,[[["self"]],[R[583]]]],[11,"clone",E,E,3,[[["self"]],[R[580]]]],[11,"clone",E,E,4,[[["self"]],["comment"]]],[11,"clone",E,E,24,[[["self"]],["ast"]]],[11,"clone",E,E,5,[[["self"]],[R[658]]]],[11,"clone",E,E,6,[[["self"]],["concat"]]],[11,"clone",E,E,7,[[["self"]],[R[616]]]],[11,"clone",E,E,25,[[["self"]],[R[659]]]],[11,"clone",E,E,26,[[["self"]],[R[676]]]],[11,"clone",E,E,27,[[["self"]],[R[677]]]],[11,"clone",E,E,28,[[["self"]],["class"]]],[11,"clone",E,E,8,[[["self"]],[R[660]]]],[11,"clone",E,E,29,[[["self"]],[R[678]]]],[11,"clone",E,E,9,[[["self"]],[R[661]]]],[11,"clone",E,E,30,[[["self"]],[R[584]]]],[11,"clone",E,E,10,[[["self"]],[R[621]]]],[11,"clone",E,E,31,[[["self"]],[R[662]]]],[11,"clone",E,E,32,[[["self"]],[R[679]]]],[11,"clone",E,E,11,[[["self"]],[R[663]]]],[11,"clone",E,E,33,[[["self"]],[R[664]]]],[11,"clone",E,E,34,[[["self"]],[R[581]]]],[11,"clone",E,E,12,[[["self"]],[R[665]]]],[11,"clone",E,E,13,[[["self"]],[R[666]]]],[11,"clone",E,E,14,[[["self"]],[R[582]]]],[11,"clone",E,E,35,[[["self"]],[R[680]]]],[11,"clone",E,E,15,[[["self"]],[R[667]]]],[11,"clone",E,E,36,[[["self"]],[R[681]]]],[11,"clone",E,E,16,[[["self"]],[R[617]]]],[11,"clone",E,E,17,[[["self"]],[R[668]]]],[11,"clone",E,E,37,[[["self"]],[R[669]]]],[11,"clone",E,E,38,[[["self"]],[R[670]]]],[11,"clone",E,E,18,[[["self"]],["group"]]],[11,"clone",E,E,39,[[["self"]],[R[671]]]],[11,"clone",E,E,19,[[["self"]],[R[672]]]],[11,"clone",E,E,20,[[["self"]],[R[682]]]],[11,"clone",E,E,21,[[["self"]],["flags"]]],[11,"clone",E,E,22,[[["self"]],[R[673]]]],[11,"clone",E,E,40,[[["self"]],[R[674]]]],[11,"clone",E,E,41,[[["self"]],["flag"]]],[11,"clone",R[560],E,0,[[["self"]],["error"]]],[11,"clone",R[655],E,58,[[["self"]],[R[603]]]],[11,"clone",E,E,59,[[["self"]],[R[616]]]],[11,"clone",R[657],E,61,[[["self"]],[R[606]]]],[11,"clone",E,E,62,[[["self"]],[R[607]]]],[11,"clone",R[594],E,64,[[["self"]],["error"]]],[11,"clone",E,E,49,[[["self"]],[R[1]]]],[11,"clone",E,E,65,[[["self"]],["hir"]]],[11,"clone",E,E,50,[[["self"]],["hirkind"]]],[11,"clone",E,E,51,[[["self"]],[R[616]]]],[11,"clone",E,E,52,[[["self"]],["class"]]],[11,"clone",E,E,66,[[["self"]],[R[621]]]],[11,"clone",E,E,67,[[["self"]],[R[623]]]],[11,"clone",E,E,68,[[["self"]],[R[625]]]],[11,"clone",E,E,69,[[["self"]],[R[634]]]],[11,"clone",E,E,53,[[["self"]],["anchor"]]],[11,"clone",E,E,54,[[["self"]],[R[675]]]],[11,"clone",E,E,47,[[["self"]],["group"]]],[11,"clone",E,E,55,[[["self"]],[R[671]]]],[11,"clone",E,E,48,[[["self"]],[R[617]]]],[11,"clone",E,E,56,[[["self"]],[R[669]]]],[11,"clone",E,E,57,[[["self"]],[R[670]]]],[11,"clone",R[560],E,70,[[["self"]],[R[579]]]],[11,"clone",E,E,71,[[["self"]],["parser"]]],[11,"cmp",R[562],E,1,[[["self"],["span"]],[R[51]]]],[11,"cmp",E,E,2,[[["self"],[R[583]]],[R[51]]]],[11,"cmp",R[655],E,59,[[[R[616]],["self"]],[R[51]]]],[11,"cmp",R[594],E,67,[[[R[623]],["self"]],[R[51]]]],[11,"cmp",E,E,69,[[[R[634]],["self"]],[R[51]]]],[11,"from",R[560],E,0,[[["error"]],["error"]]],[11,"from",E,E,0,[[["error"]],["error"]]],[11,"drop",R[562],E,24,[[["self"]]]],[11,"drop",E,E,33,[[["self"]]]],[11,"drop",R[594],E,65,[[["self"]]]],[11,R[264],R[562],E,1,[[["self"],["span"]],[[R[52],[R[51]]],[R[51]]]]],[11,R[264],E,E,2,[[["self"],[R[583]]],[[R[52],[R[51]]],[R[51]]]]],[11,R[264],R[655],E,59,[[[R[616]],["self"]],[[R[52],[R[51]]],[R[51]]]]],[11,R[264],R[594],E,67,[[[R[623]],["self"]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,67,[[[R[623]],["self"]],["bool"]]],[11,"le",E,E,67,[[[R[623]],["self"]],["bool"]]],[11,"gt",E,E,67,[[[R[623]],["self"]],["bool"]]],[11,"ge",E,E,67,[[[R[623]],["self"]],["bool"]]],[11,R[264],E,E,69,[[[R[634]],["self"]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,69,[[[R[634]],["self"]],["bool"]]],[11,"le",E,E,69,[[[R[634]],["self"]],["bool"]]],[11,"gt",E,E,69,[[[R[634]],["self"]],["bool"]]],[11,"ge",E,E,69,[[[R[634]],["self"]],["bool"]]],[11,"next",E,E,72,[[["self"]],[[R[52],[R[623]]],[R[623]]]]],[11,"next",E,E,73,[[["self"]],[[R[634]],[R[52],[R[634]]]]]],[11,"as_ref",R[655],E,59,[[["self"]]]],[11,R[79],R[653],E,42,[[],[R[579]]]],[11,R[79],R[657],E,61,[[],[R[606]]]],[11,R[79],R[594],E,67,[[],[R[623]]]],[11,R[79],E,E,69,[[],[R[634]]]],[11,R[79],R[560],E,70,[[],[R[579]]]],[11,R[54],R[655],E,59,[[["self"]],["vec"]]],[11,"fmt",R[653],E,42,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,43,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[654],E,44,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[562],E,46,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,23,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,1,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,2,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,3,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,4,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,24,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,5,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,6,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,7,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,25,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,26,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,27,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,28,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,8,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,29,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,9,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,30,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,10,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,31,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,32,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,11,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,33,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,34,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,12,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,13,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,14,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,35,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,15,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,36,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,16,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,17,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,37,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,38,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,18,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,39,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,19,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,20,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,21,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,22,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,40,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,41,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[560],E,0,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[655],E,58,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,59,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[656],E,60,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[657],E,61,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,62,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[594],E,64,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,49,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,65,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,50,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,51,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,52,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,66,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,72,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,67,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,68,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,73,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,69,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,53,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,54,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,47,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,55,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,48,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,56,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,57,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[560],E,70,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,71,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[562],E,46,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,23,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,24,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[560],E,0,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[594],E,64,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,49,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,65,[[["self"],[R[29]]],[R[12]]]],[11,"deref",R[655],E,59,[[["self"]],["vec"]]],[11,R[30],R[562],E,46,[[["self"]],["str"]]],[11,R[30],R[560],E,0,[[["self"]],["str"]]],[11,R[30],R[594],E,64,[[["self"]],["str"]]],[11,"start",R[562],R[683],45,[[["self"]]]],[11,R[610],E,R[684],45,[[["self"],["ast"]],[R[12]]]],[11,R[611],E,R[685],45,[[["self"],["ast"]],[R[12]]]],[11,R[612],E,R[686],45,[[["self"]],[R[12]]]],[11,R[687],E,R[688],45,[[["self"],[R[581]]],[R[12]]]],[11,R[689],E,R[690],45,[[["self"],[R[581]]],[R[12]]]],[11,R[691],E,R[692],45,[[[R[582]],["self"]],[R[12]]]],[11,R[693],E,R[694],45,[[[R[582]],["self"]],[R[12]]]],[11,R[695],E,R[696],45,[[[R[582]],["self"]],[R[12]]]],[11,"start",R[594],R[697],63,[[["self"]]]],[11,R[610],E,R[698],63,[[["self"],["hir"]],[R[12]]]],[11,R[611],E,R[699],63,[[["self"],["hir"]],[R[12]]]],[11,R[612],E,R[700],63,[[["self"]],[R[12]]]]],"p":[[4,"Error"],[3,"Span"],[3,"Position"],[3,R[701]],[3,"Comment"],[3,R[569]],[3,"Concat"],[3,R[602]],[3,R[702]],[3,R[703]],[3,R[585]],[3,R[704]],[3,R[705]],[3,R[706]],[3,R[707]],[3,R[565]],[3,R[567]],[3,R[708]],[3,"Group"],[3,R[576]],[3,"SetFlags"],[3,"Flags"],[3,R[709]],[4,R[32]],[4,"Ast"],[4,R[710]],[4,R[711]],[4,R[712]],[4,"Class"],[4,R[713]],[4,R[714]],[4,R[715]],[4,R[716]],[4,"ClassSet"],[4,R[717]],[4,R[718]],[4,R[719]],[4,R[595]],[4,R[600]],[4,R[591]],[4,R[720]],[4,"Flag"],[3,R[577]],[3,"Parser"],[3,"Printer"],[8,"Visitor"],[3,"Error"],[3,"Group"],[3,R[567]],[4,R[32]],[4,"HirKind"],[4,R[602]],[4,"Class"],[4,"Anchor"],[4,R[586]],[4,R[591]],[4,R[595]],[4,R[600]],[3,"Literals"],[3,R[602]],[3,"Printer"],[3,R[721]],[3,R[722]],[8,"Visitor"],[3,"Error"],[3,"Hir"],[3,R[585]],[3,R[723]],[3,R[724]],[3,R[725]],[3,R[577]],[3,"Parser"],[3,R[726]],[3,R[727]]]};
searchIndex[R[61]]={"doc":"A scope guard will run a given closure when it goes out of…","i":[[3,R[64],R[61],"`ScopeGuard` is a scope guard that may own a protected…",N,N],[4,"Always",E,"Always run on scope exit.",N,N],[5,"guard",E,"Create a new `ScopeGuard` owning `v` and with deferred…",N,[[["f"],[T]],[["always"],[R[61],["always"]]]]],[8,R[63],E,E,N,N],[10,R[62],E,"Return `true` if the guard’s associated code should run…",0,[[],["bool"]]],[11,"with_strategy",E,"Create a `ScopeGuard` that owns `v` (accessible through…",1,[[["f"],[T]],[R[61]]]],[14,"defer",E,"Macro to create a `ScopeGuard` (always run).",N,N],[14,"defer_on_unwind",E,"Macro to create a `ScopeGuard` (run on unwinding from…",N,N],[11,"from",E,E,1,[[[T]],[T]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,"into",E,E,1,[[],[U]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,"into",E,E,2,[[],[U]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,R[62],E,E,2,[[],["bool"]]],[11,R[54],E,E,1,[[["self"]],[T]]],[11,"fmt",E,E,2,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,1,[[[R[29]],["self"]],[R[12]]]],[11,"deref",E,E,1,[[["self"]],[T]]],[11,"drop",E,E,1,[[["self"]]]]],"p":[[8,R[63]],[3,R[64]],[4,"Always"]]};
searchIndex[R[65]]={"doc":"untrusted.rs: Safe, fast, zero-panic, zero-crashing,…","i":[[3,"Input",R[65],"A wrapper around `&'a [u8]` that helps in writing…",N,N],[3,"Reader",E,"A read-only, forward-only* cursor into the data in an…",N,N],[3,"Mark",E,"An index into the already-parsed input of a `Reader`.",N,N],[3,R[68],E,"The error type used to indicate the end of the input was…",N,N],[5,"read_all_optional",E,R[66],N,[[[R[52],["input"]],["e"],["f"],["input"]],[R[12]]]],[11,"from",E,"Construct a new `Input` for the given input `bytes`.",0,[[],["input"]]],[11,R[69],E,"Returns `true` if the input is empty and false otherwise.",0,[[["self"]],["bool"]]],[11,"iter",E,"Returns an iterator over the input.",0,[[["self"]]]],[11,"len",E,"Returns the length of the `Input`.",0,[[["self"]],[R[9]]]],[11,"read_all",E,R[66],0,[[["e"],["self"],["f"]],[R[12]]]],[11,"read_all_mut",E,"Like `read_all`, except taking an `FnMut`.",0,[[["e"],["self"],["f"]],[R[12]]]],[11,"as_slice_less_safe",E,"Access the input as a slice so it can be processed by…",0,[[["self"]]]],[11,"new",E,"Construct a new Reader for the given input. Use…",1,[[["input"]],["reader"]]],[11,"at_end",E,"Returns `true` if the reader is at the end of the input,…",1,[[["self"]],["bool"]]],[11,"get_input_between_marks",E,"Returns an `Input` for already-parsed input that has had…",1,[[["mark"],["self"]],[["input"],[R[67]],[R[12],["input",R[67]]]]]],[11,"mark",E,"Return the current position of the `Reader` for future use…",1,[[["self"]],["mark"]]],[11,"peek",E,"Returns `true` if there is at least one more byte in the…",1,[[["u8"],["self"]],["bool"]]],[11,"read_byte",E,"Reads the next input byte.",1,[[["self"]],[[R[12],["u8",R[67]]],["u8"],[R[67]]]]],[11,"skip",E,"Skips `num_bytes` of the input.",1,[[["self"],[R[9]]],[[R[12],[R[67]]],[R[67]]]]],[11,"skip_and_get_input",E,"Skips `num_bytes` of the input, returning the skipped…",1,[[["self"],[R[9]]],[["input"],[R[67]],[R[12],["input",R[67]]]]]],[11,"skip_to_end",E,"Skips the reader to the end of the input, returning the…",1,[[["self"]],["input"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,"into",E,E,0,[[],[U]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,"into",E,E,1,[[],[U]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,"into",E,E,2,[[],[U]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,"into",E,E,3,[[],[U]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"eq",E,E,0,[[["input"],["self"]],["bool"]]],[11,"eq",E,E,0,[[["self"]],["bool"]]],[11,"eq",E,E,3,[[[R[67]],["self"]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,1,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,3,[[["self"],[R[29]]],[R[12]]]],[11,"clone",E,E,0,[[["self"]],["input"]]],[11,"clone",E,E,3,[[["self"]],[R[67]]]]],"p":[[3,"Input"],[3,"Reader"],[3,"Mark"],[3,R[68]]]};
searchIndex[R[728]]={"doc":"A framework for Rust wrappers over C APIs.","i":[[3,"Opaque",R[728],R[729],N,N],[8,R[247],E,R[730],N,N],[16,"CType",E,R[245],0,N],[16,"Ref",E,R[731],0,N],[10,R[732],E,R[733],0,[[],["self"]]],[10,"as_ptr",E,R[246],0,[[["self"]]]],[8,R[248],E,R[734],N,N],[16,"CType",E,R[245],1,N],[11,R[732],E,R[735],1,[[],["self"]]],[11,R[736],E,R[737],1,[[],["self"]]],[11,"as_ptr",E,R[246],1,[[["self"]]]],[14,"foreign_type",E,"A macro to easily define wrappers for foreign types.",N,N],[11,"from",E,E,2,[[[T]],[T]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,"into",E,E,2,[[],[U]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]]],"p":[[8,R[247]],[8,R[248]],[3,"Opaque"]]};
searchIndex[R[789]]={"doc":"A wrapper around the procedural macro API of the…","i":[[3,R[799],R[789],"An abstract stream of tokens, or more concretely a…",N,N],[3,"LexError",E,"Error returned from `TokenStream::from_str`.",N,N],[3,"Span",E,"A region of source code, along with macro expansion…",N,N],[3,"Group",E,"A delimited token stream.",N,N],[3,"Punct",E,"An `Punct` is an single punctuation character like `+`,…",N,N],[3,"Ident",E,R[3276],N,N],[3,R[602],E,"A literal string (`\"hello\"`), byte string (`b\"hello\"`),…",N,N],[4,R[797],E,"A single token or a delimited sequence of token trees…",N,N],[13,"Group",E,"A token stream surrounded by bracket delimiters.",0,N],[13,"Ident",E,"An identifier.",0,N],[13,"Punct",E,"A single punctuation character (`+`, `,`, `$`, etc.).",0,N],[13,R[602],E,"A literal character (`'a'`), string (`\"hello\"`), number…",0,N],[4,R[798],E,"Describes how a sequence of token trees is delimited.",N,N],[13,"Parenthesis",E,"`( ... )`",1,N],[13,"Brace",E,"`{ ... }`",1,N],[13,"Bracket",E,"`[ ... ]`",1,N],[13,"None",E,"`Ø ... Ø`",1,N],[4,"Spacing",E,"Whether an `Punct` is followed immediately by another…",N,N],[13,"Alone",E,"E.g. `+` is `Alone` in `+ =`, `+ident` or `+()`.",2,N],[13,"Joint",E,"E.g. `+` is `Joint` in `+=` or `'#`.",2,N],[0,R[3277],E,"Public implementation details for the `TokenStream` type,…",N,N],[3,R[60],R[795],"An iterator over `TokenStream`'s `TokenTree`s.",N,N],[11,"new",R[789],"Returns an empty `TokenStream` containing no token trees.",3,[[],[R[790]]]],[11,"empty",E,E,3,[[],[R[790]]]],[11,R[69],E,"Checks if this `TokenStream` is empty.",3,[[["self"]],["bool"]]],[11,"call_site",E,"The span of the invocation of the current procedural macro.",4,[[],["span"]]],[11,"unwrap",E,"Convert `proc_macro2::Span` to `proc_macro::Span`.",4,[[],["span"]]],[11,"span",E,"Returns the span of this tree, delegating to the `span`…",0,[[["self"]],["span"]]],[11,R[792],E,"Configures the span for only this token.",0,[[["self"],["span"]]]],[11,"new",E,"Creates a new `Group` with the given delimiter and token…",5,[[[R[791]],[R[790]]],["group"]]],[11,R[791],E,"Returns the delimiter of this `Group`",5,[[["self"]],[R[791]]]],[11,"stream",E,"Returns the `TokenStream` of tokens that are delimited in…",5,[[["self"]],[R[790]]]],[11,"span",E,"Returns the span for the delimiters of this token stream,…",5,[[["self"]],["span"]]],[11,R[792],E,"Configures the span for this `Group`'s delimiters, but not…",5,[[["self"],["span"]]]],[11,"new",E,"Creates a new `Punct` from the given character and spacing.",6,[[["char"],["spacing"]],["punct"]]],[11,"as_char",E,"Returns the value of this punctuation character as `char`.",6,[[["self"]],["char"]]],[11,"spacing",E,"Returns the spacing of this punctuation character,…",6,[[["self"]],["spacing"]]],[11,"span",E,"Returns the span for this punctuation character.",6,[[["self"]],["span"]]],[11,R[792],E,"Configure the span for this punctuation character.",6,[[["self"],["span"]]]],[11,"new",E,R[3278],7,[[["str"],["span"]],["ident"]]],[11,"span",E,R[3279],7,[[["self"]],["span"]]],[11,R[792],E,R[3280],7,[[["self"],["span"]]]],[11,"u8_suffixed",E,R[793],8,[[["u8"]],[R[616]]]],[11,"u16_suffixed",E,R[793],8,[[["u16"]],[R[616]]]],[11,"u32_suffixed",E,R[793],8,[[["u32"]],[R[616]]]],[11,"u64_suffixed",E,R[793],8,[[["u64"]],[R[616]]]],[11,"usize_suffixed",E,R[793],8,[[[R[9]]],[R[616]]]],[11,"i8_suffixed",E,R[793],8,[[["i8"]],[R[616]]]],[11,"i16_suffixed",E,R[793],8,[[["i16"]],[R[616]]]],[11,"i32_suffixed",E,R[793],8,[[["i32"]],[R[616]]]],[11,"i64_suffixed",E,R[793],8,[[["i64"]],[R[616]]]],[11,"isize_suffixed",E,R[793],8,[[["isize"]],[R[616]]]],[11,"u128_suffixed",E,R[793],8,[[["u128"]],[R[616]]]],[11,"i128_suffixed",E,R[793],8,[[["i128"]],[R[616]]]],[11,"u8_unsuffixed",E,R[794],8,[[["u8"]],[R[616]]]],[11,"u16_unsuffixed",E,R[794],8,[[["u16"]],[R[616]]]],[11,"u32_unsuffixed",E,R[794],8,[[["u32"]],[R[616]]]],[11,"u64_unsuffixed",E,R[794],8,[[["u64"]],[R[616]]]],[11,"usize_unsuffixed",E,R[794],8,[[[R[9]]],[R[616]]]],[11,"i8_unsuffixed",E,R[794],8,[[["i8"]],[R[616]]]],[11,"i16_unsuffixed",E,R[794],8,[[["i16"]],[R[616]]]],[11,"i32_unsuffixed",E,R[794],8,[[["i32"]],[R[616]]]],[11,"i64_unsuffixed",E,R[794],8,[[["i64"]],[R[616]]]],[11,"isize_unsuffixed",E,R[794],8,[[["isize"]],[R[616]]]],[11,"u128_unsuffixed",E,R[794],8,[[["u128"]],[R[616]]]],[11,"i128_unsuffixed",E,R[794],8,[[["i128"]],[R[616]]]],[11,"f64_unsuffixed",E,E,8,[[["f64"]],[R[616]]]],[11,"f64_suffixed",E,E,8,[[["f64"]],[R[616]]]],[11,"f32_unsuffixed",E,"Creates a new unsuffixed floating-point literal.",8,[[["f32"]],[R[616]]]],[11,"f32_suffixed",E,E,8,[[["f32"]],[R[616]]]],[11,"string",E,E,8,[[["str"]],[R[616]]]],[11,"character",E,E,8,[[["char"]],[R[616]]]],[11,"byte_string",E,E,8,[[],[R[616]]]],[11,"span",E,E,8,[[["self"]],["span"]]],[11,R[792],E,E,8,[[["self"],["span"]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[48],E,E,3,[[],["i"]]],[11,"into",E,E,3,[[],[U]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[17],E,E,3,[[[T],["self"]]]],[11,R[170],E,E,3,[[["self"]],["string"]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[11],E,E,9,[[[U]],[R[12]]]],[11,R[39],E,E,9,[[["self"]],[T]]],[11,R[13],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[],[R[12]]]],[11,R[18],E,E,9,[[["self"]],[R[40]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[16],E,E,4,[[["self"]],[T]]],[11,R[17],E,E,4,[[[T],["self"]]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[16],E,E,5,[[["self"]],[T]]],[11,R[17],E,E,5,[[[T],["self"]]]],[11,R[170],E,E,5,[[["self"]],["string"]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,R[18],E,E,5,[[["self"]],[R[40]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[16],E,E,6,[[["self"]],[T]]],[11,R[17],E,E,6,[[[T],["self"]]]],[11,R[170],E,E,6,[[["self"]],["string"]]],[11,R[11],E,E,6,[[[U]],[R[12]]]],[11,R[39],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[],[R[12]]]],[11,R[18],E,E,6,[[["self"]],[R[40]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[16],E,E,7,[[["self"]],[T]]],[11,R[17],E,E,7,[[[T],["self"]]]],[11,R[170],E,E,7,[[["self"]],["string"]]],[11,R[11],E,E,7,[[[U]],[R[12]]]],[11,R[39],E,E,7,[[["self"]],[T]]],[11,R[13],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[],[R[12]]]],[11,R[18],E,E,7,[[["self"]],[R[40]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[16],E,E,8,[[["self"]],[T]]],[11,R[17],E,E,8,[[[T],["self"]]]],[11,R[170],E,E,8,[[["self"]],["string"]]],[11,R[11],E,E,8,[[[U]],[R[12]]]],[11,R[39],E,E,8,[[["self"]],[T]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[],[R[12]]]],[11,R[18],E,E,8,[[["self"]],[R[40]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[[T],["self"]]]],[11,R[170],E,E,0,[[["self"]],["string"]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,[[[T],["self"]]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[17],E,E,2,[[[T],["self"]]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[R[40]]]],[11,"from",R[795],E,10,[[[T]],[T]]],[11,R[48],E,E,10,[[],["i"]]],[11,"into",E,E,10,[[],[U]]],[11,R[11],E,E,10,[[[U]],[R[12]]]],[11,R[39],E,E,10,[[["self"]],[T]]],[11,R[13],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[],[R[12]]]],[11,R[18],E,E,10,[[["self"]],[R[40]]]],[11,"eq",R[789],E,1,[[[R[791]],["self"]],["bool"]]],[11,"eq",E,E,2,[[["self"],["spacing"]],["bool"]]],[11,"eq",E,E,7,[[["ident"],["self"]],["bool"]]],[11,"eq",E,E,7,[[[T],["self"]],["bool"]]],[11,"clone",E,E,3,[[["self"]],[R[790]]]],[11,"clone",E,E,4,[[["self"]],["span"]]],[11,"clone",E,E,0,[[["self"]],[R[796]]]],[11,"clone",E,E,5,[[["self"]],["group"]]],[11,"clone",E,E,1,[[["self"]],[R[791]]]],[11,"clone",E,E,6,[[["self"]],["punct"]]],[11,"clone",E,E,2,[[["self"]],["spacing"]]],[11,"clone",E,E,7,[[["self"]],["ident"]]],[11,"clone",E,E,8,[[["self"]],[R[616]]]],[11,"cmp",E,E,7,[[["ident"],["self"]],[R[51]]]],[11,"from",E,E,4,[[["span"]],["span"]]],[11,"from",E,E,3,[[[R[790]]],[R[790]]]],[11,"from",E,E,0,[[["group"]],[R[796]]]],[11,"from",E,E,0,[[["ident"]],[R[796]]]],[11,"from",E,E,0,[[["punct"]],[R[796]]]],[11,"from",E,E,0,[[[R[616]]],[R[796]]]],[11,R[48],E,E,3,[[],[R[800]]]],[11,"extend",E,E,3,[[["self"],[R[50]]]]],[11,"extend",E,E,3,[[["self"],[R[50]]]]],[11,R[264],E,E,7,[[["ident"],["self"]],[[R[52],[R[51]]],[R[51]]]]],[11,"next",R[795],E,10,[[["self"]],[[R[796]],[R[52],[R[796]]]]]],[11,R[79],R[789],E,3,[[],["self"]]],[11,R[407],E,E,3,[[["str"]],[["lexerror"],[R[12],[R[790],"lexerror"]],[R[790]]]]],[11,"fmt",E,E,3,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,9,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,4,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,1,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,5,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,2,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,6,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,7,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,8,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[795],E,10,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",R[789],E,3,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,5,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,6,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,7,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,8,[[["self"],[R[29]]],[R[12]]]],[11,"hash",E,E,7,[[["h"],["self"]]]],[11,R[187],E,E,3,[[[R[50]]],["self"]]],[11,R[187],E,E,3,[[[R[50]]],["self"]]]],"p":[[4,R[797]],[4,R[798]],[4,"Spacing"],[3,R[799]],[3,"Span"],[3,"Group"],[3,"Punct"],[3,"Ident"],[3,R[602]],[3,"LexError"],[3,R[60]]]};
searchIndex[R[805]]={"doc":"arrayvec provides the types `ArrayVec` and `ArrayString`:…","i":[[3,R[814],R[805],"A string with a fixed capacity.",N,N],[3,R[815],E,"Error value indicating insufficient capacity",N,N],[3,"ArrayVec",E,"A vector with a fixed capacity.",N,N],[3,R[60],E,"By-value iterator for `ArrayVec`.",N,N],[3,"Drain",E,"A draining iterator for `ArrayVec`.",N,N],[11,"new",E,"Create a new empty `ArrayString`.",0,[[],[R[810]]]],[11,"from",E,"Create a new `ArrayString` from a `str`.",0,[[["str"]],[[R[801],["str"]],[R[12],[R[801]]]]]],[11,"from_byte_string",E,"Create a new `ArrayString` from a byte string literal.",0,[[["a"]],[[R[802]],[R[12],[R[802]]]]]],[11,R[74],E,"Return the capacity of the `ArrayString`.",0,[[["self"]],[R[9]]]],[11,"is_full",E,"Return if the `ArrayString` is completely filled.",0,[[["self"]],["bool"]]],[11,"push",E,R[803],0,[[["char"],["self"]]]],[11,"try_push",E,R[803],0,[[["char"],["self"]],[[R[801],["char"]],[R[12],[R[801]]]]]],[11,"push_str",E,R[804],0,[[["str"],["self"]]]],[11,"try_push_str",E,R[804],0,[[["str"],["self"]],[[R[801],["str"]],[R[12],[R[801]]]]]],[11,"pop",E,"Removes the last character from the string and returns it.",0,[[["self"]],[["char"],[R[52],["char"]]]]],[11,R[817],E,"Shortens this `ArrayString` to the specified length.",0,[[["self"],[R[9]]]]],[11,"remove",E,"Removes a `char` from this `ArrayString` at a byte…",0,[[["self"],[R[9]]],["char"]]],[11,"clear",E,"Make the string empty.",0,[[["self"]]]],[11,"set_len",E,"Set the strings’s length.",0,[[["self"],[R[9]]]]],[11,"as_str",E,"Return a string slice of the whole `ArrayString`.",0,[[["self"]],["str"]]],[11,"new",E,"Create a new `CapacityError` from `element`.",1,[[[T]],[R[801]]]],[11,"element",E,"Extract the overflowing element",1,[[],[T]]],[11,"simplify",E,"Convert into a `CapacityError` that does not carry an…",1,[[],[R[801]]]],[8,"Array",E,"Trait for fixed size arrays.",N,N],[16,"Item",E,"The array’s element type",2,N],[8,R[816],E,"`RangeArgument` is implemented by Rust's built-in range…",N,N],[11,"start",E,R[812],3,[[["self"]],[[R[52],[R[9]]],[R[9]]]]],[11,"end",E,R[813],3,[[["self"]],[[R[52],[R[9]]],[R[9]]]]],[11,"new",E,"Create a new empty `ArrayVec`.",4,[[],[R[805]]]],[11,"len",E,"Return the number of elements in the `ArrayVec`.",4,[[["self"]],[R[9]]]],[11,R[74],E,"Return the capacity of the `ArrayVec`.",4,[[["self"]],[R[9]]]],[11,"is_full",E,"Return if the `ArrayVec` is completely filled.",4,[[["self"]],["bool"]]],[11,"push",E,R[806],4,[[["self"]]]],[11,"try_push",E,R[806],4,[[["self"]],[[R[12],[R[801]]],[R[801]]]]],[11,"push_unchecked",E,"Push `element` to the end of the vector without checking…",4,[[["self"]]]],[11,"insert",E,R[807],4,[[["self"],[R[9]]]]],[11,"try_insert",E,R[807],4,[[["self"],[R[9]]],[[R[12],[R[801]]],[R[801]]]]],[11,"pop",E,"Remove the last element in the vector and return it.",4,[[["self"]],[R[52]]]],[11,R[820],E,R[808],4,[[["self"],[R[9]]]]],[11,"swap_pop",E,R[808],4,[[["self"],[R[9]]],[R[52]]]],[11,"remove",E,R[809],4,[[["self"],[R[9]]]]],[11,"pop_at",E,R[809],4,[[["self"],[R[9]]],[R[52]]]],[11,R[817],E,"Shortens the vector, keeping the first `len` elements and…",4,[[["self"],[R[9]]]]],[11,"clear",E,"Remove all elements in the vector.",4,[[["self"]]]],[11,"retain",E,R[263],4,[[["self"],["f"]]]],[11,"set_len",E,"Set the vector’s length without dropping or moving out…",4,[[["self"],[R[9]]]]],[11,"drain",E,"Create a draining iterator that removes the specified…",4,[[["self"],["rangeargument"]],["drain"]]],[11,R[46],E,"Return the inner fixed size array, if it is full to its…",4,[[],[R[12]]]],[11,"dispose",E,"Dispose of `self` without the overwriting that is needed…",4,[[]]],[11,R[818],E,"Return a slice containing all elements of the vector.",4,[[["self"]]]],[11,R[819],E,"Return a mutable slice containing all elements of the…",4,[[["self"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,"into",E,E,0,[[],[U]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,"into",E,E,1,[[],[U]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[48],E,E,4,[[],["i"]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,"into",E,E,4,[[],[U]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[48],E,E,5,[[],["i"]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,"into",E,E,5,[[],[U]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[18],E,E,5,[[["self"]],[R[40]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[48],E,E,6,[[],["i"]]],[11,R[11],E,E,6,[[[U]],[R[12]]]],[11,R[14],E,E,6,[[],[R[12]]]],[11,"into",E,E,6,[[],[U]]],[11,R[39],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[18],E,E,6,[[["self"]],[R[40]]]],[11,"eq",E,E,0,[[["self"]],["bool"]]],[11,"eq",E,E,0,[[["str"],["self"]],["bool"]]],[11,"eq",E,E,1,[[[R[801]],["self"]],["bool"]]],[11,"ne",E,E,1,[[[R[801]],["self"]],["bool"]]],[11,"eq",E,E,4,[[["self"]],["bool"]]],[11,"eq",E,E,4,[[["self"]],["bool"]]],[11,"cmp",E,E,0,[[["self"]],[R[51]]]],[11,"cmp",E,E,1,[[[R[801]],["self"]],[R[51]]]],[11,"cmp",E,E,4,[[[R[805]],["self"]],[R[51]]]],[11,R[264],E,E,0,[[["self"]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,0,[[["self"]],["bool"]]],[11,"le",E,E,0,[[["self"]],["bool"]]],[11,"gt",E,E,0,[[["self"]],["bool"]]],[11,"ge",E,E,0,[[["self"]],["bool"]]],[11,R[264],E,E,0,[[["str"],["self"]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,0,[[["str"],["self"]],["bool"]]],[11,"le",E,E,0,[[["str"],["self"]],["bool"]]],[11,"gt",E,E,0,[[["str"],["self"]],["bool"]]],[11,"ge",E,E,0,[[["str"],["self"]],["bool"]]],[11,R[264],E,E,1,[[[R[801]],["self"]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,1,[[[R[801]],["self"]],["bool"]]],[11,"le",E,E,1,[[[R[801]],["self"]],["bool"]]],[11,"gt",E,E,1,[[[R[801]],["self"]],["bool"]]],[11,"ge",E,E,1,[[[R[801]],["self"]],["bool"]]],[11,R[264],E,E,4,[[[R[805]],["self"]],[[R[51]],[R[52],[R[51]]]]]],[11,"lt",E,E,4,[[["self"]],["bool"]]],[11,"le",E,E,4,[[["self"]],["bool"]]],[11,"ge",E,E,4,[[["self"]],["bool"]]],[11,"gt",E,E,4,[[["self"]],["bool"]]],[11,R[54],E,E,0,[[["self"]],["str"]]],[11,R[54],E,E,4,[[["self"]]]],[11,"from",E,E,4,[[["a"]],["self"]]],[11,"fmt",E,E,0,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,1,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,5,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,4,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,0,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,1,[[[R[29]],["self"]],[R[12]]]],[11,"deref",E,E,0,[[["self"]],["str"]]],[11,"deref",E,E,4,[[["self"]]]],[11,"drop",E,E,4,[[["self"]]]],[11,"drop",E,E,5,[[["self"]]]],[11,"drop",E,E,6,[[["self"]]]],[11,"hash",E,E,0,[[["h"],["self"]]]],[11,"hash",E,E,4,[[["h"],["self"]]]],[11,R[48],E,E,4,[[],[R[800]]]],[11,R[49],E,E,5,[[["self"]],[R[52]]]],[11,R[49],E,E,6,[[["self"]],[R[52]]]],[11,"extend",E,E,4,[[[R[50]],["self"]]]],[11,"next",E,E,5,[[["self"]],[R[52]]]],[11,R[53],E,E,5,[[["self"]]]],[11,"next",E,E,6,[[["self"]],[R[52]]]],[11,R[53],E,E,6,[[["self"]]]],[11,R[187],E,E,4,[[[R[50]]],["self"]]],[11,"write_char",E,E,0,[[["char"],["self"]],[R[12]]]],[11,"write_str",E,E,0,[[["str"],["self"]],[R[12]]]],[11,"clone",E,E,0,[[["self"]],[R[810]]]],[11,R[811],E,E,0,[[["self"],["self"]]]],[11,"clone",E,E,1,[[["self"]],[R[801]]]],[11,"clone",E,E,5,[[["self"]],[R[800]]]],[11,"clone",E,E,4,[[["self"]],["self"]]],[11,R[811],E,E,4,[[["self"],["self"]]]],[11,"as_mut",E,E,4,[[["self"]]]],[11,"as_ref",E,E,0,[[["self"]],["str"]]],[11,"as_ref",E,E,4,[[["self"]]]],[11,R[79],E,"Return an empty `ArrayString`",0,[[],[R[810]]]],[11,R[79],E,"Return an empty array",4,[[],[R[805]]]],[11,R[39],E,E,0,[[["self"]],["str"]]],[11,R[39],E,E,4,[[["self"]]]],[11,R[13],E,E,4,[[["self"]]]],[11,"start",E,R[812],3,[[["self"]],[[R[52],[R[9]]],[R[9]]]]],[11,"end",E,R[813],3,[[["self"]],[[R[52],[R[9]]],[R[9]]]]]],"p":[[3,R[814]],[3,R[815]],[8,"Array"],[8,R[816]],[3,"ArrayVec"],[3,R[60]],[3,"Drain"]]};
searchIndex[R[80]]={"doc":"This crate provides a `LazyCell` struct which acts as a…","i":[[3,R[87],R[80],"A lazily filled `Cell`, with mutable contents.",N,N],[3,R[88],E,"A lazily filled and thread-safe `Cell`, with frozen…",N,N],[11,"new",E,"Creates a new, empty, `LazyCell`.",0,[[],[R[80]]]],[11,"fill",E,R[81],0,[[["self"],[T]],[R[12]]]],[11,"replace",E,R[81],0,[[["self"],[T]],[R[52]]]],[11,"filled",E,R[83],0,[[["self"]],["bool"]]],[11,R[39],E,R[82],0,[[["self"]],[[T],[R[52]]]]],[11,R[13],E,"Borrows the contents of this lazy cell mutably for the…",0,[[["self"]],[[R[52]],[T]]]],[11,"borrow_with",E,R[82],0,[[["fnonce"],["self"]],[T]]],[11,"borrow_mut_with",E,"Borrows the contents of this `LazyCell` mutably for the…",0,[[["self"],["fnonce"]],[T]]],[11,"try_borrow_with",E,"Same as `borrow_with`, but allows the initializing…",0,[[["self"],["f"]],[[T],[R[12]]]]],[11,"try_borrow_mut_with",E,"Same as `borrow_mut_with`, but allows the initializing…",0,[[["self"],["f"]],[[T],[R[12]]]]],[11,R[46],E,R[84],0,[[],[R[52]]]],[11,"get",E,R[85],0,[[["self"]],[R[52]]]],[18,"NONE",E,"An empty `AtomicLazyCell`.",1,N],[11,"new",E,"Creates a new, empty, `AtomicLazyCell`.",1,[[],[R[86]]]],[11,"fill",E,R[81],1,[[["self"],[T]],[R[12]]]],[11,"replace",E,R[81],1,[[["self"],[T]],[R[52]]]],[11,"filled",E,R[83],1,[[["self"]],["bool"]]],[11,R[39],E,R[82],1,[[["self"]],[[T],[R[52]]]]],[11,R[46],E,R[84],1,[[],[R[52]]]],[11,"get",E,R[85],1,[[["self"]],[R[52]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,"into",E,E,0,[[],[U]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[40]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,"into",E,E,1,[[],[U]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[["self"]],[R[40]]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,1,[[["self"],[R[29]]],[R[12]]]],[11,"clone",E,"Create a clone of this `LazyCell`",0,[[["self"]],[R[80]]]],[11,"clone",E,"Create a clone of this `AtomicLazyCell`",1,[[["self"]],[R[86]]]],[11,R[79],E,E,0,[[],[R[80]]]],[11,R[79],E,E,1,[[],[R[86]]]]],"p":[[3,R[87]],[3,R[88]]]};
searchIndex[R[821]]={"doc":"This crate provides convenience methods for encoding and…","i":[[4,R[935],R[821],R[2662],N,N],[4,R[936],E,R[2663],N,N],[6,"BE",E,"A type alias for [`BigEndian`].",N,N],[6,"LE",E,"A type alias for [`LittleEndian`].",N,N],[6,"NetworkEndian",E,"Defines network byte order serialization.",N,N],[6,"NativeEndian",E,"Defines system native-endian serialization.",N,N],[8,R[932],E,"Extends [`Read`] with methods for reading numbers. (For…",N,N],[11,"read_u8",E,R[884],0,[[["self"]],[[R[12],["u8"]],["u8"]]]],[11,"read_i8",E,R[885],0,[[["self"]],[[R[12],["i8"]],["i8"]]]],[11,R[869],E,R[886],0,[[["self"]],[["u16"],[R[12],["u16"]]]]],[11,R[887],E,R[888],0,[[["self"]],[["i16"],[R[12],["i16"]]]]],[11,R[889],E,R[890],0,[[["self"]],[["u32"],[R[12],["u32"]]]]],[11,R[891],E,R[892],0,[[["self"]],[[R[12],["i32"]],["i32"]]]],[11,R[870],E,R[893],0,[[["self"]],[["u32"],[R[12],["u32"]]]]],[11,R[894],E,R[895],0,[[["self"]],[[R[12],["i32"]],["i32"]]]],[11,R[896],E,R[897],0,[[["self"]],[["u64"],[R[12],["u64"]]]]],[11,R[898],E,R[899],0,[[["self"]],[[R[12],["i64"]],["i64"]]]],[11,R[871],E,R[900],0,[[["self"]],[["u64"],[R[12],["u64"]]]]],[11,R[901],E,R[902],0,[[["self"]],[[R[12],["i64"]],["i64"]]]],[11,R[827],E,R[903],0,[[["self"]],[[R[12],["u128"]],["u128"]]]],[11,R[840],E,R[904],0,[[["self"]],[["i128"],[R[12],["i128"]]]]],[11,R[828],E,R[822],0,[[["self"],[R[9]]],[["u64"],[R[12],["u64"]]]]],[11,R[905],E,R[823],0,[[["self"],[R[9]]],[[R[12],["i64"]],["i64"]]]],[11,R[829],E,R[822],0,[[["self"],[R[9]]],[[R[12],["u128"]],["u128"]]]],[11,R[841],E,R[823],0,[[["self"],[R[9]]],[["i128"],[R[12],["i128"]]]]],[11,R[906],E,R[843],0,[[["self"]],[[R[12],["f32"]],["f32"]]]],[11,R[907],E,R[844],0,[[["self"]],[[R[12],["f64"]],["f64"]]]],[11,R[858],E,R[908],0,[[["self"]],[R[12]]]],[11,R[350],E,R[909],0,[[["self"]],[R[12]]]],[11,R[353],E,R[910],0,[[["self"]],[R[12]]]],[11,R[859],E,R[911],0,[[["self"]],[R[12]]]],[11,R[860],E,R[912],0,[[["self"]],[R[12]]]],[11,R[861],E,R[913],0,[[["self"]],[R[12]]]],[11,R[862],E,R[914],0,[[["self"]],[R[12]]]],[11,R[863],E,R[915],0,[[["self"]],[R[12]]]],[11,R[864],E,R[916],0,[[["self"]],[R[12]]]],[11,R[865],E,R[824],0,[[["self"]],[R[12]]]],[11,R[866],E,R[917],0,[[["self"]],[R[12]]]],[11,R[868],E,R[824],0,[[["self"]],[R[12]]]],[8,R[933],E,"Extends [`Write`] with methods for writing numbers. (For…",N,N],[11,"write_u8",E,R[918],1,[[["self"],["u8"]],[R[12]]]],[11,"write_i8",E,R[919],1,[[["self"],["i8"]],[R[12]]]],[11,R[831],E,R[920],1,[[["self"],["u16"]],[R[12]]]],[11,R[845],E,R[921],1,[[["self"],["i16"]],[R[12]]]],[11,R[832],E,R[922],1,[[["u32"],["self"]],[R[12]]]],[11,R[846],E,R[923],1,[[["i32"],["self"]],[R[12]]]],[11,R[833],E,R[924],1,[[["u32"],["self"]],[R[12]]]],[11,R[847],E,R[925],1,[[["i32"],["self"]],[R[12]]]],[11,R[834],E,R[926],1,[[["self"],["u64"]],[R[12]]]],[11,R[848],E,R[927],1,[[["self"],["i64"]],[R[12]]]],[11,R[835],E,R[928],1,[[["self"],["u64"]],[R[12]]]],[11,R[849],E,R[929],1,[[["self"],["i64"]],[R[12]]]],[11,R[836],E,R[930],1,[[["self"],["u128"]],[R[12]]]],[11,R[850],E,R[931],1,[[["i128"],["self"]],[R[12]]]],[11,R[837],E,R[825],1,[[["self"],["u64"],[R[9]]],[R[12]]]],[11,R[851],E,R[826],1,[[["self"],["i64"],[R[9]]],[R[12]]]],[11,R[838],E,R[825],1,[[["self"],["u128"],[R[9]]],[R[12]]]],[11,R[852],E,R[826],1,[[["i128"],["self"],[R[9]]],[R[12]]]],[11,R[854],E,R[855],1,[[["self"],["f32"]],[R[12]]]],[11,R[856],E,R[857],1,[[["self"],["f64"]],[R[12]]]],[8,R[934],E,R[2664],N,N],[10,R[869],E,R[2665],2,[[],["u16"]]],[11,R[889],E,R[2666],2,[[],["u32"]]],[10,R[870],E,R[2667],2,[[],["u32"]]],[11,R[896],E,R[2668],2,[[],["u64"]]],[10,R[871],E,R[2669],2,[[],["u64"]]],[10,R[827],E,R[2670],2,[[],["u128"]]],[10,R[828],E,R[830],2,[[[R[9]]],["u64"]]],[10,R[829],E,R[830],2,[[[R[9]]],["u128"]]],[10,R[831],E,R[2671],2,[[["u16"]]]],[11,R[832],E,R[2672],2,[[["u32"]]]],[10,R[833],E,R[2673],2,[[["u32"]]]],[11,R[834],E,R[2674],2,[[["u64"]]]],[10,R[835],E,R[2675],2,[[["u64"]]]],[10,R[836],E,R[2676],2,[[["u128"]]]],[10,R[837],E,R[839],2,[[["u64"],[R[9]]]]],[10,R[838],E,R[839],2,[[["u128"],[R[9]]]]],[11,R[887],E,R[2677],2,[[],["i16"]]],[11,R[891],E,R[2678],2,[[],["i32"]]],[11,R[894],E,R[2679],2,[[],["i32"]]],[11,R[898],E,R[2680],2,[[],["i64"]]],[11,R[901],E,R[2681],2,[[],["i64"]]],[11,R[840],E,R[2682],2,[[],["i128"]]],[11,R[905],E,R[842],2,[[[R[9]]],["i64"]]],[11,R[841],E,R[842],2,[[[R[9]]],["i128"]]],[11,R[906],E,R[843],2,[[],["f32"]]],[11,R[907],E,R[844],2,[[],["f64"]]],[11,R[845],E,R[2683],2,[[["i16"]]]],[11,R[846],E,R[2684],2,[[["i32"]]]],[11,R[847],E,R[2685],2,[[["i32"]]]],[11,R[848],E,R[2686],2,[[["i64"]]]],[11,R[849],E,R[2687],2,[[["i64"]]]],[11,R[850],E,R[2688],2,[[["i128"]]]],[11,R[851],E,R[853],2,[[["i64"],[R[9]]]]],[11,R[852],E,R[853],2,[[["i128"],[R[9]]]]],[11,R[854],E,R[855],2,[[["f32"]]]],[11,R[856],E,R[857],2,[[["f64"]]]],[10,R[858],E,R[2689],2,[[]]],[10,R[350],E,R[2690],2,[[]]],[10,R[353],E,R[2691],2,[[]]],[10,R[859],E,R[2692],2,[[]]],[11,R[860],E,R[2693],2,[[]]],[11,R[861],E,R[2694],2,[[]]],[11,R[862],E,R[2695],2,[[]]],[11,R[863],E,R[2696],2,[[]]],[11,R[864],E,R[867],2,[[]]],[11,R[865],E,R[824],2,[[]]],[11,R[866],E,R[867],2,[[]]],[11,R[868],E,R[824],2,[[]]],[10,R[872],E,R[2697],2,[[]]],[10,R[873],E,R[2698],2,[[]]],[10,R[874],E,R[2699],2,[[]]],[10,R[875],E,R[2700],2,[[]]],[11,R[2701],E,R[2702],2,[[]]],[11,R[2703],E,R[2704],2,[[]]],[11,R[2705],E,R[2706],2,[[]]],[11,R[2707],E,R[2708],2,[[]]],[11,R[2709],E,R[2710],2,[[]]],[11,R[2711],E,R[2712],2,[[]]],[10,R[876],E,R[2713],2,[[]]],[10,R[877],E,R[2714],2,[[]]],[10,R[878],E,R[2715],2,[[]]],[10,R[879],E,R[2716],2,[[]]],[11,R[2717],E,R[2718],2,[[]]],[11,R[2719],E,R[2720],2,[[]]],[11,R[2721],E,R[2722],2,[[]]],[11,R[2723],E,R[2724],2,[[]]],[10,R[880],E,R[2725],2,[[]]],[10,R[881],E,R[2726],2,[[]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[17],E,E,3,[[[T],["self"]]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[R[40]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[16],E,E,4,[[["self"]],[T]]],[11,R[17],E,E,4,[[[T],["self"]]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,R[18],E,E,4,[[["self"]],[R[40]]]],[11,R[869],E,E,3,[[],["u16"]]],[11,R[870],E,E,3,[[],["u32"]]],[11,R[871],E,E,3,[[],["u64"]]],[11,R[827],E,E,3,[[],["u128"]]],[11,R[828],E,E,3,[[[R[9]]],["u64"]]],[11,R[829],E,E,3,[[[R[9]]],["u128"]]],[11,R[831],E,E,3,[[["u16"]]]],[11,R[833],E,E,3,[[["u32"]]]],[11,R[835],E,E,3,[[["u64"]]]],[11,R[836],E,E,3,[[["u128"]]]],[11,R[837],E,E,3,[[["u64"],[R[9]]]]],[11,R[838],E,E,3,[[["u128"],[R[9]]]]],[11,R[858],E,E,3,[[]]],[11,R[350],E,E,3,[[]]],[11,R[353],E,E,3,[[]]],[11,R[859],E,E,3,[[]]],[11,R[872],E,E,3,[[]]],[11,R[873],E,E,3,[[]]],[11,R[874],E,E,3,[[]]],[11,R[875],E,E,3,[[]]],[11,R[876],E,E,3,[[]]],[11,R[877],E,E,3,[[]]],[11,R[878],E,E,3,[[]]],[11,R[879],E,E,3,[[]]],[11,R[880],E,E,3,[[]]],[11,R[881],E,E,3,[[]]],[11,R[869],E,E,4,[[],["u16"]]],[11,R[870],E,E,4,[[],["u32"]]],[11,R[871],E,E,4,[[],["u64"]]],[11,R[827],E,E,4,[[],["u128"]]],[11,R[828],E,E,4,[[[R[9]]],["u64"]]],[11,R[829],E,E,4,[[[R[9]]],["u128"]]],[11,R[831],E,E,4,[[["u16"]]]],[11,R[833],E,E,4,[[["u32"]]]],[11,R[835],E,E,4,[[["u64"]]]],[11,R[836],E,E,4,[[["u128"]]]],[11,R[837],E,E,4,[[["u64"],[R[9]]]]],[11,R[838],E,E,4,[[["u128"],[R[9]]]]],[11,R[858],E,E,4,[[]]],[11,R[350],E,E,4,[[]]],[11,R[353],E,E,4,[[]]],[11,R[859],E,E,4,[[]]],[11,R[872],E,E,4,[[]]],[11,R[873],E,E,4,[[]]],[11,R[874],E,E,4,[[]]],[11,R[875],E,E,4,[[]]],[11,R[876],E,E,4,[[]]],[11,R[877],E,E,4,[[]]],[11,R[878],E,E,4,[[]]],[11,R[879],E,E,4,[[]]],[11,R[880],E,E,4,[[]]],[11,R[881],E,E,4,[[]]],[11,"eq",E,E,3,[[["self"],[R[882]]],["bool"]]],[11,"eq",E,E,4,[[[R[883]],["self"]],["bool"]]],[11,"clone",E,E,3,[[["self"]],[R[882]]]],[11,"clone",E,E,4,[[["self"]],[R[883]]]],[11,"cmp",E,E,3,[[["self"],[R[882]]],[R[51]]]],[11,"cmp",E,E,4,[[[R[883]],["self"]],[R[51]]]],[11,R[264],E,E,3,[[["self"],[R[882]]],[[R[51]],[R[52],[R[51]]]]]],[11,R[264],E,E,4,[[[R[883]],["self"]],[[R[51]],[R[52],[R[51]]]]]],[11,R[79],E,E,3,[[],[R[882]]]],[11,R[79],E,E,4,[[],[R[883]]]],[11,"fmt",E,E,3,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,4,[[[R[29]],["self"]],[R[12]]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,"hash",E,E,4,[[["self"],["__h"]]]],[11,"read_u8",E,R[884],0,[[["self"]],[[R[12],["u8"]],["u8"]]]],[11,"read_i8",E,R[885],0,[[["self"]],[[R[12],["i8"]],["i8"]]]],[11,R[869],E,R[886],0,[[["self"]],[["u16"],[R[12],["u16"]]]]],[11,R[887],E,R[888],0,[[["self"]],[["i16"],[R[12],["i16"]]]]],[11,R[889],E,R[890],0,[[["self"]],[["u32"],[R[12],["u32"]]]]],[11,R[891],E,R[892],0,[[["self"]],[[R[12],["i32"]],["i32"]]]],[11,R[870],E,R[893],0,[[["self"]],[["u32"],[R[12],["u32"]]]]],[11,R[894],E,R[895],0,[[["self"]],[[R[12],["i32"]],["i32"]]]],[11,R[896],E,R[897],0,[[["self"]],[["u64"],[R[12],["u64"]]]]],[11,R[898],E,R[899],0,[[["self"]],[[R[12],["i64"]],["i64"]]]],[11,R[871],E,R[900],0,[[["self"]],[["u64"],[R[12],["u64"]]]]],[11,R[901],E,R[902],0,[[["self"]],[[R[12],["i64"]],["i64"]]]],[11,R[827],E,R[903],0,[[["self"]],[[R[12],["u128"]],["u128"]]]],[11,R[840],E,R[904],0,[[["self"]],[["i128"],[R[12],["i128"]]]]],[11,R[828],E,R[822],0,[[["self"],[R[9]]],[["u64"],[R[12],["u64"]]]]],[11,R[905],E,R[823],0,[[["self"],[R[9]]],[[R[12],["i64"]],["i64"]]]],[11,R[829],E,R[822],0,[[["self"],[R[9]]],[[R[12],["u128"]],["u128"]]]],[11,R[841],E,R[823],0,[[["self"],[R[9]]],[["i128"],[R[12],["i128"]]]]],[11,R[906],E,R[843],0,[[["self"]],[[R[12],["f32"]],["f32"]]]],[11,R[907],E,R[844],0,[[["self"]],[[R[12],["f64"]],["f64"]]]],[11,R[858],E,R[908],0,[[["self"]],[R[12]]]],[11,R[350],E,R[909],0,[[["self"]],[R[12]]]],[11,R[353],E,R[910],0,[[["self"]],[R[12]]]],[11,R[859],E,R[911],0,[[["self"]],[R[12]]]],[11,R[860],E,R[912],0,[[["self"]],[R[12]]]],[11,R[861],E,R[913],0,[[["self"]],[R[12]]]],[11,R[862],E,R[914],0,[[["self"]],[R[12]]]],[11,R[863],E,R[915],0,[[["self"]],[R[12]]]],[11,R[864],E,R[916],0,[[["self"]],[R[12]]]],[11,R[865],E,R[824],0,[[["self"]],[R[12]]]],[11,R[866],E,R[917],0,[[["self"]],[R[12]]]],[11,R[868],E,R[824],0,[[["self"]],[R[12]]]],[11,"write_u8",E,R[918],1,[[["self"],["u8"]],[R[12]]]],[11,"write_i8",E,R[919],1,[[["self"],["i8"]],[R[12]]]],[11,R[831],E,R[920],1,[[["self"],["u16"]],[R[12]]]],[11,R[845],E,R[921],1,[[["self"],["i16"]],[R[12]]]],[11,R[832],E,R[922],1,[[["u32"],["self"]],[R[12]]]],[11,R[846],E,R[923],1,[[["i32"],["self"]],[R[12]]]],[11,R[833],E,R[924],1,[[["u32"],["self"]],[R[12]]]],[11,R[847],E,R[925],1,[[["i32"],["self"]],[R[12]]]],[11,R[834],E,R[926],1,[[["self"],["u64"]],[R[12]]]],[11,R[848],E,R[927],1,[[["self"],["i64"]],[R[12]]]],[11,R[835],E,R[928],1,[[["self"],["u64"]],[R[12]]]],[11,R[849],E,R[929],1,[[["self"],["i64"]],[R[12]]]],[11,R[836],E,R[930],1,[[["self"],["u128"]],[R[12]]]],[11,R[850],E,R[931],1,[[["i128"],["self"]],[R[12]]]],[11,R[837],E,R[825],1,[[["self"],["u64"],[R[9]]],[R[12]]]],[11,R[851],E,R[826],1,[[["self"],["i64"],[R[9]]],[R[12]]]],[11,R[838],E,R[825],1,[[["self"],["u128"],[R[9]]],[R[12]]]],[11,R[852],E,R[826],1,[[["i128"],["self"],[R[9]]],[R[12]]]],[11,R[854],E,R[855],1,[[["self"],["f32"]],[R[12]]]],[11,R[856],E,R[857],1,[[["self"],["f64"]],[R[12]]]]],"p":[[8,R[932]],[8,R[933]],[8,R[934]],[4,R[935]],[4,R[936]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);